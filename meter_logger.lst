gplink-1.2.0 #980 (Oct 25 2013)
Copyright (c) 1998-2013 gputils project
Listing File Generated: 6-23-2014  02:32:36
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.3.0 #8604 (Oct 27 2013) (Mac OS X x86_64)
                                           ; This file was generated Mon Jun 23 02:32:36 2014
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f2550
                                           	radix	dec
                                           	CONFIG	PLLDIV=2
                                           	CONFIG	CPUDIV=OSC1_PLL2
                                           	CONFIG	USBDIV=1
                                           	CONFIG	FOSC=INTOSC_XT
                                           	CONFIG	FCMEN=OFF
                                           	CONFIG	IESO=OFF
                                           	CONFIG	PWRT=OFF
                                           	CONFIG	BOR=OFF
                                           	CONFIG	BORV=3
                                           	CONFIG	VREGEN=OFF
                                           	CONFIG	WDT=OFF
                                           	CONFIG	WDTPS=32768
                                           	CONFIG	CCP2MX=ON
                                           	CONFIG	PBADEN=OFF
                                           	CONFIG	LPT1OSC=OFF
                                           	CONFIG	MCLRE=ON
                                           	CONFIG	STVREN=ON
                                           	CONFIG	LVP=ON
                                           	CONFIG	XINST=OFF
                                           	CONFIG	CP0=OFF
                                           	CONFIG	CP1=OFF
                                           	CONFIG	CP2=OFF
                                           	CONFIG	CP3=OFF
                                           	CONFIG	CPB=OFF
                                           	CONFIG	CPD=OFF
                                           	CONFIG	WRT0=OFF
                                           	CONFIG	WRT1=OFF
                                           	CONFIG	WRT2=OFF
                                           	CONFIG	WRT3=OFF
                                           	CONFIG	WRTC=OFF
                                           	CONFIG	WRTB=OFF
                                           	CONFIG	WRTD=OFF
                                           	CONFIG	EBTR0=OFF
                                           	CONFIG	EBTR1=OFF
                                           	CONFIG	EBTR2=OFF
                                           	CONFIG	EBTR3=OFF
                                           	CONFIG	EBTRB=OFF
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_c
                                           	global	_sleep_ms
                                           	global	_init_system
                                           	global	_get_dev_id
                                           	global	_my_usart_open
                                           	global	_reverse
                                           	global	_testo_valid_err_corr
                                           	global	_testo_ir_enable
                                           	global	_testo_ir_disable
                                           	global	_rs232_8n2_tx_enable
                                           	global	_rs232_8n2_tx_disable
                                           	global	_rs232_8n2_rx_enable
                                           	global	_rs232_8n2_rx_disable
                                           	global	_rs232_8n2_tx_byte
                                           	global	_rs232_7e1_tx_enable
                                           	global	_rs232_7e1_tx_disable
                                           	global	_rs232_7e1_rx_enable
                                           	global	_rs232_7e1_rx_disable
                                           	global	_rs232_7e1_tx_byte
                                           	global	_fsk_tx_enable
                                           	global	_fsk_tx_disable
                                           	global	_fsk_rx_enable
                                           	global	_fsk_rx_disable
                                           	global	_send_fsk_high
                                           	global	_send_fsk_low
                                           	global	_fsk_tx_byte
                                           	global	_fifo_in_use
                                           	global	_fifo_put
                                           	global	_fifo_get
                                           	global	_fifo_snoop
                                           	global	_get_battery_level
                                           	global	_flash_led
                                           	global	__debug
                                           	global	__debug2
                                           	global	_timer_0
                                           	global	_last_timer_0
                                           	global	_timer_1_ms
                                           	global	_timer0_reload
                                           	global	_debug_buffer
                                           	global	_fifo_head
                                           	global	_fifo_tail
                                           	global	_fifo_buffer_0
                                           	global	_fifo_buffer_1
                                           	global	_fifo_buffer_2
                                           	global	_fifo_buffer_3
                                           	global	_codec_type
                                           	global	_led_flash
                                           	global	_testo_ir_proto
                                           	global	_rs232_proto
                                           	global	_fsk_proto
                                           	global	_main
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrput1
                                           	extern	_UFRMLbits
                                           	extern	_UFRMHbits
                                           	extern	_UIRbits
                                           	extern	_UIEbits
                                           	extern	_UEIRbits
                                           	extern	_UEIEbits
                                           	extern	_USTATbits
                                           	extern	_UCONbits
                                           	extern	_UADDRbits
                                           	extern	_UCFGbits
                                           	extern	_UEP0bits
                                           	extern	_UEP1bits
                                           	extern	_UEP2bits
                                           	extern	_UEP3bits
                                           	extern	_UEP4bits
                                           	extern	_UEP5bits
                                           	extern	_UEP6bits
                                           	extern	_UEP7bits
                                           	extern	_UEP8bits
                                           	extern	_UEP9bits
                                           	extern	_UEP10bits
                                           	extern	_UEP11bits
                                           	extern	_UEP12bits
                                           	extern	_UEP13bits
                                           	extern	_UEP14bits
                                           	extern	_UEP15bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_EECON1bits
                                           	extern	_RCSTAbits
                                           	extern	_TXSTAbits
                                           	extern	_T3CONbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_CCP1ASbits
                                           	extern	_ECCP1ASbits
                                           	extern	_CCP1DELbits
                                           	extern	_ECCP1DELbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCTLbits
                                           	extern	_CCP2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_UFRM
                                           	extern	_UFRML
                                           	extern	_UFRMH
                                           	extern	_UIR
                                           	extern	_UIE
                                           	extern	_UEIR
                                           	extern	_UEIE
                                           	extern	_USTAT
                                           	extern	_UCON
                                           	extern	_UADDR
                                           	extern	_UCFG
                                           	extern	_UEP0
                                           	extern	_UEP1
                                           	extern	_UEP2
                                           	extern	_UEP3
                                           	extern	_UEP4
                                           	extern	_UEP5
                                           	extern	_UEP6
                                           	extern	_UEP7
                                           	extern	_UEP8
                                           	extern	_UEP9
                                           	extern	_UEP10
                                           	extern	_UEP11
                                           	extern	_UEP12
                                           	extern	_UEP13
                                           	extern	_UEP14
                                           	extern	_UEP15
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_OSCTUNE
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_RCSTA
                                           	extern	_TXSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_CCP1AS
                                           	extern	_ECCP1AS
                                           	extern	_CCP1DEL
                                           	extern	_ECCP1DEL
                                           	extern	_BAUDCON
                                           	extern	_BAUDCTL
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_sprintf
                                           	extern	_usart_drdy
                                           	extern	_usart_getc
                                           	extern	_usart_putc
                                           	extern	_usart_puts
                                           	extern	_adc_open
                                           	extern	_adc_close
                                           	extern	_adc_conv
                                           	extern	_adc_busy
                                           	extern	_adc_read
                                           	extern	_adc_setchannel
                                           	extern	__mullong
                                           	extern	__divulong
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           r0x0d	res	1
                                           
                                           udata_meter_logger_0	udata
                                           _c	res	1
                                           
                                           udata_meter_logger_1	udata
                                           _timer_1_ms	res	2
                                           
                                           udata_meter_logger_2	udata
                                           _fifo_head	res	2
                                           
                                           udata_meter_logger_3	udata
                                           _fifo_tail	res	2
                                           
                                           udata_meter_logger_4	udata
                                           _debug_buffer	res	128
                                           
                                           udata_meter_logger_5	udata
                                           _main_cmd_1_90	res	1
                                           
                                           udata_meter_logger_6	udata
                                           _main_sub_cmd_1_90	res	1
                                           
                                           udata_meter_logger_7	udata
                                           _timer_0	res	2
                                           
                                           udata_meter_logger_8	udata
                                           _timer0_reload	res	2
                                           
                                           udata_meter_logger_9	udata
                                           _last_timer_0	res	2
                                           
                                           udata_meter_logger_10	udata
                                           _codec_type	res	1
                                           
                                           udata_meter_logger_11	udata
                                           _testo_ir_proto	res	6
                                           
                                           udata_meter_logger_12	udata
                                           _rs232_proto	res	7
                                           
                                           udata_meter_logger_13	udata
                                           _fsk_proto	res	16
                                           
                                           udata_meter_logger_14	udata
                                           _led_flash	res	2
                                           
                                           udata_meter_logger_15	udata
                                           _fifo_buffer_0	res	256
                                           
                                           udata_meter_logger_16	udata
                                           _fifo_buffer_1	res	256
                                           
                                           udata_meter_logger_17	udata
                                           _fifo_buffer_2	res	256
                                           
                                           udata_meter_logger_18	udata
                                           _fifo_buffer_3	res	256
                                           
                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_meter_logger_ivec_0x1_isr_high_prio	code	0X000008
                                           ivec_0x1_isr_high_prio:
000008   ef04     goto    0x2608           	GOTO	_isr_high_prio
00000a   f013
                                           
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_meter_logger_ivec_0x2_isr_low_prio	code	0X000018
                                           ivec_0x2_isr_low_prio:
000018   ef52     goto    0x4aa4           	GOTO	_isr_low_prio
00001a   f025
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_meter_logger__main	code
                                           _main:
                                           ;	.line	124; meter_logger.c	OSCCONbits.SCS = 0x10;
00001c   50d3     movf    0xd3, 0, 0       	MOVF	_OSCCONbits, W
00001e   0bfc     andlw   0xfc             	ANDLW	0xfc
000020   6ed3     movwf   0xd3, 0          	MOVWF	_OSCCONbits
                                           ;	.line	126; meter_logger.c	OSCCONbits.IRCF = 0x7;	// 8 MHz
000022   50d3     movf    0xd3, 0, 0       	MOVF	_OSCCONbits, W
000024   0b8f     andlw   0x8f             	ANDLW	0x8f
000026   0970     iorlw   0x70             	IORLW	0x70
000028   6ed3     movwf   0xd3, 0          	MOVWF	_OSCCONbits
00002a   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	129; meter_logger.c	timer_1_ms = 0;
00002c   6b41     clrf    0x41, 0x1        	CLRF	_timer_1_ms, B
                                           ; removed redundant BANKSEL
00002e   6b42     clrf    0x42, 0x1        	CLRF	(_timer_1_ms + 1), B
000030   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	131; meter_logger.c	fifo_head = 0;
000032   6b43     clrf    0x43, 0x1        	CLRF	_fifo_head, B
                                           ; removed redundant BANKSEL
000034   6b44     clrf    0x44, 0x1        	CLRF	(_fifo_head + 1), B
000036   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	132; meter_logger.c	fifo_tail = 0;
000038   6b45     clrf    0x45, 0x1        	CLRF	_fifo_tail, B
                                           ; removed redundant BANKSEL
00003a   6b46     clrf    0x46, 0x1        	CLRF	(_fifo_tail + 1), B
                                           ;	.line	134; meter_logger.c	init_system();	
00003c   ec2e     call    0x4e5c, 0        	CALL	_init_system
00003e   f027
                                           ;	.line	135; meter_logger.c	sleep_ms(100);
000040   0e00     movlw   0                	MOVLW	0x00
000042   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000044   0e64     movlw   0x64             	MOVLW	0x64
000046   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000048   ecb4     call    0x4b68, 0        	CALL	_sleep_ms
00004a   f025
00004c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00004e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	142; meter_logger.c	get_battery_level();
000050   ecd4     call    0x37a8, 0        	CALL	_get_battery_level
000052   f01b
                                           ;	.line	145; meter_logger.c	dev_id = get_dev_id();
000054   ecc7     call    0x4d8e, 0        	CALL	_get_dev_id
000056   f026
000058   6e00     movwf   0, 0             	MOVWF	r0x00
00005a   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00005c   f001
                                           ;	.line	147; meter_logger.c	if (dev_id == 0x1240) {
00005e   5000     movf    0, 0, 0          	MOVF	r0x00, W
000060   0a40     xorlw   0x40             	XORLW	0x40
000062   e103     bnz     0x6a             	BNZ	_00334_DS_
000064   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000066   0a12     xorlw   0x12             	XORLW	0x12
000068   e001     bz      0x6c             	BZ	_00335_DS_
                                           _00334_DS_:
00006a   d01d     bra     0xa6             	BRA	_00109_DS_
                                           _00335_DS_:
                                           ;	.line	148; meter_logger.c	sprintf(debug_buffer, "Processor: pic18f2550\n\r");
00006c   0e00     movlw   0                	MOVLW	UPPER(__str_0)
00006e   6e04     movwf   0x4, 0           	MOVWF	r0x04
000070   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_0)
000072   6e03     movwf   0x3, 0           	MOVWF	r0x03
000074   0e06     movlw   0x6              	MOVLW	LOW(__str_0)
000076   6e02     movwf   0x2, 0           	MOVWF	r0x02
000078   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00007a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00007c   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00007e   6e05     movwf   0x5, 0           	MOVWF	r0x05
000080   0e80     movlw   0x80             	MOVLW	0x80
000082   6e07     movwf   0x7, 0           	MOVWF	r0x07
000084   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000086   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000088   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00008a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00008c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00008e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000090   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000092   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000094   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000096   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000098   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00009a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00009c   ec16     call    0x462c, 0        	CALL	_sprintf
00009e   f023
0000a0   0e06     movlw   0x6              	MOVLW	0x06
0000a2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0000a4   d044     bra     0x12e            	BRA	_00110_DS_
                                           _00109_DS_:
                                           ;	.line	150; meter_logger.c	else if (dev_id == 0x2a40) {
0000a6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0000a8   0a40     xorlw   0x40             	XORLW	0x40
0000aa   e103     bnz     0xb2             	BNZ	_00336_DS_
0000ac   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0000ae   0a2a     xorlw   0x2a             	XORLW	0x2a
0000b0   e001     bz      0xb4             	BZ	_00337_DS_
                                           _00336_DS_:
0000b2   d01d     bra     0xee             	BRA	_00106_DS_
                                           _00337_DS_:
                                           ;	.line	151; meter_logger.c	sprintf(debug_buffer, "Processor: pic18f2553\n\r");
0000b4   0e00     movlw   0                	MOVLW	UPPER(__str_1)
0000b6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0000b8   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_1)
0000ba   6e03     movwf   0x3, 0           	MOVWF	r0x03
0000bc   0e1e     movlw   0x1e             	MOVLW	LOW(__str_1)
0000be   6e02     movwf   0x2, 0           	MOVWF	r0x02
0000c0   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0000c2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0000c4   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0000c6   6e05     movwf   0x5, 0           	MOVWF	r0x05
0000c8   0e80     movlw   0x80             	MOVLW	0x80
0000ca   6e07     movwf   0x7, 0           	MOVWF	r0x07
0000cc   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0000ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000d0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0000d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000d4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0000d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000d8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0000da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000dc   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0000de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000e0   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0000e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000e4   ec16     call    0x462c, 0        	CALL	_sprintf
0000e6   f023
0000e8   0e06     movlw   0x6              	MOVLW	0x06
0000ea   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0000ec   d020     bra     0x12e            	BRA	_00110_DS_
                                           _00106_DS_:
                                           ;	.line	154; meter_logger.c	sprintf(debug_buffer, "Processor: unsupported, device id: 0x%04x\n\r", dev_id);
0000ee   0e00     movlw   0                	MOVLW	UPPER(__str_2)
0000f0   6e04     movwf   0x4, 0           	MOVWF	r0x04
0000f2   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_2)
0000f4   6e03     movwf   0x3, 0           	MOVWF	r0x03
0000f6   0e36     movlw   0x36             	MOVLW	LOW(__str_2)
0000f8   6e02     movwf   0x2, 0           	MOVWF	r0x02
0000fa   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0000fc   6e06     movwf   0x6, 0           	MOVWF	r0x06
0000fe   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000100   6e05     movwf   0x5, 0           	MOVWF	r0x05
000102   0e80     movlw   0x80             	MOVLW	0x80
000104   6e07     movwf   0x7, 0           	MOVWF	r0x07
000106   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000108   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00010a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00010c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00010e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000110   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000112   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000114   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000116   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000118   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00011a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00011c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00011e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000120   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000122   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000124   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000126   ec16     call    0x462c, 0        	CALL	_sprintf
000128   f023
00012a   0e08     movlw   0x8              	MOVLW	0x08
00012c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _00110_DS_:
                                           ;	.line	156; meter_logger.c	usart_puts(debug_buffer);
00012e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000130   6e01     movwf   0x1, 0           	MOVWF	r0x01
000132   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000134   6e00     movwf   0, 0             	MOVWF	r0x00
000136   0e80     movlw   0x80             	MOVLW	0x80
000138   6e02     movwf   0x2, 0           	MOVWF	r0x02
00013a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00013c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00013e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000140   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000142   5000     movf    0, 0, 0          	MOVF	r0x00, W
000144   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000146   ec8b     call    0x4d16, 0        	CALL	_usart_puts
000148   f026
00014a   0e03     movlw   0x3              	MOVLW	0x03
00014c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	159; meter_logger.c	fsk_rx_enable();
00014e   ec00     call    0x4e00, 0        	CALL	_fsk_rx_enable
000150   f027
                                           _00171_DS_:
                                           ;	.line	161; meter_logger.c	if (fifo_get(&cmd)) {
000152   0e05     movlw   0x5              	MOVLW	HIGH(_main_cmd_1_90)
000154   6e01     movwf   0x1, 0           	MOVWF	r0x01
000156   0e50     movlw   0x50             	MOVLW	LOW(_main_cmd_1_90)
000158   6e00     movwf   0, 0             	MOVWF	r0x00
00015a   0e80     movlw   0x80             	MOVLW	0x80
00015c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00015e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000160   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000162   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000164   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000166   5000     movf    0, 0, 0          	MOVF	r0x00, W
000168   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00016a   ec9f     call    0x413e, 0        	CALL	_fifo_get
00016c   f020
00016e   6e00     movwf   0, 0             	MOVWF	r0x00
000170   0e03     movlw   0x3              	MOVLW	0x03
000172   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000174   5000     movf    0, 0, 0          	MOVF	r0x00, W
000176   e0ed     bz      0x152            	BZ	_00171_DS_
                                           ;	.line	162; meter_logger.c	switch (cmd) {
000178   0efb     movlw   0xfb             	MOVLW	0xfb
00017a   0105     movlb   0x5              	BANKSEL	_main_cmd_1_90
00017c   5d50     subwf   0x50, 0, 0x1     	SUBWF	_main_cmd_1_90, W, B
00017e   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
000180   ef65     goto    0xeca            	GOTO	_00165_DS_
000182   f007
000184   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
000186   2550     addwf   0x50, 0, 0x1     	ADDWF	_main_cmd_1_90, W, B
000188   6e00     movwf   0, 0             	MOVWF	r0x00
00018a   6afa     clrf    0xfa, 0          	CLRF	PCLATH
00018c   6afb     clrf    0xfb, 0          	CLRF	PCLATU
00018e   3400     rlcf    0, 0, 0          	RLCF	r0x00, W
000190   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
000192   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
000194   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
000196   0bfc     andlw   0xfc             	ANDLW	0xfc
000198   0fa8     addlw   0xa8             	ADDLW	LOW(_00339_DS_)
00019a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00019c   0e01     movlw   0x1              	MOVLW	HIGH(_00339_DS_)
00019e   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
0001a0   0e00     movlw   0                	MOVLW	UPPER(_00339_DS_)
0001a2   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0001a4   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0001a6   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00339_DS_:
0001a8   ef5f     goto    0xebe            	GOTO	_00163_DS_
0001aa   f007
0001ac   ef2e     goto    0xa5c            	GOTO	_00145_DS_
0001ae   f005
0001b0   effc     goto    0x5f8            	GOTO	_00127_DS_
0001b2   f002
0001b4   efde     goto    0x1bc            	GOTO	_00111_DS_
0001b6   f000
0001b8   eff7     goto    0x3ee            	GOTO	_00119_DS_
0001ba   f001
                                           _00111_DS_:
                                           ;	.line	164; meter_logger.c	fsk_rx_disable();
0001bc   ec03     call    0x5406, 0        	CALL	_fsk_rx_disable
0001be   f02a
                                           ;	.line	165; meter_logger.c	usart_puts("\n\rpress print on testo\n\r");
0001c0   0e00     movlw   0                	MOVLW	UPPER(__str_3)
0001c2   6e02     movwf   0x2, 0           	MOVWF	r0x02
0001c4   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_3)
0001c6   6e01     movwf   0x1, 0           	MOVWF	r0x01
0001c8   0e62     movlw   0x62             	MOVLW	LOW(__str_3)
0001ca   6e00     movwf   0, 0             	MOVWF	r0x00
0001cc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0001ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001d0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0001d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001d4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0001d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001d8   ec8b     call    0x4d16, 0        	CALL	_usart_puts
0001da   f026
0001dc   0e03     movlw   0x3              	MOVLW	0x03
0001de   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	166; meter_logger.c	testo_ir_enable();
0001e0   ecf7     call    0x4fee, 0        	CALL	_testo_ir_enable
0001e2   f027
                                           ;	.line	168; meter_logger.c	last_fifo_size = 0;
0001e4   6a00     clrf    0, 0             	CLRF	r0x00
0001e6   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	169; meter_logger.c	sleep_ms(10000);						// 10 seconds to start printing
0001e8   0e27     movlw   0x27             	MOVLW	0x27
0001ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001ec   0e10     movlw   0x10             	MOVLW	0x10
0001ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001f0   ecb4     call    0x4b68, 0        	CALL	_sleep_ms
0001f2   f025
0001f4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0001f6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	170; meter_logger.c	fifo_size = fifo_in_use();
0001f8   ec32     call    0x5064, 0        	CALL	_fifo_in_use
0001fa   f028
0001fc   6e02     movwf   0x2, 0           	MOVWF	r0x02
0001fe   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000200   f003
                                           _00112_DS_:
                                           ;	.line	171; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000202   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000204   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000206   e102     bnz     0x20c            	BNZ	_00340_DS_
000208   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00020a   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00340_DS_:
00020c   e212     bc      0x232            	BC	_00114_DS_
                                           ;	.line	172; meter_logger.c	last_fifo_size = fifo_size;
00020e   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000210   f000
000212   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000214   f001
                                           ;	.line	173; meter_logger.c	sleep_ms(200);						// return data when no data for 200 ms
000216   0e00     movlw   0                	MOVLW	0x00
000218   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00021a   0ec8     movlw   0xc8             	MOVLW	0xc8
00021c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00021e   ecb4     call    0x4b68, 0        	CALL	_sleep_ms
000220   f025
000222   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000224   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	174; meter_logger.c	fifo_size = fifo_in_use();
000226   ec32     call    0x5064, 0        	CALL	_fifo_in_use
000228   f028
00022a   6e02     movwf   0x2, 0           	MOVWF	r0x02
00022c   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00022e   f003
000230   d7e8     bra     0x202            	BRA	_00112_DS_
                                           _00114_DS_:
                                           ;	.line	176; meter_logger.c	testo_ir_disable();
000232   ec0d     call    0x541a, 0        	CALL	_testo_ir_disable
000234   f02a
                                           ;	.line	182; meter_logger.c	sprintf(debug_buffer, "<- ");
000236   0e00     movlw   0                	MOVLW	UPPER(__str_4)
000238   6e06     movwf   0x6, 0           	MOVWF	r0x06
00023a   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_4)
00023c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00023e   0e7c     movlw   0x7c             	MOVLW	LOW(__str_4)
000240   6e04     movwf   0x4, 0           	MOVWF	r0x04
000242   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000244   6e08     movwf   0x8, 0           	MOVWF	r0x08
000246   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000248   6e07     movwf   0x7, 0           	MOVWF	r0x07
00024a   0e80     movlw   0x80             	MOVLW	0x80
00024c   6e09     movwf   0x9, 0           	MOVWF	r0x09
00024e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000250   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000252   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000254   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000256   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000258   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00025a   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00025c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00025e   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000260   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000262   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000264   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000266   ec16     call    0x462c, 0        	CALL	_sprintf
000268   f023
00026a   0e06     movlw   0x6              	MOVLW	0x06
00026c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	183; meter_logger.c	usart_puts(debug_buffer);
00026e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000270   6e05     movwf   0x5, 0           	MOVWF	r0x05
000272   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000274   6e04     movwf   0x4, 0           	MOVWF	r0x04
000276   0e80     movlw   0x80             	MOVLW	0x80
000278   6e06     movwf   0x6, 0           	MOVWF	r0x06
00027a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00027c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00027e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000280   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000282   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000284   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000286   ec8b     call    0x4d16, 0        	CALL	_usart_puts
000288   f026
00028a   0e03     movlw   0x3              	MOVLW	0x03
00028c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	184; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
00028e   6a04     clrf    0x4, 0           	CLRF	r0x04
000290   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00174_DS_:
000292   ec32     call    0x5064, 0        	CALL	_fifo_in_use
000294   f028
000296   6e06     movwf   0x6, 0           	MOVWF	r0x06
000298   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
00029a   f007
00029c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00029e   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0002a0   e102     bnz     0x2a6            	BNZ	_00341_DS_
0002a2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0002a4   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00341_DS_:
0002a6   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0002a8   d04c     bra     0x342            	BRA	_00115_DS_
                                           ;	.line	186; meter_logger.c	fifo_get(&sub_cmd);
0002aa   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0002ac   6e07     movwf   0x7, 0           	MOVWF	r0x07
0002ae   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
0002b0   6e06     movwf   0x6, 0           	MOVWF	r0x06
0002b2   0e80     movlw   0x80             	MOVLW	0x80
0002b4   6e08     movwf   0x8, 0           	MOVWF	r0x08
0002b6   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0002b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002ba   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0002bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002be   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0002c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002c2   ec9f     call    0x413e, 0        	CALL	_fifo_get
0002c4   f020
0002c6   0e03     movlw   0x3              	MOVLW	0x03
0002c8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	188; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
0002ca   c551     movff   0x551, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
0002cc   f006
0002ce   6a07     clrf    0x7, 0           	CLRF	r0x07
0002d0   0e00     movlw   0                	MOVLW	UPPER(__str_5)
0002d2   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0002d4   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_5)
0002d6   6e09     movwf   0x9, 0           	MOVWF	r0x09
0002d8   0e80     movlw   0x80             	MOVLW	LOW(__str_5)
0002da   6e08     movwf   0x8, 0           	MOVWF	r0x08
0002dc   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0002de   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
0002e0   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0002e2   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0002e4   0e80     movlw   0x80             	MOVLW	0x80
0002e6   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
0002e8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0002ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002ec   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0002ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002f0   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
0002f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002f4   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0002f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002f8   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0002fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002fc   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
0002fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000300   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000302   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000304   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000306   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000308   ec16     call    0x462c, 0        	CALL	_sprintf
00030a   f023
00030c   0e08     movlw   0x8              	MOVLW	0x08
00030e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	189; meter_logger.c	usart_puts(debug_buffer);
000310   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000312   6e07     movwf   0x7, 0           	MOVWF	r0x07
000314   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000316   6e06     movwf   0x6, 0           	MOVWF	r0x06
000318   0e80     movlw   0x80             	MOVLW	0x80
00031a   6e08     movwf   0x8, 0           	MOVWF	r0x08
00031c   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00031e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000320   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000322   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000324   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000326   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000328   ec8b     call    0x4d16, 0        	CALL	_usart_puts
00032a   f026
00032c   0e03     movlw   0x3              	MOVLW	0x03
00032e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000330   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	191; meter_logger.c	fifo_put(sub_cmd);
000332   5151     movf    0x51, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000334   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000336   ecfb     call    0x43f6, 0        	CALL	_fifo_put
000338   f021
00033a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	184; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
00033c   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
00033e   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000340   d7a8     bra     0x292            	BRA	_00174_DS_
                                           _00115_DS_:
                                           ;	.line	193; meter_logger.c	sprintf(debug_buffer, "\n\r");
000342   0e00     movlw   0                	MOVLW	UPPER(__str_6)
000344   6e06     movwf   0x6, 0           	MOVWF	r0x06
000346   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_6)
000348   6e05     movwf   0x5, 0           	MOVWF	r0x05
00034a   0e84     movlw   0x84             	MOVLW	LOW(__str_6)
00034c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00034e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000350   6e08     movwf   0x8, 0           	MOVWF	r0x08
000352   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000354   6e07     movwf   0x7, 0           	MOVWF	r0x07
000356   0e80     movlw   0x80             	MOVLW	0x80
000358   6e09     movwf   0x9, 0           	MOVWF	r0x09
00035a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00035c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00035e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000360   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000362   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000364   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000366   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000368   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00036a   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00036c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00036e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000370   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000372   ec16     call    0x462c, 0        	CALL	_sprintf
000374   f023
000376   0e06     movlw   0x6              	MOVLW	0x06
000378   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	194; meter_logger.c	usart_puts(debug_buffer);
00037a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00037c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00037e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000380   6e04     movwf   0x4, 0           	MOVWF	r0x04
000382   0e80     movlw   0x80             	MOVLW	0x80
000384   6e06     movwf   0x6, 0           	MOVWF	r0x06
000386   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000388   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00038a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00038c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00038e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000390   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000392   ec8b     call    0x4d16, 0        	CALL	_usart_puts
000394   f026
000396   0e03     movlw   0x3              	MOVLW	0x03
000398   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	196; meter_logger.c	fsk_tx_enable();
00039a   ec69     call    0x50d2, 0        	CALL	_fsk_tx_enable
00039c   f028
                                           _00116_DS_:
                                           ;	.line	197; meter_logger.c	while (fifo_get(&cmd)) {	// and send them via fsk
00039e   0e05     movlw   0x5              	MOVLW	HIGH(_main_cmd_1_90)
0003a0   6e05     movwf   0x5, 0           	MOVWF	r0x05
0003a2   0e50     movlw   0x50             	MOVLW	LOW(_main_cmd_1_90)
0003a4   6e04     movwf   0x4, 0           	MOVWF	r0x04
0003a6   0e80     movlw   0x80             	MOVLW	0x80
0003a8   6e06     movwf   0x6, 0           	MOVWF	r0x06
0003aa   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0003ac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003ae   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0003b0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003b2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0003b4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003b6   ec9f     call    0x413e, 0        	CALL	_fifo_get
0003b8   f020
0003ba   6e04     movwf   0x4, 0           	MOVWF	r0x04
0003bc   0e03     movlw   0x3              	MOVLW	0x03
0003be   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0003c0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0003c2   e00f     bz      0x3e2            	BZ	_00118_DS_
0003c4   0105     movlb   0x5              	BANKSEL	_main_cmd_1_90
                                           ;	.line	198; meter_logger.c	fsk_tx_byte(cmd);
0003c6   5150     movf    0x50, 0, 0x1     	MOVF	_main_cmd_1_90, W, B
0003c8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003ca   ecfa     call    0x51f4, 0        	CALL	_fsk_tx_byte
0003cc   f028
0003ce   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	199; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
0003d0   0e00     movlw   0                	MOVLW	0x00
0003d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003d4   0e04     movlw   0x4              	MOVLW	0x04
0003d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003d8   ecb4     call    0x4b68, 0        	CALL	_sleep_ms
0003da   f025
0003dc   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0003de   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0003e0   d7de     bra     0x39e            	BRA	_00116_DS_
                                           _00118_DS_:
                                           ;	.line	201; meter_logger.c	fsk_tx_disable();
0003e2   ecc1     call    0x5382, 0        	CALL	_fsk_tx_disable
0003e4   f029
                                           ;	.line	205; meter_logger.c	fsk_rx_enable();
0003e6   ec00     call    0x4e00, 0        	CALL	_fsk_rx_enable
0003e8   f027
                                           ;	.line	206; meter_logger.c	break;
0003ea   ef65     goto    0xeca            	GOTO	_00165_DS_
0003ec   f007
                                           _00119_DS_:
                                           ;	.line	216; meter_logger.c	last_fifo_size = 0;
0003ee   6a00     clrf    0, 0             	CLRF	r0x00
0003f0   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	217; meter_logger.c	sleep_ms(1000);							// 1 second
0003f2   0e03     movlw   0x3              	MOVLW	0x03
0003f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003f6   0ee8     movlw   0xe8             	MOVLW	0xe8
0003f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003fa   ecb4     call    0x4b68, 0        	CALL	_sleep_ms
0003fc   f025
0003fe   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000400   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	218; meter_logger.c	fifo_size = fifo_in_use();
000402   ec32     call    0x5064, 0        	CALL	_fifo_in_use
000404   f028
000406   6e02     movwf   0x2, 0           	MOVWF	r0x02
000408   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00040a   f003
                                           _00120_DS_:
                                           ;	.line	219; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
00040c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00040e   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000410   e102     bnz     0x416            	BNZ	_00342_DS_
000412   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000414   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00342_DS_:
000416   e212     bc      0x43c            	BC	_00122_DS_
                                           ;	.line	220; meter_logger.c	last_fifo_size = fifo_size;
000418   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
00041a   f000
00041c   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
00041e   f001
                                           ;	.line	221; meter_logger.c	sleep_ms(500);						// return data when no data for 500 ms
000420   0e01     movlw   0x1              	MOVLW	0x01
000422   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000424   0ef4     movlw   0xf4             	MOVLW	0xf4
000426   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000428   ecb4     call    0x4b68, 0        	CALL	_sleep_ms
00042a   f025
00042c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00042e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	222; meter_logger.c	fifo_size = fifo_in_use();
000430   ec32     call    0x5064, 0        	CALL	_fifo_in_use
000432   f028
000434   6e02     movwf   0x2, 0           	MOVWF	r0x02
000436   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000438   f003
00043a   d7e8     bra     0x40c            	BRA	_00120_DS_
                                           _00122_DS_:
                                           ;	.line	224; meter_logger.c	fsk_rx_disable();
00043c   ec03     call    0x5406, 0        	CALL	_fsk_rx_disable
00043e   f02a
                                           ;	.line	227; meter_logger.c	sprintf(debug_buffer, "-> ");
000440   0e00     movlw   0                	MOVLW	UPPER(__str_7)
000442   6e06     movwf   0x6, 0           	MOVWF	r0x06
000444   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_7)
000446   6e05     movwf   0x5, 0           	MOVWF	r0x05
000448   0e88     movlw   0x88             	MOVLW	LOW(__str_7)
00044a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00044c   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00044e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000450   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000452   6e07     movwf   0x7, 0           	MOVWF	r0x07
000454   0e80     movlw   0x80             	MOVLW	0x80
000456   6e09     movwf   0x9, 0           	MOVWF	r0x09
000458   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00045a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00045c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00045e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000460   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000462   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000464   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000466   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000468   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00046a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00046c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00046e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000470   ec16     call    0x462c, 0        	CALL	_sprintf
000472   f023
000474   0e06     movlw   0x6              	MOVLW	0x06
000476   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	228; meter_logger.c	usart_puts(debug_buffer);
000478   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00047a   6e05     movwf   0x5, 0           	MOVWF	r0x05
00047c   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00047e   6e04     movwf   0x4, 0           	MOVWF	r0x04
000480   0e80     movlw   0x80             	MOVLW	0x80
000482   6e06     movwf   0x6, 0           	MOVWF	r0x06
000484   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000486   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000488   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00048a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00048c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00048e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000490   ec8b     call    0x4d16, 0        	CALL	_usart_puts
000492   f026
000494   0e03     movlw   0x3              	MOVLW	0x03
000496   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	229; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000498   6a04     clrf    0x4, 0           	CLRF	r0x04
00049a   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00177_DS_:
00049c   ec32     call    0x5064, 0        	CALL	_fifo_in_use
00049e   f028
0004a0   6e06     movwf   0x6, 0           	MOVWF	r0x06
0004a2   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
0004a4   f007
0004a6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0004a8   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0004aa   e102     bnz     0x4b0            	BNZ	_00343_DS_
0004ac   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0004ae   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00343_DS_:
0004b0   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0004b2   d04c     bra     0x54c            	BRA	_00123_DS_
                                           ;	.line	231; meter_logger.c	fifo_get(&sub_cmd);
0004b4   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0004b6   6e07     movwf   0x7, 0           	MOVWF	r0x07
0004b8   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
0004ba   6e06     movwf   0x6, 0           	MOVWF	r0x06
0004bc   0e80     movlw   0x80             	MOVLW	0x80
0004be   6e08     movwf   0x8, 0           	MOVWF	r0x08
0004c0   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0004c2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004c4   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0004c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004c8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0004ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004cc   ec9f     call    0x413e, 0        	CALL	_fifo_get
0004ce   f020
0004d0   0e03     movlw   0x3              	MOVLW	0x03
0004d2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	233; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
0004d4   c551     movff   0x551, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
0004d6   f006
0004d8   6a07     clrf    0x7, 0           	CLRF	r0x07
0004da   0e00     movlw   0                	MOVLW	UPPER(__str_5)
0004dc   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0004de   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_5)
0004e0   6e09     movwf   0x9, 0           	MOVWF	r0x09
0004e2   0e80     movlw   0x80             	MOVLW	LOW(__str_5)
0004e4   6e08     movwf   0x8, 0           	MOVWF	r0x08
0004e6   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0004e8   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
0004ea   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0004ec   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0004ee   0e80     movlw   0x80             	MOVLW	0x80
0004f0   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
0004f2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0004f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004f6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0004f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004fa   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
0004fc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004fe   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000500   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000502   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000504   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000506   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000508   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00050a   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
00050c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00050e   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000510   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000512   ec16     call    0x462c, 0        	CALL	_sprintf
000514   f023
000516   0e08     movlw   0x8              	MOVLW	0x08
000518   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	234; meter_logger.c	usart_puts(debug_buffer);
00051a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00051c   6e07     movwf   0x7, 0           	MOVWF	r0x07
00051e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000520   6e06     movwf   0x6, 0           	MOVWF	r0x06
000522   0e80     movlw   0x80             	MOVLW	0x80
000524   6e08     movwf   0x8, 0           	MOVWF	r0x08
000526   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000528   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00052a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00052c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00052e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000530   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000532   ec8b     call    0x4d16, 0        	CALL	_usart_puts
000534   f026
000536   0e03     movlw   0x3              	MOVLW	0x03
000538   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00053a   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	236; meter_logger.c	fifo_put(sub_cmd);
00053c   5151     movf    0x51, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
00053e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000540   ecfb     call    0x43f6, 0        	CALL	_fifo_put
000542   f021
000544   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	229; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000546   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000548   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
00054a   d7a8     bra     0x49c            	BRA	_00177_DS_
                                           _00123_DS_:
                                           ;	.line	238; meter_logger.c	sprintf(debug_buffer, "\n\r");
00054c   0e00     movlw   0                	MOVLW	UPPER(__str_6)
00054e   6e06     movwf   0x6, 0           	MOVWF	r0x06
000550   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_6)
000552   6e05     movwf   0x5, 0           	MOVWF	r0x05
000554   0e84     movlw   0x84             	MOVLW	LOW(__str_6)
000556   6e04     movwf   0x4, 0           	MOVWF	r0x04
000558   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00055a   6e08     movwf   0x8, 0           	MOVWF	r0x08
00055c   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00055e   6e07     movwf   0x7, 0           	MOVWF	r0x07
000560   0e80     movlw   0x80             	MOVLW	0x80
000562   6e09     movwf   0x9, 0           	MOVWF	r0x09
000564   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000566   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000568   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00056a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00056c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00056e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000570   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000572   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000574   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000576   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000578   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00057a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00057c   ec16     call    0x462c, 0        	CALL	_sprintf
00057e   f023
000580   0e06     movlw   0x6              	MOVLW	0x06
000582   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	239; meter_logger.c	usart_puts(debug_buffer);
000584   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000586   6e05     movwf   0x5, 0           	MOVWF	r0x05
000588   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00058a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00058c   0e80     movlw   0x80             	MOVLW	0x80
00058e   6e06     movwf   0x6, 0           	MOVWF	r0x06
000590   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000592   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000594   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000596   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000598   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00059a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00059c   ec8b     call    0x4d16, 0        	CALL	_usart_puts
00059e   f026
0005a0   0e03     movlw   0x3              	MOVLW	0x03
0005a2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	243; meter_logger.c	fsk_tx_enable();
0005a4   ec69     call    0x50d2, 0        	CALL	_fsk_tx_enable
0005a6   f028
                                           _00124_DS_:
                                           ;	.line	244; meter_logger.c	while (fifo_get(&sub_cmd)) {
0005a8   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0005aa   6e05     movwf   0x5, 0           	MOVWF	r0x05
0005ac   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
0005ae   6e04     movwf   0x4, 0           	MOVWF	r0x04
0005b0   0e80     movlw   0x80             	MOVLW	0x80
0005b2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0005b4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0005b6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005b8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0005ba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005bc   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0005be   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005c0   ec9f     call    0x413e, 0        	CALL	_fifo_get
0005c2   f020
0005c4   6e04     movwf   0x4, 0           	MOVWF	r0x04
0005c6   0e03     movlw   0x3              	MOVLW	0x03
0005c8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0005ca   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0005cc   e00f     bz      0x5ec            	BZ	_00126_DS_
0005ce   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	245; meter_logger.c	fsk_tx_byte(sub_cmd);
0005d0   5151     movf    0x51, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
0005d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005d4   ecfa     call    0x51f4, 0        	CALL	_fsk_tx_byte
0005d6   f028
0005d8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	246; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
0005da   0e00     movlw   0                	MOVLW	0x00
0005dc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005de   0e04     movlw   0x4              	MOVLW	0x04
0005e0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005e2   ecb4     call    0x4b68, 0        	CALL	_sleep_ms
0005e4   f025
0005e6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0005e8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0005ea   d7de     bra     0x5a8            	BRA	_00124_DS_
                                           _00126_DS_:
                                           ;	.line	248; meter_logger.c	fsk_tx_disable();
0005ec   ecc1     call    0x5382, 0        	CALL	_fsk_tx_disable
0005ee   f029
                                           ;	.line	253; meter_logger.c	fsk_rx_enable();
0005f0   ec00     call    0x4e00, 0        	CALL	_fsk_rx_enable
0005f2   f027
                                           ;	.line	254; meter_logger.c	break;
0005f4   ef65     goto    0xeca            	GOTO	_00165_DS_
0005f6   f007
                                           _00127_DS_:
                                           ;	.line	257; meter_logger.c	fsk_rx_disable();
0005f8   ec03     call    0x5406, 0        	CALL	_fsk_rx_disable
0005fa   f02a
                                           ;	.line	263; meter_logger.c	fsk_rx_enable();
0005fc   ec00     call    0x4e00, 0        	CALL	_fsk_rx_enable
0005fe   f027
                                           ;	.line	264; meter_logger.c	last_fifo_size = 0;
000600   6a00     clrf    0, 0             	CLRF	r0x00
000602   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	265; meter_logger.c	sleep_ms(400);							// sleep 400 ms to let some data come in
000604   0e01     movlw   0x1              	MOVLW	0x01
000606   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000608   0e90     movlw   0x90             	MOVLW	0x90
00060a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00060c   ecb4     call    0x4b68, 0        	CALL	_sleep_ms
00060e   f025
000610   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000612   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	266; meter_logger.c	fifo_size = fifo_in_use();
000614   ec32     call    0x5064, 0        	CALL	_fifo_in_use
000616   f028
000618   6e02     movwf   0x2, 0           	MOVWF	r0x02
00061a   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00061c   f003
                                           _00128_DS_:
                                           ;	.line	267; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
00061e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000620   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000622   e102     bnz     0x628            	BNZ	_00344_DS_
000624   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000626   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00344_DS_:
000628   e212     bc      0x64e            	BC	_00130_DS_
                                           ;	.line	268; meter_logger.c	last_fifo_size = fifo_size;
00062a   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
00062c   f000
00062e   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000630   f001
                                           ;	.line	269; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
000632   0e00     movlw   0                	MOVLW	0x00
000634   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000636   0ec8     movlw   0xc8             	MOVLW	0xc8
000638   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00063a   ecb4     call    0x4b68, 0        	CALL	_sleep_ms
00063c   f025
00063e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000640   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	270; meter_logger.c	fifo_size = fifo_in_use();
000642   ec32     call    0x5064, 0        	CALL	_fifo_in_use
000644   f028
000646   6e02     movwf   0x2, 0           	MOVWF	r0x02
000648   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00064a   f003
00064c   d7e8     bra     0x61e            	BRA	_00128_DS_
                                           _00130_DS_:
                                           ;	.line	272; meter_logger.c	fsk_rx_disable();
00064e   ec03     call    0x5406, 0        	CALL	_fsk_rx_disable
000650   f02a
                                           ;	.line	278; meter_logger.c	sprintf(debug_buffer, "-> ");
000652   0e00     movlw   0                	MOVLW	UPPER(__str_7)
000654   6e06     movwf   0x6, 0           	MOVWF	r0x06
000656   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_7)
000658   6e05     movwf   0x5, 0           	MOVWF	r0x05
00065a   0e88     movlw   0x88             	MOVLW	LOW(__str_7)
00065c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00065e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000660   6e08     movwf   0x8, 0           	MOVWF	r0x08
000662   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000664   6e07     movwf   0x7, 0           	MOVWF	r0x07
000666   0e80     movlw   0x80             	MOVLW	0x80
000668   6e09     movwf   0x9, 0           	MOVWF	r0x09
00066a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00066c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00066e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000670   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000672   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000674   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000676   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000678   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00067a   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00067c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00067e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000680   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000682   ec16     call    0x462c, 0        	CALL	_sprintf
000684   f023
000686   0e06     movlw   0x6              	MOVLW	0x06
000688   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	279; meter_logger.c	usart_puts(debug_buffer);
00068a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00068c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00068e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000690   6e04     movwf   0x4, 0           	MOVWF	r0x04
000692   0e80     movlw   0x80             	MOVLW	0x80
000694   6e06     movwf   0x6, 0           	MOVWF	r0x06
000696   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000698   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00069a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00069c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00069e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0006a0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006a2   ec8b     call    0x4d16, 0        	CALL	_usart_puts
0006a4   f026
0006a6   0e03     movlw   0x3              	MOVLW	0x03
0006a8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	280; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
0006aa   6a04     clrf    0x4, 0           	CLRF	r0x04
0006ac   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00180_DS_:
0006ae   ec32     call    0x5064, 0        	CALL	_fifo_in_use
0006b0   f028
0006b2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0006b4   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
0006b6   f007
0006b8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0006ba   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0006bc   e102     bnz     0x6c2            	BNZ	_00345_DS_
0006be   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0006c0   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00345_DS_:
0006c2   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0006c4   d04c     bra     0x75e            	BRA	_00131_DS_
                                           ;	.line	282; meter_logger.c	fifo_get(&sub_cmd);
0006c6   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0006c8   6e07     movwf   0x7, 0           	MOVWF	r0x07
0006ca   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
0006cc   6e06     movwf   0x6, 0           	MOVWF	r0x06
0006ce   0e80     movlw   0x80             	MOVLW	0x80
0006d0   6e08     movwf   0x8, 0           	MOVWF	r0x08
0006d2   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0006d4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006d6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0006d8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006da   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0006dc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006de   ec9f     call    0x413e, 0        	CALL	_fifo_get
0006e0   f020
0006e2   0e03     movlw   0x3              	MOVLW	0x03
0006e4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	284; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
0006e6   c551     movff   0x551, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
0006e8   f006
0006ea   6a07     clrf    0x7, 0           	CLRF	r0x07
0006ec   0e00     movlw   0                	MOVLW	UPPER(__str_5)
0006ee   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0006f0   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_5)
0006f2   6e09     movwf   0x9, 0           	MOVWF	r0x09
0006f4   0e80     movlw   0x80             	MOVLW	LOW(__str_5)
0006f6   6e08     movwf   0x8, 0           	MOVWF	r0x08
0006f8   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0006fa   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
0006fc   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0006fe   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
000700   0e80     movlw   0x80             	MOVLW	0x80
000702   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
000704   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000706   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000708   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00070a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00070c   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
00070e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000710   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000712   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000714   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000716   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000718   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
00071a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00071c   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
00071e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000720   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000722   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000724   ec16     call    0x462c, 0        	CALL	_sprintf
000726   f023
000728   0e08     movlw   0x8              	MOVLW	0x08
00072a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	285; meter_logger.c	usart_puts(debug_buffer);
00072c   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00072e   6e07     movwf   0x7, 0           	MOVWF	r0x07
000730   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000732   6e06     movwf   0x6, 0           	MOVWF	r0x06
000734   0e80     movlw   0x80             	MOVLW	0x80
000736   6e08     movwf   0x8, 0           	MOVWF	r0x08
000738   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00073a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00073c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00073e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000740   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000742   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000744   ec8b     call    0x4d16, 0        	CALL	_usart_puts
000746   f026
000748   0e03     movlw   0x3              	MOVLW	0x03
00074a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00074c   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	287; meter_logger.c	fifo_put(sub_cmd);
00074e   5151     movf    0x51, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000750   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000752   ecfb     call    0x43f6, 0        	CALL	_fifo_put
000754   f021
000756   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	280; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000758   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
00075a   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
00075c   d7a8     bra     0x6ae            	BRA	_00180_DS_
                                           _00131_DS_:
                                           ;	.line	289; meter_logger.c	sprintf(debug_buffer, "\n\r");
00075e   0e00     movlw   0                	MOVLW	UPPER(__str_6)
000760   6e06     movwf   0x6, 0           	MOVWF	r0x06
000762   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_6)
000764   6e05     movwf   0x5, 0           	MOVWF	r0x05
000766   0e84     movlw   0x84             	MOVLW	LOW(__str_6)
000768   6e04     movwf   0x4, 0           	MOVWF	r0x04
00076a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00076c   6e08     movwf   0x8, 0           	MOVWF	r0x08
00076e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000770   6e07     movwf   0x7, 0           	MOVWF	r0x07
000772   0e80     movlw   0x80             	MOVLW	0x80
000774   6e09     movwf   0x9, 0           	MOVWF	r0x09
000776   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000778   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00077a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00077c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00077e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000780   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000782   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000784   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000786   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000788   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00078a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00078c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00078e   ec16     call    0x462c, 0        	CALL	_sprintf
000790   f023
000792   0e06     movlw   0x6              	MOVLW	0x06
000794   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	290; meter_logger.c	usart_puts(debug_buffer);
000796   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000798   6e05     movwf   0x5, 0           	MOVWF	r0x05
00079a   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00079c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00079e   0e80     movlw   0x80             	MOVLW	0x80
0007a0   6e06     movwf   0x6, 0           	MOVWF	r0x06
0007a2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0007a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007a6   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0007a8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007aa   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0007ac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007ae   ec8b     call    0x4d16, 0        	CALL	_usart_puts
0007b0   f026
0007b2   0e03     movlw   0x3              	MOVLW	0x03
0007b4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	293; meter_logger.c	rs232_8n2_tx_enable(TIMER0_RS232_1200);
0007b6   0ef9     movlw   0xf9             	MOVLW	0xf9
0007b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007ba   0eae     movlw   0xae             	MOVLW	0xae
0007bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007be   ecd8     call    0x4fb0, 0        	CALL	_rs232_8n2_tx_enable
0007c0   f027
0007c2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0007c4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00132_DS_:
                                           ;	.line	294; meter_logger.c	while (fifo_get(&sub_cmd)) {
0007c6   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0007c8   6e05     movwf   0x5, 0           	MOVWF	r0x05
0007ca   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
0007cc   6e04     movwf   0x4, 0           	MOVWF	r0x04
0007ce   0e80     movlw   0x80             	MOVLW	0x80
0007d0   6e06     movwf   0x6, 0           	MOVWF	r0x06
0007d2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0007d4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007d6   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0007d8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007da   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0007dc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007de   ec9f     call    0x413e, 0        	CALL	_fifo_get
0007e0   f020
0007e2   6e04     movwf   0x4, 0           	MOVWF	r0x04
0007e4   0e03     movlw   0x3              	MOVLW	0x03
0007e6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0007e8   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0007ea   e00f     bz      0x80a            	BZ	_00134_DS_
0007ec   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	295; meter_logger.c	rs232_8n2_tx_byte(sub_cmd);
0007ee   5151     movf    0x51, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
0007f0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007f2   ec9b     call    0x5136, 0        	CALL	_rs232_8n2_tx_byte
0007f4   f028
0007f6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	296; meter_logger.c	sleep_ms(RS232_TX_SLEEP);
0007f8   0e00     movlw   0                	MOVLW	0x00
0007fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007fc   0e0c     movlw   0xc              	MOVLW	0x0c
0007fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000800   ecb4     call    0x4b68, 0        	CALL	_sleep_ms
000802   f025
000804   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000806   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000808   d7de     bra     0x7c6            	BRA	_00132_DS_
                                           _00134_DS_:
                                           ;	.line	298; meter_logger.c	rs232_8n2_tx_disable();
00080a   eced     call    0x53da, 0        	CALL	_rs232_8n2_tx_disable
00080c   f029
                                           ;	.line	304; meter_logger.c	rs232_8n2_rx_enable(TIMER0_RS232_1200);
00080e   0ef9     movlw   0xf9             	MOVLW	0xf9
000810   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000812   0eae     movlw   0xae             	MOVLW	0xae
000814   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000816   ec79     call    0x4ef2, 0        	CALL	_rs232_8n2_rx_enable
000818   f027
00081a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00081c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	305; meter_logger.c	last_fifo_size = 0;
00081e   6a00     clrf    0, 0             	CLRF	r0x00
000820   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	306; meter_logger.c	sleep_ms(400);							// sleep 400 ms to let some data come in
000822   0e01     movlw   0x1              	MOVLW	0x01
000824   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000826   0e90     movlw   0x90             	MOVLW	0x90
000828   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00082a   ecb4     call    0x4b68, 0        	CALL	_sleep_ms
00082c   f025
00082e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000830   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	307; meter_logger.c	fifo_size = fifo_in_use();
000832   ec32     call    0x5064, 0        	CALL	_fifo_in_use
000834   f028
000836   6e02     movwf   0x2, 0           	MOVWF	r0x02
000838   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00083a   f003
                                           _00135_DS_:
                                           ;	.line	309; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
00083c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00083e   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000840   e102     bnz     0x846            	BNZ	_00346_DS_
000842   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000844   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00346_DS_:
000846   e212     bc      0x86c            	BC	_00137_DS_
                                           ;	.line	310; meter_logger.c	last_fifo_size = fifo_size;
000848   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
00084a   f000
00084c   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
00084e   f001
                                           ;	.line	311; meter_logger.c	sleep_ms(200);						// return data when no data for 200 ms
000850   0e00     movlw   0                	MOVLW	0x00
000852   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000854   0ec8     movlw   0xc8             	MOVLW	0xc8
000856   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000858   ecb4     call    0x4b68, 0        	CALL	_sleep_ms
00085a   f025
00085c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00085e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	312; meter_logger.c	fifo_size = fifo_in_use();
000860   ec32     call    0x5064, 0        	CALL	_fifo_in_use
000862   f028
000864   6e02     movwf   0x2, 0           	MOVWF	r0x02
000866   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000868   f003
00086a   d7e8     bra     0x83c            	BRA	_00135_DS_
                                           _00137_DS_:
                                           ;	.line	315; meter_logger.c	rs232_8n2_rx_disable();
00086c   ece2     call    0x53c4, 0        	CALL	_rs232_8n2_rx_disable
00086e   f029
                                           ;	.line	322; meter_logger.c	sprintf(debug_buffer, "<- ");
000870   0e00     movlw   0                	MOVLW	UPPER(__str_4)
000872   6e06     movwf   0x6, 0           	MOVWF	r0x06
000874   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_4)
000876   6e05     movwf   0x5, 0           	MOVWF	r0x05
000878   0e7c     movlw   0x7c             	MOVLW	LOW(__str_4)
00087a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00087c   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00087e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000880   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000882   6e07     movwf   0x7, 0           	MOVWF	r0x07
000884   0e80     movlw   0x80             	MOVLW	0x80
000886   6e09     movwf   0x9, 0           	MOVWF	r0x09
000888   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00088a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00088c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00088e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000890   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000892   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000894   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000896   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000898   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00089a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00089c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00089e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008a0   ec16     call    0x462c, 0        	CALL	_sprintf
0008a2   f023
0008a4   0e06     movlw   0x6              	MOVLW	0x06
0008a6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	323; meter_logger.c	usart_puts(debug_buffer);
0008a8   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0008aa   6e05     movwf   0x5, 0           	MOVWF	r0x05
0008ac   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0008ae   6e04     movwf   0x4, 0           	MOVWF	r0x04
0008b0   0e80     movlw   0x80             	MOVLW	0x80
0008b2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008b4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0008b6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008b8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0008ba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008bc   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0008be   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008c0   ec8b     call    0x4d16, 0        	CALL	_usart_puts
0008c2   f026
0008c4   0e03     movlw   0x3              	MOVLW	0x03
0008c6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	324; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
0008c8   6a04     clrf    0x4, 0           	CLRF	r0x04
0008ca   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00183_DS_:
0008cc   ec32     call    0x5064, 0        	CALL	_fifo_in_use
0008ce   f028
0008d0   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008d2   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
0008d4   f007
0008d6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0008d8   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0008da   e102     bnz     0x8e0            	BNZ	_00347_DS_
0008dc   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0008de   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00347_DS_:
0008e0   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0008e2   d04c     bra     0x97c            	BRA	_00138_DS_
                                           ;	.line	326; meter_logger.c	fifo_get(&sub_cmd);
0008e4   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0008e6   6e07     movwf   0x7, 0           	MOVWF	r0x07
0008e8   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
0008ea   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008ec   0e80     movlw   0x80             	MOVLW	0x80
0008ee   6e08     movwf   0x8, 0           	MOVWF	r0x08
0008f0   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0008f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008f4   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0008f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008f8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0008fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008fc   ec9f     call    0x413e, 0        	CALL	_fifo_get
0008fe   f020
000900   0e03     movlw   0x3              	MOVLW	0x03
000902   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	328; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
000904   c551     movff   0x551, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
000906   f006
000908   6a07     clrf    0x7, 0           	CLRF	r0x07
00090a   0e00     movlw   0                	MOVLW	UPPER(__str_5)
00090c   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
00090e   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_5)
000910   6e09     movwf   0x9, 0           	MOVWF	r0x09
000912   0e80     movlw   0x80             	MOVLW	LOW(__str_5)
000914   6e08     movwf   0x8, 0           	MOVWF	r0x08
000916   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000918   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
00091a   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00091c   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
00091e   0e80     movlw   0x80             	MOVLW	0x80
000920   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
000922   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000924   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000926   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000928   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00092a   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
00092c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00092e   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000930   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000932   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000934   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000936   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000938   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00093a   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
00093c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00093e   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000940   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000942   ec16     call    0x462c, 0        	CALL	_sprintf
000944   f023
000946   0e08     movlw   0x8              	MOVLW	0x08
000948   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	329; meter_logger.c	usart_puts(debug_buffer);
00094a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00094c   6e07     movwf   0x7, 0           	MOVWF	r0x07
00094e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000950   6e06     movwf   0x6, 0           	MOVWF	r0x06
000952   0e80     movlw   0x80             	MOVLW	0x80
000954   6e08     movwf   0x8, 0           	MOVWF	r0x08
000956   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000958   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00095a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00095c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00095e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000960   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000962   ec8b     call    0x4d16, 0        	CALL	_usart_puts
000964   f026
000966   0e03     movlw   0x3              	MOVLW	0x03
000968   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00096a   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	331; meter_logger.c	fifo_put(sub_cmd);
00096c   5151     movf    0x51, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
00096e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000970   ecfb     call    0x43f6, 0        	CALL	_fifo_put
000972   f021
000974   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	324; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000976   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000978   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
00097a   d7a8     bra     0x8cc            	BRA	_00183_DS_
                                           _00138_DS_:
                                           ;	.line	333; meter_logger.c	sprintf(debug_buffer, "\n\r");
00097c   0e00     movlw   0                	MOVLW	UPPER(__str_6)
00097e   6e06     movwf   0x6, 0           	MOVWF	r0x06
000980   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_6)
000982   6e05     movwf   0x5, 0           	MOVWF	r0x05
000984   0e84     movlw   0x84             	MOVLW	LOW(__str_6)
000986   6e04     movwf   0x4, 0           	MOVWF	r0x04
000988   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00098a   6e08     movwf   0x8, 0           	MOVWF	r0x08
00098c   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00098e   6e07     movwf   0x7, 0           	MOVWF	r0x07
000990   0e80     movlw   0x80             	MOVLW	0x80
000992   6e09     movwf   0x9, 0           	MOVWF	r0x09
000994   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000996   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000998   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00099a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00099c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00099e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009a0   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0009a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009a4   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0009a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009a8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0009aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009ac   ec16     call    0x462c, 0        	CALL	_sprintf
0009ae   f023
0009b0   0e06     movlw   0x6              	MOVLW	0x06
0009b2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	334; meter_logger.c	usart_puts(debug_buffer);
0009b4   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0009b6   6e05     movwf   0x5, 0           	MOVWF	r0x05
0009b8   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0009ba   6e04     movwf   0x4, 0           	MOVWF	r0x04
0009bc   0e80     movlw   0x80             	MOVLW	0x80
0009be   6e06     movwf   0x6, 0           	MOVWF	r0x06
0009c0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0009c2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009c4   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0009c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009c8   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0009ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009cc   ec8b     call    0x4d16, 0        	CALL	_usart_puts
0009ce   f026
0009d0   0e03     movlw   0x3              	MOVLW	0x03
0009d2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	336; meter_logger.c	if (fifo_in_use()) {
0009d4   ec32     call    0x5064, 0        	CALL	_fifo_in_use
0009d6   f028
0009d8   6e04     movwf   0x4, 0           	MOVWF	r0x04
0009da   cff3     movff   0xff3, 0x5       	MOVFF	PRODL, r0x05
0009dc   f005
0009de   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0009e0   1005     iorwf   0x5, 0, 0        	IORWF	r0x05, W
0009e2   e027     bz      0xa32            	BZ	_00143_DS_
                                           ;	.line	338; meter_logger.c	fsk_tx_enable();
0009e4   ec69     call    0x50d2, 0        	CALL	_fsk_tx_enable
0009e6   f028
                                           _00139_DS_:
                                           ;	.line	339; meter_logger.c	while (fifo_get(&sub_cmd)) {
0009e8   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0009ea   6e05     movwf   0x5, 0           	MOVWF	r0x05
0009ec   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
0009ee   6e04     movwf   0x4, 0           	MOVWF	r0x04
0009f0   0e80     movlw   0x80             	MOVLW	0x80
0009f2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0009f4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0009f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009f8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0009fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009fc   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0009fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a00   ec9f     call    0x413e, 0        	CALL	_fifo_get
000a02   f020
000a04   6e04     movwf   0x4, 0           	MOVWF	r0x04
000a06   0e03     movlw   0x3              	MOVLW	0x03
000a08   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000a0a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000a0c   e00f     bz      0xa2c            	BZ	_00141_DS_
000a0e   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	340; meter_logger.c	fsk_tx_byte(sub_cmd);
000a10   5151     movf    0x51, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000a12   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a14   ecfa     call    0x51f4, 0        	CALL	_fsk_tx_byte
000a16   f028
000a18   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	341; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000a1a   0e00     movlw   0                	MOVLW	0x00
000a1c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a1e   0e04     movlw   0x4              	MOVLW	0x04
000a20   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a22   ecb4     call    0x4b68, 0        	CALL	_sleep_ms
000a24   f025
000a26   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000a28   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000a2a   d7de     bra     0x9e8            	BRA	_00139_DS_
                                           _00141_DS_:
                                           ;	.line	343; meter_logger.c	fsk_tx_disable();
000a2c   ecc1     call    0x5382, 0        	CALL	_fsk_tx_disable
000a2e   f029
000a30   d011     bra     0xa54            	BRA	_00144_DS_
                                           _00143_DS_:
                                           ;	.line	351; meter_logger.c	fsk_tx_enable();
000a32   ec69     call    0x50d2, 0        	CALL	_fsk_tx_enable
000a34   f028
                                           ;	.line	352; meter_logger.c	fsk_tx_byte(0x0d);
000a36   0e0d     movlw   0xd              	MOVLW	0x0d
000a38   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a3a   ecfa     call    0x51f4, 0        	CALL	_fsk_tx_byte
000a3c   f028
000a3e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	353; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000a40   0e00     movlw   0                	MOVLW	0x00
000a42   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a44   0e04     movlw   0x4              	MOVLW	0x04
000a46   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a48   ecb4     call    0x4b68, 0        	CALL	_sleep_ms
000a4a   f025
000a4c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000a4e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	354; meter_logger.c	fsk_tx_disable();
000a50   ecc1     call    0x5382, 0        	CALL	_fsk_tx_disable
000a52   f029
                                           _00144_DS_:
                                           ;	.line	359; meter_logger.c	fsk_rx_enable();
000a54   ec00     call    0x4e00, 0        	CALL	_fsk_rx_enable
000a56   f027
                                           ;	.line	360; meter_logger.c	break;
000a58   ef65     goto    0xeca            	GOTO	_00165_DS_
000a5a   f007
                                           _00145_DS_:
                                           ;	.line	362; meter_logger.c	fsk_rx_disable();
000a5c   ec03     call    0x5406, 0        	CALL	_fsk_rx_disable
000a5e   f02a
                                           ;	.line	368; meter_logger.c	fsk_rx_enable();
000a60   ec00     call    0x4e00, 0        	CALL	_fsk_rx_enable
000a62   f027
                                           ;	.line	369; meter_logger.c	last_fifo_size = 0;
000a64   6a00     clrf    0, 0             	CLRF	r0x00
000a66   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	370; meter_logger.c	sleep_ms(400);							// sleep 400 ms to let some data come in
000a68   0e01     movlw   0x1              	MOVLW	0x01
000a6a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a6c   0e90     movlw   0x90             	MOVLW	0x90
000a6e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a70   ecb4     call    0x4b68, 0        	CALL	_sleep_ms
000a72   f025
000a74   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000a76   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	371; meter_logger.c	fifo_size = fifo_in_use();
000a78   ec32     call    0x5064, 0        	CALL	_fifo_in_use
000a7a   f028
000a7c   6e02     movwf   0x2, 0           	MOVWF	r0x02
000a7e   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000a80   f003
                                           _00146_DS_:
                                           ;	.line	372; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000a82   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000a84   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000a86   e102     bnz     0xa8c            	BNZ	_00348_DS_
000a88   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000a8a   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00348_DS_:
000a8c   e212     bc      0xab2            	BC	_00148_DS_
                                           ;	.line	373; meter_logger.c	last_fifo_size = fifo_size;
000a8e   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000a90   f000
000a92   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000a94   f001
                                           ;	.line	374; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
000a96   0e00     movlw   0                	MOVLW	0x00
000a98   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a9a   0ec8     movlw   0xc8             	MOVLW	0xc8
000a9c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a9e   ecb4     call    0x4b68, 0        	CALL	_sleep_ms
000aa0   f025
000aa2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000aa4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	375; meter_logger.c	fifo_size = fifo_in_use();
000aa6   ec32     call    0x5064, 0        	CALL	_fifo_in_use
000aa8   f028
000aaa   6e02     movwf   0x2, 0           	MOVWF	r0x02
000aac   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000aae   f003
000ab0   d7e8     bra     0xa82            	BRA	_00146_DS_
                                           _00148_DS_:
                                           ;	.line	377; meter_logger.c	fsk_rx_disable();
000ab2   ec03     call    0x5406, 0        	CALL	_fsk_rx_disable
000ab4   f02a
                                           ;	.line	383; meter_logger.c	sprintf(debug_buffer, "-> ");
000ab6   0e00     movlw   0                	MOVLW	UPPER(__str_7)
000ab8   6e06     movwf   0x6, 0           	MOVWF	r0x06
000aba   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_7)
000abc   6e05     movwf   0x5, 0           	MOVWF	r0x05
000abe   0e88     movlw   0x88             	MOVLW	LOW(__str_7)
000ac0   6e04     movwf   0x4, 0           	MOVWF	r0x04
000ac2   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000ac4   6e08     movwf   0x8, 0           	MOVWF	r0x08
000ac6   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000ac8   6e07     movwf   0x7, 0           	MOVWF	r0x07
000aca   0e80     movlw   0x80             	MOVLW	0x80
000acc   6e09     movwf   0x9, 0           	MOVWF	r0x09
000ace   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000ad0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ad2   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000ad4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ad6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000ad8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ada   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000adc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ade   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000ae0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ae2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000ae4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ae6   ec16     call    0x462c, 0        	CALL	_sprintf
000ae8   f023
000aea   0e06     movlw   0x6              	MOVLW	0x06
000aec   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	384; meter_logger.c	usart_puts(debug_buffer);
000aee   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000af0   6e05     movwf   0x5, 0           	MOVWF	r0x05
000af2   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000af4   6e04     movwf   0x4, 0           	MOVWF	r0x04
000af6   0e80     movlw   0x80             	MOVLW	0x80
000af8   6e06     movwf   0x6, 0           	MOVWF	r0x06
000afa   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000afc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000afe   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000b00   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b02   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000b04   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b06   ec8b     call    0x4d16, 0        	CALL	_usart_puts
000b08   f026
000b0a   0e03     movlw   0x3              	MOVLW	0x03
000b0c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	385; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000b0e   6a04     clrf    0x4, 0           	CLRF	r0x04
000b10   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00186_DS_:
000b12   ec32     call    0x5064, 0        	CALL	_fifo_in_use
000b14   f028
000b16   6e06     movwf   0x6, 0           	MOVWF	r0x06
000b18   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
000b1a   f007
000b1c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000b1e   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000b20   e102     bnz     0xb26            	BNZ	_00349_DS_
000b22   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000b24   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00349_DS_:
000b26   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
000b28   d04c     bra     0xbc2            	BRA	_00149_DS_
                                           ;	.line	387; meter_logger.c	fifo_get(&sub_cmd);
000b2a   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000b2c   6e07     movwf   0x7, 0           	MOVWF	r0x07
000b2e   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
000b30   6e06     movwf   0x6, 0           	MOVWF	r0x06
000b32   0e80     movlw   0x80             	MOVLW	0x80
000b34   6e08     movwf   0x8, 0           	MOVWF	r0x08
000b36   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000b38   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b3a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000b3c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b3e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000b40   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b42   ec9f     call    0x413e, 0        	CALL	_fifo_get
000b44   f020
000b46   0e03     movlw   0x3              	MOVLW	0x03
000b48   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	389; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
000b4a   c551     movff   0x551, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
000b4c   f006
000b4e   6a07     clrf    0x7, 0           	CLRF	r0x07
000b50   0e00     movlw   0                	MOVLW	UPPER(__str_5)
000b52   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000b54   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_5)
000b56   6e09     movwf   0x9, 0           	MOVWF	r0x09
000b58   0e80     movlw   0x80             	MOVLW	LOW(__str_5)
000b5a   6e08     movwf   0x8, 0           	MOVWF	r0x08
000b5c   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000b5e   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
000b60   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000b62   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
000b64   0e80     movlw   0x80             	MOVLW	0x80
000b66   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
000b68   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000b6a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b6c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000b6e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b70   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000b72   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b74   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000b76   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b78   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000b7a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b7c   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000b7e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b80   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000b82   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b84   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000b86   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b88   ec16     call    0x462c, 0        	CALL	_sprintf
000b8a   f023
000b8c   0e08     movlw   0x8              	MOVLW	0x08
000b8e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	390; meter_logger.c	usart_puts(debug_buffer);
000b90   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000b92   6e07     movwf   0x7, 0           	MOVWF	r0x07
000b94   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000b96   6e06     movwf   0x6, 0           	MOVWF	r0x06
000b98   0e80     movlw   0x80             	MOVLW	0x80
000b9a   6e08     movwf   0x8, 0           	MOVWF	r0x08
000b9c   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000b9e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ba0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000ba2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ba4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000ba6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ba8   ec8b     call    0x4d16, 0        	CALL	_usart_puts
000baa   f026
000bac   0e03     movlw   0x3              	MOVLW	0x03
000bae   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000bb0   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	392; meter_logger.c	fifo_put(sub_cmd);
000bb2   5151     movf    0x51, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000bb4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bb6   ecfb     call    0x43f6, 0        	CALL	_fifo_put
000bb8   f021
000bba   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	385; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000bbc   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000bbe   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000bc0   d7a8     bra     0xb12            	BRA	_00186_DS_
                                           _00149_DS_:
                                           ;	.line	394; meter_logger.c	sprintf(debug_buffer, "\n\r");
000bc2   0e00     movlw   0                	MOVLW	UPPER(__str_6)
000bc4   6e06     movwf   0x6, 0           	MOVWF	r0x06
000bc6   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_6)
000bc8   6e05     movwf   0x5, 0           	MOVWF	r0x05
000bca   0e84     movlw   0x84             	MOVLW	LOW(__str_6)
000bcc   6e04     movwf   0x4, 0           	MOVWF	r0x04
000bce   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000bd0   6e08     movwf   0x8, 0           	MOVWF	r0x08
000bd2   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000bd4   6e07     movwf   0x7, 0           	MOVWF	r0x07
000bd6   0e80     movlw   0x80             	MOVLW	0x80
000bd8   6e09     movwf   0x9, 0           	MOVWF	r0x09
000bda   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000bdc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bde   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000be0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000be2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000be4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000be6   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000be8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bea   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000bec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bee   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000bf0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bf2   ec16     call    0x462c, 0        	CALL	_sprintf
000bf4   f023
000bf6   0e06     movlw   0x6              	MOVLW	0x06
000bf8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	395; meter_logger.c	usart_puts(debug_buffer);
000bfa   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000bfc   6e05     movwf   0x5, 0           	MOVWF	r0x05
000bfe   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000c00   6e04     movwf   0x4, 0           	MOVWF	r0x04
000c02   0e80     movlw   0x80             	MOVLW	0x80
000c04   6e06     movwf   0x6, 0           	MOVWF	r0x06
000c06   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000c08   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c0a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000c0c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c0e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000c10   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c12   ec8b     call    0x4d16, 0        	CALL	_usart_puts
000c14   f026
000c16   0e03     movlw   0x3              	MOVLW	0x03
000c18   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	397; meter_logger.c	rs232_7e1_tx_enable(TIMER0_RS232_300);
000c1a   0ee6     movlw   0xe6             	MOVLW	0xe6
000c1c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c1e   0e1b     movlw   0x1b             	MOVLW	0x1b
000c20   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c22   ecb9     call    0x4f72, 0        	CALL	_rs232_7e1_tx_enable
000c24   f027
000c26   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c28   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00150_DS_:
                                           ;	.line	398; meter_logger.c	while (fifo_get(&sub_cmd)) {
000c2a   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000c2c   6e05     movwf   0x5, 0           	MOVWF	r0x05
000c2e   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
000c30   6e04     movwf   0x4, 0           	MOVWF	r0x04
000c32   0e80     movlw   0x80             	MOVLW	0x80
000c34   6e06     movwf   0x6, 0           	MOVWF	r0x06
000c36   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000c38   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c3a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000c3c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c3e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000c40   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c42   ec9f     call    0x413e, 0        	CALL	_fifo_get
000c44   f020
000c46   6e04     movwf   0x4, 0           	MOVWF	r0x04
000c48   0e03     movlw   0x3              	MOVLW	0x03
000c4a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000c4c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000c4e   e00f     bz      0xc6e            	BZ	_00152_DS_
000c50   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	399; meter_logger.c	rs232_7e1_tx_byte(sub_cmd);
000c52   5151     movf    0x51, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000c54   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c56   ec83     call    0x5106, 0        	CALL	_rs232_7e1_tx_byte
000c58   f028
000c5a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	400; meter_logger.c	sleep_ms(RS232_TX_SLEEP);
000c5c   0e00     movlw   0                	MOVLW	0x00
000c5e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c60   0e0c     movlw   0xc              	MOVLW	0x0c
000c62   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c64   ecb4     call    0x4b68, 0        	CALL	_sleep_ms
000c66   f025
000c68   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c6a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c6c   d7de     bra     0xc2a            	BRA	_00150_DS_
                                           _00152_DS_:
                                           ;	.line	402; meter_logger.c	rs232_7e1_tx_disable();
000c6e   ecd7     call    0x53ae, 0        	CALL	_rs232_7e1_tx_disable
000c70   f029
                                           ;	.line	408; meter_logger.c	rs232_7e1_rx_enable(TIMER0_RS232_300);
000c72   0ee6     movlw   0xe6             	MOVLW	0xe6
000c74   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c76   0e1b     movlw   0x1b             	MOVLW	0x1b
000c78   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c7a   ec59     call    0x4eb2, 0        	CALL	_rs232_7e1_rx_enable
000c7c   f027
000c7e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c80   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	409; meter_logger.c	last_fifo_size = 0;
000c82   6a00     clrf    0, 0             	CLRF	r0x00
000c84   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	410; meter_logger.c	sleep_ms(1500);							// sleep 1500 ms to let some data come in
000c86   0e05     movlw   0x5              	MOVLW	0x05
000c88   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c8a   0edc     movlw   0xdc             	MOVLW	0xdc
000c8c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c8e   ecb4     call    0x4b68, 0        	CALL	_sleep_ms
000c90   f025
000c92   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c94   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	411; meter_logger.c	fifo_size = fifo_in_use();
000c96   ec32     call    0x5064, 0        	CALL	_fifo_in_use
000c98   f028
000c9a   6e02     movwf   0x2, 0           	MOVWF	r0x02
000c9c   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000c9e   f003
                                           _00153_DS_:
                                           ;	.line	413; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000ca0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000ca2   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000ca4   e102     bnz     0xcaa            	BNZ	_00350_DS_
000ca6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000ca8   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00350_DS_:
000caa   e212     bc      0xcd0            	BC	_00155_DS_
                                           ;	.line	414; meter_logger.c	last_fifo_size = fifo_size;
000cac   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000cae   f000
000cb0   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000cb2   f001
                                           ;	.line	415; meter_logger.c	sleep_ms(600);						// return data when no data for 600 ms
000cb4   0e02     movlw   0x2              	MOVLW	0x02
000cb6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cb8   0e58     movlw   0x58             	MOVLW	0x58
000cba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cbc   ecb4     call    0x4b68, 0        	CALL	_sleep_ms
000cbe   f025
000cc0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000cc2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	416; meter_logger.c	fifo_size = fifo_in_use();
000cc4   ec32     call    0x5064, 0        	CALL	_fifo_in_use
000cc6   f028
000cc8   6e02     movwf   0x2, 0           	MOVWF	r0x02
000cca   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000ccc   f003
000cce   d7e8     bra     0xca0            	BRA	_00153_DS_
                                           _00155_DS_:
                                           ;	.line	419; meter_logger.c	rs232_7e1_rx_disable();
000cd0   eccc     call    0x5398, 0        	CALL	_rs232_7e1_rx_disable
000cd2   f029
                                           ;	.line	426; meter_logger.c	sprintf(debug_buffer, "<- ");
000cd4   0e00     movlw   0                	MOVLW	UPPER(__str_4)
000cd6   6e02     movwf   0x2, 0           	MOVWF	r0x02
000cd8   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_4)
000cda   6e01     movwf   0x1, 0           	MOVWF	r0x01
000cdc   0e7c     movlw   0x7c             	MOVLW	LOW(__str_4)
000cde   6e00     movwf   0, 0             	MOVWF	r0x00
000ce0   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000ce2   6e04     movwf   0x4, 0           	MOVWF	r0x04
000ce4   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000ce6   6e03     movwf   0x3, 0           	MOVWF	r0x03
000ce8   0e80     movlw   0x80             	MOVLW	0x80
000cea   6e05     movwf   0x5, 0           	MOVWF	r0x05
000cec   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000cee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cf0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000cf2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cf4   5000     movf    0, 0, 0          	MOVF	r0x00, W
000cf6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cf8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000cfa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cfc   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000cfe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d00   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000d02   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d04   ec16     call    0x462c, 0        	CALL	_sprintf
000d06   f023
000d08   0e06     movlw   0x6              	MOVLW	0x06
000d0a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	427; meter_logger.c	usart_puts(debug_buffer);
000d0c   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000d0e   6e01     movwf   0x1, 0           	MOVWF	r0x01
000d10   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000d12   6e00     movwf   0, 0             	MOVWF	r0x00
000d14   0e80     movlw   0x80             	MOVLW	0x80
000d16   6e02     movwf   0x2, 0           	MOVWF	r0x02
000d18   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000d1a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d1c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000d1e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d20   5000     movf    0, 0, 0          	MOVF	r0x00, W
000d22   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d24   ec8b     call    0x4d16, 0        	CALL	_usart_puts
000d26   f026
000d28   0e03     movlw   0x3              	MOVLW	0x03
000d2a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	428; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000d2c   6a00     clrf    0, 0             	CLRF	r0x00
000d2e   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00189_DS_:
000d30   ec32     call    0x5064, 0        	CALL	_fifo_in_use
000d32   f028
000d34   6e02     movwf   0x2, 0           	MOVWF	r0x02
000d36   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000d38   f003
000d3a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000d3c   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000d3e   e102     bnz     0xd44            	BNZ	_00351_DS_
000d40   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000d42   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00351_DS_:
000d44   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
000d46   d04c     bra     0xde0            	BRA	_00156_DS_
                                           ;	.line	430; meter_logger.c	fifo_get(&sub_cmd);
000d48   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000d4a   6e03     movwf   0x3, 0           	MOVWF	r0x03
000d4c   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
000d4e   6e02     movwf   0x2, 0           	MOVWF	r0x02
000d50   0e80     movlw   0x80             	MOVLW	0x80
000d52   6e04     movwf   0x4, 0           	MOVWF	r0x04
000d54   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000d56   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d58   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000d5a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d5c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000d5e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d60   ec9f     call    0x413e, 0        	CALL	_fifo_get
000d62   f020
000d64   0e03     movlw   0x3              	MOVLW	0x03
000d66   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	432; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
000d68   c551     movff   0x551, 0x2       	MOVFF	_main_sub_cmd_1_90, r0x02
000d6a   f002
000d6c   6a03     clrf    0x3, 0           	CLRF	r0x03
000d6e   0e00     movlw   0                	MOVLW	UPPER(__str_5)
000d70   6e06     movwf   0x6, 0           	MOVWF	r0x06
000d72   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_5)
000d74   6e05     movwf   0x5, 0           	MOVWF	r0x05
000d76   0e80     movlw   0x80             	MOVLW	LOW(__str_5)
000d78   6e04     movwf   0x4, 0           	MOVWF	r0x04
000d7a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000d7c   6e08     movwf   0x8, 0           	MOVWF	r0x08
000d7e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000d80   6e07     movwf   0x7, 0           	MOVWF	r0x07
000d82   0e80     movlw   0x80             	MOVLW	0x80
000d84   6e09     movwf   0x9, 0           	MOVWF	r0x09
000d86   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000d88   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d8a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000d8c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d8e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000d90   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d92   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000d94   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d96   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000d98   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d9a   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000d9c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d9e   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000da0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000da2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000da4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000da6   ec16     call    0x462c, 0        	CALL	_sprintf
000da8   f023
000daa   0e08     movlw   0x8              	MOVLW	0x08
000dac   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	433; meter_logger.c	usart_puts(debug_buffer);
000dae   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000db0   6e03     movwf   0x3, 0           	MOVWF	r0x03
000db2   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000db4   6e02     movwf   0x2, 0           	MOVWF	r0x02
000db6   0e80     movlw   0x80             	MOVLW	0x80
000db8   6e04     movwf   0x4, 0           	MOVWF	r0x04
000dba   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000dbc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000dbe   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000dc0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000dc2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000dc4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000dc6   ec8b     call    0x4d16, 0        	CALL	_usart_puts
000dc8   f026
000dca   0e03     movlw   0x3              	MOVLW	0x03
000dcc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000dce   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	435; meter_logger.c	fifo_put(sub_cmd);
000dd0   5151     movf    0x51, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000dd2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000dd4   ecfb     call    0x43f6, 0        	CALL	_fifo_put
000dd6   f021
000dd8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	428; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000dda   4a00     infsnz  0, 0x1, 0        	INFSNZ	r0x00, F
000ddc   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
000dde   d7a8     bra     0xd30            	BRA	_00189_DS_
                                           _00156_DS_:
                                           ;	.line	437; meter_logger.c	sprintf(debug_buffer, "\n\r");
000de0   0e00     movlw   0                	MOVLW	UPPER(__str_6)
000de2   6e02     movwf   0x2, 0           	MOVWF	r0x02
000de4   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_6)
000de6   6e01     movwf   0x1, 0           	MOVWF	r0x01
000de8   0e84     movlw   0x84             	MOVLW	LOW(__str_6)
000dea   6e00     movwf   0, 0             	MOVWF	r0x00
000dec   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000dee   6e04     movwf   0x4, 0           	MOVWF	r0x04
000df0   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000df2   6e03     movwf   0x3, 0           	MOVWF	r0x03
000df4   0e80     movlw   0x80             	MOVLW	0x80
000df6   6e05     movwf   0x5, 0           	MOVWF	r0x05
000df8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000dfa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000dfc   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000dfe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e00   5000     movf    0, 0, 0          	MOVF	r0x00, W
000e02   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e04   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000e06   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e08   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000e0a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e0c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000e0e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e10   ec16     call    0x462c, 0        	CALL	_sprintf
000e12   f023
000e14   0e06     movlw   0x6              	MOVLW	0x06
000e16   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	438; meter_logger.c	usart_puts(debug_buffer);
000e18   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000e1a   6e01     movwf   0x1, 0           	MOVWF	r0x01
000e1c   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000e1e   6e00     movwf   0, 0             	MOVWF	r0x00
000e20   0e80     movlw   0x80             	MOVLW	0x80
000e22   6e02     movwf   0x2, 0           	MOVWF	r0x02
000e24   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000e26   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e28   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000e2a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e2c   5000     movf    0, 0, 0          	MOVF	r0x00, W
000e2e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e30   ec8b     call    0x4d16, 0        	CALL	_usart_puts
000e32   f026
000e34   0e03     movlw   0x3              	MOVLW	0x03
000e36   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	440; meter_logger.c	if (fifo_in_use()) {
000e38   ec32     call    0x5064, 0        	CALL	_fifo_in_use
000e3a   f028
000e3c   6e00     movwf   0, 0             	MOVWF	r0x00
000e3e   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
000e40   f001
000e42   5000     movf    0, 0, 0          	MOVF	r0x00, W
000e44   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
000e46   e027     bz      0xe96            	BZ	_00161_DS_
                                           ;	.line	442; meter_logger.c	fsk_tx_enable();
000e48   ec69     call    0x50d2, 0        	CALL	_fsk_tx_enable
000e4a   f028
                                           _00157_DS_:
                                           ;	.line	443; meter_logger.c	while (fifo_get(&sub_cmd)) {
000e4c   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000e4e   6e01     movwf   0x1, 0           	MOVWF	r0x01
000e50   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
000e52   6e00     movwf   0, 0             	MOVWF	r0x00
000e54   0e80     movlw   0x80             	MOVLW	0x80
000e56   6e02     movwf   0x2, 0           	MOVWF	r0x02
000e58   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000e5a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e5c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000e5e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e60   5000     movf    0, 0, 0          	MOVF	r0x00, W
000e62   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e64   ec9f     call    0x413e, 0        	CALL	_fifo_get
000e66   f020
000e68   6e00     movwf   0, 0             	MOVWF	r0x00
000e6a   0e03     movlw   0x3              	MOVLW	0x03
000e6c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000e6e   5000     movf    0, 0, 0          	MOVF	r0x00, W
000e70   e00f     bz      0xe90            	BZ	_00159_DS_
000e72   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	444; meter_logger.c	fsk_tx_byte(sub_cmd);
000e74   5151     movf    0x51, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000e76   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e78   ecfa     call    0x51f4, 0        	CALL	_fsk_tx_byte
000e7a   f028
000e7c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	445; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000e7e   0e00     movlw   0                	MOVLW	0x00
000e80   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e82   0e04     movlw   0x4              	MOVLW	0x04
000e84   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e86   ecb4     call    0x4b68, 0        	CALL	_sleep_ms
000e88   f025
000e8a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000e8c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000e8e   d7de     bra     0xe4c            	BRA	_00157_DS_
                                           _00159_DS_:
                                           ;	.line	447; meter_logger.c	fsk_tx_disable();
000e90   ecc1     call    0x5382, 0        	CALL	_fsk_tx_disable
000e92   f029
000e94   d011     bra     0xeb8            	BRA	_00162_DS_
                                           _00161_DS_:
                                           ;	.line	455; meter_logger.c	fsk_tx_enable();
000e96   ec69     call    0x50d2, 0        	CALL	_fsk_tx_enable
000e98   f028
                                           ;	.line	456; meter_logger.c	fsk_tx_byte(0x0d);
000e9a   0e0d     movlw   0xd              	MOVLW	0x0d
000e9c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e9e   ecfa     call    0x51f4, 0        	CALL	_fsk_tx_byte
000ea0   f028
000ea2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	457; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000ea4   0e00     movlw   0                	MOVLW	0x00
000ea6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ea8   0e04     movlw   0x4              	MOVLW	0x04
000eaa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000eac   ecb4     call    0x4b68, 0        	CALL	_sleep_ms
000eae   f025
000eb0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000eb2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	458; meter_logger.c	fsk_tx_disable();
000eb4   ecc1     call    0x5382, 0        	CALL	_fsk_tx_disable
000eb6   f029
                                           _00162_DS_:
                                           ;	.line	463; meter_logger.c	fsk_rx_enable();
000eb8   ec00     call    0x4e00, 0        	CALL	_fsk_rx_enable
000eba   f027
                                           ;	.line	464; meter_logger.c	break;
000ebc   d006     bra     0xeca            	BRA	_00165_DS_
                                           _00163_DS_:
                                           ;	.line	466; meter_logger.c	fsk_rx_disable();
000ebe   ec03     call    0x5406, 0        	CALL	_fsk_rx_disable
000ec0   f02a
                                           ;	.line	467; meter_logger.c	get_battery_level();
000ec2   ecd4     call    0x37a8, 0        	CALL	_get_battery_level
000ec4   f01b
                                           ;	.line	468; meter_logger.c	fsk_rx_enable();
000ec6   ec00     call    0x4e00, 0        	CALL	_fsk_rx_enable
000ec8   f027
                                           _00165_DS_:
                                           ;	.line	473; meter_logger.c	while (fifo_in_use()) {
000eca   ec32     call    0x5064, 0        	CALL	_fifo_in_use
000ecc   f028
000ece   6e00     movwf   0, 0             	MOVWF	r0x00
000ed0   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
000ed2   f001
000ed4   5000     movf    0, 0, 0          	MOVF	r0x00, W
000ed6   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
000ed8   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
000eda   efa9     goto    0x152            	GOTO	_00171_DS_
000edc   f000
                                           ;	.line	474; meter_logger.c	fifo_get(&sub_cmd);
000ede   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000ee0   6e01     movwf   0x1, 0           	MOVWF	r0x01
000ee2   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
000ee4   6e00     movwf   0, 0             	MOVWF	r0x00
000ee6   0e80     movlw   0x80             	MOVLW	0x80
000ee8   6e02     movwf   0x2, 0           	MOVWF	r0x02
000eea   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000eec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000eee   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000ef0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ef2   5000     movf    0, 0, 0          	MOVF	r0x00, W
000ef4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ef6   ec9f     call    0x413e, 0        	CALL	_fifo_get
000ef8   f020
000efa   0e03     movlw   0x3              	MOVLW	0x03
000efc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000efe   d7e5     bra     0xeca            	BRA	_00165_DS_
000f00   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger___debug2	code
                                           __debug2:
                                           ;	.line	4663; meter_logger.c	void _debug2() {
004852   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004854   ffe5
004856   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004858   ffd9
                                           ;	.line	4664; meter_logger.c	DEBUG2_PIN = 0x1;
00485a   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
00485c   0000     nop                      	nop
00485e   0000     nop                      	nop
004860   0000     nop                      	nop
004862   0000     nop                      	nop
004864   0000     nop                      	nop
004866   0000     nop                      	nop
004868   0000     nop                      	nop
00486a   0000     nop                      	nop
00486c   0000     nop                      	nop
00486e   0000     nop                      	nop
004870   0000     nop                      	nop
004872   0000     nop                      	nop
004874   0000     nop                      	nop
004876   0000     nop                      	nop
004878   0000     nop                      	nop
00487a   0000     nop                      	nop
00487c   0000     nop                      	nop
00487e   0000     nop                      	nop
004880   0000     nop                      	nop
004882   0000     nop                      	nop
004884   0000     nop                      	nop
004886   0000     nop                      	nop
004888   0000     nop                      	nop
00488a   0000     nop                      	nop
00488c   0000     nop                      	nop
00488e   0000     nop                      	nop
004890   0000     nop                      	nop
004892   0000     nop                      	nop
004894   0000     nop                      	nop
004896   0000     nop                      	nop
004898   0000     nop                      	nop
00489a   0000     nop                      	nop
00489c   0000     nop                      	nop
00489e   0000     nop                      	nop
0048a0   0000     nop                      	nop
0048a2   0000     nop                      	nop
0048a4   0000     nop                      	nop
0048a6   0000     nop                      	nop
0048a8   0000     nop                      	nop
0048aa   0000     nop                      	nop
0048ac   0000     nop                      	nop
0048ae   0000     nop                      	nop
0048b0   0000     nop                      	nop
0048b2   0000     nop                      	nop
0048b4   0000     nop                      	nop
                                           	
                                           ;	.line	4712; meter_logger.c	DEBUG2_PIN = 0x0;
0048b6   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
0048b8   0000     nop                      	nop
0048ba   0000     nop                      	nop
0048bc   0000     nop                      	nop
0048be   0000     nop                      	nop
0048c0   0000     nop                      	nop
0048c2   0000     nop                      	nop
0048c4   0000     nop                      	nop
0048c6   0000     nop                      	nop
0048c8   0000     nop                      	nop
0048ca   0000     nop                      	nop
0048cc   0000     nop                      	nop
0048ce   0000     nop                      	nop
0048d0   0000     nop                      	nop
0048d2   0000     nop                      	nop
0048d4   0000     nop                      	nop
0048d6   0000     nop                      	nop
0048d8   0000     nop                      	nop
0048da   0000     nop                      	nop
0048dc   0000     nop                      	nop
0048de   0000     nop                      	nop
0048e0   0000     nop                      	nop
0048e2   0000     nop                      	nop
0048e4   0000     nop                      	nop
0048e6   0000     nop                      	nop
0048e8   0000     nop                      	nop
0048ea   0000     nop                      	nop
0048ec   0000     nop                      	nop
0048ee   0000     nop                      	nop
0048f0   0000     nop                      	nop
0048f2   0000     nop                      	nop
0048f4   0000     nop                      	nop
0048f6   0000     nop                      	nop
0048f8   0000     nop                      	nop
0048fa   0000     nop                      	nop
0048fc   0000     nop                      	nop
0048fe   0000     nop                      	nop
004900   0000     nop                      	nop
004902   0000     nop                      	nop
004904   0000     nop                      	nop
004906   0000     nop                      	nop
004908   0000     nop                      	nop
00490a   0000     nop                      	nop
00490c   0000     nop                      	nop
00490e   0000     nop                      	nop
004910   0000     nop                      	nop
                                           	
004912   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004914   ffd9
004916   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger___debug	code
                                           __debug:
                                           ;	.line	4563; meter_logger.c	void _debug() {
004918   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00491a   ffe5
00491c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00491e   ffd9
                                           ;	.line	4564; meter_logger.c	DEBUG_PIN = 0x1;
004920   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
004922   0000     nop                      	nop
004924   0000     nop                      	nop
004926   0000     nop                      	nop
004928   0000     nop                      	nop
00492a   0000     nop                      	nop
00492c   0000     nop                      	nop
00492e   0000     nop                      	nop
004930   0000     nop                      	nop
004932   0000     nop                      	nop
004934   0000     nop                      	nop
004936   0000     nop                      	nop
004938   0000     nop                      	nop
00493a   0000     nop                      	nop
00493c   0000     nop                      	nop
00493e   0000     nop                      	nop
004940   0000     nop                      	nop
004942   0000     nop                      	nop
004944   0000     nop                      	nop
004946   0000     nop                      	nop
004948   0000     nop                      	nop
00494a   0000     nop                      	nop
00494c   0000     nop                      	nop
00494e   0000     nop                      	nop
004950   0000     nop                      	nop
004952   0000     nop                      	nop
004954   0000     nop                      	nop
004956   0000     nop                      	nop
004958   0000     nop                      	nop
00495a   0000     nop                      	nop
00495c   0000     nop                      	nop
00495e   0000     nop                      	nop
004960   0000     nop                      	nop
004962   0000     nop                      	nop
004964   0000     nop                      	nop
004966   0000     nop                      	nop
004968   0000     nop                      	nop
00496a   0000     nop                      	nop
00496c   0000     nop                      	nop
00496e   0000     nop                      	nop
004970   0000     nop                      	nop
004972   0000     nop                      	nop
004974   0000     nop                      	nop
004976   0000     nop                      	nop
004978   0000     nop                      	nop
00497a   0000     nop                      	nop
                                           	
                                           ;	.line	4612; meter_logger.c	DEBUG_PIN = 0x0;
00497c   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
00497e   0000     nop                      	nop
004980   0000     nop                      	nop
004982   0000     nop                      	nop
004984   0000     nop                      	nop
004986   0000     nop                      	nop
004988   0000     nop                      	nop
00498a   0000     nop                      	nop
00498c   0000     nop                      	nop
00498e   0000     nop                      	nop
004990   0000     nop                      	nop
004992   0000     nop                      	nop
004994   0000     nop                      	nop
004996   0000     nop                      	nop
004998   0000     nop                      	nop
00499a   0000     nop                      	nop
00499c   0000     nop                      	nop
00499e   0000     nop                      	nop
0049a0   0000     nop                      	nop
0049a2   0000     nop                      	nop
0049a4   0000     nop                      	nop
0049a6   0000     nop                      	nop
0049a8   0000     nop                      	nop
0049aa   0000     nop                      	nop
0049ac   0000     nop                      	nop
0049ae   0000     nop                      	nop
0049b0   0000     nop                      	nop
0049b2   0000     nop                      	nop
0049b4   0000     nop                      	nop
0049b6   0000     nop                      	nop
0049b8   0000     nop                      	nop
0049ba   0000     nop                      	nop
0049bc   0000     nop                      	nop
0049be   0000     nop                      	nop
0049c0   0000     nop                      	nop
0049c2   0000     nop                      	nop
0049c4   0000     nop                      	nop
0049c6   0000     nop                      	nop
0049c8   0000     nop                      	nop
0049ca   0000     nop                      	nop
0049cc   0000     nop                      	nop
0049ce   0000     nop                      	nop
0049d0   0000     nop                      	nop
0049d2   0000     nop                      	nop
0049d4   0000     nop                      	nop
0049d6   0000     nop                      	nop
                                           	
0049d8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0049da   ffd9
0049dc   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__flash_led	code
                                           _flash_led:
                                           ;	.line	4558; meter_logger.c	void flash_led(unsigned char ms) {
0052c6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0052c8   ffe5
0052ca   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0052cc   ffd9
0052ce   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0052d0   ffe5
0052d2   0e02     movlw   0x2              	MOVLW	0x02
0052d4   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0052d6   f000
                                           ;	.line	4559; meter_logger.c	led_flash.timer = ms;
0052d8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0052da   0105     movlb   0x5              	BANKSEL	(_led_flash + 1)
0052dc   6f4e     movwf   0x4e, 0x1        	MOVWF	(_led_flash + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	4560; meter_logger.c	led_flash.state = LED_FLASH_RUN;
0052de   6b4d     clrf    0x4d, 0x1        	CLRF	_led_flash, B
0052e0   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0052e2   f000
0052e4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0052e6   ffd9
0052e8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__get_battery_level	code
                                           _get_battery_level:
                                           ;	.line	4527; meter_logger.c	unsigned int get_battery_level() {
0037a8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0037aa   ffe5
0037ac   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0037ae   ffd9
0037b0   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0037b2   ffe5
0037b4   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0037b6   ffe5
0037b8   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0037ba   ffe5
0037bc   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0037be   ffe5
0037c0   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0037c2   ffe5
0037c4   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0037c6   ffe5
0037c8   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0037ca   ffe5
0037cc   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
0037ce   ffe5
                                           ;	.line	4531; meter_logger.c	adc_open(ADC_CHN_4 , ADC_FOSC_64, ADC_CFG_5A, ADC_FRM_RJUST | ADC_INT_OFF | ADC_VCFG_VDD_VSS);
0037d0   0e80     movlw   0x80             	MOVLW	0x80
0037d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037d4   0e0a     movlw   0xa              	MOVLW	0x0a
0037d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037d8   0e06     movlw   0x6              	MOVLW	0x06
0037da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037dc   0e04     movlw   0x4              	MOVLW	0x04
0037de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037e0   ec4d     call    0x4c9a, 0        	CALL	_adc_open
0037e2   f026
0037e4   0e04     movlw   0x4              	MOVLW	0x04
0037e6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4533; meter_logger.c	adc_setchannel(ADC_CHN_4);
0037e8   0e04     movlw   0x4              	MOVLW	0x04
0037ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037ec   ec15     call    0x502a, 0        	CALL	_adc_setchannel
0037ee   f028
0037f0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	4534; meter_logger.c	adc_conv();
0037f2   ec0a     call    0x14, 0          	CALL	_adc_conv
0037f4   f000
                                           _01195_DS_:
                                           ;	.line	4535; meter_logger.c	while(adc_busy()) {
0037f6   ec39     call    0x5472, 0        	CALL	_adc_busy
0037f8   f02a
0037fa   6e00     movwf   0, 0             	MOVWF	r0x00
0037fc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0037fe   e1fb     bnz     0x37f6           	BNZ	_01195_DS_
                                           ;	.line	4539; meter_logger.c	dev_id = get_dev_id();
003800   ecc7     call    0x4d8e, 0        	CALL	_get_dev_id
003802   f026
003804   6e00     movwf   0, 0             	MOVWF	r0x00
003806   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003808   f001
                                           ;	.line	4540; meter_logger.c	if (dev_id == 0x1240) {
00380a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00380c   0a40     xorlw   0x40             	XORLW	0x40
00380e   e103     bnz     0x3816           	BNZ	_01218_DS_
003810   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003812   0a12     xorlw   0x12             	XORLW	0x12
003814   e001     bz      0x3818           	BZ	_01219_DS_
                                           _01218_DS_:
003816   d041     bra     0x389a           	BRA	_01202_DS_
                                           _01219_DS_:
                                           ;	.line	4542; meter_logger.c	v_level = (unsigned long)1000 * (unsigned long)adc_read() * (unsigned long)833/(unsigned long)93600;
003818   ec31     call    0x5462, 0        	CALL	_adc_read
00381a   f02a
00381c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00381e   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
003820   f003
003822   6ae8     clrf    0xe8, 0          	CLRF	WREG
003824   be03     btfsc   0x3, 0x7, 0      	BTFSC	r0x03, 7
003826   0eff     movlw   0xff             	MOVLW	0xff
003828   6e04     movwf   0x4, 0           	MOVWF	r0x04
00382a   6e05     movwf   0x5, 0           	MOVWF	r0x05
00382c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00382e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003830   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003832   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003834   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003836   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003838   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00383a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00383c   0e00     movlw   0                	MOVLW	0x00
00383e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003840   0e0c     movlw   0xc              	MOVLW	0x0c
003842   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003844   0eb5     movlw   0xb5             	MOVLW	0xb5
003846   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003848   0ee8     movlw   0xe8             	MOVLW	0xe8
00384a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00384c   ece9     call    0x39d2, 0        	CALL	__mullong
00384e   f01c
003850   6e02     movwf   0x2, 0           	MOVWF	r0x02
003852   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
003854   f003
003856   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
003858   f004
00385a   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
00385c   f005
00385e   0e08     movlw   0x8              	MOVLW	0x08
003860   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003862   0e00     movlw   0                	MOVLW	0x00
003864   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003866   0e01     movlw   0x1              	MOVLW	0x01
003868   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00386a   0e6d     movlw   0x6d             	MOVLW	0x6d
00386c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00386e   0ea0     movlw   0xa0             	MOVLW	0xa0
003870   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003872   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003874   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003876   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003878   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00387a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00387c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00387e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003880   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003882   ec8a     call    0x4514, 0        	CALL	__divulong
003884   f022
003886   6e02     movwf   0x2, 0           	MOVWF	r0x02
003888   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00388a   f003
00388c   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
00388e   f004
003890   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
003892   f005
003894   0e08     movlw   0x8              	MOVLW	0x08
003896   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003898   d054     bra     0x3942           	BRA	_01203_DS_
                                           _01202_DS_:
                                           ;	.line	4544; meter_logger.c	else if (dev_id == 0x2a40) {
00389a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00389c   0a40     xorlw   0x40             	XORLW	0x40
00389e   e103     bnz     0x38a6           	BNZ	_01220_DS_
0038a0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0038a2   0a2a     xorlw   0x2a             	XORLW	0x2a
0038a4   e001     bz      0x38a8           	BZ	_01221_DS_
                                           _01220_DS_:
0038a6   d04b     bra     0x393e           	BRA	_01199_DS_
                                           _01221_DS_:
                                           ;	.line	4546; meter_logger.c	v_level = (unsigned long)1000 * (unsigned long)(adc_read() >> 2) * (unsigned long)833/(unsigned long)93600;
0038a8   ec31     call    0x5462, 0        	CALL	_adc_read
0038aa   f02a
0038ac   6e00     movwf   0, 0             	MOVWF	r0x00
0038ae   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0038b0   f001
0038b2   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
0038b4   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
0038b6   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
0038b8   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
0038ba   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
0038bc   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
0038be   6ae8     clrf    0xe8, 0          	CLRF	WREG
0038c0   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0038c2   0eff     movlw   0xff             	MOVLW	0xff
0038c4   6e04     movwf   0x4, 0           	MOVWF	r0x04
0038c6   6e05     movwf   0x5, 0           	MOVWF	r0x05
0038c8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0038ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038cc   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0038ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038d0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0038d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038d4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0038d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038d8   0e00     movlw   0                	MOVLW	0x00
0038da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038dc   0e0c     movlw   0xc              	MOVLW	0x0c
0038de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038e0   0eb5     movlw   0xb5             	MOVLW	0xb5
0038e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038e4   0ee8     movlw   0xe8             	MOVLW	0xe8
0038e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038e8   ece9     call    0x39d2, 0        	CALL	__mullong
0038ea   f01c
0038ec   6e00     movwf   0, 0             	MOVWF	r0x00
0038ee   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0038f0   f001
0038f2   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
0038f4   f004
0038f6   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
0038f8   f005
0038fa   0e08     movlw   0x8              	MOVLW	0x08
0038fc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0038fe   0e00     movlw   0                	MOVLW	0x00
003900   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003902   0e01     movlw   0x1              	MOVLW	0x01
003904   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003906   0e6d     movlw   0x6d             	MOVLW	0x6d
003908   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00390a   0ea0     movlw   0xa0             	MOVLW	0xa0
00390c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00390e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003910   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003912   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003914   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003916   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003918   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00391a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00391c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00391e   ec8a     call    0x4514, 0        	CALL	__divulong
003920   f022
003922   6e00     movwf   0, 0             	MOVWF	r0x00
003924   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003926   f001
003928   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
00392a   f004
00392c   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
00392e   f005
003930   0e08     movlw   0x8              	MOVLW	0x08
003932   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003934   5000     movf    0, 0, 0          	MOVF	r0x00, W
003936   6e02     movwf   0x2, 0           	MOVWF	r0x02
003938   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00393a   6e03     movwf   0x3, 0           	MOVWF	r0x03
00393c   d002     bra     0x3942           	BRA	_01203_DS_
                                           _01199_DS_:
                                           ;	.line	4549; meter_logger.c	v_level = 0;
00393e   6a02     clrf    0x2, 0           	CLRF	r0x02
003940   6a03     clrf    0x3, 0           	CLRF	r0x03
                                           _01203_DS_:
                                           ;	.line	4551; meter_logger.c	sprintf(debug_buffer, "Battery: %dmV\n\r", v_level);
003942   0e00     movlw   0                	MOVLW	UPPER(__str_8)
003944   6e04     movwf   0x4, 0           	MOVWF	r0x04
003946   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_8)
003948   6e01     movwf   0x1, 0           	MOVWF	r0x01
00394a   0e8c     movlw   0x8c             	MOVLW	LOW(__str_8)
00394c   6e00     movwf   0, 0             	MOVWF	r0x00
00394e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
003950   6e06     movwf   0x6, 0           	MOVWF	r0x06
003952   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
003954   6e05     movwf   0x5, 0           	MOVWF	r0x05
003956   0e80     movlw   0x80             	MOVLW	0x80
003958   6e07     movwf   0x7, 0           	MOVWF	r0x07
00395a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00395c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00395e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003960   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003962   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003964   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003966   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003968   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00396a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00396c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00396e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003970   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003972   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003974   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003976   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003978   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00397a   ec16     call    0x462c, 0        	CALL	_sprintf
00397c   f023
00397e   0e08     movlw   0x8              	MOVLW	0x08
003980   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4552; meter_logger.c	usart_puts(debug_buffer);	
003982   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
003984   6e01     movwf   0x1, 0           	MOVWF	r0x01
003986   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
003988   6e00     movwf   0, 0             	MOVWF	r0x00
00398a   0e80     movlw   0x80             	MOVLW	0x80
00398c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00398e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003990   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003992   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003994   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003996   5000     movf    0, 0, 0          	MOVF	r0x00, W
003998   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00399a   ec8b     call    0x4d16, 0        	CALL	_usart_puts
00399c   f026
00399e   0e03     movlw   0x3              	MOVLW	0x03
0039a0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4554; meter_logger.c	adc_close();
0039a2   ec44     call    0x5488, 0        	CALL	_adc_close
0039a4   f02a
                                           ;	.line	4555; meter_logger.c	return v_level;
0039a6   c003     movff   0x3, 0xff3       	MOVFF	r0x03, PRODL
0039a8   fff3
0039aa   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0039ac   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
0039ae   f007
0039b0   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
0039b2   f006
0039b4   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0039b6   f005
0039b8   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0039ba   f004
0039bc   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0039be   f003
0039c0   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0039c2   f002
0039c4   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0039c6   f001
0039c8   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0039ca   f000
0039cc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0039ce   ffd9
0039d0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_snoop	code
                                           _fifo_snoop:
                                           ;	.line	4504; meter_logger.c	unsigned char fifo_snoop(unsigned char *c, unsigned int pos) {
003f9e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003fa0   ffe5
003fa2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003fa4   ffd9
003fa6   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003fa8   ffe5
003faa   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003fac   ffe5
003fae   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003fb0   ffe5
003fb2   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003fb4   ffe5
003fb6   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003fb8   ffe5
003fba   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003fbc   ffe5
003fbe   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003fc0   ffe5
003fc2   0e02     movlw   0x2              	MOVLW	0x02
003fc4   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003fc6   f000
003fc8   0e03     movlw   0x3              	MOVLW	0x03
003fca   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003fcc   f001
003fce   0e04     movlw   0x4              	MOVLW	0x04
003fd0   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
003fd2   f002
003fd4   0e05     movlw   0x5              	MOVLW	0x05
003fd6   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
003fd8   f003
003fda   0e06     movlw   0x6              	MOVLW	0x06
003fdc   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
003fde   f004
                                           ;	.line	4505; meter_logger.c	if (fifo_in_use() > (pos)) {
003fe0   ec32     call    0x5064, 0        	CALL	_fifo_in_use
003fe2   f028
003fe4   6e05     movwf   0x5, 0           	MOVWF	r0x05
003fe6   cff3     movff   0xff3, 0x6       	MOVFF	PRODL, r0x06
003fe8   f006
003fea   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003fec   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
003fee   e102     bnz     0x3ff4           	BNZ	_01188_DS_
003ff0   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003ff2   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _01188_DS_:
003ff4   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003ff6   d091     bra     0x411a           	BRA	_01178_DS_
003ff8   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
                                           ;	.line	4506; meter_logger.c	switch (fifo_tail/QUEUE_SIZE) {
003ffa   5146     movf    0x46, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
003ffc   6e05     movwf   0x5, 0           	MOVWF	r0x05
003ffe   6a06     clrf    0x6, 0           	CLRF	r0x06
004000   0e00     movlw   0                	MOVLW	0x00
004002   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
004004   e102     bnz     0x400a           	BNZ	_01189_DS_
004006   0e04     movlw   0x4              	MOVLW	0x04
004008   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
                                           _01189_DS_:
00400a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00400c   d084     bra     0x4116           	BRA	_01176_DS_
00400e   6afa     clrf    0xfa, 0          	CLRF	PCLATH
004010   6afb     clrf    0xfb, 0          	CLRF	PCLATU
004012   3405     rlcf    0x5, 0, 0        	RLCF	r0x05, W
004014   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
004016   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
004018   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00401a   0bfc     andlw   0xfc             	ANDLW	0xfc
00401c   0f2c     addlw   0x2c             	ADDLW	LOW(_01190_DS_)
00401e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004020   0e40     movlw   0x40             	MOVLW	HIGH(_01190_DS_)
004022   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
004024   0e00     movlw   0                	MOVLW	UPPER(_01190_DS_)
004026   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
004028   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
00402a   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01190_DS_:
00402c   ef1e     goto    0x403c           	GOTO	_01172_DS_
00402e   f020
004030   ef3a     goto    0x4074           	GOTO	_01173_DS_
004032   f020
004034   ef56     goto    0x40ac           	GOTO	_01174_DS_
004036   f020
004038   ef72     goto    0x40e4           	GOTO	_01175_DS_
00403a   f020
                                           _01172_DS_:
                                           ;	.line	4508; meter_logger.c	*c = fifo_buffer_0[(fifo_tail + pos) % QUEUE_SIZE];
00403c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00403e   0105     movlb   0x5              	BANKSEL	_fifo_tail
004040   2545     addwf   0x45, 0, 0x1     	ADDWF	_fifo_tail, W, B
004042   6e05     movwf   0x5, 0           	MOVWF	r0x05
004044   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
004046   2146     addwfc  0x46, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
004048   6e06     movwf   0x6, 0           	MOVWF	r0x06
00404a   6a06     clrf    0x6, 0           	CLRF	r0x06
00404c   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
00404e   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
004050   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
004052   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
004054   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
004056   ffe9
004058   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
00405a   ffea
00405c   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
00405e   f005
004060   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004062   ffe5
004064   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004066   ffe9
004068   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00406a   fff3
00406c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00406e   ecf8     call    0x53f0, 0        	CALL	__gptrput1
004070   f029
                                           ;	.line	4509; meter_logger.c	break;
004072   d051     bra     0x4116           	BRA	_01176_DS_
                                           _01173_DS_:
                                           ;	.line	4511; meter_logger.c	*c = fifo_buffer_1[(fifo_tail + pos) % QUEUE_SIZE];
004074   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004076   0105     movlb   0x5              	BANKSEL	_fifo_tail
004078   2545     addwf   0x45, 0, 0x1     	ADDWF	_fifo_tail, W, B
00407a   6e05     movwf   0x5, 0           	MOVWF	r0x05
00407c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
00407e   2146     addwfc  0x46, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
004080   6e06     movwf   0x6, 0           	MOVWF	r0x06
004082   6a06     clrf    0x6, 0           	CLRF	r0x06
004084   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
004086   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
004088   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
00408a   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
00408c   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
00408e   ffe9
004090   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
004092   ffea
004094   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
004096   f005
004098   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00409a   ffe5
00409c   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00409e   ffe9
0040a0   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0040a2   fff3
0040a4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0040a6   ecf8     call    0x53f0, 0        	CALL	__gptrput1
0040a8   f029
                                           ;	.line	4512; meter_logger.c	break;
0040aa   d035     bra     0x4116           	BRA	_01176_DS_
                                           _01174_DS_:
                                           ;	.line	4514; meter_logger.c	*c = fifo_buffer_2[(fifo_tail + pos) % QUEUE_SIZE];
0040ac   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0040ae   0105     movlb   0x5              	BANKSEL	_fifo_tail
0040b0   2545     addwf   0x45, 0, 0x1     	ADDWF	_fifo_tail, W, B
0040b2   6e05     movwf   0x5, 0           	MOVWF	r0x05
0040b4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
0040b6   2146     addwfc  0x46, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
0040b8   6e06     movwf   0x6, 0           	MOVWF	r0x06
0040ba   6a06     clrf    0x6, 0           	CLRF	r0x06
0040bc   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
0040be   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
0040c0   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
0040c2   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0040c4   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
0040c6   ffe9
0040c8   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
0040ca   ffea
0040cc   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
0040ce   f005
0040d0   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0040d2   ffe5
0040d4   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0040d6   ffe9
0040d8   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0040da   fff3
0040dc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0040de   ecf8     call    0x53f0, 0        	CALL	__gptrput1
0040e0   f029
                                           ;	.line	4515; meter_logger.c	break;
0040e2   d019     bra     0x4116           	BRA	_01176_DS_
                                           _01175_DS_:
0040e4   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4517; meter_logger.c	*c = fifo_buffer_3[(fifo_tail + pos) % QUEUE_SIZE];
0040e6   5145     movf    0x45, 0, 0x1     	MOVF	_fifo_tail, W, B
0040e8   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
                                           ; removed redundant BANKSEL
0040ea   5146     movf    0x46, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
0040ec   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0040ee   6a04     clrf    0x4, 0           	CLRF	r0x04
0040f0   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
0040f2   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
0040f4   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
0040f6   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0040f8   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0040fa   ffe9
0040fc   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0040fe   ffea
004100   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
004102   f003
004104   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004106   ffe5
004108   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00410a   ffe9
00410c   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00410e   fff3
004110   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004112   ecf8     call    0x53f0, 0        	CALL	__gptrput1
004114   f029
                                           _01176_DS_:
                                           ;	.line	4520; meter_logger.c	return 1;
004116   0e01     movlw   0x1              	MOVLW	0x01
004118   d001     bra     0x411c           	BRA	_01180_DS_
                                           _01178_DS_:
                                           ;	.line	4523; meter_logger.c	return 0;
00411a   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _01180_DS_:
00411c   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
00411e   f006
004120   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
004122   f005
004124   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004126   f004
004128   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00412a   f003
00412c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00412e   f002
004130   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004132   f001
004134   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004136   f000
004138   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00413a   ffd9
00413c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_get	code
                                           _fifo_get:
                                           ;	.line	4476; meter_logger.c	unsigned char fifo_get(unsigned char *c) {
00413e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004140   ffe5
004142   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004144   ffd9
004146   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004148   ffe5
00414a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00414c   ffe5
00414e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004150   ffe5
004152   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004154   ffe5
004156   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004158   ffe5
00415a   0e02     movlw   0x2              	MOVLW	0x02
00415c   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00415e   f000
004160   0e03     movlw   0x3              	MOVLW	0x03
004162   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004164   f001
004166   0e04     movlw   0x4              	MOVLW	0x04
004168   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
00416a   f002
                                           ;	.line	4477; meter_logger.c	if (fifo_in_use() != 0) {
00416c   ec32     call    0x5064, 0        	CALL	_fifo_in_use
00416e   f028
004170   6e03     movwf   0x3, 0           	MOVWF	r0x03
004172   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
004174   f004
004176   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004178   1004     iorwf   0x4, 0, 0        	IORWF	r0x04, W
00417a   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
00417c   d091     bra     0x42a0           	BRA	_01147_DS_
00417e   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
                                           ;	.line	4478; meter_logger.c	switch (fifo_tail/QUEUE_SIZE) {
004180   5146     movf    0x46, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
004182   6e03     movwf   0x3, 0           	MOVWF	r0x03
004184   6a04     clrf    0x4, 0           	CLRF	r0x04
004186   0e00     movlw   0                	MOVLW	0x00
004188   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
00418a   e102     bnz     0x4190           	BNZ	_01160_DS_
00418c   0e04     movlw   0x4              	MOVLW	0x04
00418e   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _01160_DS_:
004190   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
004192   d076     bra     0x4280           	BRA	_01143_DS_
004194   6afa     clrf    0xfa, 0          	CLRF	PCLATH
004196   6afb     clrf    0xfb, 0          	CLRF	PCLATU
004198   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
00419a   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00419c   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
00419e   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0041a0   0bfc     andlw   0xfc             	ANDLW	0xfc
0041a2   0fb2     addlw   0xb2             	ADDLW	LOW(_01161_DS_)
0041a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0041a6   0e41     movlw   0x41             	MOVLW	HIGH(_01161_DS_)
0041a8   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
0041aa   0e00     movlw   0                	MOVLW	UPPER(_01161_DS_)
0041ac   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0041ae   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0041b0   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01161_DS_:
0041b2   efe1     goto    0x41c2           	GOTO	_01139_DS_
0041b4   f020
0041b6   eff9     goto    0x41f2           	GOTO	_01140_DS_
0041b8   f020
0041ba   ef11     goto    0x4222           	GOTO	_01141_DS_
0041bc   f021
0041be   ef29     goto    0x4252           	GOTO	_01142_DS_
0041c0   f021
                                           _01139_DS_:
0041c2   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4480; meter_logger.c	*c = fifo_buffer_0[fifo_tail % QUEUE_SIZE];
0041c4   5145     movf    0x45, 0, 0x1     	MOVF	_fifo_tail, W, B
0041c6   6e03     movwf   0x3, 0           	MOVWF	r0x03
0041c8   6a04     clrf    0x4, 0           	CLRF	r0x04
0041ca   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
0041cc   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
0041ce   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
0041d0   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0041d2   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0041d4   ffe9
0041d6   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0041d8   ffea
0041da   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
0041dc   f003
0041de   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0041e0   ffe5
0041e2   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0041e4   ffe9
0041e6   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0041e8   fff3
0041ea   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0041ec   ecf8     call    0x53f0, 0        	CALL	__gptrput1
0041ee   f029
                                           ;	.line	4481; meter_logger.c	break;
0041f0   d047     bra     0x4280           	BRA	_01143_DS_
                                           _01140_DS_:
0041f2   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4483; meter_logger.c	*c = fifo_buffer_1[fifo_tail % QUEUE_SIZE];
0041f4   5145     movf    0x45, 0, 0x1     	MOVF	_fifo_tail, W, B
0041f6   6e03     movwf   0x3, 0           	MOVWF	r0x03
0041f8   6a04     clrf    0x4, 0           	CLRF	r0x04
0041fa   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
0041fc   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
0041fe   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
004200   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
004202   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
004204   ffe9
004206   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
004208   ffea
00420a   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
00420c   f003
00420e   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004210   ffe5
004212   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004214   ffe9
004216   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
004218   fff3
00421a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00421c   ecf8     call    0x53f0, 0        	CALL	__gptrput1
00421e   f029
                                           ;	.line	4484; meter_logger.c	break;
004220   d02f     bra     0x4280           	BRA	_01143_DS_
                                           _01141_DS_:
004222   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4486; meter_logger.c	*c = fifo_buffer_2[fifo_tail % QUEUE_SIZE];
004224   5145     movf    0x45, 0, 0x1     	MOVF	_fifo_tail, W, B
004226   6e03     movwf   0x3, 0           	MOVWF	r0x03
004228   6a04     clrf    0x4, 0           	CLRF	r0x04
00422a   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
00422c   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
00422e   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
004230   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
004232   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
004234   ffe9
004236   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
004238   ffea
00423a   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
00423c   f003
00423e   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004240   ffe5
004242   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004244   ffe9
004246   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
004248   fff3
00424a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00424c   ecf8     call    0x53f0, 0        	CALL	__gptrput1
00424e   f029
                                           ;	.line	4487; meter_logger.c	break;
004250   d017     bra     0x4280           	BRA	_01143_DS_
                                           _01142_DS_:
004252   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4489; meter_logger.c	*c = fifo_buffer_3[fifo_tail % QUEUE_SIZE];
004254   5145     movf    0x45, 0, 0x1     	MOVF	_fifo_tail, W, B
004256   6e03     movwf   0x3, 0           	MOVWF	r0x03
004258   6a04     clrf    0x4, 0           	CLRF	r0x04
00425a   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
00425c   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
00425e   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
004260   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
004262   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
004264   ffe9
004266   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
004268   ffea
00426a   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
00426c   f003
00426e   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004270   ffe5
004272   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004274   ffe9
004276   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
004278   fff3
00427a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00427c   ecf8     call    0x53f0, 0        	CALL	__gptrput1
00427e   f029
                                           _01143_DS_:
004280   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4492; meter_logger.c	fifo_tail++;
004282   3f45     incfsz  0x45, 0x1, 0x1   	INCFSZ	_fifo_tail, F, B
004284   d001     bra     0x4288           	BRA	_11236_DS_
                                           ; removed redundant BANKSEL
004286   2b46     incf    0x46, 0x1, 0x1   	INCF	(_fifo_tail + 1), F, B
                                           _11236_DS_:
004288   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4494; meter_logger.c	if (fifo_tail == QUEUE_SIZE_COMBINED) {
00428a   5145     movf    0x45, 0, 0x1     	MOVF	_fifo_tail, W, B
00428c   e103     bnz     0x4294           	BNZ	_01166_DS_
                                           ; removed redundant BANKSEL
00428e   5146     movf    0x46, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
004290   0a04     xorlw   0x4              	XORLW	0x04
004292   e001     bz      0x4296           	BZ	_01167_DS_
                                           _01166_DS_:
004294   d003     bra     0x429c           	BRA	_01145_DS_
                                           _01167_DS_:
004296   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4495; meter_logger.c	fifo_tail = 0;
004298   6b45     clrf    0x45, 0x1        	CLRF	_fifo_tail, B
                                           ; removed redundant BANKSEL
00429a   6b46     clrf    0x46, 0x1        	CLRF	(_fifo_tail + 1), B
                                           _01145_DS_:
                                           ;	.line	4497; meter_logger.c	return 1;
00429c   0e01     movlw   0x1              	MOVLW	0x01
00429e   d001     bra     0x42a2           	BRA	_01149_DS_
                                           _01147_DS_:
                                           ;	.line	4500; meter_logger.c	return 0;
0042a0   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _01149_DS_:
0042a2   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0042a4   f004
0042a6   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0042a8   f003
0042aa   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0042ac   f002
0042ae   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0042b0   f001
0042b2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0042b4   f000
0042b6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0042b8   ffd9
0042ba   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_put	code
                                           _fifo_put:
                                           ;	.line	4448; meter_logger.c	unsigned char fifo_put(unsigned char c) {
0043f6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0043f8   ffe5
0043fa   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0043fc   ffd9
0043fe   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004400   ffe5
004402   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004404   ffe5
004406   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004408   ffe5
00440a   0e02     movlw   0x2              	MOVLW	0x02
00440c   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00440e   f000
                                           ;	.line	4449; meter_logger.c	if (fifo_in_use() != QUEUE_SIZE_COMBINED) {
004410   ec32     call    0x5064, 0        	CALL	_fifo_in_use
004412   f028
004414   6e01     movwf   0x1, 0           	MOVWF	r0x01
004416   cff3     movff   0xff3, 0x2       	MOVFF	PRODL, r0x02
004418   f002
00441a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00441c   e104     bnz     0x4426           	BNZ	_01126_DS_
00441e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004420   0a04     xorlw   0x4              	XORLW	0x04
004422   e101     bnz     0x4426           	BNZ	_01126_DS_
004424   d06d     bra     0x4500           	BRA	_01112_DS_
                                           _01126_DS_:
004426   0105     movlb   0x5              	BANKSEL	(_fifo_head + 1)
                                           ;	.line	4450; meter_logger.c	switch (fifo_head/QUEUE_SIZE) {
004428   5144     movf    0x44, 0, 0x1     	MOVF	(_fifo_head + 1), W, B
00442a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00442c   6a02     clrf    0x2, 0           	CLRF	r0x02
00442e   0e00     movlw   0                	MOVLW	0x00
004430   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
004432   e102     bnz     0x4438           	BNZ	_01127_DS_
004434   0e04     movlw   0x4              	MOVLW	0x04
004436   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
                                           _01127_DS_:
004438   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00443a   d052     bra     0x44e0           	BRA	_01108_DS_
00443c   6afa     clrf    0xfa, 0          	CLRF	PCLATH
00443e   6afb     clrf    0xfb, 0          	CLRF	PCLATU
004440   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
004442   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
004444   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
004446   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
004448   0bfc     andlw   0xfc             	ANDLW	0xfc
00444a   0f5a     addlw   0x5a             	ADDLW	LOW(_01128_DS_)
00444c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00444e   0e44     movlw   0x44             	MOVLW	HIGH(_01128_DS_)
004450   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
004452   0e00     movlw   0                	MOVLW	UPPER(_01128_DS_)
004454   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
004456   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
004458   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01128_DS_:
00445a   ef35     goto    0x446a           	GOTO	_01104_DS_
00445c   f022
00445e   ef44     goto    0x4488           	GOTO	_01105_DS_
004460   f022
004462   ef53     goto    0x44a6           	GOTO	_01106_DS_
004464   f022
004466   ef62     goto    0x44c4           	GOTO	_01107_DS_
004468   f022
                                           _01104_DS_:
00446a   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4452; meter_logger.c	fifo_buffer_0[fifo_head % QUEUE_SIZE] = c;
00446c   5143     movf    0x43, 0, 0x1     	MOVF	_fifo_head, W, B
00446e   6e01     movwf   0x1, 0           	MOVWF	r0x01
004470   6a02     clrf    0x2, 0           	CLRF	r0x02
004472   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
004474   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
004476   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
004478   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00447a   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
00447c   ffe9
00447e   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
004480   ffea
004482   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
004484   ffef
                                           ;	.line	4453; meter_logger.c	break;
004486   d02c     bra     0x44e0           	BRA	_01108_DS_
                                           _01105_DS_:
004488   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4455; meter_logger.c	fifo_buffer_1[fifo_head % QUEUE_SIZE] = c;
00448a   5143     movf    0x43, 0, 0x1     	MOVF	_fifo_head, W, B
00448c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00448e   6a02     clrf    0x2, 0           	CLRF	r0x02
004490   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
004492   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
004494   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
004496   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
004498   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
00449a   ffe9
00449c   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
00449e   ffea
0044a0   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
0044a2   ffef
                                           ;	.line	4456; meter_logger.c	break;
0044a4   d01d     bra     0x44e0           	BRA	_01108_DS_
                                           _01106_DS_:
0044a6   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4458; meter_logger.c	fifo_buffer_2[fifo_head % QUEUE_SIZE] = c;
0044a8   5143     movf    0x43, 0, 0x1     	MOVF	_fifo_head, W, B
0044aa   6e01     movwf   0x1, 0           	MOVWF	r0x01
0044ac   6a02     clrf    0x2, 0           	CLRF	r0x02
0044ae   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
0044b0   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
0044b2   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
0044b4   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0044b6   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0044b8   ffe9
0044ba   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0044bc   ffea
0044be   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
0044c0   ffef
                                           ;	.line	4459; meter_logger.c	break;
0044c2   d00e     bra     0x44e0           	BRA	_01108_DS_
                                           _01107_DS_:
0044c4   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4461; meter_logger.c	fifo_buffer_3[fifo_head % QUEUE_SIZE] = c;
0044c6   5143     movf    0x43, 0, 0x1     	MOVF	_fifo_head, W, B
0044c8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0044ca   6a02     clrf    0x2, 0           	CLRF	r0x02
0044cc   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
0044ce   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
0044d0   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
0044d2   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0044d4   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0044d6   ffe9
0044d8   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0044da   ffea
0044dc   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
0044de   ffef
                                           _01108_DS_:
0044e0   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4464; meter_logger.c	fifo_head++;
0044e2   3f43     incfsz  0x43, 0x1, 0x1   	INCFSZ	_fifo_head, F, B
0044e4   d001     bra     0x44e8           	BRA	_21237_DS_
                                           ; removed redundant BANKSEL
0044e6   2b44     incf    0x44, 0x1, 0x1   	INCF	(_fifo_head + 1), F, B
                                           _21237_DS_:
0044e8   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4466; meter_logger.c	if (fifo_head == QUEUE_SIZE_COMBINED) {
0044ea   5143     movf    0x43, 0, 0x1     	MOVF	_fifo_head, W, B
0044ec   e103     bnz     0x44f4           	BNZ	_01133_DS_
                                           ; removed redundant BANKSEL
0044ee   5144     movf    0x44, 0, 0x1     	MOVF	(_fifo_head + 1), W, B
0044f0   0a04     xorlw   0x4              	XORLW	0x04
0044f2   e001     bz      0x44f6           	BZ	_01134_DS_
                                           _01133_DS_:
0044f4   d003     bra     0x44fc           	BRA	_01110_DS_
                                           _01134_DS_:
0044f6   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4467; meter_logger.c	fifo_head = 0;
0044f8   6b43     clrf    0x43, 0x1        	CLRF	_fifo_head, B
                                           ; removed redundant BANKSEL
0044fa   6b44     clrf    0x44, 0x1        	CLRF	(_fifo_head + 1), B
                                           _01110_DS_:
                                           ;	.line	4469; meter_logger.c	return 1;
0044fc   0e01     movlw   0x1              	MOVLW	0x01
0044fe   d001     bra     0x4502           	BRA	_01114_DS_
                                           _01112_DS_:
                                           ;	.line	4472; meter_logger.c	return 0;
004500   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _01114_DS_:
004502   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004504   f002
004506   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004508   f001
00450a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00450c   f000
00450e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004510   ffd9
004512   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_in_use	code
                                           _fifo_in_use:
                                           ;	.line	4444; meter_logger.c	unsigned int fifo_in_use() {
005064   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005066   ffe5
005068   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00506a   ffd9
00506c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00506e   ffe5
005070   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
005072   ffe5
005074   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4445; meter_logger.c	return fifo_head - fifo_tail;
005076   5145     movf    0x45, 0, 0x1     	MOVF	_fifo_tail, W, B
005078   0105     movlb   0x5              	BANKSEL	_fifo_head
00507a   5d43     subwf   0x43, 0, 0x1     	SUBWF	_fifo_head, W, B
00507c   6e00     movwf   0, 0             	MOVWF	r0x00
00507e   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
005080   5146     movf    0x46, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
005082   0105     movlb   0x5              	BANKSEL	(_fifo_head + 1)
005084   5944     subwfb  0x44, 0, 0x1     	SUBWFB	(_fifo_head + 1), W, B
005086   6e01     movwf   0x1, 0           	MOVWF	r0x01
005088   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00508a   fff3
00508c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00508e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
005090   f001
005092   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
005094   f000
005096   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005098   ffd9
00509a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_byte	code
                                           _fsk_tx_byte:
                                           ;	.line	4436; meter_logger.c	void fsk_tx_byte(unsigned char c) {
0051f4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0051f6   ffe5
0051f8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0051fa   ffd9
0051fc   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0051fe   ffe5
005200   0e02     movlw   0x2              	MOVLW	0x02
005202   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
005204   f000
                                           ;	.line	4437; meter_logger.c	fsk_proto.data = c;
005206   5000     movf    0, 0, 0          	MOVF	r0x00, W
005208   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
00520a   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
                                           ;	.line	4438; meter_logger.c	fsk_proto.data_len = 8;
00520c   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
00520e   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
                                           _01091_DS_:
005210   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	4439; meter_logger.c	while (fsk_proto.data_len) {
005212   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
005214   e1fd     bnz     0x5210           	BNZ	_01091_DS_
005216   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
005218   f000
00521a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00521c   ffd9
00521e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__send_fsk_low	code
                                           _send_fsk_low:
                                           ;	.line	2983; meter_logger.c	void send_fsk_low(void) {
001ac2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
001ac4   ffe5
001ac6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
001ac8   ffd9
                                           ;	.line	2984; meter_logger.c	PWM_PIN = 1;
001aca   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001acc   0000     nop                      	nop
001ace   0000     nop                      	nop
001ad0   0000     nop                      	nop
001ad2   0000     nop                      	nop
001ad4   0000     nop                      	nop
001ad6   0000     nop                      	nop
001ad8   0000     nop                      	nop
001ada   0000     nop                      	nop
001adc   0000     nop                      	nop
001ade   0000     nop                      	nop
001ae0   0000     nop                      	nop
001ae2   0000     nop                      	nop
001ae4   0000     nop                      	nop
001ae6   0000     nop                      	nop
001ae8   0000     nop                      	nop
001aea   0000     nop                      	nop
001aec   0000     nop                      	nop
001aee   0000     nop                      	nop
001af0   0000     nop                      	nop
001af2   0000     nop                      	nop
001af4   0000     nop                      	nop
001af6   0000     nop                      	nop
001af8   0000     nop                      	nop
001afa   0000     nop                      	nop
001afc   0000     nop                      	nop
001afe   0000     nop                      	nop
001b00   0000     nop                      	nop
001b02   0000     nop                      	nop
001b04   0000     nop                      	nop
001b06   0000     nop                      	nop
001b08   0000     nop                      	nop
001b0a   0000     nop                      	nop
001b0c   0000     nop                      	nop
001b0e   0000     nop                      	nop
001b10   0000     nop                      	nop
001b12   0000     nop                      	nop
001b14   0000     nop                      	nop
001b16   0000     nop                      	nop
001b18   0000     nop                      	nop
001b1a   0000     nop                      	nop
001b1c   0000     nop                      	nop
001b1e   0000     nop                      	nop
001b20   0000     nop                      	nop
001b22   0000     nop                      	nop
001b24   0000     nop                      	nop
001b26   0000     nop                      	nop
001b28   0000     nop                      	nop
001b2a   0000     nop                      	nop
001b2c   0000     nop                      	nop
001b2e   0000     nop                      	nop
001b30   0000     nop                      	nop
001b32   0000     nop                      	nop
001b34   0000     nop                      	nop
001b36   0000     nop                      	nop
001b38   0000     nop                      	nop
001b3a   0000     nop                      	nop
001b3c   0000     nop                      	nop
001b3e   0000     nop                      	nop
001b40   0000     nop                      	nop
001b42   0000     nop                      	nop
001b44   0000     nop                      	nop
001b46   0000     nop                      	nop
001b48   0000     nop                      	nop
001b4a   0000     nop                      	nop
001b4c   0000     nop                      	nop
001b4e   0000     nop                      	nop
001b50   0000     nop                      	nop
001b52   0000     nop                      	nop
001b54   0000     nop                      	nop
001b56   0000     nop                      	nop
001b58   0000     nop                      	nop
001b5a   0000     nop                      	nop
001b5c   0000     nop                      	nop
001b5e   0000     nop                      	nop
001b60   0000     nop                      	nop
001b62   0000     nop                      	nop
001b64   0000     nop                      	nop
001b66   0000     nop                      	nop
001b68   0000     nop                      	nop
001b6a   0000     nop                      	nop
001b6c   0000     nop                      	nop
001b6e   0000     nop                      	nop
001b70   0000     nop                      	nop
001b72   0000     nop                      	nop
001b74   0000     nop                      	nop
001b76   0000     nop                      	nop
001b78   0000     nop                      	nop
001b7a   0000     nop                      	nop
001b7c   0000     nop                      	nop
001b7e   0000     nop                      	nop
001b80   0000     nop                      	nop
001b82   0000     nop                      	nop
001b84   0000     nop                      	nop
001b86   0000     nop                      	nop
001b88   0000     nop                      	nop
001b8a   0000     nop                      	nop
001b8c   0000     nop                      	nop
001b8e   0000     nop                      	nop
001b90   0000     nop                      	nop
001b92   0000     nop                      	nop
001b94   0000     nop                      	nop
001b96   0000     nop                      	nop
001b98   0000     nop                      	nop
001b9a   0000     nop                      	nop
001b9c   0000     nop                      	nop
001b9e   0000     nop                      	nop
001ba0   0000     nop                      	nop
001ba2   0000     nop                      	nop
001ba4   0000     nop                      	nop
001ba6   0000     nop                      	nop
001ba8   0000     nop                      	nop
001baa   0000     nop                      	nop
001bac   0000     nop                      	nop
001bae   0000     nop                      	nop
001bb0   0000     nop                      	nop
001bb2   0000     nop                      	nop
001bb4   0000     nop                      	nop
001bb6   0000     nop                      	nop
001bb8   0000     nop                      	nop
001bba   0000     nop                      	nop
001bbc   0000     nop                      	nop
001bbe   0000     nop                      	nop
001bc0   0000     nop                      	nop
001bc2   0000     nop                      	nop
001bc4   0000     nop                      	nop
001bc6   0000     nop                      	nop
001bc8   0000     nop                      	nop
001bca   0000     nop                      	nop
001bcc   0000     nop                      	nop
001bce   0000     nop                      	nop
001bd0   0000     nop                      	nop
001bd2   0000     nop                      	nop
001bd4   0000     nop                      	nop
001bd6   0000     nop                      	nop
001bd8   0000     nop                      	nop
001bda   0000     nop                      	nop
001bdc   0000     nop                      	nop
001bde   0000     nop                      	nop
001be0   0000     nop                      	nop
001be2   0000     nop                      	nop
001be4   0000     nop                      	nop
001be6   0000     nop                      	nop
001be8   0000     nop                      	nop
001bea   0000     nop                      	nop
001bec   0000     nop                      	nop
001bee   0000     nop                      	nop
001bf0   0000     nop                      	nop
001bf2   0000     nop                      	nop
001bf4   0000     nop                      	nop
001bf6   0000     nop                      	nop
001bf8   0000     nop                      	nop
001bfa   0000     nop                      	nop
001bfc   0000     nop                      	nop
001bfe   0000     nop                      	nop
001c00   0000     nop                      	nop
001c02   0000     nop                      	nop
001c04   0000     nop                      	nop
001c06   0000     nop                      	nop
001c08   0000     nop                      	nop
001c0a   0000     nop                      	nop
001c0c   0000     nop                      	nop
001c0e   0000     nop                      	nop
001c10   0000     nop                      	nop
001c12   0000     nop                      	nop
001c14   0000     nop                      	nop
001c16   0000     nop                      	nop
001c18   0000     nop                      	nop
001c1a   0000     nop                      	nop
001c1c   0000     nop                      	nop
001c1e   0000     nop                      	nop
001c20   0000     nop                      	nop
001c22   0000     nop                      	nop
001c24   0000     nop                      	nop
001c26   0000     nop                      	nop
001c28   0000     nop                      	nop
001c2a   0000     nop                      	nop
001c2c   0000     nop                      	nop
001c2e   0000     nop                      	nop
001c30   0000     nop                      	nop
001c32   0000     nop                      	nop
001c34   0000     nop                      	nop
001c36   0000     nop                      	nop
001c38   0000     nop                      	nop
001c3a   0000     nop                      	nop
001c3c   0000     nop                      	nop
001c3e   0000     nop                      	nop
001c40   0000     nop                      	nop
001c42   0000     nop                      	nop
001c44   0000     nop                      	nop
001c46   0000     nop                      	nop
001c48   0000     nop                      	nop
001c4a   0000     nop                      	nop
001c4c   0000     nop                      	nop
001c4e   0000     nop                      	nop
001c50   0000     nop                      	nop
001c52   0000     nop                      	nop
001c54   0000     nop                      	nop
001c56   0000     nop                      	nop
001c58   0000     nop                      	nop
001c5a   0000     nop                      	nop
001c5c   0000     nop                      	nop
001c5e   0000     nop                      	nop
001c60   0000     nop                      	nop
001c62   0000     nop                      	nop
                                           	
                                           ;	.line	3191; meter_logger.c	PWM_PIN = 0;
001c64   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001c66   0000     nop                      	nop
001c68   0000     nop                      	nop
001c6a   0000     nop                      	nop
001c6c   0000     nop                      	nop
001c6e   0000     nop                      	nop
001c70   0000     nop                      	nop
001c72   0000     nop                      	nop
001c74   0000     nop                      	nop
001c76   0000     nop                      	nop
001c78   0000     nop                      	nop
001c7a   0000     nop                      	nop
001c7c   0000     nop                      	nop
001c7e   0000     nop                      	nop
001c80   0000     nop                      	nop
001c82   0000     nop                      	nop
001c84   0000     nop                      	nop
001c86   0000     nop                      	nop
001c88   0000     nop                      	nop
001c8a   0000     nop                      	nop
001c8c   0000     nop                      	nop
001c8e   0000     nop                      	nop
001c90   0000     nop                      	nop
001c92   0000     nop                      	nop
001c94   0000     nop                      	nop
001c96   0000     nop                      	nop
001c98   0000     nop                      	nop
001c9a   0000     nop                      	nop
001c9c   0000     nop                      	nop
001c9e   0000     nop                      	nop
001ca0   0000     nop                      	nop
001ca2   0000     nop                      	nop
001ca4   0000     nop                      	nop
001ca6   0000     nop                      	nop
001ca8   0000     nop                      	nop
001caa   0000     nop                      	nop
001cac   0000     nop                      	nop
001cae   0000     nop                      	nop
001cb0   0000     nop                      	nop
001cb2   0000     nop                      	nop
001cb4   0000     nop                      	nop
001cb6   0000     nop                      	nop
001cb8   0000     nop                      	nop
001cba   0000     nop                      	nop
001cbc   0000     nop                      	nop
001cbe   0000     nop                      	nop
001cc0   0000     nop                      	nop
001cc2   0000     nop                      	nop
001cc4   0000     nop                      	nop
001cc6   0000     nop                      	nop
001cc8   0000     nop                      	nop
001cca   0000     nop                      	nop
001ccc   0000     nop                      	nop
001cce   0000     nop                      	nop
001cd0   0000     nop                      	nop
001cd2   0000     nop                      	nop
001cd4   0000     nop                      	nop
001cd6   0000     nop                      	nop
001cd8   0000     nop                      	nop
001cda   0000     nop                      	nop
001cdc   0000     nop                      	nop
001cde   0000     nop                      	nop
001ce0   0000     nop                      	nop
001ce2   0000     nop                      	nop
001ce4   0000     nop                      	nop
001ce6   0000     nop                      	nop
001ce8   0000     nop                      	nop
001cea   0000     nop                      	nop
001cec   0000     nop                      	nop
001cee   0000     nop                      	nop
001cf0   0000     nop                      	nop
001cf2   0000     nop                      	nop
001cf4   0000     nop                      	nop
001cf6   0000     nop                      	nop
001cf8   0000     nop                      	nop
001cfa   0000     nop                      	nop
001cfc   0000     nop                      	nop
001cfe   0000     nop                      	nop
001d00   0000     nop                      	nop
001d02   0000     nop                      	nop
001d04   0000     nop                      	nop
001d06   0000     nop                      	nop
001d08   0000     nop                      	nop
001d0a   0000     nop                      	nop
001d0c   0000     nop                      	nop
001d0e   0000     nop                      	nop
001d10   0000     nop                      	nop
001d12   0000     nop                      	nop
001d14   0000     nop                      	nop
001d16   0000     nop                      	nop
001d18   0000     nop                      	nop
001d1a   0000     nop                      	nop
001d1c   0000     nop                      	nop
001d1e   0000     nop                      	nop
001d20   0000     nop                      	nop
001d22   0000     nop                      	nop
001d24   0000     nop                      	nop
001d26   0000     nop                      	nop
001d28   0000     nop                      	nop
001d2a   0000     nop                      	nop
001d2c   0000     nop                      	nop
001d2e   0000     nop                      	nop
001d30   0000     nop                      	nop
001d32   0000     nop                      	nop
001d34   0000     nop                      	nop
001d36   0000     nop                      	nop
001d38   0000     nop                      	nop
001d3a   0000     nop                      	nop
001d3c   0000     nop                      	nop
001d3e   0000     nop                      	nop
001d40   0000     nop                      	nop
001d42   0000     nop                      	nop
001d44   0000     nop                      	nop
001d46   0000     nop                      	nop
001d48   0000     nop                      	nop
001d4a   0000     nop                      	nop
001d4c   0000     nop                      	nop
001d4e   0000     nop                      	nop
001d50   0000     nop                      	nop
001d52   0000     nop                      	nop
001d54   0000     nop                      	nop
001d56   0000     nop                      	nop
001d58   0000     nop                      	nop
001d5a   0000     nop                      	nop
001d5c   0000     nop                      	nop
001d5e   0000     nop                      	nop
001d60   0000     nop                      	nop
001d62   0000     nop                      	nop
001d64   0000     nop                      	nop
001d66   0000     nop                      	nop
001d68   0000     nop                      	nop
001d6a   0000     nop                      	nop
001d6c   0000     nop                      	nop
001d6e   0000     nop                      	nop
001d70   0000     nop                      	nop
001d72   0000     nop                      	nop
001d74   0000     nop                      	nop
001d76   0000     nop                      	nop
001d78   0000     nop                      	nop
001d7a   0000     nop                      	nop
001d7c   0000     nop                      	nop
001d7e   0000     nop                      	nop
001d80   0000     nop                      	nop
001d82   0000     nop                      	nop
001d84   0000     nop                      	nop
001d86   0000     nop                      	nop
001d88   0000     nop                      	nop
001d8a   0000     nop                      	nop
001d8c   0000     nop                      	nop
001d8e   0000     nop                      	nop
001d90   0000     nop                      	nop
001d92   0000     nop                      	nop
001d94   0000     nop                      	nop
001d96   0000     nop                      	nop
001d98   0000     nop                      	nop
001d9a   0000     nop                      	nop
001d9c   0000     nop                      	nop
001d9e   0000     nop                      	nop
001da0   0000     nop                      	nop
001da2   0000     nop                      	nop
001da4   0000     nop                      	nop
001da6   0000     nop                      	nop
001da8   0000     nop                      	nop
001daa   0000     nop                      	nop
001dac   0000     nop                      	nop
001dae   0000     nop                      	nop
001db0   0000     nop                      	nop
001db2   0000     nop                      	nop
001db4   0000     nop                      	nop
001db6   0000     nop                      	nop
001db8   0000     nop                      	nop
001dba   0000     nop                      	nop
001dbc   0000     nop                      	nop
001dbe   0000     nop                      	nop
001dc0   0000     nop                      	nop
001dc2   0000     nop                      	nop
001dc4   0000     nop                      	nop
001dc6   0000     nop                      	nop
001dc8   0000     nop                      	nop
001dca   0000     nop                      	nop
001dcc   0000     nop                      	nop
001dce   0000     nop                      	nop
001dd0   0000     nop                      	nop
001dd2   0000     nop                      	nop
001dd4   0000     nop                      	nop
001dd6   0000     nop                      	nop
001dd8   0000     nop                      	nop
001dda   0000     nop                      	nop
001ddc   0000     nop                      	nop
001dde   0000     nop                      	nop
001de0   0000     nop                      	nop
001de2   0000     nop                      	nop
001de4   0000     nop                      	nop
001de6   0000     nop                      	nop
001de8   0000     nop                      	nop
001dea   0000     nop                      	nop
001dec   0000     nop                      	nop
001dee   0000     nop                      	nop
001df0   0000     nop                      	nop
001df2   0000     nop                      	nop
001df4   0000     nop                      	nop
001df6   0000     nop                      	nop
001df8   0000     nop                      	nop
001dfa   0000     nop                      	nop
001dfc   0000     nop                      	nop
                                           	
                                           ;	.line	3398; meter_logger.c	PWM_PIN = 1;
001dfe   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001e00   0000     nop                      	nop
001e02   0000     nop                      	nop
001e04   0000     nop                      	nop
001e06   0000     nop                      	nop
001e08   0000     nop                      	nop
001e0a   0000     nop                      	nop
001e0c   0000     nop                      	nop
001e0e   0000     nop                      	nop
001e10   0000     nop                      	nop
001e12   0000     nop                      	nop
001e14   0000     nop                      	nop
001e16   0000     nop                      	nop
001e18   0000     nop                      	nop
001e1a   0000     nop                      	nop
001e1c   0000     nop                      	nop
001e1e   0000     nop                      	nop
001e20   0000     nop                      	nop
001e22   0000     nop                      	nop
001e24   0000     nop                      	nop
001e26   0000     nop                      	nop
001e28   0000     nop                      	nop
001e2a   0000     nop                      	nop
001e2c   0000     nop                      	nop
001e2e   0000     nop                      	nop
001e30   0000     nop                      	nop
001e32   0000     nop                      	nop
001e34   0000     nop                      	nop
001e36   0000     nop                      	nop
001e38   0000     nop                      	nop
001e3a   0000     nop                      	nop
001e3c   0000     nop                      	nop
001e3e   0000     nop                      	nop
001e40   0000     nop                      	nop
001e42   0000     nop                      	nop
001e44   0000     nop                      	nop
001e46   0000     nop                      	nop
001e48   0000     nop                      	nop
001e4a   0000     nop                      	nop
001e4c   0000     nop                      	nop
001e4e   0000     nop                      	nop
001e50   0000     nop                      	nop
001e52   0000     nop                      	nop
001e54   0000     nop                      	nop
001e56   0000     nop                      	nop
001e58   0000     nop                      	nop
001e5a   0000     nop                      	nop
001e5c   0000     nop                      	nop
001e5e   0000     nop                      	nop
001e60   0000     nop                      	nop
001e62   0000     nop                      	nop
001e64   0000     nop                      	nop
001e66   0000     nop                      	nop
001e68   0000     nop                      	nop
001e6a   0000     nop                      	nop
001e6c   0000     nop                      	nop
001e6e   0000     nop                      	nop
001e70   0000     nop                      	nop
001e72   0000     nop                      	nop
001e74   0000     nop                      	nop
001e76   0000     nop                      	nop
001e78   0000     nop                      	nop
001e7a   0000     nop                      	nop
001e7c   0000     nop                      	nop
001e7e   0000     nop                      	nop
001e80   0000     nop                      	nop
001e82   0000     nop                      	nop
001e84   0000     nop                      	nop
001e86   0000     nop                      	nop
001e88   0000     nop                      	nop
001e8a   0000     nop                      	nop
001e8c   0000     nop                      	nop
001e8e   0000     nop                      	nop
001e90   0000     nop                      	nop
001e92   0000     nop                      	nop
001e94   0000     nop                      	nop
001e96   0000     nop                      	nop
001e98   0000     nop                      	nop
001e9a   0000     nop                      	nop
001e9c   0000     nop                      	nop
001e9e   0000     nop                      	nop
001ea0   0000     nop                      	nop
001ea2   0000     nop                      	nop
001ea4   0000     nop                      	nop
001ea6   0000     nop                      	nop
001ea8   0000     nop                      	nop
001eaa   0000     nop                      	nop
001eac   0000     nop                      	nop
001eae   0000     nop                      	nop
001eb0   0000     nop                      	nop
001eb2   0000     nop                      	nop
001eb4   0000     nop                      	nop
001eb6   0000     nop                      	nop
001eb8   0000     nop                      	nop
001eba   0000     nop                      	nop
001ebc   0000     nop                      	nop
001ebe   0000     nop                      	nop
001ec0   0000     nop                      	nop
001ec2   0000     nop                      	nop
001ec4   0000     nop                      	nop
001ec6   0000     nop                      	nop
001ec8   0000     nop                      	nop
001eca   0000     nop                      	nop
001ecc   0000     nop                      	nop
001ece   0000     nop                      	nop
001ed0   0000     nop                      	nop
001ed2   0000     nop                      	nop
001ed4   0000     nop                      	nop
001ed6   0000     nop                      	nop
001ed8   0000     nop                      	nop
001eda   0000     nop                      	nop
001edc   0000     nop                      	nop
001ede   0000     nop                      	nop
001ee0   0000     nop                      	nop
001ee2   0000     nop                      	nop
001ee4   0000     nop                      	nop
001ee6   0000     nop                      	nop
001ee8   0000     nop                      	nop
001eea   0000     nop                      	nop
001eec   0000     nop                      	nop
001eee   0000     nop                      	nop
001ef0   0000     nop                      	nop
001ef2   0000     nop                      	nop
001ef4   0000     nop                      	nop
001ef6   0000     nop                      	nop
001ef8   0000     nop                      	nop
001efa   0000     nop                      	nop
001efc   0000     nop                      	nop
001efe   0000     nop                      	nop
001f00   0000     nop                      	nop
001f02   0000     nop                      	nop
001f04   0000     nop                      	nop
001f06   0000     nop                      	nop
001f08   0000     nop                      	nop
001f0a   0000     nop                      	nop
001f0c   0000     nop                      	nop
001f0e   0000     nop                      	nop
001f10   0000     nop                      	nop
001f12   0000     nop                      	nop
001f14   0000     nop                      	nop
001f16   0000     nop                      	nop
001f18   0000     nop                      	nop
001f1a   0000     nop                      	nop
001f1c   0000     nop                      	nop
001f1e   0000     nop                      	nop
001f20   0000     nop                      	nop
001f22   0000     nop                      	nop
001f24   0000     nop                      	nop
001f26   0000     nop                      	nop
001f28   0000     nop                      	nop
001f2a   0000     nop                      	nop
001f2c   0000     nop                      	nop
001f2e   0000     nop                      	nop
001f30   0000     nop                      	nop
001f32   0000     nop                      	nop
001f34   0000     nop                      	nop
001f36   0000     nop                      	nop
001f38   0000     nop                      	nop
001f3a   0000     nop                      	nop
001f3c   0000     nop                      	nop
001f3e   0000     nop                      	nop
001f40   0000     nop                      	nop
001f42   0000     nop                      	nop
001f44   0000     nop                      	nop
001f46   0000     nop                      	nop
001f48   0000     nop                      	nop
001f4a   0000     nop                      	nop
001f4c   0000     nop                      	nop
001f4e   0000     nop                      	nop
001f50   0000     nop                      	nop
001f52   0000     nop                      	nop
001f54   0000     nop                      	nop
001f56   0000     nop                      	nop
001f58   0000     nop                      	nop
001f5a   0000     nop                      	nop
001f5c   0000     nop                      	nop
001f5e   0000     nop                      	nop
001f60   0000     nop                      	nop
001f62   0000     nop                      	nop
001f64   0000     nop                      	nop
001f66   0000     nop                      	nop
001f68   0000     nop                      	nop
001f6a   0000     nop                      	nop
001f6c   0000     nop                      	nop
001f6e   0000     nop                      	nop
001f70   0000     nop                      	nop
001f72   0000     nop                      	nop
001f74   0000     nop                      	nop
001f76   0000     nop                      	nop
001f78   0000     nop                      	nop
001f7a   0000     nop                      	nop
001f7c   0000     nop                      	nop
001f7e   0000     nop                      	nop
001f80   0000     nop                      	nop
001f82   0000     nop                      	nop
001f84   0000     nop                      	nop
001f86   0000     nop                      	nop
001f88   0000     nop                      	nop
001f8a   0000     nop                      	nop
001f8c   0000     nop                      	nop
001f8e   0000     nop                      	nop
001f90   0000     nop                      	nop
001f92   0000     nop                      	nop
001f94   0000     nop                      	nop
001f96   0000     nop                      	nop
                                           	
                                           ;	.line	3605; meter_logger.c	PWM_PIN = 0;
001f98   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001f9a   0000     nop                      	nop
001f9c   0000     nop                      	nop
001f9e   0000     nop                      	nop
001fa0   0000     nop                      	nop
001fa2   0000     nop                      	nop
001fa4   0000     nop                      	nop
001fa6   0000     nop                      	nop
001fa8   0000     nop                      	nop
001faa   0000     nop                      	nop
001fac   0000     nop                      	nop
001fae   0000     nop                      	nop
001fb0   0000     nop                      	nop
001fb2   0000     nop                      	nop
001fb4   0000     nop                      	nop
001fb6   0000     nop                      	nop
001fb8   0000     nop                      	nop
001fba   0000     nop                      	nop
001fbc   0000     nop                      	nop
001fbe   0000     nop                      	nop
001fc0   0000     nop                      	nop
001fc2   0000     nop                      	nop
001fc4   0000     nop                      	nop
001fc6   0000     nop                      	nop
001fc8   0000     nop                      	nop
001fca   0000     nop                      	nop
001fcc   0000     nop                      	nop
001fce   0000     nop                      	nop
001fd0   0000     nop                      	nop
001fd2   0000     nop                      	nop
001fd4   0000     nop                      	nop
001fd6   0000     nop                      	nop
001fd8   0000     nop                      	nop
001fda   0000     nop                      	nop
001fdc   0000     nop                      	nop
001fde   0000     nop                      	nop
001fe0   0000     nop                      	nop
001fe2   0000     nop                      	nop
001fe4   0000     nop                      	nop
001fe6   0000     nop                      	nop
001fe8   0000     nop                      	nop
001fea   0000     nop                      	nop
001fec   0000     nop                      	nop
001fee   0000     nop                      	nop
001ff0   0000     nop                      	nop
001ff2   0000     nop                      	nop
001ff4   0000     nop                      	nop
001ff6   0000     nop                      	nop
001ff8   0000     nop                      	nop
001ffa   0000     nop                      	nop
001ffc   0000     nop                      	nop
001ffe   0000     nop                      	nop
002000   0000     nop                      	nop
002002   0000     nop                      	nop
002004   0000     nop                      	nop
002006   0000     nop                      	nop
002008   0000     nop                      	nop
00200a   0000     nop                      	nop
00200c   0000     nop                      	nop
00200e   0000     nop                      	nop
002010   0000     nop                      	nop
002012   0000     nop                      	nop
002014   0000     nop                      	nop
002016   0000     nop                      	nop
002018   0000     nop                      	nop
00201a   0000     nop                      	nop
00201c   0000     nop                      	nop
00201e   0000     nop                      	nop
002020   0000     nop                      	nop
002022   0000     nop                      	nop
002024   0000     nop                      	nop
002026   0000     nop                      	nop
002028   0000     nop                      	nop
00202a   0000     nop                      	nop
00202c   0000     nop                      	nop
00202e   0000     nop                      	nop
002030   0000     nop                      	nop
002032   0000     nop                      	nop
002034   0000     nop                      	nop
002036   0000     nop                      	nop
002038   0000     nop                      	nop
00203a   0000     nop                      	nop
00203c   0000     nop                      	nop
00203e   0000     nop                      	nop
002040   0000     nop                      	nop
002042   0000     nop                      	nop
002044   0000     nop                      	nop
002046   0000     nop                      	nop
002048   0000     nop                      	nop
00204a   0000     nop                      	nop
00204c   0000     nop                      	nop
00204e   0000     nop                      	nop
002050   0000     nop                      	nop
002052   0000     nop                      	nop
002054   0000     nop                      	nop
002056   0000     nop                      	nop
002058   0000     nop                      	nop
00205a   0000     nop                      	nop
00205c   0000     nop                      	nop
00205e   0000     nop                      	nop
002060   0000     nop                      	nop
002062   0000     nop                      	nop
002064   0000     nop                      	nop
002066   0000     nop                      	nop
002068   0000     nop                      	nop
00206a   0000     nop                      	nop
00206c   0000     nop                      	nop
00206e   0000     nop                      	nop
002070   0000     nop                      	nop
002072   0000     nop                      	nop
002074   0000     nop                      	nop
002076   0000     nop                      	nop
002078   0000     nop                      	nop
00207a   0000     nop                      	nop
00207c   0000     nop                      	nop
00207e   0000     nop                      	nop
002080   0000     nop                      	nop
002082   0000     nop                      	nop
002084   0000     nop                      	nop
002086   0000     nop                      	nop
002088   0000     nop                      	nop
00208a   0000     nop                      	nop
00208c   0000     nop                      	nop
00208e   0000     nop                      	nop
002090   0000     nop                      	nop
002092   0000     nop                      	nop
002094   0000     nop                      	nop
002096   0000     nop                      	nop
002098   0000     nop                      	nop
00209a   0000     nop                      	nop
00209c   0000     nop                      	nop
00209e   0000     nop                      	nop
0020a0   0000     nop                      	nop
0020a2   0000     nop                      	nop
0020a4   0000     nop                      	nop
0020a6   0000     nop                      	nop
0020a8   0000     nop                      	nop
0020aa   0000     nop                      	nop
0020ac   0000     nop                      	nop
0020ae   0000     nop                      	nop
0020b0   0000     nop                      	nop
0020b2   0000     nop                      	nop
0020b4   0000     nop                      	nop
0020b6   0000     nop                      	nop
0020b8   0000     nop                      	nop
0020ba   0000     nop                      	nop
0020bc   0000     nop                      	nop
0020be   0000     nop                      	nop
0020c0   0000     nop                      	nop
0020c2   0000     nop                      	nop
0020c4   0000     nop                      	nop
0020c6   0000     nop                      	nop
0020c8   0000     nop                      	nop
0020ca   0000     nop                      	nop
0020cc   0000     nop                      	nop
0020ce   0000     nop                      	nop
0020d0   0000     nop                      	nop
0020d2   0000     nop                      	nop
0020d4   0000     nop                      	nop
0020d6   0000     nop                      	nop
0020d8   0000     nop                      	nop
0020da   0000     nop                      	nop
0020dc   0000     nop                      	nop
0020de   0000     nop                      	nop
0020e0   0000     nop                      	nop
0020e2   0000     nop                      	nop
0020e4   0000     nop                      	nop
0020e6   0000     nop                      	nop
0020e8   0000     nop                      	nop
0020ea   0000     nop                      	nop
0020ec   0000     nop                      	nop
0020ee   0000     nop                      	nop
0020f0   0000     nop                      	nop
0020f2   0000     nop                      	nop
0020f4   0000     nop                      	nop
0020f6   0000     nop                      	nop
0020f8   0000     nop                      	nop
0020fa   0000     nop                      	nop
0020fc   0000     nop                      	nop
0020fe   0000     nop                      	nop
002100   0000     nop                      	nop
002102   0000     nop                      	nop
002104   0000     nop                      	nop
002106   0000     nop                      	nop
002108   0000     nop                      	nop
00210a   0000     nop                      	nop
00210c   0000     nop                      	nop
00210e   0000     nop                      	nop
002110   0000     nop                      	nop
002112   0000     nop                      	nop
002114   0000     nop                      	nop
002116   0000     nop                      	nop
002118   0000     nop                      	nop
00211a   0000     nop                      	nop
00211c   0000     nop                      	nop
00211e   0000     nop                      	nop
002120   0000     nop                      	nop
002122   0000     nop                      	nop
002124   0000     nop                      	nop
002126   0000     nop                      	nop
002128   0000     nop                      	nop
00212a   0000     nop                      	nop
00212c   0000     nop                      	nop
00212e   0000     nop                      	nop
002130   0000     nop                      	nop
                                           	
                                           ;	.line	3812; meter_logger.c	PWM_PIN = 1;
002132   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
002134   0000     nop                      	nop
002136   0000     nop                      	nop
002138   0000     nop                      	nop
00213a   0000     nop                      	nop
00213c   0000     nop                      	nop
00213e   0000     nop                      	nop
002140   0000     nop                      	nop
002142   0000     nop                      	nop
002144   0000     nop                      	nop
002146   0000     nop                      	nop
002148   0000     nop                      	nop
00214a   0000     nop                      	nop
00214c   0000     nop                      	nop
00214e   0000     nop                      	nop
002150   0000     nop                      	nop
002152   0000     nop                      	nop
002154   0000     nop                      	nop
002156   0000     nop                      	nop
002158   0000     nop                      	nop
00215a   0000     nop                      	nop
00215c   0000     nop                      	nop
00215e   0000     nop                      	nop
002160   0000     nop                      	nop
002162   0000     nop                      	nop
002164   0000     nop                      	nop
002166   0000     nop                      	nop
002168   0000     nop                      	nop
00216a   0000     nop                      	nop
00216c   0000     nop                      	nop
00216e   0000     nop                      	nop
002170   0000     nop                      	nop
002172   0000     nop                      	nop
002174   0000     nop                      	nop
002176   0000     nop                      	nop
002178   0000     nop                      	nop
00217a   0000     nop                      	nop
00217c   0000     nop                      	nop
00217e   0000     nop                      	nop
002180   0000     nop                      	nop
002182   0000     nop                      	nop
002184   0000     nop                      	nop
002186   0000     nop                      	nop
002188   0000     nop                      	nop
00218a   0000     nop                      	nop
00218c   0000     nop                      	nop
00218e   0000     nop                      	nop
002190   0000     nop                      	nop
002192   0000     nop                      	nop
002194   0000     nop                      	nop
002196   0000     nop                      	nop
002198   0000     nop                      	nop
00219a   0000     nop                      	nop
00219c   0000     nop                      	nop
00219e   0000     nop                      	nop
0021a0   0000     nop                      	nop
0021a2   0000     nop                      	nop
0021a4   0000     nop                      	nop
0021a6   0000     nop                      	nop
0021a8   0000     nop                      	nop
0021aa   0000     nop                      	nop
0021ac   0000     nop                      	nop
0021ae   0000     nop                      	nop
0021b0   0000     nop                      	nop
0021b2   0000     nop                      	nop
0021b4   0000     nop                      	nop
0021b6   0000     nop                      	nop
0021b8   0000     nop                      	nop
0021ba   0000     nop                      	nop
0021bc   0000     nop                      	nop
0021be   0000     nop                      	nop
0021c0   0000     nop                      	nop
0021c2   0000     nop                      	nop
0021c4   0000     nop                      	nop
0021c6   0000     nop                      	nop
0021c8   0000     nop                      	nop
0021ca   0000     nop                      	nop
0021cc   0000     nop                      	nop
0021ce   0000     nop                      	nop
0021d0   0000     nop                      	nop
0021d2   0000     nop                      	nop
0021d4   0000     nop                      	nop
0021d6   0000     nop                      	nop
0021d8   0000     nop                      	nop
0021da   0000     nop                      	nop
0021dc   0000     nop                      	nop
0021de   0000     nop                      	nop
0021e0   0000     nop                      	nop
0021e2   0000     nop                      	nop
0021e4   0000     nop                      	nop
0021e6   0000     nop                      	nop
0021e8   0000     nop                      	nop
0021ea   0000     nop                      	nop
0021ec   0000     nop                      	nop
0021ee   0000     nop                      	nop
0021f0   0000     nop                      	nop
0021f2   0000     nop                      	nop
0021f4   0000     nop                      	nop
0021f6   0000     nop                      	nop
0021f8   0000     nop                      	nop
0021fa   0000     nop                      	nop
0021fc   0000     nop                      	nop
0021fe   0000     nop                      	nop
002200   0000     nop                      	nop
002202   0000     nop                      	nop
002204   0000     nop                      	nop
002206   0000     nop                      	nop
002208   0000     nop                      	nop
00220a   0000     nop                      	nop
00220c   0000     nop                      	nop
00220e   0000     nop                      	nop
002210   0000     nop                      	nop
002212   0000     nop                      	nop
002214   0000     nop                      	nop
002216   0000     nop                      	nop
002218   0000     nop                      	nop
00221a   0000     nop                      	nop
00221c   0000     nop                      	nop
00221e   0000     nop                      	nop
002220   0000     nop                      	nop
002222   0000     nop                      	nop
002224   0000     nop                      	nop
002226   0000     nop                      	nop
002228   0000     nop                      	nop
00222a   0000     nop                      	nop
00222c   0000     nop                      	nop
00222e   0000     nop                      	nop
002230   0000     nop                      	nop
002232   0000     nop                      	nop
002234   0000     nop                      	nop
002236   0000     nop                      	nop
002238   0000     nop                      	nop
00223a   0000     nop                      	nop
00223c   0000     nop                      	nop
00223e   0000     nop                      	nop
002240   0000     nop                      	nop
002242   0000     nop                      	nop
002244   0000     nop                      	nop
002246   0000     nop                      	nop
002248   0000     nop                      	nop
00224a   0000     nop                      	nop
00224c   0000     nop                      	nop
00224e   0000     nop                      	nop
002250   0000     nop                      	nop
002252   0000     nop                      	nop
002254   0000     nop                      	nop
002256   0000     nop                      	nop
002258   0000     nop                      	nop
00225a   0000     nop                      	nop
00225c   0000     nop                      	nop
00225e   0000     nop                      	nop
002260   0000     nop                      	nop
002262   0000     nop                      	nop
002264   0000     nop                      	nop
002266   0000     nop                      	nop
002268   0000     nop                      	nop
00226a   0000     nop                      	nop
00226c   0000     nop                      	nop
00226e   0000     nop                      	nop
002270   0000     nop                      	nop
002272   0000     nop                      	nop
002274   0000     nop                      	nop
002276   0000     nop                      	nop
002278   0000     nop                      	nop
00227a   0000     nop                      	nop
00227c   0000     nop                      	nop
00227e   0000     nop                      	nop
002280   0000     nop                      	nop
002282   0000     nop                      	nop
002284   0000     nop                      	nop
002286   0000     nop                      	nop
002288   0000     nop                      	nop
00228a   0000     nop                      	nop
00228c   0000     nop                      	nop
00228e   0000     nop                      	nop
002290   0000     nop                      	nop
002292   0000     nop                      	nop
002294   0000     nop                      	nop
002296   0000     nop                      	nop
002298   0000     nop                      	nop
00229a   0000     nop                      	nop
00229c   0000     nop                      	nop
00229e   0000     nop                      	nop
0022a0   0000     nop                      	nop
0022a2   0000     nop                      	nop
0022a4   0000     nop                      	nop
0022a6   0000     nop                      	nop
0022a8   0000     nop                      	nop
0022aa   0000     nop                      	nop
0022ac   0000     nop                      	nop
0022ae   0000     nop                      	nop
0022b0   0000     nop                      	nop
0022b2   0000     nop                      	nop
0022b4   0000     nop                      	nop
0022b6   0000     nop                      	nop
0022b8   0000     nop                      	nop
0022ba   0000     nop                      	nop
0022bc   0000     nop                      	nop
0022be   0000     nop                      	nop
0022c0   0000     nop                      	nop
0022c2   0000     nop                      	nop
0022c4   0000     nop                      	nop
0022c6   0000     nop                      	nop
0022c8   0000     nop                      	nop
0022ca   0000     nop                      	nop
                                           	
                                           ;	.line	4019; meter_logger.c	PWM_PIN = 0;
0022cc   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
0022ce   0000     nop                      	nop
0022d0   0000     nop                      	nop
0022d2   0000     nop                      	nop
0022d4   0000     nop                      	nop
0022d6   0000     nop                      	nop
0022d8   0000     nop                      	nop
0022da   0000     nop                      	nop
0022dc   0000     nop                      	nop
0022de   0000     nop                      	nop
0022e0   0000     nop                      	nop
0022e2   0000     nop                      	nop
0022e4   0000     nop                      	nop
0022e6   0000     nop                      	nop
0022e8   0000     nop                      	nop
0022ea   0000     nop                      	nop
0022ec   0000     nop                      	nop
0022ee   0000     nop                      	nop
0022f0   0000     nop                      	nop
0022f2   0000     nop                      	nop
0022f4   0000     nop                      	nop
0022f6   0000     nop                      	nop
0022f8   0000     nop                      	nop
0022fa   0000     nop                      	nop
0022fc   0000     nop                      	nop
0022fe   0000     nop                      	nop
002300   0000     nop                      	nop
002302   0000     nop                      	nop
002304   0000     nop                      	nop
002306   0000     nop                      	nop
002308   0000     nop                      	nop
00230a   0000     nop                      	nop
00230c   0000     nop                      	nop
00230e   0000     nop                      	nop
002310   0000     nop                      	nop
002312   0000     nop                      	nop
002314   0000     nop                      	nop
002316   0000     nop                      	nop
002318   0000     nop                      	nop
00231a   0000     nop                      	nop
00231c   0000     nop                      	nop
00231e   0000     nop                      	nop
002320   0000     nop                      	nop
002322   0000     nop                      	nop
002324   0000     nop                      	nop
002326   0000     nop                      	nop
002328   0000     nop                      	nop
00232a   0000     nop                      	nop
00232c   0000     nop                      	nop
00232e   0000     nop                      	nop
002330   0000     nop                      	nop
002332   0000     nop                      	nop
002334   0000     nop                      	nop
002336   0000     nop                      	nop
002338   0000     nop                      	nop
00233a   0000     nop                      	nop
00233c   0000     nop                      	nop
00233e   0000     nop                      	nop
002340   0000     nop                      	nop
002342   0000     nop                      	nop
002344   0000     nop                      	nop
002346   0000     nop                      	nop
002348   0000     nop                      	nop
00234a   0000     nop                      	nop
00234c   0000     nop                      	nop
00234e   0000     nop                      	nop
002350   0000     nop                      	nop
002352   0000     nop                      	nop
002354   0000     nop                      	nop
002356   0000     nop                      	nop
002358   0000     nop                      	nop
00235a   0000     nop                      	nop
00235c   0000     nop                      	nop
00235e   0000     nop                      	nop
002360   0000     nop                      	nop
002362   0000     nop                      	nop
002364   0000     nop                      	nop
002366   0000     nop                      	nop
002368   0000     nop                      	nop
00236a   0000     nop                      	nop
00236c   0000     nop                      	nop
00236e   0000     nop                      	nop
002370   0000     nop                      	nop
002372   0000     nop                      	nop
002374   0000     nop                      	nop
002376   0000     nop                      	nop
002378   0000     nop                      	nop
00237a   0000     nop                      	nop
00237c   0000     nop                      	nop
00237e   0000     nop                      	nop
002380   0000     nop                      	nop
002382   0000     nop                      	nop
002384   0000     nop                      	nop
002386   0000     nop                      	nop
002388   0000     nop                      	nop
00238a   0000     nop                      	nop
00238c   0000     nop                      	nop
00238e   0000     nop                      	nop
002390   0000     nop                      	nop
002392   0000     nop                      	nop
002394   0000     nop                      	nop
002396   0000     nop                      	nop
002398   0000     nop                      	nop
00239a   0000     nop                      	nop
00239c   0000     nop                      	nop
00239e   0000     nop                      	nop
0023a0   0000     nop                      	nop
0023a2   0000     nop                      	nop
0023a4   0000     nop                      	nop
0023a6   0000     nop                      	nop
0023a8   0000     nop                      	nop
0023aa   0000     nop                      	nop
0023ac   0000     nop                      	nop
0023ae   0000     nop                      	nop
0023b0   0000     nop                      	nop
0023b2   0000     nop                      	nop
0023b4   0000     nop                      	nop
0023b6   0000     nop                      	nop
0023b8   0000     nop                      	nop
0023ba   0000     nop                      	nop
0023bc   0000     nop                      	nop
0023be   0000     nop                      	nop
0023c0   0000     nop                      	nop
0023c2   0000     nop                      	nop
0023c4   0000     nop                      	nop
0023c6   0000     nop                      	nop
0023c8   0000     nop                      	nop
0023ca   0000     nop                      	nop
0023cc   0000     nop                      	nop
0023ce   0000     nop                      	nop
0023d0   0000     nop                      	nop
0023d2   0000     nop                      	nop
0023d4   0000     nop                      	nop
0023d6   0000     nop                      	nop
0023d8   0000     nop                      	nop
0023da   0000     nop                      	nop
0023dc   0000     nop                      	nop
0023de   0000     nop                      	nop
0023e0   0000     nop                      	nop
0023e2   0000     nop                      	nop
0023e4   0000     nop                      	nop
0023e6   0000     nop                      	nop
0023e8   0000     nop                      	nop
0023ea   0000     nop                      	nop
0023ec   0000     nop                      	nop
0023ee   0000     nop                      	nop
0023f0   0000     nop                      	nop
0023f2   0000     nop                      	nop
0023f4   0000     nop                      	nop
0023f6   0000     nop                      	nop
0023f8   0000     nop                      	nop
0023fa   0000     nop                      	nop
0023fc   0000     nop                      	nop
0023fe   0000     nop                      	nop
002400   0000     nop                      	nop
002402   0000     nop                      	nop
002404   0000     nop                      	nop
002406   0000     nop                      	nop
002408   0000     nop                      	nop
00240a   0000     nop                      	nop
00240c   0000     nop                      	nop
00240e   0000     nop                      	nop
002410   0000     nop                      	nop
002412   0000     nop                      	nop
002414   0000     nop                      	nop
002416   0000     nop                      	nop
002418   0000     nop                      	nop
00241a   0000     nop                      	nop
00241c   0000     nop                      	nop
00241e   0000     nop                      	nop
002420   0000     nop                      	nop
002422   0000     nop                      	nop
002424   0000     nop                      	nop
002426   0000     nop                      	nop
002428   0000     nop                      	nop
00242a   0000     nop                      	nop
00242c   0000     nop                      	nop
00242e   0000     nop                      	nop
002430   0000     nop                      	nop
002432   0000     nop                      	nop
002434   0000     nop                      	nop
002436   0000     nop                      	nop
002438   0000     nop                      	nop
00243a   0000     nop                      	nop
00243c   0000     nop                      	nop
00243e   0000     nop                      	nop
002440   0000     nop                      	nop
002442   0000     nop                      	nop
002444   0000     nop                      	nop
002446   0000     nop                      	nop
002448   0000     nop                      	nop
00244a   0000     nop                      	nop
00244c   0000     nop                      	nop
00244e   0000     nop                      	nop
002450   0000     nop                      	nop
002452   0000     nop                      	nop
002454   0000     nop                      	nop
002456   0000     nop                      	nop
002458   0000     nop                      	nop
00245a   0000     nop                      	nop
00245c   0000     nop                      	nop
00245e   0000     nop                      	nop
002460   0000     nop                      	nop
002462   0000     nop                      	nop
002464   0000     nop                      	nop
                                           	
                                           ;	.line	4226; meter_logger.c	PWM_PIN = 1;
002466   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
002468   0000     nop                      	nop
00246a   0000     nop                      	nop
00246c   0000     nop                      	nop
00246e   0000     nop                      	nop
002470   0000     nop                      	nop
002472   0000     nop                      	nop
002474   0000     nop                      	nop
002476   0000     nop                      	nop
002478   0000     nop                      	nop
00247a   0000     nop                      	nop
00247c   0000     nop                      	nop
00247e   0000     nop                      	nop
002480   0000     nop                      	nop
002482   0000     nop                      	nop
002484   0000     nop                      	nop
002486   0000     nop                      	nop
002488   0000     nop                      	nop
00248a   0000     nop                      	nop
00248c   0000     nop                      	nop
00248e   0000     nop                      	nop
002490   0000     nop                      	nop
002492   0000     nop                      	nop
002494   0000     nop                      	nop
002496   0000     nop                      	nop
002498   0000     nop                      	nop
00249a   0000     nop                      	nop
00249c   0000     nop                      	nop
00249e   0000     nop                      	nop
0024a0   0000     nop                      	nop
0024a2   0000     nop                      	nop
0024a4   0000     nop                      	nop
0024a6   0000     nop                      	nop
0024a8   0000     nop                      	nop
0024aa   0000     nop                      	nop
0024ac   0000     nop                      	nop
0024ae   0000     nop                      	nop
0024b0   0000     nop                      	nop
0024b2   0000     nop                      	nop
0024b4   0000     nop                      	nop
0024b6   0000     nop                      	nop
0024b8   0000     nop                      	nop
0024ba   0000     nop                      	nop
0024bc   0000     nop                      	nop
0024be   0000     nop                      	nop
0024c0   0000     nop                      	nop
0024c2   0000     nop                      	nop
0024c4   0000     nop                      	nop
0024c6   0000     nop                      	nop
0024c8   0000     nop                      	nop
0024ca   0000     nop                      	nop
0024cc   0000     nop                      	nop
0024ce   0000     nop                      	nop
0024d0   0000     nop                      	nop
0024d2   0000     nop                      	nop
0024d4   0000     nop                      	nop
0024d6   0000     nop                      	nop
0024d8   0000     nop                      	nop
0024da   0000     nop                      	nop
0024dc   0000     nop                      	nop
0024de   0000     nop                      	nop
0024e0   0000     nop                      	nop
0024e2   0000     nop                      	nop
0024e4   0000     nop                      	nop
0024e6   0000     nop                      	nop
0024e8   0000     nop                      	nop
0024ea   0000     nop                      	nop
0024ec   0000     nop                      	nop
0024ee   0000     nop                      	nop
0024f0   0000     nop                      	nop
0024f2   0000     nop                      	nop
0024f4   0000     nop                      	nop
0024f6   0000     nop                      	nop
0024f8   0000     nop                      	nop
0024fa   0000     nop                      	nop
0024fc   0000     nop                      	nop
0024fe   0000     nop                      	nop
002500   0000     nop                      	nop
002502   0000     nop                      	nop
002504   0000     nop                      	nop
002506   0000     nop                      	nop
002508   0000     nop                      	nop
00250a   0000     nop                      	nop
00250c   0000     nop                      	nop
00250e   0000     nop                      	nop
002510   0000     nop                      	nop
002512   0000     nop                      	nop
002514   0000     nop                      	nop
002516   0000     nop                      	nop
002518   0000     nop                      	nop
00251a   0000     nop                      	nop
00251c   0000     nop                      	nop
00251e   0000     nop                      	nop
002520   0000     nop                      	nop
002522   0000     nop                      	nop
002524   0000     nop                      	nop
002526   0000     nop                      	nop
002528   0000     nop                      	nop
00252a   0000     nop                      	nop
00252c   0000     nop                      	nop
00252e   0000     nop                      	nop
002530   0000     nop                      	nop
002532   0000     nop                      	nop
002534   0000     nop                      	nop
002536   0000     nop                      	nop
002538   0000     nop                      	nop
00253a   0000     nop                      	nop
00253c   0000     nop                      	nop
00253e   0000     nop                      	nop
002540   0000     nop                      	nop
002542   0000     nop                      	nop
002544   0000     nop                      	nop
002546   0000     nop                      	nop
002548   0000     nop                      	nop
00254a   0000     nop                      	nop
00254c   0000     nop                      	nop
00254e   0000     nop                      	nop
002550   0000     nop                      	nop
002552   0000     nop                      	nop
002554   0000     nop                      	nop
002556   0000     nop                      	nop
002558   0000     nop                      	nop
00255a   0000     nop                      	nop
00255c   0000     nop                      	nop
00255e   0000     nop                      	nop
002560   0000     nop                      	nop
002562   0000     nop                      	nop
002564   0000     nop                      	nop
002566   0000     nop                      	nop
002568   0000     nop                      	nop
00256a   0000     nop                      	nop
00256c   0000     nop                      	nop
00256e   0000     nop                      	nop
002570   0000     nop                      	nop
002572   0000     nop                      	nop
002574   0000     nop                      	nop
002576   0000     nop                      	nop
002578   0000     nop                      	nop
00257a   0000     nop                      	nop
00257c   0000     nop                      	nop
00257e   0000     nop                      	nop
002580   0000     nop                      	nop
002582   0000     nop                      	nop
002584   0000     nop                      	nop
002586   0000     nop                      	nop
002588   0000     nop                      	nop
00258a   0000     nop                      	nop
00258c   0000     nop                      	nop
00258e   0000     nop                      	nop
002590   0000     nop                      	nop
002592   0000     nop                      	nop
002594   0000     nop                      	nop
002596   0000     nop                      	nop
002598   0000     nop                      	nop
00259a   0000     nop                      	nop
00259c   0000     nop                      	nop
00259e   0000     nop                      	nop
0025a0   0000     nop                      	nop
0025a2   0000     nop                      	nop
0025a4   0000     nop                      	nop
0025a6   0000     nop                      	nop
0025a8   0000     nop                      	nop
0025aa   0000     nop                      	nop
0025ac   0000     nop                      	nop
0025ae   0000     nop                      	nop
0025b0   0000     nop                      	nop
0025b2   0000     nop                      	nop
0025b4   0000     nop                      	nop
0025b6   0000     nop                      	nop
0025b8   0000     nop                      	nop
0025ba   0000     nop                      	nop
0025bc   0000     nop                      	nop
0025be   0000     nop                      	nop
0025c0   0000     nop                      	nop
0025c2   0000     nop                      	nop
0025c4   0000     nop                      	nop
0025c6   0000     nop                      	nop
0025c8   0000     nop                      	nop
0025ca   0000     nop                      	nop
0025cc   0000     nop                      	nop
0025ce   0000     nop                      	nop
0025d0   0000     nop                      	nop
0025d2   0000     nop                      	nop
0025d4   0000     nop                      	nop
0025d6   0000     nop                      	nop
0025d8   0000     nop                      	nop
0025da   0000     nop                      	nop
0025dc   0000     nop                      	nop
0025de   0000     nop                      	nop
0025e0   0000     nop                      	nop
0025e2   0000     nop                      	nop
0025e4   0000     nop                      	nop
0025e6   0000     nop                      	nop
0025e8   0000     nop                      	nop
0025ea   0000     nop                      	nop
0025ec   0000     nop                      	nop
0025ee   0000     nop                      	nop
0025f0   0000     nop                      	nop
0025f2   0000     nop                      	nop
0025f4   0000     nop                      	nop
0025f6   0000     nop                      	nop
0025f8   0000     nop                      	nop
0025fa   0000     nop                      	nop
0025fc   0000     nop                      	nop
0025fe   0000     nop                      	nop
                                           	
                                           ;	.line	4433; meter_logger.c	PWM_PIN = 0;
002600   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
002602   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002604   ffd9
002606   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__send_fsk_high	code
                                           _send_fsk_high:
                                           ;	.line	1461; meter_logger.c	void send_fsk_high(void) {
000f02   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000f04   ffe5
000f06   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000f08   ffd9
                                           ;	.line	1462; meter_logger.c	PWM_PIN = 1;
000f0a   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
000f0c   0000     nop                      	nop
000f0e   0000     nop                      	nop
000f10   0000     nop                      	nop
000f12   0000     nop                      	nop
000f14   0000     nop                      	nop
000f16   0000     nop                      	nop
000f18   0000     nop                      	nop
000f1a   0000     nop                      	nop
000f1c   0000     nop                      	nop
000f1e   0000     nop                      	nop
000f20   0000     nop                      	nop
000f22   0000     nop                      	nop
000f24   0000     nop                      	nop
000f26   0000     nop                      	nop
000f28   0000     nop                      	nop
000f2a   0000     nop                      	nop
000f2c   0000     nop                      	nop
000f2e   0000     nop                      	nop
000f30   0000     nop                      	nop
000f32   0000     nop                      	nop
000f34   0000     nop                      	nop
000f36   0000     nop                      	nop
000f38   0000     nop                      	nop
000f3a   0000     nop                      	nop
000f3c   0000     nop                      	nop
000f3e   0000     nop                      	nop
000f40   0000     nop                      	nop
000f42   0000     nop                      	nop
000f44   0000     nop                      	nop
000f46   0000     nop                      	nop
000f48   0000     nop                      	nop
000f4a   0000     nop                      	nop
000f4c   0000     nop                      	nop
000f4e   0000     nop                      	nop
000f50   0000     nop                      	nop
000f52   0000     nop                      	nop
000f54   0000     nop                      	nop
000f56   0000     nop                      	nop
000f58   0000     nop                      	nop
000f5a   0000     nop                      	nop
000f5c   0000     nop                      	nop
000f5e   0000     nop                      	nop
000f60   0000     nop                      	nop
000f62   0000     nop                      	nop
000f64   0000     nop                      	nop
000f66   0000     nop                      	nop
000f68   0000     nop                      	nop
000f6a   0000     nop                      	nop
000f6c   0000     nop                      	nop
000f6e   0000     nop                      	nop
000f70   0000     nop                      	nop
000f72   0000     nop                      	nop
000f74   0000     nop                      	nop
000f76   0000     nop                      	nop
000f78   0000     nop                      	nop
000f7a   0000     nop                      	nop
000f7c   0000     nop                      	nop
000f7e   0000     nop                      	nop
000f80   0000     nop                      	nop
000f82   0000     nop                      	nop
000f84   0000     nop                      	nop
000f86   0000     nop                      	nop
000f88   0000     nop                      	nop
000f8a   0000     nop                      	nop
000f8c   0000     nop                      	nop
000f8e   0000     nop                      	nop
000f90   0000     nop                      	nop
000f92   0000     nop                      	nop
000f94   0000     nop                      	nop
000f96   0000     nop                      	nop
000f98   0000     nop                      	nop
000f9a   0000     nop                      	nop
000f9c   0000     nop                      	nop
000f9e   0000     nop                      	nop
000fa0   0000     nop                      	nop
000fa2   0000     nop                      	nop
000fa4   0000     nop                      	nop
000fa6   0000     nop                      	nop
000fa8   0000     nop                      	nop
000faa   0000     nop                      	nop
000fac   0000     nop                      	nop
000fae   0000     nop                      	nop
000fb0   0000     nop                      	nop
000fb2   0000     nop                      	nop
000fb4   0000     nop                      	nop
000fb6   0000     nop                      	nop
000fb8   0000     nop                      	nop
000fba   0000     nop                      	nop
000fbc   0000     nop                      	nop
000fbe   0000     nop                      	nop
000fc0   0000     nop                      	nop
000fc2   0000     nop                      	nop
000fc4   0000     nop                      	nop
000fc6   0000     nop                      	nop
000fc8   0000     nop                      	nop
000fca   0000     nop                      	nop
000fcc   0000     nop                      	nop
000fce   0000     nop                      	nop
000fd0   0000     nop                      	nop
000fd2   0000     nop                      	nop
000fd4   0000     nop                      	nop
000fd6   0000     nop                      	nop
000fd8   0000     nop                      	nop
000fda   0000     nop                      	nop
000fdc   0000     nop                      	nop
000fde   0000     nop                      	nop
000fe0   0000     nop                      	nop
000fe2   0000     nop                      	nop
000fe4   0000     nop                      	nop
000fe6   0000     nop                      	nop
000fe8   0000     nop                      	nop
000fea   0000     nop                      	nop
000fec   0000     nop                      	nop
000fee   0000     nop                      	nop
000ff0   0000     nop                      	nop
000ff2   0000     nop                      	nop
000ff4   0000     nop                      	nop
000ff6   0000     nop                      	nop
000ff8   0000     nop                      	nop
000ffa   0000     nop                      	nop
000ffc   0000     nop                      	nop
000ffe   0000     nop                      	nop
001000   0000     nop                      	nop
001002   0000     nop                      	nop
001004   0000     nop                      	nop
001006   0000     nop                      	nop
001008   0000     nop                      	nop
00100a   0000     nop                      	nop
00100c   0000     nop                      	nop
00100e   0000     nop                      	nop
001010   0000     nop                      	nop
001012   0000     nop                      	nop
001014   0000     nop                      	nop
001016   0000     nop                      	nop
001018   0000     nop                      	nop
                                           	
                                           ;	.line	1600; meter_logger.c	PWM_PIN = 0;
00101a   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
00101c   0000     nop                      	nop
00101e   0000     nop                      	nop
001020   0000     nop                      	nop
001022   0000     nop                      	nop
001024   0000     nop                      	nop
001026   0000     nop                      	nop
001028   0000     nop                      	nop
00102a   0000     nop                      	nop
00102c   0000     nop                      	nop
00102e   0000     nop                      	nop
001030   0000     nop                      	nop
001032   0000     nop                      	nop
001034   0000     nop                      	nop
001036   0000     nop                      	nop
001038   0000     nop                      	nop
00103a   0000     nop                      	nop
00103c   0000     nop                      	nop
00103e   0000     nop                      	nop
001040   0000     nop                      	nop
001042   0000     nop                      	nop
001044   0000     nop                      	nop
001046   0000     nop                      	nop
001048   0000     nop                      	nop
00104a   0000     nop                      	nop
00104c   0000     nop                      	nop
00104e   0000     nop                      	nop
001050   0000     nop                      	nop
001052   0000     nop                      	nop
001054   0000     nop                      	nop
001056   0000     nop                      	nop
001058   0000     nop                      	nop
00105a   0000     nop                      	nop
00105c   0000     nop                      	nop
00105e   0000     nop                      	nop
001060   0000     nop                      	nop
001062   0000     nop                      	nop
001064   0000     nop                      	nop
001066   0000     nop                      	nop
001068   0000     nop                      	nop
00106a   0000     nop                      	nop
00106c   0000     nop                      	nop
00106e   0000     nop                      	nop
001070   0000     nop                      	nop
001072   0000     nop                      	nop
001074   0000     nop                      	nop
001076   0000     nop                      	nop
001078   0000     nop                      	nop
00107a   0000     nop                      	nop
00107c   0000     nop                      	nop
00107e   0000     nop                      	nop
001080   0000     nop                      	nop
001082   0000     nop                      	nop
001084   0000     nop                      	nop
001086   0000     nop                      	nop
001088   0000     nop                      	nop
00108a   0000     nop                      	nop
00108c   0000     nop                      	nop
00108e   0000     nop                      	nop
001090   0000     nop                      	nop
001092   0000     nop                      	nop
001094   0000     nop                      	nop
001096   0000     nop                      	nop
001098   0000     nop                      	nop
00109a   0000     nop                      	nop
00109c   0000     nop                      	nop
00109e   0000     nop                      	nop
0010a0   0000     nop                      	nop
0010a2   0000     nop                      	nop
0010a4   0000     nop                      	nop
0010a6   0000     nop                      	nop
0010a8   0000     nop                      	nop
0010aa   0000     nop                      	nop
0010ac   0000     nop                      	nop
0010ae   0000     nop                      	nop
0010b0   0000     nop                      	nop
0010b2   0000     nop                      	nop
0010b4   0000     nop                      	nop
0010b6   0000     nop                      	nop
0010b8   0000     nop                      	nop
0010ba   0000     nop                      	nop
0010bc   0000     nop                      	nop
0010be   0000     nop                      	nop
0010c0   0000     nop                      	nop
0010c2   0000     nop                      	nop
0010c4   0000     nop                      	nop
0010c6   0000     nop                      	nop
0010c8   0000     nop                      	nop
0010ca   0000     nop                      	nop
0010cc   0000     nop                      	nop
0010ce   0000     nop                      	nop
0010d0   0000     nop                      	nop
0010d2   0000     nop                      	nop
0010d4   0000     nop                      	nop
0010d6   0000     nop                      	nop
0010d8   0000     nop                      	nop
0010da   0000     nop                      	nop
0010dc   0000     nop                      	nop
0010de   0000     nop                      	nop
0010e0   0000     nop                      	nop
0010e2   0000     nop                      	nop
0010e4   0000     nop                      	nop
0010e6   0000     nop                      	nop
0010e8   0000     nop                      	nop
0010ea   0000     nop                      	nop
0010ec   0000     nop                      	nop
0010ee   0000     nop                      	nop
0010f0   0000     nop                      	nop
0010f2   0000     nop                      	nop
0010f4   0000     nop                      	nop
0010f6   0000     nop                      	nop
0010f8   0000     nop                      	nop
0010fa   0000     nop                      	nop
0010fc   0000     nop                      	nop
0010fe   0000     nop                      	nop
001100   0000     nop                      	nop
001102   0000     nop                      	nop
001104   0000     nop                      	nop
001106   0000     nop                      	nop
001108   0000     nop                      	nop
00110a   0000     nop                      	nop
00110c   0000     nop                      	nop
00110e   0000     nop                      	nop
001110   0000     nop                      	nop
001112   0000     nop                      	nop
001114   0000     nop                      	nop
001116   0000     nop                      	nop
001118   0000     nop                      	nop
00111a   0000     nop                      	nop
00111c   0000     nop                      	nop
00111e   0000     nop                      	nop
001120   0000     nop                      	nop
001122   0000     nop                      	nop
001124   0000     nop                      	nop
001126   0000     nop                      	nop
001128   0000     nop                      	nop
                                           	
                                           ;	.line	1738; meter_logger.c	PWM_PIN = 1;
00112a   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
00112c   0000     nop                      	nop
00112e   0000     nop                      	nop
001130   0000     nop                      	nop
001132   0000     nop                      	nop
001134   0000     nop                      	nop
001136   0000     nop                      	nop
001138   0000     nop                      	nop
00113a   0000     nop                      	nop
00113c   0000     nop                      	nop
00113e   0000     nop                      	nop
001140   0000     nop                      	nop
001142   0000     nop                      	nop
001144   0000     nop                      	nop
001146   0000     nop                      	nop
001148   0000     nop                      	nop
00114a   0000     nop                      	nop
00114c   0000     nop                      	nop
00114e   0000     nop                      	nop
001150   0000     nop                      	nop
001152   0000     nop                      	nop
001154   0000     nop                      	nop
001156   0000     nop                      	nop
001158   0000     nop                      	nop
00115a   0000     nop                      	nop
00115c   0000     nop                      	nop
00115e   0000     nop                      	nop
001160   0000     nop                      	nop
001162   0000     nop                      	nop
001164   0000     nop                      	nop
001166   0000     nop                      	nop
001168   0000     nop                      	nop
00116a   0000     nop                      	nop
00116c   0000     nop                      	nop
00116e   0000     nop                      	nop
001170   0000     nop                      	nop
001172   0000     nop                      	nop
001174   0000     nop                      	nop
001176   0000     nop                      	nop
001178   0000     nop                      	nop
00117a   0000     nop                      	nop
00117c   0000     nop                      	nop
00117e   0000     nop                      	nop
001180   0000     nop                      	nop
001182   0000     nop                      	nop
001184   0000     nop                      	nop
001186   0000     nop                      	nop
001188   0000     nop                      	nop
00118a   0000     nop                      	nop
00118c   0000     nop                      	nop
00118e   0000     nop                      	nop
001190   0000     nop                      	nop
001192   0000     nop                      	nop
001194   0000     nop                      	nop
001196   0000     nop                      	nop
001198   0000     nop                      	nop
00119a   0000     nop                      	nop
00119c   0000     nop                      	nop
00119e   0000     nop                      	nop
0011a0   0000     nop                      	nop
0011a2   0000     nop                      	nop
0011a4   0000     nop                      	nop
0011a6   0000     nop                      	nop
0011a8   0000     nop                      	nop
0011aa   0000     nop                      	nop
0011ac   0000     nop                      	nop
0011ae   0000     nop                      	nop
0011b0   0000     nop                      	nop
0011b2   0000     nop                      	nop
0011b4   0000     nop                      	nop
0011b6   0000     nop                      	nop
0011b8   0000     nop                      	nop
0011ba   0000     nop                      	nop
0011bc   0000     nop                      	nop
0011be   0000     nop                      	nop
0011c0   0000     nop                      	nop
0011c2   0000     nop                      	nop
0011c4   0000     nop                      	nop
0011c6   0000     nop                      	nop
0011c8   0000     nop                      	nop
0011ca   0000     nop                      	nop
0011cc   0000     nop                      	nop
0011ce   0000     nop                      	nop
0011d0   0000     nop                      	nop
0011d2   0000     nop                      	nop
0011d4   0000     nop                      	nop
0011d6   0000     nop                      	nop
0011d8   0000     nop                      	nop
0011da   0000     nop                      	nop
0011dc   0000     nop                      	nop
0011de   0000     nop                      	nop
0011e0   0000     nop                      	nop
0011e2   0000     nop                      	nop
0011e4   0000     nop                      	nop
0011e6   0000     nop                      	nop
0011e8   0000     nop                      	nop
0011ea   0000     nop                      	nop
0011ec   0000     nop                      	nop
0011ee   0000     nop                      	nop
0011f0   0000     nop                      	nop
0011f2   0000     nop                      	nop
0011f4   0000     nop                      	nop
0011f6   0000     nop                      	nop
0011f8   0000     nop                      	nop
0011fa   0000     nop                      	nop
0011fc   0000     nop                      	nop
0011fe   0000     nop                      	nop
001200   0000     nop                      	nop
001202   0000     nop                      	nop
001204   0000     nop                      	nop
001206   0000     nop                      	nop
001208   0000     nop                      	nop
00120a   0000     nop                      	nop
00120c   0000     nop                      	nop
00120e   0000     nop                      	nop
001210   0000     nop                      	nop
001212   0000     nop                      	nop
001214   0000     nop                      	nop
001216   0000     nop                      	nop
001218   0000     nop                      	nop
00121a   0000     nop                      	nop
00121c   0000     nop                      	nop
00121e   0000     nop                      	nop
001220   0000     nop                      	nop
001222   0000     nop                      	nop
001224   0000     nop                      	nop
001226   0000     nop                      	nop
001228   0000     nop                      	nop
00122a   0000     nop                      	nop
00122c   0000     nop                      	nop
00122e   0000     nop                      	nop
001230   0000     nop                      	nop
001232   0000     nop                      	nop
001234   0000     nop                      	nop
001236   0000     nop                      	nop
001238   0000     nop                      	nop
                                           	
                                           ;	.line	1876; meter_logger.c	PWM_PIN = 0;
00123a   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
00123c   0000     nop                      	nop
00123e   0000     nop                      	nop
001240   0000     nop                      	nop
001242   0000     nop                      	nop
001244   0000     nop                      	nop
001246   0000     nop                      	nop
001248   0000     nop                      	nop
00124a   0000     nop                      	nop
00124c   0000     nop                      	nop
00124e   0000     nop                      	nop
001250   0000     nop                      	nop
001252   0000     nop                      	nop
001254   0000     nop                      	nop
001256   0000     nop                      	nop
001258   0000     nop                      	nop
00125a   0000     nop                      	nop
00125c   0000     nop                      	nop
00125e   0000     nop                      	nop
001260   0000     nop                      	nop
001262   0000     nop                      	nop
001264   0000     nop                      	nop
001266   0000     nop                      	nop
001268   0000     nop                      	nop
00126a   0000     nop                      	nop
00126c   0000     nop                      	nop
00126e   0000     nop                      	nop
001270   0000     nop                      	nop
001272   0000     nop                      	nop
001274   0000     nop                      	nop
001276   0000     nop                      	nop
001278   0000     nop                      	nop
00127a   0000     nop                      	nop
00127c   0000     nop                      	nop
00127e   0000     nop                      	nop
001280   0000     nop                      	nop
001282   0000     nop                      	nop
001284   0000     nop                      	nop
001286   0000     nop                      	nop
001288   0000     nop                      	nop
00128a   0000     nop                      	nop
00128c   0000     nop                      	nop
00128e   0000     nop                      	nop
001290   0000     nop                      	nop
001292   0000     nop                      	nop
001294   0000     nop                      	nop
001296   0000     nop                      	nop
001298   0000     nop                      	nop
00129a   0000     nop                      	nop
00129c   0000     nop                      	nop
00129e   0000     nop                      	nop
0012a0   0000     nop                      	nop
0012a2   0000     nop                      	nop
0012a4   0000     nop                      	nop
0012a6   0000     nop                      	nop
0012a8   0000     nop                      	nop
0012aa   0000     nop                      	nop
0012ac   0000     nop                      	nop
0012ae   0000     nop                      	nop
0012b0   0000     nop                      	nop
0012b2   0000     nop                      	nop
0012b4   0000     nop                      	nop
0012b6   0000     nop                      	nop
0012b8   0000     nop                      	nop
0012ba   0000     nop                      	nop
0012bc   0000     nop                      	nop
0012be   0000     nop                      	nop
0012c0   0000     nop                      	nop
0012c2   0000     nop                      	nop
0012c4   0000     nop                      	nop
0012c6   0000     nop                      	nop
0012c8   0000     nop                      	nop
0012ca   0000     nop                      	nop
0012cc   0000     nop                      	nop
0012ce   0000     nop                      	nop
0012d0   0000     nop                      	nop
0012d2   0000     nop                      	nop
0012d4   0000     nop                      	nop
0012d6   0000     nop                      	nop
0012d8   0000     nop                      	nop
0012da   0000     nop                      	nop
0012dc   0000     nop                      	nop
0012de   0000     nop                      	nop
0012e0   0000     nop                      	nop
0012e2   0000     nop                      	nop
0012e4   0000     nop                      	nop
0012e6   0000     nop                      	nop
0012e8   0000     nop                      	nop
0012ea   0000     nop                      	nop
0012ec   0000     nop                      	nop
0012ee   0000     nop                      	nop
0012f0   0000     nop                      	nop
0012f2   0000     nop                      	nop
0012f4   0000     nop                      	nop
0012f6   0000     nop                      	nop
0012f8   0000     nop                      	nop
0012fa   0000     nop                      	nop
0012fc   0000     nop                      	nop
0012fe   0000     nop                      	nop
001300   0000     nop                      	nop
001302   0000     nop                      	nop
001304   0000     nop                      	nop
001306   0000     nop                      	nop
001308   0000     nop                      	nop
00130a   0000     nop                      	nop
00130c   0000     nop                      	nop
00130e   0000     nop                      	nop
001310   0000     nop                      	nop
001312   0000     nop                      	nop
001314   0000     nop                      	nop
001316   0000     nop                      	nop
001318   0000     nop                      	nop
00131a   0000     nop                      	nop
00131c   0000     nop                      	nop
00131e   0000     nop                      	nop
001320   0000     nop                      	nop
001322   0000     nop                      	nop
001324   0000     nop                      	nop
001326   0000     nop                      	nop
001328   0000     nop                      	nop
00132a   0000     nop                      	nop
00132c   0000     nop                      	nop
00132e   0000     nop                      	nop
001330   0000     nop                      	nop
001332   0000     nop                      	nop
001334   0000     nop                      	nop
001336   0000     nop                      	nop
001338   0000     nop                      	nop
00133a   0000     nop                      	nop
00133c   0000     nop                      	nop
00133e   0000     nop                      	nop
001340   0000     nop                      	nop
001342   0000     nop                      	nop
001344   0000     nop                      	nop
001346   0000     nop                      	nop
001348   0000     nop                      	nop
                                           	
                                           ;	.line	2014; meter_logger.c	PWM_PIN = 1;
00134a   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
00134c   0000     nop                      	nop
00134e   0000     nop                      	nop
001350   0000     nop                      	nop
001352   0000     nop                      	nop
001354   0000     nop                      	nop
001356   0000     nop                      	nop
001358   0000     nop                      	nop
00135a   0000     nop                      	nop
00135c   0000     nop                      	nop
00135e   0000     nop                      	nop
001360   0000     nop                      	nop
001362   0000     nop                      	nop
001364   0000     nop                      	nop
001366   0000     nop                      	nop
001368   0000     nop                      	nop
00136a   0000     nop                      	nop
00136c   0000     nop                      	nop
00136e   0000     nop                      	nop
001370   0000     nop                      	nop
001372   0000     nop                      	nop
001374   0000     nop                      	nop
001376   0000     nop                      	nop
001378   0000     nop                      	nop
00137a   0000     nop                      	nop
00137c   0000     nop                      	nop
00137e   0000     nop                      	nop
001380   0000     nop                      	nop
001382   0000     nop                      	nop
001384   0000     nop                      	nop
001386   0000     nop                      	nop
001388   0000     nop                      	nop
00138a   0000     nop                      	nop
00138c   0000     nop                      	nop
00138e   0000     nop                      	nop
001390   0000     nop                      	nop
001392   0000     nop                      	nop
001394   0000     nop                      	nop
001396   0000     nop                      	nop
001398   0000     nop                      	nop
00139a   0000     nop                      	nop
00139c   0000     nop                      	nop
00139e   0000     nop                      	nop
0013a0   0000     nop                      	nop
0013a2   0000     nop                      	nop
0013a4   0000     nop                      	nop
0013a6   0000     nop                      	nop
0013a8   0000     nop                      	nop
0013aa   0000     nop                      	nop
0013ac   0000     nop                      	nop
0013ae   0000     nop                      	nop
0013b0   0000     nop                      	nop
0013b2   0000     nop                      	nop
0013b4   0000     nop                      	nop
0013b6   0000     nop                      	nop
0013b8   0000     nop                      	nop
0013ba   0000     nop                      	nop
0013bc   0000     nop                      	nop
0013be   0000     nop                      	nop
0013c0   0000     nop                      	nop
0013c2   0000     nop                      	nop
0013c4   0000     nop                      	nop
0013c6   0000     nop                      	nop
0013c8   0000     nop                      	nop
0013ca   0000     nop                      	nop
0013cc   0000     nop                      	nop
0013ce   0000     nop                      	nop
0013d0   0000     nop                      	nop
0013d2   0000     nop                      	nop
0013d4   0000     nop                      	nop
0013d6   0000     nop                      	nop
0013d8   0000     nop                      	nop
0013da   0000     nop                      	nop
0013dc   0000     nop                      	nop
0013de   0000     nop                      	nop
0013e0   0000     nop                      	nop
0013e2   0000     nop                      	nop
0013e4   0000     nop                      	nop
0013e6   0000     nop                      	nop
0013e8   0000     nop                      	nop
0013ea   0000     nop                      	nop
0013ec   0000     nop                      	nop
0013ee   0000     nop                      	nop
0013f0   0000     nop                      	nop
0013f2   0000     nop                      	nop
0013f4   0000     nop                      	nop
0013f6   0000     nop                      	nop
0013f8   0000     nop                      	nop
0013fa   0000     nop                      	nop
0013fc   0000     nop                      	nop
0013fe   0000     nop                      	nop
001400   0000     nop                      	nop
001402   0000     nop                      	nop
001404   0000     nop                      	nop
001406   0000     nop                      	nop
001408   0000     nop                      	nop
00140a   0000     nop                      	nop
00140c   0000     nop                      	nop
00140e   0000     nop                      	nop
001410   0000     nop                      	nop
001412   0000     nop                      	nop
001414   0000     nop                      	nop
001416   0000     nop                      	nop
001418   0000     nop                      	nop
00141a   0000     nop                      	nop
00141c   0000     nop                      	nop
00141e   0000     nop                      	nop
001420   0000     nop                      	nop
001422   0000     nop                      	nop
001424   0000     nop                      	nop
001426   0000     nop                      	nop
001428   0000     nop                      	nop
00142a   0000     nop                      	nop
00142c   0000     nop                      	nop
00142e   0000     nop                      	nop
001430   0000     nop                      	nop
001432   0000     nop                      	nop
001434   0000     nop                      	nop
001436   0000     nop                      	nop
001438   0000     nop                      	nop
00143a   0000     nop                      	nop
00143c   0000     nop                      	nop
00143e   0000     nop                      	nop
001440   0000     nop                      	nop
001442   0000     nop                      	nop
001444   0000     nop                      	nop
001446   0000     nop                      	nop
001448   0000     nop                      	nop
00144a   0000     nop                      	nop
00144c   0000     nop                      	nop
00144e   0000     nop                      	nop
001450   0000     nop                      	nop
001452   0000     nop                      	nop
001454   0000     nop                      	nop
001456   0000     nop                      	nop
001458   0000     nop                      	nop
                                           	
                                           ;	.line	2152; meter_logger.c	PWM_PIN = 0;
00145a   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
00145c   0000     nop                      	nop
00145e   0000     nop                      	nop
001460   0000     nop                      	nop
001462   0000     nop                      	nop
001464   0000     nop                      	nop
001466   0000     nop                      	nop
001468   0000     nop                      	nop
00146a   0000     nop                      	nop
00146c   0000     nop                      	nop
00146e   0000     nop                      	nop
001470   0000     nop                      	nop
001472   0000     nop                      	nop
001474   0000     nop                      	nop
001476   0000     nop                      	nop
001478   0000     nop                      	nop
00147a   0000     nop                      	nop
00147c   0000     nop                      	nop
00147e   0000     nop                      	nop
001480   0000     nop                      	nop
001482   0000     nop                      	nop
001484   0000     nop                      	nop
001486   0000     nop                      	nop
001488   0000     nop                      	nop
00148a   0000     nop                      	nop
00148c   0000     nop                      	nop
00148e   0000     nop                      	nop
001490   0000     nop                      	nop
001492   0000     nop                      	nop
001494   0000     nop                      	nop
001496   0000     nop                      	nop
001498   0000     nop                      	nop
00149a   0000     nop                      	nop
00149c   0000     nop                      	nop
00149e   0000     nop                      	nop
0014a0   0000     nop                      	nop
0014a2   0000     nop                      	nop
0014a4   0000     nop                      	nop
0014a6   0000     nop                      	nop
0014a8   0000     nop                      	nop
0014aa   0000     nop                      	nop
0014ac   0000     nop                      	nop
0014ae   0000     nop                      	nop
0014b0   0000     nop                      	nop
0014b2   0000     nop                      	nop
0014b4   0000     nop                      	nop
0014b6   0000     nop                      	nop
0014b8   0000     nop                      	nop
0014ba   0000     nop                      	nop
0014bc   0000     nop                      	nop
0014be   0000     nop                      	nop
0014c0   0000     nop                      	nop
0014c2   0000     nop                      	nop
0014c4   0000     nop                      	nop
0014c6   0000     nop                      	nop
0014c8   0000     nop                      	nop
0014ca   0000     nop                      	nop
0014cc   0000     nop                      	nop
0014ce   0000     nop                      	nop
0014d0   0000     nop                      	nop
0014d2   0000     nop                      	nop
0014d4   0000     nop                      	nop
0014d6   0000     nop                      	nop
0014d8   0000     nop                      	nop
0014da   0000     nop                      	nop
0014dc   0000     nop                      	nop
0014de   0000     nop                      	nop
0014e0   0000     nop                      	nop
0014e2   0000     nop                      	nop
0014e4   0000     nop                      	nop
0014e6   0000     nop                      	nop
0014e8   0000     nop                      	nop
0014ea   0000     nop                      	nop
0014ec   0000     nop                      	nop
0014ee   0000     nop                      	nop
0014f0   0000     nop                      	nop
0014f2   0000     nop                      	nop
0014f4   0000     nop                      	nop
0014f6   0000     nop                      	nop
0014f8   0000     nop                      	nop
0014fa   0000     nop                      	nop
0014fc   0000     nop                      	nop
0014fe   0000     nop                      	nop
001500   0000     nop                      	nop
001502   0000     nop                      	nop
001504   0000     nop                      	nop
001506   0000     nop                      	nop
001508   0000     nop                      	nop
00150a   0000     nop                      	nop
00150c   0000     nop                      	nop
00150e   0000     nop                      	nop
001510   0000     nop                      	nop
001512   0000     nop                      	nop
001514   0000     nop                      	nop
001516   0000     nop                      	nop
001518   0000     nop                      	nop
00151a   0000     nop                      	nop
00151c   0000     nop                      	nop
00151e   0000     nop                      	nop
001520   0000     nop                      	nop
001522   0000     nop                      	nop
001524   0000     nop                      	nop
001526   0000     nop                      	nop
001528   0000     nop                      	nop
00152a   0000     nop                      	nop
00152c   0000     nop                      	nop
00152e   0000     nop                      	nop
001530   0000     nop                      	nop
001532   0000     nop                      	nop
001534   0000     nop                      	nop
001536   0000     nop                      	nop
001538   0000     nop                      	nop
00153a   0000     nop                      	nop
00153c   0000     nop                      	nop
00153e   0000     nop                      	nop
001540   0000     nop                      	nop
001542   0000     nop                      	nop
001544   0000     nop                      	nop
001546   0000     nop                      	nop
001548   0000     nop                      	nop
00154a   0000     nop                      	nop
00154c   0000     nop                      	nop
00154e   0000     nop                      	nop
001550   0000     nop                      	nop
001552   0000     nop                      	nop
001554   0000     nop                      	nop
001556   0000     nop                      	nop
001558   0000     nop                      	nop
00155a   0000     nop                      	nop
00155c   0000     nop                      	nop
00155e   0000     nop                      	nop
001560   0000     nop                      	nop
001562   0000     nop                      	nop
001564   0000     nop                      	nop
001566   0000     nop                      	nop
001568   0000     nop                      	nop
                                           	
                                           ;	.line	2290; meter_logger.c	PWM_PIN = 1;
00156a   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
00156c   0000     nop                      	nop
00156e   0000     nop                      	nop
001570   0000     nop                      	nop
001572   0000     nop                      	nop
001574   0000     nop                      	nop
001576   0000     nop                      	nop
001578   0000     nop                      	nop
00157a   0000     nop                      	nop
00157c   0000     nop                      	nop
00157e   0000     nop                      	nop
001580   0000     nop                      	nop
001582   0000     nop                      	nop
001584   0000     nop                      	nop
001586   0000     nop                      	nop
001588   0000     nop                      	nop
00158a   0000     nop                      	nop
00158c   0000     nop                      	nop
00158e   0000     nop                      	nop
001590   0000     nop                      	nop
001592   0000     nop                      	nop
001594   0000     nop                      	nop
001596   0000     nop                      	nop
001598   0000     nop                      	nop
00159a   0000     nop                      	nop
00159c   0000     nop                      	nop
00159e   0000     nop                      	nop
0015a0   0000     nop                      	nop
0015a2   0000     nop                      	nop
0015a4   0000     nop                      	nop
0015a6   0000     nop                      	nop
0015a8   0000     nop                      	nop
0015aa   0000     nop                      	nop
0015ac   0000     nop                      	nop
0015ae   0000     nop                      	nop
0015b0   0000     nop                      	nop
0015b2   0000     nop                      	nop
0015b4   0000     nop                      	nop
0015b6   0000     nop                      	nop
0015b8   0000     nop                      	nop
0015ba   0000     nop                      	nop
0015bc   0000     nop                      	nop
0015be   0000     nop                      	nop
0015c0   0000     nop                      	nop
0015c2   0000     nop                      	nop
0015c4   0000     nop                      	nop
0015c6   0000     nop                      	nop
0015c8   0000     nop                      	nop
0015ca   0000     nop                      	nop
0015cc   0000     nop                      	nop
0015ce   0000     nop                      	nop
0015d0   0000     nop                      	nop
0015d2   0000     nop                      	nop
0015d4   0000     nop                      	nop
0015d6   0000     nop                      	nop
0015d8   0000     nop                      	nop
0015da   0000     nop                      	nop
0015dc   0000     nop                      	nop
0015de   0000     nop                      	nop
0015e0   0000     nop                      	nop
0015e2   0000     nop                      	nop
0015e4   0000     nop                      	nop
0015e6   0000     nop                      	nop
0015e8   0000     nop                      	nop
0015ea   0000     nop                      	nop
0015ec   0000     nop                      	nop
0015ee   0000     nop                      	nop
0015f0   0000     nop                      	nop
0015f2   0000     nop                      	nop
0015f4   0000     nop                      	nop
0015f6   0000     nop                      	nop
0015f8   0000     nop                      	nop
0015fa   0000     nop                      	nop
0015fc   0000     nop                      	nop
0015fe   0000     nop                      	nop
001600   0000     nop                      	nop
001602   0000     nop                      	nop
001604   0000     nop                      	nop
001606   0000     nop                      	nop
001608   0000     nop                      	nop
00160a   0000     nop                      	nop
00160c   0000     nop                      	nop
00160e   0000     nop                      	nop
001610   0000     nop                      	nop
001612   0000     nop                      	nop
001614   0000     nop                      	nop
001616   0000     nop                      	nop
001618   0000     nop                      	nop
00161a   0000     nop                      	nop
00161c   0000     nop                      	nop
00161e   0000     nop                      	nop
001620   0000     nop                      	nop
001622   0000     nop                      	nop
001624   0000     nop                      	nop
001626   0000     nop                      	nop
001628   0000     nop                      	nop
00162a   0000     nop                      	nop
00162c   0000     nop                      	nop
00162e   0000     nop                      	nop
001630   0000     nop                      	nop
001632   0000     nop                      	nop
001634   0000     nop                      	nop
001636   0000     nop                      	nop
001638   0000     nop                      	nop
00163a   0000     nop                      	nop
00163c   0000     nop                      	nop
00163e   0000     nop                      	nop
001640   0000     nop                      	nop
001642   0000     nop                      	nop
001644   0000     nop                      	nop
001646   0000     nop                      	nop
001648   0000     nop                      	nop
00164a   0000     nop                      	nop
00164c   0000     nop                      	nop
00164e   0000     nop                      	nop
001650   0000     nop                      	nop
001652   0000     nop                      	nop
001654   0000     nop                      	nop
001656   0000     nop                      	nop
001658   0000     nop                      	nop
00165a   0000     nop                      	nop
00165c   0000     nop                      	nop
00165e   0000     nop                      	nop
001660   0000     nop                      	nop
001662   0000     nop                      	nop
001664   0000     nop                      	nop
001666   0000     nop                      	nop
001668   0000     nop                      	nop
00166a   0000     nop                      	nop
00166c   0000     nop                      	nop
00166e   0000     nop                      	nop
001670   0000     nop                      	nop
001672   0000     nop                      	nop
001674   0000     nop                      	nop
001676   0000     nop                      	nop
001678   0000     nop                      	nop
                                           	
                                           ;	.line	2428; meter_logger.c	PWM_PIN = 0;
00167a   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
00167c   0000     nop                      	nop
00167e   0000     nop                      	nop
001680   0000     nop                      	nop
001682   0000     nop                      	nop
001684   0000     nop                      	nop
001686   0000     nop                      	nop
001688   0000     nop                      	nop
00168a   0000     nop                      	nop
00168c   0000     nop                      	nop
00168e   0000     nop                      	nop
001690   0000     nop                      	nop
001692   0000     nop                      	nop
001694   0000     nop                      	nop
001696   0000     nop                      	nop
001698   0000     nop                      	nop
00169a   0000     nop                      	nop
00169c   0000     nop                      	nop
00169e   0000     nop                      	nop
0016a0   0000     nop                      	nop
0016a2   0000     nop                      	nop
0016a4   0000     nop                      	nop
0016a6   0000     nop                      	nop
0016a8   0000     nop                      	nop
0016aa   0000     nop                      	nop
0016ac   0000     nop                      	nop
0016ae   0000     nop                      	nop
0016b0   0000     nop                      	nop
0016b2   0000     nop                      	nop
0016b4   0000     nop                      	nop
0016b6   0000     nop                      	nop
0016b8   0000     nop                      	nop
0016ba   0000     nop                      	nop
0016bc   0000     nop                      	nop
0016be   0000     nop                      	nop
0016c0   0000     nop                      	nop
0016c2   0000     nop                      	nop
0016c4   0000     nop                      	nop
0016c6   0000     nop                      	nop
0016c8   0000     nop                      	nop
0016ca   0000     nop                      	nop
0016cc   0000     nop                      	nop
0016ce   0000     nop                      	nop
0016d0   0000     nop                      	nop
0016d2   0000     nop                      	nop
0016d4   0000     nop                      	nop
0016d6   0000     nop                      	nop
0016d8   0000     nop                      	nop
0016da   0000     nop                      	nop
0016dc   0000     nop                      	nop
0016de   0000     nop                      	nop
0016e0   0000     nop                      	nop
0016e2   0000     nop                      	nop
0016e4   0000     nop                      	nop
0016e6   0000     nop                      	nop
0016e8   0000     nop                      	nop
0016ea   0000     nop                      	nop
0016ec   0000     nop                      	nop
0016ee   0000     nop                      	nop
0016f0   0000     nop                      	nop
0016f2   0000     nop                      	nop
0016f4   0000     nop                      	nop
0016f6   0000     nop                      	nop
0016f8   0000     nop                      	nop
0016fa   0000     nop                      	nop
0016fc   0000     nop                      	nop
0016fe   0000     nop                      	nop
001700   0000     nop                      	nop
001702   0000     nop                      	nop
001704   0000     nop                      	nop
001706   0000     nop                      	nop
001708   0000     nop                      	nop
00170a   0000     nop                      	nop
00170c   0000     nop                      	nop
00170e   0000     nop                      	nop
001710   0000     nop                      	nop
001712   0000     nop                      	nop
001714   0000     nop                      	nop
001716   0000     nop                      	nop
001718   0000     nop                      	nop
00171a   0000     nop                      	nop
00171c   0000     nop                      	nop
00171e   0000     nop                      	nop
001720   0000     nop                      	nop
001722   0000     nop                      	nop
001724   0000     nop                      	nop
001726   0000     nop                      	nop
001728   0000     nop                      	nop
00172a   0000     nop                      	nop
00172c   0000     nop                      	nop
00172e   0000     nop                      	nop
001730   0000     nop                      	nop
001732   0000     nop                      	nop
001734   0000     nop                      	nop
001736   0000     nop                      	nop
001738   0000     nop                      	nop
00173a   0000     nop                      	nop
00173c   0000     nop                      	nop
00173e   0000     nop                      	nop
001740   0000     nop                      	nop
001742   0000     nop                      	nop
001744   0000     nop                      	nop
001746   0000     nop                      	nop
001748   0000     nop                      	nop
00174a   0000     nop                      	nop
00174c   0000     nop                      	nop
00174e   0000     nop                      	nop
001750   0000     nop                      	nop
001752   0000     nop                      	nop
001754   0000     nop                      	nop
001756   0000     nop                      	nop
001758   0000     nop                      	nop
00175a   0000     nop                      	nop
00175c   0000     nop                      	nop
00175e   0000     nop                      	nop
001760   0000     nop                      	nop
001762   0000     nop                      	nop
001764   0000     nop                      	nop
001766   0000     nop                      	nop
001768   0000     nop                      	nop
00176a   0000     nop                      	nop
00176c   0000     nop                      	nop
00176e   0000     nop                      	nop
001770   0000     nop                      	nop
001772   0000     nop                      	nop
001774   0000     nop                      	nop
001776   0000     nop                      	nop
001778   0000     nop                      	nop
00177a   0000     nop                      	nop
00177c   0000     nop                      	nop
00177e   0000     nop                      	nop
001780   0000     nop                      	nop
001782   0000     nop                      	nop
001784   0000     nop                      	nop
001786   0000     nop                      	nop
001788   0000     nop                      	nop
                                           	
                                           ;	.line	2566; meter_logger.c	PWM_PIN = 1;
00178a   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
00178c   0000     nop                      	nop
00178e   0000     nop                      	nop
001790   0000     nop                      	nop
001792   0000     nop                      	nop
001794   0000     nop                      	nop
001796   0000     nop                      	nop
001798   0000     nop                      	nop
00179a   0000     nop                      	nop
00179c   0000     nop                      	nop
00179e   0000     nop                      	nop
0017a0   0000     nop                      	nop
0017a2   0000     nop                      	nop
0017a4   0000     nop                      	nop
0017a6   0000     nop                      	nop
0017a8   0000     nop                      	nop
0017aa   0000     nop                      	nop
0017ac   0000     nop                      	nop
0017ae   0000     nop                      	nop
0017b0   0000     nop                      	nop
0017b2   0000     nop                      	nop
0017b4   0000     nop                      	nop
0017b6   0000     nop                      	nop
0017b8   0000     nop                      	nop
0017ba   0000     nop                      	nop
0017bc   0000     nop                      	nop
0017be   0000     nop                      	nop
0017c0   0000     nop                      	nop
0017c2   0000     nop                      	nop
0017c4   0000     nop                      	nop
0017c6   0000     nop                      	nop
0017c8   0000     nop                      	nop
0017ca   0000     nop                      	nop
0017cc   0000     nop                      	nop
0017ce   0000     nop                      	nop
0017d0   0000     nop                      	nop
0017d2   0000     nop                      	nop
0017d4   0000     nop                      	nop
0017d6   0000     nop                      	nop
0017d8   0000     nop                      	nop
0017da   0000     nop                      	nop
0017dc   0000     nop                      	nop
0017de   0000     nop                      	nop
0017e0   0000     nop                      	nop
0017e2   0000     nop                      	nop
0017e4   0000     nop                      	nop
0017e6   0000     nop                      	nop
0017e8   0000     nop                      	nop
0017ea   0000     nop                      	nop
0017ec   0000     nop                      	nop
0017ee   0000     nop                      	nop
0017f0   0000     nop                      	nop
0017f2   0000     nop                      	nop
0017f4   0000     nop                      	nop
0017f6   0000     nop                      	nop
0017f8   0000     nop                      	nop
0017fa   0000     nop                      	nop
0017fc   0000     nop                      	nop
0017fe   0000     nop                      	nop
001800   0000     nop                      	nop
001802   0000     nop                      	nop
001804   0000     nop                      	nop
001806   0000     nop                      	nop
001808   0000     nop                      	nop
00180a   0000     nop                      	nop
00180c   0000     nop                      	nop
00180e   0000     nop                      	nop
001810   0000     nop                      	nop
001812   0000     nop                      	nop
001814   0000     nop                      	nop
001816   0000     nop                      	nop
001818   0000     nop                      	nop
00181a   0000     nop                      	nop
00181c   0000     nop                      	nop
00181e   0000     nop                      	nop
001820   0000     nop                      	nop
001822   0000     nop                      	nop
001824   0000     nop                      	nop
001826   0000     nop                      	nop
001828   0000     nop                      	nop
00182a   0000     nop                      	nop
00182c   0000     nop                      	nop
00182e   0000     nop                      	nop
001830   0000     nop                      	nop
001832   0000     nop                      	nop
001834   0000     nop                      	nop
001836   0000     nop                      	nop
001838   0000     nop                      	nop
00183a   0000     nop                      	nop
00183c   0000     nop                      	nop
00183e   0000     nop                      	nop
001840   0000     nop                      	nop
001842   0000     nop                      	nop
001844   0000     nop                      	nop
001846   0000     nop                      	nop
001848   0000     nop                      	nop
00184a   0000     nop                      	nop
00184c   0000     nop                      	nop
00184e   0000     nop                      	nop
001850   0000     nop                      	nop
001852   0000     nop                      	nop
001854   0000     nop                      	nop
001856   0000     nop                      	nop
001858   0000     nop                      	nop
00185a   0000     nop                      	nop
00185c   0000     nop                      	nop
00185e   0000     nop                      	nop
001860   0000     nop                      	nop
001862   0000     nop                      	nop
001864   0000     nop                      	nop
001866   0000     nop                      	nop
001868   0000     nop                      	nop
00186a   0000     nop                      	nop
00186c   0000     nop                      	nop
00186e   0000     nop                      	nop
001870   0000     nop                      	nop
001872   0000     nop                      	nop
001874   0000     nop                      	nop
001876   0000     nop                      	nop
001878   0000     nop                      	nop
00187a   0000     nop                      	nop
00187c   0000     nop                      	nop
00187e   0000     nop                      	nop
001880   0000     nop                      	nop
001882   0000     nop                      	nop
001884   0000     nop                      	nop
001886   0000     nop                      	nop
001888   0000     nop                      	nop
00188a   0000     nop                      	nop
00188c   0000     nop                      	nop
00188e   0000     nop                      	nop
001890   0000     nop                      	nop
001892   0000     nop                      	nop
001894   0000     nop                      	nop
001896   0000     nop                      	nop
001898   0000     nop                      	nop
                                           	
                                           ;	.line	2704; meter_logger.c	PWM_PIN = 0;
00189a   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
00189c   0000     nop                      	nop
00189e   0000     nop                      	nop
0018a0   0000     nop                      	nop
0018a2   0000     nop                      	nop
0018a4   0000     nop                      	nop
0018a6   0000     nop                      	nop
0018a8   0000     nop                      	nop
0018aa   0000     nop                      	nop
0018ac   0000     nop                      	nop
0018ae   0000     nop                      	nop
0018b0   0000     nop                      	nop
0018b2   0000     nop                      	nop
0018b4   0000     nop                      	nop
0018b6   0000     nop                      	nop
0018b8   0000     nop                      	nop
0018ba   0000     nop                      	nop
0018bc   0000     nop                      	nop
0018be   0000     nop                      	nop
0018c0   0000     nop                      	nop
0018c2   0000     nop                      	nop
0018c4   0000     nop                      	nop
0018c6   0000     nop                      	nop
0018c8   0000     nop                      	nop
0018ca   0000     nop                      	nop
0018cc   0000     nop                      	nop
0018ce   0000     nop                      	nop
0018d0   0000     nop                      	nop
0018d2   0000     nop                      	nop
0018d4   0000     nop                      	nop
0018d6   0000     nop                      	nop
0018d8   0000     nop                      	nop
0018da   0000     nop                      	nop
0018dc   0000     nop                      	nop
0018de   0000     nop                      	nop
0018e0   0000     nop                      	nop
0018e2   0000     nop                      	nop
0018e4   0000     nop                      	nop
0018e6   0000     nop                      	nop
0018e8   0000     nop                      	nop
0018ea   0000     nop                      	nop
0018ec   0000     nop                      	nop
0018ee   0000     nop                      	nop
0018f0   0000     nop                      	nop
0018f2   0000     nop                      	nop
0018f4   0000     nop                      	nop
0018f6   0000     nop                      	nop
0018f8   0000     nop                      	nop
0018fa   0000     nop                      	nop
0018fc   0000     nop                      	nop
0018fe   0000     nop                      	nop
001900   0000     nop                      	nop
001902   0000     nop                      	nop
001904   0000     nop                      	nop
001906   0000     nop                      	nop
001908   0000     nop                      	nop
00190a   0000     nop                      	nop
00190c   0000     nop                      	nop
00190e   0000     nop                      	nop
001910   0000     nop                      	nop
001912   0000     nop                      	nop
001914   0000     nop                      	nop
001916   0000     nop                      	nop
001918   0000     nop                      	nop
00191a   0000     nop                      	nop
00191c   0000     nop                      	nop
00191e   0000     nop                      	nop
001920   0000     nop                      	nop
001922   0000     nop                      	nop
001924   0000     nop                      	nop
001926   0000     nop                      	nop
001928   0000     nop                      	nop
00192a   0000     nop                      	nop
00192c   0000     nop                      	nop
00192e   0000     nop                      	nop
001930   0000     nop                      	nop
001932   0000     nop                      	nop
001934   0000     nop                      	nop
001936   0000     nop                      	nop
001938   0000     nop                      	nop
00193a   0000     nop                      	nop
00193c   0000     nop                      	nop
00193e   0000     nop                      	nop
001940   0000     nop                      	nop
001942   0000     nop                      	nop
001944   0000     nop                      	nop
001946   0000     nop                      	nop
001948   0000     nop                      	nop
00194a   0000     nop                      	nop
00194c   0000     nop                      	nop
00194e   0000     nop                      	nop
001950   0000     nop                      	nop
001952   0000     nop                      	nop
001954   0000     nop                      	nop
001956   0000     nop                      	nop
001958   0000     nop                      	nop
00195a   0000     nop                      	nop
00195c   0000     nop                      	nop
00195e   0000     nop                      	nop
001960   0000     nop                      	nop
001962   0000     nop                      	nop
001964   0000     nop                      	nop
001966   0000     nop                      	nop
001968   0000     nop                      	nop
00196a   0000     nop                      	nop
00196c   0000     nop                      	nop
00196e   0000     nop                      	nop
001970   0000     nop                      	nop
001972   0000     nop                      	nop
001974   0000     nop                      	nop
001976   0000     nop                      	nop
001978   0000     nop                      	nop
00197a   0000     nop                      	nop
00197c   0000     nop                      	nop
00197e   0000     nop                      	nop
001980   0000     nop                      	nop
001982   0000     nop                      	nop
001984   0000     nop                      	nop
001986   0000     nop                      	nop
001988   0000     nop                      	nop
00198a   0000     nop                      	nop
00198c   0000     nop                      	nop
00198e   0000     nop                      	nop
001990   0000     nop                      	nop
001992   0000     nop                      	nop
001994   0000     nop                      	nop
001996   0000     nop                      	nop
001998   0000     nop                      	nop
00199a   0000     nop                      	nop
00199c   0000     nop                      	nop
00199e   0000     nop                      	nop
0019a0   0000     nop                      	nop
0019a2   0000     nop                      	nop
0019a4   0000     nop                      	nop
0019a6   0000     nop                      	nop
0019a8   0000     nop                      	nop
                                           	
                                           ;	.line	2842; meter_logger.c	PWM_PIN = 1;
0019aa   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
0019ac   0000     nop                      	nop
0019ae   0000     nop                      	nop
0019b0   0000     nop                      	nop
0019b2   0000     nop                      	nop
0019b4   0000     nop                      	nop
0019b6   0000     nop                      	nop
0019b8   0000     nop                      	nop
0019ba   0000     nop                      	nop
0019bc   0000     nop                      	nop
0019be   0000     nop                      	nop
0019c0   0000     nop                      	nop
0019c2   0000     nop                      	nop
0019c4   0000     nop                      	nop
0019c6   0000     nop                      	nop
0019c8   0000     nop                      	nop
0019ca   0000     nop                      	nop
0019cc   0000     nop                      	nop
0019ce   0000     nop                      	nop
0019d0   0000     nop                      	nop
0019d2   0000     nop                      	nop
0019d4   0000     nop                      	nop
0019d6   0000     nop                      	nop
0019d8   0000     nop                      	nop
0019da   0000     nop                      	nop
0019dc   0000     nop                      	nop
0019de   0000     nop                      	nop
0019e0   0000     nop                      	nop
0019e2   0000     nop                      	nop
0019e4   0000     nop                      	nop
0019e6   0000     nop                      	nop
0019e8   0000     nop                      	nop
0019ea   0000     nop                      	nop
0019ec   0000     nop                      	nop
0019ee   0000     nop                      	nop
0019f0   0000     nop                      	nop
0019f2   0000     nop                      	nop
0019f4   0000     nop                      	nop
0019f6   0000     nop                      	nop
0019f8   0000     nop                      	nop
0019fa   0000     nop                      	nop
0019fc   0000     nop                      	nop
0019fe   0000     nop                      	nop
001a00   0000     nop                      	nop
001a02   0000     nop                      	nop
001a04   0000     nop                      	nop
001a06   0000     nop                      	nop
001a08   0000     nop                      	nop
001a0a   0000     nop                      	nop
001a0c   0000     nop                      	nop
001a0e   0000     nop                      	nop
001a10   0000     nop                      	nop
001a12   0000     nop                      	nop
001a14   0000     nop                      	nop
001a16   0000     nop                      	nop
001a18   0000     nop                      	nop
001a1a   0000     nop                      	nop
001a1c   0000     nop                      	nop
001a1e   0000     nop                      	nop
001a20   0000     nop                      	nop
001a22   0000     nop                      	nop
001a24   0000     nop                      	nop
001a26   0000     nop                      	nop
001a28   0000     nop                      	nop
001a2a   0000     nop                      	nop
001a2c   0000     nop                      	nop
001a2e   0000     nop                      	nop
001a30   0000     nop                      	nop
001a32   0000     nop                      	nop
001a34   0000     nop                      	nop
001a36   0000     nop                      	nop
001a38   0000     nop                      	nop
001a3a   0000     nop                      	nop
001a3c   0000     nop                      	nop
001a3e   0000     nop                      	nop
001a40   0000     nop                      	nop
001a42   0000     nop                      	nop
001a44   0000     nop                      	nop
001a46   0000     nop                      	nop
001a48   0000     nop                      	nop
001a4a   0000     nop                      	nop
001a4c   0000     nop                      	nop
001a4e   0000     nop                      	nop
001a50   0000     nop                      	nop
001a52   0000     nop                      	nop
001a54   0000     nop                      	nop
001a56   0000     nop                      	nop
001a58   0000     nop                      	nop
001a5a   0000     nop                      	nop
001a5c   0000     nop                      	nop
001a5e   0000     nop                      	nop
001a60   0000     nop                      	nop
001a62   0000     nop                      	nop
001a64   0000     nop                      	nop
001a66   0000     nop                      	nop
001a68   0000     nop                      	nop
001a6a   0000     nop                      	nop
001a6c   0000     nop                      	nop
001a6e   0000     nop                      	nop
001a70   0000     nop                      	nop
001a72   0000     nop                      	nop
001a74   0000     nop                      	nop
001a76   0000     nop                      	nop
001a78   0000     nop                      	nop
001a7a   0000     nop                      	nop
001a7c   0000     nop                      	nop
001a7e   0000     nop                      	nop
001a80   0000     nop                      	nop
001a82   0000     nop                      	nop
001a84   0000     nop                      	nop
001a86   0000     nop                      	nop
001a88   0000     nop                      	nop
001a8a   0000     nop                      	nop
001a8c   0000     nop                      	nop
001a8e   0000     nop                      	nop
001a90   0000     nop                      	nop
001a92   0000     nop                      	nop
001a94   0000     nop                      	nop
001a96   0000     nop                      	nop
001a98   0000     nop                      	nop
001a9a   0000     nop                      	nop
001a9c   0000     nop                      	nop
001a9e   0000     nop                      	nop
001aa0   0000     nop                      	nop
001aa2   0000     nop                      	nop
001aa4   0000     nop                      	nop
001aa6   0000     nop                      	nop
001aa8   0000     nop                      	nop
001aaa   0000     nop                      	nop
001aac   0000     nop                      	nop
001aae   0000     nop                      	nop
001ab0   0000     nop                      	nop
001ab2   0000     nop                      	nop
001ab4   0000     nop                      	nop
001ab6   0000     nop                      	nop
001ab8   0000     nop                      	nop
                                           	
                                           ;	.line	2980; meter_logger.c	PWM_PIN = 0;
001aba   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001abc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
001abe   ffd9
001ac0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_rx_disable	code
                                           _fsk_rx_disable:
                                           ;	.line	1456; meter_logger.c	void fsk_rx_disable() {
005406   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005408   ffe5
00540a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00540c   ffd9
                                           ;	.line	1457; meter_logger.c	PIE2bits.CMIE = 0;		// Disable comparator interrupt
00540e   9ca0     bcf     0xa0, 0x6, 0     	BCF	_PIE2bits, 6
005410   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1458; meter_logger.c	codec_type = NONE;
005412   6b52     clrf    0x52, 0x1        	CLRF	_codec_type, B
005414   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005416   ffd9
005418   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_rx_enable	code
                                           _fsk_rx_enable:
                                           ;	.line	1420; meter_logger.c	void fsk_rx_enable() {
004e00   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004e02   ffe5
004e04   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004e06   ffd9
                                           ;	.line	1421; meter_logger.c	fsk_proto.state = START_BIT_WAIT;
004e08   0e02     movlw   0x2              	MOVLW	0x02
004e0a   0105     movlb   0x5              	BANKSEL	_fsk_proto
004e0c   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1422; meter_logger.c	fsk_proto.start_bit_time = 0;
004e0e   6b0a     clrf    0xa, 0x1         	CLRF	(_fsk_proto + 10), B
                                           ; removed redundant BANKSEL
004e10   6b0b     clrf    0xb, 0x1         	CLRF	(_fsk_proto + 11), B
                                           ;	.line	1424; meter_logger.c	timer0_reload = TIMER0_FSK;
004e12   0e9f     movlw   0x9f             	MOVLW	0x9f
004e14   0105     movlb   0x5              	BANKSEL	_timer0_reload
004e16   6f49     movwf   0x49, 0x1        	MOVWF	_timer0_reload, B
004e18   0ef9     movlw   0xf9             	MOVLW	0xf9
                                           ; removed redundant BANKSEL
004e1a   6f4a     movwf   0x4a, 0x1        	MOVWF	(_timer0_reload + 1), B
                                           ;	.line	1426; meter_logger.c	codec_type = FSK_RX;
004e1c   0e06     movlw   0x6              	MOVLW	0x06
004e1e   0105     movlb   0x5              	BANKSEL	_codec_type
004e20   6f52     movwf   0x52, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1429; meter_logger.c	T0CONbits.TMR0ON = 1;
004e22   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1430; meter_logger.c	T0CONbits.T0PS0 = 0;
004e24   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1431; meter_logger.c	T0CONbits.T0PS1 = 0;
004e26   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1432; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004e28   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1433; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004e2a   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1434; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004e2c   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1435; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004e2e   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1436; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004e30   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1437; meter_logger.c	INTCONbits.TMR0IE = 0;		// Dont enable TMR0 Interrupt
004e32   9af2     bcf     0xf2, 0x5, 0     	BCF	_INTCONbits, 5
                                           ;	.line	1440; meter_logger.c	CVRCONbits.CVREF = 0xf;	// 0V
004e34   88b5     bsf     0xb5, 0x4, 0     	BSF	_CVRCONbits, 4
                                           ;	.line	1442; meter_logger.c	CVRCONbits.CVRSS = 0;	// VDD – VSS
004e36   98b5     bcf     0xb5, 0x4, 0     	BCF	_CVRCONbits, 4
                                           ;	.line	1443; meter_logger.c	CVRCONbits.CVRR = 0;	// high range, 0.25 CVRSRC to 0.75 CVRSRC, with CVRSRC/32 step size
004e38   9ab5     bcf     0xb5, 0x5, 0     	BCF	_CVRCONbits, 5
                                           ;	.line	1444; meter_logger.c	CVRCONbits.CVR = 9;		// 2,65625 V
004e3a   50b5     movf    0xb5, 0, 0       	MOVF	_CVRCONbits, W
004e3c   0bf0     andlw   0xf0             	ANDLW	0xf0
004e3e   0909     iorlw   0x9              	IORLW	0x09
004e40   6eb5     movwf   0xb5, 0          	MOVWF	_CVRCONbits
                                           ;	.line	1445; meter_logger.c	CVRCONbits.CVROE = 0;	// Comparator VREF Output disabled, CVREF voltage is disconnected from the RA2/AN2/VREF-/CVREF pin
004e42   9cb5     bcf     0xb5, 0x6, 0     	BCF	_CVRCONbits, 6
                                           ;	.line	1446; meter_logger.c	CVRCONbits.CVREN = 1;	// Comparator Voltage Reference Enable bit
004e44   8eb5     bsf     0xb5, 0x7, 0     	BSF	_CVRCONbits, 7
                                           ;	.line	1448; meter_logger.c	CMCONbits.CM = 0x6;		// four inputs multiplexed to two comparators
004e46   50b4     movf    0xb4, 0, 0       	MOVF	_CMCONbits, W
004e48   0bf8     andlw   0xf8             	ANDLW	0xf8
004e4a   0906     iorlw   0x6              	IORLW	0x06
004e4c   6eb4     movwf   0xb4, 0          	MOVWF	_CMCONbits
                                           ;	.line	1449; meter_logger.c	CMCONbits.CIS = 0;		// multiplexed to RA0/AN0 and RA1/AN1
004e4e   96b4     bcf     0xb4, 0x3, 0     	BCF	_CMCONbits, 3
                                           ;	.line	1450; meter_logger.c	CMCONbits.C1INV = 1;	// inverted output, C1 VIN+ < C1 VIN-
004e50   88b4     bsf     0xb4, 0x4, 0     	BSF	_CMCONbits, 4
                                           ;	.line	1452; meter_logger.c	IPR2bits.CMIP = 1;		// high priority
004e52   8ca2     bsf     0xa2, 0x6, 0     	BSF	_IPR2bits, 6
                                           ;	.line	1453; meter_logger.c	PIE2bits.CMIE = 1;		// Enable comparator interrupt
004e54   8ca0     bsf     0xa0, 0x6, 0     	BSF	_PIE2bits, 6
004e56   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004e58   ffd9
004e5a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_disable	code
                                           _fsk_tx_disable:
                                           ;	.line	1414; meter_logger.c	void fsk_tx_disable() {
005382   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005384   ffe5
005386   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005388   ffd9
00538a   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1415; meter_logger.c	codec_type = NONE;
00538c   6b52     clrf    0x52, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1416; meter_logger.c	T0CONbits.TMR0ON = 0;	// Disable TMR0 
00538e   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1417; meter_logger.c	PIE2bits.CMIE = 1;		// Disable comparator interrupt
005390   8ca0     bsf     0xa0, 0x6, 0     	BSF	_PIE2bits, 6
005392   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005394   ffd9
005396   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_enable	code
                                           _fsk_tx_enable:
                                           ;	.line	1396; meter_logger.c	void fsk_tx_enable() {
0050d2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0050d4   ffe5
0050d6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0050d8   ffd9
                                           ;	.line	1397; meter_logger.c	timer0_reload = TIMER0_FSK;
0050da   0e9f     movlw   0x9f             	MOVLW	0x9f
0050dc   0105     movlb   0x5              	BANKSEL	_timer0_reload
0050de   6f49     movwf   0x49, 0x1        	MOVWF	_timer0_reload, B
0050e0   0ef9     movlw   0xf9             	MOVLW	0xf9
                                           ; removed redundant BANKSEL
0050e2   6f4a     movwf   0x4a, 0x1        	MOVWF	(_timer0_reload + 1), B
0050e4   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	1399; meter_logger.c	fsk_proto.state = INIT_STATE;
0050e6   6b00     clrf    0, 0x1           	CLRF	_fsk_proto, B
                                           ;	.line	1400; meter_logger.c	codec_type = FSK_TX;
0050e8   0e07     movlw   0x7              	MOVLW	0x07
0050ea   0105     movlb   0x5              	BANKSEL	_codec_type
0050ec   6f52     movwf   0x52, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1403; meter_logger.c	T0CONbits.TMR0ON = 1;
0050ee   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1404; meter_logger.c	T0CONbits.T0PS0 = 0;
0050f0   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1405; meter_logger.c	T0CONbits.T0PS1 = 0;
0050f2   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1406; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
0050f4   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1407; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
0050f6   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1408; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
0050f8   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1409; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
0050fa   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1410; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
0050fc   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1411; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
0050fe   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
005100   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005102   ffd9
005104   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_tx_byte	code
                                           _rs232_7e1_tx_byte:
                                           ;	.line	1386; meter_logger.c	void rs232_7e1_tx_byte(unsigned char c) {
005106   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005108   ffe5
00510a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00510c   ffd9
00510e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
005110   ffe5
005112   0e02     movlw   0x2              	MOVLW	0x02
005114   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
005116   f000
                                           ;	.line	1387; meter_logger.c	rs232_proto.data = c;
005118   5000     movf    0, 0, 0          	MOVF	r0x00, W
00511a   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
00511c   6f1f     movwf   0x1f, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	1388; meter_logger.c	rs232_proto.data_len = 7;
00511e   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
005120   6f20     movwf   0x20, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	1389; meter_logger.c	T0CONbits.TMR0ON = 1;		// start timer 0
005122   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1390; meter_logger.c	INTCONbits.TMR0IF = 1;		// enter timer interrupt handler now
005124   84f2     bsf     0xf2, 0x2, 0     	BSF	_INTCONbits, 2
                                           _01053_DS_:
005126   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	1391; meter_logger.c	while (rs232_proto.data_len) {
005128   5120     movf    0x20, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
00512a   e1fd     bnz     0x5126           	BNZ	_01053_DS_
00512c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00512e   f000
005130   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005132   ffd9
005134   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_rx_disable	code
                                           _rs232_7e1_rx_disable:
                                           ;	.line	1380; meter_logger.c	void rs232_7e1_rx_disable() {
005398   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00539a   ffe5
00539c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00539e   ffd9
                                           ;	.line	1381; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
0053a0   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
0053a2   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1382; meter_logger.c	codec_type = NONE;
0053a4   6b52     clrf    0x52, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1383; meter_logger.c	T0CONbits.TMR0ON = 0;
0053a6   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
0053a8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0053aa   ffd9
0053ac   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_rx_enable	code
                                           _rs232_7e1_rx_enable:
                                           ;	.line	1356; meter_logger.c	void rs232_7e1_rx_enable(unsigned int t) {
004eb2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004eb4   ffe5
004eb6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004eb8   ffd9
004eba   0e02     movlw   0x2              	MOVLW	0x02
004ebc   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, _timer0_reload
004ebe   f549
004ec0   0e03     movlw   0x3              	MOVLW	0x03
004ec2   cfdb     movff   0xfdb, 0x54a     	MOVFF	PLUSW2, (_timer0_reload + 1)
004ec4   f54a
                                           ;	.line	1357; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
004ec6   0e02     movlw   0x2              	MOVLW	0x02
004ec8   0105     movlb   0x5              	BANKSEL	_rs232_proto
004eca   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1358; meter_logger.c	rs232_proto.data_len = 0;
004ecc   6b20     clrf    0x20, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1362; meter_logger.c	codec_type = RS232_7E1_RX;
004ece   0e04     movlw   0x4              	MOVLW	0x04
004ed0   0105     movlb   0x5              	BANKSEL	_codec_type
004ed2   6f52     movwf   0x52, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1365; meter_logger.c	T0CONbits.TMR0ON = 0;
004ed4   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1366; meter_logger.c	T0CONbits.T0PS0 = 0;
004ed6   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1367; meter_logger.c	T0CONbits.T0PS1 = 0;
004ed8   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1368; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004eda   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1369; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004edc   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1370; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004ede   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1371; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004ee0   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1372; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004ee2   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1373; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004ee4   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1374; meter_logger.c	INTCONbits.TMR0IF = 0;
004ee6   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1376; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
004ee8   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1377; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004eea   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
004eec   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004eee   ffd9
004ef0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_tx_disable	code
                                           _rs232_7e1_tx_disable:
                                           ;	.line	1350; meter_logger.c	void rs232_7e1_tx_disable() {
0053ae   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0053b0   ffe5
0053b2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0053b4   ffd9
0053b6   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1351; meter_logger.c	codec_type = NONE;
0053b8   6b52     clrf    0x52, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1352; meter_logger.c	IR_LED_PIN = 0;				// no need to set it to inverted idle
0053ba   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1353; meter_logger.c	T0CONbits.TMR0ON = 0;
0053bc   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
0053be   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0053c0   ffd9
0053c2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_tx_enable	code
                                           _rs232_7e1_tx_enable:
                                           ;	.line	1324; meter_logger.c	void rs232_7e1_tx_enable(unsigned int t) {
004f72   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004f74   ffe5
004f76   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004f78   ffd9
004f7a   0e02     movlw   0x2              	MOVLW	0x02
004f7c   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, _timer0_reload
004f7e   f549
004f80   0e03     movlw   0x3              	MOVLW	0x03
004f82   cfdb     movff   0xfdb, 0x54a     	MOVFF	PLUSW2, (_timer0_reload + 1)
004f84   f54a
004f86   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	1327; meter_logger.c	rs232_proto.state = INIT_STATE;
004f88   6b1d     clrf    0x1d, 0x1        	CLRF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1328; meter_logger.c	rs232_proto.data_len = 0;
004f8a   6b20     clrf    0x20, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1330; meter_logger.c	IR_LED_PIN = 0;				// inverted rs232 output on ir, idle = no ir light
004f8c   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1332; meter_logger.c	codec_type = RS232_7E1_TX;
004f8e   0e05     movlw   0x5              	MOVLW	0x05
004f90   0105     movlb   0x5              	BANKSEL	_codec_type
004f92   6f52     movwf   0x52, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1335; meter_logger.c	T0CONbits.TMR0ON = 0;
004f94   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1336; meter_logger.c	T0CONbits.T0PS0 = 0;
004f96   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1337; meter_logger.c	T0CONbits.T0PS1 = 0;
004f98   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1338; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004f9a   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1339; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004f9c   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1340; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004f9e   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1341; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004fa0   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1342; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004fa2   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1343; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004fa4   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1344; meter_logger.c	INTCONbits.TMR0IF = 0;
004fa6   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1347; meter_logger.c	T0CONbits.TMR0ON = 0;		// timer 0 started in rs232_8n2_tx_byte()
004fa8   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
004faa   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004fac   ffd9
004fae   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_tx_byte	code
                                           _rs232_8n2_tx_byte:
                                           ;	.line	1314; meter_logger.c	void rs232_8n2_tx_byte(unsigned char c) {
005136   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005138   ffe5
00513a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00513c   ffd9
00513e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
005140   ffe5
005142   0e02     movlw   0x2              	MOVLW	0x02
005144   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
005146   f000
                                           ;	.line	1315; meter_logger.c	rs232_proto.data = c;
005148   5000     movf    0, 0, 0          	MOVF	r0x00, W
00514a   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
00514c   6f1f     movwf   0x1f, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	1316; meter_logger.c	rs232_proto.data_len = 8;
00514e   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
005150   6f20     movwf   0x20, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	1317; meter_logger.c	T0CONbits.TMR0ON = 1;		// start timer 0
005152   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1318; meter_logger.c	INTCONbits.TMR0IF = 1;		// enter timer interrupt handler now
005154   84f2     bsf     0xf2, 0x2, 0     	BSF	_INTCONbits, 2
                                           _01025_DS_:
005156   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	1319; meter_logger.c	while (rs232_proto.data_len) {
005158   5120     movf    0x20, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
00515a   e1fd     bnz     0x5156           	BNZ	_01025_DS_
00515c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00515e   f000
005160   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005162   ffd9
005164   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_rx_disable	code
                                           _rs232_8n2_rx_disable:
                                           ;	.line	1308; meter_logger.c	void rs232_8n2_rx_disable() {
0053c4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0053c6   ffe5
0053c8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0053ca   ffd9
                                           ;	.line	1309; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
0053cc   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
0053ce   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1310; meter_logger.c	codec_type = NONE;
0053d0   6b52     clrf    0x52, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1311; meter_logger.c	T0CONbits.TMR0ON = 0;
0053d2   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
0053d4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0053d6   ffd9
0053d8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_rx_enable	code
                                           _rs232_8n2_rx_enable:
                                           ;	.line	1284; meter_logger.c	void rs232_8n2_rx_enable(unsigned int t) {
004ef2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004ef4   ffe5
004ef6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004ef8   ffd9
004efa   0e02     movlw   0x2              	MOVLW	0x02
004efc   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, _timer0_reload
004efe   f549
004f00   0e03     movlw   0x3              	MOVLW	0x03
004f02   cfdb     movff   0xfdb, 0x54a     	MOVFF	PLUSW2, (_timer0_reload + 1)
004f04   f54a
                                           ;	.line	1285; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
004f06   0e02     movlw   0x2              	MOVLW	0x02
004f08   0105     movlb   0x5              	BANKSEL	_rs232_proto
004f0a   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1286; meter_logger.c	rs232_proto.data_len = 0;
004f0c   6b20     clrf    0x20, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1290; meter_logger.c	codec_type = RS232_8N2_RX;
004f0e   0e02     movlw   0x2              	MOVLW	0x02
004f10   0105     movlb   0x5              	BANKSEL	_codec_type
004f12   6f52     movwf   0x52, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1293; meter_logger.c	T0CONbits.TMR0ON = 0;
004f14   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1294; meter_logger.c	T0CONbits.T0PS0 = 0;
004f16   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1295; meter_logger.c	T0CONbits.T0PS1 = 0;
004f18   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1296; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004f1a   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1297; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004f1c   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1298; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004f1e   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1299; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004f20   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1300; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004f22   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1301; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004f24   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1302; meter_logger.c	INTCONbits.TMR0IF = 0;
004f26   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1304; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
004f28   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1305; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004f2a   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
004f2c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004f2e   ffd9
004f30   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_tx_disable	code
                                           _rs232_8n2_tx_disable:
                                           ;	.line	1278; meter_logger.c	void rs232_8n2_tx_disable() {
0053da   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0053dc   ffe5
0053de   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0053e0   ffd9
0053e2   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1279; meter_logger.c	codec_type = NONE;
0053e4   6b52     clrf    0x52, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1280; meter_logger.c	IR_LED_PIN = 0;				// no need to set it to inverted idle
0053e6   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1281; meter_logger.c	T0CONbits.TMR0ON = 0;
0053e8   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
0053ea   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0053ec   ffd9
0053ee   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_tx_enable	code
                                           _rs232_8n2_tx_enable:
                                           ;	.line	1252; meter_logger.c	void rs232_8n2_tx_enable(unsigned int t) {
004fb0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004fb2   ffe5
004fb4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004fb6   ffd9
004fb8   0e02     movlw   0x2              	MOVLW	0x02
004fba   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, _timer0_reload
004fbc   f549
004fbe   0e03     movlw   0x3              	MOVLW	0x03
004fc0   cfdb     movff   0xfdb, 0x54a     	MOVFF	PLUSW2, (_timer0_reload + 1)
004fc2   f54a
004fc4   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	1255; meter_logger.c	rs232_proto.state = INIT_STATE;
004fc6   6b1d     clrf    0x1d, 0x1        	CLRF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1256; meter_logger.c	rs232_proto.data_len = 0;
004fc8   6b20     clrf    0x20, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1258; meter_logger.c	IR_LED_PIN = 0;				// inverted rs232 output on ir, idle = no ir light
004fca   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1260; meter_logger.c	codec_type = RS232_8N2_TX;
004fcc   0e03     movlw   0x3              	MOVLW	0x03
004fce   0105     movlb   0x5              	BANKSEL	_codec_type
004fd0   6f52     movwf   0x52, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1263; meter_logger.c	T0CONbits.TMR0ON = 0;
004fd2   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1264; meter_logger.c	T0CONbits.T0PS0 = 0;
004fd4   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1265; meter_logger.c	T0CONbits.T0PS1 = 0;
004fd6   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1266; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004fd8   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1267; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004fda   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1268; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004fdc   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1269; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004fde   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1270; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004fe0   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1271; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004fe2   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1272; meter_logger.c	INTCONbits.TMR0IF = 0;
004fe4   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1275; meter_logger.c	T0CONbits.TMR0ON = 0;		// timer 0 started in rs232_8n2_tx_byte()
004fe6   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
004fe8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004fea   ffd9
004fec   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_ir_disable	code
                                           _testo_ir_disable:
                                           ;	.line	1247; meter_logger.c	void testo_ir_disable() {
00541a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00541c   ffe5
00541e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005420   ffd9
005422   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1248; meter_logger.c	codec_type = NONE;
005424   6b52     clrf    0x52, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1249; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
005426   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
005428   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00542a   ffd9
00542c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_ir_enable	code
                                           _testo_ir_enable:
                                           ;	.line	1223; meter_logger.c	void testo_ir_enable() {
004fee   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004ff0   ffe5
004ff2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004ff4   ffd9
004ff6   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	1224; meter_logger.c	testo_ir_proto.state = INIT_STATE;
004ff8   6b24     clrf    0x24, 0x1        	CLRF	_testo_ir_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1225; meter_logger.c	testo_ir_proto.start_bit_len = 0;
004ffa   6b26     clrf    0x26, 0x1        	CLRF	(_testo_ir_proto + 2), B
                                           ;	.line	1227; meter_logger.c	timer0_reload = TIMER0_TESTO;
004ffc   0e23     movlw   0x23             	MOVLW	0x23
004ffe   0105     movlb   0x5              	BANKSEL	_timer0_reload
005000   6f49     movwf   0x49, 0x1        	MOVWF	_timer0_reload, B
005002   0ef3     movlw   0xf3             	MOVLW	0xf3
                                           ; removed redundant BANKSEL
005004   6f4a     movwf   0x4a, 0x1        	MOVWF	(_timer0_reload + 1), B
                                           ;	.line	1229; meter_logger.c	codec_type = TESTO;
005006   0e01     movlw   0x1              	MOVLW	0x01
005008   0105     movlb   0x5              	BANKSEL	_codec_type
00500a   6f52     movwf   0x52, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1232; meter_logger.c	T0CONbits.TMR0ON = 0;
00500c   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1233; meter_logger.c	T0CONbits.T0PS0 = 0;
00500e   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1234; meter_logger.c	T0CONbits.T0PS1 = 0;
005010   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1235; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
005012   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1236; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
005014   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1237; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
005016   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1238; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
005018   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1239; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
00501a   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1240; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
00501c   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1241; meter_logger.c	INTCONbits.TMR0IF = 0;
00501e   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1243; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
005020   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1244; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
005022   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
005024   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005026   ffd9
005028   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_valid_err_corr	code
                                           _testo_valid_err_corr:
                                           ;	.line	1168; meter_logger.c	unsigned char testo_valid_err_corr(unsigned int c) {
003be6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003be8   ffe5
003bea   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003bec   ffd9
003bee   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003bf0   ffe5
003bf2   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003bf4   ffe5
003bf6   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003bf8   ffe5
003bfa   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003bfc   ffe5
003bfe   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003c00   ffe5
003c02   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003c04   ffe5
003c06   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003c08   ffe5
003c0a   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
003c0c   ffe5
003c0e   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
003c10   ffe5
003c12   0e02     movlw   0x2              	MOVLW	0x02
003c14   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003c16   f000
003c18   0e03     movlw   0x3              	MOVLW	0x03
003c1a   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003c1c   f001
                                           ;	.line	1175; meter_logger.c	calculated_err_corr_bit = 0;
003c1e   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1176; meter_logger.c	for (i = 0; i < 8; i++) {
003c20   0e78     movlw   0x78             	MOVLW	0x78
003c22   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003c24   6e03     movwf   0x3, 0           	MOVWF	r0x03
003c26   6a04     clrf    0x4, 0           	CLRF	r0x04
003c28   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00913_DS_:
                                           ;	.line	1177; meter_logger.c	calculated_err_corr_bit ^= (((c & 0x78) & (1 << i)) != 0);   // 0b01111000
003c2a   0e01     movlw   0x1              	MOVLW	0x01
003c2c   6e06     movwf   0x6, 0           	MOVWF	r0x06
003c2e   0e00     movlw   0                	MOVLW	0x00
003c30   6e07     movwf   0x7, 0           	MOVWF	r0x07
003c32   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003c34   e006     bz      0x3c42           	BZ	_00955_DS_
003c36   6ce8     negf    0xe8, 0          	NEGF	WREG
003c38   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00956_DS_:
003c3a   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
003c3c   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003c3e   0f01     addlw   0x1              	ADDLW	0x01
003c40   e3fc     bnc     0x3c3a           	BNC	_00956_DS_
                                           _00955_DS_:
003c42   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003c44   1606     andwf   0x6, 0x1, 0      	ANDWF	r0x06, F
003c46   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003c48   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003c4a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003c4c   e105     bnz     0x3c58           	BNZ	_00958_DS_
003c4e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003c50   e103     bnz     0x3c58           	BNZ	_00958_DS_
003c52   6a06     clrf    0x6, 0           	CLRF	r0x06
003c54   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003c56   d001     bra     0x3c5a           	BRA	_00959_DS_
                                           _00958_DS_:
003c58   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00959_DS_:
003c5a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003c5c   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003c5e   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003c60   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003c62   6a06     clrf    0x6, 0           	CLRF	r0x06
003c64   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
003c66   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003c68   6e07     movwf   0x7, 0           	MOVWF	r0x07
003c6a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003c6c   1807     xorwf   0x7, 0, 0        	XORWF	r0x07, W
003c6e   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1176; meter_logger.c	for (i = 0; i < 8; i++) {
003c70   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
003c72   0e08     movlw   0x8              	MOVLW	0x08
003c74   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
003c76   e3d9     bnc     0x3c2a           	BNC	_00913_DS_
                                           ;	.line	1180; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003c78   4402     rlncf   0x2, 0, 0        	RLNCF	r0x02, W
003c7a   0bfe     andlw   0xfe             	ANDLW	0xfe
003c7c   6e03     movwf   0x3, 0           	MOVWF	r0x03
                                           ;	.line	1183; meter_logger.c	calculated_err_corr_bit = 0;
003c7e   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1184; meter_logger.c	for (i = 0; i < 8; i++) {
003c80   0ee6     movlw   0xe6             	MOVLW	0xe6
003c82   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003c84   6e04     movwf   0x4, 0           	MOVWF	r0x04
003c86   6a05     clrf    0x5, 0           	CLRF	r0x05
003c88   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00915_DS_:
                                           ;	.line	1185; meter_logger.c	calculated_err_corr_bit ^= (((c & 0xe6) & (1 << i)) != 0);   // 0b11100110
003c8a   0e01     movlw   0x1              	MOVLW	0x01
003c8c   6e07     movwf   0x7, 0           	MOVWF	r0x07
003c8e   0e00     movlw   0                	MOVLW	0x00
003c90   6e08     movwf   0x8, 0           	MOVWF	r0x08
003c92   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003c94   e006     bz      0x3ca2           	BZ	_00963_DS_
003c96   6ce8     negf    0xe8, 0          	NEGF	WREG
003c98   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00964_DS_:
003c9a   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003c9c   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003c9e   0f01     addlw   0x1              	ADDLW	0x01
003ca0   e3fc     bnc     0x3c9a           	BNC	_00964_DS_
                                           _00963_DS_:
003ca2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003ca4   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003ca6   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003ca8   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003caa   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003cac   e105     bnz     0x3cb8           	BNZ	_00966_DS_
003cae   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003cb0   e103     bnz     0x3cb8           	BNZ	_00966_DS_
003cb2   6a07     clrf    0x7, 0           	CLRF	r0x07
003cb4   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003cb6   d001     bra     0x3cba           	BRA	_00967_DS_
                                           _00966_DS_:
003cb8   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00967_DS_:
003cba   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003cbc   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003cbe   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003cc0   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003cc2   6a07     clrf    0x7, 0           	CLRF	r0x07
003cc4   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003cc6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003cc8   6e08     movwf   0x8, 0           	MOVWF	r0x08
003cca   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003ccc   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003cce   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1184; meter_logger.c	for (i = 0; i < 8; i++) {
003cd0   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003cd2   0e08     movlw   0x8              	MOVLW	0x08
003cd4   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003cd6   e3d9     bnc     0x3c8a           	BNC	_00915_DS_
                                           ;	.line	1187; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003cd8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003cda   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1188; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003cdc   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003cde   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
                                           ;	.line	1191; meter_logger.c	calculated_err_corr_bit = 0;
003ce0   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1192; meter_logger.c	for (i = 0; i < 8; i++) {
003ce2   0ed5     movlw   0xd5             	MOVLW	0xd5
003ce4   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003ce6   6e04     movwf   0x4, 0           	MOVWF	r0x04
003ce8   6a05     clrf    0x5, 0           	CLRF	r0x05
003cea   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00917_DS_:
                                           ;	.line	1193; meter_logger.c	calculated_err_corr_bit ^= (((c & 0xd5) & (1 << i)) != 0);   // 0b11010101
003cec   0e01     movlw   0x1              	MOVLW	0x01
003cee   6e07     movwf   0x7, 0           	MOVWF	r0x07
003cf0   0e00     movlw   0                	MOVLW	0x00
003cf2   6e08     movwf   0x8, 0           	MOVWF	r0x08
003cf4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003cf6   e006     bz      0x3d04           	BZ	_00972_DS_
003cf8   6ce8     negf    0xe8, 0          	NEGF	WREG
003cfa   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00973_DS_:
003cfc   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003cfe   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003d00   0f01     addlw   0x1              	ADDLW	0x01
003d02   e3fc     bnc     0x3cfc           	BNC	_00973_DS_
                                           _00972_DS_:
003d04   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003d06   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003d08   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003d0a   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003d0c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003d0e   e105     bnz     0x3d1a           	BNZ	_00975_DS_
003d10   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003d12   e103     bnz     0x3d1a           	BNZ	_00975_DS_
003d14   6a07     clrf    0x7, 0           	CLRF	r0x07
003d16   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003d18   d001     bra     0x3d1c           	BRA	_00976_DS_
                                           _00975_DS_:
003d1a   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00976_DS_:
003d1c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003d1e   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003d20   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003d22   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003d24   6a07     clrf    0x7, 0           	CLRF	r0x07
003d26   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003d28   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003d2a   6e08     movwf   0x8, 0           	MOVWF	r0x08
003d2c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003d2e   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003d30   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1192; meter_logger.c	for (i = 0; i < 8; i++) {
003d32   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003d34   0e08     movlw   0x8              	MOVLW	0x08
003d36   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003d38   e3d9     bnc     0x3cec           	BNC	_00917_DS_
                                           ;	.line	1195; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003d3a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003d3c   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1196; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003d3e   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003d40   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
                                           ;	.line	1199; meter_logger.c	calculated_err_corr_bit = 0;
003d42   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1200; meter_logger.c	for (i = 0; i < 8; i++) {
003d44   0e8b     movlw   0x8b             	MOVLW	0x8b
003d46   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003d48   6e04     movwf   0x4, 0           	MOVWF	r0x04
003d4a   6a05     clrf    0x5, 0           	CLRF	r0x05
003d4c   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00919_DS_:
                                           ;	.line	1201; meter_logger.c	calculated_err_corr_bit ^= (((c & 0x8b) & (1 << i)) != 0);   // 0b10001011
003d4e   0e01     movlw   0x1              	MOVLW	0x01
003d50   6e07     movwf   0x7, 0           	MOVWF	r0x07
003d52   0e00     movlw   0                	MOVLW	0x00
003d54   6e08     movwf   0x8, 0           	MOVWF	r0x08
003d56   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003d58   e006     bz      0x3d66           	BZ	_00981_DS_
003d5a   6ce8     negf    0xe8, 0          	NEGF	WREG
003d5c   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00982_DS_:
003d5e   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003d60   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003d62   0f01     addlw   0x1              	ADDLW	0x01
003d64   e3fc     bnc     0x3d5e           	BNC	_00982_DS_
                                           _00981_DS_:
003d66   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003d68   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003d6a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003d6c   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003d6e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003d70   e105     bnz     0x3d7c           	BNZ	_00984_DS_
003d72   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003d74   e103     bnz     0x3d7c           	BNZ	_00984_DS_
003d76   6a07     clrf    0x7, 0           	CLRF	r0x07
003d78   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003d7a   d001     bra     0x3d7e           	BRA	_00985_DS_
                                           _00984_DS_:
003d7c   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00985_DS_:
003d7e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003d80   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003d82   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003d84   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003d86   6a07     clrf    0x7, 0           	CLRF	r0x07
003d88   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003d8a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003d8c   6e08     movwf   0x8, 0           	MOVWF	r0x08
003d8e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003d90   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003d92   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1200; meter_logger.c	for (i = 0; i < 8; i++) {
003d94   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003d96   0e08     movlw   0x8              	MOVLW	0x08
003d98   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003d9a   e3d9     bnc     0x3d4e           	BNC	_00919_DS_
                                           ;	.line	1203; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003d9c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003d9e   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1214; meter_logger.c	if ((c >> 8) == calculated_err_corr) {
003da0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003da2   6e00     movwf   0, 0             	MOVWF	r0x00
003da4   6a01     clrf    0x1, 0           	CLRF	r0x01
003da6   6a02     clrf    0x2, 0           	CLRF	r0x02
003da8   5000     movf    0, 0, 0          	MOVF	r0x00, W
003daa   1803     xorwf   0x3, 0, 0        	XORWF	r0x03, W
003dac   e103     bnz     0x3db4           	BNZ	_00989_DS_
003dae   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003db0   1802     xorwf   0x2, 0, 0        	XORWF	r0x02, W
003db2   e001     bz      0x3db6           	BZ	_00990_DS_
                                           _00989_DS_:
003db4   d002     bra     0x3dba           	BRA	_00911_DS_
                                           _00990_DS_:
                                           ;	.line	1215; meter_logger.c	return 1;
003db6   0e01     movlw   0x1              	MOVLW	0x01
003db8   d001     bra     0x3dbc           	BRA	_00921_DS_
                                           _00911_DS_:
                                           ;	.line	1218; meter_logger.c	return 0;
003dba   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00921_DS_:
003dbc   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
003dbe   f008
003dc0   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003dc2   f007
003dc4   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003dc6   f006
003dc8   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003dca   f005
003dcc   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003dce   f004
003dd0   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003dd2   f003
003dd4   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003dd6   f002
003dd8   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003dda   f001
003ddc   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003dde   f000
003de0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003de2   ffd9
003de4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__reverse	code
                                           _reverse:
                                           ;	.line	1160; meter_logger.c	unsigned char reverse(unsigned char b) {
004c0e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004c10   ffe5
004c12   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004c14   ffd9
004c16   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004c18   ffe5
004c1a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004c1c   ffe5
004c1e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004c20   ffe5
004c22   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004c24   ffe5
004c26   0e02     movlw   0x2              	MOVLW	0x02
004c28   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004c2a   f000
                                           ;	.line	1162; meter_logger.c	c  = ((b >>  1) & 0x55) | ((b <<  1) & 0xaa);
004c2c   4000     rrncf   0, 0, 0          	RRNCF	r0x00, W
004c2e   0b7f     andlw   0x7f             	ANDLW	0x7f
004c30   6e01     movwf   0x1, 0           	MOVWF	r0x01
004c32   0e55     movlw   0x55             	MOVLW	0x55
004c34   1601     andwf   0x1, 0x1, 0      	ANDWF	r0x01, F
004c36   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
004c38   0bfe     andlw   0xfe             	ANDLW	0xfe
004c3a   6e02     movwf   0x2, 0           	MOVWF	r0x02
004c3c   0eaa     movlw   0xaa             	MOVLW	0xaa
004c3e   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004c40   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004c42   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1163; meter_logger.c	c |= ((b >>  2) & 0x33) | ((b <<  2) & 0xcc);
004c44   4000     rrncf   0, 0, 0          	RRNCF	r0x00, W
004c46   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
004c48   0b3f     andlw   0x3f             	ANDLW	0x3f
004c4a   6e02     movwf   0x2, 0           	MOVWF	r0x02
004c4c   0e33     movlw   0x33             	MOVLW	0x33
004c4e   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004c50   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
004c52   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
004c54   0bfc     andlw   0xfc             	ANDLW	0xfc
004c56   6e03     movwf   0x3, 0           	MOVWF	r0x03
004c58   0ecc     movlw   0xcc             	MOVLW	0xcc
004c5a   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
004c5c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004c5e   1202     iorwf   0x2, 0x1, 0      	IORWF	r0x02, F
004c60   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004c62   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1164; meter_logger.c	c |= ((b >>  4) & 0x0f) | ((b <<  4) & 0xf0);
004c64   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
004c66   0b0f     andlw   0xf              	ANDLW	0x0f
004c68   6e02     movwf   0x2, 0           	MOVWF	r0x02
004c6a   0e0f     movlw   0xf              	MOVLW	0x0f
004c6c   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004c6e   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
004c70   0bf0     andlw   0xf0             	ANDLW	0xf0
004c72   6e03     movwf   0x3, 0           	MOVWF	r0x03
004c74   0ef0     movlw   0xf0             	MOVLW	0xf0
004c76   1403     andwf   0x3, 0, 0        	ANDWF	r0x03, W
004c78   6e00     movwf   0, 0             	MOVWF	r0x00
004c7a   5000     movf    0, 0, 0          	MOVF	r0x00, W
004c7c   1202     iorwf   0x2, 0x1, 0      	IORWF	r0x02, F
004c7e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004c80   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1165; meter_logger.c	return(c);
004c82   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004c84   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004c86   f003
004c88   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004c8a   f002
004c8c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004c8e   f001
004c90   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004c92   f000
004c94   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004c96   ffd9
004c98   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__my_usart_open	code
                                           _my_usart_open:
                                           ;	.line	1130; meter_logger.c	void my_usart_open() {
00524c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00524e   ffe5
005250   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005252   ffd9
                                           ;	.line	1131; meter_logger.c	SPBRG = 103;					// 8MHz => 19230 baud
005254   0e67     movlw   0x67             	MOVLW	0x67
005256   6eaf     movwf   0xaf, 0          	MOVWF	_SPBRG
                                           ;	.line	1132; meter_logger.c	TXSTAbits.BRGH = 1;	// (0 = low speed)
005258   84ac     bsf     0xac, 0x2, 0     	BSF	_TXSTAbits, 2
                                           ;	.line	1133; meter_logger.c	TXSTAbits.SYNC = 0;	// (0 = asynchronous)
00525a   98ac     bcf     0xac, 0x4, 0     	BCF	_TXSTAbits, 4
                                           ;	.line	1134; meter_logger.c	BAUDCONbits.BRG16 = 1;
00525c   86b8     bsf     0xb8, 0x3, 0     	BSF	_BAUDCONbits, 3
                                           ;	.line	1137; meter_logger.c	RCSTAbits.SPEN = 1; // (1 = serial port enabled)
00525e   8eab     bsf     0xab, 0x7, 0     	BSF	_RCSTAbits, 7
                                           ;	.line	1140; meter_logger.c	PIE1bits.TXIE = 0; // (1 = enabled)
005260   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
                                           ;	.line	1141; meter_logger.c	IPR1bits.TXIP = 0; // USART Tx on low priority interrupt
005262   989f     bcf     0x9f, 0x4, 0     	BCF	_IPR1bits, 4
                                           ;	.line	1144; meter_logger.c	PIE1bits.RCIE = 1; // (1 = enabled)
005264   8a9d     bsf     0x9d, 0x5, 0     	BSF	_PIE1bits, 5
                                           ;	.line	1145; meter_logger.c	IPR1bits.RCIP = 0; // USART Rx on low priority interrupt
005266   9a9f     bcf     0x9f, 0x5, 0     	BCF	_IPR1bits, 5
                                           ;	.line	1148; meter_logger.c	TXSTAbits.TX9 = 0; // (0 = 8-bit transmit)
005268   9cac     bcf     0xac, 0x6, 0     	BCF	_TXSTAbits, 6
                                           ;	.line	1151; meter_logger.c	RCSTAbits.RX9 = 0; // (0 = 8-bit reception)
00526a   9cab     bcf     0xab, 0x6, 0     	BCF	_RCSTAbits, 6
                                           ;	.line	1154; meter_logger.c	RCSTAbits.CREN = 1; // (1 = Enables receiver)
00526c   88ab     bsf     0xab, 0x4, 0     	BSF	_RCSTAbits, 4
                                           ;	.line	1157; meter_logger.c	TXSTAbits.TXEN = 1; // (1 = transmit enabled)
00526e   8aac     bsf     0xac, 0x5, 0     	BSF	_TXSTAbits, 5
005270   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005272   ffd9
005274   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__get_dev_id	code
                                           _get_dev_id:
                                           ;	.line	1113; meter_logger.c	unsigned int get_dev_id() {
004d8e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004d90   ffe5
004d92   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004d94   ffd9
004d96   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004d98   ffe5
004d9a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004d9c   ffe5
004d9e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004da0   ffe5
004da2   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004da4   ffe5
004da6   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004da8   ffe5
004daa   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004dac   ffe5
                                           ;	.line	1116; meter_logger.c	TBLPTRU = __DEVID1 >> 16;
004dae   0e3f     movlw   0x3f             	MOVLW	0x3f
004db0   6ef8     movwf   0xf8, 0          	MOVWF	_TBLPTRU
                                           ;	.line	1117; meter_logger.c	TBLPTRH = __DEVID1 >> 8;
004db2   0eff     movlw   0xff             	MOVLW	0xff
004db4   6ef7     movwf   0xf7, 0          	MOVWF	_TBLPTRH
                                           ;	.line	1118; meter_logger.c	TBLPTRL = __DEVID1;
004db6   0efe     movlw   0xfe             	MOVLW	0xfe
004db8   6ef6     movwf   0xf6, 0          	MOVWF	_TBLPTRL
004dba   0009     tblrd   *+               	tblrd*+
                                           	
                                           ;	.line	1122; meter_logger.c	dev_id_low = TABLAT;
004dbc   cff5     movff   0xff5, 0         	MOVFF	_TABLAT, r0x00
004dbe   f000
004dc0   0009     tblrd   *+               	tblrd*+
                                           	
                                           ;	.line	1126; meter_logger.c	dev_id_high = TABLAT;
004dc2   cff5     movff   0xff5, 0x1       	MOVFF	_TABLAT, r0x01
004dc4   f001
                                           ;	.line	1127; meter_logger.c	return ((dev_id_high << 8) + dev_id_low) & 0xffe0;	// dont return revision
004dc6   6a02     clrf    0x2, 0           	CLRF	r0x02
004dc8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004dca   6e04     movwf   0x4, 0           	MOVWF	r0x04
004dcc   6a03     clrf    0x3, 0           	CLRF	r0x03
004dce   6a05     clrf    0x5, 0           	CLRF	r0x05
004dd0   5000     movf    0, 0, 0          	MOVF	r0x00, W
004dd2   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
004dd4   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
004dd6   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
004dd8   0ee0     movlw   0xe0             	MOVLW	0xe0
004dda   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
004ddc   c004     movff   0x4, 0xff3       	MOVFF	r0x04, PRODL
004dde   fff3
004de0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004de2   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
004de4   f005
004de6   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004de8   f004
004dea   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004dec   f003
004dee   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004df0   f002
004df2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004df4   f001
004df6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004df8   f000
004dfa   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004dfc   ffd9
004dfe   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__init_system	code
                                           _init_system:
                                           ;	.line	1012; meter_logger.c	void init_system() {
004e5c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004e5e   ffe5
004e60   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004e62   ffd9
                                           ;	.line	1014; meter_logger.c	TRIS_COMP1 = INPUT_STATE;		// as input
004e64   8092     bsf     0x92, 0, 0       	BSF	_TRISAbits, 0
                                           ;	.line	1015; meter_logger.c	TRIS_COMP2 = INPUT_STATE;		// as input
004e66   8292     bsf     0x92, 0x1, 0     	BSF	_TRISAbits, 1
                                           ;	.line	1017; meter_logger.c	TRIS_IR_PIN = INPUT_STATE;		// as input
004e68   8093     bsf     0x93, 0, 0       	BSF	_TRISBbits, 0
                                           ;	.line	1019; meter_logger.c	TRIS_LED_PIN = OUTPUT_STATE;	// as output
004e6a   9893     bcf     0x93, 0x4, 0     	BCF	_TRISBbits, 4
                                           ;	.line	1020; meter_logger.c	LED_PIN = 0;					// and clear
004e6c   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	1022; meter_logger.c	TRIS_IR_LED_PIN = OUTPUT_STATE;	// as output
004e6e   9293     bcf     0x93, 0x1, 0     	BCF	_TRISBbits, 1
                                           ;	.line	1023; meter_logger.c	IR_LED_PIN = 0;					// and clear
004e70   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1025; meter_logger.c	TRIS_V_SENSE = INPUT_STATE;		// as input
004e72   8a92     bsf     0x92, 0x5, 0     	BSF	_TRISAbits, 5
                                           ;	.line	1027; meter_logger.c	TRIS_DEBUG_PIN = OUTPUT_STATE;	// as output
004e74   9493     bcf     0x93, 0x2, 0     	BCF	_TRISBbits, 2
                                           ;	.line	1028; meter_logger.c	DEBUG_PIN = 0;					// and clear
004e76   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	1030; meter_logger.c	TRIS_DEBUG2_PIN = OUTPUT_STATE;	// as output
004e78   9693     bcf     0x93, 0x3, 0     	BCF	_TRISBbits, 3
                                           ;	.line	1031; meter_logger.c	DEBUG2_PIN = 0;					// and clear
004e7a   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	1033; meter_logger.c	TRIS_DEBUG3_PIN = OUTPUT_STATE;	// as output
004e7c   9893     bcf     0x93, 0x4, 0     	BCF	_TRISBbits, 4
                                           ;	.line	1034; meter_logger.c	DEBUG3_PIN = 0;					// and clear
004e7e   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	1038; meter_logger.c	TRIS_PWM_PIN = OUTPUT_STATE;	// enable output from pwm module at init
004e80   9294     bcf     0x94, 0x1, 0     	BCF	_TRISCbits, 1
                                           ;	.line	1039; meter_logger.c	PWM_PIN = 0;					// and clear
004e82   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
                                           ;	.line	1042; meter_logger.c	TRIS_RX_PIN = INPUT_STATE;		// as input
004e84   8e94     bsf     0x94, 0x7, 0     	BSF	_TRISCbits, 7
                                           ;	.line	1043; meter_logger.c	TRIS_TX_PIN = OUTPUT_STATE;		// as input
004e86   9c94     bcf     0x94, 0x6, 0     	BCF	_TRISCbits, 6
                                           ;	.line	1048; meter_logger.c	T1CONbits.TMR1ON = 1;
004e88   80cd     bsf     0xcd, 0, 0       	BSF	_T1CONbits, 0
                                           ;	.line	1049; meter_logger.c	T1CONbits.RD16 = 1;
004e8a   8ecd     bsf     0xcd, 0x7, 0     	BSF	_T1CONbits, 7
                                           ;	.line	1050; meter_logger.c	T1CONbits.TMR1CS = 0;   // internal clock source
004e8c   92cd     bcf     0xcd, 0x1, 0     	BCF	_T1CONbits, 1
                                           ;	.line	1051; meter_logger.c	T1CONbits.T1OSCEN = 0;  // dont put t1 on pin
004e8e   96cd     bcf     0xcd, 0x3, 0     	BCF	_T1CONbits, 3
                                           ;	.line	1052; meter_logger.c	T1CONbits.T1CKPS0 = 0;
004e90   98cd     bcf     0xcd, 0x4, 0     	BCF	_T1CONbits, 4
                                           ;	.line	1053; meter_logger.c	T1CONbits.T1CKPS1 = 0;
004e92   9acd     bcf     0xcd, 0x5, 0     	BCF	_T1CONbits, 5
                                           ;	.line	1054; meter_logger.c	IPR1bits.TMR1IP = 0;	// low priority
004e94   909f     bcf     0x9f, 0, 0       	BCF	_IPR1bits, 0
                                           ;	.line	1055; meter_logger.c	PIE1bits.TMR1IE = 1;	// Ensure that TMR1 Interrupt is enabled
004e96   809d     bsf     0x9d, 0, 0       	BSF	_PIE1bits, 0
                                           ;	.line	1056; meter_logger.c	PIR1bits.TMR1IF = 1;	// Force Instant entry to Timer 1 Interrupt
004e98   809e     bsf     0x9e, 0, 0       	BSF	_PIR1bits, 0
                                           ;	.line	1087; meter_logger.c	RCONbits.IPEN = 1;
004e9a   8ed0     bsf     0xd0, 0x7, 0     	BSF	_RCONbits, 7
                                           ;	.line	1089; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int, enabled when ir demodulator is started
004e9c   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	1090; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004e9e   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
                                           ;	.line	1092; meter_logger.c	INTCONbits.PEIE = 1;
004ea0   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	1093; meter_logger.c	INTCONbits.GIE = 1;	/* Enable Global interrupts   */	
004ea2   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           ;	.line	1098; meter_logger.c	IPR1bits.RCIP = 0;
004ea4   9a9f     bcf     0x9f, 0x5, 0     	BCF	_IPR1bits, 5
                                           ;	.line	1099; meter_logger.c	IPR1bits.TXIP = 0;
004ea6   989f     bcf     0x9f, 0x4, 0     	BCF	_IPR1bits, 4
                                           ;	.line	1110; meter_logger.c	my_usart_open();
004ea8   ec26     call    0x524c, 0        	CALL	_my_usart_open
004eaa   f029
004eac   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004eae   ffd9
004eb0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__sleep_ms	code
                                           _sleep_ms:
                                           ;	.line	990; meter_logger.c	void sleep_ms(unsigned int ms) {
004b68   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004b6a   ffe5
004b6c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004b6e   ffd9
004b70   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004b72   ffe5
004b74   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004b76   ffe5
004b78   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004b7a   ffe5
004b7c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004b7e   ffe5
004b80   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004b82   ffe5
004b84   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004b86   ffe5
004b88   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
004b8a   ffe5
004b8c   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
004b8e   ffe5
004b90   0e02     movlw   0x2              	MOVLW	0x02
004b92   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004b94   f000
004b96   0e03     movlw   0x3              	MOVLW	0x03
004b98   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004b9a   f001
                                           ;	.line	993; meter_logger.c	start_timer_1_ms = timer_1_ms;	
004b9c   c541     movff   0x541, 0x2       	MOVFF	_timer_1_ms, r0x02
004b9e   f002
004ba0   c542     movff   0x542, 0x3       	MOVFF	(_timer_1_ms + 1), r0x03
004ba2   f003
                                           ;	.line	996; meter_logger.c	do {
004ba4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004ba6   08ff     sublw   0xff             	SUBLW	0xff
004ba8   6e04     movwf   0x4, 0           	MOVWF	r0x04
004baa   0eff     movlw   0xff             	MOVLW	0xff
004bac   5403     subfwb  0x3, 0, 0        	SUBFWB	r0x03, W
004bae   6e05     movwf   0x5, 0           	MOVWF	r0x05
                                           _00869_DS_:
                                           ;	.line	997; meter_logger.c	if (start_timer_1_ms <= timer_1_ms) {
004bb0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004bb2   0105     movlb   0x5              	BANKSEL	(_timer_1_ms + 1)
004bb4   5d42     subwf   0x42, 0, 0x1     	SUBWF	(_timer_1_ms + 1), W, B
004bb6   e102     bnz     0x4bbc           	BNZ	_00880_DS_
004bb8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
004bba   5d41     subwf   0x41, 0, 0x1     	SUBWF	_timer_1_ms, W, B
                                           _00880_DS_:
004bbc   e308     bnc     0x4bce           	BNC	_00867_DS_
                                           ;	.line	998; meter_logger.c	diff = timer_1_ms - start_timer_1_ms;
004bbe   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004bc0   0105     movlb   0x5              	BANKSEL	_timer_1_ms
004bc2   5d41     subwf   0x41, 0, 0x1     	SUBWF	_timer_1_ms, W, B
004bc4   6e06     movwf   0x6, 0           	MOVWF	r0x06
004bc6   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
004bc8   5942     subwfb  0x42, 0, 0x1     	SUBWFB	(_timer_1_ms + 1), W, B
004bca   6e07     movwf   0x7, 0           	MOVWF	r0x07
004bcc   d007     bra     0x4bdc           	BRA	_00870_DS_
                                           _00867_DS_:
004bce   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	1002; meter_logger.c	diff = 0xffff - start_timer_1_ms + timer_1_ms;
004bd0   5141     movf    0x41, 0, 0x1     	MOVF	_timer_1_ms, W, B
004bd2   2404     addwf   0x4, 0, 0        	ADDWF	r0x04, W
004bd4   6e06     movwf   0x6, 0           	MOVWF	r0x06
                                           ; removed redundant BANKSEL
004bd6   5142     movf    0x42, 0, 0x1     	MOVF	(_timer_1_ms + 1), W, B
004bd8   2005     addwfc  0x5, 0, 0        	ADDWFC	r0x05, W
004bda   6e07     movwf   0x7, 0           	MOVWF	r0x07
                                           _00870_DS_:
                                           ;	.line	1004; meter_logger.c	} while (diff < ms);
004bdc   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004bde   5c07     subwf   0x7, 0, 0        	SUBWF	r0x07, W
004be0   e102     bnz     0x4be6           	BNZ	_00881_DS_
004be2   5000     movf    0, 0, 0          	MOVF	r0x00, W
004be4   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
                                           _00881_DS_:
004be6   e3e4     bnc     0x4bb0           	BNC	_00869_DS_
004be8   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
004bea   f007
004bec   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
004bee   f006
004bf0   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
004bf2   f005
004bf4   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004bf6   f004
004bf8   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004bfa   f003
004bfc   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004bfe   f002
004c00   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004c02   f001
004c04   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004c06   f000
004c08   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004c0a   ffd9
004c0c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__isr_low_prio	code
                                           _isr_low_prio:
                                           ;	.line	958; meter_logger.c	static void isr_low_prio(void) __interrupt 2 {
004aa4   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
004aa6   ffe5
004aa8   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
004aaa   ffe5
004aac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004aae   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
004ab0   ffe5
004ab2   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
004ab4   ffe5
004ab6   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
004ab8   ffe5
004aba   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
004abc   ffe5
004abe   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
004ac0   ffe5
004ac2   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
004ac4   ffe5
004ac6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004ac8   ffe5
004aca   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004acc   ffd9
004ace   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004ad0   ffe5
004ad2   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004ad4   ffe5
                                           ;	.line	961; meter_logger.c	if (PIR1bits.TMR1IF) {
004ad6   a09e     btfss   0x9e, 0, 0       	BTFSS	_PIR1bits, 0
004ad8   d024     bra     0x4b22           	BRA	_00838_DS_
                                           ;	.line	962; meter_logger.c	TMR1H = (unsigned char)(TIMER1_RELOAD >> 8);    // 262,158ms @ 8MHz
004ada   0ef8     movlw   0xf8             	MOVLW	0xf8
004adc   6ecf     movwf   0xcf, 0          	MOVWF	_TMR1H
                                           ;	.line	963; meter_logger.c	TMR1L = (unsigned char)TIMER1_RELOAD;
004ade   0e53     movlw   0x53             	MOVLW	0x53
004ae0   6ece     movwf   0xce, 0          	MOVWF	_TMR1L
                                           ;	.line	965; meter_logger.c	switch (led_flash.state) {
004ae2   c54d     movff   0x54d, 0         	MOVFF	_led_flash, r0x00
004ae4   f000
004ae6   5000     movf    0, 0, 0          	MOVF	r0x00, W
004ae8   6e01     movwf   0x1, 0           	MOVWF	r0x01
004aea   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004aec   e004     bz      0x4af6           	BZ	_00832_DS_
004aee   5000     movf    0, 0, 0          	MOVF	r0x00, W
004af0   0a01     xorlw   0x1              	XORLW	0x01
004af2   e006     bz      0x4b00           	BZ	_00833_DS_
004af4   d011     bra     0x4b18           	BRA	_00836_DS_
                                           _00832_DS_:
                                           ;	.line	967; meter_logger.c	LED_PIN = 1;
004af6   8881     bsf     0x81, 0x4, 0     	BSF	_PORTBbits, 4
                                           ;	.line	968; meter_logger.c	led_flash.state = LED_FLASH_RUNNING;
004af8   0e01     movlw   0x1              	MOVLW	0x01
004afa   0105     movlb   0x5              	BANKSEL	_led_flash
004afc   6f4d     movwf   0x4d, 0x1        	MOVWF	_led_flash, B
                                           ;	.line	969; meter_logger.c	break;
004afe   d00c     bra     0x4b18           	BRA	_00836_DS_
                                           _00833_DS_:
                                           ;	.line	971; meter_logger.c	if (led_flash.timer-- == 0) {
004b00   c54e     movff   0x54e, 0         	MOVFF	(_led_flash + 1), r0x00
004b02   f000
004b04   0400     decf    0, 0, 0          	DECF	r0x00, W
004b06   6e01     movwf   0x1, 0           	MOVWF	r0x01
004b08   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004b0a   0105     movlb   0x5              	BANKSEL	(_led_flash + 1)
004b0c   6f4e     movwf   0x4e, 0x1        	MOVWF	(_led_flash + 1), B
004b0e   5000     movf    0, 0, 0          	MOVF	r0x00, W
004b10   e103     bnz     0x4b18           	BNZ	_00836_DS_
                                           ;	.line	972; meter_logger.c	LED_PIN = 0;
004b12   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	973; meter_logger.c	led_flash.state = LED_FLASH_STOPPED;
004b14   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
004b16   6f4d     movwf   0x4d, 0x1        	MOVWF	_led_flash, B
                                           _00836_DS_:
004b18   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	977; meter_logger.c	timer_1_ms++;
004b1a   3f41     incfsz  0x41, 0x1, 0x1   	INCFSZ	_timer_1_ms, F, B
004b1c   d001     bra     0x4b20           	BRA	_31238_DS_
                                           ; removed redundant BANKSEL
004b1e   2b42     incf    0x42, 0x1, 0x1   	INCF	(_timer_1_ms + 1), F, B
                                           _31238_DS_:
                                           ;	.line	978; meter_logger.c	PIR1bits.TMR1IF = 0;    /* Clear the Timer Flag  */
004b20   909e     bcf     0x9e, 0, 0       	BCF	_PIR1bits, 0
                                           _00838_DS_:
                                           ;	.line	982; meter_logger.c	if (usart_drdy()) {
004b22   ec3d     call    0x547a, 0        	CALL	_usart_drdy
004b24   f02a
004b26   6e00     movwf   0, 0             	MOVWF	r0x00
004b28   5000     movf    0, 0, 0          	MOVF	r0x00, W
004b2a   e006     bz      0x4b38           	BZ	_00841_DS_
                                           ;	.line	984; meter_logger.c	c = usart_getc();
004b2c   ec3b     call    0x5276, 0        	CALL	_usart_getc
004b2e   f029
004b30   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	985; meter_logger.c	usart_putc(c);
004b32   5000     movf    0, 0, 0          	MOVF	r0x00, W
004b34   ec21     call    0x5442, 0        	CALL	_usart_putc
004b36   f02a
                                           _00841_DS_:
004b38   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004b3a   f001
004b3c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004b3e   f000
004b40   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004b42   ffd9
004b44   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
004b46   fffb
004b48   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
004b4a   fffa
004b4c   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
004b4e   ffea
004b50   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
004b52   ffe9
004b54   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
004b56   fff4
004b58   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
004b5a   fff3
004b5c   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
004b5e   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
004b60   ffe0
004b62   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
004b64   ffd8
004b66   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__isr_high_prio	code
                                           _isr_high_prio:
                                           ;	.line	480; meter_logger.c	static void isr_high_prio(void) __interrupt 1 {
002608   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
00260a   ffe5
00260c   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
00260e   ffe5
002610   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002612   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
002614   ffe5
002616   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
002618   ffe5
00261a   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
00261c   ffe5
00261e   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
002620   ffe5
002622   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
002624   ffe5
002626   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
002628   ffe5
00262a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00262c   ffe5
00262e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002630   ffd9
002632   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002634   ffe5
002636   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002638   ffe5
00263a   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00263c   ffe5
00263e   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002640   ffe5
002642   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002644   ffe5
002646   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002648   ffe5
                                           ;	.line	482; meter_logger.c	if (INTCONbits.INT0IF && INTCONbits.INT0IE) {
00264a   a2f2     btfss   0xf2, 0x1, 0     	BTFSS	_INTCONbits, 1
00264c   d1a1     bra     0x2990           	BRA	_00398_DS_
00264e   a8f2     btfss   0xf2, 0x4, 0     	BTFSS	_INTCONbits, 4
002650   d19f     bra     0x2990           	BRA	_00398_DS_
                                           ;	.line	483; meter_logger.c	timer_0 = (unsigned int)(TMR0L) | ((unsigned int)(TMR0H) << 8);
002652   cfd6     movff   0xfd6, 0         	MOVFF	_TMR0L, r0x00
002654   f000
002656   6a01     clrf    0x1, 0           	CLRF	r0x01
002658   cfd7     movff   0xfd7, 0x2       	MOVFF	_TMR0H, r0x02
00265a   f002
00265c   6a03     clrf    0x3, 0           	CLRF	r0x03
00265e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002660   6e05     movwf   0x5, 0           	MOVWF	r0x05
002662   6a04     clrf    0x4, 0           	CLRF	r0x04
002664   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002666   1000     iorwf   0, 0, 0          	IORWF	r0x00, W
002668   0105     movlb   0x5              	BANKSEL	_timer_0
00266a   6f47     movwf   0x47, 0x1        	MOVWF	_timer_0, B
00266c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00266e   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
                                           ; removed redundant BANKSEL
002670   6f48     movwf   0x48, 0x1        	MOVWF	(_timer_0 + 1), B
002672   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	484; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
002674   514a     movf    0x4a, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
002676   6e00     movwf   0, 0             	MOVWF	r0x00
002678   6a01     clrf    0x1, 0           	CLRF	r0x01
00267a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00267c   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	485; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
00267e   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
002680   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
002682   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	487; meter_logger.c	switch (codec_type) {
002684   5152     movf    0x52, 0, 0x1     	MOVF	_codec_type, W, B
002686   0a01     xorlw   0x1              	XORLW	0x01
002688   e00b     bz      0x26a0           	BZ	_00356_DS_
                                           _00716_DS_:
00268a   0105     movlb   0x5              	BANKSEL	_codec_type
00268c   5152     movf    0x52, 0, 0x1     	MOVF	_codec_type, W, B
00268e   0a02     xorlw   0x2              	XORLW	0x02
002690   e101     bnz     0x2694           	BNZ	_00718_DS_
002692   d11d     bra     0x28ce           	BRA	_00390_DS_
                                           _00718_DS_:
002694   0105     movlb   0x5              	BANKSEL	_codec_type
002696   5152     movf    0x52, 0, 0x1     	MOVF	_codec_type, W, B
002698   0a04     xorlw   0x4              	XORLW	0x04
00269a   e101     bnz     0x269e           	BNZ	_00720_DS_
00269c   d146     bra     0x292a           	BRA	_00393_DS_
                                           _00720_DS_:
00269e   d177     bra     0x298e           	BRA	_00396_DS_
                                           _00356_DS_:
                                           ;	.line	489; meter_logger.c	flash_led(100);
0026a0   0e64     movlw   0x64             	MOVLW	0x64
0026a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0026a4   ec63     call    0x52c6, 0        	CALL	_flash_led
0026a6   f029
0026a8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	490; meter_logger.c	switch (testo_ir_proto.state) {
0026aa   c524     movff   0x524, 0         	MOVFF	_testo_ir_proto, r0x00
0026ac   f000
0026ae   5000     movf    0, 0, 0          	MOVF	r0x00, W
0026b0   6e01     movwf   0x1, 0           	MOVWF	r0x01
0026b2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0026b4   e008     bz      0x26c6           	BZ	_00357_DS_
0026b6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0026b8   0a02     xorlw   0x2              	XORLW	0x02
0026ba   e00c     bz      0x26d4           	BZ	_00358_DS_
0026bc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0026be   0a04     xorlw   0x4              	XORLW	0x04
0026c0   e101     bnz     0x26c4           	BNZ	_00726_DS_
0026c2   d03b     bra     0x273a           	BRA	_00366_DS_
                                           _00726_DS_:
0026c4   d164     bra     0x298e           	BRA	_00396_DS_
                                           _00357_DS_:
                                           ;	.line	492; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
0026c6   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	493; meter_logger.c	testo_ir_proto.start_bit_len = 1;
0026c8   0e01     movlw   0x1              	MOVLW	0x01
0026ca   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
0026cc   6f26     movwf   0x26, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	494; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
0026ce   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
0026d0   6f24     movwf   0x24, 0x1        	MOVWF	_testo_ir_proto, B
                                           ;	.line	495; meter_logger.c	break;
0026d2   d15d     bra     0x298e           	BRA	_00396_DS_
                                           _00358_DS_:
0026d4   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	497; meter_logger.c	if ((TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < TICK + timer0_reload + TICK_ADJ)) {
0026d6   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
0026d8   0f8f     addlw   0x8f             	ADDLW	0x8f
0026da   6e00     movwf   0, 0             	MOVWF	r0x00
0026dc   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
0026de   214a     addwfc  0x4a, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0026e0   6e01     movwf   0x1, 0           	MOVWF	r0x01
0026e2   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0026e4   5148     movf    0x48, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
0026e6   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0026e8   e102     bnz     0x26ee           	BNZ	_00727_DS_
                                           ; removed redundant BANKSEL
0026ea   5147     movf    0x47, 0, 0x1     	MOVF	_timer_0, W, B
0026ec   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00727_DS_:
0026ee   e21f     bc      0x272e           	BC	_00363_DS_
0026f0   0105     movlb   0x5              	BANKSEL	_timer0_reload
0026f2   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
0026f4   0f1f     addlw   0x1f             	ADDLW	0x1f
0026f6   6e00     movwf   0, 0             	MOVWF	r0x00
0026f8   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
0026fa   214a     addwfc  0x4a, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0026fc   6e01     movwf   0x1, 0           	MOVWF	r0x01
0026fe   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002700   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002702   5d48     subwf   0x48, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
002704   e102     bnz     0x270a           	BNZ	_00728_DS_
002706   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002708   5d47     subwf   0x47, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00728_DS_:
00270a   e211     bc      0x272e           	BC	_00363_DS_
                                           ;	.line	498; meter_logger.c	if (testo_ir_proto.start_bit_len < 2) {
00270c   c526     movff   0x526, 0         	MOVFF	(_testo_ir_proto + 2), r0x00
00270e   f000
002710   0e02     movlw   0x2              	MOVLW	0x02
002712   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002714   e205     bc      0x2720           	BC	_00360_DS_
                                           ;	.line	499; meter_logger.c	testo_ir_proto.start_bit_len++;
002716   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002718   5000     movf    0, 0, 0          	MOVF	r0x00, W
00271a   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
00271c   6f26     movwf   0x26, 0x1        	MOVWF	(_testo_ir_proto + 2), B
00271e   d137     bra     0x298e           	BRA	_00396_DS_
                                           _00360_DS_:
002720   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	503; meter_logger.c	testo_ir_proto.data = 0;
002722   6b27     clrf    0x27, 0x1        	CLRF	(_testo_ir_proto + 3), B
                                           ; removed redundant BANKSEL
002724   6b28     clrf    0x28, 0x1        	CLRF	(_testo_ir_proto + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	504; meter_logger.c	testo_ir_proto.data_len = 0;
002726   6b29     clrf    0x29, 0x1        	CLRF	(_testo_ir_proto + 5), B
                                           ;	.line	505; meter_logger.c	testo_ir_proto.state = DATA_WAIT;
002728   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
00272a   6f24     movwf   0x24, 0x1        	MOVWF	_testo_ir_proto, B
00272c   d130     bra     0x298e           	BRA	_00396_DS_
                                           _00363_DS_:
                                           ;	.line	510; meter_logger.c	testo_ir_proto.start_bit_len = 1;
00272e   0e01     movlw   0x1              	MOVLW	0x01
002730   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
002732   6f26     movwf   0x26, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	511; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
002734   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002736   6f24     movwf   0x24, 0x1        	MOVWF	_testo_ir_proto, B
                                           ;	.line	513; meter_logger.c	break;
002738   d12a     bra     0x298e           	BRA	_00396_DS_
                                           _00366_DS_:
                                           ;	.line	515; meter_logger.c	if (testo_ir_proto.data_len <= 12) {
00273a   0e0d     movlw   0xd              	MOVLW	0x0d
00273c   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
00273e   5d29     subwf   0x29, 0, 0x1     	SUBWF	(_testo_ir_proto + 5), W, B
002740   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002742   d125     bra     0x298e           	BRA	_00396_DS_
002744   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	516; meter_logger.c	if (((TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < TICK + timer0_reload + TICK_ADJ)) || ((3 * TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < 3 * TICK + timer0_reload + TICK_ADJ))) {
002746   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
002748   0f8f     addlw   0x8f             	ADDLW	0x8f
00274a   6e00     movwf   0, 0             	MOVWF	r0x00
00274c   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
00274e   214a     addwfc  0x4a, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002750   6e01     movwf   0x1, 0           	MOVWF	r0x01
002752   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002754   5148     movf    0x48, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
002756   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002758   e102     bnz     0x275e           	BNZ	_00731_DS_
                                           ; removed redundant BANKSEL
00275a   5147     movf    0x47, 0, 0x1     	MOVF	_timer_0, W, B
00275c   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00731_DS_:
00275e   e20e     bc      0x277c           	BC	_00382_DS_
002760   0105     movlb   0x5              	BANKSEL	_timer0_reload
002762   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
002764   0f1f     addlw   0x1f             	ADDLW	0x1f
002766   6e00     movwf   0, 0             	MOVWF	r0x00
002768   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
00276a   214a     addwfc  0x4a, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
00276c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00276e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002770   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002772   5d48     subwf   0x48, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
002774   e102     bnz     0x277a           	BNZ	_00732_DS_
002776   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002778   5d47     subwf   0x47, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00732_DS_:
00277a   e31c     bnc     0x27b4           	BNC	_00377_DS_
                                           _00382_DS_:
00277c   0105     movlb   0x5              	BANKSEL	_timer0_reload
00277e   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
002780   0f3d     addlw   0x3d             	ADDLW	0x3d
002782   6e00     movwf   0, 0             	MOVWF	r0x00
002784   0e09     movlw   0x9              	MOVLW	0x09
                                           ; removed redundant BANKSEL
002786   214a     addwfc  0x4a, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002788   6e01     movwf   0x1, 0           	MOVWF	r0x01
00278a   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
00278c   5148     movf    0x48, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
00278e   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002790   e102     bnz     0x2796           	BNZ	_00733_DS_
                                           ; removed redundant BANKSEL
002792   5147     movf    0x47, 0, 0x1     	MOVF	_timer_0, W, B
002794   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00733_DS_:
002796   e235     bc      0x2802           	BC	_00378_DS_
002798   0105     movlb   0x5              	BANKSEL	_timer0_reload
00279a   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
00279c   0fcd     addlw   0xcd             	ADDLW	0xcd
00279e   6e00     movwf   0, 0             	MOVWF	r0x00
0027a0   0e0a     movlw   0xa              	MOVLW	0x0a
                                           ; removed redundant BANKSEL
0027a2   214a     addwfc  0x4a, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0027a4   6e01     movwf   0x1, 0           	MOVWF	r0x01
0027a6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0027a8   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0027aa   5d48     subwf   0x48, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
0027ac   e102     bnz     0x27b2           	BNZ	_00734_DS_
0027ae   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0027b0   5d47     subwf   0x47, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00734_DS_:
0027b2   e227     bc      0x2802           	BC	_00378_DS_
                                           _00377_DS_:
                                           ;	.line	518; meter_logger.c	if ((testo_ir_proto.data & 1) != 0) {
0027b4   c527     movff   0x527, 0         	MOVFF	(_testo_ir_proto + 3), r0x00
0027b6   f000
0027b8   c528     movff   0x528, 0x1       	MOVFF	(_testo_ir_proto + 4), r0x01
0027ba   f001
0027bc   a000     btfss   0, 0, 0          	BTFSS	r0x00, 0
0027be   d00b     bra     0x27d6           	BRA	_00368_DS_
                                           ;	.line	520; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
0027c0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0027c2   6e02     movwf   0x2, 0           	MOVWF	r0x02
0027c4   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
0027c6   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
0027c8   6e03     movwf   0x3, 0           	MOVWF	r0x03
0027ca   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0027cc   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
0027ce   6f27     movwf   0x27, 0x1        	MOVWF	(_testo_ir_proto + 3), B
0027d0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
0027d2   6f28     movwf   0x28, 0x1        	MOVWF	(_testo_ir_proto + 4), B
0027d4   d00f     bra     0x27f4           	BRA	_00369_DS_
                                           _00368_DS_:
                                           ;	.line	524; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
0027d6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0027d8   6e02     movwf   0x2, 0           	MOVWF	r0x02
0027da   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
0027dc   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
0027de   6e03     movwf   0x3, 0           	MOVWF	r0x03
0027e0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0027e2   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
0027e4   6f27     movwf   0x27, 0x1        	MOVWF	(_testo_ir_proto + 3), B
0027e6   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
0027e8   6f28     movwf   0x28, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           ;	.line	525; meter_logger.c	testo_ir_proto.data |= 1;	// and set bit 0
0027ea   8002     bsf     0x2, 0, 0        	BSF	r0x02, 0
0027ec   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
0027ee   6f27     movwf   0x27, 0x1        	MOVWF	(_testo_ir_proto + 3), B
0027f0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
0027f2   6f28     movwf   0x28, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           _00369_DS_:
                                           ;	.line	527; meter_logger.c	testo_ir_proto.data_len++;
0027f4   c529     movff   0x529, 0         	MOVFF	(_testo_ir_proto + 5), r0x00
0027f6   f000
0027f8   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0027fa   5000     movf    0, 0, 0          	MOVF	r0x00, W
0027fc   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
0027fe   6f29     movwf   0x29, 0x1        	MOVWF	(_testo_ir_proto + 5), B
002800   d048     bra     0x2892           	BRA	_00379_DS_
                                           _00378_DS_:
002802   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	529; meter_logger.c	else if ((2 * TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < 2 * TICK + timer0_reload + TICK_ADJ)) {
002804   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
002806   0fe6     addlw   0xe6             	ADDLW	0xe6
002808   6e00     movwf   0, 0             	MOVWF	r0x00
00280a   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
00280c   214a     addwfc  0x4a, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
00280e   6e01     movwf   0x1, 0           	MOVWF	r0x01
002810   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002812   5148     movf    0x48, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
002814   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002816   e102     bnz     0x281c           	BNZ	_00737_DS_
                                           ; removed redundant BANKSEL
002818   5147     movf    0x47, 0, 0x1     	MOVF	_timer_0, W, B
00281a   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00737_DS_:
00281c   e235     bc      0x2888           	BC	_00374_DS_
00281e   0105     movlb   0x5              	BANKSEL	_timer0_reload
002820   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
002822   0f76     addlw   0x76             	ADDLW	0x76
002824   6e00     movwf   0, 0             	MOVWF	r0x00
002826   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
002828   214a     addwfc  0x4a, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
00282a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00282c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00282e   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002830   5d48     subwf   0x48, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
002832   e102     bnz     0x2838           	BNZ	_00738_DS_
002834   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002836   5d47     subwf   0x47, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00738_DS_:
002838   e227     bc      0x2888           	BC	_00374_DS_
                                           ;	.line	531; meter_logger.c	if ((testo_ir_proto.data & 1) != 0) {
00283a   c527     movff   0x527, 0         	MOVFF	(_testo_ir_proto + 3), r0x00
00283c   f000
00283e   c528     movff   0x528, 0x1       	MOVFF	(_testo_ir_proto + 4), r0x01
002840   f001
002842   a000     btfss   0, 0, 0          	BTFSS	r0x00, 0
002844   d010     bra     0x2866           	BRA	_00371_DS_
                                           ;	.line	533; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
002846   5000     movf    0, 0, 0          	MOVF	r0x00, W
002848   6e02     movwf   0x2, 0           	MOVWF	r0x02
00284a   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
00284c   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
00284e   6e03     movwf   0x3, 0           	MOVWF	r0x03
002850   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002852   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
002854   6f27     movwf   0x27, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002856   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002858   6f28     movwf   0x28, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           ;	.line	534; meter_logger.c	testo_ir_proto.data |= 1;	// and set bit 0
00285a   8002     bsf     0x2, 0, 0        	BSF	r0x02, 0
00285c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
00285e   6f27     movwf   0x27, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002860   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002862   6f28     movwf   0x28, 0x1        	MOVWF	(_testo_ir_proto + 4), B
002864   d00a     bra     0x287a           	BRA	_00372_DS_
                                           _00371_DS_:
                                           ;	.line	538; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
002866   5000     movf    0, 0, 0          	MOVF	r0x00, W
002868   6e02     movwf   0x2, 0           	MOVWF	r0x02
00286a   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
00286c   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
00286e   6e03     movwf   0x3, 0           	MOVWF	r0x03
002870   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002872   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
002874   6f27     movwf   0x27, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002876   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002878   6f28     movwf   0x28, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           _00372_DS_:
                                           ;	.line	540; meter_logger.c	testo_ir_proto.data_len++;
00287a   c529     movff   0x529, 0         	MOVFF	(_testo_ir_proto + 5), r0x00
00287c   f000
00287e   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002880   5000     movf    0, 0, 0          	MOVF	r0x00, W
002882   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
002884   6f29     movwf   0x29, 0x1        	MOVWF	(_testo_ir_proto + 5), B
002886   d005     bra     0x2892           	BRA	_00379_DS_
                                           _00374_DS_:
                                           ;	.line	545; meter_logger.c	testo_ir_proto.start_bit_len = 1;
002888   0e01     movlw   0x1              	MOVLW	0x01
00288a   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
00288c   6f26     movwf   0x26, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	546; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
00288e   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002890   6f24     movwf   0x24, 0x1        	MOVWF	_testo_ir_proto, B
                                           _00379_DS_:
002892   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
                                           ;	.line	548; meter_logger.c	if (testo_ir_proto.data_len == 12) {
002894   5129     movf    0x29, 0, 0x1     	MOVF	(_testo_ir_proto + 5), W, B
002896   0a0c     xorlw   0xc              	XORLW	0x0c
002898   e001     bz      0x289c           	BZ	_00742_DS_
00289a   d079     bra     0x298e           	BRA	_00396_DS_
                                           _00742_DS_:
00289c   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 4)
                                           ;	.line	551; meter_logger.c	if (testo_valid_err_corr(testo_ir_proto.data & 0xffff)) {
00289e   5128     movf    0x28, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
0028a0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0028a2   5127     movf    0x27, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0028a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0028a6   ecf3     call    0x3be6, 0        	CALL	_testo_valid_err_corr
0028a8   f01d
0028aa   6e00     movwf   0, 0             	MOVWF	r0x00
0028ac   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0028ae   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0028b0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0028b2   e00a     bz      0x28c8           	BZ	_00384_DS_
0028b4   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	553; meter_logger.c	fifo_put(testo_ir_proto.data & 0xff);
0028b6   5127     movf    0x27, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0028b8   6e00     movwf   0, 0             	MOVWF	r0x00
0028ba   6a01     clrf    0x1, 0           	CLRF	r0x01
0028bc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0028be   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0028c0   ecfb     call    0x43f6, 0        	CALL	_fifo_put
0028c2   f021
0028c4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	554; meter_logger.c	LED_PIN = 1;
0028c6   8881     bsf     0x81, 0x4, 0     	BSF	_PORTBbits, 4
                                           _00384_DS_:
0028c8   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	556; meter_logger.c	testo_ir_proto.state = INIT_STATE;
0028ca   6b24     clrf    0x24, 0x1        	CLRF	_testo_ir_proto, B
                                           ;	.line	561; meter_logger.c	break;
0028cc   d060     bra     0x298e           	BRA	_00396_DS_
                                           _00390_DS_:
0028ce   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	563; meter_logger.c	switch (rs232_proto.state) {
0028d0   511d     movf    0x1d, 0, 0x1     	MOVF	_rs232_proto, W, B
0028d2   0a02     xorlw   0x2              	XORLW	0x02
0028d4   e001     bz      0x28d8           	BZ	_00745_DS_
0028d6   d05b     bra     0x298e           	BRA	_00396_DS_
                                           _00745_DS_:
0028d8   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	574; meter_logger.c	TMR0H = (unsigned char)((timer0_reload - ((0xffff - timer0_reload) >> 1)) >> 8);
0028da   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
0028dc   08ff     sublw   0xff             	SUBLW	0xff
0028de   6e00     movwf   0, 0             	MOVWF	r0x00
0028e0   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
0028e2   554a     subfwb  0x4a, 0, 0x1     	SUBFWB	(_timer0_reload + 1), W, B
0028e4   6e01     movwf   0x1, 0           	MOVWF	r0x01
0028e6   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0028e8   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
0028ea   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
0028ec   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0028ee   5d49     subwf   0x49, 0, 0x1     	SUBWF	_timer0_reload, W, B
0028f0   6e00     movwf   0, 0             	MOVWF	r0x00
0028f2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0028f4   594a     subwfb  0x4a, 0, 0x1     	SUBWFB	(_timer0_reload + 1), W, B
0028f6   6e01     movwf   0x1, 0           	MOVWF	r0x01
0028f8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0028fa   6e00     movwf   0, 0             	MOVWF	r0x00
0028fc   6a01     clrf    0x1, 0           	CLRF	r0x01
0028fe   5000     movf    0, 0, 0          	MOVF	r0x00, W
002900   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	575; meter_logger.c	TMR0L = (unsigned char)timer0_reload - ((0xffff - timer0_reload) >> 1);
002902   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
002904   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002906   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
002908   08ff     sublw   0xff             	SUBLW	0xff
00290a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00290c   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
00290e   554a     subfwb  0x4a, 0, 0x1     	SUBFWB	(_timer0_reload + 1), W, B
002910   6e02     movwf   0x2, 0           	MOVWF	r0x02
002912   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002914   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
002916   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
002918   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00291a   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
00291c   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
                                           ;	.line	576; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int while we are using timer to receive data bits
00291e   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	577; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
002920   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	578; meter_logger.c	rs232_proto.state = DATA_WAIT;
002922   0e04     movlw   0x4              	MOVLW	0x04
002924   0105     movlb   0x5              	BANKSEL	_rs232_proto
002926   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	581; meter_logger.c	break;
002928   d032     bra     0x298e           	BRA	_00396_DS_
                                           _00393_DS_:
00292a   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	583; meter_logger.c	switch (rs232_proto.state) {
00292c   511d     movf    0x1d, 0, 0x1     	MOVF	_rs232_proto, W, B
00292e   0a02     xorlw   0x2              	XORLW	0x02
002930   e12e     bnz     0x298e           	BNZ	_00396_DS_
                                           _00747_DS_:
002932   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	594; meter_logger.c	TMR0H = (unsigned char)((timer0_reload - ((0xffff - timer0_reload) >> 1)) >> 8);
002934   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
002936   08ff     sublw   0xff             	SUBLW	0xff
002938   6e00     movwf   0, 0             	MOVWF	r0x00
00293a   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
00293c   554a     subfwb  0x4a, 0, 0x1     	SUBFWB	(_timer0_reload + 1), W, B
00293e   6e01     movwf   0x1, 0           	MOVWF	r0x01
002940   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002942   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
002944   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
002946   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002948   5d49     subwf   0x49, 0, 0x1     	SUBWF	_timer0_reload, W, B
00294a   6e00     movwf   0, 0             	MOVWF	r0x00
00294c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00294e   594a     subwfb  0x4a, 0, 0x1     	SUBWFB	(_timer0_reload + 1), W, B
002950   6e01     movwf   0x1, 0           	MOVWF	r0x01
002952   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002954   6e00     movwf   0, 0             	MOVWF	r0x00
002956   6a01     clrf    0x1, 0           	CLRF	r0x01
002958   5000     movf    0, 0, 0          	MOVF	r0x00, W
00295a   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	595; meter_logger.c	TMR0L = (unsigned char)timer0_reload - ((0xffff - timer0_reload) >> 1);
00295c   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
00295e   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002960   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
002962   08ff     sublw   0xff             	SUBLW	0xff
002964   6e01     movwf   0x1, 0           	MOVWF	r0x01
002966   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
002968   554a     subfwb  0x4a, 0, 0x1     	SUBFWB	(_timer0_reload + 1), W, B
00296a   6e02     movwf   0x2, 0           	MOVWF	r0x02
00296c   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
00296e   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
002970   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
002972   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002974   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002976   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
                                           ;	.line	596; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int while we are using timer to receive data bits
002978   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	597; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
00297a   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	598; meter_logger.c	rs232_proto.data &= 0x7f;	// 7-bit data
00297c   0e7f     movlw   0x7f             	MOVLW	0x7f
00297e   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
002980   151f     andwf   0x1f, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
002982   6e00     movwf   0, 0             	MOVWF	r0x00
002984   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002986   6f1f     movwf   0x1f, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	599; meter_logger.c	rs232_proto.calculated_parity = 0;
002988   6b22     clrf    0x22, 0x1        	CLRF	(_rs232_proto + 5), B
                                           ;	.line	601; meter_logger.c	rs232_proto.state = DATA_WAIT;
00298a   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
00298c   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           _00396_DS_:
                                           ;	.line	606; meter_logger.c	INTCONbits.INT0IF = 0;	/* Clear Interrupt Flag */
00298e   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           _00398_DS_:
                                           ;	.line	610; meter_logger.c	if (INTCONbits.TMR0IF && INTCONbits.TMR0IE) {
002990   a4f2     btfss   0xf2, 0x2, 0     	BTFSS	_INTCONbits, 2
002992   efea     goto    0x2dd4           	GOTO	_00475_DS_
002994   f016
002996   aaf2     btfss   0xf2, 0x5, 0     	BTFSS	_INTCONbits, 5
002998   efea     goto    0x2dd4           	GOTO	_00475_DS_
00299a   f016
00299c   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	612; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
00299e   514a     movf    0x4a, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
0029a0   6e00     movwf   0, 0             	MOVWF	r0x00
0029a2   6a01     clrf    0x1, 0           	CLRF	r0x01
0029a4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0029a6   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	613; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
0029a8   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
0029aa   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
                                           ;	.line	615; meter_logger.c	switch (codec_type) {
0029ac   0e01     movlw   0x1              	MOVLW	0x01
0029ae   0105     movlb   0x5              	BANKSEL	_codec_type
0029b0   5d52     subwf   0x52, 0, 0x1     	SUBWF	_codec_type, W, B
0029b2   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
0029b4   efe9     goto    0x2dd2           	GOTO	_00473_DS_
0029b6   f016
0029b8   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
0029ba   5d52     subwf   0x52, 0, 0x1     	SUBWF	_codec_type, W, B
0029bc   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0029be   efe9     goto    0x2dd2           	GOTO	_00473_DS_
0029c0   f016
                                           ; removed redundant BANKSEL
0029c2   0552     decf    0x52, 0, 0x1     	DECF	_codec_type, W, B
0029c4   6e00     movwf   0, 0             	MOVWF	r0x00
0029c6   6afa     clrf    0xfa, 0          	CLRF	PCLATH
0029c8   6afb     clrf    0xfb, 0          	CLRF	PCLATU
0029ca   3400     rlcf    0, 0, 0          	RLCF	r0x00, W
0029cc   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0029ce   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
0029d0   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0029d2   0bfc     andlw   0xfc             	ANDLW	0xfc
0029d4   0fe4     addlw   0xe4             	ADDLW	LOW(_00751_DS_)
0029d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0029d8   0e29     movlw   0x29             	MOVLW	HIGH(_00751_DS_)
0029da   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
0029dc   0e00     movlw   0                	MOVLW	UPPER(_00751_DS_)
0029de   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0029e0   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0029e2   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00751_DS_:
0029e4   ef00     goto    0x2a00           	GOTO	_00400_DS_
0029e6   f015
0029e8   ef4f     goto    0x2a9e           	GOTO	_00412_DS_
0029ea   f015
0029ec   ef06     goto    0x2a0c           	GOTO	_00401_DS_
0029ee   f015
0029f0   eff7     goto    0x2bee           	GOTO	_00433_DS_
0029f2   f015
0029f4   ef8d     goto    0x2b1a           	GOTO	_00422_DS_
0029f6   f015
0029f8   ef51     goto    0x2ca2           	GOTO	_00446_DS_
0029fa   f016
0029fc   ef94     goto    0x2d28           	GOTO	_00457_DS_
0029fe   f016
                                           _00400_DS_:
                                           ;	.line	617; meter_logger.c	T0CONbits.TMR0ON = 0;			// Stop TMR0
002a00   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
002a02   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	618; meter_logger.c	testo_ir_proto.state = INIT_STATE;
002a04   6b24     clrf    0x24, 0x1        	CLRF	_testo_ir_proto, B
002a06   0003     sleep                    	sleep 
                                           ;	.line	620; meter_logger.c	break;
002a08   efe9     goto    0x2dd2           	GOTO	_00473_DS_
002a0a   f016
                                           _00401_DS_:
                                           ;	.line	622; meter_logger.c	switch (rs232_proto.state) {
002a0c   c51d     movff   0x51d, 0         	MOVFF	_rs232_proto, r0x00
002a0e   f000
002a10   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a12   6e01     movwf   0x1, 0           	MOVWF	r0x01
002a14   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002a16   e00a     bz      0x2a2c           	BZ	_00402_DS_
002a18   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a1a   0a03     xorlw   0x3              	XORLW	0x03
002a1c   e011     bz      0x2a40           	BZ	_00405_DS_
002a1e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a20   0a0a     xorlw   0xa              	XORLW	0x0a
002a22   e033     bz      0x2a8a           	BZ	_00409_DS_
002a24   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a26   0a0b     xorlw   0xb              	XORLW	0x0b
002a28   e035     bz      0x2a94           	BZ	_00410_DS_
002a2a   d1d3     bra     0x2dd2           	BRA	_00473_DS_
                                           _00402_DS_:
002a2c   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	624; meter_logger.c	if (rs232_proto.data_len == 8) {
002a2e   5120     movf    0x20, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
002a30   0a08     xorlw   0x8              	XORLW	0x08
002a32   e001     bz      0x2a36           	BZ	_00761_DS_
002a34   d1ce     bra     0x2dd2           	BRA	_00473_DS_
                                           _00761_DS_:
                                           ;	.line	625; meter_logger.c	IR_LED_PIN = 1;		// inverted rs232 output on ir, start bit = ir light
002a36   8281     bsf     0x81, 0x1, 0     	BSF	_PORTBbits, 1
                                           ;	.line	626; meter_logger.c	rs232_proto.state = START_BIT_SENT;
002a38   0e03     movlw   0x3              	MOVLW	0x03
002a3a   0105     movlb   0x5              	BANKSEL	_rs232_proto
002a3c   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	628; meter_logger.c	break;
002a3e   d1c9     bra     0x2dd2           	BRA	_00473_DS_
                                           _00405_DS_:
                                           ;	.line	630; meter_logger.c	if (rs232_proto.data_len >= 1) {
002a40   0e01     movlw   0x1              	MOVLW	0x01
002a42   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002a44   5d20     subwf   0x20, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002a46   e31c     bnc     0x2a80           	BNC	_00407_DS_
                                           ;	.line	631; meter_logger.c	IR_LED_PIN = (rs232_proto.data & 1) == 0;	// inverted rs232 output on ir
002a48   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002a4a   151f     andwf   0x1f, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
002a4c   6e00     movwf   0, 0             	MOVWF	r0x00
002a4e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a50   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
002a52   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
002a54   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002a56   6a00     clrf    0, 0             	CLRF	r0x00
002a58   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
002a5a   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a5c   0b01     andlw   0x1              	ANDLW	0x01
002a5e   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
002a60   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
002a62   5081     movf    0x81, 0, 0       	MOVF	_PORTBbits, W
002a64   0bfd     andlw   0xfd             	ANDLW	0xfd
002a66   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
002a68   6e81     movwf   0x81, 0          	MOVWF	_PORTBbits
                                           ; removed redundant BANKSEL
                                           ;	.line	632; meter_logger.c	rs232_proto.data = rs232_proto.data >> 1;
002a6a   411f     rrncf   0x1f, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002a6c   0b7f     andlw   0x7f             	ANDLW	0x7f
002a6e   6e00     movwf   0, 0             	MOVWF	r0x00
002a70   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002a72   6f1f     movwf   0x1f, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	633; meter_logger.c	rs232_proto.data_len--;
002a74   c520     movff   0x520, 0         	MOVFF	(_rs232_proto + 3), r0x00
002a76   f000
002a78   0600     decf    0, 0x1, 0        	DECF	r0x00, F
002a7a   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002a7c   6f20     movwf   0x20, 0x1        	MOVWF	(_rs232_proto + 3), B
002a7e   d1a9     bra     0x2dd2           	BRA	_00473_DS_
                                           _00407_DS_:
                                           ;	.line	636; meter_logger.c	IR_LED_PIN = 0;								// inverted rs232 output on ir					
002a80   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	637; meter_logger.c	rs232_proto.state = STOP_BIT_SENT;
002a82   0e0a     movlw   0xa              	MOVLW	0x0a
002a84   0105     movlb   0x5              	BANKSEL	_rs232_proto
002a86   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	639; meter_logger.c	break;
002a88   d1a4     bra     0x2dd2           	BRA	_00473_DS_
                                           _00409_DS_:
                                           ;	.line	641; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002a8a   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	642; meter_logger.c	rs232_proto.state = STOP_BIT2_SENT;
002a8c   0e0b     movlw   0xb              	MOVLW	0x0b
002a8e   0105     movlb   0x5              	BANKSEL	_rs232_proto
002a90   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	643; meter_logger.c	break;
002a92   d19f     bra     0x2dd2           	BRA	_00473_DS_
                                           _00410_DS_:
                                           ;	.line	645; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002a94   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
002a96   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	646; meter_logger.c	rs232_proto.state = INIT_STATE;
002a98   6b1d     clrf    0x1d, 0x1        	CLRF	_rs232_proto, B
                                           ;	.line	647; meter_logger.c	T0CONbits.TMR0ON = 0;							// stop timer 0
002a9a   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	650; meter_logger.c	break;
002a9c   d19a     bra     0x2dd2           	BRA	_00473_DS_
                                           _00412_DS_:
                                           ;	.line	652; meter_logger.c	switch (rs232_proto.state) {
002a9e   c51d     movff   0x51d, 0         	MOVFF	_rs232_proto, r0x00
002aa0   f000
002aa2   5000     movf    0, 0, 0          	MOVF	r0x00, W
002aa4   0a04     xorlw   0x4              	XORLW	0x04
002aa6   e007     bz      0x2ab6           	BZ	_00413_DS_
002aa8   5000     movf    0, 0, 0          	MOVF	r0x00, W
002aaa   0a08     xorlw   0x8              	XORLW	0x08
002aac   e023     bz      0x2af4           	BZ	_00419_DS_
002aae   5000     movf    0, 0, 0          	MOVF	r0x00, W
002ab0   0a09     xorlw   0x9              	XORLW	0x09
002ab2   e024     bz      0x2afc           	BZ	_00420_DS_
002ab4   d18e     bra     0x2dd2           	BRA	_00473_DS_
                                           _00413_DS_:
                                           ;	.line	654; meter_logger.c	rs232_proto.data_len++;
002ab6   c520     movff   0x520, 0         	MOVFF	(_rs232_proto + 3), r0x00
002ab8   f000
002aba   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002abc   5000     movf    0, 0, 0          	MOVF	r0x00, W
002abe   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002ac0   6f20     movwf   0x20, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	655; meter_logger.c	if (IR_PIN) {		
002ac2   a081     btfss   0x81, 0, 0       	BTFSS	_PORTBbits, 0
002ac4   d006     bra     0x2ad2           	BRA	_00415_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	657; meter_logger.c	rs232_proto.data >>= 1;
002ac6   411f     rrncf   0x1f, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002ac8   0b7f     andlw   0x7f             	ANDLW	0x7f
002aca   6e00     movwf   0, 0             	MOVWF	r0x00
002acc   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002ace   6f1f     movwf   0x1f, 0x1        	MOVWF	(_rs232_proto + 2), B
002ad0   d009     bra     0x2ae4           	BRA	_00416_DS_
                                           _00415_DS_:
002ad2   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	669; meter_logger.c	rs232_proto.data >>= 1;
002ad4   411f     rrncf   0x1f, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002ad6   0b7f     andlw   0x7f             	ANDLW	0x7f
002ad8   6e00     movwf   0, 0             	MOVWF	r0x00
002ada   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002adc   6f1f     movwf   0x1f, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	670; meter_logger.c	rs232_proto.data |= 0x80;
002ade   8e00     bsf     0, 0x7, 0        	BSF	r0x00, 7
002ae0   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002ae2   6f1f     movwf   0x1f, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           _00416_DS_:
                                           ;	.line	690; meter_logger.c	if (rs232_proto.data_len >= 8) {
002ae4   0e08     movlw   0x8              	MOVLW	0x08
002ae6   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002ae8   5d20     subwf   0x20, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002aea   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
002aec   d172     bra     0x2dd2           	BRA	_00473_DS_
                                           ;	.line	692; meter_logger.c	rs232_proto.state = STOP_BIT_WAIT;
002aee   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
002af0   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	694; meter_logger.c	break;
002af2   d16f     bra     0x2dd2           	BRA	_00473_DS_
                                           _00419_DS_:
                                           ;	.line	696; meter_logger.c	rs232_proto.state = STOP_BIT2_WAIT;
002af4   0e09     movlw   0x9              	MOVLW	0x09
002af6   0105     movlb   0x5              	BANKSEL	_rs232_proto
002af8   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	697; meter_logger.c	break;
002afa   d16b     bra     0x2dd2           	BRA	_00473_DS_
                                           _00420_DS_:
002afc   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	699; meter_logger.c	fifo_put(rs232_proto.data);
002afe   511f     movf    0x1f, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
002b00   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002b02   ecfb     call    0x43f6, 0        	CALL	_fifo_put
002b04   f021
002b06   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002b08   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	700; meter_logger.c	rs232_proto.data = 0;
002b0a   6b1f     clrf    0x1f, 0x1        	CLRF	(_rs232_proto + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	701; meter_logger.c	rs232_proto.data_len = 0;
002b0c   6b20     clrf    0x20, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	702; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
002b0e   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002b10   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	703; meter_logger.c	T0CONbits.TMR0ON = 0;
002b12   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	704; meter_logger.c	INTCONbits.INT0IF = 0;		// dont enter ext int now
002b14   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           ;	.line	705; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int again
002b16   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	708; meter_logger.c	break;
002b18   d15c     bra     0x2dd2           	BRA	_00473_DS_
                                           _00422_DS_:
                                           ;	.line	710; meter_logger.c	switch (rs232_proto.state) {
002b1a   c51d     movff   0x51d, 0         	MOVFF	_rs232_proto, r0x00
002b1c   f000
002b1e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b20   6e01     movwf   0x1, 0           	MOVWF	r0x01
002b22   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002b24   e00c     bz      0x2b3e           	BZ	_00423_DS_
002b26   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b28   0a03     xorlw   0x3              	XORLW	0x03
002b2a   e018     bz      0x2b5c           	BZ	_00426_DS_
002b2c   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b2e   0a06     xorlw   0x6              	XORLW	0x06
002b30   e101     bnz     0x2b34           	BNZ	_00777_DS_
002b32   d053     bra     0x2bda           	BRA	_00430_DS_
                                           _00777_DS_:
002b34   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b36   0a0a     xorlw   0xa              	XORLW	0x0a
002b38   e101     bnz     0x2b3c           	BNZ	_00779_DS_
002b3a   d054     bra     0x2be4           	BRA	_00431_DS_
                                           _00779_DS_:
002b3c   d14a     bra     0x2dd2           	BRA	_00473_DS_
                                           _00423_DS_:
002b3e   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	712; meter_logger.c	if (rs232_proto.data_len == 7) {
002b40   5120     movf    0x20, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
002b42   0a07     xorlw   0x7              	XORLW	0x07
002b44   e001     bz      0x2b48           	BZ	_00781_DS_
002b46   d145     bra     0x2dd2           	BRA	_00473_DS_
                                           _00781_DS_:
                                           ;	.line	713; meter_logger.c	IR_LED_PIN = 1;		// inverted rs232 output on ir, start bit = ir light
002b48   8281     bsf     0x81, 0x1, 0     	BSF	_PORTBbits, 1
                                           ;	.line	714; meter_logger.c	rs232_proto.parity = rs232_proto.data & 1;
002b4a   0e01     movlw   0x1              	MOVLW	0x01
002b4c   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
002b4e   151f     andwf   0x1f, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
002b50   6e00     movwf   0, 0             	MOVWF	r0x00
002b52   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002b54   6f21     movwf   0x21, 0x1        	MOVWF	(_rs232_proto + 4), B
                                           ;	.line	715; meter_logger.c	rs232_proto.state = START_BIT_SENT;
002b56   0e03     movlw   0x3              	MOVLW	0x03
                                           ; removed redundant BANKSEL
002b58   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	717; meter_logger.c	break;
002b5a   d13b     bra     0x2dd2           	BRA	_00473_DS_
                                           _00426_DS_:
                                           ;	.line	719; meter_logger.c	if (rs232_proto.data_len >= 1) {
002b5c   0e01     movlw   0x1              	MOVLW	0x01
002b5e   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002b60   5d20     subwf   0x20, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002b62   e326     bnc     0x2bb0           	BNC	_00428_DS_
                                           ;	.line	720; meter_logger.c	IR_LED_PIN = (rs232_proto.data & 1) == 0;	// inverted rs232 output on ir
002b64   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002b66   151f     andwf   0x1f, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
002b68   6e00     movwf   0, 0             	MOVWF	r0x00
002b6a   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b6c   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
002b6e   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
002b70   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002b72   6a00     clrf    0, 0             	CLRF	r0x00
002b74   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
002b76   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b78   0b01     andlw   0x1              	ANDLW	0x01
002b7a   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
002b7c   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
002b7e   5081     movf    0x81, 0, 0       	MOVF	_PORTBbits, W
002b80   0bfd     andlw   0xfd             	ANDLW	0xfd
002b82   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
002b84   6e81     movwf   0x81, 0          	MOVWF	_PORTBbits
                                           ; removed redundant BANKSEL
                                           ;	.line	721; meter_logger.c	rs232_proto.parity ^= ((rs232_proto.data >> 1) & 1);
002b86   511f     movf    0x1f, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
002b88   0b02     andlw   0x2              	ANDLW	0x02
002b8a   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
002b8c   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002b8e   5121     movf    0x21, 0, 0x1     	MOVF	(_rs232_proto + 4), W, B
002b90   6e01     movwf   0x1, 0           	MOVWF	r0x01
002b92   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002b94   1a00     xorwf   0, 0x1, 0        	XORWF	r0x00, F
002b96   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002b98   6f21     movwf   0x21, 0x1        	MOVWF	(_rs232_proto + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	722; meter_logger.c	rs232_proto.data = rs232_proto.data >> 1;
002b9a   411f     rrncf   0x1f, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002b9c   0b7f     andlw   0x7f             	ANDLW	0x7f
002b9e   6e00     movwf   0, 0             	MOVWF	r0x00
002ba0   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002ba2   6f1f     movwf   0x1f, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	723; meter_logger.c	rs232_proto.data_len--;
002ba4   c520     movff   0x520, 0         	MOVFF	(_rs232_proto + 3), r0x00
002ba6   f000
002ba8   0600     decf    0, 0x1, 0        	DECF	r0x00, F
002baa   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002bac   6f20     movwf   0x20, 0x1        	MOVWF	(_rs232_proto + 3), B
002bae   d111     bra     0x2dd2           	BRA	_00473_DS_
                                           _00428_DS_:
                                           ;	.line	726; meter_logger.c	IR_LED_PIN = (rs232_proto.parity & 1) == 0;		// inverted rs232 output on ir					
002bb0   0e01     movlw   0x1              	MOVLW	0x01
002bb2   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 4)
002bb4   1521     andwf   0x21, 0, 0x1     	ANDWF	(_rs232_proto + 4), W, B
002bb6   6e00     movwf   0, 0             	MOVWF	r0x00
002bb8   5000     movf    0, 0, 0          	MOVF	r0x00, W
002bba   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
002bbc   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
002bbe   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002bc0   6a00     clrf    0, 0             	CLRF	r0x00
002bc2   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
002bc4   5000     movf    0, 0, 0          	MOVF	r0x00, W
002bc6   0b01     andlw   0x1              	ANDLW	0x01
002bc8   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
002bca   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
002bcc   5081     movf    0x81, 0, 0       	MOVF	_PORTBbits, W
002bce   0bfd     andlw   0xfd             	ANDLW	0xfd
002bd0   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
002bd2   6e81     movwf   0x81, 0          	MOVWF	_PORTBbits
                                           ;	.line	727; meter_logger.c	rs232_proto.state = PARITY_BIT_SENT;
002bd4   0e06     movlw   0x6              	MOVLW	0x06
                                           ; removed redundant BANKSEL
002bd6   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	729; meter_logger.c	break;
002bd8   d0fc     bra     0x2dd2           	BRA	_00473_DS_
                                           _00430_DS_:
                                           ;	.line	731; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002bda   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	732; meter_logger.c	rs232_proto.state = STOP_BIT_SENT;
002bdc   0e0a     movlw   0xa              	MOVLW	0x0a
002bde   0105     movlb   0x5              	BANKSEL	_rs232_proto
002be0   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	733; meter_logger.c	break;
002be2   d0f7     bra     0x2dd2           	BRA	_00473_DS_
                                           _00431_DS_:
                                           ;	.line	735; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002be4   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
002be6   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	736; meter_logger.c	rs232_proto.state = INIT_STATE;
002be8   6b1d     clrf    0x1d, 0x1        	CLRF	_rs232_proto, B
                                           ;	.line	737; meter_logger.c	T0CONbits.TMR0ON = 0;							// stop timer 0
002bea   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	740; meter_logger.c	break;
002bec   d0f2     bra     0x2dd2           	BRA	_00473_DS_
                                           _00433_DS_:
                                           ;	.line	742; meter_logger.c	switch (rs232_proto.state) {
002bee   c51d     movff   0x51d, 0         	MOVFF	_rs232_proto, r0x00
002bf0   f000
002bf2   5000     movf    0, 0, 0          	MOVF	r0x00, W
002bf4   0a04     xorlw   0x4              	XORLW	0x04
002bf6   e007     bz      0x2c06           	BZ	_00434_DS_
002bf8   5000     movf    0, 0, 0          	MOVF	r0x00, W
002bfa   0a07     xorlw   0x7              	XORLW	0x07
002bfc   e02c     bz      0x2c56           	BZ	_00440_DS_
002bfe   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c00   0a08     xorlw   0x8              	XORLW	0x08
002c02   e035     bz      0x2c6e           	BZ	_00441_DS_
002c04   d0e6     bra     0x2dd2           	BRA	_00473_DS_
                                           _00434_DS_:
                                           ;	.line	744; meter_logger.c	rs232_proto.data_len++;
002c06   c520     movff   0x520, 0         	MOVFF	(_rs232_proto + 3), r0x00
002c08   f000
002c0a   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002c0c   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c0e   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002c10   6f20     movwf   0x20, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	745; meter_logger.c	if (IR_PIN) {
002c12   a081     btfss   0x81, 0, 0       	BTFSS	_PORTBbits, 0
002c14   d00a     bra     0x2c2a           	BRA	_00436_DS_
                                           ;	.line	747; meter_logger.c	rs232_proto.calculated_parity ^= 0;
002c16   c522     movff   0x522, 0         	MOVFF	(_rs232_proto + 5), r0x00
002c18   f000
002c1a   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002c1c   6f22     movwf   0x22, 0x1        	MOVWF	(_rs232_proto + 5), B
                                           ; removed redundant BANKSEL
                                           ;	.line	748; meter_logger.c	rs232_proto.data >>= 1;
002c1e   411f     rrncf   0x1f, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002c20   0b7f     andlw   0x7f             	ANDLW	0x7f
002c22   6e00     movwf   0, 0             	MOVWF	r0x00
002c24   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002c26   6f1f     movwf   0x1f, 0x1        	MOVWF	(_rs232_proto + 2), B
002c28   d00e     bra     0x2c46           	BRA	_00437_DS_
                                           _00436_DS_:
                                           ;	.line	760; meter_logger.c	rs232_proto.calculated_parity ^= 1;
002c2a   0e01     movlw   0x1              	MOVLW	0x01
002c2c   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 5)
002c2e   1922     xorwf   0x22, 0, 0x1     	XORWF	(_rs232_proto + 5), W, B
002c30   6e00     movwf   0, 0             	MOVWF	r0x00
002c32   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002c34   6f22     movwf   0x22, 0x1        	MOVWF	(_rs232_proto + 5), B
                                           ; removed redundant BANKSEL
                                           ;	.line	761; meter_logger.c	rs232_proto.data >>= 1;
002c36   411f     rrncf   0x1f, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002c38   0b7f     andlw   0x7f             	ANDLW	0x7f
002c3a   6e00     movwf   0, 0             	MOVWF	r0x00
002c3c   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002c3e   6f1f     movwf   0x1f, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	762; meter_logger.c	rs232_proto.data |= 0x40;
002c40   8c00     bsf     0, 0x6, 0        	BSF	r0x00, 6
002c42   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002c44   6f1f     movwf   0x1f, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           _00437_DS_:
                                           ;	.line	782; meter_logger.c	if (rs232_proto.data_len >= 7) {
002c46   0e07     movlw   0x7              	MOVLW	0x07
002c48   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002c4a   5d20     subwf   0x20, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002c4c   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
002c4e   d0c1     bra     0x2dd2           	BRA	_00473_DS_
                                           ;	.line	784; meter_logger.c	rs232_proto.state = PARITY_BIT_WAIT;
002c50   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
002c52   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	786; meter_logger.c	break;
002c54   d0be     bra     0x2dd2           	BRA	_00473_DS_
                                           _00440_DS_:
                                           ;	.line	788; meter_logger.c	rs232_proto.parity = IR_PIN ? 0 : 1;
002c56   a081     btfss   0x81, 0, 0       	BTFSS	_PORTBbits, 0
002c58   d002     bra     0x2c5e           	BRA	_00496_DS_
002c5a   6a00     clrf    0, 0             	CLRF	r0x00
002c5c   d002     bra     0x2c62           	BRA	_00497_DS_
                                           _00496_DS_:
002c5e   0e01     movlw   0x1              	MOVLW	0x01
002c60   6e00     movwf   0, 0             	MOVWF	r0x00
                                           _00497_DS_:
002c62   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c64   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 4)
002c66   6f21     movwf   0x21, 0x1        	MOVWF	(_rs232_proto + 4), B
                                           ;	.line	789; meter_logger.c	rs232_proto.state = STOP_BIT_WAIT;
002c68   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
002c6a   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	790; meter_logger.c	break;
002c6c   d0b2     bra     0x2dd2           	BRA	_00473_DS_
                                           _00441_DS_:
002c6e   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 5)
                                           ;	.line	792; meter_logger.c	if (rs232_proto.calculated_parity == rs232_proto.parity) {
002c70   5122     movf    0x22, 0, 0x1     	MOVF	(_rs232_proto + 5), W, B
                                           ; removed redundant BANKSEL
002c72   1921     xorwf   0x21, 0, 0x1     	XORWF	(_rs232_proto + 4), W, B
002c74   e107     bnz     0x2c84           	BNZ	_00443_DS_
                                           _00797_DS_:
002c76   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	793; meter_logger.c	fifo_put(rs232_proto.data);
002c78   511f     movf    0x1f, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
002c7a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002c7c   ecfb     call    0x43f6, 0        	CALL	_fifo_put
002c7e   f021
002c80   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002c82   d006     bra     0x2c90           	BRA	_00444_DS_
                                           _00443_DS_:
002c84   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	798; meter_logger.c	fifo_put(rs232_proto.data);
002c86   511f     movf    0x1f, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
002c88   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002c8a   ecfb     call    0x43f6, 0        	CALL	_fifo_put
002c8c   f021
002c8e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00444_DS_:
002c90   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	800; meter_logger.c	rs232_proto.data = 0;
002c92   6b1f     clrf    0x1f, 0x1        	CLRF	(_rs232_proto + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	801; meter_logger.c	rs232_proto.data_len = 0;
002c94   6b20     clrf    0x20, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	802; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
002c96   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002c98   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	803; meter_logger.c	T0CONbits.TMR0ON = 0;
002c9a   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	804; meter_logger.c	INTCONbits.INT0IF = 0;		// dont enter ext int now
002c9c   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           ;	.line	805; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int again
002c9e   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	808; meter_logger.c	break;
002ca0   d098     bra     0x2dd2           	BRA	_00473_DS_
                                           _00446_DS_:
                                           ;	.line	810; meter_logger.c	switch (fsk_proto.state) {
002ca2   c500     movff   0x500, 0         	MOVFF	_fsk_proto, r0x00
002ca4   f000
002ca6   5000     movf    0, 0, 0          	MOVF	r0x00, W
002ca8   0a04     xorlw   0x4              	XORLW	0x04
002caa   e004     bz      0x2cb4           	BZ	_00447_DS_
002cac   5000     movf    0, 0, 0          	MOVF	r0x00, W
002cae   0a08     xorlw   0x8              	XORLW	0x08
002cb0   e02f     bz      0x2d10           	BZ	_00455_DS_
002cb2   d08f     bra     0x2dd2           	BRA	_00473_DS_
                                           _00447_DS_:
                                           ;	.line	812; meter_logger.c	fsk_proto.data_len++;						
002cb4   c50d     movff   0x50d, 0         	MOVFF	(_fsk_proto + 13), r0x00
002cb6   f000
002cb8   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002cba   5000     movf    0, 0, 0          	MOVF	r0x00, W
002cbc   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
002cbe   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
                                           ;	.line	813; meter_logger.c	if (fsk_proto.data_len <= 8) {
002cc0   0e09     movlw   0x9              	MOVLW	0x09
002cc2   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002cc4   e221     bc      0x2d08           	BC	_00453_DS_
                                           ;	.line	814; meter_logger.c	if ((fsk_proto.diff > 340) && (fsk_proto.diff < 476)) {
002cc6   c501     movff   0x501, 0         	MOVFF	(_fsk_proto + 1), r0x00
002cc8   f000
002cca   c502     movff   0x502, 0x1       	MOVFF	(_fsk_proto + 2), r0x01
002ccc   f001
002cce   0e01     movlw   0x1              	MOVLW	0x01
002cd0   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002cd2   e102     bnz     0x2cd8           	BNZ	_00803_DS_
002cd4   0e55     movlw   0x55             	MOVLW	0x55
002cd6   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00803_DS_:
002cd8   e30d     bnc     0x2cf4           	BNC	_00449_DS_
002cda   0e01     movlw   0x1              	MOVLW	0x01
002cdc   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002cde   e102     bnz     0x2ce4           	BNZ	_00804_DS_
002ce0   0edc     movlw   0xdc             	MOVLW	0xdc
002ce2   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00804_DS_:
002ce4   e207     bc      0x2cf4           	BC	_00449_DS_
002ce6   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	817; meter_logger.c	fsk_proto.data >>= 1;
002ce8   410c     rrncf   0xc, 0, 0x1      	RRNCF	(_fsk_proto + 12), W, B
002cea   0b7f     andlw   0x7f             	ANDLW	0x7f
002cec   6e00     movwf   0, 0             	MOVWF	r0x00
002cee   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002cf0   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
002cf2   d06f     bra     0x2dd2           	BRA	_00473_DS_
                                           _00449_DS_:
002cf4   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	822; meter_logger.c	fsk_proto.data >>= 1;
002cf6   410c     rrncf   0xc, 0, 0x1      	RRNCF	(_fsk_proto + 12), W, B
002cf8   0b7f     andlw   0x7f             	ANDLW	0x7f
002cfa   6e00     movwf   0, 0             	MOVWF	r0x00
002cfc   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002cfe   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
                                           ;	.line	823; meter_logger.c	fsk_proto.data |= 0x80;
002d00   8e00     bsf     0, 0x7, 0        	BSF	r0x00, 7
002d02   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002d04   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
002d06   d065     bra     0x2dd2           	BRA	_00473_DS_
                                           _00453_DS_:
                                           ;	.line	831; meter_logger.c	fsk_proto.state = STOP_BIT_WAIT;
002d08   0e08     movlw   0x8              	MOVLW	0x08
002d0a   0105     movlb   0x5              	BANKSEL	_fsk_proto
002d0c   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	833; meter_logger.c	break;
002d0e   d061     bra     0x2dd2           	BRA	_00473_DS_
                                           _00455_DS_:
002d10   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	836; meter_logger.c	fifo_put(fsk_proto.data);
002d12   510c     movf    0xc, 0, 0x1      	MOVF	(_fsk_proto + 12), W, B
002d14   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002d16   ecfb     call    0x43f6, 0        	CALL	_fifo_put
002d18   f021
002d1a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002d1c   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	837; meter_logger.c	fsk_proto.data = 0;
002d1e   6b0c     clrf    0xc, 0x1         	CLRF	(_fsk_proto + 12), B
                                           ;	.line	838; meter_logger.c	fsk_proto.state = START_BIT_WAIT;
002d20   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002d22   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	840; meter_logger.c	INTCONbits.TMR0IE = 0;						
002d24   9af2     bcf     0xf2, 0x5, 0     	BCF	_INTCONbits, 5
                                           ;	.line	843; meter_logger.c	break;
002d26   d055     bra     0x2dd2           	BRA	_00473_DS_
                                           _00457_DS_:
                                           ;	.line	845; meter_logger.c	switch (fsk_proto.state) {
002d28   c500     movff   0x500, 0         	MOVFF	_fsk_proto, r0x00
002d2a   f000
002d2c   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d2e   6e01     movwf   0x1, 0           	MOVWF	r0x01
002d30   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002d32   e00f     bz      0x2d52           	BZ	_00458_DS_
002d34   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d36   0a01     xorlw   0x1              	XORLW	0x01
002d38   e015     bz      0x2d64           	BZ	_00461_DS_
002d3a   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d3c   0a03     xorlw   0x3              	XORLW	0x03
002d3e   e019     bz      0x2d72           	BZ	_00462_DS_
002d40   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d42   0a05     xorlw   0x5              	XORLW	0x05
002d44   e101     bnz     0x2d48           	BNZ	_00813_DS_
002d46   d039     bra     0x2dba           	BRA	_00470_DS_
                                           _00813_DS_:
002d48   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d4a   0a0a     xorlw   0xa              	XORLW	0x0a
002d4c   e101     bnz     0x2d50           	BNZ	_00815_DS_
002d4e   d03c     bra     0x2dc8           	BRA	_00471_DS_
                                           _00815_DS_:
002d50   d040     bra     0x2dd2           	BRA	_00473_DS_
                                           _00458_DS_:
002d52   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	848; meter_logger.c	if (fsk_proto.data_len == 8) {
002d54   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002d56   0a08     xorlw   0x8              	XORLW	0x08
002d58   e103     bnz     0x2d60           	BNZ	_00460_DS_
                                           ;	.line	849; meter_logger.c	fsk_proto.state = IDLE;
002d5a   0e01     movlw   0x1              	MOVLW	0x01
002d5c   0105     movlb   0x5              	BANKSEL	_fsk_proto
002d5e   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           _00460_DS_:
                                           ;	.line	852; meter_logger.c	DEBUG_PIN = 0;
002d60   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	854; meter_logger.c	break;
002d62   d037     bra     0x2dd2           	BRA	_00473_DS_
                                           _00461_DS_:
                                           ;	.line	856; meter_logger.c	send_fsk_low();
002d64   ec61     call    0x1ac2, 0        	CALL	_send_fsk_low
002d66   f00d
                                           ;	.line	857; meter_logger.c	fsk_proto.state = START_BIT_SENT;
002d68   0e03     movlw   0x3              	MOVLW	0x03
002d6a   0105     movlb   0x5              	BANKSEL	_fsk_proto
002d6c   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	859; meter_logger.c	DEBUG_PIN = 1;
002d6e   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
                                           ;	.line	861; meter_logger.c	break;
002d70   d030     bra     0x2dd2           	BRA	_00473_DS_
                                           _00462_DS_:
                                           ;	.line	863; meter_logger.c	if (fsk_proto.data_len--) {
002d72   c50d     movff   0x50d, 0         	MOVFF	(_fsk_proto + 13), r0x00
002d74   f000
002d76   0400     decf    0, 0, 0          	DECF	r0x00, W
002d78   6e01     movwf   0x1, 0           	MOVWF	r0x01
002d7a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002d7c   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
002d7e   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
002d80   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d82   e015     bz      0x2dae           	BZ	_00467_DS_
                                           ;	.line	864; meter_logger.c	if (fsk_proto.data & (0x80 >> fsk_proto.data_len)) {
002d84   0e80     movlw   0x80             	MOVLW	0x80
002d86   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002d88   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002d8a   e005     bz      0x2d96           	BZ	_00818_DS_
002d8c   6ce8     negf    0xe8, 0          	NEGF	WREG
002d8e   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00819_DS_:
002d90   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
002d92   0f01     addlw   0x1              	ADDLW	0x01
002d94   e3fd     bnc     0x2d90           	BNC	_00819_DS_
                                           _00818_DS_:
002d96   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
002d98   510c     movf    0xc, 0, 0x1      	MOVF	(_fsk_proto + 12), W, B
002d9a   1600     andwf   0, 0x1, 0        	ANDWF	r0x00, F
002d9c   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d9e   e004     bz      0x2da8           	BZ	_00464_DS_
                                           ;	.line	865; meter_logger.c	send_fsk_high();
002da0   ec81     call    0xf02, 0         	CALL	_send_fsk_high
002da2   f007
                                           ;	.line	867; meter_logger.c	DEBUG_PIN = 0;
002da4   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
002da6   d003     bra     0x2dae           	BRA	_00467_DS_
                                           _00464_DS_:
                                           ;	.line	871; meter_logger.c	send_fsk_low();
002da8   ec61     call    0x1ac2, 0        	CALL	_send_fsk_low
002daa   f00d
                                           ;	.line	873; meter_logger.c	DEBUG_PIN = 1;
002dac   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
                                           _00467_DS_:
002dae   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	877; meter_logger.c	if (fsk_proto.data_len == 0) {
002db0   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002db2   e10f     bnz     0x2dd2           	BNZ	_00473_DS_
                                           ;	.line	878; meter_logger.c	fsk_proto.state = DATA_SENT;
002db4   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
002db6   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	880; meter_logger.c	break;
002db8   d00c     bra     0x2dd2           	BRA	_00473_DS_
                                           _00470_DS_:
                                           ;	.line	882; meter_logger.c	send_fsk_high();
002dba   ec81     call    0xf02, 0         	CALL	_send_fsk_high
002dbc   f007
                                           ;	.line	883; meter_logger.c	fsk_proto.state = STOP_BIT_SENT;
002dbe   0e0a     movlw   0xa              	MOVLW	0x0a
002dc0   0105     movlb   0x5              	BANKSEL	_fsk_proto
002dc2   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	885; meter_logger.c	DEBUG_PIN = 0;
002dc4   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	887; meter_logger.c	break;
002dc6   d005     bra     0x2dd2           	BRA	_00473_DS_
                                           _00471_DS_:
                                           ;	.line	889; meter_logger.c	send_fsk_high();
002dc8   ec81     call    0xf02, 0         	CALL	_send_fsk_high
002dca   f007
002dcc   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	890; meter_logger.c	fsk_proto.state = INIT_STATE;
002dce   6b00     clrf    0, 0x1           	CLRF	_fsk_proto, B
                                           ;	.line	892; meter_logger.c	DEBUG_PIN = 0;
002dd0   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           _00473_DS_:
                                           ;	.line	899; meter_logger.c	INTCONbits.TMR0IF = 0;
002dd2   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           _00475_DS_:
                                           ;	.line	902; meter_logger.c	if (PIR2bits.CMIF && PIE2bits.CMIE) {
002dd4   aca1     btfss   0xa1, 0x6, 0     	BTFSS	_PIR2bits, 6
002dd6   d077     bra     0x2ec6           	BRA	_00494_DS_
002dd8   aca0     btfss   0xa0, 0x6, 0     	BTFSS	_PIE2bits, 6
002dda   d075     bra     0x2ec6           	BRA	_00494_DS_
                                           ;	.line	904; meter_logger.c	if (CMCONbits.C1OUT) {		// rising edge
002ddc   acb4     btfss   0xb4, 0x6, 0     	BTFSS	_CMCONbits, 6
002dde   d071     bra     0x2ec2           	BRA	_00489_DS_
                                           ;	.line	905; meter_logger.c	timer_0 = (unsigned int)(TMR0L) | ((unsigned int)(TMR0H) << 8);
002de0   cfd6     movff   0xfd6, 0         	MOVFF	_TMR0L, r0x00
002de2   f000
002de4   6a01     clrf    0x1, 0           	CLRF	r0x01
002de6   cfd7     movff   0xfd7, 0x2       	MOVFF	_TMR0H, r0x02
002de8   f002
002dea   6a03     clrf    0x3, 0           	CLRF	r0x03
002dec   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002dee   6e05     movwf   0x5, 0           	MOVWF	r0x05
002df0   6a04     clrf    0x4, 0           	CLRF	r0x04
002df2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002df4   1000     iorwf   0, 0, 0          	IORWF	r0x00, W
002df6   0105     movlb   0x5              	BANKSEL	_timer_0
002df8   6f47     movwf   0x47, 0x1        	MOVWF	_timer_0, B
002dfa   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002dfc   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
                                           ; removed redundant BANKSEL
002dfe   6f48     movwf   0x48, 0x1        	MOVWF	(_timer_0 + 1), B
                                           ;	.line	910; meter_logger.c	DEBUG_PIN = 1;
002e00   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
002e02   0105     movlb   0x5              	BANKSEL	_last_timer_0
                                           ;	.line	912; meter_logger.c	fsk_proto.diff = timer_0 - last_timer_0;
002e04   514b     movf    0x4b, 0, 0x1     	MOVF	_last_timer_0, W, B
002e06   0105     movlb   0x5              	BANKSEL	_timer_0
002e08   5d47     subwf   0x47, 0, 0x1     	SUBWF	_timer_0, W, B
002e0a   6e00     movwf   0, 0             	MOVWF	r0x00
002e0c   0105     movlb   0x5              	BANKSEL	(_last_timer_0 + 1)
002e0e   514c     movf    0x4c, 0, 0x1     	MOVF	(_last_timer_0 + 1), W, B
002e10   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002e12   5948     subwfb  0x48, 0, 0x1     	SUBWFB	(_timer_0 + 1), W, B
002e14   6e01     movwf   0x1, 0           	MOVWF	r0x01
002e16   5000     movf    0, 0, 0          	MOVF	r0x00, W
002e18   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
002e1a   6f01     movwf   0x1, 0x1         	MOVWF	(_fsk_proto + 1), B
002e1c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002e1e   6f02     movwf   0x2, 0x1         	MOVWF	(_fsk_proto + 2), B
                                           ;	.line	913; meter_logger.c	last_timer_0 = timer_0;
002e20   c547     movff   0x547, 0x54b     	MOVFF	_timer_0, _last_timer_0
002e22   f54b
002e24   c548     movff   0x548, 0x54c     	MOVFF	(_timer_0 + 1), (_last_timer_0 + 1)
002e26   f54c
                                           ;	.line	915; meter_logger.c	if ((fsk_proto.diff > 340) && (fsk_proto.diff < 476)) {
002e28   c501     movff   0x501, 0         	MOVFF	(_fsk_proto + 1), r0x00
002e2a   f000
002e2c   c502     movff   0x502, 0x1       	MOVFF	(_fsk_proto + 2), r0x01
002e2e   f001
002e30   0e01     movlw   0x1              	MOVLW	0x01
002e32   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002e34   e102     bnz     0x2e3a           	BNZ	_00821_DS_
002e36   0e55     movlw   0x55             	MOVLW	0x55
002e38   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00821_DS_:
002e3a   e32d     bnc     0x2e96           	BNC	_00485_DS_
002e3c   0e01     movlw   0x1              	MOVLW	0x01
002e3e   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002e40   e102     bnz     0x2e46           	BNZ	_00822_DS_
002e42   0edc     movlw   0xdc             	MOVLW	0xdc
002e44   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00822_DS_:
002e46   e227     bc      0x2e96           	BC	_00485_DS_
002e48   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 5)
                                           ;	.line	916; meter_logger.c	fsk_proto.low_count += fsk_proto.diff;
002e4a   5105     movf    0x5, 0, 0x1      	MOVF	(_fsk_proto + 5), W, B
002e4c   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
002e4e   5106     movf    0x6, 0, 0x1      	MOVF	(_fsk_proto + 6), W, B
002e50   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
002e52   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002e54   6f05     movwf   0x5, 0x1         	MOVWF	(_fsk_proto + 5), B
002e56   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002e58   6f06     movwf   0x6, 0x1         	MOVWF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	917; meter_logger.c	if (fsk_proto.state == START_BIT_WAIT) {
002e5a   5100     movf    0, 0, 0x1        	MOVF	_fsk_proto, W, B
002e5c   0a02     xorlw   0x2              	XORLW	0x02
002e5e   e132     bnz     0x2ec4           	BNZ	_00490_DS_
                                           ;	.line	918; meter_logger.c	if (fsk_proto.low_count >= 800) {								// start bit received
002e60   0e03     movlw   0x3              	MOVLW	0x03
002e62   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 6)
002e64   5d06     subwf   0x6, 0, 0x1      	SUBWF	(_fsk_proto + 6), W, B
002e66   e102     bnz     0x2e6c           	BNZ	_00825_DS_
002e68   0e20     movlw   0x20             	MOVLW	0x20
                                           ; removed redundant BANKSEL
002e6a   5d05     subwf   0x5, 0, 0x1      	SUBWF	(_fsk_proto + 5), W, B
                                           _00825_DS_:
002e6c   e32b     bnc     0x2ec4           	BNC	_00490_DS_
002e6e   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	920; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
002e70   514a     movf    0x4a, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
002e72   6e00     movwf   0, 0             	MOVWF	r0x00
002e74   6a01     clrf    0x1, 0           	CLRF	r0x01
002e76   5000     movf    0, 0, 0          	MOVF	r0x00, W
002e78   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	921; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
002e7a   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
002e7c   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
002e7e   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 5)
                                           ;	.line	922; meter_logger.c	fsk_proto.low_count = 0;
002e80   6b05     clrf    0x5, 0x1         	CLRF	(_fsk_proto + 5), B
                                           ; removed redundant BANKSEL
002e82   6b06     clrf    0x6, 0x1         	CLRF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	923; meter_logger.c	fsk_proto.high_count = 0;
002e84   6b07     clrf    0x7, 0x1         	CLRF	(_fsk_proto + 7), B
                                           ; removed redundant BANKSEL
002e86   6b08     clrf    0x8, 0x1         	CLRF	(_fsk_proto + 8), B
                                           ; removed redundant BANKSEL
                                           ;	.line	925; meter_logger.c	fsk_proto.data_len = 0;
002e88   6b0d     clrf    0xd, 0x1         	CLRF	(_fsk_proto + 13), B
                                           ; removed redundant BANKSEL
                                           ;	.line	926; meter_logger.c	fsk_proto.data = 0;
002e8a   6b0c     clrf    0xc, 0x1         	CLRF	(_fsk_proto + 12), B
                                           ;	.line	927; meter_logger.c	fsk_proto.state = DATA_WAIT;
002e8c   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
002e8e   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	928; meter_logger.c	INTCONbits.TMR0IF = 0;		// clear flag so it dont enter isr now
002e90   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	929; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
002e92   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
002e94   d017     bra     0x2ec4           	BRA	_00490_DS_
                                           _00485_DS_:
002e96   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	935; meter_logger.c	if (fsk_proto.state == START_BIT_WAIT) {
002e98   5100     movf    0, 0, 0x1        	MOVF	_fsk_proto, W, B
002e9a   0a02     xorlw   0x2              	XORLW	0x02
002e9c   e106     bnz     0x2eaa           	BNZ	_00482_DS_
                                           _00827_DS_:
002e9e   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 5)
                                           ;	.line	936; meter_logger.c	fsk_proto.low_count = 0;
002ea0   6b05     clrf    0x5, 0x1         	CLRF	(_fsk_proto + 5), B
                                           ; removed redundant BANKSEL
002ea2   6b06     clrf    0x6, 0x1         	CLRF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	937; meter_logger.c	fsk_proto.high_count = 0;
002ea4   6b07     clrf    0x7, 0x1         	CLRF	(_fsk_proto + 7), B
                                           ; removed redundant BANKSEL
002ea6   6b08     clrf    0x8, 0x1         	CLRF	(_fsk_proto + 8), B
002ea8   d00d     bra     0x2ec4           	BRA	_00490_DS_
                                           _00482_DS_:
002eaa   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
                                           ;	.line	940; meter_logger.c	fsk_proto.high_count += fsk_proto.diff;
002eac   5101     movf    0x1, 0, 0x1      	MOVF	(_fsk_proto + 1), W, B
                                           ; removed redundant BANKSEL
002eae   2507     addwf   0x7, 0, 0x1      	ADDWF	(_fsk_proto + 7), W, B
002eb0   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002eb2   5102     movf    0x2, 0, 0x1      	MOVF	(_fsk_proto + 2), W, B
                                           ; removed redundant BANKSEL
002eb4   2108     addwfc  0x8, 0, 0x1      	ADDWFC	(_fsk_proto + 8), W, B
002eb6   6e01     movwf   0x1, 0           	MOVWF	r0x01
002eb8   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002eba   6f07     movwf   0x7, 0x1         	MOVWF	(_fsk_proto + 7), B
002ebc   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002ebe   6f08     movwf   0x8, 0x1         	MOVWF	(_fsk_proto + 8), B
002ec0   d001     bra     0x2ec4           	BRA	_00490_DS_
                                           _00489_DS_:
                                           ;	.line	946; meter_logger.c	DEBUG_PIN = 0;
002ec2   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           _00490_DS_:
                                           ;	.line	950; meter_logger.c	PIR2bits.CMIF = 0;
002ec4   9ca1     bcf     0xa1, 0x6, 0     	BCF	_PIR2bits, 6
                                           _00494_DS_:
002ec6   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002ec8   f005
002eca   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002ecc   f004
002ece   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002ed0   f003
002ed2   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002ed4   f002
002ed6   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002ed8   f001
002eda   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002edc   f000
002ede   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002ee0   ffd9
002ee2   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
002ee4   fffb
002ee6   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
002ee8   fffa
002eea   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
002eec   ffea
002eee   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
002ef0   ffe9
002ef2   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
002ef4   fff4
002ef6   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
002ef8   fff3
002efa   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002efc   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
002efe   ffe0
002f00   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
002f02   ffd8
002f04   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           __str_0:
002f06   7250     btg     0x50, 0x1, 0     	DB	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x3a, 0x20, 0x70
002f08   636f     cpfseq  0x6f, 0x1        
002f0a   7365     btg     0x65, 0x1, 0x1   
002f0c   6f73     movwf   0x73, 0x1        
002f0e   3a72     swapf   0x72, 0x1, 0     
002f10   7020     btg     0x20, 0, 0       
002f12   6369     cpfseq  0x69, 0x1        	DB	0x69, 0x63, 0x31, 0x38, 0x66, 0x32, 0x35, 0x35, 0x30, 0x0a, 0x0d, 0x00
002f14   3831     swapf   0x31, 0, 0       
002f16   3266     rrcf    0x66, 0x1, 0     
002f18   3535     rlcf    0x35, 0, 0x1     
002f1a   0a30     xorlw   0x30             
002f1c   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           __str_1:
002f1e   7250     btg     0x50, 0x1, 0     	DB	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x3a, 0x20, 0x70
002f20   636f     cpfseq  0x6f, 0x1        
002f22   7365     btg     0x65, 0x1, 0x1   
002f24   6f73     movwf   0x73, 0x1        
002f26   3a72     swapf   0x72, 0x1, 0     
002f28   7020     btg     0x20, 0, 0       
002f2a   6369     cpfseq  0x69, 0x1        	DB	0x69, 0x63, 0x31, 0x38, 0x66, 0x32, 0x35, 0x35, 0x33, 0x0a, 0x0d, 0x00
002f2c   3831     swapf   0x31, 0, 0       
002f2e   3266     rrcf    0x66, 0x1, 0     
002f30   3535     rlcf    0x35, 0, 0x1     
002f32   0a33     xorlw   0x33             
002f34   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           __str_2:
002f36   7250     btg     0x50, 0x1, 0     	DB	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x3a, 0x20, 0x75
002f38   636f     cpfseq  0x6f, 0x1        
002f3a   7365     btg     0x65, 0x1, 0x1   
002f3c   6f73     movwf   0x73, 0x1        
002f3e   3a72     swapf   0x72, 0x1, 0     
002f40   7520     btg     0x20, 0x2, 0x1   
002f42   736e     btg     0x6e, 0x1, 0x1   	DB	0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x2c, 0x20
002f44   7075     btg     0x75, 0, 0       
002f46   6f70     movwf   0x70, 0x1        
002f48   7472     btg     0x72, 0x2, 0     
002f4a   6465     cpfsgt  0x65, 0          
002f4c   202c     addwfc  0x2c, 0, 0       
002f4e   6564     cpfsgt  0x64, 0x1        	DB	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x69, 0x64, 0x3a, 0x20, 0x30
002f50   6976     setf    0x76, 0x1        
002f52   6563     cpfsgt  0x63, 0x1        
002f54   6920     setf    0x20, 0x1        
002f56   3a64     swapf   0x64, 0x1, 0     
002f58   3020     rrcf    0x20, 0, 0       
002f5a   2578     addwf   0x78, 0, 0x1     	DB	0x78, 0x25, 0x30, 0x34, 0x78, 0x0a, 0x0d, 0x00
002f5c   3430     rlcf    0x30, 0, 0       
002f5e   0a78     xorlw   0x78             
002f60   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           __str_3:
002f62   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x70, 0x72, 0x69, 0x6e
002f64   7270     btg     0x70, 0x1, 0     
002f66   7365     btg     0x65, 0x1, 0x1   
002f68   2073     addwfc  0x73, 0, 0       
002f6a   7270     btg     0x70, 0x1, 0     
002f6c   6e69     movwf   0x69, 0          
002f6e   2074     addwfc  0x74, 0, 0       	DB	0x74, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x0a, 0x0d
002f70   6e6f     movwf   0x6f, 0          
002f72   7420     btg     0x20, 0x2, 0     
002f74   7365     btg     0x65, 0x1, 0x1   
002f76   6f74     movwf   0x74, 0x1        
002f78   0d0a     mullw   0xa              
002f7a   0000     nop                      	DB	0x00
                                           ; ; Starting pCode block
                                           __str_4:
002f7c   2d3c     decfsz  0x3c, 0, 0x1     	DB	0x3c, 0x2d, 0x20, 0x00
002f7e   0020     dw      0x20             
                                           ; ; Starting pCode block
                                           __str_5:
002f80   6425     cpfsgt  0x25, 0          	DB	0x25, 0x64, 0x20, 0x00
002f82   0020     dw      0x20             
                                           ; ; Starting pCode block
                                           __str_6:
002f84   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x00
002f86   0000     nop                      
                                           ; ; Starting pCode block
                                           __str_7:
002f88   3e2d     incfsz  0x2d, 0x1, 0     	DB	0x2d, 0x3e, 0x20, 0x00
002f8a   0020     dw      0x20             
                                           ; ; Starting pCode block
                                           __str_8:
002f8c   6142     cpfslt  0x42, 0x1        	DB	0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x3a, 0x20, 0x25, 0x64, 0x6d
002f8e   7474     btg     0x74, 0x2, 0     
002f90   7265     btg     0x65, 0x1, 0     
002f92   3a79     swapf   0x79, 0x1, 0     
002f94   2520     addwf   0x20, 0, 0x1     
002f96   6d64     negf    0x64, 0x1        
002f98   0a56     xorlw   0x56             	DB	0x56, 0x0a, 0x0d, 0x00
002f9a   000d     tblwt   *+               
                                           
                                           
                                           ; Statistics:
                                           ; code size:	16224 (0x3f60) bytes (12.38%)
                                           ;           	 8112 (0x1fb0) words
                                           ; udata size:	 1199 (0x04af) bytes (66.91%)
                                           ; access size:	   14 (0x000e) bytes
                                           
                                           
                                           	end
