gplink-1.2.0 #980 (Oct 25 2013)
Copyright (c) 1998-2013 gputils project
Listing File Generated: 7-10-2014  02:46:16
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.4.0 #8981 (Jul  1 2014) (Mac OS X x86_64)
                                           ; This file was generated Thu Jul 10 02:46:16 2014
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f2550
                                           	radix	dec
                                           	CONFIG	PLLDIV=2
                                           	CONFIG	CPUDIV=OSC1_PLL2
                                           	CONFIG	USBDIV=1
                                           	CONFIG	FOSC=INTOSC_XT
                                           	CONFIG	FCMEN=OFF
                                           	CONFIG	IESO=OFF
                                           	CONFIG	PWRT=OFF
                                           	CONFIG	BOR=OFF
                                           	CONFIG	BORV=3
                                           	CONFIG	VREGEN=OFF
                                           	CONFIG	WDT=OFF
                                           	CONFIG	WDTPS=32768
                                           	CONFIG	CCP2MX=ON
                                           	CONFIG	PBADEN=OFF
                                           	CONFIG	LPT1OSC=OFF
                                           	CONFIG	MCLRE=ON
                                           	CONFIG	STVREN=ON
                                           	CONFIG	LVP=ON
                                           	CONFIG	XINST=OFF
                                           	CONFIG	CP0=OFF
                                           	CONFIG	CP1=OFF
                                           	CONFIG	CP2=OFF
                                           	CONFIG	CP3=OFF
                                           	CONFIG	CPB=OFF
                                           	CONFIG	CPD=OFF
                                           	CONFIG	WRT0=OFF
                                           	CONFIG	WRT1=OFF
                                           	CONFIG	WRT2=OFF
                                           	CONFIG	WRT3=OFF
                                           	CONFIG	WRTC=OFF
                                           	CONFIG	WRTB=OFF
                                           	CONFIG	WRTD=OFF
                                           	CONFIG	EBTR0=OFF
                                           	CONFIG	EBTR1=OFF
                                           	CONFIG	EBTR2=OFF
                                           	CONFIG	EBTR3=OFF
                                           	CONFIG	EBTRB=OFF
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_c
                                           	global	_sleep_ms
                                           	global	_init_system
                                           	global	_get_dev_id
                                           	global	_my_usart_open
                                           	global	_reverse
                                           	global	_testo_valid_err_corr
                                           	global	_testo_ir_enable
                                           	global	_testo_ir_disable
                                           	global	_rs232_8n2_tx_enable
                                           	global	_rs232_8n2_tx_disable
                                           	global	_rs232_8n2_rx_enable
                                           	global	_rs232_8n2_rx_disable
                                           	global	_rs232_8n2_tx_byte
                                           	global	_rs232_7e1_tx_enable
                                           	global	_rs232_7e1_tx_disable
                                           	global	_rs232_7e1_rx_enable
                                           	global	_rs232_7e1_rx_disable
                                           	global	_rs232_7e1_tx_byte
                                           	global	_fsk_tx_enable
                                           	global	_fsk_tx_disable
                                           	global	_fsk_rx_enable
                                           	global	_fsk_rx_disable
                                           	global	_send_fsk_high
                                           	global	_send_fsk_low
                                           	global	_fsk_tx_byte
                                           	global	_fifo_in_use
                                           	global	_fifo_put
                                           	global	_fifo_get
                                           	global	_fifo_snoop
                                           	global	_get_battery_level
                                           	global	_flash_led
                                           	global	__debug
                                           	global	__debug2
                                           	global	_timer_0
                                           	global	_last_timer_0
                                           	global	_timer_1_ms
                                           	global	_timer0_reload
                                           	global	_debug_buffer
                                           	global	_fifo_head
                                           	global	_fifo_tail
                                           	global	_fifo_buffer_0
                                           	global	_fifo_buffer_1
                                           	global	_fifo_buffer_2
                                           	global	_fifo_buffer_3
                                           	global	_codec_type
                                           	global	_led_flash
                                           	global	_testo_ir_proto
                                           	global	_rs232_proto
                                           	global	_fsk_proto
                                           	global	_main
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrput1
                                           	extern	_UFRMLbits
                                           	extern	_UFRMHbits
                                           	extern	_UIRbits
                                           	extern	_UIEbits
                                           	extern	_UEIRbits
                                           	extern	_UEIEbits
                                           	extern	_USTATbits
                                           	extern	_UCONbits
                                           	extern	_UADDRbits
                                           	extern	_UCFGbits
                                           	extern	_UEP0bits
                                           	extern	_UEP1bits
                                           	extern	_UEP2bits
                                           	extern	_UEP3bits
                                           	extern	_UEP4bits
                                           	extern	_UEP5bits
                                           	extern	_UEP6bits
                                           	extern	_UEP7bits
                                           	extern	_UEP8bits
                                           	extern	_UEP9bits
                                           	extern	_UEP10bits
                                           	extern	_UEP11bits
                                           	extern	_UEP12bits
                                           	extern	_UEP13bits
                                           	extern	_UEP14bits
                                           	extern	_UEP15bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_EECON1bits
                                           	extern	_RCSTAbits
                                           	extern	_TXSTAbits
                                           	extern	_T3CONbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_CCP1ASbits
                                           	extern	_ECCP1ASbits
                                           	extern	_CCP1DELbits
                                           	extern	_ECCP1DELbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCTLbits
                                           	extern	_CCP2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_UFRM
                                           	extern	_UFRML
                                           	extern	_UFRMH
                                           	extern	_UIR
                                           	extern	_UIE
                                           	extern	_UEIR
                                           	extern	_UEIE
                                           	extern	_USTAT
                                           	extern	_UCON
                                           	extern	_UADDR
                                           	extern	_UCFG
                                           	extern	_UEP0
                                           	extern	_UEP1
                                           	extern	_UEP2
                                           	extern	_UEP3
                                           	extern	_UEP4
                                           	extern	_UEP5
                                           	extern	_UEP6
                                           	extern	_UEP7
                                           	extern	_UEP8
                                           	extern	_UEP9
                                           	extern	_UEP10
                                           	extern	_UEP11
                                           	extern	_UEP12
                                           	extern	_UEP13
                                           	extern	_UEP14
                                           	extern	_UEP15
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_OSCTUNE
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_RCSTA
                                           	extern	_TXSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_CCP1AS
                                           	extern	_ECCP1AS
                                           	extern	_CCP1DEL
                                           	extern	_ECCP1DEL
                                           	extern	_BAUDCON
                                           	extern	_BAUDCTL
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_sprintf
                                           	extern	_usart_drdy
                                           	extern	_usart_getc
                                           	extern	_usart_putc
                                           	extern	_usart_puts
                                           	extern	_adc_open
                                           	extern	_adc_close
                                           	extern	_adc_conv
                                           	extern	_adc_busy
                                           	extern	_adc_read
                                           	extern	_adc_setchannel
                                           	extern	__mullong
                                           	extern	__divulong
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           r0x0d	res	1
                                           
                                           udata_meter_logger_0	udata
                                           _c	res	1
                                           
                                           udata_meter_logger_1	udata
                                           _timer_1_ms	res	2
                                           
                                           udata_meter_logger_2	udata
                                           _fifo_head	res	2
                                           
                                           udata_meter_logger_3	udata
                                           _fifo_tail	res	2
                                           
                                           udata_meter_logger_4	udata
                                           _debug_buffer	res	128
                                           
                                           udata_meter_logger_5	udata
                                           _main_cmd_1_90	res	1
                                           
                                           udata_meter_logger_6	udata
                                           _main_sub_cmd_1_90	res	1
                                           
                                           udata_meter_logger_7	udata
                                           _timer_0	res	2
                                           
                                           udata_meter_logger_8	udata
                                           _timer0_reload	res	2
                                           
                                           udata_meter_logger_9	udata
                                           _last_timer_0	res	2
                                           
                                           udata_meter_logger_10	udata
                                           _codec_type	res	1
                                           
                                           udata_meter_logger_11	udata
                                           _testo_ir_proto	res	6
                                           
                                           udata_meter_logger_12	udata
                                           _rs232_proto	res	7
                                           
                                           udata_meter_logger_13	udata
                                           _fsk_proto	res	16
                                           
                                           udata_meter_logger_14	udata
                                           _led_flash	res	2
                                           
                                           udata_meter_logger_15	udata
                                           _fifo_buffer_0	res	256
                                           
                                           udata_meter_logger_16	udata
                                           _fifo_buffer_1	res	256
                                           
                                           udata_meter_logger_17	udata
                                           _fifo_buffer_2	res	256
                                           
                                           udata_meter_logger_18	udata
                                           _fifo_buffer_3	res	256
                                           
                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_meter_logger_ivec_0x1_isr_high_prio	code	0X000008
                                           ivec_0x1_isr_high_prio:
000008   ef06     goto    0x260c           	GOTO	_isr_high_prio
00000a   f013
                                           
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_meter_logger_ivec_0x2_isr_low_prio	code	0X000018
                                           ivec_0x2_isr_low_prio:
000018   ef54     goto    0x4aa8           	GOTO	_isr_low_prio
00001a   f025
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_meter_logger__main	code
                                           _main:
                                           ;	.line	124; meter_logger.c	OSCCONbits.SCS = 0x10;
00001c   50d3     movf    0xd3, 0, 0       	MOVF	_OSCCONbits, W
00001e   0bfc     andlw   0xfc             	ANDLW	0xfc
000020   6ed3     movwf   0xd3, 0          	MOVWF	_OSCCONbits
                                           ;	.line	126; meter_logger.c	OSCCONbits.IRCF = 0x7;	// 8 MHz
000022   50d3     movf    0xd3, 0, 0       	MOVF	_OSCCONbits, W
000024   0b8f     andlw   0x8f             	ANDLW	0x8f
000026   0970     iorlw   0x70             	IORLW	0x70
000028   6ed3     movwf   0xd3, 0          	MOVWF	_OSCCONbits
00002a   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	129; meter_logger.c	timer_1_ms = 0;
00002c   6b41     clrf    0x41, 0x1        	CLRF	_timer_1_ms, B
                                           ; removed redundant BANKSEL
00002e   6b42     clrf    0x42, 0x1        	CLRF	(_timer_1_ms + 1), B
000030   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	131; meter_logger.c	fifo_head = 0;
000032   6b43     clrf    0x43, 0x1        	CLRF	_fifo_head, B
                                           ; removed redundant BANKSEL
000034   6b44     clrf    0x44, 0x1        	CLRF	(_fifo_head + 1), B
000036   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	132; meter_logger.c	fifo_tail = 0;
000038   6b45     clrf    0x45, 0x1        	CLRF	_fifo_tail, B
                                           ; removed redundant BANKSEL
00003a   6b46     clrf    0x46, 0x1        	CLRF	(_fifo_tail + 1), B
                                           ;	.line	134; meter_logger.c	init_system();	
00003c   ec30     call    0x4e60, 0        	CALL	_init_system
00003e   f027
                                           ;	.line	135; meter_logger.c	LED_PIN = 1;
000040   8881     bsf     0x81, 0x4, 0     	BSF	_PORTBbits, 4
                                           ;	.line	136; meter_logger.c	sleep_ms(100);
000042   0e00     movlw   0                	MOVLW	0x00
000044   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000046   0e64     movlw   0x64             	MOVLW	0x64
000048   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00004a   ecb6     call    0x4b6c, 0        	CALL	_sleep_ms
00004c   f025
00004e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000050   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	137; meter_logger.c	LED_PIN = 0;
000052   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	144; meter_logger.c	get_battery_level();
000054   ecd6     call    0x37ac, 0        	CALL	_get_battery_level
000056   f01b
                                           ;	.line	147; meter_logger.c	dev_id = get_dev_id();
000058   ecc9     call    0x4d92, 0        	CALL	_get_dev_id
00005a   f026
00005c   6e00     movwf   0, 0             	MOVWF	r0x00
00005e   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
000060   f001
                                           ;	.line	149; meter_logger.c	if (dev_id == 0x1240) {
000062   5000     movf    0, 0, 0          	MOVF	r0x00, W
000064   0a40     xorlw   0x40             	XORLW	0x40
000066   e103     bnz     0x6e             	BNZ	_00334_DS_
000068   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00006a   0a12     xorlw   0x12             	XORLW	0x12
00006c   e001     bz      0x70             	BZ	_00335_DS_
                                           _00334_DS_:
00006e   d01d     bra     0xaa             	BRA	_00109_DS_
                                           _00335_DS_:
                                           ;	.line	150; meter_logger.c	sprintf(debug_buffer, "Processor: pic18f2550\n\r");
000070   0e00     movlw   0                	MOVLW	UPPER(___str_0)
000072   6e04     movwf   0x4, 0           	MOVWF	r0x04
000074   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_0)
000076   6e03     movwf   0x3, 0           	MOVWF	r0x03
000078   0e0a     movlw   0xa              	MOVLW	LOW(___str_0)
00007a   6e02     movwf   0x2, 0           	MOVWF	r0x02
00007c   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00007e   6e06     movwf   0x6, 0           	MOVWF	r0x06
000080   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000082   6e05     movwf   0x5, 0           	MOVWF	r0x05
000084   0e80     movlw   0x80             	MOVLW	0x80
000086   6e07     movwf   0x7, 0           	MOVWF	r0x07
000088   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00008a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00008c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00008e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000090   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000092   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000094   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000096   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000098   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00009a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00009c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00009e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000a0   ec18     call    0x4630, 0        	CALL	_sprintf
0000a2   f023
0000a4   0e06     movlw   0x6              	MOVLW	0x06
0000a6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0000a8   d044     bra     0x132            	BRA	_00110_DS_
                                           _00109_DS_:
                                           ;	.line	152; meter_logger.c	else if (dev_id == 0x2a40) {
0000aa   5000     movf    0, 0, 0          	MOVF	r0x00, W
0000ac   0a40     xorlw   0x40             	XORLW	0x40
0000ae   e103     bnz     0xb6             	BNZ	_00336_DS_
0000b0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0000b2   0a2a     xorlw   0x2a             	XORLW	0x2a
0000b4   e001     bz      0xb8             	BZ	_00337_DS_
                                           _00336_DS_:
0000b6   d01d     bra     0xf2             	BRA	_00106_DS_
                                           _00337_DS_:
                                           ;	.line	153; meter_logger.c	sprintf(debug_buffer, "Processor: pic18f2553\n\r");
0000b8   0e00     movlw   0                	MOVLW	UPPER(___str_1)
0000ba   6e04     movwf   0x4, 0           	MOVWF	r0x04
0000bc   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_1)
0000be   6e03     movwf   0x3, 0           	MOVWF	r0x03
0000c0   0e22     movlw   0x22             	MOVLW	LOW(___str_1)
0000c2   6e02     movwf   0x2, 0           	MOVWF	r0x02
0000c4   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0000c6   6e06     movwf   0x6, 0           	MOVWF	r0x06
0000c8   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0000ca   6e05     movwf   0x5, 0           	MOVWF	r0x05
0000cc   0e80     movlw   0x80             	MOVLW	0x80
0000ce   6e07     movwf   0x7, 0           	MOVWF	r0x07
0000d0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0000d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000d4   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0000d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000d8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0000da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000dc   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0000de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000e0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0000e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000e4   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0000e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000e8   ec18     call    0x4630, 0        	CALL	_sprintf
0000ea   f023
0000ec   0e06     movlw   0x6              	MOVLW	0x06
0000ee   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0000f0   d020     bra     0x132            	BRA	_00110_DS_
                                           _00106_DS_:
                                           ;	.line	156; meter_logger.c	sprintf(debug_buffer, "Processor: unsupported, device id: 0x%04x\n\r", dev_id);
0000f2   0e00     movlw   0                	MOVLW	UPPER(___str_2)
0000f4   6e04     movwf   0x4, 0           	MOVWF	r0x04
0000f6   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_2)
0000f8   6e03     movwf   0x3, 0           	MOVWF	r0x03
0000fa   0e3a     movlw   0x3a             	MOVLW	LOW(___str_2)
0000fc   6e02     movwf   0x2, 0           	MOVWF	r0x02
0000fe   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000100   6e06     movwf   0x6, 0           	MOVWF	r0x06
000102   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000104   6e05     movwf   0x5, 0           	MOVWF	r0x05
000106   0e80     movlw   0x80             	MOVLW	0x80
000108   6e07     movwf   0x7, 0           	MOVWF	r0x07
00010a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00010c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00010e   5000     movf    0, 0, 0          	MOVF	r0x00, W
000110   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000112   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000114   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000116   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000118   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00011a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00011c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00011e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000120   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000122   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000124   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000126   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000128   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00012a   ec18     call    0x4630, 0        	CALL	_sprintf
00012c   f023
00012e   0e08     movlw   0x8              	MOVLW	0x08
000130   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _00110_DS_:
                                           ;	.line	158; meter_logger.c	usart_puts(debug_buffer);
000132   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000134   6e01     movwf   0x1, 0           	MOVWF	r0x01
000136   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000138   6e00     movwf   0, 0             	MOVWF	r0x00
00013a   0e80     movlw   0x80             	MOVLW	0x80
00013c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00013e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000140   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000142   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000144   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000146   5000     movf    0, 0, 0          	MOVF	r0x00, W
000148   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00014a   ec8d     call    0x4d1a, 0        	CALL	_usart_puts
00014c   f026
00014e   0e03     movlw   0x3              	MOVLW	0x03
000150   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	161; meter_logger.c	fsk_rx_enable();
000152   ec02     call    0x4e04, 0        	CALL	_fsk_rx_enable
000154   f027
                                           _00171_DS_:
                                           ;	.line	163; meter_logger.c	if (fifo_get(&cmd)) {
000156   0e05     movlw   0x5              	MOVLW	HIGH(_main_cmd_1_90)
000158   6e01     movwf   0x1, 0           	MOVWF	r0x01
00015a   0e50     movlw   0x50             	MOVLW	LOW(_main_cmd_1_90)
00015c   6e00     movwf   0, 0             	MOVWF	r0x00
00015e   0e80     movlw   0x80             	MOVLW	0x80
000160   6e02     movwf   0x2, 0           	MOVWF	r0x02
000162   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000164   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000166   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000168   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00016a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00016c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00016e   eca1     call    0x4142, 0        	CALL	_fifo_get
000170   f020
000172   6e00     movwf   0, 0             	MOVWF	r0x00
000174   0e03     movlw   0x3              	MOVLW	0x03
000176   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000178   5000     movf    0, 0, 0          	MOVF	r0x00, W
00017a   e0ed     bz      0x156            	BZ	_00171_DS_
                                           ;	.line	164; meter_logger.c	switch (cmd) {
00017c   0efb     movlw   0xfb             	MOVLW	0xfb
00017e   0105     movlb   0x5              	BANKSEL	_main_cmd_1_90
000180   5d50     subwf   0x50, 0, 0x1     	SUBWF	_main_cmd_1_90, W, B
000182   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
000184   ef67     goto    0xece            	GOTO	_00165_DS_
000186   f007
000188   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
00018a   2550     addwf   0x50, 0, 0x1     	ADDWF	_main_cmd_1_90, W, B
00018c   6e00     movwf   0, 0             	MOVWF	r0x00
00018e   6afa     clrf    0xfa, 0          	CLRF	PCLATH
000190   6afb     clrf    0xfb, 0          	CLRF	PCLATU
000192   3400     rlcf    0, 0, 0          	RLCF	r0x00, W
000194   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
000196   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
000198   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00019a   0bfc     andlw   0xfc             	ANDLW	0xfc
00019c   0fac     addlw   0xac             	ADDLW	LOW(_00339_DS_)
00019e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001a0   0e01     movlw   0x1              	MOVLW	HIGH(_00339_DS_)
0001a2   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
0001a4   0e00     movlw   0                	MOVLW	UPPER(_00339_DS_)
0001a6   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0001a8   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0001aa   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00339_DS_:
0001ac   ef61     goto    0xec2            	GOTO	_00163_DS_
0001ae   f007
0001b0   ef30     goto    0xa60            	GOTO	_00145_DS_
0001b2   f005
0001b4   effe     goto    0x5fc            	GOTO	_00127_DS_
0001b6   f002
0001b8   efe0     goto    0x1c0            	GOTO	_00111_DS_
0001ba   f000
0001bc   eff9     goto    0x3f2            	GOTO	_00119_DS_
0001be   f001
                                           _00111_DS_:
                                           ;	.line	166; meter_logger.c	fsk_rx_disable();
0001c0   ec05     call    0x540a, 0        	CALL	_fsk_rx_disable
0001c2   f02a
                                           ;	.line	167; meter_logger.c	usart_puts("\n\rpress print on testo\n\r");
0001c4   0e00     movlw   0                	MOVLW	UPPER(___str_3)
0001c6   6e02     movwf   0x2, 0           	MOVWF	r0x02
0001c8   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_3)
0001ca   6e01     movwf   0x1, 0           	MOVWF	r0x01
0001cc   0e66     movlw   0x66             	MOVLW	LOW(___str_3)
0001ce   6e00     movwf   0, 0             	MOVWF	r0x00
0001d0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0001d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001d4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0001d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001d8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0001da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001dc   ec8d     call    0x4d1a, 0        	CALL	_usart_puts
0001de   f026
0001e0   0e03     movlw   0x3              	MOVLW	0x03
0001e2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	168; meter_logger.c	testo_ir_enable();
0001e4   ecf9     call    0x4ff2, 0        	CALL	_testo_ir_enable
0001e6   f027
                                           ;	.line	170; meter_logger.c	last_fifo_size = 0;
0001e8   6a00     clrf    0, 0             	CLRF	r0x00
0001ea   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	171; meter_logger.c	sleep_ms(10000);						// 10 seconds to start printing
0001ec   0e27     movlw   0x27             	MOVLW	0x27
0001ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001f0   0e10     movlw   0x10             	MOVLW	0x10
0001f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001f4   ecb6     call    0x4b6c, 0        	CALL	_sleep_ms
0001f6   f025
0001f8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0001fa   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	172; meter_logger.c	fifo_size = fifo_in_use();
0001fc   ec34     call    0x5068, 0        	CALL	_fifo_in_use
0001fe   f028
000200   6e02     movwf   0x2, 0           	MOVWF	r0x02
000202   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000204   f003
                                           _00112_DS_:
                                           ;	.line	173; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000206   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000208   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00020a   e102     bnz     0x210            	BNZ	_00340_DS_
00020c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00020e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00340_DS_:
000210   e212     bc      0x236            	BC	_00114_DS_
                                           ;	.line	174; meter_logger.c	last_fifo_size = fifo_size;
000212   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000214   f000
000216   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000218   f001
                                           ;	.line	175; meter_logger.c	sleep_ms(200);						// return data when no data for 200 ms
00021a   0e00     movlw   0                	MOVLW	0x00
00021c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00021e   0ec8     movlw   0xc8             	MOVLW	0xc8
000220   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000222   ecb6     call    0x4b6c, 0        	CALL	_sleep_ms
000224   f025
000226   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000228   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	176; meter_logger.c	fifo_size = fifo_in_use();
00022a   ec34     call    0x5068, 0        	CALL	_fifo_in_use
00022c   f028
00022e   6e02     movwf   0x2, 0           	MOVWF	r0x02
000230   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000232   f003
000234   d7e8     bra     0x206            	BRA	_00112_DS_
                                           _00114_DS_:
                                           ;	.line	178; meter_logger.c	testo_ir_disable();
000236   ec0f     call    0x541e, 0        	CALL	_testo_ir_disable
000238   f02a
                                           ;	.line	184; meter_logger.c	sprintf(debug_buffer, "<- ");
00023a   0e00     movlw   0                	MOVLW	UPPER(___str_4)
00023c   6e06     movwf   0x6, 0           	MOVWF	r0x06
00023e   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_4)
000240   6e05     movwf   0x5, 0           	MOVWF	r0x05
000242   0e80     movlw   0x80             	MOVLW	LOW(___str_4)
000244   6e04     movwf   0x4, 0           	MOVWF	r0x04
000246   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000248   6e08     movwf   0x8, 0           	MOVWF	r0x08
00024a   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00024c   6e07     movwf   0x7, 0           	MOVWF	r0x07
00024e   0e80     movlw   0x80             	MOVLW	0x80
000250   6e09     movwf   0x9, 0           	MOVWF	r0x09
000252   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000254   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000256   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000258   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00025a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00025c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00025e   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000260   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000262   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000264   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000266   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000268   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00026a   ec18     call    0x4630, 0        	CALL	_sprintf
00026c   f023
00026e   0e06     movlw   0x6              	MOVLW	0x06
000270   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	185; meter_logger.c	usart_puts(debug_buffer);
000272   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000274   6e05     movwf   0x5, 0           	MOVWF	r0x05
000276   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000278   6e04     movwf   0x4, 0           	MOVWF	r0x04
00027a   0e80     movlw   0x80             	MOVLW	0x80
00027c   6e06     movwf   0x6, 0           	MOVWF	r0x06
00027e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000280   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000282   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000284   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000286   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000288   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00028a   ec8d     call    0x4d1a, 0        	CALL	_usart_puts
00028c   f026
00028e   0e03     movlw   0x3              	MOVLW	0x03
000290   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	186; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000292   6a04     clrf    0x4, 0           	CLRF	r0x04
000294   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00174_DS_:
000296   ec34     call    0x5068, 0        	CALL	_fifo_in_use
000298   f028
00029a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00029c   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
00029e   f007
0002a0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0002a2   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0002a4   e102     bnz     0x2aa            	BNZ	_00341_DS_
0002a6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0002a8   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00341_DS_:
0002aa   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0002ac   d04c     bra     0x346            	BRA	_00115_DS_
                                           ;	.line	188; meter_logger.c	fifo_get(&sub_cmd);
0002ae   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0002b0   6e07     movwf   0x7, 0           	MOVWF	r0x07
0002b2   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
0002b4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0002b6   0e80     movlw   0x80             	MOVLW	0x80
0002b8   6e08     movwf   0x8, 0           	MOVWF	r0x08
0002ba   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0002bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002be   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0002c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002c2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0002c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002c6   eca1     call    0x4142, 0        	CALL	_fifo_get
0002c8   f020
0002ca   0e03     movlw   0x3              	MOVLW	0x03
0002cc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	190; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
0002ce   c551     movff   0x551, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
0002d0   f006
0002d2   6a07     clrf    0x7, 0           	CLRF	r0x07
0002d4   0e00     movlw   0                	MOVLW	UPPER(___str_5)
0002d6   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0002d8   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_5)
0002da   6e09     movwf   0x9, 0           	MOVWF	r0x09
0002dc   0e84     movlw   0x84             	MOVLW	LOW(___str_5)
0002de   6e08     movwf   0x8, 0           	MOVWF	r0x08
0002e0   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0002e2   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
0002e4   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0002e6   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0002e8   0e80     movlw   0x80             	MOVLW	0x80
0002ea   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
0002ec   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0002ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002f0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0002f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002f4   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
0002f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002f8   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0002fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002fc   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0002fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000300   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000302   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000304   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000306   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000308   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
00030a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00030c   ec18     call    0x4630, 0        	CALL	_sprintf
00030e   f023
000310   0e08     movlw   0x8              	MOVLW	0x08
000312   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	191; meter_logger.c	usart_puts(debug_buffer);
000314   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000316   6e07     movwf   0x7, 0           	MOVWF	r0x07
000318   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00031a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00031c   0e80     movlw   0x80             	MOVLW	0x80
00031e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000320   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000322   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000324   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000326   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000328   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00032a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00032c   ec8d     call    0x4d1a, 0        	CALL	_usart_puts
00032e   f026
000330   0e03     movlw   0x3              	MOVLW	0x03
000332   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000334   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	193; meter_logger.c	fifo_put(sub_cmd);
000336   5151     movf    0x51, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000338   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00033a   ecfd     call    0x43fa, 0        	CALL	_fifo_put
00033c   f021
00033e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	186; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000340   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000342   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000344   d7a8     bra     0x296            	BRA	_00174_DS_
                                           _00115_DS_:
                                           ;	.line	195; meter_logger.c	sprintf(debug_buffer, "\n\r");
000346   0e00     movlw   0                	MOVLW	UPPER(___str_6)
000348   6e06     movwf   0x6, 0           	MOVWF	r0x06
00034a   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_6)
00034c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00034e   0e88     movlw   0x88             	MOVLW	LOW(___str_6)
000350   6e04     movwf   0x4, 0           	MOVWF	r0x04
000352   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000354   6e08     movwf   0x8, 0           	MOVWF	r0x08
000356   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000358   6e07     movwf   0x7, 0           	MOVWF	r0x07
00035a   0e80     movlw   0x80             	MOVLW	0x80
00035c   6e09     movwf   0x9, 0           	MOVWF	r0x09
00035e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000360   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000362   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000364   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000366   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000368   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00036a   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00036c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00036e   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000370   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000372   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000374   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000376   ec18     call    0x4630, 0        	CALL	_sprintf
000378   f023
00037a   0e06     movlw   0x6              	MOVLW	0x06
00037c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	196; meter_logger.c	usart_puts(debug_buffer);
00037e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000380   6e05     movwf   0x5, 0           	MOVWF	r0x05
000382   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000384   6e04     movwf   0x4, 0           	MOVWF	r0x04
000386   0e80     movlw   0x80             	MOVLW	0x80
000388   6e06     movwf   0x6, 0           	MOVWF	r0x06
00038a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00038c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00038e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000390   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000392   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000394   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000396   ec8d     call    0x4d1a, 0        	CALL	_usart_puts
000398   f026
00039a   0e03     movlw   0x3              	MOVLW	0x03
00039c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	198; meter_logger.c	fsk_tx_enable();
00039e   ec6b     call    0x50d6, 0        	CALL	_fsk_tx_enable
0003a0   f028
                                           _00116_DS_:
                                           ;	.line	199; meter_logger.c	while (fifo_get(&cmd)) {	// and send them via fsk
0003a2   0e05     movlw   0x5              	MOVLW	HIGH(_main_cmd_1_90)
0003a4   6e05     movwf   0x5, 0           	MOVWF	r0x05
0003a6   0e50     movlw   0x50             	MOVLW	LOW(_main_cmd_1_90)
0003a8   6e04     movwf   0x4, 0           	MOVWF	r0x04
0003aa   0e80     movlw   0x80             	MOVLW	0x80
0003ac   6e06     movwf   0x6, 0           	MOVWF	r0x06
0003ae   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0003b0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003b2   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0003b4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003b6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0003b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003ba   eca1     call    0x4142, 0        	CALL	_fifo_get
0003bc   f020
0003be   6e04     movwf   0x4, 0           	MOVWF	r0x04
0003c0   0e03     movlw   0x3              	MOVLW	0x03
0003c2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0003c4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0003c6   e00f     bz      0x3e6            	BZ	_00118_DS_
0003c8   0105     movlb   0x5              	BANKSEL	_main_cmd_1_90
                                           ;	.line	200; meter_logger.c	fsk_tx_byte(cmd);
0003ca   5150     movf    0x50, 0, 0x1     	MOVF	_main_cmd_1_90, W, B
0003cc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003ce   ecfc     call    0x51f8, 0        	CALL	_fsk_tx_byte
0003d0   f028
0003d2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	201; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
0003d4   0e00     movlw   0                	MOVLW	0x00
0003d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003d8   0e04     movlw   0x4              	MOVLW	0x04
0003da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003dc   ecb6     call    0x4b6c, 0        	CALL	_sleep_ms
0003de   f025
0003e0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0003e2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0003e4   d7de     bra     0x3a2            	BRA	_00116_DS_
                                           _00118_DS_:
                                           ;	.line	203; meter_logger.c	fsk_tx_disable();
0003e6   ecc3     call    0x5386, 0        	CALL	_fsk_tx_disable
0003e8   f029
                                           ;	.line	207; meter_logger.c	fsk_rx_enable();
0003ea   ec02     call    0x4e04, 0        	CALL	_fsk_rx_enable
0003ec   f027
                                           ;	.line	208; meter_logger.c	break;
0003ee   ef67     goto    0xece            	GOTO	_00165_DS_
0003f0   f007
                                           _00119_DS_:
                                           ;	.line	218; meter_logger.c	last_fifo_size = 0;
0003f2   6a00     clrf    0, 0             	CLRF	r0x00
0003f4   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	219; meter_logger.c	sleep_ms(1000);							// 1 second
0003f6   0e03     movlw   0x3              	MOVLW	0x03
0003f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003fa   0ee8     movlw   0xe8             	MOVLW	0xe8
0003fc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003fe   ecb6     call    0x4b6c, 0        	CALL	_sleep_ms
000400   f025
000402   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000404   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	220; meter_logger.c	fifo_size = fifo_in_use();
000406   ec34     call    0x5068, 0        	CALL	_fifo_in_use
000408   f028
00040a   6e02     movwf   0x2, 0           	MOVWF	r0x02
00040c   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00040e   f003
                                           _00120_DS_:
                                           ;	.line	221; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000410   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000412   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000414   e102     bnz     0x41a            	BNZ	_00342_DS_
000416   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000418   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00342_DS_:
00041a   e212     bc      0x440            	BC	_00122_DS_
                                           ;	.line	222; meter_logger.c	last_fifo_size = fifo_size;
00041c   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
00041e   f000
000420   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000422   f001
                                           ;	.line	223; meter_logger.c	sleep_ms(500);						// return data when no data for 500 ms
000424   0e01     movlw   0x1              	MOVLW	0x01
000426   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000428   0ef4     movlw   0xf4             	MOVLW	0xf4
00042a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00042c   ecb6     call    0x4b6c, 0        	CALL	_sleep_ms
00042e   f025
000430   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000432   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	224; meter_logger.c	fifo_size = fifo_in_use();
000434   ec34     call    0x5068, 0        	CALL	_fifo_in_use
000436   f028
000438   6e02     movwf   0x2, 0           	MOVWF	r0x02
00043a   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00043c   f003
00043e   d7e8     bra     0x410            	BRA	_00120_DS_
                                           _00122_DS_:
                                           ;	.line	226; meter_logger.c	fsk_rx_disable();
000440   ec05     call    0x540a, 0        	CALL	_fsk_rx_disable
000442   f02a
                                           ;	.line	229; meter_logger.c	sprintf(debug_buffer, "-> ");
000444   0e00     movlw   0                	MOVLW	UPPER(___str_7)
000446   6e06     movwf   0x6, 0           	MOVWF	r0x06
000448   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_7)
00044a   6e05     movwf   0x5, 0           	MOVWF	r0x05
00044c   0e8c     movlw   0x8c             	MOVLW	LOW(___str_7)
00044e   6e04     movwf   0x4, 0           	MOVWF	r0x04
000450   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000452   6e08     movwf   0x8, 0           	MOVWF	r0x08
000454   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000456   6e07     movwf   0x7, 0           	MOVWF	r0x07
000458   0e80     movlw   0x80             	MOVLW	0x80
00045a   6e09     movwf   0x9, 0           	MOVWF	r0x09
00045c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00045e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000460   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000462   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000464   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000466   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000468   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00046a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00046c   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00046e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000470   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000472   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000474   ec18     call    0x4630, 0        	CALL	_sprintf
000476   f023
000478   0e06     movlw   0x6              	MOVLW	0x06
00047a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	230; meter_logger.c	usart_puts(debug_buffer);
00047c   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00047e   6e05     movwf   0x5, 0           	MOVWF	r0x05
000480   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000482   6e04     movwf   0x4, 0           	MOVWF	r0x04
000484   0e80     movlw   0x80             	MOVLW	0x80
000486   6e06     movwf   0x6, 0           	MOVWF	r0x06
000488   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00048a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00048c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00048e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000490   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000492   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000494   ec8d     call    0x4d1a, 0        	CALL	_usart_puts
000496   f026
000498   0e03     movlw   0x3              	MOVLW	0x03
00049a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	231; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
00049c   6a04     clrf    0x4, 0           	CLRF	r0x04
00049e   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00177_DS_:
0004a0   ec34     call    0x5068, 0        	CALL	_fifo_in_use
0004a2   f028
0004a4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0004a6   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
0004a8   f007
0004aa   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0004ac   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0004ae   e102     bnz     0x4b4            	BNZ	_00343_DS_
0004b0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0004b2   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00343_DS_:
0004b4   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0004b6   d04c     bra     0x550            	BRA	_00123_DS_
                                           ;	.line	233; meter_logger.c	fifo_get(&sub_cmd);
0004b8   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0004ba   6e07     movwf   0x7, 0           	MOVWF	r0x07
0004bc   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
0004be   6e06     movwf   0x6, 0           	MOVWF	r0x06
0004c0   0e80     movlw   0x80             	MOVLW	0x80
0004c2   6e08     movwf   0x8, 0           	MOVWF	r0x08
0004c4   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0004c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004c8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0004ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004cc   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0004ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004d0   eca1     call    0x4142, 0        	CALL	_fifo_get
0004d2   f020
0004d4   0e03     movlw   0x3              	MOVLW	0x03
0004d6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	235; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
0004d8   c551     movff   0x551, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
0004da   f006
0004dc   6a07     clrf    0x7, 0           	CLRF	r0x07
0004de   0e00     movlw   0                	MOVLW	UPPER(___str_5)
0004e0   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0004e2   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_5)
0004e4   6e09     movwf   0x9, 0           	MOVWF	r0x09
0004e6   0e84     movlw   0x84             	MOVLW	LOW(___str_5)
0004e8   6e08     movwf   0x8, 0           	MOVWF	r0x08
0004ea   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0004ec   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
0004ee   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0004f0   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0004f2   0e80     movlw   0x80             	MOVLW	0x80
0004f4   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
0004f6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0004f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004fa   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0004fc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004fe   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000500   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000502   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000504   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000506   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000508   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00050a   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
00050c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00050e   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000510   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000512   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000514   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000516   ec18     call    0x4630, 0        	CALL	_sprintf
000518   f023
00051a   0e08     movlw   0x8              	MOVLW	0x08
00051c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	236; meter_logger.c	usart_puts(debug_buffer);
00051e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000520   6e07     movwf   0x7, 0           	MOVWF	r0x07
000522   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000524   6e06     movwf   0x6, 0           	MOVWF	r0x06
000526   0e80     movlw   0x80             	MOVLW	0x80
000528   6e08     movwf   0x8, 0           	MOVWF	r0x08
00052a   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00052c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00052e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000530   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000532   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000534   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000536   ec8d     call    0x4d1a, 0        	CALL	_usart_puts
000538   f026
00053a   0e03     movlw   0x3              	MOVLW	0x03
00053c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00053e   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	238; meter_logger.c	fifo_put(sub_cmd);
000540   5151     movf    0x51, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000542   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000544   ecfd     call    0x43fa, 0        	CALL	_fifo_put
000546   f021
000548   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	231; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
00054a   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
00054c   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
00054e   d7a8     bra     0x4a0            	BRA	_00177_DS_
                                           _00123_DS_:
                                           ;	.line	240; meter_logger.c	sprintf(debug_buffer, "\n\r");
000550   0e00     movlw   0                	MOVLW	UPPER(___str_6)
000552   6e06     movwf   0x6, 0           	MOVWF	r0x06
000554   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_6)
000556   6e05     movwf   0x5, 0           	MOVWF	r0x05
000558   0e88     movlw   0x88             	MOVLW	LOW(___str_6)
00055a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00055c   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00055e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000560   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000562   6e07     movwf   0x7, 0           	MOVWF	r0x07
000564   0e80     movlw   0x80             	MOVLW	0x80
000566   6e09     movwf   0x9, 0           	MOVWF	r0x09
000568   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00056a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00056c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00056e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000570   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000572   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000574   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000576   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000578   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00057a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00057c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00057e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000580   ec18     call    0x4630, 0        	CALL	_sprintf
000582   f023
000584   0e06     movlw   0x6              	MOVLW	0x06
000586   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	241; meter_logger.c	usart_puts(debug_buffer);
000588   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00058a   6e05     movwf   0x5, 0           	MOVWF	r0x05
00058c   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00058e   6e04     movwf   0x4, 0           	MOVWF	r0x04
000590   0e80     movlw   0x80             	MOVLW	0x80
000592   6e06     movwf   0x6, 0           	MOVWF	r0x06
000594   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000596   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000598   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00059a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00059c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00059e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005a0   ec8d     call    0x4d1a, 0        	CALL	_usart_puts
0005a2   f026
0005a4   0e03     movlw   0x3              	MOVLW	0x03
0005a6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	245; meter_logger.c	fsk_tx_enable();
0005a8   ec6b     call    0x50d6, 0        	CALL	_fsk_tx_enable
0005aa   f028
                                           _00124_DS_:
                                           ;	.line	246; meter_logger.c	while (fifo_get(&sub_cmd)) {
0005ac   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0005ae   6e05     movwf   0x5, 0           	MOVWF	r0x05
0005b0   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
0005b2   6e04     movwf   0x4, 0           	MOVWF	r0x04
0005b4   0e80     movlw   0x80             	MOVLW	0x80
0005b6   6e06     movwf   0x6, 0           	MOVWF	r0x06
0005b8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0005ba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005bc   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0005be   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005c0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0005c2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005c4   eca1     call    0x4142, 0        	CALL	_fifo_get
0005c6   f020
0005c8   6e04     movwf   0x4, 0           	MOVWF	r0x04
0005ca   0e03     movlw   0x3              	MOVLW	0x03
0005cc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0005ce   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0005d0   e00f     bz      0x5f0            	BZ	_00126_DS_
0005d2   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	247; meter_logger.c	fsk_tx_byte(sub_cmd);
0005d4   5151     movf    0x51, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
0005d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005d8   ecfc     call    0x51f8, 0        	CALL	_fsk_tx_byte
0005da   f028
0005dc   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	248; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
0005de   0e00     movlw   0                	MOVLW	0x00
0005e0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005e2   0e04     movlw   0x4              	MOVLW	0x04
0005e4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005e6   ecb6     call    0x4b6c, 0        	CALL	_sleep_ms
0005e8   f025
0005ea   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0005ec   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0005ee   d7de     bra     0x5ac            	BRA	_00124_DS_
                                           _00126_DS_:
                                           ;	.line	250; meter_logger.c	fsk_tx_disable();
0005f0   ecc3     call    0x5386, 0        	CALL	_fsk_tx_disable
0005f2   f029
                                           ;	.line	255; meter_logger.c	fsk_rx_enable();
0005f4   ec02     call    0x4e04, 0        	CALL	_fsk_rx_enable
0005f6   f027
                                           ;	.line	256; meter_logger.c	break;
0005f8   ef67     goto    0xece            	GOTO	_00165_DS_
0005fa   f007
                                           _00127_DS_:
                                           ;	.line	259; meter_logger.c	fsk_rx_disable();
0005fc   ec05     call    0x540a, 0        	CALL	_fsk_rx_disable
0005fe   f02a
                                           ;	.line	265; meter_logger.c	fsk_rx_enable();
000600   ec02     call    0x4e04, 0        	CALL	_fsk_rx_enable
000602   f027
                                           ;	.line	266; meter_logger.c	last_fifo_size = 0;
000604   6a00     clrf    0, 0             	CLRF	r0x00
000606   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	267; meter_logger.c	sleep_ms(400);							// sleep 400 ms to let some data come in
000608   0e01     movlw   0x1              	MOVLW	0x01
00060a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00060c   0e90     movlw   0x90             	MOVLW	0x90
00060e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000610   ecb6     call    0x4b6c, 0        	CALL	_sleep_ms
000612   f025
000614   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000616   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	268; meter_logger.c	fifo_size = fifo_in_use();
000618   ec34     call    0x5068, 0        	CALL	_fifo_in_use
00061a   f028
00061c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00061e   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000620   f003
                                           _00128_DS_:
                                           ;	.line	269; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000622   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000624   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000626   e102     bnz     0x62c            	BNZ	_00344_DS_
000628   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00062a   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00344_DS_:
00062c   e212     bc      0x652            	BC	_00130_DS_
                                           ;	.line	270; meter_logger.c	last_fifo_size = fifo_size;
00062e   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000630   f000
000632   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000634   f001
                                           ;	.line	271; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
000636   0e00     movlw   0                	MOVLW	0x00
000638   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00063a   0ec8     movlw   0xc8             	MOVLW	0xc8
00063c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00063e   ecb6     call    0x4b6c, 0        	CALL	_sleep_ms
000640   f025
000642   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000644   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	272; meter_logger.c	fifo_size = fifo_in_use();
000646   ec34     call    0x5068, 0        	CALL	_fifo_in_use
000648   f028
00064a   6e02     movwf   0x2, 0           	MOVWF	r0x02
00064c   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00064e   f003
000650   d7e8     bra     0x622            	BRA	_00128_DS_
                                           _00130_DS_:
                                           ;	.line	274; meter_logger.c	fsk_rx_disable();
000652   ec05     call    0x540a, 0        	CALL	_fsk_rx_disable
000654   f02a
                                           ;	.line	280; meter_logger.c	sprintf(debug_buffer, "-> ");
000656   0e00     movlw   0                	MOVLW	UPPER(___str_7)
000658   6e06     movwf   0x6, 0           	MOVWF	r0x06
00065a   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_7)
00065c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00065e   0e8c     movlw   0x8c             	MOVLW	LOW(___str_7)
000660   6e04     movwf   0x4, 0           	MOVWF	r0x04
000662   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000664   6e08     movwf   0x8, 0           	MOVWF	r0x08
000666   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000668   6e07     movwf   0x7, 0           	MOVWF	r0x07
00066a   0e80     movlw   0x80             	MOVLW	0x80
00066c   6e09     movwf   0x9, 0           	MOVWF	r0x09
00066e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000670   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000672   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000674   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000676   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000678   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00067a   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00067c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00067e   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000680   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000682   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000684   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000686   ec18     call    0x4630, 0        	CALL	_sprintf
000688   f023
00068a   0e06     movlw   0x6              	MOVLW	0x06
00068c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	281; meter_logger.c	usart_puts(debug_buffer);
00068e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000690   6e05     movwf   0x5, 0           	MOVWF	r0x05
000692   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000694   6e04     movwf   0x4, 0           	MOVWF	r0x04
000696   0e80     movlw   0x80             	MOVLW	0x80
000698   6e06     movwf   0x6, 0           	MOVWF	r0x06
00069a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00069c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00069e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0006a0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006a2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0006a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006a6   ec8d     call    0x4d1a, 0        	CALL	_usart_puts
0006a8   f026
0006aa   0e03     movlw   0x3              	MOVLW	0x03
0006ac   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	282; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
0006ae   6a04     clrf    0x4, 0           	CLRF	r0x04
0006b0   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00180_DS_:
0006b2   ec34     call    0x5068, 0        	CALL	_fifo_in_use
0006b4   f028
0006b6   6e06     movwf   0x6, 0           	MOVWF	r0x06
0006b8   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
0006ba   f007
0006bc   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0006be   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0006c0   e102     bnz     0x6c6            	BNZ	_00345_DS_
0006c2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0006c4   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00345_DS_:
0006c6   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0006c8   d04c     bra     0x762            	BRA	_00131_DS_
                                           ;	.line	284; meter_logger.c	fifo_get(&sub_cmd);
0006ca   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0006cc   6e07     movwf   0x7, 0           	MOVWF	r0x07
0006ce   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
0006d0   6e06     movwf   0x6, 0           	MOVWF	r0x06
0006d2   0e80     movlw   0x80             	MOVLW	0x80
0006d4   6e08     movwf   0x8, 0           	MOVWF	r0x08
0006d6   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0006d8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006da   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0006dc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006de   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0006e0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006e2   eca1     call    0x4142, 0        	CALL	_fifo_get
0006e4   f020
0006e6   0e03     movlw   0x3              	MOVLW	0x03
0006e8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	286; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
0006ea   c551     movff   0x551, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
0006ec   f006
0006ee   6a07     clrf    0x7, 0           	CLRF	r0x07
0006f0   0e00     movlw   0                	MOVLW	UPPER(___str_5)
0006f2   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0006f4   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_5)
0006f6   6e09     movwf   0x9, 0           	MOVWF	r0x09
0006f8   0e84     movlw   0x84             	MOVLW	LOW(___str_5)
0006fa   6e08     movwf   0x8, 0           	MOVWF	r0x08
0006fc   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0006fe   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
000700   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000702   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
000704   0e80     movlw   0x80             	MOVLW	0x80
000706   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
000708   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00070a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00070c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00070e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000710   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000712   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000714   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000716   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000718   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00071a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00071c   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
00071e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000720   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000722   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000724   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000726   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000728   ec18     call    0x4630, 0        	CALL	_sprintf
00072a   f023
00072c   0e08     movlw   0x8              	MOVLW	0x08
00072e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	287; meter_logger.c	usart_puts(debug_buffer);
000730   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000732   6e07     movwf   0x7, 0           	MOVWF	r0x07
000734   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000736   6e06     movwf   0x6, 0           	MOVWF	r0x06
000738   0e80     movlw   0x80             	MOVLW	0x80
00073a   6e08     movwf   0x8, 0           	MOVWF	r0x08
00073c   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00073e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000740   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000742   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000744   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000746   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000748   ec8d     call    0x4d1a, 0        	CALL	_usart_puts
00074a   f026
00074c   0e03     movlw   0x3              	MOVLW	0x03
00074e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000750   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	289; meter_logger.c	fifo_put(sub_cmd);
000752   5151     movf    0x51, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000754   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000756   ecfd     call    0x43fa, 0        	CALL	_fifo_put
000758   f021
00075a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	282; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
00075c   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
00075e   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000760   d7a8     bra     0x6b2            	BRA	_00180_DS_
                                           _00131_DS_:
                                           ;	.line	291; meter_logger.c	sprintf(debug_buffer, "\n\r");
000762   0e00     movlw   0                	MOVLW	UPPER(___str_6)
000764   6e06     movwf   0x6, 0           	MOVWF	r0x06
000766   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_6)
000768   6e05     movwf   0x5, 0           	MOVWF	r0x05
00076a   0e88     movlw   0x88             	MOVLW	LOW(___str_6)
00076c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00076e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000770   6e08     movwf   0x8, 0           	MOVWF	r0x08
000772   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000774   6e07     movwf   0x7, 0           	MOVWF	r0x07
000776   0e80     movlw   0x80             	MOVLW	0x80
000778   6e09     movwf   0x9, 0           	MOVWF	r0x09
00077a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00077c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00077e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000780   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000782   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000784   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000786   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000788   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00078a   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00078c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00078e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000790   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000792   ec18     call    0x4630, 0        	CALL	_sprintf
000794   f023
000796   0e06     movlw   0x6              	MOVLW	0x06
000798   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	292; meter_logger.c	usart_puts(debug_buffer);
00079a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00079c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00079e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0007a0   6e04     movwf   0x4, 0           	MOVWF	r0x04
0007a2   0e80     movlw   0x80             	MOVLW	0x80
0007a4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0007a6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0007a8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007aa   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0007ac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007ae   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0007b0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007b2   ec8d     call    0x4d1a, 0        	CALL	_usart_puts
0007b4   f026
0007b6   0e03     movlw   0x3              	MOVLW	0x03
0007b8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	295; meter_logger.c	rs232_8n2_tx_enable(TIMER0_RS232_1200);
0007ba   0ef9     movlw   0xf9             	MOVLW	0xf9
0007bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007be   0eae     movlw   0xae             	MOVLW	0xae
0007c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007c2   ecda     call    0x4fb4, 0        	CALL	_rs232_8n2_tx_enable
0007c4   f027
0007c6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0007c8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00132_DS_:
                                           ;	.line	296; meter_logger.c	while (fifo_get(&sub_cmd)) {
0007ca   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0007cc   6e05     movwf   0x5, 0           	MOVWF	r0x05
0007ce   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
0007d0   6e04     movwf   0x4, 0           	MOVWF	r0x04
0007d2   0e80     movlw   0x80             	MOVLW	0x80
0007d4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0007d6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0007d8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007da   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0007dc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007de   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0007e0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007e2   eca1     call    0x4142, 0        	CALL	_fifo_get
0007e4   f020
0007e6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0007e8   0e03     movlw   0x3              	MOVLW	0x03
0007ea   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0007ec   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0007ee   e00f     bz      0x80e            	BZ	_00134_DS_
0007f0   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	297; meter_logger.c	rs232_8n2_tx_byte(sub_cmd);
0007f2   5151     movf    0x51, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
0007f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007f6   ec9d     call    0x513a, 0        	CALL	_rs232_8n2_tx_byte
0007f8   f028
0007fa   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	298; meter_logger.c	sleep_ms(RS232_TX_SLEEP);
0007fc   0e00     movlw   0                	MOVLW	0x00
0007fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000800   0e0c     movlw   0xc              	MOVLW	0x0c
000802   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000804   ecb6     call    0x4b6c, 0        	CALL	_sleep_ms
000806   f025
000808   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00080a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00080c   d7de     bra     0x7ca            	BRA	_00132_DS_
                                           _00134_DS_:
                                           ;	.line	300; meter_logger.c	rs232_8n2_tx_disable();
00080e   ecef     call    0x53de, 0        	CALL	_rs232_8n2_tx_disable
000810   f029
                                           ;	.line	306; meter_logger.c	rs232_8n2_rx_enable(TIMER0_RS232_1200);
000812   0ef9     movlw   0xf9             	MOVLW	0xf9
000814   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000816   0eae     movlw   0xae             	MOVLW	0xae
000818   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00081a   ec7b     call    0x4ef6, 0        	CALL	_rs232_8n2_rx_enable
00081c   f027
00081e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000820   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	307; meter_logger.c	last_fifo_size = 0;
000822   6a00     clrf    0, 0             	CLRF	r0x00
000824   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	308; meter_logger.c	sleep_ms(400);							// sleep 400 ms to let some data come in
000826   0e01     movlw   0x1              	MOVLW	0x01
000828   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00082a   0e90     movlw   0x90             	MOVLW	0x90
00082c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00082e   ecb6     call    0x4b6c, 0        	CALL	_sleep_ms
000830   f025
000832   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000834   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	309; meter_logger.c	fifo_size = fifo_in_use();
000836   ec34     call    0x5068, 0        	CALL	_fifo_in_use
000838   f028
00083a   6e02     movwf   0x2, 0           	MOVWF	r0x02
00083c   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00083e   f003
                                           _00135_DS_:
                                           ;	.line	311; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000840   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000842   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000844   e102     bnz     0x84a            	BNZ	_00346_DS_
000846   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000848   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00346_DS_:
00084a   e212     bc      0x870            	BC	_00137_DS_
                                           ;	.line	312; meter_logger.c	last_fifo_size = fifo_size;
00084c   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
00084e   f000
000850   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000852   f001
                                           ;	.line	313; meter_logger.c	sleep_ms(200);						// return data when no data for 200 ms
000854   0e00     movlw   0                	MOVLW	0x00
000856   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000858   0ec8     movlw   0xc8             	MOVLW	0xc8
00085a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00085c   ecb6     call    0x4b6c, 0        	CALL	_sleep_ms
00085e   f025
000860   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000862   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	314; meter_logger.c	fifo_size = fifo_in_use();
000864   ec34     call    0x5068, 0        	CALL	_fifo_in_use
000866   f028
000868   6e02     movwf   0x2, 0           	MOVWF	r0x02
00086a   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00086c   f003
00086e   d7e8     bra     0x840            	BRA	_00135_DS_
                                           _00137_DS_:
                                           ;	.line	317; meter_logger.c	rs232_8n2_rx_disable();
000870   ece4     call    0x53c8, 0        	CALL	_rs232_8n2_rx_disable
000872   f029
                                           ;	.line	324; meter_logger.c	sprintf(debug_buffer, "<- ");
000874   0e00     movlw   0                	MOVLW	UPPER(___str_4)
000876   6e06     movwf   0x6, 0           	MOVWF	r0x06
000878   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_4)
00087a   6e05     movwf   0x5, 0           	MOVWF	r0x05
00087c   0e80     movlw   0x80             	MOVLW	LOW(___str_4)
00087e   6e04     movwf   0x4, 0           	MOVWF	r0x04
000880   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000882   6e08     movwf   0x8, 0           	MOVWF	r0x08
000884   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000886   6e07     movwf   0x7, 0           	MOVWF	r0x07
000888   0e80     movlw   0x80             	MOVLW	0x80
00088a   6e09     movwf   0x9, 0           	MOVWF	r0x09
00088c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00088e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000890   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000892   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000894   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000896   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000898   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00089a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00089c   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00089e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008a0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0008a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008a4   ec18     call    0x4630, 0        	CALL	_sprintf
0008a6   f023
0008a8   0e06     movlw   0x6              	MOVLW	0x06
0008aa   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	325; meter_logger.c	usart_puts(debug_buffer);
0008ac   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0008ae   6e05     movwf   0x5, 0           	MOVWF	r0x05
0008b0   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0008b2   6e04     movwf   0x4, 0           	MOVWF	r0x04
0008b4   0e80     movlw   0x80             	MOVLW	0x80
0008b6   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008b8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0008ba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008bc   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0008be   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008c0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0008c2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008c4   ec8d     call    0x4d1a, 0        	CALL	_usart_puts
0008c6   f026
0008c8   0e03     movlw   0x3              	MOVLW	0x03
0008ca   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	326; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
0008cc   6a04     clrf    0x4, 0           	CLRF	r0x04
0008ce   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00183_DS_:
0008d0   ec34     call    0x5068, 0        	CALL	_fifo_in_use
0008d2   f028
0008d4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008d6   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
0008d8   f007
0008da   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0008dc   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0008de   e102     bnz     0x8e4            	BNZ	_00347_DS_
0008e0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0008e2   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00347_DS_:
0008e4   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0008e6   d04c     bra     0x980            	BRA	_00138_DS_
                                           ;	.line	328; meter_logger.c	fifo_get(&sub_cmd);
0008e8   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0008ea   6e07     movwf   0x7, 0           	MOVWF	r0x07
0008ec   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
0008ee   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008f0   0e80     movlw   0x80             	MOVLW	0x80
0008f2   6e08     movwf   0x8, 0           	MOVWF	r0x08
0008f4   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0008f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008f8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0008fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008fc   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0008fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000900   eca1     call    0x4142, 0        	CALL	_fifo_get
000902   f020
000904   0e03     movlw   0x3              	MOVLW	0x03
000906   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	330; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
000908   c551     movff   0x551, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
00090a   f006
00090c   6a07     clrf    0x7, 0           	CLRF	r0x07
00090e   0e00     movlw   0                	MOVLW	UPPER(___str_5)
000910   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000912   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_5)
000914   6e09     movwf   0x9, 0           	MOVWF	r0x09
000916   0e84     movlw   0x84             	MOVLW	LOW(___str_5)
000918   6e08     movwf   0x8, 0           	MOVWF	r0x08
00091a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00091c   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
00091e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000920   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
000922   0e80     movlw   0x80             	MOVLW	0x80
000924   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
000926   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000928   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00092a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00092c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00092e   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000930   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000932   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000934   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000936   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000938   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00093a   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
00093c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00093e   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000940   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000942   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000944   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000946   ec18     call    0x4630, 0        	CALL	_sprintf
000948   f023
00094a   0e08     movlw   0x8              	MOVLW	0x08
00094c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	331; meter_logger.c	usart_puts(debug_buffer);
00094e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000950   6e07     movwf   0x7, 0           	MOVWF	r0x07
000952   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000954   6e06     movwf   0x6, 0           	MOVWF	r0x06
000956   0e80     movlw   0x80             	MOVLW	0x80
000958   6e08     movwf   0x8, 0           	MOVWF	r0x08
00095a   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00095c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00095e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000960   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000962   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000964   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000966   ec8d     call    0x4d1a, 0        	CALL	_usart_puts
000968   f026
00096a   0e03     movlw   0x3              	MOVLW	0x03
00096c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00096e   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	333; meter_logger.c	fifo_put(sub_cmd);
000970   5151     movf    0x51, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000972   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000974   ecfd     call    0x43fa, 0        	CALL	_fifo_put
000976   f021
000978   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	326; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
00097a   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
00097c   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
00097e   d7a8     bra     0x8d0            	BRA	_00183_DS_
                                           _00138_DS_:
                                           ;	.line	335; meter_logger.c	sprintf(debug_buffer, "\n\r");
000980   0e00     movlw   0                	MOVLW	UPPER(___str_6)
000982   6e06     movwf   0x6, 0           	MOVWF	r0x06
000984   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_6)
000986   6e05     movwf   0x5, 0           	MOVWF	r0x05
000988   0e88     movlw   0x88             	MOVLW	LOW(___str_6)
00098a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00098c   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00098e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000990   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000992   6e07     movwf   0x7, 0           	MOVWF	r0x07
000994   0e80     movlw   0x80             	MOVLW	0x80
000996   6e09     movwf   0x9, 0           	MOVWF	r0x09
000998   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00099a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00099c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00099e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009a0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0009a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009a4   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0009a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009a8   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0009aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009ac   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0009ae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009b0   ec18     call    0x4630, 0        	CALL	_sprintf
0009b2   f023
0009b4   0e06     movlw   0x6              	MOVLW	0x06
0009b6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	336; meter_logger.c	usart_puts(debug_buffer);
0009b8   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0009ba   6e05     movwf   0x5, 0           	MOVWF	r0x05
0009bc   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0009be   6e04     movwf   0x4, 0           	MOVWF	r0x04
0009c0   0e80     movlw   0x80             	MOVLW	0x80
0009c2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0009c4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0009c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009c8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0009ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009cc   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0009ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009d0   ec8d     call    0x4d1a, 0        	CALL	_usart_puts
0009d2   f026
0009d4   0e03     movlw   0x3              	MOVLW	0x03
0009d6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	338; meter_logger.c	if (fifo_in_use()) {
0009d8   ec34     call    0x5068, 0        	CALL	_fifo_in_use
0009da   f028
0009dc   6e04     movwf   0x4, 0           	MOVWF	r0x04
0009de   cff3     movff   0xff3, 0x5       	MOVFF	PRODL, r0x05
0009e0   f005
0009e2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0009e4   1005     iorwf   0x5, 0, 0        	IORWF	r0x05, W
0009e6   e027     bz      0xa36            	BZ	_00143_DS_
                                           ;	.line	340; meter_logger.c	fsk_tx_enable();
0009e8   ec6b     call    0x50d6, 0        	CALL	_fsk_tx_enable
0009ea   f028
                                           _00139_DS_:
                                           ;	.line	341; meter_logger.c	while (fifo_get(&sub_cmd)) {
0009ec   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0009ee   6e05     movwf   0x5, 0           	MOVWF	r0x05
0009f0   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
0009f2   6e04     movwf   0x4, 0           	MOVWF	r0x04
0009f4   0e80     movlw   0x80             	MOVLW	0x80
0009f6   6e06     movwf   0x6, 0           	MOVWF	r0x06
0009f8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0009fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009fc   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0009fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a00   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000a02   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a04   eca1     call    0x4142, 0        	CALL	_fifo_get
000a06   f020
000a08   6e04     movwf   0x4, 0           	MOVWF	r0x04
000a0a   0e03     movlw   0x3              	MOVLW	0x03
000a0c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000a0e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000a10   e00f     bz      0xa30            	BZ	_00141_DS_
000a12   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	342; meter_logger.c	fsk_tx_byte(sub_cmd);
000a14   5151     movf    0x51, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000a16   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a18   ecfc     call    0x51f8, 0        	CALL	_fsk_tx_byte
000a1a   f028
000a1c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	343; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000a1e   0e00     movlw   0                	MOVLW	0x00
000a20   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a22   0e04     movlw   0x4              	MOVLW	0x04
000a24   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a26   ecb6     call    0x4b6c, 0        	CALL	_sleep_ms
000a28   f025
000a2a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000a2c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000a2e   d7de     bra     0x9ec            	BRA	_00139_DS_
                                           _00141_DS_:
                                           ;	.line	345; meter_logger.c	fsk_tx_disable();
000a30   ecc3     call    0x5386, 0        	CALL	_fsk_tx_disable
000a32   f029
000a34   d011     bra     0xa58            	BRA	_00144_DS_
                                           _00143_DS_:
                                           ;	.line	353; meter_logger.c	fsk_tx_enable();
000a36   ec6b     call    0x50d6, 0        	CALL	_fsk_tx_enable
000a38   f028
                                           ;	.line	354; meter_logger.c	fsk_tx_byte(0x0d);
000a3a   0e0d     movlw   0xd              	MOVLW	0x0d
000a3c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a3e   ecfc     call    0x51f8, 0        	CALL	_fsk_tx_byte
000a40   f028
000a42   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	355; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000a44   0e00     movlw   0                	MOVLW	0x00
000a46   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a48   0e04     movlw   0x4              	MOVLW	0x04
000a4a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a4c   ecb6     call    0x4b6c, 0        	CALL	_sleep_ms
000a4e   f025
000a50   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000a52   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	356; meter_logger.c	fsk_tx_disable();
000a54   ecc3     call    0x5386, 0        	CALL	_fsk_tx_disable
000a56   f029
                                           _00144_DS_:
                                           ;	.line	361; meter_logger.c	fsk_rx_enable();
000a58   ec02     call    0x4e04, 0        	CALL	_fsk_rx_enable
000a5a   f027
                                           ;	.line	362; meter_logger.c	break;
000a5c   ef67     goto    0xece            	GOTO	_00165_DS_
000a5e   f007
                                           _00145_DS_:
                                           ;	.line	364; meter_logger.c	fsk_rx_disable();
000a60   ec05     call    0x540a, 0        	CALL	_fsk_rx_disable
000a62   f02a
                                           ;	.line	370; meter_logger.c	fsk_rx_enable();
000a64   ec02     call    0x4e04, 0        	CALL	_fsk_rx_enable
000a66   f027
                                           ;	.line	371; meter_logger.c	last_fifo_size = 0;
000a68   6a00     clrf    0, 0             	CLRF	r0x00
000a6a   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	372; meter_logger.c	sleep_ms(400);							// sleep 400 ms to let some data come in
000a6c   0e01     movlw   0x1              	MOVLW	0x01
000a6e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a70   0e90     movlw   0x90             	MOVLW	0x90
000a72   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a74   ecb6     call    0x4b6c, 0        	CALL	_sleep_ms
000a76   f025
000a78   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000a7a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	373; meter_logger.c	fifo_size = fifo_in_use();
000a7c   ec34     call    0x5068, 0        	CALL	_fifo_in_use
000a7e   f028
000a80   6e02     movwf   0x2, 0           	MOVWF	r0x02
000a82   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000a84   f003
                                           _00146_DS_:
                                           ;	.line	374; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000a86   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000a88   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000a8a   e102     bnz     0xa90            	BNZ	_00348_DS_
000a8c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000a8e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00348_DS_:
000a90   e212     bc      0xab6            	BC	_00148_DS_
                                           ;	.line	375; meter_logger.c	last_fifo_size = fifo_size;
000a92   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000a94   f000
000a96   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000a98   f001
                                           ;	.line	376; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
000a9a   0e00     movlw   0                	MOVLW	0x00
000a9c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a9e   0ec8     movlw   0xc8             	MOVLW	0xc8
000aa0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000aa2   ecb6     call    0x4b6c, 0        	CALL	_sleep_ms
000aa4   f025
000aa6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000aa8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	377; meter_logger.c	fifo_size = fifo_in_use();
000aaa   ec34     call    0x5068, 0        	CALL	_fifo_in_use
000aac   f028
000aae   6e02     movwf   0x2, 0           	MOVWF	r0x02
000ab0   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000ab2   f003
000ab4   d7e8     bra     0xa86            	BRA	_00146_DS_
                                           _00148_DS_:
                                           ;	.line	379; meter_logger.c	fsk_rx_disable();
000ab6   ec05     call    0x540a, 0        	CALL	_fsk_rx_disable
000ab8   f02a
                                           ;	.line	385; meter_logger.c	sprintf(debug_buffer, "-> ");
000aba   0e00     movlw   0                	MOVLW	UPPER(___str_7)
000abc   6e06     movwf   0x6, 0           	MOVWF	r0x06
000abe   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_7)
000ac0   6e05     movwf   0x5, 0           	MOVWF	r0x05
000ac2   0e8c     movlw   0x8c             	MOVLW	LOW(___str_7)
000ac4   6e04     movwf   0x4, 0           	MOVWF	r0x04
000ac6   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000ac8   6e08     movwf   0x8, 0           	MOVWF	r0x08
000aca   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000acc   6e07     movwf   0x7, 0           	MOVWF	r0x07
000ace   0e80     movlw   0x80             	MOVLW	0x80
000ad0   6e09     movwf   0x9, 0           	MOVWF	r0x09
000ad2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000ad4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ad6   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000ad8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ada   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000adc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ade   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000ae0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ae2   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000ae4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ae6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000ae8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000aea   ec18     call    0x4630, 0        	CALL	_sprintf
000aec   f023
000aee   0e06     movlw   0x6              	MOVLW	0x06
000af0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	386; meter_logger.c	usart_puts(debug_buffer);
000af2   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000af4   6e05     movwf   0x5, 0           	MOVWF	r0x05
000af6   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000af8   6e04     movwf   0x4, 0           	MOVWF	r0x04
000afa   0e80     movlw   0x80             	MOVLW	0x80
000afc   6e06     movwf   0x6, 0           	MOVWF	r0x06
000afe   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000b00   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b02   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000b04   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b06   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000b08   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b0a   ec8d     call    0x4d1a, 0        	CALL	_usart_puts
000b0c   f026
000b0e   0e03     movlw   0x3              	MOVLW	0x03
000b10   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	387; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000b12   6a04     clrf    0x4, 0           	CLRF	r0x04
000b14   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00186_DS_:
000b16   ec34     call    0x5068, 0        	CALL	_fifo_in_use
000b18   f028
000b1a   6e06     movwf   0x6, 0           	MOVWF	r0x06
000b1c   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
000b1e   f007
000b20   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000b22   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000b24   e102     bnz     0xb2a            	BNZ	_00349_DS_
000b26   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000b28   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00349_DS_:
000b2a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
000b2c   d04c     bra     0xbc6            	BRA	_00149_DS_
                                           ;	.line	389; meter_logger.c	fifo_get(&sub_cmd);
000b2e   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000b30   6e07     movwf   0x7, 0           	MOVWF	r0x07
000b32   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
000b34   6e06     movwf   0x6, 0           	MOVWF	r0x06
000b36   0e80     movlw   0x80             	MOVLW	0x80
000b38   6e08     movwf   0x8, 0           	MOVWF	r0x08
000b3a   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000b3c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b3e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000b40   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b42   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000b44   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b46   eca1     call    0x4142, 0        	CALL	_fifo_get
000b48   f020
000b4a   0e03     movlw   0x3              	MOVLW	0x03
000b4c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	391; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
000b4e   c551     movff   0x551, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
000b50   f006
000b52   6a07     clrf    0x7, 0           	CLRF	r0x07
000b54   0e00     movlw   0                	MOVLW	UPPER(___str_5)
000b56   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000b58   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_5)
000b5a   6e09     movwf   0x9, 0           	MOVWF	r0x09
000b5c   0e84     movlw   0x84             	MOVLW	LOW(___str_5)
000b5e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000b60   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000b62   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
000b64   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000b66   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
000b68   0e80     movlw   0x80             	MOVLW	0x80
000b6a   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
000b6c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000b6e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b70   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000b72   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b74   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000b76   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b78   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000b7a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b7c   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000b7e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b80   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000b82   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b84   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000b86   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b88   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000b8a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b8c   ec18     call    0x4630, 0        	CALL	_sprintf
000b8e   f023
000b90   0e08     movlw   0x8              	MOVLW	0x08
000b92   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	392; meter_logger.c	usart_puts(debug_buffer);
000b94   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000b96   6e07     movwf   0x7, 0           	MOVWF	r0x07
000b98   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000b9a   6e06     movwf   0x6, 0           	MOVWF	r0x06
000b9c   0e80     movlw   0x80             	MOVLW	0x80
000b9e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000ba0   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000ba2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ba4   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000ba6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ba8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000baa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bac   ec8d     call    0x4d1a, 0        	CALL	_usart_puts
000bae   f026
000bb0   0e03     movlw   0x3              	MOVLW	0x03
000bb2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000bb4   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	394; meter_logger.c	fifo_put(sub_cmd);
000bb6   5151     movf    0x51, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000bb8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bba   ecfd     call    0x43fa, 0        	CALL	_fifo_put
000bbc   f021
000bbe   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	387; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000bc0   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000bc2   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000bc4   d7a8     bra     0xb16            	BRA	_00186_DS_
                                           _00149_DS_:
                                           ;	.line	396; meter_logger.c	sprintf(debug_buffer, "\n\r");
000bc6   0e00     movlw   0                	MOVLW	UPPER(___str_6)
000bc8   6e06     movwf   0x6, 0           	MOVWF	r0x06
000bca   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_6)
000bcc   6e05     movwf   0x5, 0           	MOVWF	r0x05
000bce   0e88     movlw   0x88             	MOVLW	LOW(___str_6)
000bd0   6e04     movwf   0x4, 0           	MOVWF	r0x04
000bd2   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000bd4   6e08     movwf   0x8, 0           	MOVWF	r0x08
000bd6   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000bd8   6e07     movwf   0x7, 0           	MOVWF	r0x07
000bda   0e80     movlw   0x80             	MOVLW	0x80
000bdc   6e09     movwf   0x9, 0           	MOVWF	r0x09
000bde   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000be0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000be2   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000be4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000be6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000be8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bea   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000bec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bee   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000bf0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bf2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000bf4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bf6   ec18     call    0x4630, 0        	CALL	_sprintf
000bf8   f023
000bfa   0e06     movlw   0x6              	MOVLW	0x06
000bfc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	397; meter_logger.c	usart_puts(debug_buffer);
000bfe   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000c00   6e05     movwf   0x5, 0           	MOVWF	r0x05
000c02   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000c04   6e04     movwf   0x4, 0           	MOVWF	r0x04
000c06   0e80     movlw   0x80             	MOVLW	0x80
000c08   6e06     movwf   0x6, 0           	MOVWF	r0x06
000c0a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000c0c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c0e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000c10   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c12   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000c14   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c16   ec8d     call    0x4d1a, 0        	CALL	_usart_puts
000c18   f026
000c1a   0e03     movlw   0x3              	MOVLW	0x03
000c1c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	399; meter_logger.c	rs232_7e1_tx_enable(TIMER0_RS232_300);
000c1e   0ee6     movlw   0xe6             	MOVLW	0xe6
000c20   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c22   0e1b     movlw   0x1b             	MOVLW	0x1b
000c24   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c26   ecbb     call    0x4f76, 0        	CALL	_rs232_7e1_tx_enable
000c28   f027
000c2a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c2c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00150_DS_:
                                           ;	.line	400; meter_logger.c	while (fifo_get(&sub_cmd)) {
000c2e   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000c30   6e05     movwf   0x5, 0           	MOVWF	r0x05
000c32   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
000c34   6e04     movwf   0x4, 0           	MOVWF	r0x04
000c36   0e80     movlw   0x80             	MOVLW	0x80
000c38   6e06     movwf   0x6, 0           	MOVWF	r0x06
000c3a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000c3c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c3e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000c40   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c42   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000c44   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c46   eca1     call    0x4142, 0        	CALL	_fifo_get
000c48   f020
000c4a   6e04     movwf   0x4, 0           	MOVWF	r0x04
000c4c   0e03     movlw   0x3              	MOVLW	0x03
000c4e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000c50   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000c52   e00f     bz      0xc72            	BZ	_00152_DS_
000c54   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	401; meter_logger.c	rs232_7e1_tx_byte(sub_cmd);
000c56   5151     movf    0x51, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000c58   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c5a   ec85     call    0x510a, 0        	CALL	_rs232_7e1_tx_byte
000c5c   f028
000c5e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	402; meter_logger.c	sleep_ms(RS232_TX_SLEEP);
000c60   0e00     movlw   0                	MOVLW	0x00
000c62   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c64   0e0c     movlw   0xc              	MOVLW	0x0c
000c66   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c68   ecb6     call    0x4b6c, 0        	CALL	_sleep_ms
000c6a   f025
000c6c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c6e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c70   d7de     bra     0xc2e            	BRA	_00150_DS_
                                           _00152_DS_:
                                           ;	.line	404; meter_logger.c	rs232_7e1_tx_disable();
000c72   ecd9     call    0x53b2, 0        	CALL	_rs232_7e1_tx_disable
000c74   f029
                                           ;	.line	410; meter_logger.c	rs232_7e1_rx_enable(TIMER0_RS232_300);
000c76   0ee6     movlw   0xe6             	MOVLW	0xe6
000c78   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c7a   0e1b     movlw   0x1b             	MOVLW	0x1b
000c7c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c7e   ec5b     call    0x4eb6, 0        	CALL	_rs232_7e1_rx_enable
000c80   f027
000c82   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c84   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	411; meter_logger.c	last_fifo_size = 0;
000c86   6a00     clrf    0, 0             	CLRF	r0x00
000c88   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	412; meter_logger.c	sleep_ms(1500);							// sleep 1500 ms to let some data come in
000c8a   0e05     movlw   0x5              	MOVLW	0x05
000c8c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c8e   0edc     movlw   0xdc             	MOVLW	0xdc
000c90   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c92   ecb6     call    0x4b6c, 0        	CALL	_sleep_ms
000c94   f025
000c96   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c98   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	413; meter_logger.c	fifo_size = fifo_in_use();
000c9a   ec34     call    0x5068, 0        	CALL	_fifo_in_use
000c9c   f028
000c9e   6e02     movwf   0x2, 0           	MOVWF	r0x02
000ca0   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000ca2   f003
                                           _00153_DS_:
                                           ;	.line	415; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000ca4   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000ca6   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000ca8   e102     bnz     0xcae            	BNZ	_00350_DS_
000caa   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000cac   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00350_DS_:
000cae   e212     bc      0xcd4            	BC	_00155_DS_
                                           ;	.line	416; meter_logger.c	last_fifo_size = fifo_size;
000cb0   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000cb2   f000
000cb4   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000cb6   f001
                                           ;	.line	417; meter_logger.c	sleep_ms(600);						// return data when no data for 600 ms
000cb8   0e02     movlw   0x2              	MOVLW	0x02
000cba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cbc   0e58     movlw   0x58             	MOVLW	0x58
000cbe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cc0   ecb6     call    0x4b6c, 0        	CALL	_sleep_ms
000cc2   f025
000cc4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000cc6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	418; meter_logger.c	fifo_size = fifo_in_use();
000cc8   ec34     call    0x5068, 0        	CALL	_fifo_in_use
000cca   f028
000ccc   6e02     movwf   0x2, 0           	MOVWF	r0x02
000cce   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000cd0   f003
000cd2   d7e8     bra     0xca4            	BRA	_00153_DS_
                                           _00155_DS_:
                                           ;	.line	421; meter_logger.c	rs232_7e1_rx_disable();
000cd4   ecce     call    0x539c, 0        	CALL	_rs232_7e1_rx_disable
000cd6   f029
                                           ;	.line	428; meter_logger.c	sprintf(debug_buffer, "<- ");
000cd8   0e00     movlw   0                	MOVLW	UPPER(___str_4)
000cda   6e02     movwf   0x2, 0           	MOVWF	r0x02
000cdc   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_4)
000cde   6e01     movwf   0x1, 0           	MOVWF	r0x01
000ce0   0e80     movlw   0x80             	MOVLW	LOW(___str_4)
000ce2   6e00     movwf   0, 0             	MOVWF	r0x00
000ce4   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000ce6   6e04     movwf   0x4, 0           	MOVWF	r0x04
000ce8   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000cea   6e03     movwf   0x3, 0           	MOVWF	r0x03
000cec   0e80     movlw   0x80             	MOVLW	0x80
000cee   6e05     movwf   0x5, 0           	MOVWF	r0x05
000cf0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000cf2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cf4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000cf6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cf8   5000     movf    0, 0, 0          	MOVF	r0x00, W
000cfa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cfc   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000cfe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d00   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000d02   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d04   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000d06   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d08   ec18     call    0x4630, 0        	CALL	_sprintf
000d0a   f023
000d0c   0e06     movlw   0x6              	MOVLW	0x06
000d0e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	429; meter_logger.c	usart_puts(debug_buffer);
000d10   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000d12   6e01     movwf   0x1, 0           	MOVWF	r0x01
000d14   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000d16   6e00     movwf   0, 0             	MOVWF	r0x00
000d18   0e80     movlw   0x80             	MOVLW	0x80
000d1a   6e02     movwf   0x2, 0           	MOVWF	r0x02
000d1c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000d1e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d20   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000d22   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d24   5000     movf    0, 0, 0          	MOVF	r0x00, W
000d26   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d28   ec8d     call    0x4d1a, 0        	CALL	_usart_puts
000d2a   f026
000d2c   0e03     movlw   0x3              	MOVLW	0x03
000d2e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	430; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000d30   6a00     clrf    0, 0             	CLRF	r0x00
000d32   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00189_DS_:
000d34   ec34     call    0x5068, 0        	CALL	_fifo_in_use
000d36   f028
000d38   6e02     movwf   0x2, 0           	MOVWF	r0x02
000d3a   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000d3c   f003
000d3e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000d40   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000d42   e102     bnz     0xd48            	BNZ	_00351_DS_
000d44   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000d46   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00351_DS_:
000d48   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
000d4a   d04c     bra     0xde4            	BRA	_00156_DS_
                                           ;	.line	432; meter_logger.c	fifo_get(&sub_cmd);
000d4c   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000d4e   6e03     movwf   0x3, 0           	MOVWF	r0x03
000d50   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
000d52   6e02     movwf   0x2, 0           	MOVWF	r0x02
000d54   0e80     movlw   0x80             	MOVLW	0x80
000d56   6e04     movwf   0x4, 0           	MOVWF	r0x04
000d58   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000d5a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d5c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000d5e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d60   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000d62   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d64   eca1     call    0x4142, 0        	CALL	_fifo_get
000d66   f020
000d68   0e03     movlw   0x3              	MOVLW	0x03
000d6a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	434; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
000d6c   c551     movff   0x551, 0x2       	MOVFF	_main_sub_cmd_1_90, r0x02
000d6e   f002
000d70   6a03     clrf    0x3, 0           	CLRF	r0x03
000d72   0e00     movlw   0                	MOVLW	UPPER(___str_5)
000d74   6e06     movwf   0x6, 0           	MOVWF	r0x06
000d76   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_5)
000d78   6e05     movwf   0x5, 0           	MOVWF	r0x05
000d7a   0e84     movlw   0x84             	MOVLW	LOW(___str_5)
000d7c   6e04     movwf   0x4, 0           	MOVWF	r0x04
000d7e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000d80   6e08     movwf   0x8, 0           	MOVWF	r0x08
000d82   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000d84   6e07     movwf   0x7, 0           	MOVWF	r0x07
000d86   0e80     movlw   0x80             	MOVLW	0x80
000d88   6e09     movwf   0x9, 0           	MOVWF	r0x09
000d8a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000d8c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d8e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000d90   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d92   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000d94   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d96   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000d98   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d9a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000d9c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d9e   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000da0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000da2   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000da4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000da6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000da8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000daa   ec18     call    0x4630, 0        	CALL	_sprintf
000dac   f023
000dae   0e08     movlw   0x8              	MOVLW	0x08
000db0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	435; meter_logger.c	usart_puts(debug_buffer);
000db2   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000db4   6e03     movwf   0x3, 0           	MOVWF	r0x03
000db6   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000db8   6e02     movwf   0x2, 0           	MOVWF	r0x02
000dba   0e80     movlw   0x80             	MOVLW	0x80
000dbc   6e04     movwf   0x4, 0           	MOVWF	r0x04
000dbe   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000dc0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000dc2   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000dc4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000dc6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000dc8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000dca   ec8d     call    0x4d1a, 0        	CALL	_usart_puts
000dcc   f026
000dce   0e03     movlw   0x3              	MOVLW	0x03
000dd0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000dd2   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	437; meter_logger.c	fifo_put(sub_cmd);
000dd4   5151     movf    0x51, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000dd6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000dd8   ecfd     call    0x43fa, 0        	CALL	_fifo_put
000dda   f021
000ddc   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	430; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000dde   4a00     infsnz  0, 0x1, 0        	INFSNZ	r0x00, F
000de0   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
000de2   d7a8     bra     0xd34            	BRA	_00189_DS_
                                           _00156_DS_:
                                           ;	.line	439; meter_logger.c	sprintf(debug_buffer, "\n\r");
000de4   0e00     movlw   0                	MOVLW	UPPER(___str_6)
000de6   6e02     movwf   0x2, 0           	MOVWF	r0x02
000de8   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_6)
000dea   6e01     movwf   0x1, 0           	MOVWF	r0x01
000dec   0e88     movlw   0x88             	MOVLW	LOW(___str_6)
000dee   6e00     movwf   0, 0             	MOVWF	r0x00
000df0   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000df2   6e04     movwf   0x4, 0           	MOVWF	r0x04
000df4   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000df6   6e03     movwf   0x3, 0           	MOVWF	r0x03
000df8   0e80     movlw   0x80             	MOVLW	0x80
000dfa   6e05     movwf   0x5, 0           	MOVWF	r0x05
000dfc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000dfe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e00   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000e02   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e04   5000     movf    0, 0, 0          	MOVF	r0x00, W
000e06   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e08   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000e0a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e0c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000e0e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e10   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000e12   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e14   ec18     call    0x4630, 0        	CALL	_sprintf
000e16   f023
000e18   0e06     movlw   0x6              	MOVLW	0x06
000e1a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	440; meter_logger.c	usart_puts(debug_buffer);
000e1c   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000e1e   6e01     movwf   0x1, 0           	MOVWF	r0x01
000e20   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000e22   6e00     movwf   0, 0             	MOVWF	r0x00
000e24   0e80     movlw   0x80             	MOVLW	0x80
000e26   6e02     movwf   0x2, 0           	MOVWF	r0x02
000e28   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000e2a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e2c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000e2e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e30   5000     movf    0, 0, 0          	MOVF	r0x00, W
000e32   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e34   ec8d     call    0x4d1a, 0        	CALL	_usart_puts
000e36   f026
000e38   0e03     movlw   0x3              	MOVLW	0x03
000e3a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	442; meter_logger.c	if (fifo_in_use()) {
000e3c   ec34     call    0x5068, 0        	CALL	_fifo_in_use
000e3e   f028
000e40   6e00     movwf   0, 0             	MOVWF	r0x00
000e42   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
000e44   f001
000e46   5000     movf    0, 0, 0          	MOVF	r0x00, W
000e48   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
000e4a   e027     bz      0xe9a            	BZ	_00161_DS_
                                           ;	.line	444; meter_logger.c	fsk_tx_enable();
000e4c   ec6b     call    0x50d6, 0        	CALL	_fsk_tx_enable
000e4e   f028
                                           _00157_DS_:
                                           ;	.line	445; meter_logger.c	while (fifo_get(&sub_cmd)) {
000e50   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000e52   6e01     movwf   0x1, 0           	MOVWF	r0x01
000e54   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
000e56   6e00     movwf   0, 0             	MOVWF	r0x00
000e58   0e80     movlw   0x80             	MOVLW	0x80
000e5a   6e02     movwf   0x2, 0           	MOVWF	r0x02
000e5c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000e5e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e60   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000e62   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e64   5000     movf    0, 0, 0          	MOVF	r0x00, W
000e66   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e68   eca1     call    0x4142, 0        	CALL	_fifo_get
000e6a   f020
000e6c   6e00     movwf   0, 0             	MOVWF	r0x00
000e6e   0e03     movlw   0x3              	MOVLW	0x03
000e70   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000e72   5000     movf    0, 0, 0          	MOVF	r0x00, W
000e74   e00f     bz      0xe94            	BZ	_00159_DS_
000e76   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	446; meter_logger.c	fsk_tx_byte(sub_cmd);
000e78   5151     movf    0x51, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000e7a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e7c   ecfc     call    0x51f8, 0        	CALL	_fsk_tx_byte
000e7e   f028
000e80   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	447; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000e82   0e00     movlw   0                	MOVLW	0x00
000e84   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e86   0e04     movlw   0x4              	MOVLW	0x04
000e88   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e8a   ecb6     call    0x4b6c, 0        	CALL	_sleep_ms
000e8c   f025
000e8e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000e90   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000e92   d7de     bra     0xe50            	BRA	_00157_DS_
                                           _00159_DS_:
                                           ;	.line	449; meter_logger.c	fsk_tx_disable();
000e94   ecc3     call    0x5386, 0        	CALL	_fsk_tx_disable
000e96   f029
000e98   d011     bra     0xebc            	BRA	_00162_DS_
                                           _00161_DS_:
                                           ;	.line	457; meter_logger.c	fsk_tx_enable();
000e9a   ec6b     call    0x50d6, 0        	CALL	_fsk_tx_enable
000e9c   f028
                                           ;	.line	458; meter_logger.c	fsk_tx_byte(0x0d);
000e9e   0e0d     movlw   0xd              	MOVLW	0x0d
000ea0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ea2   ecfc     call    0x51f8, 0        	CALL	_fsk_tx_byte
000ea4   f028
000ea6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	459; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000ea8   0e00     movlw   0                	MOVLW	0x00
000eaa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000eac   0e04     movlw   0x4              	MOVLW	0x04
000eae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000eb0   ecb6     call    0x4b6c, 0        	CALL	_sleep_ms
000eb2   f025
000eb4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000eb6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	460; meter_logger.c	fsk_tx_disable();
000eb8   ecc3     call    0x5386, 0        	CALL	_fsk_tx_disable
000eba   f029
                                           _00162_DS_:
                                           ;	.line	465; meter_logger.c	fsk_rx_enable();
000ebc   ec02     call    0x4e04, 0        	CALL	_fsk_rx_enable
000ebe   f027
                                           ;	.line	466; meter_logger.c	break;
000ec0   d006     bra     0xece            	BRA	_00165_DS_
                                           _00163_DS_:
                                           ;	.line	468; meter_logger.c	fsk_rx_disable();
000ec2   ec05     call    0x540a, 0        	CALL	_fsk_rx_disable
000ec4   f02a
                                           ;	.line	469; meter_logger.c	get_battery_level();
000ec6   ecd6     call    0x37ac, 0        	CALL	_get_battery_level
000ec8   f01b
                                           ;	.line	470; meter_logger.c	fsk_rx_enable();
000eca   ec02     call    0x4e04, 0        	CALL	_fsk_rx_enable
000ecc   f027
                                           _00165_DS_:
                                           ;	.line	475; meter_logger.c	while (fifo_in_use()) {
000ece   ec34     call    0x5068, 0        	CALL	_fifo_in_use
000ed0   f028
000ed2   6e00     movwf   0, 0             	MOVWF	r0x00
000ed4   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
000ed6   f001
000ed8   5000     movf    0, 0, 0          	MOVF	r0x00, W
000eda   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
000edc   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
000ede   efab     goto    0x156            	GOTO	_00171_DS_
000ee0   f000
                                           ;	.line	476; meter_logger.c	fifo_get(&sub_cmd);
000ee2   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000ee4   6e01     movwf   0x1, 0           	MOVWF	r0x01
000ee6   0e51     movlw   0x51             	MOVLW	LOW(_main_sub_cmd_1_90)
000ee8   6e00     movwf   0, 0             	MOVWF	r0x00
000eea   0e80     movlw   0x80             	MOVLW	0x80
000eec   6e02     movwf   0x2, 0           	MOVWF	r0x02
000eee   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000ef0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ef2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000ef4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ef6   5000     movf    0, 0, 0          	MOVF	r0x00, W
000ef8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000efa   eca1     call    0x4142, 0        	CALL	_fifo_get
000efc   f020
000efe   0e03     movlw   0x3              	MOVLW	0x03
000f00   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000f02   d7e5     bra     0xece            	BRA	_00165_DS_
000f04   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger___debug2	code
                                           __debug2:
                                           ;	.line	4665; meter_logger.c	void _debug2() {
004856   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004858   ffe5
00485a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00485c   ffd9
                                           ;	.line	4666; meter_logger.c	DEBUG2_PIN = 0x1;
00485e   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
004860   0000     nop                      	nop
004862   0000     nop                      	nop
004864   0000     nop                      	nop
004866   0000     nop                      	nop
004868   0000     nop                      	nop
00486a   0000     nop                      	nop
00486c   0000     nop                      	nop
00486e   0000     nop                      	nop
004870   0000     nop                      	nop
004872   0000     nop                      	nop
004874   0000     nop                      	nop
004876   0000     nop                      	nop
004878   0000     nop                      	nop
00487a   0000     nop                      	nop
00487c   0000     nop                      	nop
00487e   0000     nop                      	nop
004880   0000     nop                      	nop
004882   0000     nop                      	nop
004884   0000     nop                      	nop
004886   0000     nop                      	nop
004888   0000     nop                      	nop
00488a   0000     nop                      	nop
00488c   0000     nop                      	nop
00488e   0000     nop                      	nop
004890   0000     nop                      	nop
004892   0000     nop                      	nop
004894   0000     nop                      	nop
004896   0000     nop                      	nop
004898   0000     nop                      	nop
00489a   0000     nop                      	nop
00489c   0000     nop                      	nop
00489e   0000     nop                      	nop
0048a0   0000     nop                      	nop
0048a2   0000     nop                      	nop
0048a4   0000     nop                      	nop
0048a6   0000     nop                      	nop
0048a8   0000     nop                      	nop
0048aa   0000     nop                      	nop
0048ac   0000     nop                      	nop
0048ae   0000     nop                      	nop
0048b0   0000     nop                      	nop
0048b2   0000     nop                      	nop
0048b4   0000     nop                      	nop
0048b6   0000     nop                      	nop
0048b8   0000     nop                      	nop
                                           	
                                           ;	.line	4714; meter_logger.c	DEBUG2_PIN = 0x0;
0048ba   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
0048bc   0000     nop                      	nop
0048be   0000     nop                      	nop
0048c0   0000     nop                      	nop
0048c2   0000     nop                      	nop
0048c4   0000     nop                      	nop
0048c6   0000     nop                      	nop
0048c8   0000     nop                      	nop
0048ca   0000     nop                      	nop
0048cc   0000     nop                      	nop
0048ce   0000     nop                      	nop
0048d0   0000     nop                      	nop
0048d2   0000     nop                      	nop
0048d4   0000     nop                      	nop
0048d6   0000     nop                      	nop
0048d8   0000     nop                      	nop
0048da   0000     nop                      	nop
0048dc   0000     nop                      	nop
0048de   0000     nop                      	nop
0048e0   0000     nop                      	nop
0048e2   0000     nop                      	nop
0048e4   0000     nop                      	nop
0048e6   0000     nop                      	nop
0048e8   0000     nop                      	nop
0048ea   0000     nop                      	nop
0048ec   0000     nop                      	nop
0048ee   0000     nop                      	nop
0048f0   0000     nop                      	nop
0048f2   0000     nop                      	nop
0048f4   0000     nop                      	nop
0048f6   0000     nop                      	nop
0048f8   0000     nop                      	nop
0048fa   0000     nop                      	nop
0048fc   0000     nop                      	nop
0048fe   0000     nop                      	nop
004900   0000     nop                      	nop
004902   0000     nop                      	nop
004904   0000     nop                      	nop
004906   0000     nop                      	nop
004908   0000     nop                      	nop
00490a   0000     nop                      	nop
00490c   0000     nop                      	nop
00490e   0000     nop                      	nop
004910   0000     nop                      	nop
004912   0000     nop                      	nop
004914   0000     nop                      	nop
                                           	
004916   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004918   ffd9
00491a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger___debug	code
                                           __debug:
                                           ;	.line	4565; meter_logger.c	void _debug() {
00491c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00491e   ffe5
004920   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004922   ffd9
                                           ;	.line	4566; meter_logger.c	DEBUG_PIN = 0x1;
004924   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
004926   0000     nop                      	nop
004928   0000     nop                      	nop
00492a   0000     nop                      	nop
00492c   0000     nop                      	nop
00492e   0000     nop                      	nop
004930   0000     nop                      	nop
004932   0000     nop                      	nop
004934   0000     nop                      	nop
004936   0000     nop                      	nop
004938   0000     nop                      	nop
00493a   0000     nop                      	nop
00493c   0000     nop                      	nop
00493e   0000     nop                      	nop
004940   0000     nop                      	nop
004942   0000     nop                      	nop
004944   0000     nop                      	nop
004946   0000     nop                      	nop
004948   0000     nop                      	nop
00494a   0000     nop                      	nop
00494c   0000     nop                      	nop
00494e   0000     nop                      	nop
004950   0000     nop                      	nop
004952   0000     nop                      	nop
004954   0000     nop                      	nop
004956   0000     nop                      	nop
004958   0000     nop                      	nop
00495a   0000     nop                      	nop
00495c   0000     nop                      	nop
00495e   0000     nop                      	nop
004960   0000     nop                      	nop
004962   0000     nop                      	nop
004964   0000     nop                      	nop
004966   0000     nop                      	nop
004968   0000     nop                      	nop
00496a   0000     nop                      	nop
00496c   0000     nop                      	nop
00496e   0000     nop                      	nop
004970   0000     nop                      	nop
004972   0000     nop                      	nop
004974   0000     nop                      	nop
004976   0000     nop                      	nop
004978   0000     nop                      	nop
00497a   0000     nop                      	nop
00497c   0000     nop                      	nop
00497e   0000     nop                      	nop
                                           	
                                           ;	.line	4614; meter_logger.c	DEBUG_PIN = 0x0;
004980   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
004982   0000     nop                      	nop
004984   0000     nop                      	nop
004986   0000     nop                      	nop
004988   0000     nop                      	nop
00498a   0000     nop                      	nop
00498c   0000     nop                      	nop
00498e   0000     nop                      	nop
004990   0000     nop                      	nop
004992   0000     nop                      	nop
004994   0000     nop                      	nop
004996   0000     nop                      	nop
004998   0000     nop                      	nop
00499a   0000     nop                      	nop
00499c   0000     nop                      	nop
00499e   0000     nop                      	nop
0049a0   0000     nop                      	nop
0049a2   0000     nop                      	nop
0049a4   0000     nop                      	nop
0049a6   0000     nop                      	nop
0049a8   0000     nop                      	nop
0049aa   0000     nop                      	nop
0049ac   0000     nop                      	nop
0049ae   0000     nop                      	nop
0049b0   0000     nop                      	nop
0049b2   0000     nop                      	nop
0049b4   0000     nop                      	nop
0049b6   0000     nop                      	nop
0049b8   0000     nop                      	nop
0049ba   0000     nop                      	nop
0049bc   0000     nop                      	nop
0049be   0000     nop                      	nop
0049c0   0000     nop                      	nop
0049c2   0000     nop                      	nop
0049c4   0000     nop                      	nop
0049c6   0000     nop                      	nop
0049c8   0000     nop                      	nop
0049ca   0000     nop                      	nop
0049cc   0000     nop                      	nop
0049ce   0000     nop                      	nop
0049d0   0000     nop                      	nop
0049d2   0000     nop                      	nop
0049d4   0000     nop                      	nop
0049d6   0000     nop                      	nop
0049d8   0000     nop                      	nop
0049da   0000     nop                      	nop
                                           	
0049dc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0049de   ffd9
0049e0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__flash_led	code
                                           _flash_led:
                                           ;	.line	4560; meter_logger.c	void flash_led(unsigned char ms) {
0052ca   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0052cc   ffe5
0052ce   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0052d0   ffd9
0052d2   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0052d4   ffe5
0052d6   0e02     movlw   0x2              	MOVLW	0x02
0052d8   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0052da   f000
                                           ;	.line	4561; meter_logger.c	led_flash.timer = ms;
0052dc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0052de   0105     movlb   0x5              	BANKSEL	(_led_flash + 1)
0052e0   6f4e     movwf   0x4e, 0x1        	MOVWF	(_led_flash + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	4562; meter_logger.c	led_flash.state = LED_FLASH_RUN;
0052e2   6b4d     clrf    0x4d, 0x1        	CLRF	_led_flash, B
0052e4   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0052e6   f000
0052e8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0052ea   ffd9
0052ec   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__get_battery_level	code
                                           _get_battery_level:
                                           ;	.line	4529; meter_logger.c	unsigned int get_battery_level() {
0037ac   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0037ae   ffe5
0037b0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0037b2   ffd9
0037b4   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0037b6   ffe5
0037b8   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0037ba   ffe5
0037bc   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0037be   ffe5
0037c0   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0037c2   ffe5
0037c4   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0037c6   ffe5
0037c8   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0037ca   ffe5
0037cc   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0037ce   ffe5
0037d0   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
0037d2   ffe5
                                           ;	.line	4533; meter_logger.c	adc_open(ADC_CHN_4 , ADC_FOSC_64, ADC_CFG_5A, ADC_FRM_RJUST | ADC_INT_OFF | ADC_VCFG_VDD_VSS);
0037d4   0e80     movlw   0x80             	MOVLW	0x80
0037d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037d8   0e0a     movlw   0xa              	MOVLW	0x0a
0037da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037dc   0e06     movlw   0x6              	MOVLW	0x06
0037de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037e0   0e04     movlw   0x4              	MOVLW	0x04
0037e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037e4   ec4f     call    0x4c9e, 0        	CALL	_adc_open
0037e6   f026
0037e8   0e04     movlw   0x4              	MOVLW	0x04
0037ea   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4535; meter_logger.c	adc_setchannel(ADC_CHN_4);
0037ec   0e04     movlw   0x4              	MOVLW	0x04
0037ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037f0   ec17     call    0x502e, 0        	CALL	_adc_setchannel
0037f2   f028
0037f4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	4536; meter_logger.c	adc_conv();
0037f6   ec0a     call    0x14, 0          	CALL	_adc_conv
0037f8   f000
                                           _01195_DS_:
                                           ;	.line	4537; meter_logger.c	while(adc_busy()) {
0037fa   ec3b     call    0x5476, 0        	CALL	_adc_busy
0037fc   f02a
0037fe   6e00     movwf   0, 0             	MOVWF	r0x00
003800   5000     movf    0, 0, 0          	MOVF	r0x00, W
003802   e1fb     bnz     0x37fa           	BNZ	_01195_DS_
                                           ;	.line	4541; meter_logger.c	dev_id = get_dev_id();
003804   ecc9     call    0x4d92, 0        	CALL	_get_dev_id
003806   f026
003808   6e00     movwf   0, 0             	MOVWF	r0x00
00380a   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00380c   f001
                                           ;	.line	4542; meter_logger.c	if (dev_id == 0x1240) {
00380e   5000     movf    0, 0, 0          	MOVF	r0x00, W
003810   0a40     xorlw   0x40             	XORLW	0x40
003812   e103     bnz     0x381a           	BNZ	_01218_DS_
003814   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003816   0a12     xorlw   0x12             	XORLW	0x12
003818   e001     bz      0x381c           	BZ	_01219_DS_
                                           _01218_DS_:
00381a   d041     bra     0x389e           	BRA	_01202_DS_
                                           _01219_DS_:
                                           ;	.line	4544; meter_logger.c	v_level = (unsigned long)1000 * (unsigned long)adc_read() * (unsigned long)833/(unsigned long)93600;
00381c   ec33     call    0x5466, 0        	CALL	_adc_read
00381e   f02a
003820   6e02     movwf   0x2, 0           	MOVWF	r0x02
003822   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
003824   f003
003826   6ae8     clrf    0xe8, 0          	CLRF	WREG
003828   be03     btfsc   0x3, 0x7, 0      	BTFSC	r0x03, 7
00382a   0eff     movlw   0xff             	MOVLW	0xff
00382c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00382e   6e05     movwf   0x5, 0           	MOVWF	r0x05
003830   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003832   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003834   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003836   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003838   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00383a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00383c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00383e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003840   0e00     movlw   0                	MOVLW	0x00
003842   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003844   0e0c     movlw   0xc              	MOVLW	0x0c
003846   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003848   0eb5     movlw   0xb5             	MOVLW	0xb5
00384a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00384c   0ee8     movlw   0xe8             	MOVLW	0xe8
00384e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003850   eceb     call    0x39d6, 0        	CALL	__mullong
003852   f01c
003854   6e02     movwf   0x2, 0           	MOVWF	r0x02
003856   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
003858   f003
00385a   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
00385c   f004
00385e   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
003860   f005
003862   0e08     movlw   0x8              	MOVLW	0x08
003864   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003866   0e00     movlw   0                	MOVLW	0x00
003868   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00386a   0e01     movlw   0x1              	MOVLW	0x01
00386c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00386e   0e6d     movlw   0x6d             	MOVLW	0x6d
003870   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003872   0ea0     movlw   0xa0             	MOVLW	0xa0
003874   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003876   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003878   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00387a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00387c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00387e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003880   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003882   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003884   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003886   ec8c     call    0x4518, 0        	CALL	__divulong
003888   f022
00388a   6e02     movwf   0x2, 0           	MOVWF	r0x02
00388c   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00388e   f003
003890   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
003892   f004
003894   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
003896   f005
003898   0e08     movlw   0x8              	MOVLW	0x08
00389a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00389c   d054     bra     0x3946           	BRA	_01203_DS_
                                           _01202_DS_:
                                           ;	.line	4546; meter_logger.c	else if (dev_id == 0x2a40) {
00389e   5000     movf    0, 0, 0          	MOVF	r0x00, W
0038a0   0a40     xorlw   0x40             	XORLW	0x40
0038a2   e103     bnz     0x38aa           	BNZ	_01220_DS_
0038a4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0038a6   0a2a     xorlw   0x2a             	XORLW	0x2a
0038a8   e001     bz      0x38ac           	BZ	_01221_DS_
                                           _01220_DS_:
0038aa   d04b     bra     0x3942           	BRA	_01199_DS_
                                           _01221_DS_:
                                           ;	.line	4548; meter_logger.c	v_level = (unsigned long)1000 * (unsigned long)(adc_read() >> 2) * (unsigned long)833/(unsigned long)93600;
0038ac   ec33     call    0x5466, 0        	CALL	_adc_read
0038ae   f02a
0038b0   6e00     movwf   0, 0             	MOVWF	r0x00
0038b2   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0038b4   f001
0038b6   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
0038b8   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
0038ba   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
0038bc   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
0038be   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
0038c0   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
0038c2   6ae8     clrf    0xe8, 0          	CLRF	WREG
0038c4   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0038c6   0eff     movlw   0xff             	MOVLW	0xff
0038c8   6e04     movwf   0x4, 0           	MOVWF	r0x04
0038ca   6e05     movwf   0x5, 0           	MOVWF	r0x05
0038cc   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0038ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038d0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0038d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038d4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0038d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038d8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0038da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038dc   0e00     movlw   0                	MOVLW	0x00
0038de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038e0   0e0c     movlw   0xc              	MOVLW	0x0c
0038e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038e4   0eb5     movlw   0xb5             	MOVLW	0xb5
0038e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038e8   0ee8     movlw   0xe8             	MOVLW	0xe8
0038ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038ec   eceb     call    0x39d6, 0        	CALL	__mullong
0038ee   f01c
0038f0   6e00     movwf   0, 0             	MOVWF	r0x00
0038f2   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0038f4   f001
0038f6   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
0038f8   f004
0038fa   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
0038fc   f005
0038fe   0e08     movlw   0x8              	MOVLW	0x08
003900   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003902   0e00     movlw   0                	MOVLW	0x00
003904   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003906   0e01     movlw   0x1              	MOVLW	0x01
003908   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00390a   0e6d     movlw   0x6d             	MOVLW	0x6d
00390c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00390e   0ea0     movlw   0xa0             	MOVLW	0xa0
003910   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003912   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003914   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003916   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003918   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00391a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00391c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00391e   5000     movf    0, 0, 0          	MOVF	r0x00, W
003920   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003922   ec8c     call    0x4518, 0        	CALL	__divulong
003924   f022
003926   6e00     movwf   0, 0             	MOVWF	r0x00
003928   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00392a   f001
00392c   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
00392e   f004
003930   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
003932   f005
003934   0e08     movlw   0x8              	MOVLW	0x08
003936   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003938   5000     movf    0, 0, 0          	MOVF	r0x00, W
00393a   6e02     movwf   0x2, 0           	MOVWF	r0x02
00393c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00393e   6e03     movwf   0x3, 0           	MOVWF	r0x03
003940   d002     bra     0x3946           	BRA	_01203_DS_
                                           _01199_DS_:
                                           ;	.line	4551; meter_logger.c	v_level = 0;
003942   6a02     clrf    0x2, 0           	CLRF	r0x02
003944   6a03     clrf    0x3, 0           	CLRF	r0x03
                                           _01203_DS_:
                                           ;	.line	4553; meter_logger.c	sprintf(debug_buffer, "Battery: %dmV\n\r", v_level);
003946   0e00     movlw   0                	MOVLW	UPPER(___str_8)
003948   6e04     movwf   0x4, 0           	MOVWF	r0x04
00394a   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_8)
00394c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00394e   0e90     movlw   0x90             	MOVLW	LOW(___str_8)
003950   6e00     movwf   0, 0             	MOVWF	r0x00
003952   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
003954   6e06     movwf   0x6, 0           	MOVWF	r0x06
003956   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
003958   6e05     movwf   0x5, 0           	MOVWF	r0x05
00395a   0e80     movlw   0x80             	MOVLW	0x80
00395c   6e07     movwf   0x7, 0           	MOVWF	r0x07
00395e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003960   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003962   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003964   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003966   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003968   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00396a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00396c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00396e   5000     movf    0, 0, 0          	MOVF	r0x00, W
003970   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003972   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003974   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003976   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003978   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00397a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00397c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00397e   ec18     call    0x4630, 0        	CALL	_sprintf
003980   f023
003982   0e08     movlw   0x8              	MOVLW	0x08
003984   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4554; meter_logger.c	usart_puts(debug_buffer);	
003986   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
003988   6e01     movwf   0x1, 0           	MOVWF	r0x01
00398a   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00398c   6e00     movwf   0, 0             	MOVWF	r0x00
00398e   0e80     movlw   0x80             	MOVLW	0x80
003990   6e04     movwf   0x4, 0           	MOVWF	r0x04
003992   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003994   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003996   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003998   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00399a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00399c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00399e   ec8d     call    0x4d1a, 0        	CALL	_usart_puts
0039a0   f026
0039a2   0e03     movlw   0x3              	MOVLW	0x03
0039a4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4556; meter_logger.c	adc_close();
0039a6   ec46     call    0x548c, 0        	CALL	_adc_close
0039a8   f02a
                                           ;	.line	4557; meter_logger.c	return v_level;
0039aa   c003     movff   0x3, 0xff3       	MOVFF	r0x03, PRODL
0039ac   fff3
0039ae   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0039b0   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
0039b2   f007
0039b4   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
0039b6   f006
0039b8   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0039ba   f005
0039bc   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0039be   f004
0039c0   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0039c2   f003
0039c4   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0039c6   f002
0039c8   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0039ca   f001
0039cc   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0039ce   f000
0039d0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0039d2   ffd9
0039d4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_snoop	code
                                           _fifo_snoop:
                                           ;	.line	4506; meter_logger.c	unsigned char fifo_snoop(unsigned char *c, unsigned int pos) {
003fa2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003fa4   ffe5
003fa6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003fa8   ffd9
003faa   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003fac   ffe5
003fae   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003fb0   ffe5
003fb2   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003fb4   ffe5
003fb6   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003fb8   ffe5
003fba   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003fbc   ffe5
003fbe   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003fc0   ffe5
003fc2   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003fc4   ffe5
003fc6   0e02     movlw   0x2              	MOVLW	0x02
003fc8   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003fca   f000
003fcc   0e03     movlw   0x3              	MOVLW	0x03
003fce   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003fd0   f001
003fd2   0e04     movlw   0x4              	MOVLW	0x04
003fd4   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
003fd6   f002
003fd8   0e05     movlw   0x5              	MOVLW	0x05
003fda   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
003fdc   f003
003fde   0e06     movlw   0x6              	MOVLW	0x06
003fe0   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
003fe2   f004
                                           ;	.line	4507; meter_logger.c	if (fifo_in_use() > (pos)) {
003fe4   ec34     call    0x5068, 0        	CALL	_fifo_in_use
003fe6   f028
003fe8   6e05     movwf   0x5, 0           	MOVWF	r0x05
003fea   cff3     movff   0xff3, 0x6       	MOVFF	PRODL, r0x06
003fec   f006
003fee   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003ff0   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
003ff2   e102     bnz     0x3ff8           	BNZ	_01188_DS_
003ff4   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003ff6   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _01188_DS_:
003ff8   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003ffa   d091     bra     0x411e           	BRA	_01178_DS_
003ffc   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
                                           ;	.line	4508; meter_logger.c	switch (fifo_tail/QUEUE_SIZE) {
003ffe   5146     movf    0x46, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
004000   6e05     movwf   0x5, 0           	MOVWF	r0x05
004002   6a06     clrf    0x6, 0           	CLRF	r0x06
004004   0e00     movlw   0                	MOVLW	0x00
004006   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
004008   e102     bnz     0x400e           	BNZ	_01189_DS_
00400a   0e04     movlw   0x4              	MOVLW	0x04
00400c   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
                                           _01189_DS_:
00400e   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
004010   d084     bra     0x411a           	BRA	_01176_DS_
004012   6afa     clrf    0xfa, 0          	CLRF	PCLATH
004014   6afb     clrf    0xfb, 0          	CLRF	PCLATU
004016   3405     rlcf    0x5, 0, 0        	RLCF	r0x05, W
004018   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00401a   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
00401c   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00401e   0bfc     andlw   0xfc             	ANDLW	0xfc
004020   0f30     addlw   0x30             	ADDLW	LOW(_01190_DS_)
004022   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004024   0e40     movlw   0x40             	MOVLW	HIGH(_01190_DS_)
004026   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
004028   0e00     movlw   0                	MOVLW	UPPER(_01190_DS_)
00402a   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
00402c   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
00402e   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01190_DS_:
004030   ef20     goto    0x4040           	GOTO	_01172_DS_
004032   f020
004034   ef3c     goto    0x4078           	GOTO	_01173_DS_
004036   f020
004038   ef58     goto    0x40b0           	GOTO	_01174_DS_
00403a   f020
00403c   ef74     goto    0x40e8           	GOTO	_01175_DS_
00403e   f020
                                           _01172_DS_:
                                           ;	.line	4510; meter_logger.c	*c = fifo_buffer_0[(fifo_tail + pos) % QUEUE_SIZE];
004040   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004042   0105     movlb   0x5              	BANKSEL	_fifo_tail
004044   2545     addwf   0x45, 0, 0x1     	ADDWF	_fifo_tail, W, B
004046   6e05     movwf   0x5, 0           	MOVWF	r0x05
004048   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
00404a   2146     addwfc  0x46, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
00404c   6e06     movwf   0x6, 0           	MOVWF	r0x06
00404e   6a06     clrf    0x6, 0           	CLRF	r0x06
004050   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
004052   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
004054   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
004056   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
004058   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
00405a   ffe9
00405c   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
00405e   ffea
004060   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
004062   f005
004064   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004066   ffe5
004068   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00406a   ffe9
00406c   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00406e   fff3
004070   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004072   ecfa     call    0x53f4, 0        	CALL	__gptrput1
004074   f029
                                           ;	.line	4511; meter_logger.c	break;
004076   d051     bra     0x411a           	BRA	_01176_DS_
                                           _01173_DS_:
                                           ;	.line	4513; meter_logger.c	*c = fifo_buffer_1[(fifo_tail + pos) % QUEUE_SIZE];
004078   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00407a   0105     movlb   0x5              	BANKSEL	_fifo_tail
00407c   2545     addwf   0x45, 0, 0x1     	ADDWF	_fifo_tail, W, B
00407e   6e05     movwf   0x5, 0           	MOVWF	r0x05
004080   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
004082   2146     addwfc  0x46, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
004084   6e06     movwf   0x6, 0           	MOVWF	r0x06
004086   6a06     clrf    0x6, 0           	CLRF	r0x06
004088   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
00408a   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
00408c   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
00408e   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
004090   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
004092   ffe9
004094   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
004096   ffea
004098   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
00409a   f005
00409c   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00409e   ffe5
0040a0   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0040a2   ffe9
0040a4   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0040a6   fff3
0040a8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0040aa   ecfa     call    0x53f4, 0        	CALL	__gptrput1
0040ac   f029
                                           ;	.line	4514; meter_logger.c	break;
0040ae   d035     bra     0x411a           	BRA	_01176_DS_
                                           _01174_DS_:
                                           ;	.line	4516; meter_logger.c	*c = fifo_buffer_2[(fifo_tail + pos) % QUEUE_SIZE];
0040b0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0040b2   0105     movlb   0x5              	BANKSEL	_fifo_tail
0040b4   2545     addwf   0x45, 0, 0x1     	ADDWF	_fifo_tail, W, B
0040b6   6e05     movwf   0x5, 0           	MOVWF	r0x05
0040b8   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
0040ba   2146     addwfc  0x46, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
0040bc   6e06     movwf   0x6, 0           	MOVWF	r0x06
0040be   6a06     clrf    0x6, 0           	CLRF	r0x06
0040c0   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
0040c2   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
0040c4   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
0040c6   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0040c8   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
0040ca   ffe9
0040cc   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
0040ce   ffea
0040d0   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
0040d2   f005
0040d4   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0040d6   ffe5
0040d8   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0040da   ffe9
0040dc   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0040de   fff3
0040e0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0040e2   ecfa     call    0x53f4, 0        	CALL	__gptrput1
0040e4   f029
                                           ;	.line	4517; meter_logger.c	break;
0040e6   d019     bra     0x411a           	BRA	_01176_DS_
                                           _01175_DS_:
0040e8   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4519; meter_logger.c	*c = fifo_buffer_3[(fifo_tail + pos) % QUEUE_SIZE];
0040ea   5145     movf    0x45, 0, 0x1     	MOVF	_fifo_tail, W, B
0040ec   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
                                           ; removed redundant BANKSEL
0040ee   5146     movf    0x46, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
0040f0   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0040f2   6a04     clrf    0x4, 0           	CLRF	r0x04
0040f4   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
0040f6   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
0040f8   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
0040fa   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0040fc   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0040fe   ffe9
004100   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
004102   ffea
004104   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
004106   f003
004108   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00410a   ffe5
00410c   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00410e   ffe9
004110   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
004112   fff3
004114   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004116   ecfa     call    0x53f4, 0        	CALL	__gptrput1
004118   f029
                                           _01176_DS_:
                                           ;	.line	4522; meter_logger.c	return 1;
00411a   0e01     movlw   0x1              	MOVLW	0x01
00411c   d001     bra     0x4120           	BRA	_01180_DS_
                                           _01178_DS_:
                                           ;	.line	4525; meter_logger.c	return 0;
00411e   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _01180_DS_:
004120   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
004122   f006
004124   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
004126   f005
004128   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00412a   f004
00412c   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00412e   f003
004130   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004132   f002
004134   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004136   f001
004138   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00413a   f000
00413c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00413e   ffd9
004140   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_get	code
                                           _fifo_get:
                                           ;	.line	4478; meter_logger.c	unsigned char fifo_get(unsigned char *c) {
004142   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004144   ffe5
004146   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004148   ffd9
00414a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00414c   ffe5
00414e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004150   ffe5
004152   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004154   ffe5
004156   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004158   ffe5
00415a   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00415c   ffe5
00415e   0e02     movlw   0x2              	MOVLW	0x02
004160   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004162   f000
004164   0e03     movlw   0x3              	MOVLW	0x03
004166   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004168   f001
00416a   0e04     movlw   0x4              	MOVLW	0x04
00416c   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
00416e   f002
                                           ;	.line	4479; meter_logger.c	if (fifo_in_use() != 0) {
004170   ec34     call    0x5068, 0        	CALL	_fifo_in_use
004172   f028
004174   6e03     movwf   0x3, 0           	MOVWF	r0x03
004176   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
004178   f004
00417a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00417c   1004     iorwf   0x4, 0, 0        	IORWF	r0x04, W
00417e   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
004180   d091     bra     0x42a4           	BRA	_01147_DS_
004182   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
                                           ;	.line	4480; meter_logger.c	switch (fifo_tail/QUEUE_SIZE) {
004184   5146     movf    0x46, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
004186   6e03     movwf   0x3, 0           	MOVWF	r0x03
004188   6a04     clrf    0x4, 0           	CLRF	r0x04
00418a   0e00     movlw   0                	MOVLW	0x00
00418c   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
00418e   e102     bnz     0x4194           	BNZ	_01160_DS_
004190   0e04     movlw   0x4              	MOVLW	0x04
004192   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _01160_DS_:
004194   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
004196   d076     bra     0x4284           	BRA	_01143_DS_
004198   6afa     clrf    0xfa, 0          	CLRF	PCLATH
00419a   6afb     clrf    0xfb, 0          	CLRF	PCLATU
00419c   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
00419e   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0041a0   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
0041a2   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0041a4   0bfc     andlw   0xfc             	ANDLW	0xfc
0041a6   0fb6     addlw   0xb6             	ADDLW	LOW(_01161_DS_)
0041a8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0041aa   0e41     movlw   0x41             	MOVLW	HIGH(_01161_DS_)
0041ac   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
0041ae   0e00     movlw   0                	MOVLW	UPPER(_01161_DS_)
0041b0   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0041b2   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0041b4   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01161_DS_:
0041b6   efe3     goto    0x41c6           	GOTO	_01139_DS_
0041b8   f020
0041ba   effb     goto    0x41f6           	GOTO	_01140_DS_
0041bc   f020
0041be   ef13     goto    0x4226           	GOTO	_01141_DS_
0041c0   f021
0041c2   ef2b     goto    0x4256           	GOTO	_01142_DS_
0041c4   f021
                                           _01139_DS_:
0041c6   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4482; meter_logger.c	*c = fifo_buffer_0[fifo_tail % QUEUE_SIZE];
0041c8   5145     movf    0x45, 0, 0x1     	MOVF	_fifo_tail, W, B
0041ca   6e03     movwf   0x3, 0           	MOVWF	r0x03
0041cc   6a04     clrf    0x4, 0           	CLRF	r0x04
0041ce   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
0041d0   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
0041d2   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
0041d4   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0041d6   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0041d8   ffe9
0041da   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0041dc   ffea
0041de   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
0041e0   f003
0041e2   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0041e4   ffe5
0041e6   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0041e8   ffe9
0041ea   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0041ec   fff3
0041ee   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0041f0   ecfa     call    0x53f4, 0        	CALL	__gptrput1
0041f2   f029
                                           ;	.line	4483; meter_logger.c	break;
0041f4   d047     bra     0x4284           	BRA	_01143_DS_
                                           _01140_DS_:
0041f6   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4485; meter_logger.c	*c = fifo_buffer_1[fifo_tail % QUEUE_SIZE];
0041f8   5145     movf    0x45, 0, 0x1     	MOVF	_fifo_tail, W, B
0041fa   6e03     movwf   0x3, 0           	MOVWF	r0x03
0041fc   6a04     clrf    0x4, 0           	CLRF	r0x04
0041fe   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
004200   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
004202   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
004204   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
004206   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
004208   ffe9
00420a   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
00420c   ffea
00420e   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
004210   f003
004212   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004214   ffe5
004216   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004218   ffe9
00421a   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00421c   fff3
00421e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004220   ecfa     call    0x53f4, 0        	CALL	__gptrput1
004222   f029
                                           ;	.line	4486; meter_logger.c	break;
004224   d02f     bra     0x4284           	BRA	_01143_DS_
                                           _01141_DS_:
004226   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4488; meter_logger.c	*c = fifo_buffer_2[fifo_tail % QUEUE_SIZE];
004228   5145     movf    0x45, 0, 0x1     	MOVF	_fifo_tail, W, B
00422a   6e03     movwf   0x3, 0           	MOVWF	r0x03
00422c   6a04     clrf    0x4, 0           	CLRF	r0x04
00422e   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
004230   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
004232   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
004234   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
004236   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
004238   ffe9
00423a   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
00423c   ffea
00423e   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
004240   f003
004242   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004244   ffe5
004246   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004248   ffe9
00424a   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00424c   fff3
00424e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004250   ecfa     call    0x53f4, 0        	CALL	__gptrput1
004252   f029
                                           ;	.line	4489; meter_logger.c	break;
004254   d017     bra     0x4284           	BRA	_01143_DS_
                                           _01142_DS_:
004256   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4491; meter_logger.c	*c = fifo_buffer_3[fifo_tail % QUEUE_SIZE];
004258   5145     movf    0x45, 0, 0x1     	MOVF	_fifo_tail, W, B
00425a   6e03     movwf   0x3, 0           	MOVWF	r0x03
00425c   6a04     clrf    0x4, 0           	CLRF	r0x04
00425e   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
004260   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
004262   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
004264   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
004266   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
004268   ffe9
00426a   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
00426c   ffea
00426e   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
004270   f003
004272   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004274   ffe5
004276   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004278   ffe9
00427a   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00427c   fff3
00427e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004280   ecfa     call    0x53f4, 0        	CALL	__gptrput1
004282   f029
                                           _01143_DS_:
004284   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4494; meter_logger.c	fifo_tail++;
004286   3f45     incfsz  0x45, 0x1, 0x1   	INCFSZ	_fifo_tail, F, B
004288   d001     bra     0x428c           	BRA	_11236_DS_
                                           ; removed redundant BANKSEL
00428a   2b46     incf    0x46, 0x1, 0x1   	INCF	(_fifo_tail + 1), F, B
                                           _11236_DS_:
00428c   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4496; meter_logger.c	if (fifo_tail == QUEUE_SIZE_COMBINED) {
00428e   5145     movf    0x45, 0, 0x1     	MOVF	_fifo_tail, W, B
004290   e103     bnz     0x4298           	BNZ	_01166_DS_
                                           ; removed redundant BANKSEL
004292   5146     movf    0x46, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
004294   0a04     xorlw   0x4              	XORLW	0x04
004296   e001     bz      0x429a           	BZ	_01167_DS_
                                           _01166_DS_:
004298   d003     bra     0x42a0           	BRA	_01145_DS_
                                           _01167_DS_:
00429a   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4497; meter_logger.c	fifo_tail = 0;
00429c   6b45     clrf    0x45, 0x1        	CLRF	_fifo_tail, B
                                           ; removed redundant BANKSEL
00429e   6b46     clrf    0x46, 0x1        	CLRF	(_fifo_tail + 1), B
                                           _01145_DS_:
                                           ;	.line	4499; meter_logger.c	return 1;
0042a0   0e01     movlw   0x1              	MOVLW	0x01
0042a2   d001     bra     0x42a6           	BRA	_01149_DS_
                                           _01147_DS_:
                                           ;	.line	4502; meter_logger.c	return 0;
0042a4   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _01149_DS_:
0042a6   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0042a8   f004
0042aa   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0042ac   f003
0042ae   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0042b0   f002
0042b2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0042b4   f001
0042b6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0042b8   f000
0042ba   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0042bc   ffd9
0042be   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_put	code
                                           _fifo_put:
                                           ;	.line	4450; meter_logger.c	unsigned char fifo_put(unsigned char c) {
0043fa   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0043fc   ffe5
0043fe   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004400   ffd9
004402   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004404   ffe5
004406   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004408   ffe5
00440a   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00440c   ffe5
00440e   0e02     movlw   0x2              	MOVLW	0x02
004410   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004412   f000
                                           ;	.line	4451; meter_logger.c	if (fifo_in_use() != QUEUE_SIZE_COMBINED) {
004414   ec34     call    0x5068, 0        	CALL	_fifo_in_use
004416   f028
004418   6e01     movwf   0x1, 0           	MOVWF	r0x01
00441a   cff3     movff   0xff3, 0x2       	MOVFF	PRODL, r0x02
00441c   f002
00441e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004420   e104     bnz     0x442a           	BNZ	_01126_DS_
004422   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004424   0a04     xorlw   0x4              	XORLW	0x04
004426   e101     bnz     0x442a           	BNZ	_01126_DS_
004428   d06d     bra     0x4504           	BRA	_01112_DS_
                                           _01126_DS_:
00442a   0105     movlb   0x5              	BANKSEL	(_fifo_head + 1)
                                           ;	.line	4452; meter_logger.c	switch (fifo_head/QUEUE_SIZE) {
00442c   5144     movf    0x44, 0, 0x1     	MOVF	(_fifo_head + 1), W, B
00442e   6e01     movwf   0x1, 0           	MOVWF	r0x01
004430   6a02     clrf    0x2, 0           	CLRF	r0x02
004432   0e00     movlw   0                	MOVLW	0x00
004434   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
004436   e102     bnz     0x443c           	BNZ	_01127_DS_
004438   0e04     movlw   0x4              	MOVLW	0x04
00443a   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
                                           _01127_DS_:
00443c   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00443e   d052     bra     0x44e4           	BRA	_01108_DS_
004440   6afa     clrf    0xfa, 0          	CLRF	PCLATH
004442   6afb     clrf    0xfb, 0          	CLRF	PCLATU
004444   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
004446   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
004448   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
00444a   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00444c   0bfc     andlw   0xfc             	ANDLW	0xfc
00444e   0f5e     addlw   0x5e             	ADDLW	LOW(_01128_DS_)
004450   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004452   0e44     movlw   0x44             	MOVLW	HIGH(_01128_DS_)
004454   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
004456   0e00     movlw   0                	MOVLW	UPPER(_01128_DS_)
004458   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
00445a   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
00445c   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01128_DS_:
00445e   ef37     goto    0x446e           	GOTO	_01104_DS_
004460   f022
004462   ef46     goto    0x448c           	GOTO	_01105_DS_
004464   f022
004466   ef55     goto    0x44aa           	GOTO	_01106_DS_
004468   f022
00446a   ef64     goto    0x44c8           	GOTO	_01107_DS_
00446c   f022
                                           _01104_DS_:
00446e   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4454; meter_logger.c	fifo_buffer_0[fifo_head % QUEUE_SIZE] = c;
004470   5143     movf    0x43, 0, 0x1     	MOVF	_fifo_head, W, B
004472   6e01     movwf   0x1, 0           	MOVWF	r0x01
004474   6a02     clrf    0x2, 0           	CLRF	r0x02
004476   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
004478   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
00447a   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
00447c   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00447e   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
004480   ffe9
004482   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
004484   ffea
004486   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
004488   ffef
                                           ;	.line	4455; meter_logger.c	break;
00448a   d02c     bra     0x44e4           	BRA	_01108_DS_
                                           _01105_DS_:
00448c   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4457; meter_logger.c	fifo_buffer_1[fifo_head % QUEUE_SIZE] = c;
00448e   5143     movf    0x43, 0, 0x1     	MOVF	_fifo_head, W, B
004490   6e01     movwf   0x1, 0           	MOVWF	r0x01
004492   6a02     clrf    0x2, 0           	CLRF	r0x02
004494   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
004496   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
004498   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
00449a   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00449c   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
00449e   ffe9
0044a0   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0044a2   ffea
0044a4   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
0044a6   ffef
                                           ;	.line	4458; meter_logger.c	break;
0044a8   d01d     bra     0x44e4           	BRA	_01108_DS_
                                           _01106_DS_:
0044aa   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4460; meter_logger.c	fifo_buffer_2[fifo_head % QUEUE_SIZE] = c;
0044ac   5143     movf    0x43, 0, 0x1     	MOVF	_fifo_head, W, B
0044ae   6e01     movwf   0x1, 0           	MOVWF	r0x01
0044b0   6a02     clrf    0x2, 0           	CLRF	r0x02
0044b2   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
0044b4   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
0044b6   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
0044b8   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0044ba   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0044bc   ffe9
0044be   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0044c0   ffea
0044c2   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
0044c4   ffef
                                           ;	.line	4461; meter_logger.c	break;
0044c6   d00e     bra     0x44e4           	BRA	_01108_DS_
                                           _01107_DS_:
0044c8   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4463; meter_logger.c	fifo_buffer_3[fifo_head % QUEUE_SIZE] = c;
0044ca   5143     movf    0x43, 0, 0x1     	MOVF	_fifo_head, W, B
0044cc   6e01     movwf   0x1, 0           	MOVWF	r0x01
0044ce   6a02     clrf    0x2, 0           	CLRF	r0x02
0044d0   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
0044d2   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
0044d4   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
0044d6   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0044d8   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0044da   ffe9
0044dc   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0044de   ffea
0044e0   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
0044e2   ffef
                                           _01108_DS_:
0044e4   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4466; meter_logger.c	fifo_head++;
0044e6   3f43     incfsz  0x43, 0x1, 0x1   	INCFSZ	_fifo_head, F, B
0044e8   d001     bra     0x44ec           	BRA	_21237_DS_
                                           ; removed redundant BANKSEL
0044ea   2b44     incf    0x44, 0x1, 0x1   	INCF	(_fifo_head + 1), F, B
                                           _21237_DS_:
0044ec   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4468; meter_logger.c	if (fifo_head == QUEUE_SIZE_COMBINED) {
0044ee   5143     movf    0x43, 0, 0x1     	MOVF	_fifo_head, W, B
0044f0   e103     bnz     0x44f8           	BNZ	_01133_DS_
                                           ; removed redundant BANKSEL
0044f2   5144     movf    0x44, 0, 0x1     	MOVF	(_fifo_head + 1), W, B
0044f4   0a04     xorlw   0x4              	XORLW	0x04
0044f6   e001     bz      0x44fa           	BZ	_01134_DS_
                                           _01133_DS_:
0044f8   d003     bra     0x4500           	BRA	_01110_DS_
                                           _01134_DS_:
0044fa   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4469; meter_logger.c	fifo_head = 0;
0044fc   6b43     clrf    0x43, 0x1        	CLRF	_fifo_head, B
                                           ; removed redundant BANKSEL
0044fe   6b44     clrf    0x44, 0x1        	CLRF	(_fifo_head + 1), B
                                           _01110_DS_:
                                           ;	.line	4471; meter_logger.c	return 1;
004500   0e01     movlw   0x1              	MOVLW	0x01
004502   d001     bra     0x4506           	BRA	_01114_DS_
                                           _01112_DS_:
                                           ;	.line	4474; meter_logger.c	return 0;
004504   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _01114_DS_:
004506   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004508   f002
00450a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00450c   f001
00450e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004510   f000
004512   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004514   ffd9
004516   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_in_use	code
                                           _fifo_in_use:
                                           ;	.line	4446; meter_logger.c	unsigned int fifo_in_use() {
005068   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00506a   ffe5
00506c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00506e   ffd9
005070   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
005072   ffe5
005074   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
005076   ffe5
005078   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4447; meter_logger.c	return fifo_head - fifo_tail;
00507a   5145     movf    0x45, 0, 0x1     	MOVF	_fifo_tail, W, B
00507c   0105     movlb   0x5              	BANKSEL	_fifo_head
00507e   5d43     subwf   0x43, 0, 0x1     	SUBWF	_fifo_head, W, B
005080   6e00     movwf   0, 0             	MOVWF	r0x00
005082   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
005084   5146     movf    0x46, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
005086   0105     movlb   0x5              	BANKSEL	(_fifo_head + 1)
005088   5944     subwfb  0x44, 0, 0x1     	SUBWFB	(_fifo_head + 1), W, B
00508a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00508c   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00508e   fff3
005090   5000     movf    0, 0, 0          	MOVF	r0x00, W
005092   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
005094   f001
005096   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
005098   f000
00509a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00509c   ffd9
00509e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_byte	code
                                           _fsk_tx_byte:
                                           ;	.line	4438; meter_logger.c	void fsk_tx_byte(unsigned char c) {
0051f8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0051fa   ffe5
0051fc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0051fe   ffd9
005200   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
005202   ffe5
005204   0e02     movlw   0x2              	MOVLW	0x02
005206   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
005208   f000
                                           ;	.line	4439; meter_logger.c	fsk_proto.data = c;
00520a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00520c   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
00520e   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
                                           ;	.line	4440; meter_logger.c	fsk_proto.data_len = 8;
005210   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
005212   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
                                           _01091_DS_:
005214   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	4441; meter_logger.c	while (fsk_proto.data_len) {
005216   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
005218   e1fd     bnz     0x5214           	BNZ	_01091_DS_
00521a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00521c   f000
00521e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005220   ffd9
005222   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__send_fsk_low	code
                                           _send_fsk_low:
                                           ;	.line	2985; meter_logger.c	void send_fsk_low(void) {
001ac6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
001ac8   ffe5
001aca   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
001acc   ffd9
                                           ;	.line	2986; meter_logger.c	PWM_PIN = 1;
001ace   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001ad0   0000     nop                      	nop
001ad2   0000     nop                      	nop
001ad4   0000     nop                      	nop
001ad6   0000     nop                      	nop
001ad8   0000     nop                      	nop
001ada   0000     nop                      	nop
001adc   0000     nop                      	nop
001ade   0000     nop                      	nop
001ae0   0000     nop                      	nop
001ae2   0000     nop                      	nop
001ae4   0000     nop                      	nop
001ae6   0000     nop                      	nop
001ae8   0000     nop                      	nop
001aea   0000     nop                      	nop
001aec   0000     nop                      	nop
001aee   0000     nop                      	nop
001af0   0000     nop                      	nop
001af2   0000     nop                      	nop
001af4   0000     nop                      	nop
001af6   0000     nop                      	nop
001af8   0000     nop                      	nop
001afa   0000     nop                      	nop
001afc   0000     nop                      	nop
001afe   0000     nop                      	nop
001b00   0000     nop                      	nop
001b02   0000     nop                      	nop
001b04   0000     nop                      	nop
001b06   0000     nop                      	nop
001b08   0000     nop                      	nop
001b0a   0000     nop                      	nop
001b0c   0000     nop                      	nop
001b0e   0000     nop                      	nop
001b10   0000     nop                      	nop
001b12   0000     nop                      	nop
001b14   0000     nop                      	nop
001b16   0000     nop                      	nop
001b18   0000     nop                      	nop
001b1a   0000     nop                      	nop
001b1c   0000     nop                      	nop
001b1e   0000     nop                      	nop
001b20   0000     nop                      	nop
001b22   0000     nop                      	nop
001b24   0000     nop                      	nop
001b26   0000     nop                      	nop
001b28   0000     nop                      	nop
001b2a   0000     nop                      	nop
001b2c   0000     nop                      	nop
001b2e   0000     nop                      	nop
001b30   0000     nop                      	nop
001b32   0000     nop                      	nop
001b34   0000     nop                      	nop
001b36   0000     nop                      	nop
001b38   0000     nop                      	nop
001b3a   0000     nop                      	nop
001b3c   0000     nop                      	nop
001b3e   0000     nop                      	nop
001b40   0000     nop                      	nop
001b42   0000     nop                      	nop
001b44   0000     nop                      	nop
001b46   0000     nop                      	nop
001b48   0000     nop                      	nop
001b4a   0000     nop                      	nop
001b4c   0000     nop                      	nop
001b4e   0000     nop                      	nop
001b50   0000     nop                      	nop
001b52   0000     nop                      	nop
001b54   0000     nop                      	nop
001b56   0000     nop                      	nop
001b58   0000     nop                      	nop
001b5a   0000     nop                      	nop
001b5c   0000     nop                      	nop
001b5e   0000     nop                      	nop
001b60   0000     nop                      	nop
001b62   0000     nop                      	nop
001b64   0000     nop                      	nop
001b66   0000     nop                      	nop
001b68   0000     nop                      	nop
001b6a   0000     nop                      	nop
001b6c   0000     nop                      	nop
001b6e   0000     nop                      	nop
001b70   0000     nop                      	nop
001b72   0000     nop                      	nop
001b74   0000     nop                      	nop
001b76   0000     nop                      	nop
001b78   0000     nop                      	nop
001b7a   0000     nop                      	nop
001b7c   0000     nop                      	nop
001b7e   0000     nop                      	nop
001b80   0000     nop                      	nop
001b82   0000     nop                      	nop
001b84   0000     nop                      	nop
001b86   0000     nop                      	nop
001b88   0000     nop                      	nop
001b8a   0000     nop                      	nop
001b8c   0000     nop                      	nop
001b8e   0000     nop                      	nop
001b90   0000     nop                      	nop
001b92   0000     nop                      	nop
001b94   0000     nop                      	nop
001b96   0000     nop                      	nop
001b98   0000     nop                      	nop
001b9a   0000     nop                      	nop
001b9c   0000     nop                      	nop
001b9e   0000     nop                      	nop
001ba0   0000     nop                      	nop
001ba2   0000     nop                      	nop
001ba4   0000     nop                      	nop
001ba6   0000     nop                      	nop
001ba8   0000     nop                      	nop
001baa   0000     nop                      	nop
001bac   0000     nop                      	nop
001bae   0000     nop                      	nop
001bb0   0000     nop                      	nop
001bb2   0000     nop                      	nop
001bb4   0000     nop                      	nop
001bb6   0000     nop                      	nop
001bb8   0000     nop                      	nop
001bba   0000     nop                      	nop
001bbc   0000     nop                      	nop
001bbe   0000     nop                      	nop
001bc0   0000     nop                      	nop
001bc2   0000     nop                      	nop
001bc4   0000     nop                      	nop
001bc6   0000     nop                      	nop
001bc8   0000     nop                      	nop
001bca   0000     nop                      	nop
001bcc   0000     nop                      	nop
001bce   0000     nop                      	nop
001bd0   0000     nop                      	nop
001bd2   0000     nop                      	nop
001bd4   0000     nop                      	nop
001bd6   0000     nop                      	nop
001bd8   0000     nop                      	nop
001bda   0000     nop                      	nop
001bdc   0000     nop                      	nop
001bde   0000     nop                      	nop
001be0   0000     nop                      	nop
001be2   0000     nop                      	nop
001be4   0000     nop                      	nop
001be6   0000     nop                      	nop
001be8   0000     nop                      	nop
001bea   0000     nop                      	nop
001bec   0000     nop                      	nop
001bee   0000     nop                      	nop
001bf0   0000     nop                      	nop
001bf2   0000     nop                      	nop
001bf4   0000     nop                      	nop
001bf6   0000     nop                      	nop
001bf8   0000     nop                      	nop
001bfa   0000     nop                      	nop
001bfc   0000     nop                      	nop
001bfe   0000     nop                      	nop
001c00   0000     nop                      	nop
001c02   0000     nop                      	nop
001c04   0000     nop                      	nop
001c06   0000     nop                      	nop
001c08   0000     nop                      	nop
001c0a   0000     nop                      	nop
001c0c   0000     nop                      	nop
001c0e   0000     nop                      	nop
001c10   0000     nop                      	nop
001c12   0000     nop                      	nop
001c14   0000     nop                      	nop
001c16   0000     nop                      	nop
001c18   0000     nop                      	nop
001c1a   0000     nop                      	nop
001c1c   0000     nop                      	nop
001c1e   0000     nop                      	nop
001c20   0000     nop                      	nop
001c22   0000     nop                      	nop
001c24   0000     nop                      	nop
001c26   0000     nop                      	nop
001c28   0000     nop                      	nop
001c2a   0000     nop                      	nop
001c2c   0000     nop                      	nop
001c2e   0000     nop                      	nop
001c30   0000     nop                      	nop
001c32   0000     nop                      	nop
001c34   0000     nop                      	nop
001c36   0000     nop                      	nop
001c38   0000     nop                      	nop
001c3a   0000     nop                      	nop
001c3c   0000     nop                      	nop
001c3e   0000     nop                      	nop
001c40   0000     nop                      	nop
001c42   0000     nop                      	nop
001c44   0000     nop                      	nop
001c46   0000     nop                      	nop
001c48   0000     nop                      	nop
001c4a   0000     nop                      	nop
001c4c   0000     nop                      	nop
001c4e   0000     nop                      	nop
001c50   0000     nop                      	nop
001c52   0000     nop                      	nop
001c54   0000     nop                      	nop
001c56   0000     nop                      	nop
001c58   0000     nop                      	nop
001c5a   0000     nop                      	nop
001c5c   0000     nop                      	nop
001c5e   0000     nop                      	nop
001c60   0000     nop                      	nop
001c62   0000     nop                      	nop
001c64   0000     nop                      	nop
001c66   0000     nop                      	nop
                                           	
                                           ;	.line	3193; meter_logger.c	PWM_PIN = 0;
001c68   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001c6a   0000     nop                      	nop
001c6c   0000     nop                      	nop
001c6e   0000     nop                      	nop
001c70   0000     nop                      	nop
001c72   0000     nop                      	nop
001c74   0000     nop                      	nop
001c76   0000     nop                      	nop
001c78   0000     nop                      	nop
001c7a   0000     nop                      	nop
001c7c   0000     nop                      	nop
001c7e   0000     nop                      	nop
001c80   0000     nop                      	nop
001c82   0000     nop                      	nop
001c84   0000     nop                      	nop
001c86   0000     nop                      	nop
001c88   0000     nop                      	nop
001c8a   0000     nop                      	nop
001c8c   0000     nop                      	nop
001c8e   0000     nop                      	nop
001c90   0000     nop                      	nop
001c92   0000     nop                      	nop
001c94   0000     nop                      	nop
001c96   0000     nop                      	nop
001c98   0000     nop                      	nop
001c9a   0000     nop                      	nop
001c9c   0000     nop                      	nop
001c9e   0000     nop                      	nop
001ca0   0000     nop                      	nop
001ca2   0000     nop                      	nop
001ca4   0000     nop                      	nop
001ca6   0000     nop                      	nop
001ca8   0000     nop                      	nop
001caa   0000     nop                      	nop
001cac   0000     nop                      	nop
001cae   0000     nop                      	nop
001cb0   0000     nop                      	nop
001cb2   0000     nop                      	nop
001cb4   0000     nop                      	nop
001cb6   0000     nop                      	nop
001cb8   0000     nop                      	nop
001cba   0000     nop                      	nop
001cbc   0000     nop                      	nop
001cbe   0000     nop                      	nop
001cc0   0000     nop                      	nop
001cc2   0000     nop                      	nop
001cc4   0000     nop                      	nop
001cc6   0000     nop                      	nop
001cc8   0000     nop                      	nop
001cca   0000     nop                      	nop
001ccc   0000     nop                      	nop
001cce   0000     nop                      	nop
001cd0   0000     nop                      	nop
001cd2   0000     nop                      	nop
001cd4   0000     nop                      	nop
001cd6   0000     nop                      	nop
001cd8   0000     nop                      	nop
001cda   0000     nop                      	nop
001cdc   0000     nop                      	nop
001cde   0000     nop                      	nop
001ce0   0000     nop                      	nop
001ce2   0000     nop                      	nop
001ce4   0000     nop                      	nop
001ce6   0000     nop                      	nop
001ce8   0000     nop                      	nop
001cea   0000     nop                      	nop
001cec   0000     nop                      	nop
001cee   0000     nop                      	nop
001cf0   0000     nop                      	nop
001cf2   0000     nop                      	nop
001cf4   0000     nop                      	nop
001cf6   0000     nop                      	nop
001cf8   0000     nop                      	nop
001cfa   0000     nop                      	nop
001cfc   0000     nop                      	nop
001cfe   0000     nop                      	nop
001d00   0000     nop                      	nop
001d02   0000     nop                      	nop
001d04   0000     nop                      	nop
001d06   0000     nop                      	nop
001d08   0000     nop                      	nop
001d0a   0000     nop                      	nop
001d0c   0000     nop                      	nop
001d0e   0000     nop                      	nop
001d10   0000     nop                      	nop
001d12   0000     nop                      	nop
001d14   0000     nop                      	nop
001d16   0000     nop                      	nop
001d18   0000     nop                      	nop
001d1a   0000     nop                      	nop
001d1c   0000     nop                      	nop
001d1e   0000     nop                      	nop
001d20   0000     nop                      	nop
001d22   0000     nop                      	nop
001d24   0000     nop                      	nop
001d26   0000     nop                      	nop
001d28   0000     nop                      	nop
001d2a   0000     nop                      	nop
001d2c   0000     nop                      	nop
001d2e   0000     nop                      	nop
001d30   0000     nop                      	nop
001d32   0000     nop                      	nop
001d34   0000     nop                      	nop
001d36   0000     nop                      	nop
001d38   0000     nop                      	nop
001d3a   0000     nop                      	nop
001d3c   0000     nop                      	nop
001d3e   0000     nop                      	nop
001d40   0000     nop                      	nop
001d42   0000     nop                      	nop
001d44   0000     nop                      	nop
001d46   0000     nop                      	nop
001d48   0000     nop                      	nop
001d4a   0000     nop                      	nop
001d4c   0000     nop                      	nop
001d4e   0000     nop                      	nop
001d50   0000     nop                      	nop
001d52   0000     nop                      	nop
001d54   0000     nop                      	nop
001d56   0000     nop                      	nop
001d58   0000     nop                      	nop
001d5a   0000     nop                      	nop
001d5c   0000     nop                      	nop
001d5e   0000     nop                      	nop
001d60   0000     nop                      	nop
001d62   0000     nop                      	nop
001d64   0000     nop                      	nop
001d66   0000     nop                      	nop
001d68   0000     nop                      	nop
001d6a   0000     nop                      	nop
001d6c   0000     nop                      	nop
001d6e   0000     nop                      	nop
001d70   0000     nop                      	nop
001d72   0000     nop                      	nop
001d74   0000     nop                      	nop
001d76   0000     nop                      	nop
001d78   0000     nop                      	nop
001d7a   0000     nop                      	nop
001d7c   0000     nop                      	nop
001d7e   0000     nop                      	nop
001d80   0000     nop                      	nop
001d82   0000     nop                      	nop
001d84   0000     nop                      	nop
001d86   0000     nop                      	nop
001d88   0000     nop                      	nop
001d8a   0000     nop                      	nop
001d8c   0000     nop                      	nop
001d8e   0000     nop                      	nop
001d90   0000     nop                      	nop
001d92   0000     nop                      	nop
001d94   0000     nop                      	nop
001d96   0000     nop                      	nop
001d98   0000     nop                      	nop
001d9a   0000     nop                      	nop
001d9c   0000     nop                      	nop
001d9e   0000     nop                      	nop
001da0   0000     nop                      	nop
001da2   0000     nop                      	nop
001da4   0000     nop                      	nop
001da6   0000     nop                      	nop
001da8   0000     nop                      	nop
001daa   0000     nop                      	nop
001dac   0000     nop                      	nop
001dae   0000     nop                      	nop
001db0   0000     nop                      	nop
001db2   0000     nop                      	nop
001db4   0000     nop                      	nop
001db6   0000     nop                      	nop
001db8   0000     nop                      	nop
001dba   0000     nop                      	nop
001dbc   0000     nop                      	nop
001dbe   0000     nop                      	nop
001dc0   0000     nop                      	nop
001dc2   0000     nop                      	nop
001dc4   0000     nop                      	nop
001dc6   0000     nop                      	nop
001dc8   0000     nop                      	nop
001dca   0000     nop                      	nop
001dcc   0000     nop                      	nop
001dce   0000     nop                      	nop
001dd0   0000     nop                      	nop
001dd2   0000     nop                      	nop
001dd4   0000     nop                      	nop
001dd6   0000     nop                      	nop
001dd8   0000     nop                      	nop
001dda   0000     nop                      	nop
001ddc   0000     nop                      	nop
001dde   0000     nop                      	nop
001de0   0000     nop                      	nop
001de2   0000     nop                      	nop
001de4   0000     nop                      	nop
001de6   0000     nop                      	nop
001de8   0000     nop                      	nop
001dea   0000     nop                      	nop
001dec   0000     nop                      	nop
001dee   0000     nop                      	nop
001df0   0000     nop                      	nop
001df2   0000     nop                      	nop
001df4   0000     nop                      	nop
001df6   0000     nop                      	nop
001df8   0000     nop                      	nop
001dfa   0000     nop                      	nop
001dfc   0000     nop                      	nop
001dfe   0000     nop                      	nop
001e00   0000     nop                      	nop
                                           	
                                           ;	.line	3400; meter_logger.c	PWM_PIN = 1;
001e02   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001e04   0000     nop                      	nop
001e06   0000     nop                      	nop
001e08   0000     nop                      	nop
001e0a   0000     nop                      	nop
001e0c   0000     nop                      	nop
001e0e   0000     nop                      	nop
001e10   0000     nop                      	nop
001e12   0000     nop                      	nop
001e14   0000     nop                      	nop
001e16   0000     nop                      	nop
001e18   0000     nop                      	nop
001e1a   0000     nop                      	nop
001e1c   0000     nop                      	nop
001e1e   0000     nop                      	nop
001e20   0000     nop                      	nop
001e22   0000     nop                      	nop
001e24   0000     nop                      	nop
001e26   0000     nop                      	nop
001e28   0000     nop                      	nop
001e2a   0000     nop                      	nop
001e2c   0000     nop                      	nop
001e2e   0000     nop                      	nop
001e30   0000     nop                      	nop
001e32   0000     nop                      	nop
001e34   0000     nop                      	nop
001e36   0000     nop                      	nop
001e38   0000     nop                      	nop
001e3a   0000     nop                      	nop
001e3c   0000     nop                      	nop
001e3e   0000     nop                      	nop
001e40   0000     nop                      	nop
001e42   0000     nop                      	nop
001e44   0000     nop                      	nop
001e46   0000     nop                      	nop
001e48   0000     nop                      	nop
001e4a   0000     nop                      	nop
001e4c   0000     nop                      	nop
001e4e   0000     nop                      	nop
001e50   0000     nop                      	nop
001e52   0000     nop                      	nop
001e54   0000     nop                      	nop
001e56   0000     nop                      	nop
001e58   0000     nop                      	nop
001e5a   0000     nop                      	nop
001e5c   0000     nop                      	nop
001e5e   0000     nop                      	nop
001e60   0000     nop                      	nop
001e62   0000     nop                      	nop
001e64   0000     nop                      	nop
001e66   0000     nop                      	nop
001e68   0000     nop                      	nop
001e6a   0000     nop                      	nop
001e6c   0000     nop                      	nop
001e6e   0000     nop                      	nop
001e70   0000     nop                      	nop
001e72   0000     nop                      	nop
001e74   0000     nop                      	nop
001e76   0000     nop                      	nop
001e78   0000     nop                      	nop
001e7a   0000     nop                      	nop
001e7c   0000     nop                      	nop
001e7e   0000     nop                      	nop
001e80   0000     nop                      	nop
001e82   0000     nop                      	nop
001e84   0000     nop                      	nop
001e86   0000     nop                      	nop
001e88   0000     nop                      	nop
001e8a   0000     nop                      	nop
001e8c   0000     nop                      	nop
001e8e   0000     nop                      	nop
001e90   0000     nop                      	nop
001e92   0000     nop                      	nop
001e94   0000     nop                      	nop
001e96   0000     nop                      	nop
001e98   0000     nop                      	nop
001e9a   0000     nop                      	nop
001e9c   0000     nop                      	nop
001e9e   0000     nop                      	nop
001ea0   0000     nop                      	nop
001ea2   0000     nop                      	nop
001ea4   0000     nop                      	nop
001ea6   0000     nop                      	nop
001ea8   0000     nop                      	nop
001eaa   0000     nop                      	nop
001eac   0000     nop                      	nop
001eae   0000     nop                      	nop
001eb0   0000     nop                      	nop
001eb2   0000     nop                      	nop
001eb4   0000     nop                      	nop
001eb6   0000     nop                      	nop
001eb8   0000     nop                      	nop
001eba   0000     nop                      	nop
001ebc   0000     nop                      	nop
001ebe   0000     nop                      	nop
001ec0   0000     nop                      	nop
001ec2   0000     nop                      	nop
001ec4   0000     nop                      	nop
001ec6   0000     nop                      	nop
001ec8   0000     nop                      	nop
001eca   0000     nop                      	nop
001ecc   0000     nop                      	nop
001ece   0000     nop                      	nop
001ed0   0000     nop                      	nop
001ed2   0000     nop                      	nop
001ed4   0000     nop                      	nop
001ed6   0000     nop                      	nop
001ed8   0000     nop                      	nop
001eda   0000     nop                      	nop
001edc   0000     nop                      	nop
001ede   0000     nop                      	nop
001ee0   0000     nop                      	nop
001ee2   0000     nop                      	nop
001ee4   0000     nop                      	nop
001ee6   0000     nop                      	nop
001ee8   0000     nop                      	nop
001eea   0000     nop                      	nop
001eec   0000     nop                      	nop
001eee   0000     nop                      	nop
001ef0   0000     nop                      	nop
001ef2   0000     nop                      	nop
001ef4   0000     nop                      	nop
001ef6   0000     nop                      	nop
001ef8   0000     nop                      	nop
001efa   0000     nop                      	nop
001efc   0000     nop                      	nop
001efe   0000     nop                      	nop
001f00   0000     nop                      	nop
001f02   0000     nop                      	nop
001f04   0000     nop                      	nop
001f06   0000     nop                      	nop
001f08   0000     nop                      	nop
001f0a   0000     nop                      	nop
001f0c   0000     nop                      	nop
001f0e   0000     nop                      	nop
001f10   0000     nop                      	nop
001f12   0000     nop                      	nop
001f14   0000     nop                      	nop
001f16   0000     nop                      	nop
001f18   0000     nop                      	nop
001f1a   0000     nop                      	nop
001f1c   0000     nop                      	nop
001f1e   0000     nop                      	nop
001f20   0000     nop                      	nop
001f22   0000     nop                      	nop
001f24   0000     nop                      	nop
001f26   0000     nop                      	nop
001f28   0000     nop                      	nop
001f2a   0000     nop                      	nop
001f2c   0000     nop                      	nop
001f2e   0000     nop                      	nop
001f30   0000     nop                      	nop
001f32   0000     nop                      	nop
001f34   0000     nop                      	nop
001f36   0000     nop                      	nop
001f38   0000     nop                      	nop
001f3a   0000     nop                      	nop
001f3c   0000     nop                      	nop
001f3e   0000     nop                      	nop
001f40   0000     nop                      	nop
001f42   0000     nop                      	nop
001f44   0000     nop                      	nop
001f46   0000     nop                      	nop
001f48   0000     nop                      	nop
001f4a   0000     nop                      	nop
001f4c   0000     nop                      	nop
001f4e   0000     nop                      	nop
001f50   0000     nop                      	nop
001f52   0000     nop                      	nop
001f54   0000     nop                      	nop
001f56   0000     nop                      	nop
001f58   0000     nop                      	nop
001f5a   0000     nop                      	nop
001f5c   0000     nop                      	nop
001f5e   0000     nop                      	nop
001f60   0000     nop                      	nop
001f62   0000     nop                      	nop
001f64   0000     nop                      	nop
001f66   0000     nop                      	nop
001f68   0000     nop                      	nop
001f6a   0000     nop                      	nop
001f6c   0000     nop                      	nop
001f6e   0000     nop                      	nop
001f70   0000     nop                      	nop
001f72   0000     nop                      	nop
001f74   0000     nop                      	nop
001f76   0000     nop                      	nop
001f78   0000     nop                      	nop
001f7a   0000     nop                      	nop
001f7c   0000     nop                      	nop
001f7e   0000     nop                      	nop
001f80   0000     nop                      	nop
001f82   0000     nop                      	nop
001f84   0000     nop                      	nop
001f86   0000     nop                      	nop
001f88   0000     nop                      	nop
001f8a   0000     nop                      	nop
001f8c   0000     nop                      	nop
001f8e   0000     nop                      	nop
001f90   0000     nop                      	nop
001f92   0000     nop                      	nop
001f94   0000     nop                      	nop
001f96   0000     nop                      	nop
001f98   0000     nop                      	nop
001f9a   0000     nop                      	nop
                                           	
                                           ;	.line	3607; meter_logger.c	PWM_PIN = 0;
001f9c   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001f9e   0000     nop                      	nop
001fa0   0000     nop                      	nop
001fa2   0000     nop                      	nop
001fa4   0000     nop                      	nop
001fa6   0000     nop                      	nop
001fa8   0000     nop                      	nop
001faa   0000     nop                      	nop
001fac   0000     nop                      	nop
001fae   0000     nop                      	nop
001fb0   0000     nop                      	nop
001fb2   0000     nop                      	nop
001fb4   0000     nop                      	nop
001fb6   0000     nop                      	nop
001fb8   0000     nop                      	nop
001fba   0000     nop                      	nop
001fbc   0000     nop                      	nop
001fbe   0000     nop                      	nop
001fc0   0000     nop                      	nop
001fc2   0000     nop                      	nop
001fc4   0000     nop                      	nop
001fc6   0000     nop                      	nop
001fc8   0000     nop                      	nop
001fca   0000     nop                      	nop
001fcc   0000     nop                      	nop
001fce   0000     nop                      	nop
001fd0   0000     nop                      	nop
001fd2   0000     nop                      	nop
001fd4   0000     nop                      	nop
001fd6   0000     nop                      	nop
001fd8   0000     nop                      	nop
001fda   0000     nop                      	nop
001fdc   0000     nop                      	nop
001fde   0000     nop                      	nop
001fe0   0000     nop                      	nop
001fe2   0000     nop                      	nop
001fe4   0000     nop                      	nop
001fe6   0000     nop                      	nop
001fe8   0000     nop                      	nop
001fea   0000     nop                      	nop
001fec   0000     nop                      	nop
001fee   0000     nop                      	nop
001ff0   0000     nop                      	nop
001ff2   0000     nop                      	nop
001ff4   0000     nop                      	nop
001ff6   0000     nop                      	nop
001ff8   0000     nop                      	nop
001ffa   0000     nop                      	nop
001ffc   0000     nop                      	nop
001ffe   0000     nop                      	nop
002000   0000     nop                      	nop
002002   0000     nop                      	nop
002004   0000     nop                      	nop
002006   0000     nop                      	nop
002008   0000     nop                      	nop
00200a   0000     nop                      	nop
00200c   0000     nop                      	nop
00200e   0000     nop                      	nop
002010   0000     nop                      	nop
002012   0000     nop                      	nop
002014   0000     nop                      	nop
002016   0000     nop                      	nop
002018   0000     nop                      	nop
00201a   0000     nop                      	nop
00201c   0000     nop                      	nop
00201e   0000     nop                      	nop
002020   0000     nop                      	nop
002022   0000     nop                      	nop
002024   0000     nop                      	nop
002026   0000     nop                      	nop
002028   0000     nop                      	nop
00202a   0000     nop                      	nop
00202c   0000     nop                      	nop
00202e   0000     nop                      	nop
002030   0000     nop                      	nop
002032   0000     nop                      	nop
002034   0000     nop                      	nop
002036   0000     nop                      	nop
002038   0000     nop                      	nop
00203a   0000     nop                      	nop
00203c   0000     nop                      	nop
00203e   0000     nop                      	nop
002040   0000     nop                      	nop
002042   0000     nop                      	nop
002044   0000     nop                      	nop
002046   0000     nop                      	nop
002048   0000     nop                      	nop
00204a   0000     nop                      	nop
00204c   0000     nop                      	nop
00204e   0000     nop                      	nop
002050   0000     nop                      	nop
002052   0000     nop                      	nop
002054   0000     nop                      	nop
002056   0000     nop                      	nop
002058   0000     nop                      	nop
00205a   0000     nop                      	nop
00205c   0000     nop                      	nop
00205e   0000     nop                      	nop
002060   0000     nop                      	nop
002062   0000     nop                      	nop
002064   0000     nop                      	nop
002066   0000     nop                      	nop
002068   0000     nop                      	nop
00206a   0000     nop                      	nop
00206c   0000     nop                      	nop
00206e   0000     nop                      	nop
002070   0000     nop                      	nop
002072   0000     nop                      	nop
002074   0000     nop                      	nop
002076   0000     nop                      	nop
002078   0000     nop                      	nop
00207a   0000     nop                      	nop
00207c   0000     nop                      	nop
00207e   0000     nop                      	nop
002080   0000     nop                      	nop
002082   0000     nop                      	nop
002084   0000     nop                      	nop
002086   0000     nop                      	nop
002088   0000     nop                      	nop
00208a   0000     nop                      	nop
00208c   0000     nop                      	nop
00208e   0000     nop                      	nop
002090   0000     nop                      	nop
002092   0000     nop                      	nop
002094   0000     nop                      	nop
002096   0000     nop                      	nop
002098   0000     nop                      	nop
00209a   0000     nop                      	nop
00209c   0000     nop                      	nop
00209e   0000     nop                      	nop
0020a0   0000     nop                      	nop
0020a2   0000     nop                      	nop
0020a4   0000     nop                      	nop
0020a6   0000     nop                      	nop
0020a8   0000     nop                      	nop
0020aa   0000     nop                      	nop
0020ac   0000     nop                      	nop
0020ae   0000     nop                      	nop
0020b0   0000     nop                      	nop
0020b2   0000     nop                      	nop
0020b4   0000     nop                      	nop
0020b6   0000     nop                      	nop
0020b8   0000     nop                      	nop
0020ba   0000     nop                      	nop
0020bc   0000     nop                      	nop
0020be   0000     nop                      	nop
0020c0   0000     nop                      	nop
0020c2   0000     nop                      	nop
0020c4   0000     nop                      	nop
0020c6   0000     nop                      	nop
0020c8   0000     nop                      	nop
0020ca   0000     nop                      	nop
0020cc   0000     nop                      	nop
0020ce   0000     nop                      	nop
0020d0   0000     nop                      	nop
0020d2   0000     nop                      	nop
0020d4   0000     nop                      	nop
0020d6   0000     nop                      	nop
0020d8   0000     nop                      	nop
0020da   0000     nop                      	nop
0020dc   0000     nop                      	nop
0020de   0000     nop                      	nop
0020e0   0000     nop                      	nop
0020e2   0000     nop                      	nop
0020e4   0000     nop                      	nop
0020e6   0000     nop                      	nop
0020e8   0000     nop                      	nop
0020ea   0000     nop                      	nop
0020ec   0000     nop                      	nop
0020ee   0000     nop                      	nop
0020f0   0000     nop                      	nop
0020f2   0000     nop                      	nop
0020f4   0000     nop                      	nop
0020f6   0000     nop                      	nop
0020f8   0000     nop                      	nop
0020fa   0000     nop                      	nop
0020fc   0000     nop                      	nop
0020fe   0000     nop                      	nop
002100   0000     nop                      	nop
002102   0000     nop                      	nop
002104   0000     nop                      	nop
002106   0000     nop                      	nop
002108   0000     nop                      	nop
00210a   0000     nop                      	nop
00210c   0000     nop                      	nop
00210e   0000     nop                      	nop
002110   0000     nop                      	nop
002112   0000     nop                      	nop
002114   0000     nop                      	nop
002116   0000     nop                      	nop
002118   0000     nop                      	nop
00211a   0000     nop                      	nop
00211c   0000     nop                      	nop
00211e   0000     nop                      	nop
002120   0000     nop                      	nop
002122   0000     nop                      	nop
002124   0000     nop                      	nop
002126   0000     nop                      	nop
002128   0000     nop                      	nop
00212a   0000     nop                      	nop
00212c   0000     nop                      	nop
00212e   0000     nop                      	nop
002130   0000     nop                      	nop
002132   0000     nop                      	nop
002134   0000     nop                      	nop
                                           	
                                           ;	.line	3814; meter_logger.c	PWM_PIN = 1;
002136   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
002138   0000     nop                      	nop
00213a   0000     nop                      	nop
00213c   0000     nop                      	nop
00213e   0000     nop                      	nop
002140   0000     nop                      	nop
002142   0000     nop                      	nop
002144   0000     nop                      	nop
002146   0000     nop                      	nop
002148   0000     nop                      	nop
00214a   0000     nop                      	nop
00214c   0000     nop                      	nop
00214e   0000     nop                      	nop
002150   0000     nop                      	nop
002152   0000     nop                      	nop
002154   0000     nop                      	nop
002156   0000     nop                      	nop
002158   0000     nop                      	nop
00215a   0000     nop                      	nop
00215c   0000     nop                      	nop
00215e   0000     nop                      	nop
002160   0000     nop                      	nop
002162   0000     nop                      	nop
002164   0000     nop                      	nop
002166   0000     nop                      	nop
002168   0000     nop                      	nop
00216a   0000     nop                      	nop
00216c   0000     nop                      	nop
00216e   0000     nop                      	nop
002170   0000     nop                      	nop
002172   0000     nop                      	nop
002174   0000     nop                      	nop
002176   0000     nop                      	nop
002178   0000     nop                      	nop
00217a   0000     nop                      	nop
00217c   0000     nop                      	nop
00217e   0000     nop                      	nop
002180   0000     nop                      	nop
002182   0000     nop                      	nop
002184   0000     nop                      	nop
002186   0000     nop                      	nop
002188   0000     nop                      	nop
00218a   0000     nop                      	nop
00218c   0000     nop                      	nop
00218e   0000     nop                      	nop
002190   0000     nop                      	nop
002192   0000     nop                      	nop
002194   0000     nop                      	nop
002196   0000     nop                      	nop
002198   0000     nop                      	nop
00219a   0000     nop                      	nop
00219c   0000     nop                      	nop
00219e   0000     nop                      	nop
0021a0   0000     nop                      	nop
0021a2   0000     nop                      	nop
0021a4   0000     nop                      	nop
0021a6   0000     nop                      	nop
0021a8   0000     nop                      	nop
0021aa   0000     nop                      	nop
0021ac   0000     nop                      	nop
0021ae   0000     nop                      	nop
0021b0   0000     nop                      	nop
0021b2   0000     nop                      	nop
0021b4   0000     nop                      	nop
0021b6   0000     nop                      	nop
0021b8   0000     nop                      	nop
0021ba   0000     nop                      	nop
0021bc   0000     nop                      	nop
0021be   0000     nop                      	nop
0021c0   0000     nop                      	nop
0021c2   0000     nop                      	nop
0021c4   0000     nop                      	nop
0021c6   0000     nop                      	nop
0021c8   0000     nop                      	nop
0021ca   0000     nop                      	nop
0021cc   0000     nop                      	nop
0021ce   0000     nop                      	nop
0021d0   0000     nop                      	nop
0021d2   0000     nop                      	nop
0021d4   0000     nop                      	nop
0021d6   0000     nop                      	nop
0021d8   0000     nop                      	nop
0021da   0000     nop                      	nop
0021dc   0000     nop                      	nop
0021de   0000     nop                      	nop
0021e0   0000     nop                      	nop
0021e2   0000     nop                      	nop
0021e4   0000     nop                      	nop
0021e6   0000     nop                      	nop
0021e8   0000     nop                      	nop
0021ea   0000     nop                      	nop
0021ec   0000     nop                      	nop
0021ee   0000     nop                      	nop
0021f0   0000     nop                      	nop
0021f2   0000     nop                      	nop
0021f4   0000     nop                      	nop
0021f6   0000     nop                      	nop
0021f8   0000     nop                      	nop
0021fa   0000     nop                      	nop
0021fc   0000     nop                      	nop
0021fe   0000     nop                      	nop
002200   0000     nop                      	nop
002202   0000     nop                      	nop
002204   0000     nop                      	nop
002206   0000     nop                      	nop
002208   0000     nop                      	nop
00220a   0000     nop                      	nop
00220c   0000     nop                      	nop
00220e   0000     nop                      	nop
002210   0000     nop                      	nop
002212   0000     nop                      	nop
002214   0000     nop                      	nop
002216   0000     nop                      	nop
002218   0000     nop                      	nop
00221a   0000     nop                      	nop
00221c   0000     nop                      	nop
00221e   0000     nop                      	nop
002220   0000     nop                      	nop
002222   0000     nop                      	nop
002224   0000     nop                      	nop
002226   0000     nop                      	nop
002228   0000     nop                      	nop
00222a   0000     nop                      	nop
00222c   0000     nop                      	nop
00222e   0000     nop                      	nop
002230   0000     nop                      	nop
002232   0000     nop                      	nop
002234   0000     nop                      	nop
002236   0000     nop                      	nop
002238   0000     nop                      	nop
00223a   0000     nop                      	nop
00223c   0000     nop                      	nop
00223e   0000     nop                      	nop
002240   0000     nop                      	nop
002242   0000     nop                      	nop
002244   0000     nop                      	nop
002246   0000     nop                      	nop
002248   0000     nop                      	nop
00224a   0000     nop                      	nop
00224c   0000     nop                      	nop
00224e   0000     nop                      	nop
002250   0000     nop                      	nop
002252   0000     nop                      	nop
002254   0000     nop                      	nop
002256   0000     nop                      	nop
002258   0000     nop                      	nop
00225a   0000     nop                      	nop
00225c   0000     nop                      	nop
00225e   0000     nop                      	nop
002260   0000     nop                      	nop
002262   0000     nop                      	nop
002264   0000     nop                      	nop
002266   0000     nop                      	nop
002268   0000     nop                      	nop
00226a   0000     nop                      	nop
00226c   0000     nop                      	nop
00226e   0000     nop                      	nop
002270   0000     nop                      	nop
002272   0000     nop                      	nop
002274   0000     nop                      	nop
002276   0000     nop                      	nop
002278   0000     nop                      	nop
00227a   0000     nop                      	nop
00227c   0000     nop                      	nop
00227e   0000     nop                      	nop
002280   0000     nop                      	nop
002282   0000     nop                      	nop
002284   0000     nop                      	nop
002286   0000     nop                      	nop
002288   0000     nop                      	nop
00228a   0000     nop                      	nop
00228c   0000     nop                      	nop
00228e   0000     nop                      	nop
002290   0000     nop                      	nop
002292   0000     nop                      	nop
002294   0000     nop                      	nop
002296   0000     nop                      	nop
002298   0000     nop                      	nop
00229a   0000     nop                      	nop
00229c   0000     nop                      	nop
00229e   0000     nop                      	nop
0022a0   0000     nop                      	nop
0022a2   0000     nop                      	nop
0022a4   0000     nop                      	nop
0022a6   0000     nop                      	nop
0022a8   0000     nop                      	nop
0022aa   0000     nop                      	nop
0022ac   0000     nop                      	nop
0022ae   0000     nop                      	nop
0022b0   0000     nop                      	nop
0022b2   0000     nop                      	nop
0022b4   0000     nop                      	nop
0022b6   0000     nop                      	nop
0022b8   0000     nop                      	nop
0022ba   0000     nop                      	nop
0022bc   0000     nop                      	nop
0022be   0000     nop                      	nop
0022c0   0000     nop                      	nop
0022c2   0000     nop                      	nop
0022c4   0000     nop                      	nop
0022c6   0000     nop                      	nop
0022c8   0000     nop                      	nop
0022ca   0000     nop                      	nop
0022cc   0000     nop                      	nop
0022ce   0000     nop                      	nop
                                           	
                                           ;	.line	4021; meter_logger.c	PWM_PIN = 0;
0022d0   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
0022d2   0000     nop                      	nop
0022d4   0000     nop                      	nop
0022d6   0000     nop                      	nop
0022d8   0000     nop                      	nop
0022da   0000     nop                      	nop
0022dc   0000     nop                      	nop
0022de   0000     nop                      	nop
0022e0   0000     nop                      	nop
0022e2   0000     nop                      	nop
0022e4   0000     nop                      	nop
0022e6   0000     nop                      	nop
0022e8   0000     nop                      	nop
0022ea   0000     nop                      	nop
0022ec   0000     nop                      	nop
0022ee   0000     nop                      	nop
0022f0   0000     nop                      	nop
0022f2   0000     nop                      	nop
0022f4   0000     nop                      	nop
0022f6   0000     nop                      	nop
0022f8   0000     nop                      	nop
0022fa   0000     nop                      	nop
0022fc   0000     nop                      	nop
0022fe   0000     nop                      	nop
002300   0000     nop                      	nop
002302   0000     nop                      	nop
002304   0000     nop                      	nop
002306   0000     nop                      	nop
002308   0000     nop                      	nop
00230a   0000     nop                      	nop
00230c   0000     nop                      	nop
00230e   0000     nop                      	nop
002310   0000     nop                      	nop
002312   0000     nop                      	nop
002314   0000     nop                      	nop
002316   0000     nop                      	nop
002318   0000     nop                      	nop
00231a   0000     nop                      	nop
00231c   0000     nop                      	nop
00231e   0000     nop                      	nop
002320   0000     nop                      	nop
002322   0000     nop                      	nop
002324   0000     nop                      	nop
002326   0000     nop                      	nop
002328   0000     nop                      	nop
00232a   0000     nop                      	nop
00232c   0000     nop                      	nop
00232e   0000     nop                      	nop
002330   0000     nop                      	nop
002332   0000     nop                      	nop
002334   0000     nop                      	nop
002336   0000     nop                      	nop
002338   0000     nop                      	nop
00233a   0000     nop                      	nop
00233c   0000     nop                      	nop
00233e   0000     nop                      	nop
002340   0000     nop                      	nop
002342   0000     nop                      	nop
002344   0000     nop                      	nop
002346   0000     nop                      	nop
002348   0000     nop                      	nop
00234a   0000     nop                      	nop
00234c   0000     nop                      	nop
00234e   0000     nop                      	nop
002350   0000     nop                      	nop
002352   0000     nop                      	nop
002354   0000     nop                      	nop
002356   0000     nop                      	nop
002358   0000     nop                      	nop
00235a   0000     nop                      	nop
00235c   0000     nop                      	nop
00235e   0000     nop                      	nop
002360   0000     nop                      	nop
002362   0000     nop                      	nop
002364   0000     nop                      	nop
002366   0000     nop                      	nop
002368   0000     nop                      	nop
00236a   0000     nop                      	nop
00236c   0000     nop                      	nop
00236e   0000     nop                      	nop
002370   0000     nop                      	nop
002372   0000     nop                      	nop
002374   0000     nop                      	nop
002376   0000     nop                      	nop
002378   0000     nop                      	nop
00237a   0000     nop                      	nop
00237c   0000     nop                      	nop
00237e   0000     nop                      	nop
002380   0000     nop                      	nop
002382   0000     nop                      	nop
002384   0000     nop                      	nop
002386   0000     nop                      	nop
002388   0000     nop                      	nop
00238a   0000     nop                      	nop
00238c   0000     nop                      	nop
00238e   0000     nop                      	nop
002390   0000     nop                      	nop
002392   0000     nop                      	nop
002394   0000     nop                      	nop
002396   0000     nop                      	nop
002398   0000     nop                      	nop
00239a   0000     nop                      	nop
00239c   0000     nop                      	nop
00239e   0000     nop                      	nop
0023a0   0000     nop                      	nop
0023a2   0000     nop                      	nop
0023a4   0000     nop                      	nop
0023a6   0000     nop                      	nop
0023a8   0000     nop                      	nop
0023aa   0000     nop                      	nop
0023ac   0000     nop                      	nop
0023ae   0000     nop                      	nop
0023b0   0000     nop                      	nop
0023b2   0000     nop                      	nop
0023b4   0000     nop                      	nop
0023b6   0000     nop                      	nop
0023b8   0000     nop                      	nop
0023ba   0000     nop                      	nop
0023bc   0000     nop                      	nop
0023be   0000     nop                      	nop
0023c0   0000     nop                      	nop
0023c2   0000     nop                      	nop
0023c4   0000     nop                      	nop
0023c6   0000     nop                      	nop
0023c8   0000     nop                      	nop
0023ca   0000     nop                      	nop
0023cc   0000     nop                      	nop
0023ce   0000     nop                      	nop
0023d0   0000     nop                      	nop
0023d2   0000     nop                      	nop
0023d4   0000     nop                      	nop
0023d6   0000     nop                      	nop
0023d8   0000     nop                      	nop
0023da   0000     nop                      	nop
0023dc   0000     nop                      	nop
0023de   0000     nop                      	nop
0023e0   0000     nop                      	nop
0023e2   0000     nop                      	nop
0023e4   0000     nop                      	nop
0023e6   0000     nop                      	nop
0023e8   0000     nop                      	nop
0023ea   0000     nop                      	nop
0023ec   0000     nop                      	nop
0023ee   0000     nop                      	nop
0023f0   0000     nop                      	nop
0023f2   0000     nop                      	nop
0023f4   0000     nop                      	nop
0023f6   0000     nop                      	nop
0023f8   0000     nop                      	nop
0023fa   0000     nop                      	nop
0023fc   0000     nop                      	nop
0023fe   0000     nop                      	nop
002400   0000     nop                      	nop
002402   0000     nop                      	nop
002404   0000     nop                      	nop
002406   0000     nop                      	nop
002408   0000     nop                      	nop
00240a   0000     nop                      	nop
00240c   0000     nop                      	nop
00240e   0000     nop                      	nop
002410   0000     nop                      	nop
002412   0000     nop                      	nop
002414   0000     nop                      	nop
002416   0000     nop                      	nop
002418   0000     nop                      	nop
00241a   0000     nop                      	nop
00241c   0000     nop                      	nop
00241e   0000     nop                      	nop
002420   0000     nop                      	nop
002422   0000     nop                      	nop
002424   0000     nop                      	nop
002426   0000     nop                      	nop
002428   0000     nop                      	nop
00242a   0000     nop                      	nop
00242c   0000     nop                      	nop
00242e   0000     nop                      	nop
002430   0000     nop                      	nop
002432   0000     nop                      	nop
002434   0000     nop                      	nop
002436   0000     nop                      	nop
002438   0000     nop                      	nop
00243a   0000     nop                      	nop
00243c   0000     nop                      	nop
00243e   0000     nop                      	nop
002440   0000     nop                      	nop
002442   0000     nop                      	nop
002444   0000     nop                      	nop
002446   0000     nop                      	nop
002448   0000     nop                      	nop
00244a   0000     nop                      	nop
00244c   0000     nop                      	nop
00244e   0000     nop                      	nop
002450   0000     nop                      	nop
002452   0000     nop                      	nop
002454   0000     nop                      	nop
002456   0000     nop                      	nop
002458   0000     nop                      	nop
00245a   0000     nop                      	nop
00245c   0000     nop                      	nop
00245e   0000     nop                      	nop
002460   0000     nop                      	nop
002462   0000     nop                      	nop
002464   0000     nop                      	nop
002466   0000     nop                      	nop
002468   0000     nop                      	nop
                                           	
                                           ;	.line	4228; meter_logger.c	PWM_PIN = 1;
00246a   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
00246c   0000     nop                      	nop
00246e   0000     nop                      	nop
002470   0000     nop                      	nop
002472   0000     nop                      	nop
002474   0000     nop                      	nop
002476   0000     nop                      	nop
002478   0000     nop                      	nop
00247a   0000     nop                      	nop
00247c   0000     nop                      	nop
00247e   0000     nop                      	nop
002480   0000     nop                      	nop
002482   0000     nop                      	nop
002484   0000     nop                      	nop
002486   0000     nop                      	nop
002488   0000     nop                      	nop
00248a   0000     nop                      	nop
00248c   0000     nop                      	nop
00248e   0000     nop                      	nop
002490   0000     nop                      	nop
002492   0000     nop                      	nop
002494   0000     nop                      	nop
002496   0000     nop                      	nop
002498   0000     nop                      	nop
00249a   0000     nop                      	nop
00249c   0000     nop                      	nop
00249e   0000     nop                      	nop
0024a0   0000     nop                      	nop
0024a2   0000     nop                      	nop
0024a4   0000     nop                      	nop
0024a6   0000     nop                      	nop
0024a8   0000     nop                      	nop
0024aa   0000     nop                      	nop
0024ac   0000     nop                      	nop
0024ae   0000     nop                      	nop
0024b0   0000     nop                      	nop
0024b2   0000     nop                      	nop
0024b4   0000     nop                      	nop
0024b6   0000     nop                      	nop
0024b8   0000     nop                      	nop
0024ba   0000     nop                      	nop
0024bc   0000     nop                      	nop
0024be   0000     nop                      	nop
0024c0   0000     nop                      	nop
0024c2   0000     nop                      	nop
0024c4   0000     nop                      	nop
0024c6   0000     nop                      	nop
0024c8   0000     nop                      	nop
0024ca   0000     nop                      	nop
0024cc   0000     nop                      	nop
0024ce   0000     nop                      	nop
0024d0   0000     nop                      	nop
0024d2   0000     nop                      	nop
0024d4   0000     nop                      	nop
0024d6   0000     nop                      	nop
0024d8   0000     nop                      	nop
0024da   0000     nop                      	nop
0024dc   0000     nop                      	nop
0024de   0000     nop                      	nop
0024e0   0000     nop                      	nop
0024e2   0000     nop                      	nop
0024e4   0000     nop                      	nop
0024e6   0000     nop                      	nop
0024e8   0000     nop                      	nop
0024ea   0000     nop                      	nop
0024ec   0000     nop                      	nop
0024ee   0000     nop                      	nop
0024f0   0000     nop                      	nop
0024f2   0000     nop                      	nop
0024f4   0000     nop                      	nop
0024f6   0000     nop                      	nop
0024f8   0000     nop                      	nop
0024fa   0000     nop                      	nop
0024fc   0000     nop                      	nop
0024fe   0000     nop                      	nop
002500   0000     nop                      	nop
002502   0000     nop                      	nop
002504   0000     nop                      	nop
002506   0000     nop                      	nop
002508   0000     nop                      	nop
00250a   0000     nop                      	nop
00250c   0000     nop                      	nop
00250e   0000     nop                      	nop
002510   0000     nop                      	nop
002512   0000     nop                      	nop
002514   0000     nop                      	nop
002516   0000     nop                      	nop
002518   0000     nop                      	nop
00251a   0000     nop                      	nop
00251c   0000     nop                      	nop
00251e   0000     nop                      	nop
002520   0000     nop                      	nop
002522   0000     nop                      	nop
002524   0000     nop                      	nop
002526   0000     nop                      	nop
002528   0000     nop                      	nop
00252a   0000     nop                      	nop
00252c   0000     nop                      	nop
00252e   0000     nop                      	nop
002530   0000     nop                      	nop
002532   0000     nop                      	nop
002534   0000     nop                      	nop
002536   0000     nop                      	nop
002538   0000     nop                      	nop
00253a   0000     nop                      	nop
00253c   0000     nop                      	nop
00253e   0000     nop                      	nop
002540   0000     nop                      	nop
002542   0000     nop                      	nop
002544   0000     nop                      	nop
002546   0000     nop                      	nop
002548   0000     nop                      	nop
00254a   0000     nop                      	nop
00254c   0000     nop                      	nop
00254e   0000     nop                      	nop
002550   0000     nop                      	nop
002552   0000     nop                      	nop
002554   0000     nop                      	nop
002556   0000     nop                      	nop
002558   0000     nop                      	nop
00255a   0000     nop                      	nop
00255c   0000     nop                      	nop
00255e   0000     nop                      	nop
002560   0000     nop                      	nop
002562   0000     nop                      	nop
002564   0000     nop                      	nop
002566   0000     nop                      	nop
002568   0000     nop                      	nop
00256a   0000     nop                      	nop
00256c   0000     nop                      	nop
00256e   0000     nop                      	nop
002570   0000     nop                      	nop
002572   0000     nop                      	nop
002574   0000     nop                      	nop
002576   0000     nop                      	nop
002578   0000     nop                      	nop
00257a   0000     nop                      	nop
00257c   0000     nop                      	nop
00257e   0000     nop                      	nop
002580   0000     nop                      	nop
002582   0000     nop                      	nop
002584   0000     nop                      	nop
002586   0000     nop                      	nop
002588   0000     nop                      	nop
00258a   0000     nop                      	nop
00258c   0000     nop                      	nop
00258e   0000     nop                      	nop
002590   0000     nop                      	nop
002592   0000     nop                      	nop
002594   0000     nop                      	nop
002596   0000     nop                      	nop
002598   0000     nop                      	nop
00259a   0000     nop                      	nop
00259c   0000     nop                      	nop
00259e   0000     nop                      	nop
0025a0   0000     nop                      	nop
0025a2   0000     nop                      	nop
0025a4   0000     nop                      	nop
0025a6   0000     nop                      	nop
0025a8   0000     nop                      	nop
0025aa   0000     nop                      	nop
0025ac   0000     nop                      	nop
0025ae   0000     nop                      	nop
0025b0   0000     nop                      	nop
0025b2   0000     nop                      	nop
0025b4   0000     nop                      	nop
0025b6   0000     nop                      	nop
0025b8   0000     nop                      	nop
0025ba   0000     nop                      	nop
0025bc   0000     nop                      	nop
0025be   0000     nop                      	nop
0025c0   0000     nop                      	nop
0025c2   0000     nop                      	nop
0025c4   0000     nop                      	nop
0025c6   0000     nop                      	nop
0025c8   0000     nop                      	nop
0025ca   0000     nop                      	nop
0025cc   0000     nop                      	nop
0025ce   0000     nop                      	nop
0025d0   0000     nop                      	nop
0025d2   0000     nop                      	nop
0025d4   0000     nop                      	nop
0025d6   0000     nop                      	nop
0025d8   0000     nop                      	nop
0025da   0000     nop                      	nop
0025dc   0000     nop                      	nop
0025de   0000     nop                      	nop
0025e0   0000     nop                      	nop
0025e2   0000     nop                      	nop
0025e4   0000     nop                      	nop
0025e6   0000     nop                      	nop
0025e8   0000     nop                      	nop
0025ea   0000     nop                      	nop
0025ec   0000     nop                      	nop
0025ee   0000     nop                      	nop
0025f0   0000     nop                      	nop
0025f2   0000     nop                      	nop
0025f4   0000     nop                      	nop
0025f6   0000     nop                      	nop
0025f8   0000     nop                      	nop
0025fa   0000     nop                      	nop
0025fc   0000     nop                      	nop
0025fe   0000     nop                      	nop
002600   0000     nop                      	nop
002602   0000     nop                      	nop
                                           	
                                           ;	.line	4435; meter_logger.c	PWM_PIN = 0;
002604   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
002606   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002608   ffd9
00260a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__send_fsk_high	code
                                           _send_fsk_high:
                                           ;	.line	1463; meter_logger.c	void send_fsk_high(void) {
000f06   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000f08   ffe5
000f0a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000f0c   ffd9
                                           ;	.line	1464; meter_logger.c	PWM_PIN = 1;
000f0e   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
000f10   0000     nop                      	nop
000f12   0000     nop                      	nop
000f14   0000     nop                      	nop
000f16   0000     nop                      	nop
000f18   0000     nop                      	nop
000f1a   0000     nop                      	nop
000f1c   0000     nop                      	nop
000f1e   0000     nop                      	nop
000f20   0000     nop                      	nop
000f22   0000     nop                      	nop
000f24   0000     nop                      	nop
000f26   0000     nop                      	nop
000f28   0000     nop                      	nop
000f2a   0000     nop                      	nop
000f2c   0000     nop                      	nop
000f2e   0000     nop                      	nop
000f30   0000     nop                      	nop
000f32   0000     nop                      	nop
000f34   0000     nop                      	nop
000f36   0000     nop                      	nop
000f38   0000     nop                      	nop
000f3a   0000     nop                      	nop
000f3c   0000     nop                      	nop
000f3e   0000     nop                      	nop
000f40   0000     nop                      	nop
000f42   0000     nop                      	nop
000f44   0000     nop                      	nop
000f46   0000     nop                      	nop
000f48   0000     nop                      	nop
000f4a   0000     nop                      	nop
000f4c   0000     nop                      	nop
000f4e   0000     nop                      	nop
000f50   0000     nop                      	nop
000f52   0000     nop                      	nop
000f54   0000     nop                      	nop
000f56   0000     nop                      	nop
000f58   0000     nop                      	nop
000f5a   0000     nop                      	nop
000f5c   0000     nop                      	nop
000f5e   0000     nop                      	nop
000f60   0000     nop                      	nop
000f62   0000     nop                      	nop
000f64   0000     nop                      	nop
000f66   0000     nop                      	nop
000f68   0000     nop                      	nop
000f6a   0000     nop                      	nop
000f6c   0000     nop                      	nop
000f6e   0000     nop                      	nop
000f70   0000     nop                      	nop
000f72   0000     nop                      	nop
000f74   0000     nop                      	nop
000f76   0000     nop                      	nop
000f78   0000     nop                      	nop
000f7a   0000     nop                      	nop
000f7c   0000     nop                      	nop
000f7e   0000     nop                      	nop
000f80   0000     nop                      	nop
000f82   0000     nop                      	nop
000f84   0000     nop                      	nop
000f86   0000     nop                      	nop
000f88   0000     nop                      	nop
000f8a   0000     nop                      	nop
000f8c   0000     nop                      	nop
000f8e   0000     nop                      	nop
000f90   0000     nop                      	nop
000f92   0000     nop                      	nop
000f94   0000     nop                      	nop
000f96   0000     nop                      	nop
000f98   0000     nop                      	nop
000f9a   0000     nop                      	nop
000f9c   0000     nop                      	nop
000f9e   0000     nop                      	nop
000fa0   0000     nop                      	nop
000fa2   0000     nop                      	nop
000fa4   0000     nop                      	nop
000fa6   0000     nop                      	nop
000fa8   0000     nop                      	nop
000faa   0000     nop                      	nop
000fac   0000     nop                      	nop
000fae   0000     nop                      	nop
000fb0   0000     nop                      	nop
000fb2   0000     nop                      	nop
000fb4   0000     nop                      	nop
000fb6   0000     nop                      	nop
000fb8   0000     nop                      	nop
000fba   0000     nop                      	nop
000fbc   0000     nop                      	nop
000fbe   0000     nop                      	nop
000fc0   0000     nop                      	nop
000fc2   0000     nop                      	nop
000fc4   0000     nop                      	nop
000fc6   0000     nop                      	nop
000fc8   0000     nop                      	nop
000fca   0000     nop                      	nop
000fcc   0000     nop                      	nop
000fce   0000     nop                      	nop
000fd0   0000     nop                      	nop
000fd2   0000     nop                      	nop
000fd4   0000     nop                      	nop
000fd6   0000     nop                      	nop
000fd8   0000     nop                      	nop
000fda   0000     nop                      	nop
000fdc   0000     nop                      	nop
000fde   0000     nop                      	nop
000fe0   0000     nop                      	nop
000fe2   0000     nop                      	nop
000fe4   0000     nop                      	nop
000fe6   0000     nop                      	nop
000fe8   0000     nop                      	nop
000fea   0000     nop                      	nop
000fec   0000     nop                      	nop
000fee   0000     nop                      	nop
000ff0   0000     nop                      	nop
000ff2   0000     nop                      	nop
000ff4   0000     nop                      	nop
000ff6   0000     nop                      	nop
000ff8   0000     nop                      	nop
000ffa   0000     nop                      	nop
000ffc   0000     nop                      	nop
000ffe   0000     nop                      	nop
001000   0000     nop                      	nop
001002   0000     nop                      	nop
001004   0000     nop                      	nop
001006   0000     nop                      	nop
001008   0000     nop                      	nop
00100a   0000     nop                      	nop
00100c   0000     nop                      	nop
00100e   0000     nop                      	nop
001010   0000     nop                      	nop
001012   0000     nop                      	nop
001014   0000     nop                      	nop
001016   0000     nop                      	nop
001018   0000     nop                      	nop
00101a   0000     nop                      	nop
00101c   0000     nop                      	nop
                                           	
                                           ;	.line	1602; meter_logger.c	PWM_PIN = 0;
00101e   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001020   0000     nop                      	nop
001022   0000     nop                      	nop
001024   0000     nop                      	nop
001026   0000     nop                      	nop
001028   0000     nop                      	nop
00102a   0000     nop                      	nop
00102c   0000     nop                      	nop
00102e   0000     nop                      	nop
001030   0000     nop                      	nop
001032   0000     nop                      	nop
001034   0000     nop                      	nop
001036   0000     nop                      	nop
001038   0000     nop                      	nop
00103a   0000     nop                      	nop
00103c   0000     nop                      	nop
00103e   0000     nop                      	nop
001040   0000     nop                      	nop
001042   0000     nop                      	nop
001044   0000     nop                      	nop
001046   0000     nop                      	nop
001048   0000     nop                      	nop
00104a   0000     nop                      	nop
00104c   0000     nop                      	nop
00104e   0000     nop                      	nop
001050   0000     nop                      	nop
001052   0000     nop                      	nop
001054   0000     nop                      	nop
001056   0000     nop                      	nop
001058   0000     nop                      	nop
00105a   0000     nop                      	nop
00105c   0000     nop                      	nop
00105e   0000     nop                      	nop
001060   0000     nop                      	nop
001062   0000     nop                      	nop
001064   0000     nop                      	nop
001066   0000     nop                      	nop
001068   0000     nop                      	nop
00106a   0000     nop                      	nop
00106c   0000     nop                      	nop
00106e   0000     nop                      	nop
001070   0000     nop                      	nop
001072   0000     nop                      	nop
001074   0000     nop                      	nop
001076   0000     nop                      	nop
001078   0000     nop                      	nop
00107a   0000     nop                      	nop
00107c   0000     nop                      	nop
00107e   0000     nop                      	nop
001080   0000     nop                      	nop
001082   0000     nop                      	nop
001084   0000     nop                      	nop
001086   0000     nop                      	nop
001088   0000     nop                      	nop
00108a   0000     nop                      	nop
00108c   0000     nop                      	nop
00108e   0000     nop                      	nop
001090   0000     nop                      	nop
001092   0000     nop                      	nop
001094   0000     nop                      	nop
001096   0000     nop                      	nop
001098   0000     nop                      	nop
00109a   0000     nop                      	nop
00109c   0000     nop                      	nop
00109e   0000     nop                      	nop
0010a0   0000     nop                      	nop
0010a2   0000     nop                      	nop
0010a4   0000     nop                      	nop
0010a6   0000     nop                      	nop
0010a8   0000     nop                      	nop
0010aa   0000     nop                      	nop
0010ac   0000     nop                      	nop
0010ae   0000     nop                      	nop
0010b0   0000     nop                      	nop
0010b2   0000     nop                      	nop
0010b4   0000     nop                      	nop
0010b6   0000     nop                      	nop
0010b8   0000     nop                      	nop
0010ba   0000     nop                      	nop
0010bc   0000     nop                      	nop
0010be   0000     nop                      	nop
0010c0   0000     nop                      	nop
0010c2   0000     nop                      	nop
0010c4   0000     nop                      	nop
0010c6   0000     nop                      	nop
0010c8   0000     nop                      	nop
0010ca   0000     nop                      	nop
0010cc   0000     nop                      	nop
0010ce   0000     nop                      	nop
0010d0   0000     nop                      	nop
0010d2   0000     nop                      	nop
0010d4   0000     nop                      	nop
0010d6   0000     nop                      	nop
0010d8   0000     nop                      	nop
0010da   0000     nop                      	nop
0010dc   0000     nop                      	nop
0010de   0000     nop                      	nop
0010e0   0000     nop                      	nop
0010e2   0000     nop                      	nop
0010e4   0000     nop                      	nop
0010e6   0000     nop                      	nop
0010e8   0000     nop                      	nop
0010ea   0000     nop                      	nop
0010ec   0000     nop                      	nop
0010ee   0000     nop                      	nop
0010f0   0000     nop                      	nop
0010f2   0000     nop                      	nop
0010f4   0000     nop                      	nop
0010f6   0000     nop                      	nop
0010f8   0000     nop                      	nop
0010fa   0000     nop                      	nop
0010fc   0000     nop                      	nop
0010fe   0000     nop                      	nop
001100   0000     nop                      	nop
001102   0000     nop                      	nop
001104   0000     nop                      	nop
001106   0000     nop                      	nop
001108   0000     nop                      	nop
00110a   0000     nop                      	nop
00110c   0000     nop                      	nop
00110e   0000     nop                      	nop
001110   0000     nop                      	nop
001112   0000     nop                      	nop
001114   0000     nop                      	nop
001116   0000     nop                      	nop
001118   0000     nop                      	nop
00111a   0000     nop                      	nop
00111c   0000     nop                      	nop
00111e   0000     nop                      	nop
001120   0000     nop                      	nop
001122   0000     nop                      	nop
001124   0000     nop                      	nop
001126   0000     nop                      	nop
001128   0000     nop                      	nop
00112a   0000     nop                      	nop
00112c   0000     nop                      	nop
                                           	
                                           ;	.line	1740; meter_logger.c	PWM_PIN = 1;
00112e   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001130   0000     nop                      	nop
001132   0000     nop                      	nop
001134   0000     nop                      	nop
001136   0000     nop                      	nop
001138   0000     nop                      	nop
00113a   0000     nop                      	nop
00113c   0000     nop                      	nop
00113e   0000     nop                      	nop
001140   0000     nop                      	nop
001142   0000     nop                      	nop
001144   0000     nop                      	nop
001146   0000     nop                      	nop
001148   0000     nop                      	nop
00114a   0000     nop                      	nop
00114c   0000     nop                      	nop
00114e   0000     nop                      	nop
001150   0000     nop                      	nop
001152   0000     nop                      	nop
001154   0000     nop                      	nop
001156   0000     nop                      	nop
001158   0000     nop                      	nop
00115a   0000     nop                      	nop
00115c   0000     nop                      	nop
00115e   0000     nop                      	nop
001160   0000     nop                      	nop
001162   0000     nop                      	nop
001164   0000     nop                      	nop
001166   0000     nop                      	nop
001168   0000     nop                      	nop
00116a   0000     nop                      	nop
00116c   0000     nop                      	nop
00116e   0000     nop                      	nop
001170   0000     nop                      	nop
001172   0000     nop                      	nop
001174   0000     nop                      	nop
001176   0000     nop                      	nop
001178   0000     nop                      	nop
00117a   0000     nop                      	nop
00117c   0000     nop                      	nop
00117e   0000     nop                      	nop
001180   0000     nop                      	nop
001182   0000     nop                      	nop
001184   0000     nop                      	nop
001186   0000     nop                      	nop
001188   0000     nop                      	nop
00118a   0000     nop                      	nop
00118c   0000     nop                      	nop
00118e   0000     nop                      	nop
001190   0000     nop                      	nop
001192   0000     nop                      	nop
001194   0000     nop                      	nop
001196   0000     nop                      	nop
001198   0000     nop                      	nop
00119a   0000     nop                      	nop
00119c   0000     nop                      	nop
00119e   0000     nop                      	nop
0011a0   0000     nop                      	nop
0011a2   0000     nop                      	nop
0011a4   0000     nop                      	nop
0011a6   0000     nop                      	nop
0011a8   0000     nop                      	nop
0011aa   0000     nop                      	nop
0011ac   0000     nop                      	nop
0011ae   0000     nop                      	nop
0011b0   0000     nop                      	nop
0011b2   0000     nop                      	nop
0011b4   0000     nop                      	nop
0011b6   0000     nop                      	nop
0011b8   0000     nop                      	nop
0011ba   0000     nop                      	nop
0011bc   0000     nop                      	nop
0011be   0000     nop                      	nop
0011c0   0000     nop                      	nop
0011c2   0000     nop                      	nop
0011c4   0000     nop                      	nop
0011c6   0000     nop                      	nop
0011c8   0000     nop                      	nop
0011ca   0000     nop                      	nop
0011cc   0000     nop                      	nop
0011ce   0000     nop                      	nop
0011d0   0000     nop                      	nop
0011d2   0000     nop                      	nop
0011d4   0000     nop                      	nop
0011d6   0000     nop                      	nop
0011d8   0000     nop                      	nop
0011da   0000     nop                      	nop
0011dc   0000     nop                      	nop
0011de   0000     nop                      	nop
0011e0   0000     nop                      	nop
0011e2   0000     nop                      	nop
0011e4   0000     nop                      	nop
0011e6   0000     nop                      	nop
0011e8   0000     nop                      	nop
0011ea   0000     nop                      	nop
0011ec   0000     nop                      	nop
0011ee   0000     nop                      	nop
0011f0   0000     nop                      	nop
0011f2   0000     nop                      	nop
0011f4   0000     nop                      	nop
0011f6   0000     nop                      	nop
0011f8   0000     nop                      	nop
0011fa   0000     nop                      	nop
0011fc   0000     nop                      	nop
0011fe   0000     nop                      	nop
001200   0000     nop                      	nop
001202   0000     nop                      	nop
001204   0000     nop                      	nop
001206   0000     nop                      	nop
001208   0000     nop                      	nop
00120a   0000     nop                      	nop
00120c   0000     nop                      	nop
00120e   0000     nop                      	nop
001210   0000     nop                      	nop
001212   0000     nop                      	nop
001214   0000     nop                      	nop
001216   0000     nop                      	nop
001218   0000     nop                      	nop
00121a   0000     nop                      	nop
00121c   0000     nop                      	nop
00121e   0000     nop                      	nop
001220   0000     nop                      	nop
001222   0000     nop                      	nop
001224   0000     nop                      	nop
001226   0000     nop                      	nop
001228   0000     nop                      	nop
00122a   0000     nop                      	nop
00122c   0000     nop                      	nop
00122e   0000     nop                      	nop
001230   0000     nop                      	nop
001232   0000     nop                      	nop
001234   0000     nop                      	nop
001236   0000     nop                      	nop
001238   0000     nop                      	nop
00123a   0000     nop                      	nop
00123c   0000     nop                      	nop
                                           	
                                           ;	.line	1878; meter_logger.c	PWM_PIN = 0;
00123e   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001240   0000     nop                      	nop
001242   0000     nop                      	nop
001244   0000     nop                      	nop
001246   0000     nop                      	nop
001248   0000     nop                      	nop
00124a   0000     nop                      	nop
00124c   0000     nop                      	nop
00124e   0000     nop                      	nop
001250   0000     nop                      	nop
001252   0000     nop                      	nop
001254   0000     nop                      	nop
001256   0000     nop                      	nop
001258   0000     nop                      	nop
00125a   0000     nop                      	nop
00125c   0000     nop                      	nop
00125e   0000     nop                      	nop
001260   0000     nop                      	nop
001262   0000     nop                      	nop
001264   0000     nop                      	nop
001266   0000     nop                      	nop
001268   0000     nop                      	nop
00126a   0000     nop                      	nop
00126c   0000     nop                      	nop
00126e   0000     nop                      	nop
001270   0000     nop                      	nop
001272   0000     nop                      	nop
001274   0000     nop                      	nop
001276   0000     nop                      	nop
001278   0000     nop                      	nop
00127a   0000     nop                      	nop
00127c   0000     nop                      	nop
00127e   0000     nop                      	nop
001280   0000     nop                      	nop
001282   0000     nop                      	nop
001284   0000     nop                      	nop
001286   0000     nop                      	nop
001288   0000     nop                      	nop
00128a   0000     nop                      	nop
00128c   0000     nop                      	nop
00128e   0000     nop                      	nop
001290   0000     nop                      	nop
001292   0000     nop                      	nop
001294   0000     nop                      	nop
001296   0000     nop                      	nop
001298   0000     nop                      	nop
00129a   0000     nop                      	nop
00129c   0000     nop                      	nop
00129e   0000     nop                      	nop
0012a0   0000     nop                      	nop
0012a2   0000     nop                      	nop
0012a4   0000     nop                      	nop
0012a6   0000     nop                      	nop
0012a8   0000     nop                      	nop
0012aa   0000     nop                      	nop
0012ac   0000     nop                      	nop
0012ae   0000     nop                      	nop
0012b0   0000     nop                      	nop
0012b2   0000     nop                      	nop
0012b4   0000     nop                      	nop
0012b6   0000     nop                      	nop
0012b8   0000     nop                      	nop
0012ba   0000     nop                      	nop
0012bc   0000     nop                      	nop
0012be   0000     nop                      	nop
0012c0   0000     nop                      	nop
0012c2   0000     nop                      	nop
0012c4   0000     nop                      	nop
0012c6   0000     nop                      	nop
0012c8   0000     nop                      	nop
0012ca   0000     nop                      	nop
0012cc   0000     nop                      	nop
0012ce   0000     nop                      	nop
0012d0   0000     nop                      	nop
0012d2   0000     nop                      	nop
0012d4   0000     nop                      	nop
0012d6   0000     nop                      	nop
0012d8   0000     nop                      	nop
0012da   0000     nop                      	nop
0012dc   0000     nop                      	nop
0012de   0000     nop                      	nop
0012e0   0000     nop                      	nop
0012e2   0000     nop                      	nop
0012e4   0000     nop                      	nop
0012e6   0000     nop                      	nop
0012e8   0000     nop                      	nop
0012ea   0000     nop                      	nop
0012ec   0000     nop                      	nop
0012ee   0000     nop                      	nop
0012f0   0000     nop                      	nop
0012f2   0000     nop                      	nop
0012f4   0000     nop                      	nop
0012f6   0000     nop                      	nop
0012f8   0000     nop                      	nop
0012fa   0000     nop                      	nop
0012fc   0000     nop                      	nop
0012fe   0000     nop                      	nop
001300   0000     nop                      	nop
001302   0000     nop                      	nop
001304   0000     nop                      	nop
001306   0000     nop                      	nop
001308   0000     nop                      	nop
00130a   0000     nop                      	nop
00130c   0000     nop                      	nop
00130e   0000     nop                      	nop
001310   0000     nop                      	nop
001312   0000     nop                      	nop
001314   0000     nop                      	nop
001316   0000     nop                      	nop
001318   0000     nop                      	nop
00131a   0000     nop                      	nop
00131c   0000     nop                      	nop
00131e   0000     nop                      	nop
001320   0000     nop                      	nop
001322   0000     nop                      	nop
001324   0000     nop                      	nop
001326   0000     nop                      	nop
001328   0000     nop                      	nop
00132a   0000     nop                      	nop
00132c   0000     nop                      	nop
00132e   0000     nop                      	nop
001330   0000     nop                      	nop
001332   0000     nop                      	nop
001334   0000     nop                      	nop
001336   0000     nop                      	nop
001338   0000     nop                      	nop
00133a   0000     nop                      	nop
00133c   0000     nop                      	nop
00133e   0000     nop                      	nop
001340   0000     nop                      	nop
001342   0000     nop                      	nop
001344   0000     nop                      	nop
001346   0000     nop                      	nop
001348   0000     nop                      	nop
00134a   0000     nop                      	nop
00134c   0000     nop                      	nop
                                           	
                                           ;	.line	2016; meter_logger.c	PWM_PIN = 1;
00134e   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001350   0000     nop                      	nop
001352   0000     nop                      	nop
001354   0000     nop                      	nop
001356   0000     nop                      	nop
001358   0000     nop                      	nop
00135a   0000     nop                      	nop
00135c   0000     nop                      	nop
00135e   0000     nop                      	nop
001360   0000     nop                      	nop
001362   0000     nop                      	nop
001364   0000     nop                      	nop
001366   0000     nop                      	nop
001368   0000     nop                      	nop
00136a   0000     nop                      	nop
00136c   0000     nop                      	nop
00136e   0000     nop                      	nop
001370   0000     nop                      	nop
001372   0000     nop                      	nop
001374   0000     nop                      	nop
001376   0000     nop                      	nop
001378   0000     nop                      	nop
00137a   0000     nop                      	nop
00137c   0000     nop                      	nop
00137e   0000     nop                      	nop
001380   0000     nop                      	nop
001382   0000     nop                      	nop
001384   0000     nop                      	nop
001386   0000     nop                      	nop
001388   0000     nop                      	nop
00138a   0000     nop                      	nop
00138c   0000     nop                      	nop
00138e   0000     nop                      	nop
001390   0000     nop                      	nop
001392   0000     nop                      	nop
001394   0000     nop                      	nop
001396   0000     nop                      	nop
001398   0000     nop                      	nop
00139a   0000     nop                      	nop
00139c   0000     nop                      	nop
00139e   0000     nop                      	nop
0013a0   0000     nop                      	nop
0013a2   0000     nop                      	nop
0013a4   0000     nop                      	nop
0013a6   0000     nop                      	nop
0013a8   0000     nop                      	nop
0013aa   0000     nop                      	nop
0013ac   0000     nop                      	nop
0013ae   0000     nop                      	nop
0013b0   0000     nop                      	nop
0013b2   0000     nop                      	nop
0013b4   0000     nop                      	nop
0013b6   0000     nop                      	nop
0013b8   0000     nop                      	nop
0013ba   0000     nop                      	nop
0013bc   0000     nop                      	nop
0013be   0000     nop                      	nop
0013c0   0000     nop                      	nop
0013c2   0000     nop                      	nop
0013c4   0000     nop                      	nop
0013c6   0000     nop                      	nop
0013c8   0000     nop                      	nop
0013ca   0000     nop                      	nop
0013cc   0000     nop                      	nop
0013ce   0000     nop                      	nop
0013d0   0000     nop                      	nop
0013d2   0000     nop                      	nop
0013d4   0000     nop                      	nop
0013d6   0000     nop                      	nop
0013d8   0000     nop                      	nop
0013da   0000     nop                      	nop
0013dc   0000     nop                      	nop
0013de   0000     nop                      	nop
0013e0   0000     nop                      	nop
0013e2   0000     nop                      	nop
0013e4   0000     nop                      	nop
0013e6   0000     nop                      	nop
0013e8   0000     nop                      	nop
0013ea   0000     nop                      	nop
0013ec   0000     nop                      	nop
0013ee   0000     nop                      	nop
0013f0   0000     nop                      	nop
0013f2   0000     nop                      	nop
0013f4   0000     nop                      	nop
0013f6   0000     nop                      	nop
0013f8   0000     nop                      	nop
0013fa   0000     nop                      	nop
0013fc   0000     nop                      	nop
0013fe   0000     nop                      	nop
001400   0000     nop                      	nop
001402   0000     nop                      	nop
001404   0000     nop                      	nop
001406   0000     nop                      	nop
001408   0000     nop                      	nop
00140a   0000     nop                      	nop
00140c   0000     nop                      	nop
00140e   0000     nop                      	nop
001410   0000     nop                      	nop
001412   0000     nop                      	nop
001414   0000     nop                      	nop
001416   0000     nop                      	nop
001418   0000     nop                      	nop
00141a   0000     nop                      	nop
00141c   0000     nop                      	nop
00141e   0000     nop                      	nop
001420   0000     nop                      	nop
001422   0000     nop                      	nop
001424   0000     nop                      	nop
001426   0000     nop                      	nop
001428   0000     nop                      	nop
00142a   0000     nop                      	nop
00142c   0000     nop                      	nop
00142e   0000     nop                      	nop
001430   0000     nop                      	nop
001432   0000     nop                      	nop
001434   0000     nop                      	nop
001436   0000     nop                      	nop
001438   0000     nop                      	nop
00143a   0000     nop                      	nop
00143c   0000     nop                      	nop
00143e   0000     nop                      	nop
001440   0000     nop                      	nop
001442   0000     nop                      	nop
001444   0000     nop                      	nop
001446   0000     nop                      	nop
001448   0000     nop                      	nop
00144a   0000     nop                      	nop
00144c   0000     nop                      	nop
00144e   0000     nop                      	nop
001450   0000     nop                      	nop
001452   0000     nop                      	nop
001454   0000     nop                      	nop
001456   0000     nop                      	nop
001458   0000     nop                      	nop
00145a   0000     nop                      	nop
00145c   0000     nop                      	nop
                                           	
                                           ;	.line	2154; meter_logger.c	PWM_PIN = 0;
00145e   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001460   0000     nop                      	nop
001462   0000     nop                      	nop
001464   0000     nop                      	nop
001466   0000     nop                      	nop
001468   0000     nop                      	nop
00146a   0000     nop                      	nop
00146c   0000     nop                      	nop
00146e   0000     nop                      	nop
001470   0000     nop                      	nop
001472   0000     nop                      	nop
001474   0000     nop                      	nop
001476   0000     nop                      	nop
001478   0000     nop                      	nop
00147a   0000     nop                      	nop
00147c   0000     nop                      	nop
00147e   0000     nop                      	nop
001480   0000     nop                      	nop
001482   0000     nop                      	nop
001484   0000     nop                      	nop
001486   0000     nop                      	nop
001488   0000     nop                      	nop
00148a   0000     nop                      	nop
00148c   0000     nop                      	nop
00148e   0000     nop                      	nop
001490   0000     nop                      	nop
001492   0000     nop                      	nop
001494   0000     nop                      	nop
001496   0000     nop                      	nop
001498   0000     nop                      	nop
00149a   0000     nop                      	nop
00149c   0000     nop                      	nop
00149e   0000     nop                      	nop
0014a0   0000     nop                      	nop
0014a2   0000     nop                      	nop
0014a4   0000     nop                      	nop
0014a6   0000     nop                      	nop
0014a8   0000     nop                      	nop
0014aa   0000     nop                      	nop
0014ac   0000     nop                      	nop
0014ae   0000     nop                      	nop
0014b0   0000     nop                      	nop
0014b2   0000     nop                      	nop
0014b4   0000     nop                      	nop
0014b6   0000     nop                      	nop
0014b8   0000     nop                      	nop
0014ba   0000     nop                      	nop
0014bc   0000     nop                      	nop
0014be   0000     nop                      	nop
0014c0   0000     nop                      	nop
0014c2   0000     nop                      	nop
0014c4   0000     nop                      	nop
0014c6   0000     nop                      	nop
0014c8   0000     nop                      	nop
0014ca   0000     nop                      	nop
0014cc   0000     nop                      	nop
0014ce   0000     nop                      	nop
0014d0   0000     nop                      	nop
0014d2   0000     nop                      	nop
0014d4   0000     nop                      	nop
0014d6   0000     nop                      	nop
0014d8   0000     nop                      	nop
0014da   0000     nop                      	nop
0014dc   0000     nop                      	nop
0014de   0000     nop                      	nop
0014e0   0000     nop                      	nop
0014e2   0000     nop                      	nop
0014e4   0000     nop                      	nop
0014e6   0000     nop                      	nop
0014e8   0000     nop                      	nop
0014ea   0000     nop                      	nop
0014ec   0000     nop                      	nop
0014ee   0000     nop                      	nop
0014f0   0000     nop                      	nop
0014f2   0000     nop                      	nop
0014f4   0000     nop                      	nop
0014f6   0000     nop                      	nop
0014f8   0000     nop                      	nop
0014fa   0000     nop                      	nop
0014fc   0000     nop                      	nop
0014fe   0000     nop                      	nop
001500   0000     nop                      	nop
001502   0000     nop                      	nop
001504   0000     nop                      	nop
001506   0000     nop                      	nop
001508   0000     nop                      	nop
00150a   0000     nop                      	nop
00150c   0000     nop                      	nop
00150e   0000     nop                      	nop
001510   0000     nop                      	nop
001512   0000     nop                      	nop
001514   0000     nop                      	nop
001516   0000     nop                      	nop
001518   0000     nop                      	nop
00151a   0000     nop                      	nop
00151c   0000     nop                      	nop
00151e   0000     nop                      	nop
001520   0000     nop                      	nop
001522   0000     nop                      	nop
001524   0000     nop                      	nop
001526   0000     nop                      	nop
001528   0000     nop                      	nop
00152a   0000     nop                      	nop
00152c   0000     nop                      	nop
00152e   0000     nop                      	nop
001530   0000     nop                      	nop
001532   0000     nop                      	nop
001534   0000     nop                      	nop
001536   0000     nop                      	nop
001538   0000     nop                      	nop
00153a   0000     nop                      	nop
00153c   0000     nop                      	nop
00153e   0000     nop                      	nop
001540   0000     nop                      	nop
001542   0000     nop                      	nop
001544   0000     nop                      	nop
001546   0000     nop                      	nop
001548   0000     nop                      	nop
00154a   0000     nop                      	nop
00154c   0000     nop                      	nop
00154e   0000     nop                      	nop
001550   0000     nop                      	nop
001552   0000     nop                      	nop
001554   0000     nop                      	nop
001556   0000     nop                      	nop
001558   0000     nop                      	nop
00155a   0000     nop                      	nop
00155c   0000     nop                      	nop
00155e   0000     nop                      	nop
001560   0000     nop                      	nop
001562   0000     nop                      	nop
001564   0000     nop                      	nop
001566   0000     nop                      	nop
001568   0000     nop                      	nop
00156a   0000     nop                      	nop
00156c   0000     nop                      	nop
                                           	
                                           ;	.line	2292; meter_logger.c	PWM_PIN = 1;
00156e   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001570   0000     nop                      	nop
001572   0000     nop                      	nop
001574   0000     nop                      	nop
001576   0000     nop                      	nop
001578   0000     nop                      	nop
00157a   0000     nop                      	nop
00157c   0000     nop                      	nop
00157e   0000     nop                      	nop
001580   0000     nop                      	nop
001582   0000     nop                      	nop
001584   0000     nop                      	nop
001586   0000     nop                      	nop
001588   0000     nop                      	nop
00158a   0000     nop                      	nop
00158c   0000     nop                      	nop
00158e   0000     nop                      	nop
001590   0000     nop                      	nop
001592   0000     nop                      	nop
001594   0000     nop                      	nop
001596   0000     nop                      	nop
001598   0000     nop                      	nop
00159a   0000     nop                      	nop
00159c   0000     nop                      	nop
00159e   0000     nop                      	nop
0015a0   0000     nop                      	nop
0015a2   0000     nop                      	nop
0015a4   0000     nop                      	nop
0015a6   0000     nop                      	nop
0015a8   0000     nop                      	nop
0015aa   0000     nop                      	nop
0015ac   0000     nop                      	nop
0015ae   0000     nop                      	nop
0015b0   0000     nop                      	nop
0015b2   0000     nop                      	nop
0015b4   0000     nop                      	nop
0015b6   0000     nop                      	nop
0015b8   0000     nop                      	nop
0015ba   0000     nop                      	nop
0015bc   0000     nop                      	nop
0015be   0000     nop                      	nop
0015c0   0000     nop                      	nop
0015c2   0000     nop                      	nop
0015c4   0000     nop                      	nop
0015c6   0000     nop                      	nop
0015c8   0000     nop                      	nop
0015ca   0000     nop                      	nop
0015cc   0000     nop                      	nop
0015ce   0000     nop                      	nop
0015d0   0000     nop                      	nop
0015d2   0000     nop                      	nop
0015d4   0000     nop                      	nop
0015d6   0000     nop                      	nop
0015d8   0000     nop                      	nop
0015da   0000     nop                      	nop
0015dc   0000     nop                      	nop
0015de   0000     nop                      	nop
0015e0   0000     nop                      	nop
0015e2   0000     nop                      	nop
0015e4   0000     nop                      	nop
0015e6   0000     nop                      	nop
0015e8   0000     nop                      	nop
0015ea   0000     nop                      	nop
0015ec   0000     nop                      	nop
0015ee   0000     nop                      	nop
0015f0   0000     nop                      	nop
0015f2   0000     nop                      	nop
0015f4   0000     nop                      	nop
0015f6   0000     nop                      	nop
0015f8   0000     nop                      	nop
0015fa   0000     nop                      	nop
0015fc   0000     nop                      	nop
0015fe   0000     nop                      	nop
001600   0000     nop                      	nop
001602   0000     nop                      	nop
001604   0000     nop                      	nop
001606   0000     nop                      	nop
001608   0000     nop                      	nop
00160a   0000     nop                      	nop
00160c   0000     nop                      	nop
00160e   0000     nop                      	nop
001610   0000     nop                      	nop
001612   0000     nop                      	nop
001614   0000     nop                      	nop
001616   0000     nop                      	nop
001618   0000     nop                      	nop
00161a   0000     nop                      	nop
00161c   0000     nop                      	nop
00161e   0000     nop                      	nop
001620   0000     nop                      	nop
001622   0000     nop                      	nop
001624   0000     nop                      	nop
001626   0000     nop                      	nop
001628   0000     nop                      	nop
00162a   0000     nop                      	nop
00162c   0000     nop                      	nop
00162e   0000     nop                      	nop
001630   0000     nop                      	nop
001632   0000     nop                      	nop
001634   0000     nop                      	nop
001636   0000     nop                      	nop
001638   0000     nop                      	nop
00163a   0000     nop                      	nop
00163c   0000     nop                      	nop
00163e   0000     nop                      	nop
001640   0000     nop                      	nop
001642   0000     nop                      	nop
001644   0000     nop                      	nop
001646   0000     nop                      	nop
001648   0000     nop                      	nop
00164a   0000     nop                      	nop
00164c   0000     nop                      	nop
00164e   0000     nop                      	nop
001650   0000     nop                      	nop
001652   0000     nop                      	nop
001654   0000     nop                      	nop
001656   0000     nop                      	nop
001658   0000     nop                      	nop
00165a   0000     nop                      	nop
00165c   0000     nop                      	nop
00165e   0000     nop                      	nop
001660   0000     nop                      	nop
001662   0000     nop                      	nop
001664   0000     nop                      	nop
001666   0000     nop                      	nop
001668   0000     nop                      	nop
00166a   0000     nop                      	nop
00166c   0000     nop                      	nop
00166e   0000     nop                      	nop
001670   0000     nop                      	nop
001672   0000     nop                      	nop
001674   0000     nop                      	nop
001676   0000     nop                      	nop
001678   0000     nop                      	nop
00167a   0000     nop                      	nop
00167c   0000     nop                      	nop
                                           	
                                           ;	.line	2430; meter_logger.c	PWM_PIN = 0;
00167e   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001680   0000     nop                      	nop
001682   0000     nop                      	nop
001684   0000     nop                      	nop
001686   0000     nop                      	nop
001688   0000     nop                      	nop
00168a   0000     nop                      	nop
00168c   0000     nop                      	nop
00168e   0000     nop                      	nop
001690   0000     nop                      	nop
001692   0000     nop                      	nop
001694   0000     nop                      	nop
001696   0000     nop                      	nop
001698   0000     nop                      	nop
00169a   0000     nop                      	nop
00169c   0000     nop                      	nop
00169e   0000     nop                      	nop
0016a0   0000     nop                      	nop
0016a2   0000     nop                      	nop
0016a4   0000     nop                      	nop
0016a6   0000     nop                      	nop
0016a8   0000     nop                      	nop
0016aa   0000     nop                      	nop
0016ac   0000     nop                      	nop
0016ae   0000     nop                      	nop
0016b0   0000     nop                      	nop
0016b2   0000     nop                      	nop
0016b4   0000     nop                      	nop
0016b6   0000     nop                      	nop
0016b8   0000     nop                      	nop
0016ba   0000     nop                      	nop
0016bc   0000     nop                      	nop
0016be   0000     nop                      	nop
0016c0   0000     nop                      	nop
0016c2   0000     nop                      	nop
0016c4   0000     nop                      	nop
0016c6   0000     nop                      	nop
0016c8   0000     nop                      	nop
0016ca   0000     nop                      	nop
0016cc   0000     nop                      	nop
0016ce   0000     nop                      	nop
0016d0   0000     nop                      	nop
0016d2   0000     nop                      	nop
0016d4   0000     nop                      	nop
0016d6   0000     nop                      	nop
0016d8   0000     nop                      	nop
0016da   0000     nop                      	nop
0016dc   0000     nop                      	nop
0016de   0000     nop                      	nop
0016e0   0000     nop                      	nop
0016e2   0000     nop                      	nop
0016e4   0000     nop                      	nop
0016e6   0000     nop                      	nop
0016e8   0000     nop                      	nop
0016ea   0000     nop                      	nop
0016ec   0000     nop                      	nop
0016ee   0000     nop                      	nop
0016f0   0000     nop                      	nop
0016f2   0000     nop                      	nop
0016f4   0000     nop                      	nop
0016f6   0000     nop                      	nop
0016f8   0000     nop                      	nop
0016fa   0000     nop                      	nop
0016fc   0000     nop                      	nop
0016fe   0000     nop                      	nop
001700   0000     nop                      	nop
001702   0000     nop                      	nop
001704   0000     nop                      	nop
001706   0000     nop                      	nop
001708   0000     nop                      	nop
00170a   0000     nop                      	nop
00170c   0000     nop                      	nop
00170e   0000     nop                      	nop
001710   0000     nop                      	nop
001712   0000     nop                      	nop
001714   0000     nop                      	nop
001716   0000     nop                      	nop
001718   0000     nop                      	nop
00171a   0000     nop                      	nop
00171c   0000     nop                      	nop
00171e   0000     nop                      	nop
001720   0000     nop                      	nop
001722   0000     nop                      	nop
001724   0000     nop                      	nop
001726   0000     nop                      	nop
001728   0000     nop                      	nop
00172a   0000     nop                      	nop
00172c   0000     nop                      	nop
00172e   0000     nop                      	nop
001730   0000     nop                      	nop
001732   0000     nop                      	nop
001734   0000     nop                      	nop
001736   0000     nop                      	nop
001738   0000     nop                      	nop
00173a   0000     nop                      	nop
00173c   0000     nop                      	nop
00173e   0000     nop                      	nop
001740   0000     nop                      	nop
001742   0000     nop                      	nop
001744   0000     nop                      	nop
001746   0000     nop                      	nop
001748   0000     nop                      	nop
00174a   0000     nop                      	nop
00174c   0000     nop                      	nop
00174e   0000     nop                      	nop
001750   0000     nop                      	nop
001752   0000     nop                      	nop
001754   0000     nop                      	nop
001756   0000     nop                      	nop
001758   0000     nop                      	nop
00175a   0000     nop                      	nop
00175c   0000     nop                      	nop
00175e   0000     nop                      	nop
001760   0000     nop                      	nop
001762   0000     nop                      	nop
001764   0000     nop                      	nop
001766   0000     nop                      	nop
001768   0000     nop                      	nop
00176a   0000     nop                      	nop
00176c   0000     nop                      	nop
00176e   0000     nop                      	nop
001770   0000     nop                      	nop
001772   0000     nop                      	nop
001774   0000     nop                      	nop
001776   0000     nop                      	nop
001778   0000     nop                      	nop
00177a   0000     nop                      	nop
00177c   0000     nop                      	nop
00177e   0000     nop                      	nop
001780   0000     nop                      	nop
001782   0000     nop                      	nop
001784   0000     nop                      	nop
001786   0000     nop                      	nop
001788   0000     nop                      	nop
00178a   0000     nop                      	nop
00178c   0000     nop                      	nop
                                           	
                                           ;	.line	2568; meter_logger.c	PWM_PIN = 1;
00178e   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001790   0000     nop                      	nop
001792   0000     nop                      	nop
001794   0000     nop                      	nop
001796   0000     nop                      	nop
001798   0000     nop                      	nop
00179a   0000     nop                      	nop
00179c   0000     nop                      	nop
00179e   0000     nop                      	nop
0017a0   0000     nop                      	nop
0017a2   0000     nop                      	nop
0017a4   0000     nop                      	nop
0017a6   0000     nop                      	nop
0017a8   0000     nop                      	nop
0017aa   0000     nop                      	nop
0017ac   0000     nop                      	nop
0017ae   0000     nop                      	nop
0017b0   0000     nop                      	nop
0017b2   0000     nop                      	nop
0017b4   0000     nop                      	nop
0017b6   0000     nop                      	nop
0017b8   0000     nop                      	nop
0017ba   0000     nop                      	nop
0017bc   0000     nop                      	nop
0017be   0000     nop                      	nop
0017c0   0000     nop                      	nop
0017c2   0000     nop                      	nop
0017c4   0000     nop                      	nop
0017c6   0000     nop                      	nop
0017c8   0000     nop                      	nop
0017ca   0000     nop                      	nop
0017cc   0000     nop                      	nop
0017ce   0000     nop                      	nop
0017d0   0000     nop                      	nop
0017d2   0000     nop                      	nop
0017d4   0000     nop                      	nop
0017d6   0000     nop                      	nop
0017d8   0000     nop                      	nop
0017da   0000     nop                      	nop
0017dc   0000     nop                      	nop
0017de   0000     nop                      	nop
0017e0   0000     nop                      	nop
0017e2   0000     nop                      	nop
0017e4   0000     nop                      	nop
0017e6   0000     nop                      	nop
0017e8   0000     nop                      	nop
0017ea   0000     nop                      	nop
0017ec   0000     nop                      	nop
0017ee   0000     nop                      	nop
0017f0   0000     nop                      	nop
0017f2   0000     nop                      	nop
0017f4   0000     nop                      	nop
0017f6   0000     nop                      	nop
0017f8   0000     nop                      	nop
0017fa   0000     nop                      	nop
0017fc   0000     nop                      	nop
0017fe   0000     nop                      	nop
001800   0000     nop                      	nop
001802   0000     nop                      	nop
001804   0000     nop                      	nop
001806   0000     nop                      	nop
001808   0000     nop                      	nop
00180a   0000     nop                      	nop
00180c   0000     nop                      	nop
00180e   0000     nop                      	nop
001810   0000     nop                      	nop
001812   0000     nop                      	nop
001814   0000     nop                      	nop
001816   0000     nop                      	nop
001818   0000     nop                      	nop
00181a   0000     nop                      	nop
00181c   0000     nop                      	nop
00181e   0000     nop                      	nop
001820   0000     nop                      	nop
001822   0000     nop                      	nop
001824   0000     nop                      	nop
001826   0000     nop                      	nop
001828   0000     nop                      	nop
00182a   0000     nop                      	nop
00182c   0000     nop                      	nop
00182e   0000     nop                      	nop
001830   0000     nop                      	nop
001832   0000     nop                      	nop
001834   0000     nop                      	nop
001836   0000     nop                      	nop
001838   0000     nop                      	nop
00183a   0000     nop                      	nop
00183c   0000     nop                      	nop
00183e   0000     nop                      	nop
001840   0000     nop                      	nop
001842   0000     nop                      	nop
001844   0000     nop                      	nop
001846   0000     nop                      	nop
001848   0000     nop                      	nop
00184a   0000     nop                      	nop
00184c   0000     nop                      	nop
00184e   0000     nop                      	nop
001850   0000     nop                      	nop
001852   0000     nop                      	nop
001854   0000     nop                      	nop
001856   0000     nop                      	nop
001858   0000     nop                      	nop
00185a   0000     nop                      	nop
00185c   0000     nop                      	nop
00185e   0000     nop                      	nop
001860   0000     nop                      	nop
001862   0000     nop                      	nop
001864   0000     nop                      	nop
001866   0000     nop                      	nop
001868   0000     nop                      	nop
00186a   0000     nop                      	nop
00186c   0000     nop                      	nop
00186e   0000     nop                      	nop
001870   0000     nop                      	nop
001872   0000     nop                      	nop
001874   0000     nop                      	nop
001876   0000     nop                      	nop
001878   0000     nop                      	nop
00187a   0000     nop                      	nop
00187c   0000     nop                      	nop
00187e   0000     nop                      	nop
001880   0000     nop                      	nop
001882   0000     nop                      	nop
001884   0000     nop                      	nop
001886   0000     nop                      	nop
001888   0000     nop                      	nop
00188a   0000     nop                      	nop
00188c   0000     nop                      	nop
00188e   0000     nop                      	nop
001890   0000     nop                      	nop
001892   0000     nop                      	nop
001894   0000     nop                      	nop
001896   0000     nop                      	nop
001898   0000     nop                      	nop
00189a   0000     nop                      	nop
00189c   0000     nop                      	nop
                                           	
                                           ;	.line	2706; meter_logger.c	PWM_PIN = 0;
00189e   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
0018a0   0000     nop                      	nop
0018a2   0000     nop                      	nop
0018a4   0000     nop                      	nop
0018a6   0000     nop                      	nop
0018a8   0000     nop                      	nop
0018aa   0000     nop                      	nop
0018ac   0000     nop                      	nop
0018ae   0000     nop                      	nop
0018b0   0000     nop                      	nop
0018b2   0000     nop                      	nop
0018b4   0000     nop                      	nop
0018b6   0000     nop                      	nop
0018b8   0000     nop                      	nop
0018ba   0000     nop                      	nop
0018bc   0000     nop                      	nop
0018be   0000     nop                      	nop
0018c0   0000     nop                      	nop
0018c2   0000     nop                      	nop
0018c4   0000     nop                      	nop
0018c6   0000     nop                      	nop
0018c8   0000     nop                      	nop
0018ca   0000     nop                      	nop
0018cc   0000     nop                      	nop
0018ce   0000     nop                      	nop
0018d0   0000     nop                      	nop
0018d2   0000     nop                      	nop
0018d4   0000     nop                      	nop
0018d6   0000     nop                      	nop
0018d8   0000     nop                      	nop
0018da   0000     nop                      	nop
0018dc   0000     nop                      	nop
0018de   0000     nop                      	nop
0018e0   0000     nop                      	nop
0018e2   0000     nop                      	nop
0018e4   0000     nop                      	nop
0018e6   0000     nop                      	nop
0018e8   0000     nop                      	nop
0018ea   0000     nop                      	nop
0018ec   0000     nop                      	nop
0018ee   0000     nop                      	nop
0018f0   0000     nop                      	nop
0018f2   0000     nop                      	nop
0018f4   0000     nop                      	nop
0018f6   0000     nop                      	nop
0018f8   0000     nop                      	nop
0018fa   0000     nop                      	nop
0018fc   0000     nop                      	nop
0018fe   0000     nop                      	nop
001900   0000     nop                      	nop
001902   0000     nop                      	nop
001904   0000     nop                      	nop
001906   0000     nop                      	nop
001908   0000     nop                      	nop
00190a   0000     nop                      	nop
00190c   0000     nop                      	nop
00190e   0000     nop                      	nop
001910   0000     nop                      	nop
001912   0000     nop                      	nop
001914   0000     nop                      	nop
001916   0000     nop                      	nop
001918   0000     nop                      	nop
00191a   0000     nop                      	nop
00191c   0000     nop                      	nop
00191e   0000     nop                      	nop
001920   0000     nop                      	nop
001922   0000     nop                      	nop
001924   0000     nop                      	nop
001926   0000     nop                      	nop
001928   0000     nop                      	nop
00192a   0000     nop                      	nop
00192c   0000     nop                      	nop
00192e   0000     nop                      	nop
001930   0000     nop                      	nop
001932   0000     nop                      	nop
001934   0000     nop                      	nop
001936   0000     nop                      	nop
001938   0000     nop                      	nop
00193a   0000     nop                      	nop
00193c   0000     nop                      	nop
00193e   0000     nop                      	nop
001940   0000     nop                      	nop
001942   0000     nop                      	nop
001944   0000     nop                      	nop
001946   0000     nop                      	nop
001948   0000     nop                      	nop
00194a   0000     nop                      	nop
00194c   0000     nop                      	nop
00194e   0000     nop                      	nop
001950   0000     nop                      	nop
001952   0000     nop                      	nop
001954   0000     nop                      	nop
001956   0000     nop                      	nop
001958   0000     nop                      	nop
00195a   0000     nop                      	nop
00195c   0000     nop                      	nop
00195e   0000     nop                      	nop
001960   0000     nop                      	nop
001962   0000     nop                      	nop
001964   0000     nop                      	nop
001966   0000     nop                      	nop
001968   0000     nop                      	nop
00196a   0000     nop                      	nop
00196c   0000     nop                      	nop
00196e   0000     nop                      	nop
001970   0000     nop                      	nop
001972   0000     nop                      	nop
001974   0000     nop                      	nop
001976   0000     nop                      	nop
001978   0000     nop                      	nop
00197a   0000     nop                      	nop
00197c   0000     nop                      	nop
00197e   0000     nop                      	nop
001980   0000     nop                      	nop
001982   0000     nop                      	nop
001984   0000     nop                      	nop
001986   0000     nop                      	nop
001988   0000     nop                      	nop
00198a   0000     nop                      	nop
00198c   0000     nop                      	nop
00198e   0000     nop                      	nop
001990   0000     nop                      	nop
001992   0000     nop                      	nop
001994   0000     nop                      	nop
001996   0000     nop                      	nop
001998   0000     nop                      	nop
00199a   0000     nop                      	nop
00199c   0000     nop                      	nop
00199e   0000     nop                      	nop
0019a0   0000     nop                      	nop
0019a2   0000     nop                      	nop
0019a4   0000     nop                      	nop
0019a6   0000     nop                      	nop
0019a8   0000     nop                      	nop
0019aa   0000     nop                      	nop
0019ac   0000     nop                      	nop
                                           	
                                           ;	.line	2844; meter_logger.c	PWM_PIN = 1;
0019ae   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
0019b0   0000     nop                      	nop
0019b2   0000     nop                      	nop
0019b4   0000     nop                      	nop
0019b6   0000     nop                      	nop
0019b8   0000     nop                      	nop
0019ba   0000     nop                      	nop
0019bc   0000     nop                      	nop
0019be   0000     nop                      	nop
0019c0   0000     nop                      	nop
0019c2   0000     nop                      	nop
0019c4   0000     nop                      	nop
0019c6   0000     nop                      	nop
0019c8   0000     nop                      	nop
0019ca   0000     nop                      	nop
0019cc   0000     nop                      	nop
0019ce   0000     nop                      	nop
0019d0   0000     nop                      	nop
0019d2   0000     nop                      	nop
0019d4   0000     nop                      	nop
0019d6   0000     nop                      	nop
0019d8   0000     nop                      	nop
0019da   0000     nop                      	nop
0019dc   0000     nop                      	nop
0019de   0000     nop                      	nop
0019e0   0000     nop                      	nop
0019e2   0000     nop                      	nop
0019e4   0000     nop                      	nop
0019e6   0000     nop                      	nop
0019e8   0000     nop                      	nop
0019ea   0000     nop                      	nop
0019ec   0000     nop                      	nop
0019ee   0000     nop                      	nop
0019f0   0000     nop                      	nop
0019f2   0000     nop                      	nop
0019f4   0000     nop                      	nop
0019f6   0000     nop                      	nop
0019f8   0000     nop                      	nop
0019fa   0000     nop                      	nop
0019fc   0000     nop                      	nop
0019fe   0000     nop                      	nop
001a00   0000     nop                      	nop
001a02   0000     nop                      	nop
001a04   0000     nop                      	nop
001a06   0000     nop                      	nop
001a08   0000     nop                      	nop
001a0a   0000     nop                      	nop
001a0c   0000     nop                      	nop
001a0e   0000     nop                      	nop
001a10   0000     nop                      	nop
001a12   0000     nop                      	nop
001a14   0000     nop                      	nop
001a16   0000     nop                      	nop
001a18   0000     nop                      	nop
001a1a   0000     nop                      	nop
001a1c   0000     nop                      	nop
001a1e   0000     nop                      	nop
001a20   0000     nop                      	nop
001a22   0000     nop                      	nop
001a24   0000     nop                      	nop
001a26   0000     nop                      	nop
001a28   0000     nop                      	nop
001a2a   0000     nop                      	nop
001a2c   0000     nop                      	nop
001a2e   0000     nop                      	nop
001a30   0000     nop                      	nop
001a32   0000     nop                      	nop
001a34   0000     nop                      	nop
001a36   0000     nop                      	nop
001a38   0000     nop                      	nop
001a3a   0000     nop                      	nop
001a3c   0000     nop                      	nop
001a3e   0000     nop                      	nop
001a40   0000     nop                      	nop
001a42   0000     nop                      	nop
001a44   0000     nop                      	nop
001a46   0000     nop                      	nop
001a48   0000     nop                      	nop
001a4a   0000     nop                      	nop
001a4c   0000     nop                      	nop
001a4e   0000     nop                      	nop
001a50   0000     nop                      	nop
001a52   0000     nop                      	nop
001a54   0000     nop                      	nop
001a56   0000     nop                      	nop
001a58   0000     nop                      	nop
001a5a   0000     nop                      	nop
001a5c   0000     nop                      	nop
001a5e   0000     nop                      	nop
001a60   0000     nop                      	nop
001a62   0000     nop                      	nop
001a64   0000     nop                      	nop
001a66   0000     nop                      	nop
001a68   0000     nop                      	nop
001a6a   0000     nop                      	nop
001a6c   0000     nop                      	nop
001a6e   0000     nop                      	nop
001a70   0000     nop                      	nop
001a72   0000     nop                      	nop
001a74   0000     nop                      	nop
001a76   0000     nop                      	nop
001a78   0000     nop                      	nop
001a7a   0000     nop                      	nop
001a7c   0000     nop                      	nop
001a7e   0000     nop                      	nop
001a80   0000     nop                      	nop
001a82   0000     nop                      	nop
001a84   0000     nop                      	nop
001a86   0000     nop                      	nop
001a88   0000     nop                      	nop
001a8a   0000     nop                      	nop
001a8c   0000     nop                      	nop
001a8e   0000     nop                      	nop
001a90   0000     nop                      	nop
001a92   0000     nop                      	nop
001a94   0000     nop                      	nop
001a96   0000     nop                      	nop
001a98   0000     nop                      	nop
001a9a   0000     nop                      	nop
001a9c   0000     nop                      	nop
001a9e   0000     nop                      	nop
001aa0   0000     nop                      	nop
001aa2   0000     nop                      	nop
001aa4   0000     nop                      	nop
001aa6   0000     nop                      	nop
001aa8   0000     nop                      	nop
001aaa   0000     nop                      	nop
001aac   0000     nop                      	nop
001aae   0000     nop                      	nop
001ab0   0000     nop                      	nop
001ab2   0000     nop                      	nop
001ab4   0000     nop                      	nop
001ab6   0000     nop                      	nop
001ab8   0000     nop                      	nop
001aba   0000     nop                      	nop
001abc   0000     nop                      	nop
                                           	
                                           ;	.line	2982; meter_logger.c	PWM_PIN = 0;
001abe   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001ac0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
001ac2   ffd9
001ac4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_rx_disable	code
                                           _fsk_rx_disable:
                                           ;	.line	1458; meter_logger.c	void fsk_rx_disable() {
00540a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00540c   ffe5
00540e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005410   ffd9
                                           ;	.line	1459; meter_logger.c	PIE2bits.CMIE = 0;		// Disable comparator interrupt
005412   9ca0     bcf     0xa0, 0x6, 0     	BCF	_PIE2bits, 6
005414   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1460; meter_logger.c	codec_type = NONE;
005416   6b52     clrf    0x52, 0x1        	CLRF	_codec_type, B
005418   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00541a   ffd9
00541c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_rx_enable	code
                                           _fsk_rx_enable:
                                           ;	.line	1422; meter_logger.c	void fsk_rx_enable() {
004e04   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004e06   ffe5
004e08   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004e0a   ffd9
                                           ;	.line	1423; meter_logger.c	fsk_proto.state = START_BIT_WAIT;
004e0c   0e02     movlw   0x2              	MOVLW	0x02
004e0e   0105     movlb   0x5              	BANKSEL	_fsk_proto
004e10   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1424; meter_logger.c	fsk_proto.start_bit_time = 0;
004e12   6b0a     clrf    0xa, 0x1         	CLRF	(_fsk_proto + 10), B
                                           ; removed redundant BANKSEL
004e14   6b0b     clrf    0xb, 0x1         	CLRF	(_fsk_proto + 11), B
                                           ;	.line	1426; meter_logger.c	timer0_reload = TIMER0_FSK;
004e16   0e9f     movlw   0x9f             	MOVLW	0x9f
004e18   0105     movlb   0x5              	BANKSEL	_timer0_reload
004e1a   6f49     movwf   0x49, 0x1        	MOVWF	_timer0_reload, B
004e1c   0ef9     movlw   0xf9             	MOVLW	0xf9
                                           ; removed redundant BANKSEL
004e1e   6f4a     movwf   0x4a, 0x1        	MOVWF	(_timer0_reload + 1), B
                                           ;	.line	1428; meter_logger.c	codec_type = FSK_RX;
004e20   0e06     movlw   0x6              	MOVLW	0x06
004e22   0105     movlb   0x5              	BANKSEL	_codec_type
004e24   6f52     movwf   0x52, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1431; meter_logger.c	T0CONbits.TMR0ON = 1;
004e26   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1432; meter_logger.c	T0CONbits.T0PS0 = 0;
004e28   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1433; meter_logger.c	T0CONbits.T0PS1 = 0;
004e2a   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1434; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004e2c   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1435; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004e2e   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1436; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004e30   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1437; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004e32   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1438; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004e34   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1439; meter_logger.c	INTCONbits.TMR0IE = 0;		// Dont enable TMR0 Interrupt
004e36   9af2     bcf     0xf2, 0x5, 0     	BCF	_INTCONbits, 5
                                           ;	.line	1442; meter_logger.c	CVRCONbits.CVREF = 0xf;	// 0V
004e38   88b5     bsf     0xb5, 0x4, 0     	BSF	_CVRCONbits, 4
                                           ;	.line	1444; meter_logger.c	CVRCONbits.CVRSS = 0;	// VDD – VSS
004e3a   98b5     bcf     0xb5, 0x4, 0     	BCF	_CVRCONbits, 4
                                           ;	.line	1445; meter_logger.c	CVRCONbits.CVRR = 0;	// high range, 0.25 CVRSRC to 0.75 CVRSRC, with CVRSRC/32 step size
004e3c   9ab5     bcf     0xb5, 0x5, 0     	BCF	_CVRCONbits, 5
                                           ;	.line	1446; meter_logger.c	CVRCONbits.CVR = 9;		// 2,65625 V
004e3e   50b5     movf    0xb5, 0, 0       	MOVF	_CVRCONbits, W
004e40   0bf0     andlw   0xf0             	ANDLW	0xf0
004e42   0909     iorlw   0x9              	IORLW	0x09
004e44   6eb5     movwf   0xb5, 0          	MOVWF	_CVRCONbits
                                           ;	.line	1447; meter_logger.c	CVRCONbits.CVROE = 0;	// Comparator VREF Output disabled, CVREF voltage is disconnected from the RA2/AN2/VREF-/CVREF pin
004e46   9cb5     bcf     0xb5, 0x6, 0     	BCF	_CVRCONbits, 6
                                           ;	.line	1448; meter_logger.c	CVRCONbits.CVREN = 1;	// Comparator Voltage Reference Enable bit
004e48   8eb5     bsf     0xb5, 0x7, 0     	BSF	_CVRCONbits, 7
                                           ;	.line	1450; meter_logger.c	CMCONbits.CM = 0x6;		// four inputs multiplexed to two comparators
004e4a   50b4     movf    0xb4, 0, 0       	MOVF	_CMCONbits, W
004e4c   0bf8     andlw   0xf8             	ANDLW	0xf8
004e4e   0906     iorlw   0x6              	IORLW	0x06
004e50   6eb4     movwf   0xb4, 0          	MOVWF	_CMCONbits
                                           ;	.line	1451; meter_logger.c	CMCONbits.CIS = 0;		// multiplexed to RA0/AN0 and RA1/AN1
004e52   96b4     bcf     0xb4, 0x3, 0     	BCF	_CMCONbits, 3
                                           ;	.line	1452; meter_logger.c	CMCONbits.C1INV = 1;	// inverted output, C1 VIN+ < C1 VIN-
004e54   88b4     bsf     0xb4, 0x4, 0     	BSF	_CMCONbits, 4
                                           ;	.line	1454; meter_logger.c	IPR2bits.CMIP = 1;		// high priority
004e56   8ca2     bsf     0xa2, 0x6, 0     	BSF	_IPR2bits, 6
                                           ;	.line	1455; meter_logger.c	PIE2bits.CMIE = 1;		// Enable comparator interrupt
004e58   8ca0     bsf     0xa0, 0x6, 0     	BSF	_PIE2bits, 6
004e5a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004e5c   ffd9
004e5e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_disable	code
                                           _fsk_tx_disable:
                                           ;	.line	1416; meter_logger.c	void fsk_tx_disable() {
005386   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005388   ffe5
00538a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00538c   ffd9
00538e   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1417; meter_logger.c	codec_type = NONE;
005390   6b52     clrf    0x52, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1418; meter_logger.c	T0CONbits.TMR0ON = 0;	// Disable TMR0 
005392   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1419; meter_logger.c	PIE2bits.CMIE = 1;		// Disable comparator interrupt
005394   8ca0     bsf     0xa0, 0x6, 0     	BSF	_PIE2bits, 6
005396   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005398   ffd9
00539a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_enable	code
                                           _fsk_tx_enable:
                                           ;	.line	1398; meter_logger.c	void fsk_tx_enable() {
0050d6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0050d8   ffe5
0050da   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0050dc   ffd9
                                           ;	.line	1399; meter_logger.c	timer0_reload = TIMER0_FSK;
0050de   0e9f     movlw   0x9f             	MOVLW	0x9f
0050e0   0105     movlb   0x5              	BANKSEL	_timer0_reload
0050e2   6f49     movwf   0x49, 0x1        	MOVWF	_timer0_reload, B
0050e4   0ef9     movlw   0xf9             	MOVLW	0xf9
                                           ; removed redundant BANKSEL
0050e6   6f4a     movwf   0x4a, 0x1        	MOVWF	(_timer0_reload + 1), B
0050e8   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	1401; meter_logger.c	fsk_proto.state = INIT_STATE;
0050ea   6b00     clrf    0, 0x1           	CLRF	_fsk_proto, B
                                           ;	.line	1402; meter_logger.c	codec_type = FSK_TX;
0050ec   0e07     movlw   0x7              	MOVLW	0x07
0050ee   0105     movlb   0x5              	BANKSEL	_codec_type
0050f0   6f52     movwf   0x52, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1405; meter_logger.c	T0CONbits.TMR0ON = 1;
0050f2   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1406; meter_logger.c	T0CONbits.T0PS0 = 0;
0050f4   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1407; meter_logger.c	T0CONbits.T0PS1 = 0;
0050f6   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1408; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
0050f8   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1409; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
0050fa   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1410; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
0050fc   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1411; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
0050fe   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1412; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
005100   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1413; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
005102   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
005104   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005106   ffd9
005108   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_tx_byte	code
                                           _rs232_7e1_tx_byte:
                                           ;	.line	1388; meter_logger.c	void rs232_7e1_tx_byte(unsigned char c) {
00510a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00510c   ffe5
00510e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005110   ffd9
005112   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
005114   ffe5
005116   0e02     movlw   0x2              	MOVLW	0x02
005118   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00511a   f000
                                           ;	.line	1389; meter_logger.c	rs232_proto.data = c;
00511c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00511e   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
005120   6f1f     movwf   0x1f, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	1390; meter_logger.c	rs232_proto.data_len = 7;
005122   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
005124   6f20     movwf   0x20, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	1391; meter_logger.c	T0CONbits.TMR0ON = 1;		// start timer 0
005126   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1392; meter_logger.c	INTCONbits.TMR0IF = 1;		// enter timer interrupt handler now
005128   84f2     bsf     0xf2, 0x2, 0     	BSF	_INTCONbits, 2
                                           _01053_DS_:
00512a   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	1393; meter_logger.c	while (rs232_proto.data_len) {
00512c   5120     movf    0x20, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
00512e   e1fd     bnz     0x512a           	BNZ	_01053_DS_
005130   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
005132   f000
005134   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005136   ffd9
005138   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_rx_disable	code
                                           _rs232_7e1_rx_disable:
                                           ;	.line	1382; meter_logger.c	void rs232_7e1_rx_disable() {
00539c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00539e   ffe5
0053a0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0053a2   ffd9
                                           ;	.line	1383; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
0053a4   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
0053a6   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1384; meter_logger.c	codec_type = NONE;
0053a8   6b52     clrf    0x52, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1385; meter_logger.c	T0CONbits.TMR0ON = 0;
0053aa   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
0053ac   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0053ae   ffd9
0053b0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_rx_enable	code
                                           _rs232_7e1_rx_enable:
                                           ;	.line	1358; meter_logger.c	void rs232_7e1_rx_enable(unsigned int t) {
004eb6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004eb8   ffe5
004eba   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004ebc   ffd9
004ebe   0e02     movlw   0x2              	MOVLW	0x02
004ec0   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, _timer0_reload
004ec2   f549
004ec4   0e03     movlw   0x3              	MOVLW	0x03
004ec6   cfdb     movff   0xfdb, 0x54a     	MOVFF	PLUSW2, (_timer0_reload + 1)
004ec8   f54a
                                           ;	.line	1359; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
004eca   0e02     movlw   0x2              	MOVLW	0x02
004ecc   0105     movlb   0x5              	BANKSEL	_rs232_proto
004ece   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1360; meter_logger.c	rs232_proto.data_len = 0;
004ed0   6b20     clrf    0x20, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1364; meter_logger.c	codec_type = RS232_7E1_RX;
004ed2   0e04     movlw   0x4              	MOVLW	0x04
004ed4   0105     movlb   0x5              	BANKSEL	_codec_type
004ed6   6f52     movwf   0x52, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1367; meter_logger.c	T0CONbits.TMR0ON = 0;
004ed8   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1368; meter_logger.c	T0CONbits.T0PS0 = 0;
004eda   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1369; meter_logger.c	T0CONbits.T0PS1 = 0;
004edc   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1370; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004ede   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1371; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004ee0   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1372; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004ee2   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1373; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004ee4   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1374; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004ee6   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1375; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004ee8   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1376; meter_logger.c	INTCONbits.TMR0IF = 0;
004eea   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1378; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
004eec   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1379; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004eee   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
004ef0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004ef2   ffd9
004ef4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_tx_disable	code
                                           _rs232_7e1_tx_disable:
                                           ;	.line	1352; meter_logger.c	void rs232_7e1_tx_disable() {
0053b2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0053b4   ffe5
0053b6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0053b8   ffd9
0053ba   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1353; meter_logger.c	codec_type = NONE;
0053bc   6b52     clrf    0x52, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1354; meter_logger.c	IR_LED_PIN = 0;				// no need to set it to inverted idle
0053be   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1355; meter_logger.c	T0CONbits.TMR0ON = 0;
0053c0   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
0053c2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0053c4   ffd9
0053c6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_tx_enable	code
                                           _rs232_7e1_tx_enable:
                                           ;	.line	1326; meter_logger.c	void rs232_7e1_tx_enable(unsigned int t) {
004f76   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004f78   ffe5
004f7a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004f7c   ffd9
004f7e   0e02     movlw   0x2              	MOVLW	0x02
004f80   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, _timer0_reload
004f82   f549
004f84   0e03     movlw   0x3              	MOVLW	0x03
004f86   cfdb     movff   0xfdb, 0x54a     	MOVFF	PLUSW2, (_timer0_reload + 1)
004f88   f54a
004f8a   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	1329; meter_logger.c	rs232_proto.state = INIT_STATE;
004f8c   6b1d     clrf    0x1d, 0x1        	CLRF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1330; meter_logger.c	rs232_proto.data_len = 0;
004f8e   6b20     clrf    0x20, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1332; meter_logger.c	IR_LED_PIN = 0;				// inverted rs232 output on ir, idle = no ir light
004f90   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1334; meter_logger.c	codec_type = RS232_7E1_TX;
004f92   0e05     movlw   0x5              	MOVLW	0x05
004f94   0105     movlb   0x5              	BANKSEL	_codec_type
004f96   6f52     movwf   0x52, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1337; meter_logger.c	T0CONbits.TMR0ON = 0;
004f98   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1338; meter_logger.c	T0CONbits.T0PS0 = 0;
004f9a   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1339; meter_logger.c	T0CONbits.T0PS1 = 0;
004f9c   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1340; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004f9e   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1341; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004fa0   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1342; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004fa2   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1343; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004fa4   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1344; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004fa6   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1345; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004fa8   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1346; meter_logger.c	INTCONbits.TMR0IF = 0;
004faa   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1349; meter_logger.c	T0CONbits.TMR0ON = 0;		// timer 0 started in rs232_8n2_tx_byte()
004fac   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
004fae   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004fb0   ffd9
004fb2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_tx_byte	code
                                           _rs232_8n2_tx_byte:
                                           ;	.line	1316; meter_logger.c	void rs232_8n2_tx_byte(unsigned char c) {
00513a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00513c   ffe5
00513e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005140   ffd9
005142   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
005144   ffe5
005146   0e02     movlw   0x2              	MOVLW	0x02
005148   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00514a   f000
                                           ;	.line	1317; meter_logger.c	rs232_proto.data = c;
00514c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00514e   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
005150   6f1f     movwf   0x1f, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	1318; meter_logger.c	rs232_proto.data_len = 8;
005152   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
005154   6f20     movwf   0x20, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	1319; meter_logger.c	T0CONbits.TMR0ON = 1;		// start timer 0
005156   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1320; meter_logger.c	INTCONbits.TMR0IF = 1;		// enter timer interrupt handler now
005158   84f2     bsf     0xf2, 0x2, 0     	BSF	_INTCONbits, 2
                                           _01025_DS_:
00515a   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	1321; meter_logger.c	while (rs232_proto.data_len) {
00515c   5120     movf    0x20, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
00515e   e1fd     bnz     0x515a           	BNZ	_01025_DS_
005160   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
005162   f000
005164   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005166   ffd9
005168   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_rx_disable	code
                                           _rs232_8n2_rx_disable:
                                           ;	.line	1310; meter_logger.c	void rs232_8n2_rx_disable() {
0053c8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0053ca   ffe5
0053cc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0053ce   ffd9
                                           ;	.line	1311; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
0053d0   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
0053d2   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1312; meter_logger.c	codec_type = NONE;
0053d4   6b52     clrf    0x52, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1313; meter_logger.c	T0CONbits.TMR0ON = 0;
0053d6   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
0053d8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0053da   ffd9
0053dc   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_rx_enable	code
                                           _rs232_8n2_rx_enable:
                                           ;	.line	1286; meter_logger.c	void rs232_8n2_rx_enable(unsigned int t) {
004ef6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004ef8   ffe5
004efa   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004efc   ffd9
004efe   0e02     movlw   0x2              	MOVLW	0x02
004f00   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, _timer0_reload
004f02   f549
004f04   0e03     movlw   0x3              	MOVLW	0x03
004f06   cfdb     movff   0xfdb, 0x54a     	MOVFF	PLUSW2, (_timer0_reload + 1)
004f08   f54a
                                           ;	.line	1287; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
004f0a   0e02     movlw   0x2              	MOVLW	0x02
004f0c   0105     movlb   0x5              	BANKSEL	_rs232_proto
004f0e   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1288; meter_logger.c	rs232_proto.data_len = 0;
004f10   6b20     clrf    0x20, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1292; meter_logger.c	codec_type = RS232_8N2_RX;
004f12   0e02     movlw   0x2              	MOVLW	0x02
004f14   0105     movlb   0x5              	BANKSEL	_codec_type
004f16   6f52     movwf   0x52, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1295; meter_logger.c	T0CONbits.TMR0ON = 0;
004f18   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1296; meter_logger.c	T0CONbits.T0PS0 = 0;
004f1a   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1297; meter_logger.c	T0CONbits.T0PS1 = 0;
004f1c   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1298; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004f1e   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1299; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004f20   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1300; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004f22   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1301; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004f24   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1302; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004f26   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1303; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004f28   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1304; meter_logger.c	INTCONbits.TMR0IF = 0;
004f2a   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1306; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
004f2c   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1307; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004f2e   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
004f30   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004f32   ffd9
004f34   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_tx_disable	code
                                           _rs232_8n2_tx_disable:
                                           ;	.line	1280; meter_logger.c	void rs232_8n2_tx_disable() {
0053de   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0053e0   ffe5
0053e2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0053e4   ffd9
0053e6   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1281; meter_logger.c	codec_type = NONE;
0053e8   6b52     clrf    0x52, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1282; meter_logger.c	IR_LED_PIN = 0;				// no need to set it to inverted idle
0053ea   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1283; meter_logger.c	T0CONbits.TMR0ON = 0;
0053ec   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
0053ee   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0053f0   ffd9
0053f2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_tx_enable	code
                                           _rs232_8n2_tx_enable:
                                           ;	.line	1254; meter_logger.c	void rs232_8n2_tx_enable(unsigned int t) {
004fb4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004fb6   ffe5
004fb8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004fba   ffd9
004fbc   0e02     movlw   0x2              	MOVLW	0x02
004fbe   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, _timer0_reload
004fc0   f549
004fc2   0e03     movlw   0x3              	MOVLW	0x03
004fc4   cfdb     movff   0xfdb, 0x54a     	MOVFF	PLUSW2, (_timer0_reload + 1)
004fc6   f54a
004fc8   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	1257; meter_logger.c	rs232_proto.state = INIT_STATE;
004fca   6b1d     clrf    0x1d, 0x1        	CLRF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1258; meter_logger.c	rs232_proto.data_len = 0;
004fcc   6b20     clrf    0x20, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1260; meter_logger.c	IR_LED_PIN = 0;				// inverted rs232 output on ir, idle = no ir light
004fce   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1262; meter_logger.c	codec_type = RS232_8N2_TX;
004fd0   0e03     movlw   0x3              	MOVLW	0x03
004fd2   0105     movlb   0x5              	BANKSEL	_codec_type
004fd4   6f52     movwf   0x52, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1265; meter_logger.c	T0CONbits.TMR0ON = 0;
004fd6   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1266; meter_logger.c	T0CONbits.T0PS0 = 0;
004fd8   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1267; meter_logger.c	T0CONbits.T0PS1 = 0;
004fda   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1268; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004fdc   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1269; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004fde   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1270; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004fe0   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1271; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004fe2   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1272; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004fe4   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1273; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004fe6   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1274; meter_logger.c	INTCONbits.TMR0IF = 0;
004fe8   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1277; meter_logger.c	T0CONbits.TMR0ON = 0;		// timer 0 started in rs232_8n2_tx_byte()
004fea   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
004fec   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004fee   ffd9
004ff0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_ir_disable	code
                                           _testo_ir_disable:
                                           ;	.line	1249; meter_logger.c	void testo_ir_disable() {
00541e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005420   ffe5
005422   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005424   ffd9
005426   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1250; meter_logger.c	codec_type = NONE;
005428   6b52     clrf    0x52, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1251; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
00542a   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
00542c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00542e   ffd9
005430   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_ir_enable	code
                                           _testo_ir_enable:
                                           ;	.line	1225; meter_logger.c	void testo_ir_enable() {
004ff2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004ff4   ffe5
004ff6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004ff8   ffd9
004ffa   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	1226; meter_logger.c	testo_ir_proto.state = INIT_STATE;
004ffc   6b24     clrf    0x24, 0x1        	CLRF	_testo_ir_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1227; meter_logger.c	testo_ir_proto.start_bit_len = 0;
004ffe   6b26     clrf    0x26, 0x1        	CLRF	(_testo_ir_proto + 2), B
                                           ;	.line	1229; meter_logger.c	timer0_reload = TIMER0_TESTO;
005000   0e23     movlw   0x23             	MOVLW	0x23
005002   0105     movlb   0x5              	BANKSEL	_timer0_reload
005004   6f49     movwf   0x49, 0x1        	MOVWF	_timer0_reload, B
005006   0ef3     movlw   0xf3             	MOVLW	0xf3
                                           ; removed redundant BANKSEL
005008   6f4a     movwf   0x4a, 0x1        	MOVWF	(_timer0_reload + 1), B
                                           ;	.line	1231; meter_logger.c	codec_type = TESTO;
00500a   0e01     movlw   0x1              	MOVLW	0x01
00500c   0105     movlb   0x5              	BANKSEL	_codec_type
00500e   6f52     movwf   0x52, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1234; meter_logger.c	T0CONbits.TMR0ON = 0;
005010   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1235; meter_logger.c	T0CONbits.T0PS0 = 0;
005012   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1236; meter_logger.c	T0CONbits.T0PS1 = 0;
005014   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1237; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
005016   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1238; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
005018   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1239; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
00501a   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1240; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
00501c   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1241; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
00501e   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1242; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
005020   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1243; meter_logger.c	INTCONbits.TMR0IF = 0;
005022   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1245; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
005024   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1246; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
005026   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
005028   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00502a   ffd9
00502c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_valid_err_corr	code
                                           _testo_valid_err_corr:
                                           ;	.line	1170; meter_logger.c	unsigned char testo_valid_err_corr(unsigned int c) {
003bea   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003bec   ffe5
003bee   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003bf0   ffd9
003bf2   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003bf4   ffe5
003bf6   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003bf8   ffe5
003bfa   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003bfc   ffe5
003bfe   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003c00   ffe5
003c02   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003c04   ffe5
003c06   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003c08   ffe5
003c0a   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003c0c   ffe5
003c0e   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
003c10   ffe5
003c12   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
003c14   ffe5
003c16   0e02     movlw   0x2              	MOVLW	0x02
003c18   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003c1a   f000
003c1c   0e03     movlw   0x3              	MOVLW	0x03
003c1e   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003c20   f001
                                           ;	.line	1177; meter_logger.c	calculated_err_corr_bit = 0;
003c22   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1178; meter_logger.c	for (i = 0; i < 8; i++) {
003c24   0e78     movlw   0x78             	MOVLW	0x78
003c26   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003c28   6e03     movwf   0x3, 0           	MOVWF	r0x03
003c2a   6a04     clrf    0x4, 0           	CLRF	r0x04
003c2c   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00913_DS_:
                                           ;	.line	1179; meter_logger.c	calculated_err_corr_bit ^= (((c & 0x78) & (1 << i)) != 0);   // 0b01111000
003c2e   0e01     movlw   0x1              	MOVLW	0x01
003c30   6e06     movwf   0x6, 0           	MOVWF	r0x06
003c32   0e00     movlw   0                	MOVLW	0x00
003c34   6e07     movwf   0x7, 0           	MOVWF	r0x07
003c36   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003c38   e006     bz      0x3c46           	BZ	_00955_DS_
003c3a   6ce8     negf    0xe8, 0          	NEGF	WREG
003c3c   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00956_DS_:
003c3e   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
003c40   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003c42   0f01     addlw   0x1              	ADDLW	0x01
003c44   e3fc     bnc     0x3c3e           	BNC	_00956_DS_
                                           _00955_DS_:
003c46   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003c48   1606     andwf   0x6, 0x1, 0      	ANDWF	r0x06, F
003c4a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003c4c   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003c4e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003c50   e105     bnz     0x3c5c           	BNZ	_00958_DS_
003c52   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003c54   e103     bnz     0x3c5c           	BNZ	_00958_DS_
003c56   6a06     clrf    0x6, 0           	CLRF	r0x06
003c58   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003c5a   d001     bra     0x3c5e           	BRA	_00959_DS_
                                           _00958_DS_:
003c5c   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00959_DS_:
003c5e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003c60   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003c62   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003c64   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003c66   6a06     clrf    0x6, 0           	CLRF	r0x06
003c68   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
003c6a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003c6c   6e07     movwf   0x7, 0           	MOVWF	r0x07
003c6e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003c70   1807     xorwf   0x7, 0, 0        	XORWF	r0x07, W
003c72   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1178; meter_logger.c	for (i = 0; i < 8; i++) {
003c74   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
003c76   0e08     movlw   0x8              	MOVLW	0x08
003c78   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
003c7a   e3d9     bnc     0x3c2e           	BNC	_00913_DS_
                                           ;	.line	1182; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003c7c   4402     rlncf   0x2, 0, 0        	RLNCF	r0x02, W
003c7e   0bfe     andlw   0xfe             	ANDLW	0xfe
003c80   6e03     movwf   0x3, 0           	MOVWF	r0x03
                                           ;	.line	1185; meter_logger.c	calculated_err_corr_bit = 0;
003c82   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1186; meter_logger.c	for (i = 0; i < 8; i++) {
003c84   0ee6     movlw   0xe6             	MOVLW	0xe6
003c86   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003c88   6e04     movwf   0x4, 0           	MOVWF	r0x04
003c8a   6a05     clrf    0x5, 0           	CLRF	r0x05
003c8c   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00915_DS_:
                                           ;	.line	1187; meter_logger.c	calculated_err_corr_bit ^= (((c & 0xe6) & (1 << i)) != 0);   // 0b11100110
003c8e   0e01     movlw   0x1              	MOVLW	0x01
003c90   6e07     movwf   0x7, 0           	MOVWF	r0x07
003c92   0e00     movlw   0                	MOVLW	0x00
003c94   6e08     movwf   0x8, 0           	MOVWF	r0x08
003c96   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003c98   e006     bz      0x3ca6           	BZ	_00963_DS_
003c9a   6ce8     negf    0xe8, 0          	NEGF	WREG
003c9c   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00964_DS_:
003c9e   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003ca0   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003ca2   0f01     addlw   0x1              	ADDLW	0x01
003ca4   e3fc     bnc     0x3c9e           	BNC	_00964_DS_
                                           _00963_DS_:
003ca6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003ca8   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003caa   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003cac   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003cae   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003cb0   e105     bnz     0x3cbc           	BNZ	_00966_DS_
003cb2   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003cb4   e103     bnz     0x3cbc           	BNZ	_00966_DS_
003cb6   6a07     clrf    0x7, 0           	CLRF	r0x07
003cb8   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003cba   d001     bra     0x3cbe           	BRA	_00967_DS_
                                           _00966_DS_:
003cbc   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00967_DS_:
003cbe   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003cc0   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003cc2   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003cc4   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003cc6   6a07     clrf    0x7, 0           	CLRF	r0x07
003cc8   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003cca   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003ccc   6e08     movwf   0x8, 0           	MOVWF	r0x08
003cce   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003cd0   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003cd2   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1186; meter_logger.c	for (i = 0; i < 8; i++) {
003cd4   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003cd6   0e08     movlw   0x8              	MOVLW	0x08
003cd8   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003cda   e3d9     bnc     0x3c8e           	BNC	_00915_DS_
                                           ;	.line	1189; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003cdc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003cde   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1190; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003ce0   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003ce2   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
                                           ;	.line	1193; meter_logger.c	calculated_err_corr_bit = 0;
003ce4   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1194; meter_logger.c	for (i = 0; i < 8; i++) {
003ce6   0ed5     movlw   0xd5             	MOVLW	0xd5
003ce8   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003cea   6e04     movwf   0x4, 0           	MOVWF	r0x04
003cec   6a05     clrf    0x5, 0           	CLRF	r0x05
003cee   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00917_DS_:
                                           ;	.line	1195; meter_logger.c	calculated_err_corr_bit ^= (((c & 0xd5) & (1 << i)) != 0);   // 0b11010101
003cf0   0e01     movlw   0x1              	MOVLW	0x01
003cf2   6e07     movwf   0x7, 0           	MOVWF	r0x07
003cf4   0e00     movlw   0                	MOVLW	0x00
003cf6   6e08     movwf   0x8, 0           	MOVWF	r0x08
003cf8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003cfa   e006     bz      0x3d08           	BZ	_00972_DS_
003cfc   6ce8     negf    0xe8, 0          	NEGF	WREG
003cfe   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00973_DS_:
003d00   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003d02   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003d04   0f01     addlw   0x1              	ADDLW	0x01
003d06   e3fc     bnc     0x3d00           	BNC	_00973_DS_
                                           _00972_DS_:
003d08   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003d0a   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003d0c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003d0e   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003d10   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003d12   e105     bnz     0x3d1e           	BNZ	_00975_DS_
003d14   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003d16   e103     bnz     0x3d1e           	BNZ	_00975_DS_
003d18   6a07     clrf    0x7, 0           	CLRF	r0x07
003d1a   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003d1c   d001     bra     0x3d20           	BRA	_00976_DS_
                                           _00975_DS_:
003d1e   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00976_DS_:
003d20   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003d22   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003d24   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003d26   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003d28   6a07     clrf    0x7, 0           	CLRF	r0x07
003d2a   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003d2c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003d2e   6e08     movwf   0x8, 0           	MOVWF	r0x08
003d30   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003d32   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003d34   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1194; meter_logger.c	for (i = 0; i < 8; i++) {
003d36   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003d38   0e08     movlw   0x8              	MOVLW	0x08
003d3a   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003d3c   e3d9     bnc     0x3cf0           	BNC	_00917_DS_
                                           ;	.line	1197; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003d3e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003d40   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1198; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003d42   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003d44   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
                                           ;	.line	1201; meter_logger.c	calculated_err_corr_bit = 0;
003d46   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1202; meter_logger.c	for (i = 0; i < 8; i++) {
003d48   0e8b     movlw   0x8b             	MOVLW	0x8b
003d4a   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003d4c   6e04     movwf   0x4, 0           	MOVWF	r0x04
003d4e   6a05     clrf    0x5, 0           	CLRF	r0x05
003d50   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00919_DS_:
                                           ;	.line	1203; meter_logger.c	calculated_err_corr_bit ^= (((c & 0x8b) & (1 << i)) != 0);   // 0b10001011
003d52   0e01     movlw   0x1              	MOVLW	0x01
003d54   6e07     movwf   0x7, 0           	MOVWF	r0x07
003d56   0e00     movlw   0                	MOVLW	0x00
003d58   6e08     movwf   0x8, 0           	MOVWF	r0x08
003d5a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003d5c   e006     bz      0x3d6a           	BZ	_00981_DS_
003d5e   6ce8     negf    0xe8, 0          	NEGF	WREG
003d60   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00982_DS_:
003d62   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003d64   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003d66   0f01     addlw   0x1              	ADDLW	0x01
003d68   e3fc     bnc     0x3d62           	BNC	_00982_DS_
                                           _00981_DS_:
003d6a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003d6c   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003d6e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003d70   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003d72   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003d74   e105     bnz     0x3d80           	BNZ	_00984_DS_
003d76   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003d78   e103     bnz     0x3d80           	BNZ	_00984_DS_
003d7a   6a07     clrf    0x7, 0           	CLRF	r0x07
003d7c   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003d7e   d001     bra     0x3d82           	BRA	_00985_DS_
                                           _00984_DS_:
003d80   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00985_DS_:
003d82   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003d84   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003d86   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003d88   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003d8a   6a07     clrf    0x7, 0           	CLRF	r0x07
003d8c   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003d8e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003d90   6e08     movwf   0x8, 0           	MOVWF	r0x08
003d92   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003d94   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003d96   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1202; meter_logger.c	for (i = 0; i < 8; i++) {
003d98   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003d9a   0e08     movlw   0x8              	MOVLW	0x08
003d9c   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003d9e   e3d9     bnc     0x3d52           	BNC	_00919_DS_
                                           ;	.line	1205; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003da0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003da2   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1216; meter_logger.c	if ((c >> 8) == calculated_err_corr) {
003da4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003da6   6e00     movwf   0, 0             	MOVWF	r0x00
003da8   6a01     clrf    0x1, 0           	CLRF	r0x01
003daa   6a02     clrf    0x2, 0           	CLRF	r0x02
003dac   5000     movf    0, 0, 0          	MOVF	r0x00, W
003dae   1803     xorwf   0x3, 0, 0        	XORWF	r0x03, W
003db0   e103     bnz     0x3db8           	BNZ	_00989_DS_
003db2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003db4   1802     xorwf   0x2, 0, 0        	XORWF	r0x02, W
003db6   e001     bz      0x3dba           	BZ	_00990_DS_
                                           _00989_DS_:
003db8   d002     bra     0x3dbe           	BRA	_00911_DS_
                                           _00990_DS_:
                                           ;	.line	1217; meter_logger.c	return 1;
003dba   0e01     movlw   0x1              	MOVLW	0x01
003dbc   d001     bra     0x3dc0           	BRA	_00921_DS_
                                           _00911_DS_:
                                           ;	.line	1220; meter_logger.c	return 0;
003dbe   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00921_DS_:
003dc0   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
003dc2   f008
003dc4   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003dc6   f007
003dc8   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003dca   f006
003dcc   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003dce   f005
003dd0   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003dd2   f004
003dd4   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003dd6   f003
003dd8   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003dda   f002
003ddc   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003dde   f001
003de0   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003de2   f000
003de4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003de6   ffd9
003de8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__reverse	code
                                           _reverse:
                                           ;	.line	1162; meter_logger.c	unsigned char reverse(unsigned char b) {
004c12   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004c14   ffe5
004c16   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004c18   ffd9
004c1a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004c1c   ffe5
004c1e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004c20   ffe5
004c22   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004c24   ffe5
004c26   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004c28   ffe5
004c2a   0e02     movlw   0x2              	MOVLW	0x02
004c2c   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004c2e   f000
                                           ;	.line	1164; meter_logger.c	c  = ((b >>  1) & 0x55) | ((b <<  1) & 0xaa);
004c30   4000     rrncf   0, 0, 0          	RRNCF	r0x00, W
004c32   0b7f     andlw   0x7f             	ANDLW	0x7f
004c34   6e01     movwf   0x1, 0           	MOVWF	r0x01
004c36   0e55     movlw   0x55             	MOVLW	0x55
004c38   1601     andwf   0x1, 0x1, 0      	ANDWF	r0x01, F
004c3a   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
004c3c   0bfe     andlw   0xfe             	ANDLW	0xfe
004c3e   6e02     movwf   0x2, 0           	MOVWF	r0x02
004c40   0eaa     movlw   0xaa             	MOVLW	0xaa
004c42   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004c44   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004c46   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1165; meter_logger.c	c |= ((b >>  2) & 0x33) | ((b <<  2) & 0xcc);
004c48   4000     rrncf   0, 0, 0          	RRNCF	r0x00, W
004c4a   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
004c4c   0b3f     andlw   0x3f             	ANDLW	0x3f
004c4e   6e02     movwf   0x2, 0           	MOVWF	r0x02
004c50   0e33     movlw   0x33             	MOVLW	0x33
004c52   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004c54   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
004c56   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
004c58   0bfc     andlw   0xfc             	ANDLW	0xfc
004c5a   6e03     movwf   0x3, 0           	MOVWF	r0x03
004c5c   0ecc     movlw   0xcc             	MOVLW	0xcc
004c5e   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
004c60   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004c62   1202     iorwf   0x2, 0x1, 0      	IORWF	r0x02, F
004c64   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004c66   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1166; meter_logger.c	c |= ((b >>  4) & 0x0f) | ((b <<  4) & 0xf0);
004c68   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
004c6a   0b0f     andlw   0xf              	ANDLW	0x0f
004c6c   6e02     movwf   0x2, 0           	MOVWF	r0x02
004c6e   0e0f     movlw   0xf              	MOVLW	0x0f
004c70   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004c72   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
004c74   0bf0     andlw   0xf0             	ANDLW	0xf0
004c76   6e03     movwf   0x3, 0           	MOVWF	r0x03
004c78   0ef0     movlw   0xf0             	MOVLW	0xf0
004c7a   1403     andwf   0x3, 0, 0        	ANDWF	r0x03, W
004c7c   6e00     movwf   0, 0             	MOVWF	r0x00
004c7e   5000     movf    0, 0, 0          	MOVF	r0x00, W
004c80   1202     iorwf   0x2, 0x1, 0      	IORWF	r0x02, F
004c82   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004c84   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1167; meter_logger.c	return(c);
004c86   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004c88   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004c8a   f003
004c8c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004c8e   f002
004c90   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004c92   f001
004c94   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004c96   f000
004c98   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004c9a   ffd9
004c9c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__my_usart_open	code
                                           _my_usart_open:
                                           ;	.line	1132; meter_logger.c	void my_usart_open() {
005250   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005252   ffe5
005254   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005256   ffd9
                                           ;	.line	1133; meter_logger.c	SPBRG = 103;					// 8MHz => 19230 baud
005258   0e67     movlw   0x67             	MOVLW	0x67
00525a   6eaf     movwf   0xaf, 0          	MOVWF	_SPBRG
                                           ;	.line	1134; meter_logger.c	TXSTAbits.BRGH = 1;	// (0 = low speed)
00525c   84ac     bsf     0xac, 0x2, 0     	BSF	_TXSTAbits, 2
                                           ;	.line	1135; meter_logger.c	TXSTAbits.SYNC = 0;	// (0 = asynchronous)
00525e   98ac     bcf     0xac, 0x4, 0     	BCF	_TXSTAbits, 4
                                           ;	.line	1136; meter_logger.c	BAUDCONbits.BRG16 = 1;
005260   86b8     bsf     0xb8, 0x3, 0     	BSF	_BAUDCONbits, 3
                                           ;	.line	1139; meter_logger.c	RCSTAbits.SPEN = 1; // (1 = serial port enabled)
005262   8eab     bsf     0xab, 0x7, 0     	BSF	_RCSTAbits, 7
                                           ;	.line	1142; meter_logger.c	PIE1bits.TXIE = 0; // (1 = enabled)
005264   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
                                           ;	.line	1143; meter_logger.c	IPR1bits.TXIP = 0; // USART Tx on low priority interrupt
005266   989f     bcf     0x9f, 0x4, 0     	BCF	_IPR1bits, 4
                                           ;	.line	1146; meter_logger.c	PIE1bits.RCIE = 1; // (1 = enabled)
005268   8a9d     bsf     0x9d, 0x5, 0     	BSF	_PIE1bits, 5
                                           ;	.line	1147; meter_logger.c	IPR1bits.RCIP = 0; // USART Rx on low priority interrupt
00526a   9a9f     bcf     0x9f, 0x5, 0     	BCF	_IPR1bits, 5
                                           ;	.line	1150; meter_logger.c	TXSTAbits.TX9 = 0; // (0 = 8-bit transmit)
00526c   9cac     bcf     0xac, 0x6, 0     	BCF	_TXSTAbits, 6
                                           ;	.line	1153; meter_logger.c	RCSTAbits.RX9 = 0; // (0 = 8-bit reception)
00526e   9cab     bcf     0xab, 0x6, 0     	BCF	_RCSTAbits, 6
                                           ;	.line	1156; meter_logger.c	RCSTAbits.CREN = 1; // (1 = Enables receiver)
005270   88ab     bsf     0xab, 0x4, 0     	BSF	_RCSTAbits, 4
                                           ;	.line	1159; meter_logger.c	TXSTAbits.TXEN = 1; // (1 = transmit enabled)
005272   8aac     bsf     0xac, 0x5, 0     	BSF	_TXSTAbits, 5
005274   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005276   ffd9
005278   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__get_dev_id	code
                                           _get_dev_id:
                                           ;	.line	1115; meter_logger.c	unsigned int get_dev_id() {
004d92   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004d94   ffe5
004d96   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004d98   ffd9
004d9a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004d9c   ffe5
004d9e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004da0   ffe5
004da2   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004da4   ffe5
004da6   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004da8   ffe5
004daa   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004dac   ffe5
004dae   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004db0   ffe5
                                           ;	.line	1118; meter_logger.c	TBLPTRU = __DEVID1 >> 16;
004db2   0e3f     movlw   0x3f             	MOVLW	0x3f
004db4   6ef8     movwf   0xf8, 0          	MOVWF	_TBLPTRU
                                           ;	.line	1119; meter_logger.c	TBLPTRH = __DEVID1 >> 8;
004db6   0eff     movlw   0xff             	MOVLW	0xff
004db8   6ef7     movwf   0xf7, 0          	MOVWF	_TBLPTRH
                                           ;	.line	1120; meter_logger.c	TBLPTRL = __DEVID1;
004dba   0efe     movlw   0xfe             	MOVLW	0xfe
004dbc   6ef6     movwf   0xf6, 0          	MOVWF	_TBLPTRL
004dbe   0009     tblrd   *+               	tblrd*+
                                           	
                                           ;	.line	1124; meter_logger.c	dev_id_low = TABLAT;
004dc0   cff5     movff   0xff5, 0         	MOVFF	_TABLAT, r0x00
004dc2   f000
004dc4   0009     tblrd   *+               	tblrd*+
                                           	
                                           ;	.line	1128; meter_logger.c	dev_id_high = TABLAT;
004dc6   cff5     movff   0xff5, 0x1       	MOVFF	_TABLAT, r0x01
004dc8   f001
                                           ;	.line	1129; meter_logger.c	return ((dev_id_high << 8) + dev_id_low) & 0xffe0;	// dont return revision
004dca   6a02     clrf    0x2, 0           	CLRF	r0x02
004dcc   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004dce   6e04     movwf   0x4, 0           	MOVWF	r0x04
004dd0   6a03     clrf    0x3, 0           	CLRF	r0x03
004dd2   6a05     clrf    0x5, 0           	CLRF	r0x05
004dd4   5000     movf    0, 0, 0          	MOVF	r0x00, W
004dd6   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
004dd8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
004dda   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
004ddc   0ee0     movlw   0xe0             	MOVLW	0xe0
004dde   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
004de0   c004     movff   0x4, 0xff3       	MOVFF	r0x04, PRODL
004de2   fff3
004de4   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004de6   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
004de8   f005
004dea   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004dec   f004
004dee   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004df0   f003
004df2   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004df4   f002
004df6   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004df8   f001
004dfa   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004dfc   f000
004dfe   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004e00   ffd9
004e02   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__init_system	code
                                           _init_system:
                                           ;	.line	1014; meter_logger.c	void init_system() {
004e60   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004e62   ffe5
004e64   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004e66   ffd9
                                           ;	.line	1016; meter_logger.c	TRIS_COMP1 = INPUT_STATE;		// as input
004e68   8092     bsf     0x92, 0, 0       	BSF	_TRISAbits, 0
                                           ;	.line	1017; meter_logger.c	TRIS_COMP2 = INPUT_STATE;		// as input
004e6a   8292     bsf     0x92, 0x1, 0     	BSF	_TRISAbits, 1
                                           ;	.line	1019; meter_logger.c	TRIS_IR_PIN = INPUT_STATE;		// as input
004e6c   8093     bsf     0x93, 0, 0       	BSF	_TRISBbits, 0
                                           ;	.line	1021; meter_logger.c	TRIS_LED_PIN = OUTPUT_STATE;	// as output
004e6e   9893     bcf     0x93, 0x4, 0     	BCF	_TRISBbits, 4
                                           ;	.line	1022; meter_logger.c	LED_PIN = 0;					// and clear
004e70   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	1024; meter_logger.c	TRIS_IR_LED_PIN = OUTPUT_STATE;	// as output
004e72   9293     bcf     0x93, 0x1, 0     	BCF	_TRISBbits, 1
                                           ;	.line	1025; meter_logger.c	IR_LED_PIN = 0;					// and clear
004e74   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1027; meter_logger.c	TRIS_V_SENSE = INPUT_STATE;		// as input
004e76   8a92     bsf     0x92, 0x5, 0     	BSF	_TRISAbits, 5
                                           ;	.line	1029; meter_logger.c	TRIS_DEBUG_PIN = OUTPUT_STATE;	// as output
004e78   9493     bcf     0x93, 0x2, 0     	BCF	_TRISBbits, 2
                                           ;	.line	1030; meter_logger.c	DEBUG_PIN = 0;					// and clear
004e7a   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	1032; meter_logger.c	TRIS_DEBUG2_PIN = OUTPUT_STATE;	// as output
004e7c   9693     bcf     0x93, 0x3, 0     	BCF	_TRISBbits, 3
                                           ;	.line	1033; meter_logger.c	DEBUG2_PIN = 0;					// and clear
004e7e   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	1035; meter_logger.c	TRIS_DEBUG3_PIN = OUTPUT_STATE;	// as output
004e80   9893     bcf     0x93, 0x4, 0     	BCF	_TRISBbits, 4
                                           ;	.line	1036; meter_logger.c	DEBUG3_PIN = 0;					// and clear
004e82   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	1040; meter_logger.c	TRIS_PWM_PIN = OUTPUT_STATE;	// enable output from pwm module at init
004e84   9294     bcf     0x94, 0x1, 0     	BCF	_TRISCbits, 1
                                           ;	.line	1041; meter_logger.c	PWM_PIN = 0;					// and clear
004e86   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
                                           ;	.line	1044; meter_logger.c	TRIS_RX_PIN = INPUT_STATE;		// as input
004e88   8e94     bsf     0x94, 0x7, 0     	BSF	_TRISCbits, 7
                                           ;	.line	1045; meter_logger.c	TRIS_TX_PIN = OUTPUT_STATE;		// as input
004e8a   9c94     bcf     0x94, 0x6, 0     	BCF	_TRISCbits, 6
                                           ;	.line	1050; meter_logger.c	T1CONbits.TMR1ON = 1;
004e8c   80cd     bsf     0xcd, 0, 0       	BSF	_T1CONbits, 0
                                           ;	.line	1051; meter_logger.c	T1CONbits.RD16 = 1;
004e8e   8ecd     bsf     0xcd, 0x7, 0     	BSF	_T1CONbits, 7
                                           ;	.line	1052; meter_logger.c	T1CONbits.TMR1CS = 0;   // internal clock source
004e90   92cd     bcf     0xcd, 0x1, 0     	BCF	_T1CONbits, 1
                                           ;	.line	1053; meter_logger.c	T1CONbits.T1OSCEN = 0;  // dont put t1 on pin
004e92   96cd     bcf     0xcd, 0x3, 0     	BCF	_T1CONbits, 3
                                           ;	.line	1054; meter_logger.c	T1CONbits.T1CKPS0 = 0;
004e94   98cd     bcf     0xcd, 0x4, 0     	BCF	_T1CONbits, 4
                                           ;	.line	1055; meter_logger.c	T1CONbits.T1CKPS1 = 0;
004e96   9acd     bcf     0xcd, 0x5, 0     	BCF	_T1CONbits, 5
                                           ;	.line	1056; meter_logger.c	IPR1bits.TMR1IP = 0;	// low priority
004e98   909f     bcf     0x9f, 0, 0       	BCF	_IPR1bits, 0
                                           ;	.line	1057; meter_logger.c	PIE1bits.TMR1IE = 1;	// Ensure that TMR1 Interrupt is enabled
004e9a   809d     bsf     0x9d, 0, 0       	BSF	_PIE1bits, 0
                                           ;	.line	1058; meter_logger.c	PIR1bits.TMR1IF = 1;	// Force Instant entry to Timer 1 Interrupt
004e9c   809e     bsf     0x9e, 0, 0       	BSF	_PIR1bits, 0
                                           ;	.line	1089; meter_logger.c	RCONbits.IPEN = 1;
004e9e   8ed0     bsf     0xd0, 0x7, 0     	BSF	_RCONbits, 7
                                           ;	.line	1091; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int, enabled when ir demodulator is started
004ea0   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	1092; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004ea2   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
                                           ;	.line	1094; meter_logger.c	INTCONbits.PEIE = 1;
004ea4   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	1095; meter_logger.c	INTCONbits.GIE = 1;	/* Enable Global interrupts   */	
004ea6   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           ;	.line	1100; meter_logger.c	IPR1bits.RCIP = 0;
004ea8   9a9f     bcf     0x9f, 0x5, 0     	BCF	_IPR1bits, 5
                                           ;	.line	1101; meter_logger.c	IPR1bits.TXIP = 0;
004eaa   989f     bcf     0x9f, 0x4, 0     	BCF	_IPR1bits, 4
                                           ;	.line	1112; meter_logger.c	my_usart_open();
004eac   ec28     call    0x5250, 0        	CALL	_my_usart_open
004eae   f029
004eb0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004eb2   ffd9
004eb4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__sleep_ms	code
                                           _sleep_ms:
                                           ;	.line	992; meter_logger.c	void sleep_ms(unsigned int ms) {
004b6c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004b6e   ffe5
004b70   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004b72   ffd9
004b74   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004b76   ffe5
004b78   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004b7a   ffe5
004b7c   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004b7e   ffe5
004b80   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004b82   ffe5
004b84   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004b86   ffe5
004b88   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004b8a   ffe5
004b8c   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
004b8e   ffe5
004b90   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
004b92   ffe5
004b94   0e02     movlw   0x2              	MOVLW	0x02
004b96   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004b98   f000
004b9a   0e03     movlw   0x3              	MOVLW	0x03
004b9c   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004b9e   f001
                                           ;	.line	995; meter_logger.c	start_timer_1_ms = timer_1_ms;	
004ba0   c541     movff   0x541, 0x2       	MOVFF	_timer_1_ms, r0x02
004ba2   f002
004ba4   c542     movff   0x542, 0x3       	MOVFF	(_timer_1_ms + 1), r0x03
004ba6   f003
                                           ;	.line	998; meter_logger.c	do {
004ba8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004baa   08ff     sublw   0xff             	SUBLW	0xff
004bac   6e04     movwf   0x4, 0           	MOVWF	r0x04
004bae   0eff     movlw   0xff             	MOVLW	0xff
004bb0   5403     subfwb  0x3, 0, 0        	SUBFWB	r0x03, W
004bb2   6e05     movwf   0x5, 0           	MOVWF	r0x05
                                           _00869_DS_:
                                           ;	.line	999; meter_logger.c	if (start_timer_1_ms <= timer_1_ms) {
004bb4   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004bb6   0105     movlb   0x5              	BANKSEL	(_timer_1_ms + 1)
004bb8   5d42     subwf   0x42, 0, 0x1     	SUBWF	(_timer_1_ms + 1), W, B
004bba   e102     bnz     0x4bc0           	BNZ	_00880_DS_
004bbc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
004bbe   5d41     subwf   0x41, 0, 0x1     	SUBWF	_timer_1_ms, W, B
                                           _00880_DS_:
004bc0   e308     bnc     0x4bd2           	BNC	_00867_DS_
                                           ;	.line	1000; meter_logger.c	diff = timer_1_ms - start_timer_1_ms;
004bc2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004bc4   0105     movlb   0x5              	BANKSEL	_timer_1_ms
004bc6   5d41     subwf   0x41, 0, 0x1     	SUBWF	_timer_1_ms, W, B
004bc8   6e06     movwf   0x6, 0           	MOVWF	r0x06
004bca   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
004bcc   5942     subwfb  0x42, 0, 0x1     	SUBWFB	(_timer_1_ms + 1), W, B
004bce   6e07     movwf   0x7, 0           	MOVWF	r0x07
004bd0   d007     bra     0x4be0           	BRA	_00870_DS_
                                           _00867_DS_:
004bd2   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	1004; meter_logger.c	diff = 0xffff - start_timer_1_ms + timer_1_ms;
004bd4   5141     movf    0x41, 0, 0x1     	MOVF	_timer_1_ms, W, B
004bd6   2404     addwf   0x4, 0, 0        	ADDWF	r0x04, W
004bd8   6e06     movwf   0x6, 0           	MOVWF	r0x06
                                           ; removed redundant BANKSEL
004bda   5142     movf    0x42, 0, 0x1     	MOVF	(_timer_1_ms + 1), W, B
004bdc   2005     addwfc  0x5, 0, 0        	ADDWFC	r0x05, W
004bde   6e07     movwf   0x7, 0           	MOVWF	r0x07
                                           _00870_DS_:
                                           ;	.line	1006; meter_logger.c	} while (diff < ms);
004be0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004be2   5c07     subwf   0x7, 0, 0        	SUBWF	r0x07, W
004be4   e102     bnz     0x4bea           	BNZ	_00881_DS_
004be6   5000     movf    0, 0, 0          	MOVF	r0x00, W
004be8   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
                                           _00881_DS_:
004bea   e3e4     bnc     0x4bb4           	BNC	_00869_DS_
004bec   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
004bee   f007
004bf0   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
004bf2   f006
004bf4   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
004bf6   f005
004bf8   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004bfa   f004
004bfc   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004bfe   f003
004c00   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004c02   f002
004c04   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004c06   f001
004c08   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004c0a   f000
004c0c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004c0e   ffd9
004c10   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__isr_low_prio	code
                                           _isr_low_prio:
                                           ;	.line	960; meter_logger.c	static void isr_low_prio(void) __interrupt 2 {
004aa8   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
004aaa   ffe5
004aac   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
004aae   ffe5
004ab0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004ab2   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
004ab4   ffe5
004ab6   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
004ab8   ffe5
004aba   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
004abc   ffe5
004abe   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
004ac0   ffe5
004ac2   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
004ac4   ffe5
004ac6   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
004ac8   ffe5
004aca   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004acc   ffe5
004ace   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004ad0   ffd9
004ad2   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004ad4   ffe5
004ad6   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004ad8   ffe5
                                           ;	.line	963; meter_logger.c	if (PIR1bits.TMR1IF) {
004ada   a09e     btfss   0x9e, 0, 0       	BTFSS	_PIR1bits, 0
004adc   d024     bra     0x4b26           	BRA	_00838_DS_
                                           ;	.line	964; meter_logger.c	TMR1H = (unsigned char)(TIMER1_RELOAD >> 8);    // 262,158ms @ 8MHz
004ade   0ef8     movlw   0xf8             	MOVLW	0xf8
004ae0   6ecf     movwf   0xcf, 0          	MOVWF	_TMR1H
                                           ;	.line	965; meter_logger.c	TMR1L = (unsigned char)TIMER1_RELOAD;
004ae2   0e53     movlw   0x53             	MOVLW	0x53
004ae4   6ece     movwf   0xce, 0          	MOVWF	_TMR1L
                                           ;	.line	967; meter_logger.c	switch (led_flash.state) {
004ae6   c54d     movff   0x54d, 0         	MOVFF	_led_flash, r0x00
004ae8   f000
004aea   5000     movf    0, 0, 0          	MOVF	r0x00, W
004aec   6e01     movwf   0x1, 0           	MOVWF	r0x01
004aee   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004af0   e004     bz      0x4afa           	BZ	_00832_DS_
004af2   5000     movf    0, 0, 0          	MOVF	r0x00, W
004af4   0a01     xorlw   0x1              	XORLW	0x01
004af6   e006     bz      0x4b04           	BZ	_00833_DS_
004af8   d011     bra     0x4b1c           	BRA	_00836_DS_
                                           _00832_DS_:
                                           ;	.line	969; meter_logger.c	LED_PIN = 1;
004afa   8881     bsf     0x81, 0x4, 0     	BSF	_PORTBbits, 4
                                           ;	.line	970; meter_logger.c	led_flash.state = LED_FLASH_RUNNING;
004afc   0e01     movlw   0x1              	MOVLW	0x01
004afe   0105     movlb   0x5              	BANKSEL	_led_flash
004b00   6f4d     movwf   0x4d, 0x1        	MOVWF	_led_flash, B
                                           ;	.line	971; meter_logger.c	break;
004b02   d00c     bra     0x4b1c           	BRA	_00836_DS_
                                           _00833_DS_:
                                           ;	.line	973; meter_logger.c	if (led_flash.timer-- == 0) {
004b04   c54e     movff   0x54e, 0         	MOVFF	(_led_flash + 1), r0x00
004b06   f000
004b08   0400     decf    0, 0, 0          	DECF	r0x00, W
004b0a   6e01     movwf   0x1, 0           	MOVWF	r0x01
004b0c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004b0e   0105     movlb   0x5              	BANKSEL	(_led_flash + 1)
004b10   6f4e     movwf   0x4e, 0x1        	MOVWF	(_led_flash + 1), B
004b12   5000     movf    0, 0, 0          	MOVF	r0x00, W
004b14   e103     bnz     0x4b1c           	BNZ	_00836_DS_
                                           ;	.line	974; meter_logger.c	LED_PIN = 0;
004b16   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	975; meter_logger.c	led_flash.state = LED_FLASH_STOPPED;
004b18   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
004b1a   6f4d     movwf   0x4d, 0x1        	MOVWF	_led_flash, B
                                           _00836_DS_:
004b1c   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	979; meter_logger.c	timer_1_ms++;
004b1e   3f41     incfsz  0x41, 0x1, 0x1   	INCFSZ	_timer_1_ms, F, B
004b20   d001     bra     0x4b24           	BRA	_31238_DS_
                                           ; removed redundant BANKSEL
004b22   2b42     incf    0x42, 0x1, 0x1   	INCF	(_timer_1_ms + 1), F, B
                                           _31238_DS_:
                                           ;	.line	980; meter_logger.c	PIR1bits.TMR1IF = 0;    /* Clear the Timer Flag  */
004b24   909e     bcf     0x9e, 0, 0       	BCF	_PIR1bits, 0
                                           _00838_DS_:
                                           ;	.line	984; meter_logger.c	if (usart_drdy()) {
004b26   ec3f     call    0x547e, 0        	CALL	_usart_drdy
004b28   f02a
004b2a   6e00     movwf   0, 0             	MOVWF	r0x00
004b2c   5000     movf    0, 0, 0          	MOVF	r0x00, W
004b2e   e006     bz      0x4b3c           	BZ	_00841_DS_
                                           ;	.line	986; meter_logger.c	c = usart_getc();
004b30   ec3d     call    0x527a, 0        	CALL	_usart_getc
004b32   f029
004b34   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	987; meter_logger.c	usart_putc(c);
004b36   5000     movf    0, 0, 0          	MOVF	r0x00, W
004b38   ec23     call    0x5446, 0        	CALL	_usart_putc
004b3a   f02a
                                           _00841_DS_:
004b3c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004b3e   f001
004b40   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004b42   f000
004b44   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004b46   ffd9
004b48   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
004b4a   fffb
004b4c   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
004b4e   fffa
004b50   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
004b52   ffea
004b54   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
004b56   ffe9
004b58   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
004b5a   fff4
004b5c   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
004b5e   fff3
004b60   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
004b62   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
004b64   ffe0
004b66   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
004b68   ffd8
004b6a   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__isr_high_prio	code
                                           _isr_high_prio:
                                           ;	.line	482; meter_logger.c	static void isr_high_prio(void) __interrupt 1 {
00260c   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
00260e   ffe5
002610   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
002612   ffe5
002614   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002616   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
002618   ffe5
00261a   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
00261c   ffe5
00261e   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
002620   ffe5
002622   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
002624   ffe5
002626   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
002628   ffe5
00262a   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
00262c   ffe5
00262e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002630   ffe5
002632   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002634   ffd9
002636   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002638   ffe5
00263a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00263c   ffe5
00263e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002640   ffe5
002642   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002644   ffe5
002646   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002648   ffe5
00264a   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00264c   ffe5
                                           ;	.line	484; meter_logger.c	if (INTCONbits.INT0IF && INTCONbits.INT0IE) {
00264e   a2f2     btfss   0xf2, 0x1, 0     	BTFSS	_INTCONbits, 1
002650   d1a1     bra     0x2994           	BRA	_00398_DS_
002652   a8f2     btfss   0xf2, 0x4, 0     	BTFSS	_INTCONbits, 4
002654   d19f     bra     0x2994           	BRA	_00398_DS_
                                           ;	.line	485; meter_logger.c	timer_0 = (unsigned int)(TMR0L) | ((unsigned int)(TMR0H) << 8);
002656   cfd6     movff   0xfd6, 0         	MOVFF	_TMR0L, r0x00
002658   f000
00265a   6a01     clrf    0x1, 0           	CLRF	r0x01
00265c   cfd7     movff   0xfd7, 0x2       	MOVFF	_TMR0H, r0x02
00265e   f002
002660   6a03     clrf    0x3, 0           	CLRF	r0x03
002662   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002664   6e05     movwf   0x5, 0           	MOVWF	r0x05
002666   6a04     clrf    0x4, 0           	CLRF	r0x04
002668   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00266a   1000     iorwf   0, 0, 0          	IORWF	r0x00, W
00266c   0105     movlb   0x5              	BANKSEL	_timer_0
00266e   6f47     movwf   0x47, 0x1        	MOVWF	_timer_0, B
002670   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002672   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
                                           ; removed redundant BANKSEL
002674   6f48     movwf   0x48, 0x1        	MOVWF	(_timer_0 + 1), B
002676   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	486; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
002678   514a     movf    0x4a, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
00267a   6e00     movwf   0, 0             	MOVWF	r0x00
00267c   6a01     clrf    0x1, 0           	CLRF	r0x01
00267e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002680   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	487; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
002682   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
002684   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
002686   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	489; meter_logger.c	switch (codec_type) {
002688   5152     movf    0x52, 0, 0x1     	MOVF	_codec_type, W, B
00268a   0a01     xorlw   0x1              	XORLW	0x01
00268c   e00b     bz      0x26a4           	BZ	_00356_DS_
                                           _00716_DS_:
00268e   0105     movlb   0x5              	BANKSEL	_codec_type
002690   5152     movf    0x52, 0, 0x1     	MOVF	_codec_type, W, B
002692   0a02     xorlw   0x2              	XORLW	0x02
002694   e101     bnz     0x2698           	BNZ	_00718_DS_
002696   d11d     bra     0x28d2           	BRA	_00390_DS_
                                           _00718_DS_:
002698   0105     movlb   0x5              	BANKSEL	_codec_type
00269a   5152     movf    0x52, 0, 0x1     	MOVF	_codec_type, W, B
00269c   0a04     xorlw   0x4              	XORLW	0x04
00269e   e101     bnz     0x26a2           	BNZ	_00720_DS_
0026a0   d146     bra     0x292e           	BRA	_00393_DS_
                                           _00720_DS_:
0026a2   d177     bra     0x2992           	BRA	_00396_DS_
                                           _00356_DS_:
                                           ;	.line	491; meter_logger.c	flash_led(100);
0026a4   0e64     movlw   0x64             	MOVLW	0x64
0026a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0026a8   ec65     call    0x52ca, 0        	CALL	_flash_led
0026aa   f029
0026ac   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	492; meter_logger.c	switch (testo_ir_proto.state) {
0026ae   c524     movff   0x524, 0         	MOVFF	_testo_ir_proto, r0x00
0026b0   f000
0026b2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0026b4   6e01     movwf   0x1, 0           	MOVWF	r0x01
0026b6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0026b8   e008     bz      0x26ca           	BZ	_00357_DS_
0026ba   5000     movf    0, 0, 0          	MOVF	r0x00, W
0026bc   0a02     xorlw   0x2              	XORLW	0x02
0026be   e00c     bz      0x26d8           	BZ	_00358_DS_
0026c0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0026c2   0a04     xorlw   0x4              	XORLW	0x04
0026c4   e101     bnz     0x26c8           	BNZ	_00726_DS_
0026c6   d03b     bra     0x273e           	BRA	_00366_DS_
                                           _00726_DS_:
0026c8   d164     bra     0x2992           	BRA	_00396_DS_
                                           _00357_DS_:
                                           ;	.line	494; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
0026ca   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	495; meter_logger.c	testo_ir_proto.start_bit_len = 1;
0026cc   0e01     movlw   0x1              	MOVLW	0x01
0026ce   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
0026d0   6f26     movwf   0x26, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	496; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
0026d2   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
0026d4   6f24     movwf   0x24, 0x1        	MOVWF	_testo_ir_proto, B
                                           ;	.line	497; meter_logger.c	break;
0026d6   d15d     bra     0x2992           	BRA	_00396_DS_
                                           _00358_DS_:
0026d8   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	499; meter_logger.c	if ((TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < TICK + timer0_reload + TICK_ADJ)) {
0026da   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
0026dc   0f8f     addlw   0x8f             	ADDLW	0x8f
0026de   6e00     movwf   0, 0             	MOVWF	r0x00
0026e0   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
0026e2   214a     addwfc  0x4a, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0026e4   6e01     movwf   0x1, 0           	MOVWF	r0x01
0026e6   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0026e8   5148     movf    0x48, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
0026ea   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0026ec   e102     bnz     0x26f2           	BNZ	_00727_DS_
                                           ; removed redundant BANKSEL
0026ee   5147     movf    0x47, 0, 0x1     	MOVF	_timer_0, W, B
0026f0   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00727_DS_:
0026f2   e21f     bc      0x2732           	BC	_00363_DS_
0026f4   0105     movlb   0x5              	BANKSEL	_timer0_reload
0026f6   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
0026f8   0f1f     addlw   0x1f             	ADDLW	0x1f
0026fa   6e00     movwf   0, 0             	MOVWF	r0x00
0026fc   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
0026fe   214a     addwfc  0x4a, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002700   6e01     movwf   0x1, 0           	MOVWF	r0x01
002702   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002704   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002706   5d48     subwf   0x48, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
002708   e102     bnz     0x270e           	BNZ	_00728_DS_
00270a   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00270c   5d47     subwf   0x47, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00728_DS_:
00270e   e211     bc      0x2732           	BC	_00363_DS_
                                           ;	.line	500; meter_logger.c	if (testo_ir_proto.start_bit_len < 2) {
002710   c526     movff   0x526, 0         	MOVFF	(_testo_ir_proto + 2), r0x00
002712   f000
002714   0e02     movlw   0x2              	MOVLW	0x02
002716   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002718   e205     bc      0x2724           	BC	_00360_DS_
                                           ;	.line	501; meter_logger.c	testo_ir_proto.start_bit_len++;
00271a   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
00271c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00271e   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
002720   6f26     movwf   0x26, 0x1        	MOVWF	(_testo_ir_proto + 2), B
002722   d137     bra     0x2992           	BRA	_00396_DS_
                                           _00360_DS_:
002724   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	505; meter_logger.c	testo_ir_proto.data = 0;
002726   6b27     clrf    0x27, 0x1        	CLRF	(_testo_ir_proto + 3), B
                                           ; removed redundant BANKSEL
002728   6b28     clrf    0x28, 0x1        	CLRF	(_testo_ir_proto + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	506; meter_logger.c	testo_ir_proto.data_len = 0;
00272a   6b29     clrf    0x29, 0x1        	CLRF	(_testo_ir_proto + 5), B
                                           ;	.line	507; meter_logger.c	testo_ir_proto.state = DATA_WAIT;
00272c   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
00272e   6f24     movwf   0x24, 0x1        	MOVWF	_testo_ir_proto, B
002730   d130     bra     0x2992           	BRA	_00396_DS_
                                           _00363_DS_:
                                           ;	.line	512; meter_logger.c	testo_ir_proto.start_bit_len = 1;
002732   0e01     movlw   0x1              	MOVLW	0x01
002734   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
002736   6f26     movwf   0x26, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	513; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
002738   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
00273a   6f24     movwf   0x24, 0x1        	MOVWF	_testo_ir_proto, B
                                           ;	.line	515; meter_logger.c	break;
00273c   d12a     bra     0x2992           	BRA	_00396_DS_
                                           _00366_DS_:
                                           ;	.line	517; meter_logger.c	if (testo_ir_proto.data_len <= 12) {
00273e   0e0d     movlw   0xd              	MOVLW	0x0d
002740   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
002742   5d29     subwf   0x29, 0, 0x1     	SUBWF	(_testo_ir_proto + 5), W, B
002744   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002746   d125     bra     0x2992           	BRA	_00396_DS_
002748   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	518; meter_logger.c	if (((TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < TICK + timer0_reload + TICK_ADJ)) || ((3 * TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < 3 * TICK + timer0_reload + TICK_ADJ))) {
00274a   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
00274c   0f8f     addlw   0x8f             	ADDLW	0x8f
00274e   6e00     movwf   0, 0             	MOVWF	r0x00
002750   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002752   214a     addwfc  0x4a, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002754   6e01     movwf   0x1, 0           	MOVWF	r0x01
002756   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002758   5148     movf    0x48, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
00275a   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00275c   e102     bnz     0x2762           	BNZ	_00731_DS_
                                           ; removed redundant BANKSEL
00275e   5147     movf    0x47, 0, 0x1     	MOVF	_timer_0, W, B
002760   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00731_DS_:
002762   e20e     bc      0x2780           	BC	_00382_DS_
002764   0105     movlb   0x5              	BANKSEL	_timer0_reload
002766   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
002768   0f1f     addlw   0x1f             	ADDLW	0x1f
00276a   6e00     movwf   0, 0             	MOVWF	r0x00
00276c   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
00276e   214a     addwfc  0x4a, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002770   6e01     movwf   0x1, 0           	MOVWF	r0x01
002772   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002774   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002776   5d48     subwf   0x48, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
002778   e102     bnz     0x277e           	BNZ	_00732_DS_
00277a   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00277c   5d47     subwf   0x47, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00732_DS_:
00277e   e31c     bnc     0x27b8           	BNC	_00377_DS_
                                           _00382_DS_:
002780   0105     movlb   0x5              	BANKSEL	_timer0_reload
002782   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
002784   0f3d     addlw   0x3d             	ADDLW	0x3d
002786   6e00     movwf   0, 0             	MOVWF	r0x00
002788   0e09     movlw   0x9              	MOVLW	0x09
                                           ; removed redundant BANKSEL
00278a   214a     addwfc  0x4a, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
00278c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00278e   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002790   5148     movf    0x48, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
002792   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002794   e102     bnz     0x279a           	BNZ	_00733_DS_
                                           ; removed redundant BANKSEL
002796   5147     movf    0x47, 0, 0x1     	MOVF	_timer_0, W, B
002798   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00733_DS_:
00279a   e235     bc      0x2806           	BC	_00378_DS_
00279c   0105     movlb   0x5              	BANKSEL	_timer0_reload
00279e   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
0027a0   0fcd     addlw   0xcd             	ADDLW	0xcd
0027a2   6e00     movwf   0, 0             	MOVWF	r0x00
0027a4   0e0a     movlw   0xa              	MOVLW	0x0a
                                           ; removed redundant BANKSEL
0027a6   214a     addwfc  0x4a, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0027a8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0027aa   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0027ac   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0027ae   5d48     subwf   0x48, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
0027b0   e102     bnz     0x27b6           	BNZ	_00734_DS_
0027b2   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0027b4   5d47     subwf   0x47, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00734_DS_:
0027b6   e227     bc      0x2806           	BC	_00378_DS_
                                           _00377_DS_:
                                           ;	.line	520; meter_logger.c	if ((testo_ir_proto.data & 1) != 0) {
0027b8   c527     movff   0x527, 0         	MOVFF	(_testo_ir_proto + 3), r0x00
0027ba   f000
0027bc   c528     movff   0x528, 0x1       	MOVFF	(_testo_ir_proto + 4), r0x01
0027be   f001
0027c0   a000     btfss   0, 0, 0          	BTFSS	r0x00, 0
0027c2   d00b     bra     0x27da           	BRA	_00368_DS_
                                           ;	.line	522; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
0027c4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0027c6   6e02     movwf   0x2, 0           	MOVWF	r0x02
0027c8   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
0027ca   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
0027cc   6e03     movwf   0x3, 0           	MOVWF	r0x03
0027ce   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0027d0   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
0027d2   6f27     movwf   0x27, 0x1        	MOVWF	(_testo_ir_proto + 3), B
0027d4   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
0027d6   6f28     movwf   0x28, 0x1        	MOVWF	(_testo_ir_proto + 4), B
0027d8   d00f     bra     0x27f8           	BRA	_00369_DS_
                                           _00368_DS_:
                                           ;	.line	526; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
0027da   5000     movf    0, 0, 0          	MOVF	r0x00, W
0027dc   6e02     movwf   0x2, 0           	MOVWF	r0x02
0027de   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
0027e0   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
0027e2   6e03     movwf   0x3, 0           	MOVWF	r0x03
0027e4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0027e6   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
0027e8   6f27     movwf   0x27, 0x1        	MOVWF	(_testo_ir_proto + 3), B
0027ea   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
0027ec   6f28     movwf   0x28, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           ;	.line	527; meter_logger.c	testo_ir_proto.data |= 1;	// and set bit 0
0027ee   8002     bsf     0x2, 0, 0        	BSF	r0x02, 0
0027f0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
0027f2   6f27     movwf   0x27, 0x1        	MOVWF	(_testo_ir_proto + 3), B
0027f4   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
0027f6   6f28     movwf   0x28, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           _00369_DS_:
                                           ;	.line	529; meter_logger.c	testo_ir_proto.data_len++;
0027f8   c529     movff   0x529, 0         	MOVFF	(_testo_ir_proto + 5), r0x00
0027fa   f000
0027fc   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0027fe   5000     movf    0, 0, 0          	MOVF	r0x00, W
002800   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
002802   6f29     movwf   0x29, 0x1        	MOVWF	(_testo_ir_proto + 5), B
002804   d048     bra     0x2896           	BRA	_00379_DS_
                                           _00378_DS_:
002806   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	531; meter_logger.c	else if ((2 * TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < 2 * TICK + timer0_reload + TICK_ADJ)) {
002808   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
00280a   0fe6     addlw   0xe6             	ADDLW	0xe6
00280c   6e00     movwf   0, 0             	MOVWF	r0x00
00280e   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
002810   214a     addwfc  0x4a, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002812   6e01     movwf   0x1, 0           	MOVWF	r0x01
002814   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002816   5148     movf    0x48, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
002818   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00281a   e102     bnz     0x2820           	BNZ	_00737_DS_
                                           ; removed redundant BANKSEL
00281c   5147     movf    0x47, 0, 0x1     	MOVF	_timer_0, W, B
00281e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00737_DS_:
002820   e235     bc      0x288c           	BC	_00374_DS_
002822   0105     movlb   0x5              	BANKSEL	_timer0_reload
002824   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
002826   0f76     addlw   0x76             	ADDLW	0x76
002828   6e00     movwf   0, 0             	MOVWF	r0x00
00282a   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
00282c   214a     addwfc  0x4a, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
00282e   6e01     movwf   0x1, 0           	MOVWF	r0x01
002830   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002832   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002834   5d48     subwf   0x48, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
002836   e102     bnz     0x283c           	BNZ	_00738_DS_
002838   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00283a   5d47     subwf   0x47, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00738_DS_:
00283c   e227     bc      0x288c           	BC	_00374_DS_
                                           ;	.line	533; meter_logger.c	if ((testo_ir_proto.data & 1) != 0) {
00283e   c527     movff   0x527, 0         	MOVFF	(_testo_ir_proto + 3), r0x00
002840   f000
002842   c528     movff   0x528, 0x1       	MOVFF	(_testo_ir_proto + 4), r0x01
002844   f001
002846   a000     btfss   0, 0, 0          	BTFSS	r0x00, 0
002848   d010     bra     0x286a           	BRA	_00371_DS_
                                           ;	.line	535; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
00284a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00284c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00284e   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
002850   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
002852   6e03     movwf   0x3, 0           	MOVWF	r0x03
002854   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002856   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
002858   6f27     movwf   0x27, 0x1        	MOVWF	(_testo_ir_proto + 3), B
00285a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
00285c   6f28     movwf   0x28, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           ;	.line	536; meter_logger.c	testo_ir_proto.data |= 1;	// and set bit 0
00285e   8002     bsf     0x2, 0, 0        	BSF	r0x02, 0
002860   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
002862   6f27     movwf   0x27, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002864   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002866   6f28     movwf   0x28, 0x1        	MOVWF	(_testo_ir_proto + 4), B
002868   d00a     bra     0x287e           	BRA	_00372_DS_
                                           _00371_DS_:
                                           ;	.line	540; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
00286a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00286c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00286e   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
002870   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
002872   6e03     movwf   0x3, 0           	MOVWF	r0x03
002874   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002876   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
002878   6f27     movwf   0x27, 0x1        	MOVWF	(_testo_ir_proto + 3), B
00287a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
00287c   6f28     movwf   0x28, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           _00372_DS_:
                                           ;	.line	542; meter_logger.c	testo_ir_proto.data_len++;
00287e   c529     movff   0x529, 0         	MOVFF	(_testo_ir_proto + 5), r0x00
002880   f000
002882   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002884   5000     movf    0, 0, 0          	MOVF	r0x00, W
002886   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
002888   6f29     movwf   0x29, 0x1        	MOVWF	(_testo_ir_proto + 5), B
00288a   d005     bra     0x2896           	BRA	_00379_DS_
                                           _00374_DS_:
                                           ;	.line	547; meter_logger.c	testo_ir_proto.start_bit_len = 1;
00288c   0e01     movlw   0x1              	MOVLW	0x01
00288e   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
002890   6f26     movwf   0x26, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	548; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
002892   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002894   6f24     movwf   0x24, 0x1        	MOVWF	_testo_ir_proto, B
                                           _00379_DS_:
002896   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
                                           ;	.line	550; meter_logger.c	if (testo_ir_proto.data_len == 12) {
002898   5129     movf    0x29, 0, 0x1     	MOVF	(_testo_ir_proto + 5), W, B
00289a   0a0c     xorlw   0xc              	XORLW	0x0c
00289c   e001     bz      0x28a0           	BZ	_00742_DS_
00289e   d079     bra     0x2992           	BRA	_00396_DS_
                                           _00742_DS_:
0028a0   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 4)
                                           ;	.line	553; meter_logger.c	if (testo_valid_err_corr(testo_ir_proto.data & 0xffff)) {
0028a2   5128     movf    0x28, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
0028a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0028a6   5127     movf    0x27, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0028a8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0028aa   ecf5     call    0x3bea, 0        	CALL	_testo_valid_err_corr
0028ac   f01d
0028ae   6e00     movwf   0, 0             	MOVWF	r0x00
0028b0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0028b2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0028b4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0028b6   e00a     bz      0x28cc           	BZ	_00384_DS_
0028b8   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	555; meter_logger.c	fifo_put(testo_ir_proto.data & 0xff);
0028ba   5127     movf    0x27, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0028bc   6e00     movwf   0, 0             	MOVWF	r0x00
0028be   6a01     clrf    0x1, 0           	CLRF	r0x01
0028c0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0028c2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0028c4   ecfd     call    0x43fa, 0        	CALL	_fifo_put
0028c6   f021
0028c8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	556; meter_logger.c	LED_PIN = 1;
0028ca   8881     bsf     0x81, 0x4, 0     	BSF	_PORTBbits, 4
                                           _00384_DS_:
0028cc   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	558; meter_logger.c	testo_ir_proto.state = INIT_STATE;
0028ce   6b24     clrf    0x24, 0x1        	CLRF	_testo_ir_proto, B
                                           ;	.line	563; meter_logger.c	break;
0028d0   d060     bra     0x2992           	BRA	_00396_DS_
                                           _00390_DS_:
0028d2   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	565; meter_logger.c	switch (rs232_proto.state) {
0028d4   511d     movf    0x1d, 0, 0x1     	MOVF	_rs232_proto, W, B
0028d6   0a02     xorlw   0x2              	XORLW	0x02
0028d8   e001     bz      0x28dc           	BZ	_00745_DS_
0028da   d05b     bra     0x2992           	BRA	_00396_DS_
                                           _00745_DS_:
0028dc   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	576; meter_logger.c	TMR0H = (unsigned char)((timer0_reload - ((0xffff - timer0_reload) >> 1)) >> 8);
0028de   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
0028e0   08ff     sublw   0xff             	SUBLW	0xff
0028e2   6e00     movwf   0, 0             	MOVWF	r0x00
0028e4   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
0028e6   554a     subfwb  0x4a, 0, 0x1     	SUBFWB	(_timer0_reload + 1), W, B
0028e8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0028ea   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0028ec   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
0028ee   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
0028f0   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0028f2   5d49     subwf   0x49, 0, 0x1     	SUBWF	_timer0_reload, W, B
0028f4   6e00     movwf   0, 0             	MOVWF	r0x00
0028f6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0028f8   594a     subwfb  0x4a, 0, 0x1     	SUBWFB	(_timer0_reload + 1), W, B
0028fa   6e01     movwf   0x1, 0           	MOVWF	r0x01
0028fc   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0028fe   6e00     movwf   0, 0             	MOVWF	r0x00
002900   6a01     clrf    0x1, 0           	CLRF	r0x01
002902   5000     movf    0, 0, 0          	MOVF	r0x00, W
002904   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	577; meter_logger.c	TMR0L = (unsigned char)timer0_reload - ((0xffff - timer0_reload) >> 1);
002906   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
002908   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
00290a   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
00290c   08ff     sublw   0xff             	SUBLW	0xff
00290e   6e01     movwf   0x1, 0           	MOVWF	r0x01
002910   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
002912   554a     subfwb  0x4a, 0, 0x1     	SUBFWB	(_timer0_reload + 1), W, B
002914   6e02     movwf   0x2, 0           	MOVWF	r0x02
002916   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002918   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
00291a   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
00291c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00291e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002920   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
                                           ;	.line	578; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int while we are using timer to receive data bits
002922   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	579; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
002924   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	580; meter_logger.c	rs232_proto.state = DATA_WAIT;
002926   0e04     movlw   0x4              	MOVLW	0x04
002928   0105     movlb   0x5              	BANKSEL	_rs232_proto
00292a   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	583; meter_logger.c	break;
00292c   d032     bra     0x2992           	BRA	_00396_DS_
                                           _00393_DS_:
00292e   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	585; meter_logger.c	switch (rs232_proto.state) {
002930   511d     movf    0x1d, 0, 0x1     	MOVF	_rs232_proto, W, B
002932   0a02     xorlw   0x2              	XORLW	0x02
002934   e12e     bnz     0x2992           	BNZ	_00396_DS_
                                           _00747_DS_:
002936   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	596; meter_logger.c	TMR0H = (unsigned char)((timer0_reload - ((0xffff - timer0_reload) >> 1)) >> 8);
002938   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
00293a   08ff     sublw   0xff             	SUBLW	0xff
00293c   6e00     movwf   0, 0             	MOVWF	r0x00
00293e   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
002940   554a     subfwb  0x4a, 0, 0x1     	SUBFWB	(_timer0_reload + 1), W, B
002942   6e01     movwf   0x1, 0           	MOVWF	r0x01
002944   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002946   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
002948   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
00294a   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00294c   5d49     subwf   0x49, 0, 0x1     	SUBWF	_timer0_reload, W, B
00294e   6e00     movwf   0, 0             	MOVWF	r0x00
002950   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002952   594a     subwfb  0x4a, 0, 0x1     	SUBWFB	(_timer0_reload + 1), W, B
002954   6e01     movwf   0x1, 0           	MOVWF	r0x01
002956   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002958   6e00     movwf   0, 0             	MOVWF	r0x00
00295a   6a01     clrf    0x1, 0           	CLRF	r0x01
00295c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00295e   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	597; meter_logger.c	TMR0L = (unsigned char)timer0_reload - ((0xffff - timer0_reload) >> 1);
002960   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
002962   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002964   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
002966   08ff     sublw   0xff             	SUBLW	0xff
002968   6e01     movwf   0x1, 0           	MOVWF	r0x01
00296a   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
00296c   554a     subfwb  0x4a, 0, 0x1     	SUBFWB	(_timer0_reload + 1), W, B
00296e   6e02     movwf   0x2, 0           	MOVWF	r0x02
002970   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002972   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
002974   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
002976   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002978   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
00297a   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
                                           ;	.line	598; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int while we are using timer to receive data bits
00297c   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	599; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
00297e   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	600; meter_logger.c	rs232_proto.data &= 0x7f;	// 7-bit data
002980   0e7f     movlw   0x7f             	MOVLW	0x7f
002982   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
002984   151f     andwf   0x1f, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
002986   6e00     movwf   0, 0             	MOVWF	r0x00
002988   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00298a   6f1f     movwf   0x1f, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	601; meter_logger.c	rs232_proto.calculated_parity = 0;
00298c   6b22     clrf    0x22, 0x1        	CLRF	(_rs232_proto + 5), B
                                           ;	.line	603; meter_logger.c	rs232_proto.state = DATA_WAIT;
00298e   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
002990   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           _00396_DS_:
                                           ;	.line	608; meter_logger.c	INTCONbits.INT0IF = 0;	/* Clear Interrupt Flag */
002992   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           _00398_DS_:
                                           ;	.line	612; meter_logger.c	if (INTCONbits.TMR0IF && INTCONbits.TMR0IE) {
002994   a4f2     btfss   0xf2, 0x2, 0     	BTFSS	_INTCONbits, 2
002996   efec     goto    0x2dd8           	GOTO	_00475_DS_
002998   f016
00299a   aaf2     btfss   0xf2, 0x5, 0     	BTFSS	_INTCONbits, 5
00299c   efec     goto    0x2dd8           	GOTO	_00475_DS_
00299e   f016
0029a0   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	614; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
0029a2   514a     movf    0x4a, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
0029a4   6e00     movwf   0, 0             	MOVWF	r0x00
0029a6   6a01     clrf    0x1, 0           	CLRF	r0x01
0029a8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0029aa   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	615; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
0029ac   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
0029ae   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
                                           ;	.line	617; meter_logger.c	switch (codec_type) {
0029b0   0e01     movlw   0x1              	MOVLW	0x01
0029b2   0105     movlb   0x5              	BANKSEL	_codec_type
0029b4   5d52     subwf   0x52, 0, 0x1     	SUBWF	_codec_type, W, B
0029b6   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
0029b8   efeb     goto    0x2dd6           	GOTO	_00473_DS_
0029ba   f016
0029bc   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
0029be   5d52     subwf   0x52, 0, 0x1     	SUBWF	_codec_type, W, B
0029c0   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0029c2   efeb     goto    0x2dd6           	GOTO	_00473_DS_
0029c4   f016
                                           ; removed redundant BANKSEL
0029c6   0552     decf    0x52, 0, 0x1     	DECF	_codec_type, W, B
0029c8   6e00     movwf   0, 0             	MOVWF	r0x00
0029ca   6afa     clrf    0xfa, 0          	CLRF	PCLATH
0029cc   6afb     clrf    0xfb, 0          	CLRF	PCLATU
0029ce   3400     rlcf    0, 0, 0          	RLCF	r0x00, W
0029d0   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0029d2   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
0029d4   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0029d6   0bfc     andlw   0xfc             	ANDLW	0xfc
0029d8   0fe8     addlw   0xe8             	ADDLW	LOW(_00751_DS_)
0029da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0029dc   0e29     movlw   0x29             	MOVLW	HIGH(_00751_DS_)
0029de   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
0029e0   0e00     movlw   0                	MOVLW	UPPER(_00751_DS_)
0029e2   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0029e4   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0029e6   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00751_DS_:
0029e8   ef02     goto    0x2a04           	GOTO	_00400_DS_
0029ea   f015
0029ec   ef51     goto    0x2aa2           	GOTO	_00412_DS_
0029ee   f015
0029f0   ef08     goto    0x2a10           	GOTO	_00401_DS_
0029f2   f015
0029f4   eff9     goto    0x2bf2           	GOTO	_00433_DS_
0029f6   f015
0029f8   ef8f     goto    0x2b1e           	GOTO	_00422_DS_
0029fa   f015
0029fc   ef53     goto    0x2ca6           	GOTO	_00446_DS_
0029fe   f016
002a00   ef96     goto    0x2d2c           	GOTO	_00457_DS_
002a02   f016
                                           _00400_DS_:
                                           ;	.line	619; meter_logger.c	T0CONbits.TMR0ON = 0;			// Stop TMR0
002a04   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
002a06   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	620; meter_logger.c	testo_ir_proto.state = INIT_STATE;
002a08   6b24     clrf    0x24, 0x1        	CLRF	_testo_ir_proto, B
002a0a   0003     sleep                    	sleep 
                                           ;	.line	622; meter_logger.c	break;
002a0c   efeb     goto    0x2dd6           	GOTO	_00473_DS_
002a0e   f016
                                           _00401_DS_:
                                           ;	.line	624; meter_logger.c	switch (rs232_proto.state) {
002a10   c51d     movff   0x51d, 0         	MOVFF	_rs232_proto, r0x00
002a12   f000
002a14   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a16   6e01     movwf   0x1, 0           	MOVWF	r0x01
002a18   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002a1a   e00a     bz      0x2a30           	BZ	_00402_DS_
002a1c   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a1e   0a03     xorlw   0x3              	XORLW	0x03
002a20   e011     bz      0x2a44           	BZ	_00405_DS_
002a22   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a24   0a0a     xorlw   0xa              	XORLW	0x0a
002a26   e033     bz      0x2a8e           	BZ	_00409_DS_
002a28   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a2a   0a0b     xorlw   0xb              	XORLW	0x0b
002a2c   e035     bz      0x2a98           	BZ	_00410_DS_
002a2e   d1d3     bra     0x2dd6           	BRA	_00473_DS_
                                           _00402_DS_:
002a30   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	626; meter_logger.c	if (rs232_proto.data_len == 8) {
002a32   5120     movf    0x20, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
002a34   0a08     xorlw   0x8              	XORLW	0x08
002a36   e001     bz      0x2a3a           	BZ	_00761_DS_
002a38   d1ce     bra     0x2dd6           	BRA	_00473_DS_
                                           _00761_DS_:
                                           ;	.line	627; meter_logger.c	IR_LED_PIN = 1;		// inverted rs232 output on ir, start bit = ir light
002a3a   8281     bsf     0x81, 0x1, 0     	BSF	_PORTBbits, 1
                                           ;	.line	628; meter_logger.c	rs232_proto.state = START_BIT_SENT;
002a3c   0e03     movlw   0x3              	MOVLW	0x03
002a3e   0105     movlb   0x5              	BANKSEL	_rs232_proto
002a40   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	630; meter_logger.c	break;
002a42   d1c9     bra     0x2dd6           	BRA	_00473_DS_
                                           _00405_DS_:
                                           ;	.line	632; meter_logger.c	if (rs232_proto.data_len >= 1) {
002a44   0e01     movlw   0x1              	MOVLW	0x01
002a46   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002a48   5d20     subwf   0x20, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002a4a   e31c     bnc     0x2a84           	BNC	_00407_DS_
                                           ;	.line	633; meter_logger.c	IR_LED_PIN = (rs232_proto.data & 1) == 0;	// inverted rs232 output on ir
002a4c   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002a4e   151f     andwf   0x1f, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
002a50   6e00     movwf   0, 0             	MOVWF	r0x00
002a52   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a54   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
002a56   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
002a58   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002a5a   6a00     clrf    0, 0             	CLRF	r0x00
002a5c   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
002a5e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a60   0b01     andlw   0x1              	ANDLW	0x01
002a62   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
002a64   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
002a66   5081     movf    0x81, 0, 0       	MOVF	_PORTBbits, W
002a68   0bfd     andlw   0xfd             	ANDLW	0xfd
002a6a   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
002a6c   6e81     movwf   0x81, 0          	MOVWF	_PORTBbits
                                           ; removed redundant BANKSEL
                                           ;	.line	634; meter_logger.c	rs232_proto.data = rs232_proto.data >> 1;
002a6e   411f     rrncf   0x1f, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002a70   0b7f     andlw   0x7f             	ANDLW	0x7f
002a72   6e00     movwf   0, 0             	MOVWF	r0x00
002a74   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002a76   6f1f     movwf   0x1f, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	635; meter_logger.c	rs232_proto.data_len--;
002a78   c520     movff   0x520, 0         	MOVFF	(_rs232_proto + 3), r0x00
002a7a   f000
002a7c   0600     decf    0, 0x1, 0        	DECF	r0x00, F
002a7e   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002a80   6f20     movwf   0x20, 0x1        	MOVWF	(_rs232_proto + 3), B
002a82   d1a9     bra     0x2dd6           	BRA	_00473_DS_
                                           _00407_DS_:
                                           ;	.line	638; meter_logger.c	IR_LED_PIN = 0;								// inverted rs232 output on ir					
002a84   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	639; meter_logger.c	rs232_proto.state = STOP_BIT_SENT;
002a86   0e0a     movlw   0xa              	MOVLW	0x0a
002a88   0105     movlb   0x5              	BANKSEL	_rs232_proto
002a8a   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	641; meter_logger.c	break;
002a8c   d1a4     bra     0x2dd6           	BRA	_00473_DS_
                                           _00409_DS_:
                                           ;	.line	643; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002a8e   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	644; meter_logger.c	rs232_proto.state = STOP_BIT2_SENT;
002a90   0e0b     movlw   0xb              	MOVLW	0x0b
002a92   0105     movlb   0x5              	BANKSEL	_rs232_proto
002a94   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	645; meter_logger.c	break;
002a96   d19f     bra     0x2dd6           	BRA	_00473_DS_
                                           _00410_DS_:
                                           ;	.line	647; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002a98   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
002a9a   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	648; meter_logger.c	rs232_proto.state = INIT_STATE;
002a9c   6b1d     clrf    0x1d, 0x1        	CLRF	_rs232_proto, B
                                           ;	.line	649; meter_logger.c	T0CONbits.TMR0ON = 0;							// stop timer 0
002a9e   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	652; meter_logger.c	break;
002aa0   d19a     bra     0x2dd6           	BRA	_00473_DS_
                                           _00412_DS_:
                                           ;	.line	654; meter_logger.c	switch (rs232_proto.state) {
002aa2   c51d     movff   0x51d, 0         	MOVFF	_rs232_proto, r0x00
002aa4   f000
002aa6   5000     movf    0, 0, 0          	MOVF	r0x00, W
002aa8   0a04     xorlw   0x4              	XORLW	0x04
002aaa   e007     bz      0x2aba           	BZ	_00413_DS_
002aac   5000     movf    0, 0, 0          	MOVF	r0x00, W
002aae   0a08     xorlw   0x8              	XORLW	0x08
002ab0   e023     bz      0x2af8           	BZ	_00419_DS_
002ab2   5000     movf    0, 0, 0          	MOVF	r0x00, W
002ab4   0a09     xorlw   0x9              	XORLW	0x09
002ab6   e024     bz      0x2b00           	BZ	_00420_DS_
002ab8   d18e     bra     0x2dd6           	BRA	_00473_DS_
                                           _00413_DS_:
                                           ;	.line	656; meter_logger.c	rs232_proto.data_len++;
002aba   c520     movff   0x520, 0         	MOVFF	(_rs232_proto + 3), r0x00
002abc   f000
002abe   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002ac0   5000     movf    0, 0, 0          	MOVF	r0x00, W
002ac2   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002ac4   6f20     movwf   0x20, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	657; meter_logger.c	if (IR_PIN) {		
002ac6   a081     btfss   0x81, 0, 0       	BTFSS	_PORTBbits, 0
002ac8   d006     bra     0x2ad6           	BRA	_00415_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	659; meter_logger.c	rs232_proto.data >>= 1;
002aca   411f     rrncf   0x1f, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002acc   0b7f     andlw   0x7f             	ANDLW	0x7f
002ace   6e00     movwf   0, 0             	MOVWF	r0x00
002ad0   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002ad2   6f1f     movwf   0x1f, 0x1        	MOVWF	(_rs232_proto + 2), B
002ad4   d009     bra     0x2ae8           	BRA	_00416_DS_
                                           _00415_DS_:
002ad6   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	671; meter_logger.c	rs232_proto.data >>= 1;
002ad8   411f     rrncf   0x1f, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002ada   0b7f     andlw   0x7f             	ANDLW	0x7f
002adc   6e00     movwf   0, 0             	MOVWF	r0x00
002ade   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002ae0   6f1f     movwf   0x1f, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	672; meter_logger.c	rs232_proto.data |= 0x80;
002ae2   8e00     bsf     0, 0x7, 0        	BSF	r0x00, 7
002ae4   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002ae6   6f1f     movwf   0x1f, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           _00416_DS_:
                                           ;	.line	692; meter_logger.c	if (rs232_proto.data_len >= 8) {
002ae8   0e08     movlw   0x8              	MOVLW	0x08
002aea   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002aec   5d20     subwf   0x20, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002aee   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
002af0   d172     bra     0x2dd6           	BRA	_00473_DS_
                                           ;	.line	694; meter_logger.c	rs232_proto.state = STOP_BIT_WAIT;
002af2   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
002af4   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	696; meter_logger.c	break;
002af6   d16f     bra     0x2dd6           	BRA	_00473_DS_
                                           _00419_DS_:
                                           ;	.line	698; meter_logger.c	rs232_proto.state = STOP_BIT2_WAIT;
002af8   0e09     movlw   0x9              	MOVLW	0x09
002afa   0105     movlb   0x5              	BANKSEL	_rs232_proto
002afc   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	699; meter_logger.c	break;
002afe   d16b     bra     0x2dd6           	BRA	_00473_DS_
                                           _00420_DS_:
002b00   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	701; meter_logger.c	fifo_put(rs232_proto.data);
002b02   511f     movf    0x1f, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
002b04   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002b06   ecfd     call    0x43fa, 0        	CALL	_fifo_put
002b08   f021
002b0a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002b0c   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	702; meter_logger.c	rs232_proto.data = 0;
002b0e   6b1f     clrf    0x1f, 0x1        	CLRF	(_rs232_proto + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	703; meter_logger.c	rs232_proto.data_len = 0;
002b10   6b20     clrf    0x20, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	704; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
002b12   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002b14   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	705; meter_logger.c	T0CONbits.TMR0ON = 0;
002b16   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	706; meter_logger.c	INTCONbits.INT0IF = 0;		// dont enter ext int now
002b18   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           ;	.line	707; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int again
002b1a   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	710; meter_logger.c	break;
002b1c   d15c     bra     0x2dd6           	BRA	_00473_DS_
                                           _00422_DS_:
                                           ;	.line	712; meter_logger.c	switch (rs232_proto.state) {
002b1e   c51d     movff   0x51d, 0         	MOVFF	_rs232_proto, r0x00
002b20   f000
002b22   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b24   6e01     movwf   0x1, 0           	MOVWF	r0x01
002b26   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002b28   e00c     bz      0x2b42           	BZ	_00423_DS_
002b2a   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b2c   0a03     xorlw   0x3              	XORLW	0x03
002b2e   e018     bz      0x2b60           	BZ	_00426_DS_
002b30   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b32   0a06     xorlw   0x6              	XORLW	0x06
002b34   e101     bnz     0x2b38           	BNZ	_00777_DS_
002b36   d053     bra     0x2bde           	BRA	_00430_DS_
                                           _00777_DS_:
002b38   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b3a   0a0a     xorlw   0xa              	XORLW	0x0a
002b3c   e101     bnz     0x2b40           	BNZ	_00779_DS_
002b3e   d054     bra     0x2be8           	BRA	_00431_DS_
                                           _00779_DS_:
002b40   d14a     bra     0x2dd6           	BRA	_00473_DS_
                                           _00423_DS_:
002b42   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	714; meter_logger.c	if (rs232_proto.data_len == 7) {
002b44   5120     movf    0x20, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
002b46   0a07     xorlw   0x7              	XORLW	0x07
002b48   e001     bz      0x2b4c           	BZ	_00781_DS_
002b4a   d145     bra     0x2dd6           	BRA	_00473_DS_
                                           _00781_DS_:
                                           ;	.line	715; meter_logger.c	IR_LED_PIN = 1;		// inverted rs232 output on ir, start bit = ir light
002b4c   8281     bsf     0x81, 0x1, 0     	BSF	_PORTBbits, 1
                                           ;	.line	716; meter_logger.c	rs232_proto.parity = rs232_proto.data & 1;
002b4e   0e01     movlw   0x1              	MOVLW	0x01
002b50   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
002b52   151f     andwf   0x1f, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
002b54   6e00     movwf   0, 0             	MOVWF	r0x00
002b56   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002b58   6f21     movwf   0x21, 0x1        	MOVWF	(_rs232_proto + 4), B
                                           ;	.line	717; meter_logger.c	rs232_proto.state = START_BIT_SENT;
002b5a   0e03     movlw   0x3              	MOVLW	0x03
                                           ; removed redundant BANKSEL
002b5c   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	719; meter_logger.c	break;
002b5e   d13b     bra     0x2dd6           	BRA	_00473_DS_
                                           _00426_DS_:
                                           ;	.line	721; meter_logger.c	if (rs232_proto.data_len >= 1) {
002b60   0e01     movlw   0x1              	MOVLW	0x01
002b62   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002b64   5d20     subwf   0x20, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002b66   e326     bnc     0x2bb4           	BNC	_00428_DS_
                                           ;	.line	722; meter_logger.c	IR_LED_PIN = (rs232_proto.data & 1) == 0;	// inverted rs232 output on ir
002b68   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002b6a   151f     andwf   0x1f, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
002b6c   6e00     movwf   0, 0             	MOVWF	r0x00
002b6e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b70   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
002b72   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
002b74   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002b76   6a00     clrf    0, 0             	CLRF	r0x00
002b78   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
002b7a   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b7c   0b01     andlw   0x1              	ANDLW	0x01
002b7e   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
002b80   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
002b82   5081     movf    0x81, 0, 0       	MOVF	_PORTBbits, W
002b84   0bfd     andlw   0xfd             	ANDLW	0xfd
002b86   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
002b88   6e81     movwf   0x81, 0          	MOVWF	_PORTBbits
                                           ; removed redundant BANKSEL
                                           ;	.line	723; meter_logger.c	rs232_proto.parity ^= ((rs232_proto.data >> 1) & 1);
002b8a   511f     movf    0x1f, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
002b8c   0b02     andlw   0x2              	ANDLW	0x02
002b8e   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
002b90   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002b92   5121     movf    0x21, 0, 0x1     	MOVF	(_rs232_proto + 4), W, B
002b94   6e01     movwf   0x1, 0           	MOVWF	r0x01
002b96   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002b98   1a00     xorwf   0, 0x1, 0        	XORWF	r0x00, F
002b9a   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002b9c   6f21     movwf   0x21, 0x1        	MOVWF	(_rs232_proto + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	724; meter_logger.c	rs232_proto.data = rs232_proto.data >> 1;
002b9e   411f     rrncf   0x1f, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002ba0   0b7f     andlw   0x7f             	ANDLW	0x7f
002ba2   6e00     movwf   0, 0             	MOVWF	r0x00
002ba4   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002ba6   6f1f     movwf   0x1f, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	725; meter_logger.c	rs232_proto.data_len--;
002ba8   c520     movff   0x520, 0         	MOVFF	(_rs232_proto + 3), r0x00
002baa   f000
002bac   0600     decf    0, 0x1, 0        	DECF	r0x00, F
002bae   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002bb0   6f20     movwf   0x20, 0x1        	MOVWF	(_rs232_proto + 3), B
002bb2   d111     bra     0x2dd6           	BRA	_00473_DS_
                                           _00428_DS_:
                                           ;	.line	728; meter_logger.c	IR_LED_PIN = (rs232_proto.parity & 1) == 0;		// inverted rs232 output on ir					
002bb4   0e01     movlw   0x1              	MOVLW	0x01
002bb6   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 4)
002bb8   1521     andwf   0x21, 0, 0x1     	ANDWF	(_rs232_proto + 4), W, B
002bba   6e00     movwf   0, 0             	MOVWF	r0x00
002bbc   5000     movf    0, 0, 0          	MOVF	r0x00, W
002bbe   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
002bc0   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
002bc2   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002bc4   6a00     clrf    0, 0             	CLRF	r0x00
002bc6   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
002bc8   5000     movf    0, 0, 0          	MOVF	r0x00, W
002bca   0b01     andlw   0x1              	ANDLW	0x01
002bcc   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
002bce   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
002bd0   5081     movf    0x81, 0, 0       	MOVF	_PORTBbits, W
002bd2   0bfd     andlw   0xfd             	ANDLW	0xfd
002bd4   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
002bd6   6e81     movwf   0x81, 0          	MOVWF	_PORTBbits
                                           ;	.line	729; meter_logger.c	rs232_proto.state = PARITY_BIT_SENT;
002bd8   0e06     movlw   0x6              	MOVLW	0x06
                                           ; removed redundant BANKSEL
002bda   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	731; meter_logger.c	break;
002bdc   d0fc     bra     0x2dd6           	BRA	_00473_DS_
                                           _00430_DS_:
                                           ;	.line	733; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002bde   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	734; meter_logger.c	rs232_proto.state = STOP_BIT_SENT;
002be0   0e0a     movlw   0xa              	MOVLW	0x0a
002be2   0105     movlb   0x5              	BANKSEL	_rs232_proto
002be4   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	735; meter_logger.c	break;
002be6   d0f7     bra     0x2dd6           	BRA	_00473_DS_
                                           _00431_DS_:
                                           ;	.line	737; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002be8   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
002bea   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	738; meter_logger.c	rs232_proto.state = INIT_STATE;
002bec   6b1d     clrf    0x1d, 0x1        	CLRF	_rs232_proto, B
                                           ;	.line	739; meter_logger.c	T0CONbits.TMR0ON = 0;							// stop timer 0
002bee   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	742; meter_logger.c	break;
002bf0   d0f2     bra     0x2dd6           	BRA	_00473_DS_
                                           _00433_DS_:
                                           ;	.line	744; meter_logger.c	switch (rs232_proto.state) {
002bf2   c51d     movff   0x51d, 0         	MOVFF	_rs232_proto, r0x00
002bf4   f000
002bf6   5000     movf    0, 0, 0          	MOVF	r0x00, W
002bf8   0a04     xorlw   0x4              	XORLW	0x04
002bfa   e007     bz      0x2c0a           	BZ	_00434_DS_
002bfc   5000     movf    0, 0, 0          	MOVF	r0x00, W
002bfe   0a07     xorlw   0x7              	XORLW	0x07
002c00   e02c     bz      0x2c5a           	BZ	_00440_DS_
002c02   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c04   0a08     xorlw   0x8              	XORLW	0x08
002c06   e035     bz      0x2c72           	BZ	_00441_DS_
002c08   d0e6     bra     0x2dd6           	BRA	_00473_DS_
                                           _00434_DS_:
                                           ;	.line	746; meter_logger.c	rs232_proto.data_len++;
002c0a   c520     movff   0x520, 0         	MOVFF	(_rs232_proto + 3), r0x00
002c0c   f000
002c0e   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002c10   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c12   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002c14   6f20     movwf   0x20, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	747; meter_logger.c	if (IR_PIN) {
002c16   a081     btfss   0x81, 0, 0       	BTFSS	_PORTBbits, 0
002c18   d00a     bra     0x2c2e           	BRA	_00436_DS_
                                           ;	.line	749; meter_logger.c	rs232_proto.calculated_parity ^= 0;
002c1a   c522     movff   0x522, 0         	MOVFF	(_rs232_proto + 5), r0x00
002c1c   f000
002c1e   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002c20   6f22     movwf   0x22, 0x1        	MOVWF	(_rs232_proto + 5), B
                                           ; removed redundant BANKSEL
                                           ;	.line	750; meter_logger.c	rs232_proto.data >>= 1;
002c22   411f     rrncf   0x1f, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002c24   0b7f     andlw   0x7f             	ANDLW	0x7f
002c26   6e00     movwf   0, 0             	MOVWF	r0x00
002c28   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002c2a   6f1f     movwf   0x1f, 0x1        	MOVWF	(_rs232_proto + 2), B
002c2c   d00e     bra     0x2c4a           	BRA	_00437_DS_
                                           _00436_DS_:
                                           ;	.line	762; meter_logger.c	rs232_proto.calculated_parity ^= 1;
002c2e   0e01     movlw   0x1              	MOVLW	0x01
002c30   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 5)
002c32   1922     xorwf   0x22, 0, 0x1     	XORWF	(_rs232_proto + 5), W, B
002c34   6e00     movwf   0, 0             	MOVWF	r0x00
002c36   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002c38   6f22     movwf   0x22, 0x1        	MOVWF	(_rs232_proto + 5), B
                                           ; removed redundant BANKSEL
                                           ;	.line	763; meter_logger.c	rs232_proto.data >>= 1;
002c3a   411f     rrncf   0x1f, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002c3c   0b7f     andlw   0x7f             	ANDLW	0x7f
002c3e   6e00     movwf   0, 0             	MOVWF	r0x00
002c40   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002c42   6f1f     movwf   0x1f, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	764; meter_logger.c	rs232_proto.data |= 0x40;
002c44   8c00     bsf     0, 0x6, 0        	BSF	r0x00, 6
002c46   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002c48   6f1f     movwf   0x1f, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           _00437_DS_:
                                           ;	.line	784; meter_logger.c	if (rs232_proto.data_len >= 7) {
002c4a   0e07     movlw   0x7              	MOVLW	0x07
002c4c   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002c4e   5d20     subwf   0x20, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002c50   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
002c52   d0c1     bra     0x2dd6           	BRA	_00473_DS_
                                           ;	.line	786; meter_logger.c	rs232_proto.state = PARITY_BIT_WAIT;
002c54   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
002c56   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	788; meter_logger.c	break;
002c58   d0be     bra     0x2dd6           	BRA	_00473_DS_
                                           _00440_DS_:
                                           ;	.line	790; meter_logger.c	rs232_proto.parity = IR_PIN ? 0 : 1;
002c5a   a081     btfss   0x81, 0, 0       	BTFSS	_PORTBbits, 0
002c5c   d002     bra     0x2c62           	BRA	_00496_DS_
002c5e   6a00     clrf    0, 0             	CLRF	r0x00
002c60   d002     bra     0x2c66           	BRA	_00497_DS_
                                           _00496_DS_:
002c62   0e01     movlw   0x1              	MOVLW	0x01
002c64   6e00     movwf   0, 0             	MOVWF	r0x00
                                           _00497_DS_:
002c66   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c68   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 4)
002c6a   6f21     movwf   0x21, 0x1        	MOVWF	(_rs232_proto + 4), B
                                           ;	.line	791; meter_logger.c	rs232_proto.state = STOP_BIT_WAIT;
002c6c   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
002c6e   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	792; meter_logger.c	break;
002c70   d0b2     bra     0x2dd6           	BRA	_00473_DS_
                                           _00441_DS_:
002c72   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 5)
                                           ;	.line	794; meter_logger.c	if (rs232_proto.calculated_parity == rs232_proto.parity) {
002c74   5122     movf    0x22, 0, 0x1     	MOVF	(_rs232_proto + 5), W, B
                                           ; removed redundant BANKSEL
002c76   1921     xorwf   0x21, 0, 0x1     	XORWF	(_rs232_proto + 4), W, B
002c78   e107     bnz     0x2c88           	BNZ	_00443_DS_
                                           _00797_DS_:
002c7a   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	795; meter_logger.c	fifo_put(rs232_proto.data);
002c7c   511f     movf    0x1f, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
002c7e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002c80   ecfd     call    0x43fa, 0        	CALL	_fifo_put
002c82   f021
002c84   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002c86   d006     bra     0x2c94           	BRA	_00444_DS_
                                           _00443_DS_:
002c88   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	800; meter_logger.c	fifo_put(rs232_proto.data);
002c8a   511f     movf    0x1f, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
002c8c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002c8e   ecfd     call    0x43fa, 0        	CALL	_fifo_put
002c90   f021
002c92   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00444_DS_:
002c94   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	802; meter_logger.c	rs232_proto.data = 0;
002c96   6b1f     clrf    0x1f, 0x1        	CLRF	(_rs232_proto + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	803; meter_logger.c	rs232_proto.data_len = 0;
002c98   6b20     clrf    0x20, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	804; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
002c9a   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002c9c   6f1d     movwf   0x1d, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	805; meter_logger.c	T0CONbits.TMR0ON = 0;
002c9e   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	806; meter_logger.c	INTCONbits.INT0IF = 0;		// dont enter ext int now
002ca0   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           ;	.line	807; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int again
002ca2   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	810; meter_logger.c	break;
002ca4   d098     bra     0x2dd6           	BRA	_00473_DS_
                                           _00446_DS_:
                                           ;	.line	812; meter_logger.c	switch (fsk_proto.state) {
002ca6   c500     movff   0x500, 0         	MOVFF	_fsk_proto, r0x00
002ca8   f000
002caa   5000     movf    0, 0, 0          	MOVF	r0x00, W
002cac   0a04     xorlw   0x4              	XORLW	0x04
002cae   e004     bz      0x2cb8           	BZ	_00447_DS_
002cb0   5000     movf    0, 0, 0          	MOVF	r0x00, W
002cb2   0a08     xorlw   0x8              	XORLW	0x08
002cb4   e02f     bz      0x2d14           	BZ	_00455_DS_
002cb6   d08f     bra     0x2dd6           	BRA	_00473_DS_
                                           _00447_DS_:
                                           ;	.line	814; meter_logger.c	fsk_proto.data_len++;						
002cb8   c50d     movff   0x50d, 0         	MOVFF	(_fsk_proto + 13), r0x00
002cba   f000
002cbc   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002cbe   5000     movf    0, 0, 0          	MOVF	r0x00, W
002cc0   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
002cc2   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
                                           ;	.line	815; meter_logger.c	if (fsk_proto.data_len <= 8) {
002cc4   0e09     movlw   0x9              	MOVLW	0x09
002cc6   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002cc8   e221     bc      0x2d0c           	BC	_00453_DS_
                                           ;	.line	816; meter_logger.c	if ((fsk_proto.diff > 340) && (fsk_proto.diff < 476)) {
002cca   c501     movff   0x501, 0         	MOVFF	(_fsk_proto + 1), r0x00
002ccc   f000
002cce   c502     movff   0x502, 0x1       	MOVFF	(_fsk_proto + 2), r0x01
002cd0   f001
002cd2   0e01     movlw   0x1              	MOVLW	0x01
002cd4   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002cd6   e102     bnz     0x2cdc           	BNZ	_00803_DS_
002cd8   0e55     movlw   0x55             	MOVLW	0x55
002cda   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00803_DS_:
002cdc   e30d     bnc     0x2cf8           	BNC	_00449_DS_
002cde   0e01     movlw   0x1              	MOVLW	0x01
002ce0   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002ce2   e102     bnz     0x2ce8           	BNZ	_00804_DS_
002ce4   0edc     movlw   0xdc             	MOVLW	0xdc
002ce6   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00804_DS_:
002ce8   e207     bc      0x2cf8           	BC	_00449_DS_
002cea   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	819; meter_logger.c	fsk_proto.data >>= 1;
002cec   410c     rrncf   0xc, 0, 0x1      	RRNCF	(_fsk_proto + 12), W, B
002cee   0b7f     andlw   0x7f             	ANDLW	0x7f
002cf0   6e00     movwf   0, 0             	MOVWF	r0x00
002cf2   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002cf4   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
002cf6   d06f     bra     0x2dd6           	BRA	_00473_DS_
                                           _00449_DS_:
002cf8   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	824; meter_logger.c	fsk_proto.data >>= 1;
002cfa   410c     rrncf   0xc, 0, 0x1      	RRNCF	(_fsk_proto + 12), W, B
002cfc   0b7f     andlw   0x7f             	ANDLW	0x7f
002cfe   6e00     movwf   0, 0             	MOVWF	r0x00
002d00   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002d02   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
                                           ;	.line	825; meter_logger.c	fsk_proto.data |= 0x80;
002d04   8e00     bsf     0, 0x7, 0        	BSF	r0x00, 7
002d06   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002d08   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
002d0a   d065     bra     0x2dd6           	BRA	_00473_DS_
                                           _00453_DS_:
                                           ;	.line	833; meter_logger.c	fsk_proto.state = STOP_BIT_WAIT;
002d0c   0e08     movlw   0x8              	MOVLW	0x08
002d0e   0105     movlb   0x5              	BANKSEL	_fsk_proto
002d10   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	835; meter_logger.c	break;
002d12   d061     bra     0x2dd6           	BRA	_00473_DS_
                                           _00455_DS_:
002d14   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	838; meter_logger.c	fifo_put(fsk_proto.data);
002d16   510c     movf    0xc, 0, 0x1      	MOVF	(_fsk_proto + 12), W, B
002d18   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002d1a   ecfd     call    0x43fa, 0        	CALL	_fifo_put
002d1c   f021
002d1e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002d20   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	839; meter_logger.c	fsk_proto.data = 0;
002d22   6b0c     clrf    0xc, 0x1         	CLRF	(_fsk_proto + 12), B
                                           ;	.line	840; meter_logger.c	fsk_proto.state = START_BIT_WAIT;
002d24   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002d26   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	842; meter_logger.c	INTCONbits.TMR0IE = 0;						
002d28   9af2     bcf     0xf2, 0x5, 0     	BCF	_INTCONbits, 5
                                           ;	.line	845; meter_logger.c	break;
002d2a   d055     bra     0x2dd6           	BRA	_00473_DS_
                                           _00457_DS_:
                                           ;	.line	847; meter_logger.c	switch (fsk_proto.state) {
002d2c   c500     movff   0x500, 0         	MOVFF	_fsk_proto, r0x00
002d2e   f000
002d30   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d32   6e01     movwf   0x1, 0           	MOVWF	r0x01
002d34   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002d36   e00f     bz      0x2d56           	BZ	_00458_DS_
002d38   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d3a   0a01     xorlw   0x1              	XORLW	0x01
002d3c   e015     bz      0x2d68           	BZ	_00461_DS_
002d3e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d40   0a03     xorlw   0x3              	XORLW	0x03
002d42   e019     bz      0x2d76           	BZ	_00462_DS_
002d44   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d46   0a05     xorlw   0x5              	XORLW	0x05
002d48   e101     bnz     0x2d4c           	BNZ	_00813_DS_
002d4a   d039     bra     0x2dbe           	BRA	_00470_DS_
                                           _00813_DS_:
002d4c   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d4e   0a0a     xorlw   0xa              	XORLW	0x0a
002d50   e101     bnz     0x2d54           	BNZ	_00815_DS_
002d52   d03c     bra     0x2dcc           	BRA	_00471_DS_
                                           _00815_DS_:
002d54   d040     bra     0x2dd6           	BRA	_00473_DS_
                                           _00458_DS_:
002d56   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	850; meter_logger.c	if (fsk_proto.data_len == 8) {
002d58   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002d5a   0a08     xorlw   0x8              	XORLW	0x08
002d5c   e103     bnz     0x2d64           	BNZ	_00460_DS_
                                           ;	.line	851; meter_logger.c	fsk_proto.state = IDLE;
002d5e   0e01     movlw   0x1              	MOVLW	0x01
002d60   0105     movlb   0x5              	BANKSEL	_fsk_proto
002d62   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           _00460_DS_:
                                           ;	.line	854; meter_logger.c	LED_PIN = 0;
002d64   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	856; meter_logger.c	break;
002d66   d037     bra     0x2dd6           	BRA	_00473_DS_
                                           _00461_DS_:
                                           ;	.line	858; meter_logger.c	send_fsk_low();
002d68   ec63     call    0x1ac6, 0        	CALL	_send_fsk_low
002d6a   f00d
                                           ;	.line	859; meter_logger.c	fsk_proto.state = START_BIT_SENT;
002d6c   0e03     movlw   0x3              	MOVLW	0x03
002d6e   0105     movlb   0x5              	BANKSEL	_fsk_proto
002d70   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	861; meter_logger.c	LED_PIN = 1;
002d72   8881     bsf     0x81, 0x4, 0     	BSF	_PORTBbits, 4
                                           ;	.line	863; meter_logger.c	break;
002d74   d030     bra     0x2dd6           	BRA	_00473_DS_
                                           _00462_DS_:
                                           ;	.line	865; meter_logger.c	if (fsk_proto.data_len--) {
002d76   c50d     movff   0x50d, 0         	MOVFF	(_fsk_proto + 13), r0x00
002d78   f000
002d7a   0400     decf    0, 0, 0          	DECF	r0x00, W
002d7c   6e01     movwf   0x1, 0           	MOVWF	r0x01
002d7e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002d80   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
002d82   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
002d84   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d86   e015     bz      0x2db2           	BZ	_00467_DS_
                                           ;	.line	866; meter_logger.c	if (fsk_proto.data & (0x80 >> fsk_proto.data_len)) {
002d88   0e80     movlw   0x80             	MOVLW	0x80
002d8a   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002d8c   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002d8e   e005     bz      0x2d9a           	BZ	_00818_DS_
002d90   6ce8     negf    0xe8, 0          	NEGF	WREG
002d92   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00819_DS_:
002d94   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
002d96   0f01     addlw   0x1              	ADDLW	0x01
002d98   e3fd     bnc     0x2d94           	BNC	_00819_DS_
                                           _00818_DS_:
002d9a   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
002d9c   510c     movf    0xc, 0, 0x1      	MOVF	(_fsk_proto + 12), W, B
002d9e   1600     andwf   0, 0x1, 0        	ANDWF	r0x00, F
002da0   5000     movf    0, 0, 0          	MOVF	r0x00, W
002da2   e004     bz      0x2dac           	BZ	_00464_DS_
                                           ;	.line	867; meter_logger.c	send_fsk_high();
002da4   ec83     call    0xf06, 0         	CALL	_send_fsk_high
002da6   f007
                                           ;	.line	869; meter_logger.c	LED_PIN = 0;
002da8   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
002daa   d003     bra     0x2db2           	BRA	_00467_DS_
                                           _00464_DS_:
                                           ;	.line	873; meter_logger.c	send_fsk_low();
002dac   ec63     call    0x1ac6, 0        	CALL	_send_fsk_low
002dae   f00d
                                           ;	.line	875; meter_logger.c	LED_PIN = 1;
002db0   8881     bsf     0x81, 0x4, 0     	BSF	_PORTBbits, 4
                                           _00467_DS_:
002db2   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	879; meter_logger.c	if (fsk_proto.data_len == 0) {
002db4   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002db6   e10f     bnz     0x2dd6           	BNZ	_00473_DS_
                                           ;	.line	880; meter_logger.c	fsk_proto.state = DATA_SENT;
002db8   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
002dba   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	882; meter_logger.c	break;
002dbc   d00c     bra     0x2dd6           	BRA	_00473_DS_
                                           _00470_DS_:
                                           ;	.line	884; meter_logger.c	send_fsk_high();
002dbe   ec83     call    0xf06, 0         	CALL	_send_fsk_high
002dc0   f007
                                           ;	.line	885; meter_logger.c	fsk_proto.state = STOP_BIT_SENT;
002dc2   0e0a     movlw   0xa              	MOVLW	0x0a
002dc4   0105     movlb   0x5              	BANKSEL	_fsk_proto
002dc6   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	887; meter_logger.c	LED_PIN = 0;
002dc8   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	889; meter_logger.c	break;
002dca   d005     bra     0x2dd6           	BRA	_00473_DS_
                                           _00471_DS_:
                                           ;	.line	891; meter_logger.c	send_fsk_high();
002dcc   ec83     call    0xf06, 0         	CALL	_send_fsk_high
002dce   f007
002dd0   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	892; meter_logger.c	fsk_proto.state = INIT_STATE;
002dd2   6b00     clrf    0, 0x1           	CLRF	_fsk_proto, B
                                           ;	.line	894; meter_logger.c	LED_PIN = 0;
002dd4   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           _00473_DS_:
                                           ;	.line	901; meter_logger.c	INTCONbits.TMR0IF = 0;
002dd6   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           _00475_DS_:
                                           ;	.line	904; meter_logger.c	if (PIR2bits.CMIF && PIE2bits.CMIE) {
002dd8   aca1     btfss   0xa1, 0x6, 0     	BTFSS	_PIR2bits, 6
002dda   d077     bra     0x2eca           	BRA	_00494_DS_
002ddc   aca0     btfss   0xa0, 0x6, 0     	BTFSS	_PIE2bits, 6
002dde   d075     bra     0x2eca           	BRA	_00494_DS_
                                           ;	.line	906; meter_logger.c	if (CMCONbits.C1OUT) {		// rising edge
002de0   acb4     btfss   0xb4, 0x6, 0     	BTFSS	_CMCONbits, 6
002de2   d071     bra     0x2ec6           	BRA	_00489_DS_
                                           ;	.line	907; meter_logger.c	timer_0 = (unsigned int)(TMR0L) | ((unsigned int)(TMR0H) << 8);
002de4   cfd6     movff   0xfd6, 0         	MOVFF	_TMR0L, r0x00
002de6   f000
002de8   6a01     clrf    0x1, 0           	CLRF	r0x01
002dea   cfd7     movff   0xfd7, 0x2       	MOVFF	_TMR0H, r0x02
002dec   f002
002dee   6a03     clrf    0x3, 0           	CLRF	r0x03
002df0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002df2   6e05     movwf   0x5, 0           	MOVWF	r0x05
002df4   6a04     clrf    0x4, 0           	CLRF	r0x04
002df6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002df8   1000     iorwf   0, 0, 0          	IORWF	r0x00, W
002dfa   0105     movlb   0x5              	BANKSEL	_timer_0
002dfc   6f47     movwf   0x47, 0x1        	MOVWF	_timer_0, B
002dfe   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002e00   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
                                           ; removed redundant BANKSEL
002e02   6f48     movwf   0x48, 0x1        	MOVWF	(_timer_0 + 1), B
                                           ;	.line	912; meter_logger.c	LED_PIN = 1;
002e04   8881     bsf     0x81, 0x4, 0     	BSF	_PORTBbits, 4
002e06   0105     movlb   0x5              	BANKSEL	_last_timer_0
                                           ;	.line	914; meter_logger.c	fsk_proto.diff = timer_0 - last_timer_0;
002e08   514b     movf    0x4b, 0, 0x1     	MOVF	_last_timer_0, W, B
002e0a   0105     movlb   0x5              	BANKSEL	_timer_0
002e0c   5d47     subwf   0x47, 0, 0x1     	SUBWF	_timer_0, W, B
002e0e   6e00     movwf   0, 0             	MOVWF	r0x00
002e10   0105     movlb   0x5              	BANKSEL	(_last_timer_0 + 1)
002e12   514c     movf    0x4c, 0, 0x1     	MOVF	(_last_timer_0 + 1), W, B
002e14   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002e16   5948     subwfb  0x48, 0, 0x1     	SUBWFB	(_timer_0 + 1), W, B
002e18   6e01     movwf   0x1, 0           	MOVWF	r0x01
002e1a   5000     movf    0, 0, 0          	MOVF	r0x00, W
002e1c   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
002e1e   6f01     movwf   0x1, 0x1         	MOVWF	(_fsk_proto + 1), B
002e20   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002e22   6f02     movwf   0x2, 0x1         	MOVWF	(_fsk_proto + 2), B
                                           ;	.line	915; meter_logger.c	last_timer_0 = timer_0;
002e24   c547     movff   0x547, 0x54b     	MOVFF	_timer_0, _last_timer_0
002e26   f54b
002e28   c548     movff   0x548, 0x54c     	MOVFF	(_timer_0 + 1), (_last_timer_0 + 1)
002e2a   f54c
                                           ;	.line	917; meter_logger.c	if ((fsk_proto.diff > 340) && (fsk_proto.diff < 476)) {
002e2c   c501     movff   0x501, 0         	MOVFF	(_fsk_proto + 1), r0x00
002e2e   f000
002e30   c502     movff   0x502, 0x1       	MOVFF	(_fsk_proto + 2), r0x01
002e32   f001
002e34   0e01     movlw   0x1              	MOVLW	0x01
002e36   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002e38   e102     bnz     0x2e3e           	BNZ	_00821_DS_
002e3a   0e55     movlw   0x55             	MOVLW	0x55
002e3c   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00821_DS_:
002e3e   e32d     bnc     0x2e9a           	BNC	_00485_DS_
002e40   0e01     movlw   0x1              	MOVLW	0x01
002e42   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002e44   e102     bnz     0x2e4a           	BNZ	_00822_DS_
002e46   0edc     movlw   0xdc             	MOVLW	0xdc
002e48   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00822_DS_:
002e4a   e227     bc      0x2e9a           	BC	_00485_DS_
002e4c   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 5)
                                           ;	.line	918; meter_logger.c	fsk_proto.low_count += fsk_proto.diff;
002e4e   5105     movf    0x5, 0, 0x1      	MOVF	(_fsk_proto + 5), W, B
002e50   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
002e52   5106     movf    0x6, 0, 0x1      	MOVF	(_fsk_proto + 6), W, B
002e54   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
002e56   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002e58   6f05     movwf   0x5, 0x1         	MOVWF	(_fsk_proto + 5), B
002e5a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002e5c   6f06     movwf   0x6, 0x1         	MOVWF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	919; meter_logger.c	if (fsk_proto.state == START_BIT_WAIT) {
002e5e   5100     movf    0, 0, 0x1        	MOVF	_fsk_proto, W, B
002e60   0a02     xorlw   0x2              	XORLW	0x02
002e62   e132     bnz     0x2ec8           	BNZ	_00490_DS_
                                           ;	.line	920; meter_logger.c	if (fsk_proto.low_count >= 800) {								// start bit received
002e64   0e03     movlw   0x3              	MOVLW	0x03
002e66   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 6)
002e68   5d06     subwf   0x6, 0, 0x1      	SUBWF	(_fsk_proto + 6), W, B
002e6a   e102     bnz     0x2e70           	BNZ	_00825_DS_
002e6c   0e20     movlw   0x20             	MOVLW	0x20
                                           ; removed redundant BANKSEL
002e6e   5d05     subwf   0x5, 0, 0x1      	SUBWF	(_fsk_proto + 5), W, B
                                           _00825_DS_:
002e70   e32b     bnc     0x2ec8           	BNC	_00490_DS_
002e72   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	922; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
002e74   514a     movf    0x4a, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
002e76   6e00     movwf   0, 0             	MOVWF	r0x00
002e78   6a01     clrf    0x1, 0           	CLRF	r0x01
002e7a   5000     movf    0, 0, 0          	MOVF	r0x00, W
002e7c   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	923; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
002e7e   5149     movf    0x49, 0, 0x1     	MOVF	_timer0_reload, W, B
002e80   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
002e82   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 5)
                                           ;	.line	924; meter_logger.c	fsk_proto.low_count = 0;
002e84   6b05     clrf    0x5, 0x1         	CLRF	(_fsk_proto + 5), B
                                           ; removed redundant BANKSEL
002e86   6b06     clrf    0x6, 0x1         	CLRF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	925; meter_logger.c	fsk_proto.high_count = 0;
002e88   6b07     clrf    0x7, 0x1         	CLRF	(_fsk_proto + 7), B
                                           ; removed redundant BANKSEL
002e8a   6b08     clrf    0x8, 0x1         	CLRF	(_fsk_proto + 8), B
                                           ; removed redundant BANKSEL
                                           ;	.line	927; meter_logger.c	fsk_proto.data_len = 0;
002e8c   6b0d     clrf    0xd, 0x1         	CLRF	(_fsk_proto + 13), B
                                           ; removed redundant BANKSEL
                                           ;	.line	928; meter_logger.c	fsk_proto.data = 0;
002e8e   6b0c     clrf    0xc, 0x1         	CLRF	(_fsk_proto + 12), B
                                           ;	.line	929; meter_logger.c	fsk_proto.state = DATA_WAIT;
002e90   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
002e92   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	930; meter_logger.c	INTCONbits.TMR0IF = 0;		// clear flag so it dont enter isr now
002e94   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	931; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
002e96   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
002e98   d017     bra     0x2ec8           	BRA	_00490_DS_
                                           _00485_DS_:
002e9a   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	937; meter_logger.c	if (fsk_proto.state == START_BIT_WAIT) {
002e9c   5100     movf    0, 0, 0x1        	MOVF	_fsk_proto, W, B
002e9e   0a02     xorlw   0x2              	XORLW	0x02
002ea0   e106     bnz     0x2eae           	BNZ	_00482_DS_
                                           _00827_DS_:
002ea2   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 5)
                                           ;	.line	938; meter_logger.c	fsk_proto.low_count = 0;
002ea4   6b05     clrf    0x5, 0x1         	CLRF	(_fsk_proto + 5), B
                                           ; removed redundant BANKSEL
002ea6   6b06     clrf    0x6, 0x1         	CLRF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	939; meter_logger.c	fsk_proto.high_count = 0;
002ea8   6b07     clrf    0x7, 0x1         	CLRF	(_fsk_proto + 7), B
                                           ; removed redundant BANKSEL
002eaa   6b08     clrf    0x8, 0x1         	CLRF	(_fsk_proto + 8), B
002eac   d00d     bra     0x2ec8           	BRA	_00490_DS_
                                           _00482_DS_:
002eae   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
                                           ;	.line	942; meter_logger.c	fsk_proto.high_count += fsk_proto.diff;
002eb0   5101     movf    0x1, 0, 0x1      	MOVF	(_fsk_proto + 1), W, B
                                           ; removed redundant BANKSEL
002eb2   2507     addwf   0x7, 0, 0x1      	ADDWF	(_fsk_proto + 7), W, B
002eb4   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002eb6   5102     movf    0x2, 0, 0x1      	MOVF	(_fsk_proto + 2), W, B
                                           ; removed redundant BANKSEL
002eb8   2108     addwfc  0x8, 0, 0x1      	ADDWFC	(_fsk_proto + 8), W, B
002eba   6e01     movwf   0x1, 0           	MOVWF	r0x01
002ebc   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002ebe   6f07     movwf   0x7, 0x1         	MOVWF	(_fsk_proto + 7), B
002ec0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002ec2   6f08     movwf   0x8, 0x1         	MOVWF	(_fsk_proto + 8), B
002ec4   d001     bra     0x2ec8           	BRA	_00490_DS_
                                           _00489_DS_:
                                           ;	.line	948; meter_logger.c	LED_PIN = 0;
002ec6   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           _00490_DS_:
                                           ;	.line	952; meter_logger.c	PIR2bits.CMIF = 0;
002ec8   9ca1     bcf     0xa1, 0x6, 0     	BCF	_PIR2bits, 6
                                           _00494_DS_:
002eca   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002ecc   f005
002ece   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002ed0   f004
002ed2   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002ed4   f003
002ed6   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002ed8   f002
002eda   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002edc   f001
002ede   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002ee0   f000
002ee2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002ee4   ffd9
002ee6   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
002ee8   fffb
002eea   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
002eec   fffa
002eee   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
002ef0   ffea
002ef2   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
002ef4   ffe9
002ef6   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
002ef8   fff4
002efa   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
002efc   fff3
002efe   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002f00   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
002f02   ffe0
002f04   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
002f06   ffd8
002f08   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           ___str_0:
002f0a   7250     btg     0x50, 0x1, 0     	DB	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x3a, 0x20, 0x70
002f0c   636f     cpfseq  0x6f, 0x1        
002f0e   7365     btg     0x65, 0x1, 0x1   
002f10   6f73     movwf   0x73, 0x1        
002f12   3a72     swapf   0x72, 0x1, 0     
002f14   7020     btg     0x20, 0, 0       
002f16   6369     cpfseq  0x69, 0x1        	DB	0x69, 0x63, 0x31, 0x38, 0x66, 0x32, 0x35, 0x35, 0x30, 0x0a, 0x0d, 0x00
002f18   3831     swapf   0x31, 0, 0       
002f1a   3266     rrcf    0x66, 0x1, 0     
002f1c   3535     rlcf    0x35, 0, 0x1     
002f1e   0a30     xorlw   0x30             
002f20   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_1:
002f22   7250     btg     0x50, 0x1, 0     	DB	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x3a, 0x20, 0x70
002f24   636f     cpfseq  0x6f, 0x1        
002f26   7365     btg     0x65, 0x1, 0x1   
002f28   6f73     movwf   0x73, 0x1        
002f2a   3a72     swapf   0x72, 0x1, 0     
002f2c   7020     btg     0x20, 0, 0       
002f2e   6369     cpfseq  0x69, 0x1        	DB	0x69, 0x63, 0x31, 0x38, 0x66, 0x32, 0x35, 0x35, 0x33, 0x0a, 0x0d, 0x00
002f30   3831     swapf   0x31, 0, 0       
002f32   3266     rrcf    0x66, 0x1, 0     
002f34   3535     rlcf    0x35, 0, 0x1     
002f36   0a33     xorlw   0x33             
002f38   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_2:
002f3a   7250     btg     0x50, 0x1, 0     	DB	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x3a, 0x20, 0x75
002f3c   636f     cpfseq  0x6f, 0x1        
002f3e   7365     btg     0x65, 0x1, 0x1   
002f40   6f73     movwf   0x73, 0x1        
002f42   3a72     swapf   0x72, 0x1, 0     
002f44   7520     btg     0x20, 0x2, 0x1   
002f46   736e     btg     0x6e, 0x1, 0x1   	DB	0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x2c, 0x20
002f48   7075     btg     0x75, 0, 0       
002f4a   6f70     movwf   0x70, 0x1        
002f4c   7472     btg     0x72, 0x2, 0     
002f4e   6465     cpfsgt  0x65, 0          
002f50   202c     addwfc  0x2c, 0, 0       
002f52   6564     cpfsgt  0x64, 0x1        	DB	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x69, 0x64, 0x3a, 0x20, 0x30
002f54   6976     setf    0x76, 0x1        
002f56   6563     cpfsgt  0x63, 0x1        
002f58   6920     setf    0x20, 0x1        
002f5a   3a64     swapf   0x64, 0x1, 0     
002f5c   3020     rrcf    0x20, 0, 0       
002f5e   2578     addwf   0x78, 0, 0x1     	DB	0x78, 0x25, 0x30, 0x34, 0x78, 0x0a, 0x0d, 0x00
002f60   3430     rlcf    0x30, 0, 0       
002f62   0a78     xorlw   0x78             
002f64   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_3:
002f66   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x70, 0x72, 0x69, 0x6e
002f68   7270     btg     0x70, 0x1, 0     
002f6a   7365     btg     0x65, 0x1, 0x1   
002f6c   2073     addwfc  0x73, 0, 0       
002f6e   7270     btg     0x70, 0x1, 0     
002f70   6e69     movwf   0x69, 0          
002f72   2074     addwfc  0x74, 0, 0       	DB	0x74, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x0a, 0x0d
002f74   6e6f     movwf   0x6f, 0          
002f76   7420     btg     0x20, 0x2, 0     
002f78   7365     btg     0x65, 0x1, 0x1   
002f7a   6f74     movwf   0x74, 0x1        
002f7c   0d0a     mullw   0xa              
002f7e   0000     nop                      	DB	0x00
                                           ; ; Starting pCode block
                                           ___str_4:
002f80   2d3c     decfsz  0x3c, 0, 0x1     	DB	0x3c, 0x2d, 0x20, 0x00
002f82   0020     dw      0x20             
                                           ; ; Starting pCode block
                                           ___str_5:
002f84   6425     cpfsgt  0x25, 0          	DB	0x25, 0x64, 0x20, 0x00
002f86   0020     dw      0x20             
                                           ; ; Starting pCode block
                                           ___str_6:
002f88   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x00
002f8a   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_7:
002f8c   3e2d     incfsz  0x2d, 0x1, 0     	DB	0x2d, 0x3e, 0x20, 0x00
002f8e   0020     dw      0x20             
                                           ; ; Starting pCode block
                                           ___str_8:
002f90   6142     cpfslt  0x42, 0x1        	DB	0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x3a, 0x20, 0x25, 0x64, 0x6d
002f92   7474     btg     0x74, 0x2, 0     
002f94   7265     btg     0x65, 0x1, 0     
002f96   3a79     swapf   0x79, 0x1, 0     
002f98   2520     addwf   0x20, 0, 0x1     
002f9a   6d64     negf    0x64, 0x1        
002f9c   0a56     xorlw   0x56             	DB	0x56, 0x0a, 0x0d, 0x00
002f9e   000d     tblwt   *+               
                                           
                                           
                                           ; Statistics:
                                           ; code size:	16228 (0x3f64) bytes (12.38%)
                                           ;           	 8114 (0x1fb2) words
                                           ; udata size:	 1199 (0x04af) bytes (66.91%)
                                           ; access size:	   14 (0x000e) bytes
                                           
                                           
                                           	end
