gplink-1.2.0 #980 (Jul 31 2013)
Copyright (c) 1998-2013 gputils project
Listing File Generated: 6-13-2014  21:55:35
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.4.0 #8981 (Jun  6 2014) (Mac OS X x86_64)
                                           ; This file was generated Fri Jun 13 21:55:35 2014
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f2550
                                           	radix	dec
                                           	CONFIG	PLLDIV=2
                                           	CONFIG	CPUDIV=OSC1_PLL2
                                           	CONFIG	USBDIV=1
                                           	CONFIG	FOSC=INTOSC_XT
                                           	CONFIG	FCMEN=OFF
                                           	CONFIG	IESO=OFF
                                           	CONFIG	PWRT=OFF
                                           	CONFIG	BOR=OFF
                                           	CONFIG	BORV=3
                                           	CONFIG	VREGEN=OFF
                                           	CONFIG	WDT=OFF
                                           	CONFIG	WDTPS=32768
                                           	CONFIG	CCP2MX=ON
                                           	CONFIG	PBADEN=OFF
                                           	CONFIG	LPT1OSC=OFF
                                           	CONFIG	MCLRE=ON
                                           	CONFIG	STVREN=ON
                                           	CONFIG	LVP=ON
                                           	CONFIG	XINST=OFF
                                           	CONFIG	CP0=OFF
                                           	CONFIG	CP1=OFF
                                           	CONFIG	CP2=OFF
                                           	CONFIG	CP3=OFF
                                           	CONFIG	CPB=OFF
                                           	CONFIG	CPD=OFF
                                           	CONFIG	WRT0=OFF
                                           	CONFIG	WRT1=OFF
                                           	CONFIG	WRT2=OFF
                                           	CONFIG	WRT3=OFF
                                           	CONFIG	WRTC=OFF
                                           	CONFIG	WRTB=OFF
                                           	CONFIG	WRTD=OFF
                                           	CONFIG	EBTR0=OFF
                                           	CONFIG	EBTR1=OFF
                                           	CONFIG	EBTR2=OFF
                                           	CONFIG	EBTR3=OFF
                                           	CONFIG	EBTRB=OFF
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_c
                                           	global	_sleep_ms
                                           	global	_init_system
                                           	global	_my_usart_open
                                           	global	_reverse
                                           	global	_testo_valid_err_corr
                                           	global	_testo_ir_enable
                                           	global	_testo_ir_disable
                                           	global	_rs232_tx_enable
                                           	global	_rs232_tx_disable
                                           	global	_rs232_rx_enable
                                           	global	_rs232_rx_disable
                                           	global	_rs232_tx_byte
                                           	global	_fsk_tx_enable
                                           	global	_fsk_tx_disable
                                           	global	_fsk_rx_enable
                                           	global	_fsk_rx_disable
                                           	global	_send_fsk_high
                                           	global	_send_fsk_low
                                           	global	_fsk_tx_byte
                                           	global	_fifo_in_use
                                           	global	_fifo_put
                                           	global	_fifo_get
                                           	global	_fifo_snoop
                                           	global	_battery_level
                                           	global	_flash_led
                                           	global	__debug
                                           	global	__debug2
                                           	global	_timer_0
                                           	global	_last_timer_0
                                           	global	_timer_1_ms
                                           	global	_timer0_reload
                                           	global	_debug_buffer
                                           	global	_fifo_head
                                           	global	_fifo_tail
                                           	global	_fifo_buffer_0
                                           	global	_fifo_buffer_1
                                           	global	_fifo_buffer_2
                                           	global	_fifo_buffer_3
                                           	global	_codec_type
                                           	global	_led_flash
                                           	global	_testo_ir_proto
                                           	global	_rs232_proto
                                           	global	_fsk_proto
                                           	global	_main
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrput1
                                           	extern	_UFRMLbits
                                           	extern	_UFRMHbits
                                           	extern	_UIRbits
                                           	extern	_UIEbits
                                           	extern	_UEIRbits
                                           	extern	_UEIEbits
                                           	extern	_USTATbits
                                           	extern	_UCONbits
                                           	extern	_UADDRbits
                                           	extern	_UCFGbits
                                           	extern	_UEP0bits
                                           	extern	_UEP1bits
                                           	extern	_UEP2bits
                                           	extern	_UEP3bits
                                           	extern	_UEP4bits
                                           	extern	_UEP5bits
                                           	extern	_UEP6bits
                                           	extern	_UEP7bits
                                           	extern	_UEP8bits
                                           	extern	_UEP9bits
                                           	extern	_UEP10bits
                                           	extern	_UEP11bits
                                           	extern	_UEP12bits
                                           	extern	_UEP13bits
                                           	extern	_UEP14bits
                                           	extern	_UEP15bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_EECON1bits
                                           	extern	_RCSTAbits
                                           	extern	_TXSTAbits
                                           	extern	_T3CONbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_CCP1ASbits
                                           	extern	_ECCP1ASbits
                                           	extern	_CCP1DELbits
                                           	extern	_ECCP1DELbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCTLbits
                                           	extern	_CCP2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_UFRM
                                           	extern	_UFRML
                                           	extern	_UFRMH
                                           	extern	_UIR
                                           	extern	_UIE
                                           	extern	_UEIR
                                           	extern	_UEIE
                                           	extern	_USTAT
                                           	extern	_UCON
                                           	extern	_UADDR
                                           	extern	_UCFG
                                           	extern	_UEP0
                                           	extern	_UEP1
                                           	extern	_UEP2
                                           	extern	_UEP3
                                           	extern	_UEP4
                                           	extern	_UEP5
                                           	extern	_UEP6
                                           	extern	_UEP7
                                           	extern	_UEP8
                                           	extern	_UEP9
                                           	extern	_UEP10
                                           	extern	_UEP11
                                           	extern	_UEP12
                                           	extern	_UEP13
                                           	extern	_UEP14
                                           	extern	_UEP15
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_OSCTUNE
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_RCSTA
                                           	extern	_TXSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_CCP1AS
                                           	extern	_ECCP1AS
                                           	extern	_CCP1DEL
                                           	extern	_ECCP1DEL
                                           	extern	_BAUDCON
                                           	extern	_BAUDCTL
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_sprintf
                                           	extern	_usart_drdy
                                           	extern	_usart_getc
                                           	extern	_usart_putc
                                           	extern	_usart_puts
                                           	extern	_adc_open
                                           	extern	_adc_close
                                           	extern	_adc_conv
                                           	extern	_adc_busy
                                           	extern	_adc_read
                                           	extern	_adc_setchannel
                                           	extern	__mullong
                                           	extern	__divulong
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           r0x0d	res	1
                                           
                                           udata_meter_logger_0	udata
                                           _c	res	1
                                           
                                           udata_meter_logger_1	udata
                                           _timer_1_ms	res	2
                                           
                                           udata_meter_logger_2	udata
                                           _fifo_head	res	2
                                           
                                           udata_meter_logger_3	udata
                                           _fifo_tail	res	2
                                           
                                           udata_meter_logger_4	udata
                                           _main_cmd_1_85	res	1
                                           
                                           udata_meter_logger_5	udata
                                           _debug_buffer	res	128
                                           
                                           udata_meter_logger_6	udata
                                           _main_sub_cmd_1_85	res	1
                                           
                                           udata_meter_logger_7	udata
                                           _timer_0	res	2
                                           
                                           udata_meter_logger_8	udata
                                           _timer0_reload	res	2
                                           
                                           udata_meter_logger_9	udata
                                           _testo_ir_proto	res	6
                                           
                                           udata_meter_logger_10	udata
                                           _rs232_proto	res	6
                                           
                                           udata_meter_logger_11	udata
                                           _fsk_proto	res	16
                                           
                                           udata_meter_logger_12	udata
                                           _last_timer_0	res	2
                                           
                                           udata_meter_logger_13	udata
                                           _codec_type	res	1
                                           
                                           udata_meter_logger_14	udata
                                           _led_flash	res	2
                                           
                                           udata_meter_logger_15	udata
                                           _fifo_buffer_0	res	256
                                           
                                           udata_meter_logger_16	udata
                                           _fifo_buffer_1	res	256
                                           
                                           udata_meter_logger_17	udata
                                           _fifo_buffer_2	res	256
                                           
                                           udata_meter_logger_18	udata
                                           _fifo_buffer_3	res	256
                                           
                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_meter_logger_ivec_0x1_isr_high_prio	code	0X000008
                                           ivec_0x1_isr_high_prio:
000008   efbf     goto    0x277e           	GOTO	_isr_high_prio
00000a   f013
                                           
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_meter_logger_ivec_0x2_isr_low_prio	code	0X000018
                                           ivec_0x2_isr_low_prio:
000018   efcb     goto    0x4196           	GOTO	_isr_low_prio
00001a   f020
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_meter_logger__main	code
                                           _main:
                                           ;	.line	111; meter_logger.c	OSCCONbits.SCS = 0x10;
001722   50d3     movf    0xd3, 0, 0       	MOVF	_OSCCONbits, W
001724   0bfc     andlw   0xfc             	ANDLW	0xfc
001726   6ed3     movwf   0xd3, 0          	MOVWF	_OSCCONbits
                                           ;	.line	113; meter_logger.c	OSCCONbits.IRCF = 0x7;	// 8 MHz
001728   50d3     movf    0xd3, 0, 0       	MOVF	_OSCCONbits, W
00172a   0b8f     andlw   0x8f             	ANDLW	0x8f
00172c   0970     iorlw   0x70             	IORLW	0x70
00172e   6ed3     movwf   0xd3, 0          	MOVWF	_OSCCONbits
001730   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	116; meter_logger.c	timer_1_ms = 0;
001732   6b40     clrf    0x40, 0x1        	CLRF	_timer_1_ms, B
                                           ; removed redundant BANKSEL
001734   6b41     clrf    0x41, 0x1        	CLRF	(_timer_1_ms + 1), B
001736   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	118; meter_logger.c	fifo_head = 0;
001738   6b42     clrf    0x42, 0x1        	CLRF	_fifo_head, B
                                           ; removed redundant BANKSEL
00173a   6b43     clrf    0x43, 0x1        	CLRF	(_fifo_head + 1), B
00173c   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	119; meter_logger.c	fifo_tail = 0;
00173e   6b44     clrf    0x44, 0x1        	CLRF	_fifo_tail, B
                                           ; removed redundant BANKSEL
001740   6b45     clrf    0x45, 0x1        	CLRF	(_fifo_tail + 1), B
                                           ;	.line	121; meter_logger.c	init_system();	
001742   ec6e     call    0x44dc, 0        	CALL	_init_system
001744   f022
                                           ;	.line	122; meter_logger.c	sleep_ms(100);
001746   0e00     movlw   0                	MOVLW	0x00
001748   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00174a   0e64     movlw   0x64             	MOVLW	0x64
00174c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00174e   ec2d     call    0x425a, 0        	CALL	_sleep_ms
001750   f021
001752   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001754   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	125; meter_logger.c	usart_puts("\n\rMeterLogger... serial working\n\r");
001756   0e00     movlw   0                	MOVLW	UPPER(___str_0)
001758   6e02     movwf   0x2, 0           	MOVWF	r0x02
00175a   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_0)
00175c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00175e   0e20     movlw   0x20             	MOVLW	LOW(___str_0)
001760   6e00     movwf   0, 0             	MOVWF	r0x00
001762   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
001764   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001766   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
001768   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00176a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00176c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00176e   ec04     call    0x4408, 0        	CALL	_usart_puts
001770   f022
001772   0e03     movlw   0x3              	MOVLW	0x03
001774   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	129; meter_logger.c	battery_level();
001776   ec23     call    0x3846, 0        	CALL	_battery_level
001778   f01c
                                           ;	.line	132; meter_logger.c	fsk_rx_enable();
00177a   ec40     call    0x4480, 0        	CALL	_fsk_rx_enable
00177c   f022
                                           _00144_DS_:
                                           ;	.line	134; meter_logger.c	if (fifo_get(&cmd)) {
00177e   0e05     movlw   0x5              	MOVLW	HIGH(_main_cmd_1_85)
001780   6e01     movwf   0x1, 0           	MOVWF	r0x01
001782   0e4f     movlw   0x4f             	MOVLW	LOW(_main_cmd_1_85)
001784   6e00     movwf   0, 0             	MOVWF	r0x00
001786   0e80     movlw   0x80             	MOVLW	0x80
001788   6e02     movwf   0x2, 0           	MOVWF	r0x02
00178a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00178c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00178e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
001790   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001792   5000     movf    0, 0, 0          	MOVF	r0x00, W
001794   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001796   ec64     call    0x36c8, 0        	CALL	_fifo_get
001798   f01b
00179a   6e00     movwf   0, 0             	MOVWF	r0x00
00179c   0e03     movlw   0x3              	MOVLW	0x03
00179e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0017a0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0017a2   e0ed     bz      0x177e           	BZ	_00144_DS_
                                           ;	.line	135; meter_logger.c	switch (cmd) {
0017a4   0efc     movlw   0xfc             	MOVLW	0xfc
0017a6   0105     movlb   0x5              	BANKSEL	_main_cmd_1_85
0017a8   5d4f     subwf   0x4f, 0, 0x1     	SUBWF	_main_cmd_1_85, W, B
0017aa   e3e9     bnc     0x177e           	BNC	_00144_DS_
0017ac   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
0017ae   254f     addwf   0x4f, 0, 0x1     	ADDWF	_main_cmd_1_85, W, B
0017b0   6e00     movwf   0, 0             	MOVWF	r0x00
0017b2   6afa     clrf    0xfa, 0          	CLRF	PCLATH
0017b4   6afb     clrf    0xfb, 0          	CLRF	PCLATU
0017b6   3400     rlcf    0, 0, 0          	RLCF	r0x00, W
0017b8   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0017ba   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
0017bc   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0017be   0bfc     andlw   0xfc             	ANDLW	0xfc
0017c0   0fd0     addlw   0xd0             	ADDLW	LOW(_00249_DS_)
0017c2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0017c4   0e17     movlw   0x17             	MOVLW	HIGH(_00249_DS_)
0017c6   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
0017c8   0e00     movlw   0                	MOVLW	UPPER(_00249_DS_)
0017ca   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0017cc   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0017ce   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00249_DS_:
0017d0   efb0     goto    0x1f60           	GOTO	_00139_DS_
0017d2   f00f
0017d4   efb0     goto    0x1b60           	GOTO	_00121_DS_
0017d6   f00d
0017d8   eff0     goto    0x17e0           	GOTO	_00105_DS_
0017da   f00b
0017dc   efd8     goto    0x19b0           	GOTO	_00113_DS_
0017de   f00c
                                           _00105_DS_:
                                           ;	.line	137; meter_logger.c	fsk_rx_disable();
0017e0   ecce     call    0x499c, 0        	CALL	_fsk_rx_disable
0017e2   f024
                                           ;	.line	138; meter_logger.c	usart_puts("\n\rpress print on testo\n\r");
0017e4   0e00     movlw   0                	MOVLW	UPPER(___str_1)
0017e6   6e02     movwf   0x2, 0           	MOVWF	r0x02
0017e8   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_1)
0017ea   6e01     movwf   0x1, 0           	MOVWF	r0x01
0017ec   0e42     movlw   0x42             	MOVLW	LOW(___str_1)
0017ee   6e00     movwf   0, 0             	MOVWF	r0x00
0017f0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0017f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0017f4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0017f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0017f8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0017fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0017fc   ec04     call    0x4408, 0        	CALL	_usart_puts
0017fe   f022
001800   0e03     movlw   0x3              	MOVLW	0x03
001802   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	139; meter_logger.c	testo_ir_enable();
001804   ecf6     call    0x45ec, 0        	CALL	_testo_ir_enable
001806   f022
                                           ;	.line	141; meter_logger.c	last_fifo_size = 0;
001808   6a00     clrf    0, 0             	CLRF	r0x00
00180a   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	142; meter_logger.c	sleep_ms(10000);						// 10 seconds to start printing
00180c   0e27     movlw   0x27             	MOVLW	0x27
00180e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001810   0e10     movlw   0x10             	MOVLW	0x10
001812   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001814   ec2d     call    0x425a, 0        	CALL	_sleep_ms
001816   f021
001818   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00181a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	143; meter_logger.c	fifo_size = fifo_in_use();
00181c   ec31     call    0x4662, 0        	CALL	_fifo_in_use
00181e   f023
001820   6e02     movwf   0x2, 0           	MOVWF	r0x02
001822   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
001824   f003
                                           _00106_DS_:
                                           ;	.line	144; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
001826   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001828   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00182a   e102     bnz     0x1830           	BNZ	_00250_DS_
00182c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00182e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00250_DS_:
001830   e212     bc      0x1856           	BC	_00108_DS_
                                           ;	.line	145; meter_logger.c	last_fifo_size = fifo_size;
001832   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
001834   f000
001836   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
001838   f001
                                           ;	.line	146; meter_logger.c	sleep_ms(200);						// return data when no data for 200 ms
00183a   0e00     movlw   0                	MOVLW	0x00
00183c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00183e   0ec8     movlw   0xc8             	MOVLW	0xc8
001840   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001842   ec2d     call    0x425a, 0        	CALL	_sleep_ms
001844   f021
001846   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001848   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	147; meter_logger.c	fifo_size = fifo_in_use();
00184a   ec31     call    0x4662, 0        	CALL	_fifo_in_use
00184c   f023
00184e   6e02     movwf   0x2, 0           	MOVWF	r0x02
001850   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
001852   f003
001854   d7e8     bra     0x1826           	BRA	_00106_DS_
                                           _00108_DS_:
                                           ;	.line	149; meter_logger.c	testo_ir_disable();
001856   ecd8     call    0x49b0, 0        	CALL	_testo_ir_disable
001858   f024
                                           ;	.line	152; meter_logger.c	usart_puts("\n\rdone receiving - sending via serial/fsk\n\r");
00185a   0e00     movlw   0                	MOVLW	UPPER(___str_2)
00185c   6e06     movwf   0x6, 0           	MOVWF	r0x06
00185e   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_2)
001860   6e05     movwf   0x5, 0           	MOVWF	r0x05
001862   0e5c     movlw   0x5c             	MOVLW	LOW(___str_2)
001864   6e04     movwf   0x4, 0           	MOVWF	r0x04
001866   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
001868   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00186a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00186c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00186e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001870   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001872   ec04     call    0x4408, 0        	CALL	_usart_puts
001874   f022
001876   0e03     movlw   0x3              	MOVLW	0x03
001878   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	155; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
00187a   6a04     clrf    0x4, 0           	CLRF	r0x04
00187c   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00147_DS_:
00187e   ec31     call    0x4662, 0        	CALL	_fifo_in_use
001880   f023
001882   6e06     movwf   0x6, 0           	MOVWF	r0x06
001884   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
001886   f007
001888   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00188a   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
00188c   e102     bnz     0x1892           	BNZ	_00251_DS_
00188e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
001890   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00251_DS_:
001892   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
001894   d04c     bra     0x192e           	BRA	_00109_DS_
                                           ;	.line	157; meter_logger.c	fifo_get(&sub_cmd);
001896   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_85)
001898   6e07     movwf   0x7, 0           	MOVWF	r0x07
00189a   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_85)
00189c   6e06     movwf   0x6, 0           	MOVWF	r0x06
00189e   0e80     movlw   0x80             	MOVLW	0x80
0018a0   6e08     movwf   0x8, 0           	MOVWF	r0x08
0018a2   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0018a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0018a6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0018a8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0018aa   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0018ac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0018ae   ec64     call    0x36c8, 0        	CALL	_fifo_get
0018b0   f01b
0018b2   0e03     movlw   0x3              	MOVLW	0x03
0018b4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	159; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
0018b6   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_85, r0x06
0018b8   f006
0018ba   6a07     clrf    0x7, 0           	CLRF	r0x07
0018bc   0e00     movlw   0                	MOVLW	UPPER(___str_3)
0018be   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0018c0   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_3)
0018c2   6e09     movwf   0x9, 0           	MOVWF	r0x09
0018c4   0e88     movlw   0x88             	MOVLW	LOW(___str_3)
0018c6   6e08     movwf   0x8, 0           	MOVWF	r0x08
0018c8   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0018ca   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
0018cc   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0018ce   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0018d0   0e80     movlw   0x80             	MOVLW	0x80
0018d2   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
0018d4   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0018d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0018d8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0018da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0018dc   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
0018de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0018e0   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0018e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0018e4   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0018e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0018e8   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
0018ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0018ec   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
0018ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0018f0   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
0018f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0018f4   ec8f     call    0x3d1e, 0        	CALL	_sprintf
0018f6   f01e
0018f8   0e08     movlw   0x8              	MOVLW	0x08
0018fa   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	160; meter_logger.c	usart_puts(debug_buffer);
0018fc   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0018fe   6e07     movwf   0x7, 0           	MOVWF	r0x07
001900   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
001902   6e06     movwf   0x6, 0           	MOVWF	r0x06
001904   0e80     movlw   0x80             	MOVLW	0x80
001906   6e08     movwf   0x8, 0           	MOVWF	r0x08
001908   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00190a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00190c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00190e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001910   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
001912   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001914   ec04     call    0x4408, 0        	CALL	_usart_puts
001916   f022
001918   0e03     movlw   0x3              	MOVLW	0x03
00191a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00191c   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_85
                                           ;	.line	162; meter_logger.c	fifo_put(sub_cmd);
00191e   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_85, W, B
001920   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001922   ec74     call    0x3ae8, 0        	CALL	_fifo_put
001924   f01d
001926   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	155; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
001928   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
00192a   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
00192c   d7a8     bra     0x187e           	BRA	_00147_DS_
                                           _00109_DS_:
                                           ;	.line	165; meter_logger.c	fsk_tx_enable();
00192e   ec68     call    0x46d0, 0        	CALL	_fsk_tx_enable
001930   f023
                                           ;	.line	166; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
001932   0e00     movlw   0                	MOVLW	0x00
001934   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001936   0e0c     movlw   0xc              	MOVLW	0x0c
001938   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00193a   ec2d     call    0x425a, 0        	CALL	_sleep_ms
00193c   f021
00193e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001940   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00110_DS_:
                                           ;	.line	167; meter_logger.c	while (fifo_get(&cmd)) {	// and print them to serial
001942   0e05     movlw   0x5              	MOVLW	HIGH(_main_cmd_1_85)
001944   6e05     movwf   0x5, 0           	MOVWF	r0x05
001946   0e4f     movlw   0x4f             	MOVLW	LOW(_main_cmd_1_85)
001948   6e04     movwf   0x4, 0           	MOVWF	r0x04
00194a   0e80     movlw   0x80             	MOVLW	0x80
00194c   6e06     movwf   0x6, 0           	MOVWF	r0x06
00194e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
001950   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001952   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
001954   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001956   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001958   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00195a   ec64     call    0x36c8, 0        	CALL	_fifo_get
00195c   f01b
00195e   6e04     movwf   0x4, 0           	MOVWF	r0x04
001960   0e03     movlw   0x3              	MOVLW	0x03
001962   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001964   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001966   e00f     bz      0x1986           	BZ	_00112_DS_
001968   0105     movlb   0x5              	BANKSEL	_main_cmd_1_85
                                           ;	.line	168; meter_logger.c	fsk_tx_byte(cmd);
00196a   514f     movf    0x4f, 0, 0x1     	MOVF	_main_cmd_1_85, W, B
00196c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00196e   ec31     call    0x4862, 0        	CALL	_fsk_tx_byte
001970   f024
001972   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	169; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
001974   0e00     movlw   0                	MOVLW	0x00
001976   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001978   0e0c     movlw   0xc              	MOVLW	0x0c
00197a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00197c   ec2d     call    0x425a, 0        	CALL	_sleep_ms
00197e   f021
001980   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001982   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001984   d7de     bra     0x1942           	BRA	_00110_DS_
                                           _00112_DS_:
                                           ;	.line	171; meter_logger.c	fsk_tx_disable();
001986   eca2     call    0x4944, 0        	CALL	_fsk_tx_disable
001988   f024
                                           ;	.line	173; meter_logger.c	usart_puts("\n\rwaiting for new command\n\r");
00198a   0e00     movlw   0                	MOVLW	UPPER(___str_4)
00198c   6e06     movwf   0x6, 0           	MOVWF	r0x06
00198e   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_4)
001990   6e05     movwf   0x5, 0           	MOVWF	r0x05
001992   0e8c     movlw   0x8c             	MOVLW	LOW(___str_4)
001994   6e04     movwf   0x4, 0           	MOVWF	r0x04
001996   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
001998   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00199a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00199c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00199e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0019a0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0019a2   ec04     call    0x4408, 0        	CALL	_usart_puts
0019a4   f022
0019a6   0e03     movlw   0x3              	MOVLW	0x03
0019a8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	175; meter_logger.c	fsk_rx_enable();
0019aa   ec40     call    0x4480, 0        	CALL	_fsk_rx_enable
0019ac   f022
                                           ;	.line	176; meter_logger.c	break;
0019ae   d6e7     bra     0x177e           	BRA	_00144_DS_
                                           _00113_DS_:
                                           ;	.line	180; meter_logger.c	fsk_rx_disable();
0019b0   ecce     call    0x499c, 0        	CALL	_fsk_rx_disable
0019b2   f024
                                           ;	.line	181; meter_logger.c	usart_puts("\n\recho test - send some data\n\r");
0019b4   0e00     movlw   0                	MOVLW	UPPER(___str_5)
0019b6   6e06     movwf   0x6, 0           	MOVWF	r0x06
0019b8   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_5)
0019ba   6e05     movwf   0x5, 0           	MOVWF	r0x05
0019bc   0ea8     movlw   0xa8             	MOVLW	LOW(___str_5)
0019be   6e04     movwf   0x4, 0           	MOVWF	r0x04
0019c0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0019c2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0019c4   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0019c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0019c8   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0019ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0019cc   ec04     call    0x4408, 0        	CALL	_usart_puts
0019ce   f022
0019d0   0e03     movlw   0x3              	MOVLW	0x03
0019d2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	182; meter_logger.c	fsk_rx_enable();
0019d4   ec40     call    0x4480, 0        	CALL	_fsk_rx_enable
0019d6   f022
                                           ;	.line	186; meter_logger.c	last_fifo_size = 0;
0019d8   6a00     clrf    0, 0             	CLRF	r0x00
0019da   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	187; meter_logger.c	sleep_ms(1000);							// 1 second
0019dc   0e03     movlw   0x3              	MOVLW	0x03
0019de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0019e0   0ee8     movlw   0xe8             	MOVLW	0xe8
0019e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0019e4   ec2d     call    0x425a, 0        	CALL	_sleep_ms
0019e6   f021
0019e8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0019ea   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	188; meter_logger.c	fifo_size = fifo_in_use();
0019ec   ec31     call    0x4662, 0        	CALL	_fifo_in_use
0019ee   f023
0019f0   6e02     movwf   0x2, 0           	MOVWF	r0x02
0019f2   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0019f4   f003
                                           _00114_DS_:
                                           ;	.line	189; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
0019f6   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0019f8   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0019fa   e102     bnz     0x1a00           	BNZ	_00252_DS_
0019fc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0019fe   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00252_DS_:
001a00   e212     bc      0x1a26           	BC	_00116_DS_
                                           ;	.line	190; meter_logger.c	last_fifo_size = fifo_size;
001a02   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
001a04   f000
001a06   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
001a08   f001
                                           ;	.line	191; meter_logger.c	sleep_ms(500);						// return data when no data for 500 ms
001a0a   0e01     movlw   0x1              	MOVLW	0x01
001a0c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001a0e   0ef4     movlw   0xf4             	MOVLW	0xf4
001a10   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001a12   ec2d     call    0x425a, 0        	CALL	_sleep_ms
001a14   f021
001a16   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001a18   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	192; meter_logger.c	fifo_size = fifo_in_use();
001a1a   ec31     call    0x4662, 0        	CALL	_fifo_in_use
001a1c   f023
001a1e   6e02     movwf   0x2, 0           	MOVWF	r0x02
001a20   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
001a22   f003
001a24   d7e8     bra     0x19f6           	BRA	_00114_DS_
                                           _00116_DS_:
                                           ;	.line	194; meter_logger.c	fsk_rx_disable();
001a26   ecce     call    0x499c, 0        	CALL	_fsk_rx_disable
001a28   f024
                                           ;	.line	197; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
001a2a   6a04     clrf    0x4, 0           	CLRF	r0x04
001a2c   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00150_DS_:
001a2e   ec31     call    0x4662, 0        	CALL	_fifo_in_use
001a30   f023
001a32   6e06     movwf   0x6, 0           	MOVWF	r0x06
001a34   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
001a36   f007
001a38   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
001a3a   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
001a3c   e102     bnz     0x1a42           	BNZ	_00253_DS_
001a3e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
001a40   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00253_DS_:
001a42   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
001a44   d04c     bra     0x1ade           	BRA	_00117_DS_
                                           ;	.line	199; meter_logger.c	fifo_get(&sub_cmd);
001a46   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_85)
001a48   6e07     movwf   0x7, 0           	MOVWF	r0x07
001a4a   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_85)
001a4c   6e06     movwf   0x6, 0           	MOVWF	r0x06
001a4e   0e80     movlw   0x80             	MOVLW	0x80
001a50   6e08     movwf   0x8, 0           	MOVWF	r0x08
001a52   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
001a54   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001a56   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
001a58   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001a5a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
001a5c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001a5e   ec64     call    0x36c8, 0        	CALL	_fifo_get
001a60   f01b
001a62   0e03     movlw   0x3              	MOVLW	0x03
001a64   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	201; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
001a66   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_85, r0x06
001a68   f006
001a6a   6a07     clrf    0x7, 0           	CLRF	r0x07
001a6c   0e00     movlw   0                	MOVLW	UPPER(___str_3)
001a6e   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
001a70   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_3)
001a72   6e09     movwf   0x9, 0           	MOVWF	r0x09
001a74   0e88     movlw   0x88             	MOVLW	LOW(___str_3)
001a76   6e08     movwf   0x8, 0           	MOVWF	r0x08
001a78   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
001a7a   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
001a7c   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
001a7e   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
001a80   0e80     movlw   0x80             	MOVLW	0x80
001a82   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
001a84   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
001a86   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001a88   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
001a8a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001a8c   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
001a8e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001a90   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
001a92   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001a94   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
001a96   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001a98   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
001a9a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001a9c   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
001a9e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001aa0   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
001aa2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001aa4   ec8f     call    0x3d1e, 0        	CALL	_sprintf
001aa6   f01e
001aa8   0e08     movlw   0x8              	MOVLW	0x08
001aaa   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	202; meter_logger.c	usart_puts(debug_buffer);
001aac   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
001aae   6e07     movwf   0x7, 0           	MOVWF	r0x07
001ab0   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
001ab2   6e06     movwf   0x6, 0           	MOVWF	r0x06
001ab4   0e80     movlw   0x80             	MOVLW	0x80
001ab6   6e08     movwf   0x8, 0           	MOVWF	r0x08
001ab8   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
001aba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001abc   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
001abe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001ac0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
001ac2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001ac4   ec04     call    0x4408, 0        	CALL	_usart_puts
001ac6   f022
001ac8   0e03     movlw   0x3              	MOVLW	0x03
001aca   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001acc   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_85
                                           ;	.line	204; meter_logger.c	fifo_put(sub_cmd);
001ace   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_85, W, B
001ad0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001ad2   ec74     call    0x3ae8, 0        	CALL	_fifo_put
001ad4   f01d
001ad6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	197; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
001ad8   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
001ada   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
001adc   d7a8     bra     0x1a2e           	BRA	_00150_DS_
                                           _00117_DS_:
                                           ;	.line	209; meter_logger.c	fsk_tx_enable();
001ade   ec68     call    0x46d0, 0        	CALL	_fsk_tx_enable
001ae0   f023
                                           ;	.line	210; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
001ae2   0e00     movlw   0                	MOVLW	0x00
001ae4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001ae6   0e0c     movlw   0xc              	MOVLW	0x0c
001ae8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001aea   ec2d     call    0x425a, 0        	CALL	_sleep_ms
001aec   f021
001aee   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001af0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00118_DS_:
                                           ;	.line	211; meter_logger.c	while (fifo_get(&sub_cmd)) {
001af2   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_85)
001af4   6e05     movwf   0x5, 0           	MOVWF	r0x05
001af6   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_85)
001af8   6e04     movwf   0x4, 0           	MOVWF	r0x04
001afa   0e80     movlw   0x80             	MOVLW	0x80
001afc   6e06     movwf   0x6, 0           	MOVWF	r0x06
001afe   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
001b00   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001b02   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
001b04   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001b06   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001b08   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001b0a   ec64     call    0x36c8, 0        	CALL	_fifo_get
001b0c   f01b
001b0e   6e04     movwf   0x4, 0           	MOVWF	r0x04
001b10   0e03     movlw   0x3              	MOVLW	0x03
001b12   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001b14   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001b16   e00f     bz      0x1b36           	BZ	_00120_DS_
001b18   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_85
                                           ;	.line	212; meter_logger.c	fsk_tx_byte(sub_cmd);
001b1a   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_85, W, B
001b1c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001b1e   ec31     call    0x4862, 0        	CALL	_fsk_tx_byte
001b20   f024
001b22   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	213; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
001b24   0e00     movlw   0                	MOVLW	0x00
001b26   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001b28   0e0c     movlw   0xc              	MOVLW	0x0c
001b2a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001b2c   ec2d     call    0x425a, 0        	CALL	_sleep_ms
001b2e   f021
001b30   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001b32   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001b34   d7de     bra     0x1af2           	BRA	_00118_DS_
                                           _00120_DS_:
                                           ;	.line	215; meter_logger.c	fsk_tx_disable();
001b36   eca2     call    0x4944, 0        	CALL	_fsk_tx_disable
001b38   f024
                                           ;	.line	218; meter_logger.c	usart_puts("\n\rwaiting for new command\n\r");
001b3a   0e00     movlw   0                	MOVLW	UPPER(___str_4)
001b3c   6e06     movwf   0x6, 0           	MOVWF	r0x06
001b3e   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_4)
001b40   6e05     movwf   0x5, 0           	MOVWF	r0x05
001b42   0e8c     movlw   0x8c             	MOVLW	LOW(___str_4)
001b44   6e04     movwf   0x4, 0           	MOVWF	r0x04
001b46   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
001b48   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001b4a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
001b4c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001b4e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001b50   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001b52   ec04     call    0x4408, 0        	CALL	_usart_puts
001b54   f022
001b56   0e03     movlw   0x3              	MOVLW	0x03
001b58   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	220; meter_logger.c	fsk_rx_enable();
001b5a   ec40     call    0x4480, 0        	CALL	_fsk_rx_enable
001b5c   f022
                                           ;	.line	221; meter_logger.c	break;
001b5e   d60f     bra     0x177e           	BRA	_00144_DS_
                                           _00121_DS_:
                                           ;	.line	224; meter_logger.c	fsk_rx_disable();
001b60   ecce     call    0x499c, 0        	CALL	_fsk_rx_disable
001b62   f024
                                           ;	.line	226; meter_logger.c	usart_puts("\n\rkamstrup - send kmp frame data\n\r");
001b64   0e00     movlw   0                	MOVLW	UPPER(___str_6)
001b66   6e06     movwf   0x6, 0           	MOVWF	r0x06
001b68   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_6)
001b6a   6e05     movwf   0x5, 0           	MOVWF	r0x05
001b6c   0ec8     movlw   0xc8             	MOVLW	LOW(___str_6)
001b6e   6e04     movwf   0x4, 0           	MOVWF	r0x04
001b70   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
001b72   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001b74   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
001b76   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001b78   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001b7a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001b7c   ec04     call    0x4408, 0        	CALL	_usart_puts
001b7e   f022
001b80   0e03     movlw   0x3              	MOVLW	0x03
001b82   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	230; meter_logger.c	fsk_rx_enable();
001b84   ec40     call    0x4480, 0        	CALL	_fsk_rx_enable
001b86   f022
                                           ;	.line	231; meter_logger.c	last_fifo_size = 0;
001b88   6a00     clrf    0, 0             	CLRF	r0x00
001b8a   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	232; meter_logger.c	sleep_ms(400);							// sleep 400 ms to let some data come in
001b8c   0e01     movlw   0x1              	MOVLW	0x01
001b8e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001b90   0e90     movlw   0x90             	MOVLW	0x90
001b92   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001b94   ec2d     call    0x425a, 0        	CALL	_sleep_ms
001b96   f021
001b98   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001b9a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	233; meter_logger.c	fifo_size = fifo_in_use();
001b9c   ec31     call    0x4662, 0        	CALL	_fifo_in_use
001b9e   f023
001ba0   6e02     movwf   0x2, 0           	MOVWF	r0x02
001ba2   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
001ba4   f003
                                           _00122_DS_:
                                           ;	.line	234; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
001ba6   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001ba8   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
001baa   e102     bnz     0x1bb0           	BNZ	_00254_DS_
001bac   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
001bae   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00254_DS_:
001bb0   e212     bc      0x1bd6           	BC	_00124_DS_
                                           ;	.line	235; meter_logger.c	last_fifo_size = fifo_size;
001bb2   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
001bb4   f000
001bb6   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
001bb8   f001
                                           ;	.line	236; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
001bba   0e00     movlw   0                	MOVLW	0x00
001bbc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001bbe   0ec8     movlw   0xc8             	MOVLW	0xc8
001bc0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001bc2   ec2d     call    0x425a, 0        	CALL	_sleep_ms
001bc4   f021
001bc6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001bc8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	237; meter_logger.c	fifo_size = fifo_in_use();
001bca   ec31     call    0x4662, 0        	CALL	_fifo_in_use
001bcc   f023
001bce   6e02     movwf   0x2, 0           	MOVWF	r0x02
001bd0   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
001bd2   f003
001bd4   d7e8     bra     0x1ba6           	BRA	_00122_DS_
                                           _00124_DS_:
                                           ;	.line	239; meter_logger.c	fsk_rx_disable();
001bd6   ecce     call    0x499c, 0        	CALL	_fsk_rx_disable
001bd8   f024
                                           ;	.line	242; meter_logger.c	usart_puts("\n\rkamstrup - kmp frame received:\n\r");
001bda   0e00     movlw   0                	MOVLW	UPPER(___str_7)
001bdc   6e06     movwf   0x6, 0           	MOVWF	r0x06
001bde   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_7)
001be0   6e05     movwf   0x5, 0           	MOVWF	r0x05
001be2   0eec     movlw   0xec             	MOVLW	LOW(___str_7)
001be4   6e04     movwf   0x4, 0           	MOVWF	r0x04
001be6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
001be8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001bea   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
001bec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001bee   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001bf0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001bf2   ec04     call    0x4408, 0        	CALL	_usart_puts
001bf4   f022
001bf6   0e03     movlw   0x3              	MOVLW	0x03
001bf8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	245; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
001bfa   6a04     clrf    0x4, 0           	CLRF	r0x04
001bfc   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00153_DS_:
001bfe   ec31     call    0x4662, 0        	CALL	_fifo_in_use
001c00   f023
001c02   6e06     movwf   0x6, 0           	MOVWF	r0x06
001c04   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
001c06   f007
001c08   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
001c0a   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
001c0c   e102     bnz     0x1c12           	BNZ	_00255_DS_
001c0e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
001c10   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00255_DS_:
001c12   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
001c14   d04c     bra     0x1cae           	BRA	_00125_DS_
                                           ;	.line	247; meter_logger.c	fifo_get(&sub_cmd);
001c16   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_85)
001c18   6e07     movwf   0x7, 0           	MOVWF	r0x07
001c1a   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_85)
001c1c   6e06     movwf   0x6, 0           	MOVWF	r0x06
001c1e   0e80     movlw   0x80             	MOVLW	0x80
001c20   6e08     movwf   0x8, 0           	MOVWF	r0x08
001c22   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
001c24   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001c26   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
001c28   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001c2a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
001c2c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001c2e   ec64     call    0x36c8, 0        	CALL	_fifo_get
001c30   f01b
001c32   0e03     movlw   0x3              	MOVLW	0x03
001c34   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	249; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
001c36   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_85, r0x06
001c38   f006
001c3a   6a07     clrf    0x7, 0           	CLRF	r0x07
001c3c   0e00     movlw   0                	MOVLW	UPPER(___str_3)
001c3e   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
001c40   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_3)
001c42   6e09     movwf   0x9, 0           	MOVWF	r0x09
001c44   0e88     movlw   0x88             	MOVLW	LOW(___str_3)
001c46   6e08     movwf   0x8, 0           	MOVWF	r0x08
001c48   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
001c4a   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
001c4c   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
001c4e   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
001c50   0e80     movlw   0x80             	MOVLW	0x80
001c52   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
001c54   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
001c56   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001c58   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
001c5a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001c5c   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
001c5e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001c60   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
001c62   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001c64   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
001c66   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001c68   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
001c6a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001c6c   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
001c6e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001c70   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
001c72   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001c74   ec8f     call    0x3d1e, 0        	CALL	_sprintf
001c76   f01e
001c78   0e08     movlw   0x8              	MOVLW	0x08
001c7a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	250; meter_logger.c	usart_puts(debug_buffer);
001c7c   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
001c7e   6e07     movwf   0x7, 0           	MOVWF	r0x07
001c80   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
001c82   6e06     movwf   0x6, 0           	MOVWF	r0x06
001c84   0e80     movlw   0x80             	MOVLW	0x80
001c86   6e08     movwf   0x8, 0           	MOVWF	r0x08
001c88   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
001c8a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001c8c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
001c8e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001c90   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
001c92   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001c94   ec04     call    0x4408, 0        	CALL	_usart_puts
001c96   f022
001c98   0e03     movlw   0x3              	MOVLW	0x03
001c9a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001c9c   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_85
                                           ;	.line	252; meter_logger.c	fifo_put(sub_cmd);
001c9e   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_85, W, B
001ca0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001ca2   ec74     call    0x3ae8, 0        	CALL	_fifo_put
001ca4   f01d
001ca6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	245; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
001ca8   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
001caa   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
001cac   d7a8     bra     0x1bfe           	BRA	_00153_DS_
                                           _00125_DS_:
                                           ;	.line	256; meter_logger.c	rs232_tx_enable();
001cae   ecd8     call    0x45b0, 0        	CALL	_rs232_tx_enable
001cb0   f022
                                           _00126_DS_:
                                           ;	.line	257; meter_logger.c	while (fifo_get(&sub_cmd)) {
001cb2   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_85)
001cb4   6e05     movwf   0x5, 0           	MOVWF	r0x05
001cb6   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_85)
001cb8   6e04     movwf   0x4, 0           	MOVWF	r0x04
001cba   0e80     movlw   0x80             	MOVLW	0x80
001cbc   6e06     movwf   0x6, 0           	MOVWF	r0x06
001cbe   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
001cc0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001cc2   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
001cc4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001cc6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001cc8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001cca   ec64     call    0x36c8, 0        	CALL	_fifo_get
001ccc   f01b
001cce   6e04     movwf   0x4, 0           	MOVWF	r0x04
001cd0   0e03     movlw   0x3              	MOVLW	0x03
001cd2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001cd4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001cd6   e00f     bz      0x1cf6           	BZ	_00128_DS_
001cd8   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_85
                                           ;	.line	258; meter_logger.c	rs232_tx_byte(sub_cmd);
001cda   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_85, W, B
001cdc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001cde   ecdf     call    0x47be, 0        	CALL	_rs232_tx_byte
001ce0   f023
001ce2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	259; meter_logger.c	sleep_ms(RS232_TX_SLEEP);
001ce4   0e00     movlw   0                	MOVLW	0x00
001ce6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001ce8   0e0c     movlw   0xc              	MOVLW	0x0c
001cea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001cec   ec2d     call    0x425a, 0        	CALL	_sleep_ms
001cee   f021
001cf0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001cf2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001cf4   d7de     bra     0x1cb2           	BRA	_00126_DS_
                                           _00128_DS_:
                                           ;	.line	261; meter_logger.c	rs232_tx_disable();
001cf6   ecb8     call    0x4970, 0        	CALL	_rs232_tx_disable
001cf8   f024
                                           ;	.line	267; meter_logger.c	rs232_rx_enable();
001cfa   ecb9     call    0x4572, 0        	CALL	_rs232_rx_enable
001cfc   f022
                                           ;	.line	268; meter_logger.c	last_fifo_size = 0;
001cfe   6a00     clrf    0, 0             	CLRF	r0x00
001d00   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	269; meter_logger.c	sleep_ms(400);							// sleep 200 ms to let some data come in
001d02   0e01     movlw   0x1              	MOVLW	0x01
001d04   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001d06   0e90     movlw   0x90             	MOVLW	0x90
001d08   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001d0a   ec2d     call    0x425a, 0        	CALL	_sleep_ms
001d0c   f021
001d0e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001d10   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	270; meter_logger.c	fifo_size = fifo_in_use();
001d12   ec31     call    0x4662, 0        	CALL	_fifo_in_use
001d14   f023
001d16   6e02     movwf   0x2, 0           	MOVWF	r0x02
001d18   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
001d1a   f003
                                           _00129_DS_:
                                           ;	.line	272; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
001d1c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001d1e   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
001d20   e102     bnz     0x1d26           	BNZ	_00256_DS_
001d22   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
001d24   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00256_DS_:
001d26   e212     bc      0x1d4c           	BC	_00131_DS_
                                           ;	.line	273; meter_logger.c	last_fifo_size = fifo_size;
001d28   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
001d2a   f000
001d2c   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
001d2e   f001
                                           ;	.line	274; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
001d30   0e00     movlw   0                	MOVLW	0x00
001d32   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001d34   0ec8     movlw   0xc8             	MOVLW	0xc8
001d36   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001d38   ec2d     call    0x425a, 0        	CALL	_sleep_ms
001d3a   f021
001d3c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001d3e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	275; meter_logger.c	fifo_size = fifo_in_use();
001d40   ec31     call    0x4662, 0        	CALL	_fifo_in_use
001d42   f023
001d44   6e02     movwf   0x2, 0           	MOVWF	r0x02
001d46   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
001d48   f003
001d4a   d7e8     bra     0x1d1c           	BRA	_00129_DS_
                                           _00131_DS_:
                                           ;	.line	278; meter_logger.c	rs232_rx_disable();
001d4c   ecad     call    0x495a, 0        	CALL	_rs232_rx_disable
001d4e   f024
                                           ;	.line	282; meter_logger.c	usart_puts("\n\rkamstrup - kmp reply received:\n\r");
001d50   0e00     movlw   0                	MOVLW	UPPER(___str_8)
001d52   6e02     movwf   0x2, 0           	MOVWF	r0x02
001d54   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_8)
001d56   6e01     movwf   0x1, 0           	MOVWF	r0x01
001d58   0e10     movlw   0x10             	MOVLW	LOW(___str_8)
001d5a   6e00     movwf   0, 0             	MOVWF	r0x00
001d5c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
001d5e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001d60   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
001d62   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001d64   5000     movf    0, 0, 0          	MOVF	r0x00, W
001d66   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001d68   ec04     call    0x4408, 0        	CALL	_usart_puts
001d6a   f022
001d6c   0e03     movlw   0x3              	MOVLW	0x03
001d6e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	285; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
001d70   6a00     clrf    0, 0             	CLRF	r0x00
001d72   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00156_DS_:
001d74   ec31     call    0x4662, 0        	CALL	_fifo_in_use
001d76   f023
001d78   6e02     movwf   0x2, 0           	MOVWF	r0x02
001d7a   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
001d7c   f003
001d7e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001d80   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
001d82   e102     bnz     0x1d88           	BNZ	_00257_DS_
001d84   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
001d86   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00257_DS_:
001d88   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
001d8a   d04c     bra     0x1e24           	BRA	_00132_DS_
                                           ;	.line	287; meter_logger.c	fifo_get(&sub_cmd);
001d8c   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_85)
001d8e   6e03     movwf   0x3, 0           	MOVWF	r0x03
001d90   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_85)
001d92   6e02     movwf   0x2, 0           	MOVWF	r0x02
001d94   0e80     movlw   0x80             	MOVLW	0x80
001d96   6e04     movwf   0x4, 0           	MOVWF	r0x04
001d98   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001d9a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001d9c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001d9e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001da0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
001da2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001da4   ec64     call    0x36c8, 0        	CALL	_fifo_get
001da6   f01b
001da8   0e03     movlw   0x3              	MOVLW	0x03
001daa   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	289; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
001dac   c550     movff   0x550, 0x2       	MOVFF	_main_sub_cmd_1_85, r0x02
001dae   f002
001db0   6a03     clrf    0x3, 0           	CLRF	r0x03
001db2   0e00     movlw   0                	MOVLW	UPPER(___str_3)
001db4   6e06     movwf   0x6, 0           	MOVWF	r0x06
001db6   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_3)
001db8   6e05     movwf   0x5, 0           	MOVWF	r0x05
001dba   0e88     movlw   0x88             	MOVLW	LOW(___str_3)
001dbc   6e04     movwf   0x4, 0           	MOVWF	r0x04
001dbe   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
001dc0   6e08     movwf   0x8, 0           	MOVWF	r0x08
001dc2   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
001dc4   6e07     movwf   0x7, 0           	MOVWF	r0x07
001dc6   0e80     movlw   0x80             	MOVLW	0x80
001dc8   6e09     movwf   0x9, 0           	MOVWF	r0x09
001dca   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001dcc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001dce   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
001dd0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001dd2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
001dd4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001dd6   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
001dd8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001dda   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001ddc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001dde   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
001de0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001de2   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
001de4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001de6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
001de8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001dea   ec8f     call    0x3d1e, 0        	CALL	_sprintf
001dec   f01e
001dee   0e08     movlw   0x8              	MOVLW	0x08
001df0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	290; meter_logger.c	usart_puts(debug_buffer);
001df2   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
001df4   6e03     movwf   0x3, 0           	MOVWF	r0x03
001df6   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
001df8   6e02     movwf   0x2, 0           	MOVWF	r0x02
001dfa   0e80     movlw   0x80             	MOVLW	0x80
001dfc   6e04     movwf   0x4, 0           	MOVWF	r0x04
001dfe   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001e00   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001e02   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001e04   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001e06   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
001e08   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001e0a   ec04     call    0x4408, 0        	CALL	_usart_puts
001e0c   f022
001e0e   0e03     movlw   0x3              	MOVLW	0x03
001e10   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001e12   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_85
                                           ;	.line	292; meter_logger.c	fifo_put(sub_cmd);
001e14   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_85, W, B
001e16   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001e18   ec74     call    0x3ae8, 0        	CALL	_fifo_put
001e1a   f01d
001e1c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	285; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
001e1e   4a00     infsnz  0, 0x1, 0        	INFSNZ	r0x00, F
001e20   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
001e22   d7a8     bra     0x1d74           	BRA	_00156_DS_
                                           _00132_DS_:
                                           ;	.line	295; meter_logger.c	if (fifo_in_use()) {
001e24   ec31     call    0x4662, 0        	CALL	_fifo_in_use
001e26   f023
001e28   6e00     movwf   0, 0             	MOVWF	r0x00
001e2a   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
001e2c   f001
001e2e   5000     movf    0, 0, 0          	MOVF	r0x00, W
001e30   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
001e32   e033     bz      0x1e9a           	BZ	_00137_DS_
                                           ;	.line	297; meter_logger.c	DEBUG2_PIN = 1;
001e34   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
001e36   0000     nop                      	nop
001e38   0000     nop                      	nop
                                           	
                                           ;	.line	302; meter_logger.c	DEBUG2_PIN = 0;
001e3a   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	304; meter_logger.c	fsk_tx_enable();
001e3c   ec68     call    0x46d0, 0        	CALL	_fsk_tx_enable
001e3e   f023
                                           ;	.line	306; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
001e40   0e00     movlw   0                	MOVLW	0x00
001e42   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001e44   0e0c     movlw   0xc              	MOVLW	0x0c
001e46   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001e48   ec2d     call    0x425a, 0        	CALL	_sleep_ms
001e4a   f021
001e4c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001e4e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00133_DS_:
                                           ;	.line	307; meter_logger.c	while (fifo_get(&sub_cmd)) {
001e50   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_85)
001e52   6e01     movwf   0x1, 0           	MOVWF	r0x01
001e54   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_85)
001e56   6e00     movwf   0, 0             	MOVWF	r0x00
001e58   0e80     movlw   0x80             	MOVLW	0x80
001e5a   6e02     movwf   0x2, 0           	MOVWF	r0x02
001e5c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
001e5e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001e60   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
001e62   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001e64   5000     movf    0, 0, 0          	MOVF	r0x00, W
001e66   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001e68   ec64     call    0x36c8, 0        	CALL	_fifo_get
001e6a   f01b
001e6c   6e00     movwf   0, 0             	MOVWF	r0x00
001e6e   0e03     movlw   0x3              	MOVLW	0x03
001e70   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001e72   5000     movf    0, 0, 0          	MOVF	r0x00, W
001e74   e00f     bz      0x1e94           	BZ	_00135_DS_
001e76   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_85
                                           ;	.line	312; meter_logger.c	fsk_tx_byte(sub_cmd);
001e78   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_85, W, B
001e7a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001e7c   ec31     call    0x4862, 0        	CALL	_fsk_tx_byte
001e7e   f024
001e80   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	313; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
001e82   0e00     movlw   0                	MOVLW	0x00
001e84   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001e86   0e0c     movlw   0xc              	MOVLW	0x0c
001e88   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001e8a   ec2d     call    0x425a, 0        	CALL	_sleep_ms
001e8c   f021
001e8e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001e90   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001e92   d7de     bra     0x1e50           	BRA	_00133_DS_
                                           _00135_DS_:
                                           ;	.line	317; meter_logger.c	fsk_tx_disable();
001e94   eca2     call    0x4944, 0        	CALL	_fsk_tx_disable
001e96   f024
001e98   d04f     bra     0x1f38           	BRA	_00138_DS_
                                           _00137_DS_:
                                           ;	.line	322; meter_logger.c	DEBUG2_PIN = 1;
001e9a   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
001e9c   0000     nop                      	nop
001e9e   0000     nop                      	nop
                                           	
                                           ;	.line	327; meter_logger.c	DEBUG2_PIN = 0;
001ea0   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
001ea2   0000     nop                      	nop
001ea4   0000     nop                      	nop
                                           	
                                           ;	.line	332; meter_logger.c	DEBUG2_PIN = 1;
001ea6   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
001ea8   0000     nop                      	nop
001eaa   0000     nop                      	nop
                                           	
                                           ;	.line	337; meter_logger.c	DEBUG2_PIN = 0;
001eac   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	339; meter_logger.c	sprintf(debug_buffer, "\n\rno reply from meter\n\r");
001eae   0e00     movlw   0                	MOVLW	UPPER(___str_9)
001eb0   6e02     movwf   0x2, 0           	MOVWF	r0x02
001eb2   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_9)
001eb4   6e01     movwf   0x1, 0           	MOVWF	r0x01
001eb6   0e34     movlw   0x34             	MOVLW	LOW(___str_9)
001eb8   6e00     movwf   0, 0             	MOVWF	r0x00
001eba   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
001ebc   6e04     movwf   0x4, 0           	MOVWF	r0x04
001ebe   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
001ec0   6e03     movwf   0x3, 0           	MOVWF	r0x03
001ec2   0e80     movlw   0x80             	MOVLW	0x80
001ec4   6e05     movwf   0x5, 0           	MOVWF	r0x05
001ec6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
001ec8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001eca   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
001ecc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001ece   5000     movf    0, 0, 0          	MOVF	r0x00, W
001ed0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001ed2   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
001ed4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001ed6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001ed8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001eda   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001edc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001ede   ec8f     call    0x3d1e, 0        	CALL	_sprintf
001ee0   f01e
001ee2   0e06     movlw   0x6              	MOVLW	0x06
001ee4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	340; meter_logger.c	usart_puts(debug_buffer);
001ee6   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
001ee8   6e01     movwf   0x1, 0           	MOVWF	r0x01
001eea   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
001eec   6e00     movwf   0, 0             	MOVWF	r0x00
001eee   0e80     movlw   0x80             	MOVLW	0x80
001ef0   6e02     movwf   0x2, 0           	MOVWF	r0x02
001ef2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
001ef4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001ef6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
001ef8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001efa   5000     movf    0, 0, 0          	MOVF	r0x00, W
001efc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001efe   ec04     call    0x4408, 0        	CALL	_usart_puts
001f00   f022
001f02   0e03     movlw   0x3              	MOVLW	0x03
001f04   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	342; meter_logger.c	fsk_tx_enable();
001f06   ec68     call    0x46d0, 0        	CALL	_fsk_tx_enable
001f08   f023
                                           ;	.line	343; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
001f0a   0e00     movlw   0                	MOVLW	0x00
001f0c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001f0e   0e0c     movlw   0xc              	MOVLW	0x0c
001f10   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001f12   ec2d     call    0x425a, 0        	CALL	_sleep_ms
001f14   f021
001f16   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001f18   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	344; meter_logger.c	fsk_tx_byte(0x0d);
001f1a   0e0d     movlw   0xd              	MOVLW	0x0d
001f1c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001f1e   ec31     call    0x4862, 0        	CALL	_fsk_tx_byte
001f20   f024
001f22   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	345; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
001f24   0e00     movlw   0                	MOVLW	0x00
001f26   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001f28   0e0c     movlw   0xc              	MOVLW	0x0c
001f2a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001f2c   ec2d     call    0x425a, 0        	CALL	_sleep_ms
001f2e   f021
001f30   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001f32   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	346; meter_logger.c	fsk_tx_disable();
001f34   eca2     call    0x4944, 0        	CALL	_fsk_tx_disable
001f36   f024
                                           _00138_DS_:
                                           ;	.line	349; meter_logger.c	usart_puts("\n\rwaiting for new command\n\r");
001f38   0e00     movlw   0                	MOVLW	UPPER(___str_4)
001f3a   6e02     movwf   0x2, 0           	MOVWF	r0x02
001f3c   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_4)
001f3e   6e01     movwf   0x1, 0           	MOVWF	r0x01
001f40   0e8c     movlw   0x8c             	MOVLW	LOW(___str_4)
001f42   6e00     movwf   0, 0             	MOVWF	r0x00
001f44   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
001f46   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001f48   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
001f4a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001f4c   5000     movf    0, 0, 0          	MOVF	r0x00, W
001f4e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001f50   ec04     call    0x4408, 0        	CALL	_usart_puts
001f52   f022
001f54   0e03     movlw   0x3              	MOVLW	0x03
001f56   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	351; meter_logger.c	fsk_rx_enable();
001f58   ec40     call    0x4480, 0        	CALL	_fsk_rx_enable
001f5a   f022
                                           ;	.line	352; meter_logger.c	break;
001f5c   efbf     goto    0x177e           	GOTO	_00144_DS_
001f5e   f00b
                                           _00139_DS_:
                                           ;	.line	354; meter_logger.c	fsk_rx_disable();
001f60   ecce     call    0x499c, 0        	CALL	_fsk_rx_disable
001f62   f024
                                           ;	.line	355; meter_logger.c	battery_level();
001f64   ec23     call    0x3846, 0        	CALL	_battery_level
001f66   f01c
                                           ;	.line	356; meter_logger.c	fsk_rx_enable();
001f68   ec40     call    0x4480, 0        	CALL	_fsk_rx_enable
001f6a   f022
                                           ;	.line	358; meter_logger.c	}
001f6c   efbf     goto    0x177e           	GOTO	_00144_DS_
001f6e   f00b
001f70   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger___debug2	code
                                           __debug2:
                                           ;	.line	4317; meter_logger.c	void _debug2() {
003f44   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003f46   ffe5
003f48   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003f4a   ffd9
                                           ;	.line	4318; meter_logger.c	DEBUG2_PIN = 0x1;
003f4c   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
003f4e   0000     nop                      	nop
003f50   0000     nop                      	nop
003f52   0000     nop                      	nop
003f54   0000     nop                      	nop
003f56   0000     nop                      	nop
003f58   0000     nop                      	nop
003f5a   0000     nop                      	nop
003f5c   0000     nop                      	nop
003f5e   0000     nop                      	nop
003f60   0000     nop                      	nop
003f62   0000     nop                      	nop
003f64   0000     nop                      	nop
003f66   0000     nop                      	nop
003f68   0000     nop                      	nop
003f6a   0000     nop                      	nop
003f6c   0000     nop                      	nop
003f6e   0000     nop                      	nop
003f70   0000     nop                      	nop
003f72   0000     nop                      	nop
003f74   0000     nop                      	nop
003f76   0000     nop                      	nop
003f78   0000     nop                      	nop
003f7a   0000     nop                      	nop
003f7c   0000     nop                      	nop
003f7e   0000     nop                      	nop
003f80   0000     nop                      	nop
003f82   0000     nop                      	nop
003f84   0000     nop                      	nop
003f86   0000     nop                      	nop
003f88   0000     nop                      	nop
003f8a   0000     nop                      	nop
003f8c   0000     nop                      	nop
003f8e   0000     nop                      	nop
003f90   0000     nop                      	nop
003f92   0000     nop                      	nop
003f94   0000     nop                      	nop
003f96   0000     nop                      	nop
003f98   0000     nop                      	nop
003f9a   0000     nop                      	nop
003f9c   0000     nop                      	nop
003f9e   0000     nop                      	nop
003fa0   0000     nop                      	nop
003fa2   0000     nop                      	nop
003fa4   0000     nop                      	nop
003fa6   0000     nop                      	nop
                                           	
                                           ;	.line	4366; meter_logger.c	DEBUG2_PIN = 0x0;
003fa8   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
003faa   0000     nop                      	nop
003fac   0000     nop                      	nop
003fae   0000     nop                      	nop
003fb0   0000     nop                      	nop
003fb2   0000     nop                      	nop
003fb4   0000     nop                      	nop
003fb6   0000     nop                      	nop
003fb8   0000     nop                      	nop
003fba   0000     nop                      	nop
003fbc   0000     nop                      	nop
003fbe   0000     nop                      	nop
003fc0   0000     nop                      	nop
003fc2   0000     nop                      	nop
003fc4   0000     nop                      	nop
003fc6   0000     nop                      	nop
003fc8   0000     nop                      	nop
003fca   0000     nop                      	nop
003fcc   0000     nop                      	nop
003fce   0000     nop                      	nop
003fd0   0000     nop                      	nop
003fd2   0000     nop                      	nop
003fd4   0000     nop                      	nop
003fd6   0000     nop                      	nop
003fd8   0000     nop                      	nop
003fda   0000     nop                      	nop
003fdc   0000     nop                      	nop
003fde   0000     nop                      	nop
003fe0   0000     nop                      	nop
003fe2   0000     nop                      	nop
003fe4   0000     nop                      	nop
003fe6   0000     nop                      	nop
003fe8   0000     nop                      	nop
003fea   0000     nop                      	nop
003fec   0000     nop                      	nop
003fee   0000     nop                      	nop
003ff0   0000     nop                      	nop
003ff2   0000     nop                      	nop
003ff4   0000     nop                      	nop
003ff6   0000     nop                      	nop
003ff8   0000     nop                      	nop
003ffa   0000     nop                      	nop
003ffc   0000     nop                      	nop
003ffe   0000     nop                      	nop
004000   0000     nop                      	nop
004002   0000     nop                      	nop
                                           	
004004   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004006   ffd9
004008   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger___debug	code
                                           __debug:
                                           ;	.line	4217; meter_logger.c	void _debug() {
00400a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00400c   ffe5
00400e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004010   ffd9
                                           ;	.line	4218; meter_logger.c	DEBUG_PIN = 0x1;
004012   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
004014   0000     nop                      	nop
004016   0000     nop                      	nop
004018   0000     nop                      	nop
00401a   0000     nop                      	nop
00401c   0000     nop                      	nop
00401e   0000     nop                      	nop
004020   0000     nop                      	nop
004022   0000     nop                      	nop
004024   0000     nop                      	nop
004026   0000     nop                      	nop
004028   0000     nop                      	nop
00402a   0000     nop                      	nop
00402c   0000     nop                      	nop
00402e   0000     nop                      	nop
004030   0000     nop                      	nop
004032   0000     nop                      	nop
004034   0000     nop                      	nop
004036   0000     nop                      	nop
004038   0000     nop                      	nop
00403a   0000     nop                      	nop
00403c   0000     nop                      	nop
00403e   0000     nop                      	nop
004040   0000     nop                      	nop
004042   0000     nop                      	nop
004044   0000     nop                      	nop
004046   0000     nop                      	nop
004048   0000     nop                      	nop
00404a   0000     nop                      	nop
00404c   0000     nop                      	nop
00404e   0000     nop                      	nop
004050   0000     nop                      	nop
004052   0000     nop                      	nop
004054   0000     nop                      	nop
004056   0000     nop                      	nop
004058   0000     nop                      	nop
00405a   0000     nop                      	nop
00405c   0000     nop                      	nop
00405e   0000     nop                      	nop
004060   0000     nop                      	nop
004062   0000     nop                      	nop
004064   0000     nop                      	nop
004066   0000     nop                      	nop
004068   0000     nop                      	nop
00406a   0000     nop                      	nop
00406c   0000     nop                      	nop
                                           	
                                           ;	.line	4266; meter_logger.c	DEBUG_PIN = 0x0;
00406e   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
004070   0000     nop                      	nop
004072   0000     nop                      	nop
004074   0000     nop                      	nop
004076   0000     nop                      	nop
004078   0000     nop                      	nop
00407a   0000     nop                      	nop
00407c   0000     nop                      	nop
00407e   0000     nop                      	nop
004080   0000     nop                      	nop
004082   0000     nop                      	nop
004084   0000     nop                      	nop
004086   0000     nop                      	nop
004088   0000     nop                      	nop
00408a   0000     nop                      	nop
00408c   0000     nop                      	nop
00408e   0000     nop                      	nop
004090   0000     nop                      	nop
004092   0000     nop                      	nop
004094   0000     nop                      	nop
004096   0000     nop                      	nop
004098   0000     nop                      	nop
00409a   0000     nop                      	nop
00409c   0000     nop                      	nop
00409e   0000     nop                      	nop
0040a0   0000     nop                      	nop
0040a2   0000     nop                      	nop
0040a4   0000     nop                      	nop
0040a6   0000     nop                      	nop
0040a8   0000     nop                      	nop
0040aa   0000     nop                      	nop
0040ac   0000     nop                      	nop
0040ae   0000     nop                      	nop
0040b0   0000     nop                      	nop
0040b2   0000     nop                      	nop
0040b4   0000     nop                      	nop
0040b6   0000     nop                      	nop
0040b8   0000     nop                      	nop
0040ba   0000     nop                      	nop
0040bc   0000     nop                      	nop
0040be   0000     nop                      	nop
0040c0   0000     nop                      	nop
0040c2   0000     nop                      	nop
0040c4   0000     nop                      	nop
0040c6   0000     nop                      	nop
0040c8   0000     nop                      	nop
                                           	
0040ca   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0040cc   ffd9
0040ce   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__flash_led	code
                                           _flash_led:
                                           ;	.line	4212; meter_logger.c	void flash_led(unsigned char ms) {
004888   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00488a   ffe5
00488c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00488e   ffd9
004890   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004892   ffe5
004894   0e02     movlw   0x2              	MOVLW	0x02
004896   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004898   f000
                                           ;	.line	4213; meter_logger.c	led_flash.timer = ms;
00489a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00489c   0105     movlb   0x5              	BANKSEL	(_led_flash + 1)
00489e   6f4d     movwf   0x4d, 0x1        	MOVWF	(_led_flash + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	4214; meter_logger.c	led_flash.state = LED_FLASH_RUN;
0048a0   6b4c     clrf    0x4c, 0x1        	CLRF	_led_flash, B
0048a2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0048a4   f000
0048a6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0048a8   ffd9
0048aa   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__battery_level	code
                                           _battery_level:
                                           ;	.line	4194; meter_logger.c	unsigned int battery_level() {
003846   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003848   ffe5
00384a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00384c   ffd9
00384e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003850   ffe5
003852   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003854   ffe5
003856   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003858   ffe5
00385a   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00385c   ffe5
00385e   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003860   ffe5
003862   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003864   ffe5
003866   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003868   ffe5
00386a   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
00386c   ffe5
                                           ;	.line	4197; meter_logger.c	adc_open(ADC_CHN_4 , ADC_FOSC_64, ADC_CFG_5A, ADC_FRM_RJUST | ADC_INT_OFF | ADC_VCFG_VDD_VSS);
00386e   0e80     movlw   0x80             	MOVLW	0x80
003870   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003872   0e0a     movlw   0xa              	MOVLW	0x0a
003874   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003876   0e06     movlw   0x6              	MOVLW	0x06
003878   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00387a   0e04     movlw   0x4              	MOVLW	0x04
00387c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00387e   ecc6     call    0x438c, 0        	CALL	_adc_open
003880   f021
003882   0e04     movlw   0x4              	MOVLW	0x04
003884   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4199; meter_logger.c	adc_setchannel(ADC_CHN_4);
003886   0e04     movlw   0x4              	MOVLW	0x04
003888   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00388a   ec14     call    0x4628, 0        	CALL	_adc_setchannel
00388c   f023
00388e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	4200; meter_logger.c	adc_conv();
003890   ec0a     call    0x14, 0          	CALL	_adc_conv
003892   f000
                                           _00952_DS_:
                                           ;	.line	4201; meter_logger.c	while(adc_busy()) {
003894   ec04     call    0x4a08, 0        	CALL	_adc_busy
003896   f025
003898   6e00     movwf   0, 0             	MOVWF	r0x00
00389a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00389c   e1fb     bnz     0x3894           	BNZ	_00952_DS_
                                           ;	.line	4204; meter_logger.c	v_level = (unsigned long)1000 * (unsigned long)adc_read() * (unsigned long)833/(unsigned long)93600;
00389e   ecfc     call    0x49f8, 0        	CALL	_adc_read
0038a0   f024
0038a2   6e00     movwf   0, 0             	MOVWF	r0x00
0038a4   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0038a6   f001
0038a8   6ae8     clrf    0xe8, 0          	CLRF	WREG
0038aa   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0038ac   0eff     movlw   0xff             	MOVLW	0xff
0038ae   6e02     movwf   0x2, 0           	MOVWF	r0x02
0038b0   6e03     movwf   0x3, 0           	MOVWF	r0x03
0038b2   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0038b4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038b6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0038b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038ba   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0038bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038be   5000     movf    0, 0, 0          	MOVF	r0x00, W
0038c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038c2   0e00     movlw   0                	MOVLW	0x00
0038c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038c6   0e0c     movlw   0xc              	MOVLW	0x0c
0038c8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038ca   0eb5     movlw   0xb5             	MOVLW	0xb5
0038cc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038ce   0ee8     movlw   0xe8             	MOVLW	0xe8
0038d0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038d2   ecae     call    0x2f5c, 0        	CALL	__mullong
0038d4   f017
0038d6   6e00     movwf   0, 0             	MOVWF	r0x00
0038d8   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0038da   f001
0038dc   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
0038de   f002
0038e0   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
0038e2   f003
0038e4   0e08     movlw   0x8              	MOVLW	0x08
0038e6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0038e8   0e00     movlw   0                	MOVLW	0x00
0038ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038ec   0e01     movlw   0x1              	MOVLW	0x01
0038ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038f0   0e6d     movlw   0x6d             	MOVLW	0x6d
0038f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038f4   0ea0     movlw   0xa0             	MOVLW	0xa0
0038f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038f8   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0038fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038fc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0038fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003900   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003902   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003904   5000     movf    0, 0, 0          	MOVF	r0x00, W
003906   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003908   ec03     call    0x3c06, 0        	CALL	__divulong
00390a   f01e
00390c   6e00     movwf   0, 0             	MOVWF	r0x00
00390e   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003910   f001
003912   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
003914   f002
003916   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
003918   f003
00391a   0e08     movlw   0x8              	MOVLW	0x08
00391c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4205; meter_logger.c	sprintf(debug_buffer, "Battery: %dmV\n\r", v_level);
00391e   0e00     movlw   0                	MOVLW	UPPER(___str_10)
003920   6e04     movwf   0x4, 0           	MOVWF	r0x04
003922   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_10)
003924   6e03     movwf   0x3, 0           	MOVWF	r0x03
003926   0e4c     movlw   0x4c             	MOVLW	LOW(___str_10)
003928   6e02     movwf   0x2, 0           	MOVWF	r0x02
00392a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00392c   6e06     movwf   0x6, 0           	MOVWF	r0x06
00392e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
003930   6e05     movwf   0x5, 0           	MOVWF	r0x05
003932   0e80     movlw   0x80             	MOVLW	0x80
003934   6e07     movwf   0x7, 0           	MOVWF	r0x07
003936   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003938   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00393a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00393c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00393e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003940   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003942   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003944   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003946   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003948   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00394a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00394c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00394e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003950   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003952   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003954   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003956   ec8f     call    0x3d1e, 0        	CALL	_sprintf
003958   f01e
00395a   0e08     movlw   0x8              	MOVLW	0x08
00395c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4206; meter_logger.c	usart_puts(debug_buffer);	
00395e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
003960   6e03     movwf   0x3, 0           	MOVWF	r0x03
003962   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
003964   6e02     movwf   0x2, 0           	MOVWF	r0x02
003966   0e80     movlw   0x80             	MOVLW	0x80
003968   6e04     movwf   0x4, 0           	MOVWF	r0x04
00396a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00396c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00396e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003970   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003972   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003974   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003976   ec04     call    0x4408, 0        	CALL	_usart_puts
003978   f022
00397a   0e03     movlw   0x3              	MOVLW	0x03
00397c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4208; meter_logger.c	adc_close();
00397e   ec0f     call    0x4a1e, 0        	CALL	_adc_close
003980   f025
                                           ;	.line	4209; meter_logger.c	return v_level;
003982   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003984   fff3
003986   5000     movf    0, 0, 0          	MOVF	r0x00, W
003988   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
00398a   f007
00398c   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
00398e   f006
003990   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003992   f005
003994   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003996   f004
003998   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00399a   f003
00399c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00399e   f002
0039a0   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0039a2   f001
0039a4   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0039a6   f000
0039a8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0039aa   ffd9
0039ac   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_snoop	code
                                           _fifo_snoop:
                                           ;	.line	4171; meter_logger.c	unsigned char fifo_snoop(unsigned char *c, unsigned int pos) {
003528   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00352a   ffe5
00352c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00352e   ffd9
003530   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003532   ffe5
003534   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003536   ffe5
003538   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00353a   ffe5
00353c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00353e   ffe5
003540   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003542   ffe5
003544   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003546   ffe5
003548   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
00354a   ffe5
00354c   0e02     movlw   0x2              	MOVLW	0x02
00354e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003550   f000
003552   0e03     movlw   0x3              	MOVLW	0x03
003554   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003556   f001
003558   0e04     movlw   0x4              	MOVLW	0x04
00355a   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
00355c   f002
00355e   0e05     movlw   0x5              	MOVLW	0x05
003560   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
003562   f003
003564   0e06     movlw   0x6              	MOVLW	0x06
003566   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
003568   f004
                                           ;	.line	4172; meter_logger.c	if (fifo_in_use() > (pos)) {
00356a   ec31     call    0x4662, 0        	CALL	_fifo_in_use
00356c   f023
00356e   6e05     movwf   0x5, 0           	MOVWF	r0x05
003570   cff3     movff   0xff3, 0x6       	MOVFF	PRODL, r0x06
003572   f006
003574   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003576   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
003578   e102     bnz     0x357e           	BNZ	_00945_DS_
00357a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00357c   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _00945_DS_:
00357e   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003580   d091     bra     0x36a4           	BRA	_00935_DS_
003582   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
                                           ;	.line	4173; meter_logger.c	switch (fifo_tail/QUEUE_SIZE) {
003584   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
003586   6e05     movwf   0x5, 0           	MOVWF	r0x05
003588   6a06     clrf    0x6, 0           	CLRF	r0x06
00358a   0e00     movlw   0                	MOVLW	0x00
00358c   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
00358e   e102     bnz     0x3594           	BNZ	_00946_DS_
003590   0e04     movlw   0x4              	MOVLW	0x04
003592   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
                                           _00946_DS_:
003594   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003596   d084     bra     0x36a0           	BRA	_00933_DS_
003598   6afa     clrf    0xfa, 0          	CLRF	PCLATH
00359a   6afb     clrf    0xfb, 0          	CLRF	PCLATU
00359c   3405     rlcf    0x5, 0, 0        	RLCF	r0x05, W
00359e   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0035a0   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
0035a2   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0035a4   0bfc     andlw   0xfc             	ANDLW	0xfc
0035a6   0fb6     addlw   0xb6             	ADDLW	LOW(_00947_DS_)
0035a8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0035aa   0e35     movlw   0x35             	MOVLW	HIGH(_00947_DS_)
0035ac   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
0035ae   0e00     movlw   0                	MOVLW	UPPER(_00947_DS_)
0035b0   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0035b2   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0035b4   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00947_DS_:
0035b6   efe3     goto    0x35c6           	GOTO	_00929_DS_
0035b8   f01a
0035ba   efff     goto    0x35fe           	GOTO	_00930_DS_
0035bc   f01a
0035be   ef1b     goto    0x3636           	GOTO	_00931_DS_
0035c0   f01b
0035c2   ef37     goto    0x366e           	GOTO	_00932_DS_
0035c4   f01b
                                           _00929_DS_:
                                           ;	.line	4175; meter_logger.c	*c = fifo_buffer_0[(fifo_tail + pos) % QUEUE_SIZE];
0035c6   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0035c8   0105     movlb   0x5              	BANKSEL	_fifo_tail
0035ca   2544     addwf   0x44, 0, 0x1     	ADDWF	_fifo_tail, W, B
0035cc   6e05     movwf   0x5, 0           	MOVWF	r0x05
0035ce   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
0035d0   2145     addwfc  0x45, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
0035d2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0035d4   6a06     clrf    0x6, 0           	CLRF	r0x06
0035d6   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
0035d8   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
0035da   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
0035dc   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0035de   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
0035e0   ffe9
0035e2   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
0035e4   ffea
0035e6   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
0035e8   f005
0035ea   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0035ec   ffe5
0035ee   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0035f0   ffe9
0035f2   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0035f4   fff3
0035f6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0035f8   ecc3     call    0x4986, 0        	CALL	__gptrput1
0035fa   f024
                                           ;	.line	4176; meter_logger.c	break;
0035fc   d051     bra     0x36a0           	BRA	_00933_DS_
                                           _00930_DS_:
                                           ;	.line	4178; meter_logger.c	*c = fifo_buffer_1[(fifo_tail + pos) % QUEUE_SIZE];
0035fe   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003600   0105     movlb   0x5              	BANKSEL	_fifo_tail
003602   2544     addwf   0x44, 0, 0x1     	ADDWF	_fifo_tail, W, B
003604   6e05     movwf   0x5, 0           	MOVWF	r0x05
003606   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
003608   2145     addwfc  0x45, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
00360a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00360c   6a06     clrf    0x6, 0           	CLRF	r0x06
00360e   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
003610   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
003612   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
003614   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
003616   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
003618   ffe9
00361a   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
00361c   ffea
00361e   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
003620   f005
003622   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003624   ffe5
003626   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003628   ffe9
00362a   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00362c   fff3
00362e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003630   ecc3     call    0x4986, 0        	CALL	__gptrput1
003632   f024
                                           ;	.line	4179; meter_logger.c	break;
003634   d035     bra     0x36a0           	BRA	_00933_DS_
                                           _00931_DS_:
                                           ;	.line	4181; meter_logger.c	*c = fifo_buffer_2[(fifo_tail + pos) % QUEUE_SIZE];
003636   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003638   0105     movlb   0x5              	BANKSEL	_fifo_tail
00363a   2544     addwf   0x44, 0, 0x1     	ADDWF	_fifo_tail, W, B
00363c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00363e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
003640   2145     addwfc  0x45, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
003642   6e06     movwf   0x6, 0           	MOVWF	r0x06
003644   6a06     clrf    0x6, 0           	CLRF	r0x06
003646   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
003648   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
00364a   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
00364c   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
00364e   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
003650   ffe9
003652   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
003654   ffea
003656   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
003658   f005
00365a   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00365c   ffe5
00365e   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003660   ffe9
003662   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003664   fff3
003666   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003668   ecc3     call    0x4986, 0        	CALL	__gptrput1
00366a   f024
                                           ;	.line	4182; meter_logger.c	break;
00366c   d019     bra     0x36a0           	BRA	_00933_DS_
                                           _00932_DS_:
00366e   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4184; meter_logger.c	*c = fifo_buffer_3[(fifo_tail + pos) % QUEUE_SIZE];
003670   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
003672   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
                                           ; removed redundant BANKSEL
003674   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
003676   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
003678   6a04     clrf    0x4, 0           	CLRF	r0x04
00367a   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
00367c   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
00367e   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
003680   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
003682   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
003684   ffe9
003686   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
003688   ffea
00368a   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
00368c   f003
00368e   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003690   ffe5
003692   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003694   ffe9
003696   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003698   fff3
00369a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00369c   ecc3     call    0x4986, 0        	CALL	__gptrput1
00369e   f024
                                           _00933_DS_:
                                           ;	.line	4187; meter_logger.c	return 1;
0036a0   0e01     movlw   0x1              	MOVLW	0x01
0036a2   d001     bra     0x36a6           	BRA	_00937_DS_
                                           _00935_DS_:
                                           ;	.line	4190; meter_logger.c	return 0;
0036a4   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00937_DS_:
0036a6   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
0036a8   f006
0036aa   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0036ac   f005
0036ae   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0036b0   f004
0036b2   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0036b4   f003
0036b6   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0036b8   f002
0036ba   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0036bc   f001
0036be   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0036c0   f000
0036c2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0036c4   ffd9
0036c6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_get	code
                                           _fifo_get:
                                           ;	.line	4143; meter_logger.c	unsigned char fifo_get(unsigned char *c) {
0036c8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0036ca   ffe5
0036cc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0036ce   ffd9
0036d0   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0036d2   ffe5
0036d4   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0036d6   ffe5
0036d8   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0036da   ffe5
0036dc   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0036de   ffe5
0036e0   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0036e2   ffe5
0036e4   0e02     movlw   0x2              	MOVLW	0x02
0036e6   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0036e8   f000
0036ea   0e03     movlw   0x3              	MOVLW	0x03
0036ec   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0036ee   f001
0036f0   0e04     movlw   0x4              	MOVLW	0x04
0036f2   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
0036f4   f002
                                           ;	.line	4144; meter_logger.c	if (fifo_in_use() != 0) {
0036f6   ec31     call    0x4662, 0        	CALL	_fifo_in_use
0036f8   f023
0036fa   6e03     movwf   0x3, 0           	MOVWF	r0x03
0036fc   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
0036fe   f004
003700   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003702   1004     iorwf   0x4, 0, 0        	IORWF	r0x04, W
003704   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
003706   d091     bra     0x382a           	BRA	_00904_DS_
003708   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
                                           ;	.line	4145; meter_logger.c	switch (fifo_tail/QUEUE_SIZE) {
00370a   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
00370c   6e03     movwf   0x3, 0           	MOVWF	r0x03
00370e   6a04     clrf    0x4, 0           	CLRF	r0x04
003710   0e00     movlw   0                	MOVLW	0x00
003712   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
003714   e102     bnz     0x371a           	BNZ	_00917_DS_
003716   0e04     movlw   0x4              	MOVLW	0x04
003718   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _00917_DS_:
00371a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00371c   d076     bra     0x380a           	BRA	_00900_DS_
00371e   6afa     clrf    0xfa, 0          	CLRF	PCLATH
003720   6afb     clrf    0xfb, 0          	CLRF	PCLATU
003722   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
003724   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
003726   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
003728   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00372a   0bfc     andlw   0xfc             	ANDLW	0xfc
00372c   0f3c     addlw   0x3c             	ADDLW	LOW(_00918_DS_)
00372e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003730   0e37     movlw   0x37             	MOVLW	HIGH(_00918_DS_)
003732   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
003734   0e00     movlw   0                	MOVLW	UPPER(_00918_DS_)
003736   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
003738   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
00373a   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00918_DS_:
00373c   efa6     goto    0x374c           	GOTO	_00896_DS_
00373e   f01b
003740   efbe     goto    0x377c           	GOTO	_00897_DS_
003742   f01b
003744   efd6     goto    0x37ac           	GOTO	_00898_DS_
003746   f01b
003748   efee     goto    0x37dc           	GOTO	_00899_DS_
00374a   f01b
                                           _00896_DS_:
00374c   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4147; meter_logger.c	*c = fifo_buffer_0[fifo_tail % QUEUE_SIZE];
00374e   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
003750   6e03     movwf   0x3, 0           	MOVWF	r0x03
003752   6a04     clrf    0x4, 0           	CLRF	r0x04
003754   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
003756   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
003758   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
00375a   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
00375c   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
00375e   ffe9
003760   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
003762   ffea
003764   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
003766   f003
003768   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00376a   ffe5
00376c   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00376e   ffe9
003770   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003772   fff3
003774   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003776   ecc3     call    0x4986, 0        	CALL	__gptrput1
003778   f024
                                           ;	.line	4148; meter_logger.c	break;
00377a   d047     bra     0x380a           	BRA	_00900_DS_
                                           _00897_DS_:
00377c   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4150; meter_logger.c	*c = fifo_buffer_1[fifo_tail % QUEUE_SIZE];
00377e   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
003780   6e03     movwf   0x3, 0           	MOVWF	r0x03
003782   6a04     clrf    0x4, 0           	CLRF	r0x04
003784   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
003786   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
003788   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
00378a   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
00378c   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
00378e   ffe9
003790   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
003792   ffea
003794   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
003796   f003
003798   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00379a   ffe5
00379c   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00379e   ffe9
0037a0   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0037a2   fff3
0037a4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0037a6   ecc3     call    0x4986, 0        	CALL	__gptrput1
0037a8   f024
                                           ;	.line	4151; meter_logger.c	break;
0037aa   d02f     bra     0x380a           	BRA	_00900_DS_
                                           _00898_DS_:
0037ac   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4153; meter_logger.c	*c = fifo_buffer_2[fifo_tail % QUEUE_SIZE];
0037ae   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
0037b0   6e03     movwf   0x3, 0           	MOVWF	r0x03
0037b2   6a04     clrf    0x4, 0           	CLRF	r0x04
0037b4   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
0037b6   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
0037b8   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
0037ba   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0037bc   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0037be   ffe9
0037c0   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0037c2   ffea
0037c4   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
0037c6   f003
0037c8   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0037ca   ffe5
0037cc   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0037ce   ffe9
0037d0   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0037d2   fff3
0037d4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0037d6   ecc3     call    0x4986, 0        	CALL	__gptrput1
0037d8   f024
                                           ;	.line	4154; meter_logger.c	break;
0037da   d017     bra     0x380a           	BRA	_00900_DS_
                                           _00899_DS_:
0037dc   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4156; meter_logger.c	*c = fifo_buffer_3[fifo_tail % QUEUE_SIZE];
0037de   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
0037e0   6e03     movwf   0x3, 0           	MOVWF	r0x03
0037e2   6a04     clrf    0x4, 0           	CLRF	r0x04
0037e4   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
0037e6   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
0037e8   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
0037ea   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0037ec   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0037ee   ffe9
0037f0   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0037f2   ffea
0037f4   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
0037f6   f003
0037f8   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0037fa   ffe5
0037fc   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0037fe   ffe9
003800   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003802   fff3
003804   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003806   ecc3     call    0x4986, 0        	CALL	__gptrput1
003808   f024
                                           _00900_DS_:
00380a   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4159; meter_logger.c	fifo_tail++;
00380c   3f44     incfsz  0x44, 0x1, 0x1   	INCFSZ	_fifo_tail, F, B
00380e   d001     bra     0x3812           	BRA	_10970_DS_
                                           ; removed redundant BANKSEL
003810   2b45     incf    0x45, 0x1, 0x1   	INCF	(_fifo_tail + 1), F, B
                                           _10970_DS_:
003812   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4161; meter_logger.c	if (fifo_tail == QUEUE_SIZE_COMBINED) {
003814   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
003816   e103     bnz     0x381e           	BNZ	_00923_DS_
                                           ; removed redundant BANKSEL
003818   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
00381a   0a04     xorlw   0x4              	XORLW	0x04
00381c   e001     bz      0x3820           	BZ	_00924_DS_
                                           _00923_DS_:
00381e   d003     bra     0x3826           	BRA	_00902_DS_
                                           _00924_DS_:
003820   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4162; meter_logger.c	fifo_tail = 0;
003822   6b44     clrf    0x44, 0x1        	CLRF	_fifo_tail, B
                                           ; removed redundant BANKSEL
003824   6b45     clrf    0x45, 0x1        	CLRF	(_fifo_tail + 1), B
                                           _00902_DS_:
                                           ;	.line	4164; meter_logger.c	return 1;
003826   0e01     movlw   0x1              	MOVLW	0x01
003828   d001     bra     0x382c           	BRA	_00906_DS_
                                           _00904_DS_:
                                           ;	.line	4167; meter_logger.c	return 0;
00382a   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00906_DS_:
00382c   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00382e   f004
003830   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003832   f003
003834   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003836   f002
003838   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00383a   f001
00383c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00383e   f000
003840   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003842   ffd9
003844   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_put	code
                                           _fifo_put:
                                           ;	.line	4115; meter_logger.c	unsigned char fifo_put(unsigned char c) {
003ae8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003aea   ffe5
003aec   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003aee   ffd9
003af0   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003af2   ffe5
003af4   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003af6   ffe5
003af8   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003afa   ffe5
003afc   0e02     movlw   0x2              	MOVLW	0x02
003afe   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003b00   f000
                                           ;	.line	4116; meter_logger.c	if (fifo_in_use() != QUEUE_SIZE_COMBINED) {
003b02   ec31     call    0x4662, 0        	CALL	_fifo_in_use
003b04   f023
003b06   6e01     movwf   0x1, 0           	MOVWF	r0x01
003b08   cff3     movff   0xff3, 0x2       	MOVFF	PRODL, r0x02
003b0a   f002
003b0c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003b0e   e104     bnz     0x3b18           	BNZ	_00883_DS_
003b10   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003b12   0a04     xorlw   0x4              	XORLW	0x04
003b14   e101     bnz     0x3b18           	BNZ	_00883_DS_
003b16   d06d     bra     0x3bf2           	BRA	_00869_DS_
                                           _00883_DS_:
003b18   0105     movlb   0x5              	BANKSEL	(_fifo_head + 1)
                                           ;	.line	4117; meter_logger.c	switch (fifo_head/QUEUE_SIZE) {
003b1a   5143     movf    0x43, 0, 0x1     	MOVF	(_fifo_head + 1), W, B
003b1c   6e01     movwf   0x1, 0           	MOVWF	r0x01
003b1e   6a02     clrf    0x2, 0           	CLRF	r0x02
003b20   0e00     movlw   0                	MOVLW	0x00
003b22   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
003b24   e102     bnz     0x3b2a           	BNZ	_00884_DS_
003b26   0e04     movlw   0x4              	MOVLW	0x04
003b28   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
                                           _00884_DS_:
003b2a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003b2c   d052     bra     0x3bd2           	BRA	_00865_DS_
003b2e   6afa     clrf    0xfa, 0          	CLRF	PCLATH
003b30   6afb     clrf    0xfb, 0          	CLRF	PCLATU
003b32   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
003b34   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
003b36   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
003b38   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
003b3a   0bfc     andlw   0xfc             	ANDLW	0xfc
003b3c   0f4c     addlw   0x4c             	ADDLW	LOW(_00885_DS_)
003b3e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003b40   0e3b     movlw   0x3b             	MOVLW	HIGH(_00885_DS_)
003b42   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
003b44   0e00     movlw   0                	MOVLW	UPPER(_00885_DS_)
003b46   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
003b48   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
003b4a   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00885_DS_:
003b4c   efae     goto    0x3b5c           	GOTO	_00861_DS_
003b4e   f01d
003b50   efbd     goto    0x3b7a           	GOTO	_00862_DS_
003b52   f01d
003b54   efcc     goto    0x3b98           	GOTO	_00863_DS_
003b56   f01d
003b58   efdb     goto    0x3bb6           	GOTO	_00864_DS_
003b5a   f01d
                                           _00861_DS_:
003b5c   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4119; meter_logger.c	fifo_buffer_0[fifo_head % QUEUE_SIZE] = c;
003b5e   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
003b60   6e01     movwf   0x1, 0           	MOVWF	r0x01
003b62   6a02     clrf    0x2, 0           	CLRF	r0x02
003b64   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
003b66   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
003b68   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
003b6a   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003b6c   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
003b6e   ffe9
003b70   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
003b72   ffea
003b74   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
003b76   ffef
                                           ;	.line	4120; meter_logger.c	break;
003b78   d02c     bra     0x3bd2           	BRA	_00865_DS_
                                           _00862_DS_:
003b7a   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4122; meter_logger.c	fifo_buffer_1[fifo_head % QUEUE_SIZE] = c;
003b7c   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
003b7e   6e01     movwf   0x1, 0           	MOVWF	r0x01
003b80   6a02     clrf    0x2, 0           	CLRF	r0x02
003b82   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
003b84   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
003b86   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
003b88   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003b8a   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
003b8c   ffe9
003b8e   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
003b90   ffea
003b92   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
003b94   ffef
                                           ;	.line	4123; meter_logger.c	break;
003b96   d01d     bra     0x3bd2           	BRA	_00865_DS_
                                           _00863_DS_:
003b98   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4125; meter_logger.c	fifo_buffer_2[fifo_head % QUEUE_SIZE] = c;
003b9a   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
003b9c   6e01     movwf   0x1, 0           	MOVWF	r0x01
003b9e   6a02     clrf    0x2, 0           	CLRF	r0x02
003ba0   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
003ba2   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
003ba4   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
003ba6   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003ba8   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
003baa   ffe9
003bac   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
003bae   ffea
003bb0   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
003bb2   ffef
                                           ;	.line	4126; meter_logger.c	break;
003bb4   d00e     bra     0x3bd2           	BRA	_00865_DS_
                                           _00864_DS_:
003bb6   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4128; meter_logger.c	fifo_buffer_3[fifo_head % QUEUE_SIZE] = c;
003bb8   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
003bba   6e01     movwf   0x1, 0           	MOVWF	r0x01
003bbc   6a02     clrf    0x2, 0           	CLRF	r0x02
003bbe   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
003bc0   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
003bc2   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
003bc4   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003bc6   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
003bc8   ffe9
003bca   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
003bcc   ffea
003bce   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
003bd0   ffef
                                           _00865_DS_:
003bd2   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4131; meter_logger.c	fifo_head++;
003bd4   3f42     incfsz  0x42, 0x1, 0x1   	INCFSZ	_fifo_head, F, B
003bd6   d001     bra     0x3bda           	BRA	_20971_DS_
                                           ; removed redundant BANKSEL
003bd8   2b43     incf    0x43, 0x1, 0x1   	INCF	(_fifo_head + 1), F, B
                                           _20971_DS_:
003bda   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4133; meter_logger.c	if (fifo_head == QUEUE_SIZE_COMBINED) {
003bdc   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
003bde   e103     bnz     0x3be6           	BNZ	_00890_DS_
                                           ; removed redundant BANKSEL
003be0   5143     movf    0x43, 0, 0x1     	MOVF	(_fifo_head + 1), W, B
003be2   0a04     xorlw   0x4              	XORLW	0x04
003be4   e001     bz      0x3be8           	BZ	_00891_DS_
                                           _00890_DS_:
003be6   d003     bra     0x3bee           	BRA	_00867_DS_
                                           _00891_DS_:
003be8   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4134; meter_logger.c	fifo_head = 0;
003bea   6b42     clrf    0x42, 0x1        	CLRF	_fifo_head, B
                                           ; removed redundant BANKSEL
003bec   6b43     clrf    0x43, 0x1        	CLRF	(_fifo_head + 1), B
                                           _00867_DS_:
                                           ;	.line	4136; meter_logger.c	return 1;
003bee   0e01     movlw   0x1              	MOVLW	0x01
003bf0   d001     bra     0x3bf4           	BRA	_00871_DS_
                                           _00869_DS_:
                                           ;	.line	4139; meter_logger.c	return 0;
003bf2   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00871_DS_:
003bf4   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003bf6   f002
003bf8   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003bfa   f001
003bfc   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003bfe   f000
003c00   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003c02   ffd9
003c04   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_in_use	code
                                           _fifo_in_use:
                                           ;	.line	4111; meter_logger.c	unsigned int fifo_in_use() {
004662   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004664   ffe5
004666   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004668   ffd9
00466a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00466c   ffe5
00466e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004670   ffe5
004672   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4112; meter_logger.c	return fifo_head - fifo_tail;
004674   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
004676   0105     movlb   0x5              	BANKSEL	_fifo_head
004678   5d42     subwf   0x42, 0, 0x1     	SUBWF	_fifo_head, W, B
00467a   6e00     movwf   0, 0             	MOVWF	r0x00
00467c   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
00467e   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
004680   0105     movlb   0x5              	BANKSEL	(_fifo_head + 1)
004682   5943     subwfb  0x43, 0, 0x1     	SUBWFB	(_fifo_head + 1), W, B
004684   6e01     movwf   0x1, 0           	MOVWF	r0x01
004686   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
004688   fff3
00468a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00468c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00468e   f001
004690   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004692   f000
004694   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004696   ffd9
004698   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_byte	code
                                           _fsk_tx_byte:
                                           ;	.line	4106; meter_logger.c	void fsk_tx_byte(unsigned char c) {
004862   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004864   ffe5
004866   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004868   ffd9
00486a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00486c   ffe5
00486e   0e02     movlw   0x2              	MOVLW	0x02
004870   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004872   f000
                                           ;	.line	4107; meter_logger.c	fsk_proto.data = c;
004874   5000     movf    0, 0, 0          	MOVF	r0x00, W
004876   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
004878   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
                                           ;	.line	4108; meter_logger.c	fsk_proto.data_len = 8;
00487a   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
00487c   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
00487e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004880   f000
004882   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004884   ffd9
004886   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__send_fsk_low	code
                                           _send_fsk_low:
                                           ;	.line	2653; meter_logger.c	void send_fsk_low(void) {
000bdc   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000bde   ffe5
000be0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000be2   ffd9
                                           ;	.line	2654; meter_logger.c	PWM_PIN = 1;
000be4   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
000be6   0000     nop                      	nop
000be8   0000     nop                      	nop
000bea   0000     nop                      	nop
000bec   0000     nop                      	nop
000bee   0000     nop                      	nop
000bf0   0000     nop                      	nop
000bf2   0000     nop                      	nop
000bf4   0000     nop                      	nop
000bf6   0000     nop                      	nop
000bf8   0000     nop                      	nop
000bfa   0000     nop                      	nop
000bfc   0000     nop                      	nop
000bfe   0000     nop                      	nop
000c00   0000     nop                      	nop
000c02   0000     nop                      	nop
000c04   0000     nop                      	nop
000c06   0000     nop                      	nop
000c08   0000     nop                      	nop
000c0a   0000     nop                      	nop
000c0c   0000     nop                      	nop
000c0e   0000     nop                      	nop
000c10   0000     nop                      	nop
000c12   0000     nop                      	nop
000c14   0000     nop                      	nop
000c16   0000     nop                      	nop
000c18   0000     nop                      	nop
000c1a   0000     nop                      	nop
000c1c   0000     nop                      	nop
000c1e   0000     nop                      	nop
000c20   0000     nop                      	nop
000c22   0000     nop                      	nop
000c24   0000     nop                      	nop
000c26   0000     nop                      	nop
000c28   0000     nop                      	nop
000c2a   0000     nop                      	nop
000c2c   0000     nop                      	nop
000c2e   0000     nop                      	nop
000c30   0000     nop                      	nop
000c32   0000     nop                      	nop
000c34   0000     nop                      	nop
000c36   0000     nop                      	nop
000c38   0000     nop                      	nop
000c3a   0000     nop                      	nop
000c3c   0000     nop                      	nop
000c3e   0000     nop                      	nop
000c40   0000     nop                      	nop
000c42   0000     nop                      	nop
000c44   0000     nop                      	nop
000c46   0000     nop                      	nop
000c48   0000     nop                      	nop
000c4a   0000     nop                      	nop
000c4c   0000     nop                      	nop
000c4e   0000     nop                      	nop
000c50   0000     nop                      	nop
000c52   0000     nop                      	nop
000c54   0000     nop                      	nop
000c56   0000     nop                      	nop
000c58   0000     nop                      	nop
000c5a   0000     nop                      	nop
000c5c   0000     nop                      	nop
000c5e   0000     nop                      	nop
000c60   0000     nop                      	nop
000c62   0000     nop                      	nop
000c64   0000     nop                      	nop
000c66   0000     nop                      	nop
000c68   0000     nop                      	nop
000c6a   0000     nop                      	nop
000c6c   0000     nop                      	nop
000c6e   0000     nop                      	nop
000c70   0000     nop                      	nop
000c72   0000     nop                      	nop
000c74   0000     nop                      	nop
000c76   0000     nop                      	nop
000c78   0000     nop                      	nop
000c7a   0000     nop                      	nop
000c7c   0000     nop                      	nop
000c7e   0000     nop                      	nop
000c80   0000     nop                      	nop
000c82   0000     nop                      	nop
000c84   0000     nop                      	nop
000c86   0000     nop                      	nop
000c88   0000     nop                      	nop
000c8a   0000     nop                      	nop
000c8c   0000     nop                      	nop
000c8e   0000     nop                      	nop
000c90   0000     nop                      	nop
000c92   0000     nop                      	nop
000c94   0000     nop                      	nop
000c96   0000     nop                      	nop
000c98   0000     nop                      	nop
000c9a   0000     nop                      	nop
000c9c   0000     nop                      	nop
000c9e   0000     nop                      	nop
000ca0   0000     nop                      	nop
000ca2   0000     nop                      	nop
000ca4   0000     nop                      	nop
000ca6   0000     nop                      	nop
000ca8   0000     nop                      	nop
000caa   0000     nop                      	nop
000cac   0000     nop                      	nop
000cae   0000     nop                      	nop
000cb0   0000     nop                      	nop
000cb2   0000     nop                      	nop
000cb4   0000     nop                      	nop
000cb6   0000     nop                      	nop
000cb8   0000     nop                      	nop
000cba   0000     nop                      	nop
000cbc   0000     nop                      	nop
000cbe   0000     nop                      	nop
000cc0   0000     nop                      	nop
000cc2   0000     nop                      	nop
000cc4   0000     nop                      	nop
000cc6   0000     nop                      	nop
000cc8   0000     nop                      	nop
000cca   0000     nop                      	nop
000ccc   0000     nop                      	nop
000cce   0000     nop                      	nop
000cd0   0000     nop                      	nop
000cd2   0000     nop                      	nop
000cd4   0000     nop                      	nop
000cd6   0000     nop                      	nop
000cd8   0000     nop                      	nop
000cda   0000     nop                      	nop
000cdc   0000     nop                      	nop
000cde   0000     nop                      	nop
000ce0   0000     nop                      	nop
000ce2   0000     nop                      	nop
000ce4   0000     nop                      	nop
000ce6   0000     nop                      	nop
000ce8   0000     nop                      	nop
000cea   0000     nop                      	nop
000cec   0000     nop                      	nop
000cee   0000     nop                      	nop
000cf0   0000     nop                      	nop
000cf2   0000     nop                      	nop
000cf4   0000     nop                      	nop
000cf6   0000     nop                      	nop
000cf8   0000     nop                      	nop
000cfa   0000     nop                      	nop
000cfc   0000     nop                      	nop
000cfe   0000     nop                      	nop
000d00   0000     nop                      	nop
000d02   0000     nop                      	nop
000d04   0000     nop                      	nop
000d06   0000     nop                      	nop
000d08   0000     nop                      	nop
000d0a   0000     nop                      	nop
000d0c   0000     nop                      	nop
000d0e   0000     nop                      	nop
000d10   0000     nop                      	nop
000d12   0000     nop                      	nop
000d14   0000     nop                      	nop
000d16   0000     nop                      	nop
000d18   0000     nop                      	nop
000d1a   0000     nop                      	nop
000d1c   0000     nop                      	nop
000d1e   0000     nop                      	nop
000d20   0000     nop                      	nop
000d22   0000     nop                      	nop
000d24   0000     nop                      	nop
000d26   0000     nop                      	nop
000d28   0000     nop                      	nop
000d2a   0000     nop                      	nop
000d2c   0000     nop                      	nop
000d2e   0000     nop                      	nop
000d30   0000     nop                      	nop
000d32   0000     nop                      	nop
000d34   0000     nop                      	nop
000d36   0000     nop                      	nop
000d38   0000     nop                      	nop
000d3a   0000     nop                      	nop
000d3c   0000     nop                      	nop
000d3e   0000     nop                      	nop
000d40   0000     nop                      	nop
000d42   0000     nop                      	nop
000d44   0000     nop                      	nop
000d46   0000     nop                      	nop
000d48   0000     nop                      	nop
000d4a   0000     nop                      	nop
000d4c   0000     nop                      	nop
000d4e   0000     nop                      	nop
000d50   0000     nop                      	nop
000d52   0000     nop                      	nop
000d54   0000     nop                      	nop
000d56   0000     nop                      	nop
000d58   0000     nop                      	nop
000d5a   0000     nop                      	nop
000d5c   0000     nop                      	nop
000d5e   0000     nop                      	nop
000d60   0000     nop                      	nop
000d62   0000     nop                      	nop
000d64   0000     nop                      	nop
000d66   0000     nop                      	nop
000d68   0000     nop                      	nop
000d6a   0000     nop                      	nop
000d6c   0000     nop                      	nop
000d6e   0000     nop                      	nop
000d70   0000     nop                      	nop
000d72   0000     nop                      	nop
000d74   0000     nop                      	nop
000d76   0000     nop                      	nop
000d78   0000     nop                      	nop
000d7a   0000     nop                      	nop
000d7c   0000     nop                      	nop
                                           	
                                           ;	.line	2861; meter_logger.c	PWM_PIN = 0;
000d7e   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
000d80   0000     nop                      	nop
000d82   0000     nop                      	nop
000d84   0000     nop                      	nop
000d86   0000     nop                      	nop
000d88   0000     nop                      	nop
000d8a   0000     nop                      	nop
000d8c   0000     nop                      	nop
000d8e   0000     nop                      	nop
000d90   0000     nop                      	nop
000d92   0000     nop                      	nop
000d94   0000     nop                      	nop
000d96   0000     nop                      	nop
000d98   0000     nop                      	nop
000d9a   0000     nop                      	nop
000d9c   0000     nop                      	nop
000d9e   0000     nop                      	nop
000da0   0000     nop                      	nop
000da2   0000     nop                      	nop
000da4   0000     nop                      	nop
000da6   0000     nop                      	nop
000da8   0000     nop                      	nop
000daa   0000     nop                      	nop
000dac   0000     nop                      	nop
000dae   0000     nop                      	nop
000db0   0000     nop                      	nop
000db2   0000     nop                      	nop
000db4   0000     nop                      	nop
000db6   0000     nop                      	nop
000db8   0000     nop                      	nop
000dba   0000     nop                      	nop
000dbc   0000     nop                      	nop
000dbe   0000     nop                      	nop
000dc0   0000     nop                      	nop
000dc2   0000     nop                      	nop
000dc4   0000     nop                      	nop
000dc6   0000     nop                      	nop
000dc8   0000     nop                      	nop
000dca   0000     nop                      	nop
000dcc   0000     nop                      	nop
000dce   0000     nop                      	nop
000dd0   0000     nop                      	nop
000dd2   0000     nop                      	nop
000dd4   0000     nop                      	nop
000dd6   0000     nop                      	nop
000dd8   0000     nop                      	nop
000dda   0000     nop                      	nop
000ddc   0000     nop                      	nop
000dde   0000     nop                      	nop
000de0   0000     nop                      	nop
000de2   0000     nop                      	nop
000de4   0000     nop                      	nop
000de6   0000     nop                      	nop
000de8   0000     nop                      	nop
000dea   0000     nop                      	nop
000dec   0000     nop                      	nop
000dee   0000     nop                      	nop
000df0   0000     nop                      	nop
000df2   0000     nop                      	nop
000df4   0000     nop                      	nop
000df6   0000     nop                      	nop
000df8   0000     nop                      	nop
000dfa   0000     nop                      	nop
000dfc   0000     nop                      	nop
000dfe   0000     nop                      	nop
000e00   0000     nop                      	nop
000e02   0000     nop                      	nop
000e04   0000     nop                      	nop
000e06   0000     nop                      	nop
000e08   0000     nop                      	nop
000e0a   0000     nop                      	nop
000e0c   0000     nop                      	nop
000e0e   0000     nop                      	nop
000e10   0000     nop                      	nop
000e12   0000     nop                      	nop
000e14   0000     nop                      	nop
000e16   0000     nop                      	nop
000e18   0000     nop                      	nop
000e1a   0000     nop                      	nop
000e1c   0000     nop                      	nop
000e1e   0000     nop                      	nop
000e20   0000     nop                      	nop
000e22   0000     nop                      	nop
000e24   0000     nop                      	nop
000e26   0000     nop                      	nop
000e28   0000     nop                      	nop
000e2a   0000     nop                      	nop
000e2c   0000     nop                      	nop
000e2e   0000     nop                      	nop
000e30   0000     nop                      	nop
000e32   0000     nop                      	nop
000e34   0000     nop                      	nop
000e36   0000     nop                      	nop
000e38   0000     nop                      	nop
000e3a   0000     nop                      	nop
000e3c   0000     nop                      	nop
000e3e   0000     nop                      	nop
000e40   0000     nop                      	nop
000e42   0000     nop                      	nop
000e44   0000     nop                      	nop
000e46   0000     nop                      	nop
000e48   0000     nop                      	nop
000e4a   0000     nop                      	nop
000e4c   0000     nop                      	nop
000e4e   0000     nop                      	nop
000e50   0000     nop                      	nop
000e52   0000     nop                      	nop
000e54   0000     nop                      	nop
000e56   0000     nop                      	nop
000e58   0000     nop                      	nop
000e5a   0000     nop                      	nop
000e5c   0000     nop                      	nop
000e5e   0000     nop                      	nop
000e60   0000     nop                      	nop
000e62   0000     nop                      	nop
000e64   0000     nop                      	nop
000e66   0000     nop                      	nop
000e68   0000     nop                      	nop
000e6a   0000     nop                      	nop
000e6c   0000     nop                      	nop
000e6e   0000     nop                      	nop
000e70   0000     nop                      	nop
000e72   0000     nop                      	nop
000e74   0000     nop                      	nop
000e76   0000     nop                      	nop
000e78   0000     nop                      	nop
000e7a   0000     nop                      	nop
000e7c   0000     nop                      	nop
000e7e   0000     nop                      	nop
000e80   0000     nop                      	nop
000e82   0000     nop                      	nop
000e84   0000     nop                      	nop
000e86   0000     nop                      	nop
000e88   0000     nop                      	nop
000e8a   0000     nop                      	nop
000e8c   0000     nop                      	nop
000e8e   0000     nop                      	nop
000e90   0000     nop                      	nop
000e92   0000     nop                      	nop
000e94   0000     nop                      	nop
000e96   0000     nop                      	nop
000e98   0000     nop                      	nop
000e9a   0000     nop                      	nop
000e9c   0000     nop                      	nop
000e9e   0000     nop                      	nop
000ea0   0000     nop                      	nop
000ea2   0000     nop                      	nop
000ea4   0000     nop                      	nop
000ea6   0000     nop                      	nop
000ea8   0000     nop                      	nop
000eaa   0000     nop                      	nop
000eac   0000     nop                      	nop
000eae   0000     nop                      	nop
000eb0   0000     nop                      	nop
000eb2   0000     nop                      	nop
000eb4   0000     nop                      	nop
000eb6   0000     nop                      	nop
000eb8   0000     nop                      	nop
000eba   0000     nop                      	nop
000ebc   0000     nop                      	nop
000ebe   0000     nop                      	nop
000ec0   0000     nop                      	nop
000ec2   0000     nop                      	nop
000ec4   0000     nop                      	nop
000ec6   0000     nop                      	nop
000ec8   0000     nop                      	nop
000eca   0000     nop                      	nop
000ecc   0000     nop                      	nop
000ece   0000     nop                      	nop
000ed0   0000     nop                      	nop
000ed2   0000     nop                      	nop
000ed4   0000     nop                      	nop
000ed6   0000     nop                      	nop
000ed8   0000     nop                      	nop
000eda   0000     nop                      	nop
000edc   0000     nop                      	nop
000ede   0000     nop                      	nop
000ee0   0000     nop                      	nop
000ee2   0000     nop                      	nop
000ee4   0000     nop                      	nop
000ee6   0000     nop                      	nop
000ee8   0000     nop                      	nop
000eea   0000     nop                      	nop
000eec   0000     nop                      	nop
000eee   0000     nop                      	nop
000ef0   0000     nop                      	nop
000ef2   0000     nop                      	nop
000ef4   0000     nop                      	nop
000ef6   0000     nop                      	nop
000ef8   0000     nop                      	nop
000efa   0000     nop                      	nop
000efc   0000     nop                      	nop
000efe   0000     nop                      	nop
000f00   0000     nop                      	nop
000f02   0000     nop                      	nop
000f04   0000     nop                      	nop
000f06   0000     nop                      	nop
000f08   0000     nop                      	nop
000f0a   0000     nop                      	nop
000f0c   0000     nop                      	nop
000f0e   0000     nop                      	nop
000f10   0000     nop                      	nop
000f12   0000     nop                      	nop
000f14   0000     nop                      	nop
000f16   0000     nop                      	nop
                                           	
                                           ;	.line	3068; meter_logger.c	PWM_PIN = 1;
000f18   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
000f1a   0000     nop                      	nop
000f1c   0000     nop                      	nop
000f1e   0000     nop                      	nop
000f20   0000     nop                      	nop
000f22   0000     nop                      	nop
000f24   0000     nop                      	nop
000f26   0000     nop                      	nop
000f28   0000     nop                      	nop
000f2a   0000     nop                      	nop
000f2c   0000     nop                      	nop
000f2e   0000     nop                      	nop
000f30   0000     nop                      	nop
000f32   0000     nop                      	nop
000f34   0000     nop                      	nop
000f36   0000     nop                      	nop
000f38   0000     nop                      	nop
000f3a   0000     nop                      	nop
000f3c   0000     nop                      	nop
000f3e   0000     nop                      	nop
000f40   0000     nop                      	nop
000f42   0000     nop                      	nop
000f44   0000     nop                      	nop
000f46   0000     nop                      	nop
000f48   0000     nop                      	nop
000f4a   0000     nop                      	nop
000f4c   0000     nop                      	nop
000f4e   0000     nop                      	nop
000f50   0000     nop                      	nop
000f52   0000     nop                      	nop
000f54   0000     nop                      	nop
000f56   0000     nop                      	nop
000f58   0000     nop                      	nop
000f5a   0000     nop                      	nop
000f5c   0000     nop                      	nop
000f5e   0000     nop                      	nop
000f60   0000     nop                      	nop
000f62   0000     nop                      	nop
000f64   0000     nop                      	nop
000f66   0000     nop                      	nop
000f68   0000     nop                      	nop
000f6a   0000     nop                      	nop
000f6c   0000     nop                      	nop
000f6e   0000     nop                      	nop
000f70   0000     nop                      	nop
000f72   0000     nop                      	nop
000f74   0000     nop                      	nop
000f76   0000     nop                      	nop
000f78   0000     nop                      	nop
000f7a   0000     nop                      	nop
000f7c   0000     nop                      	nop
000f7e   0000     nop                      	nop
000f80   0000     nop                      	nop
000f82   0000     nop                      	nop
000f84   0000     nop                      	nop
000f86   0000     nop                      	nop
000f88   0000     nop                      	nop
000f8a   0000     nop                      	nop
000f8c   0000     nop                      	nop
000f8e   0000     nop                      	nop
000f90   0000     nop                      	nop
000f92   0000     nop                      	nop
000f94   0000     nop                      	nop
000f96   0000     nop                      	nop
000f98   0000     nop                      	nop
000f9a   0000     nop                      	nop
000f9c   0000     nop                      	nop
000f9e   0000     nop                      	nop
000fa0   0000     nop                      	nop
000fa2   0000     nop                      	nop
000fa4   0000     nop                      	nop
000fa6   0000     nop                      	nop
000fa8   0000     nop                      	nop
000faa   0000     nop                      	nop
000fac   0000     nop                      	nop
000fae   0000     nop                      	nop
000fb0   0000     nop                      	nop
000fb2   0000     nop                      	nop
000fb4   0000     nop                      	nop
000fb6   0000     nop                      	nop
000fb8   0000     nop                      	nop
000fba   0000     nop                      	nop
000fbc   0000     nop                      	nop
000fbe   0000     nop                      	nop
000fc0   0000     nop                      	nop
000fc2   0000     nop                      	nop
000fc4   0000     nop                      	nop
000fc6   0000     nop                      	nop
000fc8   0000     nop                      	nop
000fca   0000     nop                      	nop
000fcc   0000     nop                      	nop
000fce   0000     nop                      	nop
000fd0   0000     nop                      	nop
000fd2   0000     nop                      	nop
000fd4   0000     nop                      	nop
000fd6   0000     nop                      	nop
000fd8   0000     nop                      	nop
000fda   0000     nop                      	nop
000fdc   0000     nop                      	nop
000fde   0000     nop                      	nop
000fe0   0000     nop                      	nop
000fe2   0000     nop                      	nop
000fe4   0000     nop                      	nop
000fe6   0000     nop                      	nop
000fe8   0000     nop                      	nop
000fea   0000     nop                      	nop
000fec   0000     nop                      	nop
000fee   0000     nop                      	nop
000ff0   0000     nop                      	nop
000ff2   0000     nop                      	nop
000ff4   0000     nop                      	nop
000ff6   0000     nop                      	nop
000ff8   0000     nop                      	nop
000ffa   0000     nop                      	nop
000ffc   0000     nop                      	nop
000ffe   0000     nop                      	nop
001000   0000     nop                      	nop
001002   0000     nop                      	nop
001004   0000     nop                      	nop
001006   0000     nop                      	nop
001008   0000     nop                      	nop
00100a   0000     nop                      	nop
00100c   0000     nop                      	nop
00100e   0000     nop                      	nop
001010   0000     nop                      	nop
001012   0000     nop                      	nop
001014   0000     nop                      	nop
001016   0000     nop                      	nop
001018   0000     nop                      	nop
00101a   0000     nop                      	nop
00101c   0000     nop                      	nop
00101e   0000     nop                      	nop
001020   0000     nop                      	nop
001022   0000     nop                      	nop
001024   0000     nop                      	nop
001026   0000     nop                      	nop
001028   0000     nop                      	nop
00102a   0000     nop                      	nop
00102c   0000     nop                      	nop
00102e   0000     nop                      	nop
001030   0000     nop                      	nop
001032   0000     nop                      	nop
001034   0000     nop                      	nop
001036   0000     nop                      	nop
001038   0000     nop                      	nop
00103a   0000     nop                      	nop
00103c   0000     nop                      	nop
00103e   0000     nop                      	nop
001040   0000     nop                      	nop
001042   0000     nop                      	nop
001044   0000     nop                      	nop
001046   0000     nop                      	nop
001048   0000     nop                      	nop
00104a   0000     nop                      	nop
00104c   0000     nop                      	nop
00104e   0000     nop                      	nop
001050   0000     nop                      	nop
001052   0000     nop                      	nop
001054   0000     nop                      	nop
001056   0000     nop                      	nop
001058   0000     nop                      	nop
00105a   0000     nop                      	nop
00105c   0000     nop                      	nop
00105e   0000     nop                      	nop
001060   0000     nop                      	nop
001062   0000     nop                      	nop
001064   0000     nop                      	nop
001066   0000     nop                      	nop
001068   0000     nop                      	nop
00106a   0000     nop                      	nop
00106c   0000     nop                      	nop
00106e   0000     nop                      	nop
001070   0000     nop                      	nop
001072   0000     nop                      	nop
001074   0000     nop                      	nop
001076   0000     nop                      	nop
001078   0000     nop                      	nop
00107a   0000     nop                      	nop
00107c   0000     nop                      	nop
00107e   0000     nop                      	nop
001080   0000     nop                      	nop
001082   0000     nop                      	nop
001084   0000     nop                      	nop
001086   0000     nop                      	nop
001088   0000     nop                      	nop
00108a   0000     nop                      	nop
00108c   0000     nop                      	nop
00108e   0000     nop                      	nop
001090   0000     nop                      	nop
001092   0000     nop                      	nop
001094   0000     nop                      	nop
001096   0000     nop                      	nop
001098   0000     nop                      	nop
00109a   0000     nop                      	nop
00109c   0000     nop                      	nop
00109e   0000     nop                      	nop
0010a0   0000     nop                      	nop
0010a2   0000     nop                      	nop
0010a4   0000     nop                      	nop
0010a6   0000     nop                      	nop
0010a8   0000     nop                      	nop
0010aa   0000     nop                      	nop
0010ac   0000     nop                      	nop
0010ae   0000     nop                      	nop
0010b0   0000     nop                      	nop
                                           	
                                           ;	.line	3275; meter_logger.c	PWM_PIN = 0;
0010b2   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
0010b4   0000     nop                      	nop
0010b6   0000     nop                      	nop
0010b8   0000     nop                      	nop
0010ba   0000     nop                      	nop
0010bc   0000     nop                      	nop
0010be   0000     nop                      	nop
0010c0   0000     nop                      	nop
0010c2   0000     nop                      	nop
0010c4   0000     nop                      	nop
0010c6   0000     nop                      	nop
0010c8   0000     nop                      	nop
0010ca   0000     nop                      	nop
0010cc   0000     nop                      	nop
0010ce   0000     nop                      	nop
0010d0   0000     nop                      	nop
0010d2   0000     nop                      	nop
0010d4   0000     nop                      	nop
0010d6   0000     nop                      	nop
0010d8   0000     nop                      	nop
0010da   0000     nop                      	nop
0010dc   0000     nop                      	nop
0010de   0000     nop                      	nop
0010e0   0000     nop                      	nop
0010e2   0000     nop                      	nop
0010e4   0000     nop                      	nop
0010e6   0000     nop                      	nop
0010e8   0000     nop                      	nop
0010ea   0000     nop                      	nop
0010ec   0000     nop                      	nop
0010ee   0000     nop                      	nop
0010f0   0000     nop                      	nop
0010f2   0000     nop                      	nop
0010f4   0000     nop                      	nop
0010f6   0000     nop                      	nop
0010f8   0000     nop                      	nop
0010fa   0000     nop                      	nop
0010fc   0000     nop                      	nop
0010fe   0000     nop                      	nop
001100   0000     nop                      	nop
001102   0000     nop                      	nop
001104   0000     nop                      	nop
001106   0000     nop                      	nop
001108   0000     nop                      	nop
00110a   0000     nop                      	nop
00110c   0000     nop                      	nop
00110e   0000     nop                      	nop
001110   0000     nop                      	nop
001112   0000     nop                      	nop
001114   0000     nop                      	nop
001116   0000     nop                      	nop
001118   0000     nop                      	nop
00111a   0000     nop                      	nop
00111c   0000     nop                      	nop
00111e   0000     nop                      	nop
001120   0000     nop                      	nop
001122   0000     nop                      	nop
001124   0000     nop                      	nop
001126   0000     nop                      	nop
001128   0000     nop                      	nop
00112a   0000     nop                      	nop
00112c   0000     nop                      	nop
00112e   0000     nop                      	nop
001130   0000     nop                      	nop
001132   0000     nop                      	nop
001134   0000     nop                      	nop
001136   0000     nop                      	nop
001138   0000     nop                      	nop
00113a   0000     nop                      	nop
00113c   0000     nop                      	nop
00113e   0000     nop                      	nop
001140   0000     nop                      	nop
001142   0000     nop                      	nop
001144   0000     nop                      	nop
001146   0000     nop                      	nop
001148   0000     nop                      	nop
00114a   0000     nop                      	nop
00114c   0000     nop                      	nop
00114e   0000     nop                      	nop
001150   0000     nop                      	nop
001152   0000     nop                      	nop
001154   0000     nop                      	nop
001156   0000     nop                      	nop
001158   0000     nop                      	nop
00115a   0000     nop                      	nop
00115c   0000     nop                      	nop
00115e   0000     nop                      	nop
001160   0000     nop                      	nop
001162   0000     nop                      	nop
001164   0000     nop                      	nop
001166   0000     nop                      	nop
001168   0000     nop                      	nop
00116a   0000     nop                      	nop
00116c   0000     nop                      	nop
00116e   0000     nop                      	nop
001170   0000     nop                      	nop
001172   0000     nop                      	nop
001174   0000     nop                      	nop
001176   0000     nop                      	nop
001178   0000     nop                      	nop
00117a   0000     nop                      	nop
00117c   0000     nop                      	nop
00117e   0000     nop                      	nop
001180   0000     nop                      	nop
001182   0000     nop                      	nop
001184   0000     nop                      	nop
001186   0000     nop                      	nop
001188   0000     nop                      	nop
00118a   0000     nop                      	nop
00118c   0000     nop                      	nop
00118e   0000     nop                      	nop
001190   0000     nop                      	nop
001192   0000     nop                      	nop
001194   0000     nop                      	nop
001196   0000     nop                      	nop
001198   0000     nop                      	nop
00119a   0000     nop                      	nop
00119c   0000     nop                      	nop
00119e   0000     nop                      	nop
0011a0   0000     nop                      	nop
0011a2   0000     nop                      	nop
0011a4   0000     nop                      	nop
0011a6   0000     nop                      	nop
0011a8   0000     nop                      	nop
0011aa   0000     nop                      	nop
0011ac   0000     nop                      	nop
0011ae   0000     nop                      	nop
0011b0   0000     nop                      	nop
0011b2   0000     nop                      	nop
0011b4   0000     nop                      	nop
0011b6   0000     nop                      	nop
0011b8   0000     nop                      	nop
0011ba   0000     nop                      	nop
0011bc   0000     nop                      	nop
0011be   0000     nop                      	nop
0011c0   0000     nop                      	nop
0011c2   0000     nop                      	nop
0011c4   0000     nop                      	nop
0011c6   0000     nop                      	nop
0011c8   0000     nop                      	nop
0011ca   0000     nop                      	nop
0011cc   0000     nop                      	nop
0011ce   0000     nop                      	nop
0011d0   0000     nop                      	nop
0011d2   0000     nop                      	nop
0011d4   0000     nop                      	nop
0011d6   0000     nop                      	nop
0011d8   0000     nop                      	nop
0011da   0000     nop                      	nop
0011dc   0000     nop                      	nop
0011de   0000     nop                      	nop
0011e0   0000     nop                      	nop
0011e2   0000     nop                      	nop
0011e4   0000     nop                      	nop
0011e6   0000     nop                      	nop
0011e8   0000     nop                      	nop
0011ea   0000     nop                      	nop
0011ec   0000     nop                      	nop
0011ee   0000     nop                      	nop
0011f0   0000     nop                      	nop
0011f2   0000     nop                      	nop
0011f4   0000     nop                      	nop
0011f6   0000     nop                      	nop
0011f8   0000     nop                      	nop
0011fa   0000     nop                      	nop
0011fc   0000     nop                      	nop
0011fe   0000     nop                      	nop
001200   0000     nop                      	nop
001202   0000     nop                      	nop
001204   0000     nop                      	nop
001206   0000     nop                      	nop
001208   0000     nop                      	nop
00120a   0000     nop                      	nop
00120c   0000     nop                      	nop
00120e   0000     nop                      	nop
001210   0000     nop                      	nop
001212   0000     nop                      	nop
001214   0000     nop                      	nop
001216   0000     nop                      	nop
001218   0000     nop                      	nop
00121a   0000     nop                      	nop
00121c   0000     nop                      	nop
00121e   0000     nop                      	nop
001220   0000     nop                      	nop
001222   0000     nop                      	nop
001224   0000     nop                      	nop
001226   0000     nop                      	nop
001228   0000     nop                      	nop
00122a   0000     nop                      	nop
00122c   0000     nop                      	nop
00122e   0000     nop                      	nop
001230   0000     nop                      	nop
001232   0000     nop                      	nop
001234   0000     nop                      	nop
001236   0000     nop                      	nop
001238   0000     nop                      	nop
00123a   0000     nop                      	nop
00123c   0000     nop                      	nop
00123e   0000     nop                      	nop
001240   0000     nop                      	nop
001242   0000     nop                      	nop
001244   0000     nop                      	nop
001246   0000     nop                      	nop
001248   0000     nop                      	nop
00124a   0000     nop                      	nop
                                           	
                                           ;	.line	3482; meter_logger.c	PWM_PIN = 1;
00124c   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
00124e   0000     nop                      	nop
001250   0000     nop                      	nop
001252   0000     nop                      	nop
001254   0000     nop                      	nop
001256   0000     nop                      	nop
001258   0000     nop                      	nop
00125a   0000     nop                      	nop
00125c   0000     nop                      	nop
00125e   0000     nop                      	nop
001260   0000     nop                      	nop
001262   0000     nop                      	nop
001264   0000     nop                      	nop
001266   0000     nop                      	nop
001268   0000     nop                      	nop
00126a   0000     nop                      	nop
00126c   0000     nop                      	nop
00126e   0000     nop                      	nop
001270   0000     nop                      	nop
001272   0000     nop                      	nop
001274   0000     nop                      	nop
001276   0000     nop                      	nop
001278   0000     nop                      	nop
00127a   0000     nop                      	nop
00127c   0000     nop                      	nop
00127e   0000     nop                      	nop
001280   0000     nop                      	nop
001282   0000     nop                      	nop
001284   0000     nop                      	nop
001286   0000     nop                      	nop
001288   0000     nop                      	nop
00128a   0000     nop                      	nop
00128c   0000     nop                      	nop
00128e   0000     nop                      	nop
001290   0000     nop                      	nop
001292   0000     nop                      	nop
001294   0000     nop                      	nop
001296   0000     nop                      	nop
001298   0000     nop                      	nop
00129a   0000     nop                      	nop
00129c   0000     nop                      	nop
00129e   0000     nop                      	nop
0012a0   0000     nop                      	nop
0012a2   0000     nop                      	nop
0012a4   0000     nop                      	nop
0012a6   0000     nop                      	nop
0012a8   0000     nop                      	nop
0012aa   0000     nop                      	nop
0012ac   0000     nop                      	nop
0012ae   0000     nop                      	nop
0012b0   0000     nop                      	nop
0012b2   0000     nop                      	nop
0012b4   0000     nop                      	nop
0012b6   0000     nop                      	nop
0012b8   0000     nop                      	nop
0012ba   0000     nop                      	nop
0012bc   0000     nop                      	nop
0012be   0000     nop                      	nop
0012c0   0000     nop                      	nop
0012c2   0000     nop                      	nop
0012c4   0000     nop                      	nop
0012c6   0000     nop                      	nop
0012c8   0000     nop                      	nop
0012ca   0000     nop                      	nop
0012cc   0000     nop                      	nop
0012ce   0000     nop                      	nop
0012d0   0000     nop                      	nop
0012d2   0000     nop                      	nop
0012d4   0000     nop                      	nop
0012d6   0000     nop                      	nop
0012d8   0000     nop                      	nop
0012da   0000     nop                      	nop
0012dc   0000     nop                      	nop
0012de   0000     nop                      	nop
0012e0   0000     nop                      	nop
0012e2   0000     nop                      	nop
0012e4   0000     nop                      	nop
0012e6   0000     nop                      	nop
0012e8   0000     nop                      	nop
0012ea   0000     nop                      	nop
0012ec   0000     nop                      	nop
0012ee   0000     nop                      	nop
0012f0   0000     nop                      	nop
0012f2   0000     nop                      	nop
0012f4   0000     nop                      	nop
0012f6   0000     nop                      	nop
0012f8   0000     nop                      	nop
0012fa   0000     nop                      	nop
0012fc   0000     nop                      	nop
0012fe   0000     nop                      	nop
001300   0000     nop                      	nop
001302   0000     nop                      	nop
001304   0000     nop                      	nop
001306   0000     nop                      	nop
001308   0000     nop                      	nop
00130a   0000     nop                      	nop
00130c   0000     nop                      	nop
00130e   0000     nop                      	nop
001310   0000     nop                      	nop
001312   0000     nop                      	nop
001314   0000     nop                      	nop
001316   0000     nop                      	nop
001318   0000     nop                      	nop
00131a   0000     nop                      	nop
00131c   0000     nop                      	nop
00131e   0000     nop                      	nop
001320   0000     nop                      	nop
001322   0000     nop                      	nop
001324   0000     nop                      	nop
001326   0000     nop                      	nop
001328   0000     nop                      	nop
00132a   0000     nop                      	nop
00132c   0000     nop                      	nop
00132e   0000     nop                      	nop
001330   0000     nop                      	nop
001332   0000     nop                      	nop
001334   0000     nop                      	nop
001336   0000     nop                      	nop
001338   0000     nop                      	nop
00133a   0000     nop                      	nop
00133c   0000     nop                      	nop
00133e   0000     nop                      	nop
001340   0000     nop                      	nop
001342   0000     nop                      	nop
001344   0000     nop                      	nop
001346   0000     nop                      	nop
001348   0000     nop                      	nop
00134a   0000     nop                      	nop
00134c   0000     nop                      	nop
00134e   0000     nop                      	nop
001350   0000     nop                      	nop
001352   0000     nop                      	nop
001354   0000     nop                      	nop
001356   0000     nop                      	nop
001358   0000     nop                      	nop
00135a   0000     nop                      	nop
00135c   0000     nop                      	nop
00135e   0000     nop                      	nop
001360   0000     nop                      	nop
001362   0000     nop                      	nop
001364   0000     nop                      	nop
001366   0000     nop                      	nop
001368   0000     nop                      	nop
00136a   0000     nop                      	nop
00136c   0000     nop                      	nop
00136e   0000     nop                      	nop
001370   0000     nop                      	nop
001372   0000     nop                      	nop
001374   0000     nop                      	nop
001376   0000     nop                      	nop
001378   0000     nop                      	nop
00137a   0000     nop                      	nop
00137c   0000     nop                      	nop
00137e   0000     nop                      	nop
001380   0000     nop                      	nop
001382   0000     nop                      	nop
001384   0000     nop                      	nop
001386   0000     nop                      	nop
001388   0000     nop                      	nop
00138a   0000     nop                      	nop
00138c   0000     nop                      	nop
00138e   0000     nop                      	nop
001390   0000     nop                      	nop
001392   0000     nop                      	nop
001394   0000     nop                      	nop
001396   0000     nop                      	nop
001398   0000     nop                      	nop
00139a   0000     nop                      	nop
00139c   0000     nop                      	nop
00139e   0000     nop                      	nop
0013a0   0000     nop                      	nop
0013a2   0000     nop                      	nop
0013a4   0000     nop                      	nop
0013a6   0000     nop                      	nop
0013a8   0000     nop                      	nop
0013aa   0000     nop                      	nop
0013ac   0000     nop                      	nop
0013ae   0000     nop                      	nop
0013b0   0000     nop                      	nop
0013b2   0000     nop                      	nop
0013b4   0000     nop                      	nop
0013b6   0000     nop                      	nop
0013b8   0000     nop                      	nop
0013ba   0000     nop                      	nop
0013bc   0000     nop                      	nop
0013be   0000     nop                      	nop
0013c0   0000     nop                      	nop
0013c2   0000     nop                      	nop
0013c4   0000     nop                      	nop
0013c6   0000     nop                      	nop
0013c8   0000     nop                      	nop
0013ca   0000     nop                      	nop
0013cc   0000     nop                      	nop
0013ce   0000     nop                      	nop
0013d0   0000     nop                      	nop
0013d2   0000     nop                      	nop
0013d4   0000     nop                      	nop
0013d6   0000     nop                      	nop
0013d8   0000     nop                      	nop
0013da   0000     nop                      	nop
0013dc   0000     nop                      	nop
0013de   0000     nop                      	nop
0013e0   0000     nop                      	nop
0013e2   0000     nop                      	nop
0013e4   0000     nop                      	nop
                                           	
                                           ;	.line	3689; meter_logger.c	PWM_PIN = 0;
0013e6   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
0013e8   0000     nop                      	nop
0013ea   0000     nop                      	nop
0013ec   0000     nop                      	nop
0013ee   0000     nop                      	nop
0013f0   0000     nop                      	nop
0013f2   0000     nop                      	nop
0013f4   0000     nop                      	nop
0013f6   0000     nop                      	nop
0013f8   0000     nop                      	nop
0013fa   0000     nop                      	nop
0013fc   0000     nop                      	nop
0013fe   0000     nop                      	nop
001400   0000     nop                      	nop
001402   0000     nop                      	nop
001404   0000     nop                      	nop
001406   0000     nop                      	nop
001408   0000     nop                      	nop
00140a   0000     nop                      	nop
00140c   0000     nop                      	nop
00140e   0000     nop                      	nop
001410   0000     nop                      	nop
001412   0000     nop                      	nop
001414   0000     nop                      	nop
001416   0000     nop                      	nop
001418   0000     nop                      	nop
00141a   0000     nop                      	nop
00141c   0000     nop                      	nop
00141e   0000     nop                      	nop
001420   0000     nop                      	nop
001422   0000     nop                      	nop
001424   0000     nop                      	nop
001426   0000     nop                      	nop
001428   0000     nop                      	nop
00142a   0000     nop                      	nop
00142c   0000     nop                      	nop
00142e   0000     nop                      	nop
001430   0000     nop                      	nop
001432   0000     nop                      	nop
001434   0000     nop                      	nop
001436   0000     nop                      	nop
001438   0000     nop                      	nop
00143a   0000     nop                      	nop
00143c   0000     nop                      	nop
00143e   0000     nop                      	nop
001440   0000     nop                      	nop
001442   0000     nop                      	nop
001444   0000     nop                      	nop
001446   0000     nop                      	nop
001448   0000     nop                      	nop
00144a   0000     nop                      	nop
00144c   0000     nop                      	nop
00144e   0000     nop                      	nop
001450   0000     nop                      	nop
001452   0000     nop                      	nop
001454   0000     nop                      	nop
001456   0000     nop                      	nop
001458   0000     nop                      	nop
00145a   0000     nop                      	nop
00145c   0000     nop                      	nop
00145e   0000     nop                      	nop
001460   0000     nop                      	nop
001462   0000     nop                      	nop
001464   0000     nop                      	nop
001466   0000     nop                      	nop
001468   0000     nop                      	nop
00146a   0000     nop                      	nop
00146c   0000     nop                      	nop
00146e   0000     nop                      	nop
001470   0000     nop                      	nop
001472   0000     nop                      	nop
001474   0000     nop                      	nop
001476   0000     nop                      	nop
001478   0000     nop                      	nop
00147a   0000     nop                      	nop
00147c   0000     nop                      	nop
00147e   0000     nop                      	nop
001480   0000     nop                      	nop
001482   0000     nop                      	nop
001484   0000     nop                      	nop
001486   0000     nop                      	nop
001488   0000     nop                      	nop
00148a   0000     nop                      	nop
00148c   0000     nop                      	nop
00148e   0000     nop                      	nop
001490   0000     nop                      	nop
001492   0000     nop                      	nop
001494   0000     nop                      	nop
001496   0000     nop                      	nop
001498   0000     nop                      	nop
00149a   0000     nop                      	nop
00149c   0000     nop                      	nop
00149e   0000     nop                      	nop
0014a0   0000     nop                      	nop
0014a2   0000     nop                      	nop
0014a4   0000     nop                      	nop
0014a6   0000     nop                      	nop
0014a8   0000     nop                      	nop
0014aa   0000     nop                      	nop
0014ac   0000     nop                      	nop
0014ae   0000     nop                      	nop
0014b0   0000     nop                      	nop
0014b2   0000     nop                      	nop
0014b4   0000     nop                      	nop
0014b6   0000     nop                      	nop
0014b8   0000     nop                      	nop
0014ba   0000     nop                      	nop
0014bc   0000     nop                      	nop
0014be   0000     nop                      	nop
0014c0   0000     nop                      	nop
0014c2   0000     nop                      	nop
0014c4   0000     nop                      	nop
0014c6   0000     nop                      	nop
0014c8   0000     nop                      	nop
0014ca   0000     nop                      	nop
0014cc   0000     nop                      	nop
0014ce   0000     nop                      	nop
0014d0   0000     nop                      	nop
0014d2   0000     nop                      	nop
0014d4   0000     nop                      	nop
0014d6   0000     nop                      	nop
0014d8   0000     nop                      	nop
0014da   0000     nop                      	nop
0014dc   0000     nop                      	nop
0014de   0000     nop                      	nop
0014e0   0000     nop                      	nop
0014e2   0000     nop                      	nop
0014e4   0000     nop                      	nop
0014e6   0000     nop                      	nop
0014e8   0000     nop                      	nop
0014ea   0000     nop                      	nop
0014ec   0000     nop                      	nop
0014ee   0000     nop                      	nop
0014f0   0000     nop                      	nop
0014f2   0000     nop                      	nop
0014f4   0000     nop                      	nop
0014f6   0000     nop                      	nop
0014f8   0000     nop                      	nop
0014fa   0000     nop                      	nop
0014fc   0000     nop                      	nop
0014fe   0000     nop                      	nop
001500   0000     nop                      	nop
001502   0000     nop                      	nop
001504   0000     nop                      	nop
001506   0000     nop                      	nop
001508   0000     nop                      	nop
00150a   0000     nop                      	nop
00150c   0000     nop                      	nop
00150e   0000     nop                      	nop
001510   0000     nop                      	nop
001512   0000     nop                      	nop
001514   0000     nop                      	nop
001516   0000     nop                      	nop
001518   0000     nop                      	nop
00151a   0000     nop                      	nop
00151c   0000     nop                      	nop
00151e   0000     nop                      	nop
001520   0000     nop                      	nop
001522   0000     nop                      	nop
001524   0000     nop                      	nop
001526   0000     nop                      	nop
001528   0000     nop                      	nop
00152a   0000     nop                      	nop
00152c   0000     nop                      	nop
00152e   0000     nop                      	nop
001530   0000     nop                      	nop
001532   0000     nop                      	nop
001534   0000     nop                      	nop
001536   0000     nop                      	nop
001538   0000     nop                      	nop
00153a   0000     nop                      	nop
00153c   0000     nop                      	nop
00153e   0000     nop                      	nop
001540   0000     nop                      	nop
001542   0000     nop                      	nop
001544   0000     nop                      	nop
001546   0000     nop                      	nop
001548   0000     nop                      	nop
00154a   0000     nop                      	nop
00154c   0000     nop                      	nop
00154e   0000     nop                      	nop
001550   0000     nop                      	nop
001552   0000     nop                      	nop
001554   0000     nop                      	nop
001556   0000     nop                      	nop
001558   0000     nop                      	nop
00155a   0000     nop                      	nop
00155c   0000     nop                      	nop
00155e   0000     nop                      	nop
001560   0000     nop                      	nop
001562   0000     nop                      	nop
001564   0000     nop                      	nop
001566   0000     nop                      	nop
001568   0000     nop                      	nop
00156a   0000     nop                      	nop
00156c   0000     nop                      	nop
00156e   0000     nop                      	nop
001570   0000     nop                      	nop
001572   0000     nop                      	nop
001574   0000     nop                      	nop
001576   0000     nop                      	nop
001578   0000     nop                      	nop
00157a   0000     nop                      	nop
00157c   0000     nop                      	nop
00157e   0000     nop                      	nop
                                           	
                                           ;	.line	3896; meter_logger.c	PWM_PIN = 1;
001580   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001582   0000     nop                      	nop
001584   0000     nop                      	nop
001586   0000     nop                      	nop
001588   0000     nop                      	nop
00158a   0000     nop                      	nop
00158c   0000     nop                      	nop
00158e   0000     nop                      	nop
001590   0000     nop                      	nop
001592   0000     nop                      	nop
001594   0000     nop                      	nop
001596   0000     nop                      	nop
001598   0000     nop                      	nop
00159a   0000     nop                      	nop
00159c   0000     nop                      	nop
00159e   0000     nop                      	nop
0015a0   0000     nop                      	nop
0015a2   0000     nop                      	nop
0015a4   0000     nop                      	nop
0015a6   0000     nop                      	nop
0015a8   0000     nop                      	nop
0015aa   0000     nop                      	nop
0015ac   0000     nop                      	nop
0015ae   0000     nop                      	nop
0015b0   0000     nop                      	nop
0015b2   0000     nop                      	nop
0015b4   0000     nop                      	nop
0015b6   0000     nop                      	nop
0015b8   0000     nop                      	nop
0015ba   0000     nop                      	nop
0015bc   0000     nop                      	nop
0015be   0000     nop                      	nop
0015c0   0000     nop                      	nop
0015c2   0000     nop                      	nop
0015c4   0000     nop                      	nop
0015c6   0000     nop                      	nop
0015c8   0000     nop                      	nop
0015ca   0000     nop                      	nop
0015cc   0000     nop                      	nop
0015ce   0000     nop                      	nop
0015d0   0000     nop                      	nop
0015d2   0000     nop                      	nop
0015d4   0000     nop                      	nop
0015d6   0000     nop                      	nop
0015d8   0000     nop                      	nop
0015da   0000     nop                      	nop
0015dc   0000     nop                      	nop
0015de   0000     nop                      	nop
0015e0   0000     nop                      	nop
0015e2   0000     nop                      	nop
0015e4   0000     nop                      	nop
0015e6   0000     nop                      	nop
0015e8   0000     nop                      	nop
0015ea   0000     nop                      	nop
0015ec   0000     nop                      	nop
0015ee   0000     nop                      	nop
0015f0   0000     nop                      	nop
0015f2   0000     nop                      	nop
0015f4   0000     nop                      	nop
0015f6   0000     nop                      	nop
0015f8   0000     nop                      	nop
0015fa   0000     nop                      	nop
0015fc   0000     nop                      	nop
0015fe   0000     nop                      	nop
001600   0000     nop                      	nop
001602   0000     nop                      	nop
001604   0000     nop                      	nop
001606   0000     nop                      	nop
001608   0000     nop                      	nop
00160a   0000     nop                      	nop
00160c   0000     nop                      	nop
00160e   0000     nop                      	nop
001610   0000     nop                      	nop
001612   0000     nop                      	nop
001614   0000     nop                      	nop
001616   0000     nop                      	nop
001618   0000     nop                      	nop
00161a   0000     nop                      	nop
00161c   0000     nop                      	nop
00161e   0000     nop                      	nop
001620   0000     nop                      	nop
001622   0000     nop                      	nop
001624   0000     nop                      	nop
001626   0000     nop                      	nop
001628   0000     nop                      	nop
00162a   0000     nop                      	nop
00162c   0000     nop                      	nop
00162e   0000     nop                      	nop
001630   0000     nop                      	nop
001632   0000     nop                      	nop
001634   0000     nop                      	nop
001636   0000     nop                      	nop
001638   0000     nop                      	nop
00163a   0000     nop                      	nop
00163c   0000     nop                      	nop
00163e   0000     nop                      	nop
001640   0000     nop                      	nop
001642   0000     nop                      	nop
001644   0000     nop                      	nop
001646   0000     nop                      	nop
001648   0000     nop                      	nop
00164a   0000     nop                      	nop
00164c   0000     nop                      	nop
00164e   0000     nop                      	nop
001650   0000     nop                      	nop
001652   0000     nop                      	nop
001654   0000     nop                      	nop
001656   0000     nop                      	nop
001658   0000     nop                      	nop
00165a   0000     nop                      	nop
00165c   0000     nop                      	nop
00165e   0000     nop                      	nop
001660   0000     nop                      	nop
001662   0000     nop                      	nop
001664   0000     nop                      	nop
001666   0000     nop                      	nop
001668   0000     nop                      	nop
00166a   0000     nop                      	nop
00166c   0000     nop                      	nop
00166e   0000     nop                      	nop
001670   0000     nop                      	nop
001672   0000     nop                      	nop
001674   0000     nop                      	nop
001676   0000     nop                      	nop
001678   0000     nop                      	nop
00167a   0000     nop                      	nop
00167c   0000     nop                      	nop
00167e   0000     nop                      	nop
001680   0000     nop                      	nop
001682   0000     nop                      	nop
001684   0000     nop                      	nop
001686   0000     nop                      	nop
001688   0000     nop                      	nop
00168a   0000     nop                      	nop
00168c   0000     nop                      	nop
00168e   0000     nop                      	nop
001690   0000     nop                      	nop
001692   0000     nop                      	nop
001694   0000     nop                      	nop
001696   0000     nop                      	nop
001698   0000     nop                      	nop
00169a   0000     nop                      	nop
00169c   0000     nop                      	nop
00169e   0000     nop                      	nop
0016a0   0000     nop                      	nop
0016a2   0000     nop                      	nop
0016a4   0000     nop                      	nop
0016a6   0000     nop                      	nop
0016a8   0000     nop                      	nop
0016aa   0000     nop                      	nop
0016ac   0000     nop                      	nop
0016ae   0000     nop                      	nop
0016b0   0000     nop                      	nop
0016b2   0000     nop                      	nop
0016b4   0000     nop                      	nop
0016b6   0000     nop                      	nop
0016b8   0000     nop                      	nop
0016ba   0000     nop                      	nop
0016bc   0000     nop                      	nop
0016be   0000     nop                      	nop
0016c0   0000     nop                      	nop
0016c2   0000     nop                      	nop
0016c4   0000     nop                      	nop
0016c6   0000     nop                      	nop
0016c8   0000     nop                      	nop
0016ca   0000     nop                      	nop
0016cc   0000     nop                      	nop
0016ce   0000     nop                      	nop
0016d0   0000     nop                      	nop
0016d2   0000     nop                      	nop
0016d4   0000     nop                      	nop
0016d6   0000     nop                      	nop
0016d8   0000     nop                      	nop
0016da   0000     nop                      	nop
0016dc   0000     nop                      	nop
0016de   0000     nop                      	nop
0016e0   0000     nop                      	nop
0016e2   0000     nop                      	nop
0016e4   0000     nop                      	nop
0016e6   0000     nop                      	nop
0016e8   0000     nop                      	nop
0016ea   0000     nop                      	nop
0016ec   0000     nop                      	nop
0016ee   0000     nop                      	nop
0016f0   0000     nop                      	nop
0016f2   0000     nop                      	nop
0016f4   0000     nop                      	nop
0016f6   0000     nop                      	nop
0016f8   0000     nop                      	nop
0016fa   0000     nop                      	nop
0016fc   0000     nop                      	nop
0016fe   0000     nop                      	nop
001700   0000     nop                      	nop
001702   0000     nop                      	nop
001704   0000     nop                      	nop
001706   0000     nop                      	nop
001708   0000     nop                      	nop
00170a   0000     nop                      	nop
00170c   0000     nop                      	nop
00170e   0000     nop                      	nop
001710   0000     nop                      	nop
001712   0000     nop                      	nop
001714   0000     nop                      	nop
001716   0000     nop                      	nop
001718   0000     nop                      	nop
                                           	
                                           ;	.line	4103; meter_logger.c	PWM_PIN = 0;
00171a   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
00171c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00171e   ffd9
001720   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__send_fsk_high	code
                                           _send_fsk_high:
                                           ;	.line	1131; meter_logger.c	void send_fsk_high(void) {
00001c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00001e   ffe5
000020   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000022   ffd9
                                           ;	.line	1132; meter_logger.c	PWM_PIN = 1;
000024   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
000026   0000     nop                      	nop
000028   0000     nop                      	nop
00002a   0000     nop                      	nop
00002c   0000     nop                      	nop
00002e   0000     nop                      	nop
000030   0000     nop                      	nop
000032   0000     nop                      	nop
000034   0000     nop                      	nop
000036   0000     nop                      	nop
000038   0000     nop                      	nop
00003a   0000     nop                      	nop
00003c   0000     nop                      	nop
00003e   0000     nop                      	nop
000040   0000     nop                      	nop
000042   0000     nop                      	nop
000044   0000     nop                      	nop
000046   0000     nop                      	nop
000048   0000     nop                      	nop
00004a   0000     nop                      	nop
00004c   0000     nop                      	nop
00004e   0000     nop                      	nop
000050   0000     nop                      	nop
000052   0000     nop                      	nop
000054   0000     nop                      	nop
000056   0000     nop                      	nop
000058   0000     nop                      	nop
00005a   0000     nop                      	nop
00005c   0000     nop                      	nop
00005e   0000     nop                      	nop
000060   0000     nop                      	nop
000062   0000     nop                      	nop
000064   0000     nop                      	nop
000066   0000     nop                      	nop
000068   0000     nop                      	nop
00006a   0000     nop                      	nop
00006c   0000     nop                      	nop
00006e   0000     nop                      	nop
000070   0000     nop                      	nop
000072   0000     nop                      	nop
000074   0000     nop                      	nop
000076   0000     nop                      	nop
000078   0000     nop                      	nop
00007a   0000     nop                      	nop
00007c   0000     nop                      	nop
00007e   0000     nop                      	nop
000080   0000     nop                      	nop
000082   0000     nop                      	nop
000084   0000     nop                      	nop
000086   0000     nop                      	nop
000088   0000     nop                      	nop
00008a   0000     nop                      	nop
00008c   0000     nop                      	nop
00008e   0000     nop                      	nop
000090   0000     nop                      	nop
000092   0000     nop                      	nop
000094   0000     nop                      	nop
000096   0000     nop                      	nop
000098   0000     nop                      	nop
00009a   0000     nop                      	nop
00009c   0000     nop                      	nop
00009e   0000     nop                      	nop
0000a0   0000     nop                      	nop
0000a2   0000     nop                      	nop
0000a4   0000     nop                      	nop
0000a6   0000     nop                      	nop
0000a8   0000     nop                      	nop
0000aa   0000     nop                      	nop
0000ac   0000     nop                      	nop
0000ae   0000     nop                      	nop
0000b0   0000     nop                      	nop
0000b2   0000     nop                      	nop
0000b4   0000     nop                      	nop
0000b6   0000     nop                      	nop
0000b8   0000     nop                      	nop
0000ba   0000     nop                      	nop
0000bc   0000     nop                      	nop
0000be   0000     nop                      	nop
0000c0   0000     nop                      	nop
0000c2   0000     nop                      	nop
0000c4   0000     nop                      	nop
0000c6   0000     nop                      	nop
0000c8   0000     nop                      	nop
0000ca   0000     nop                      	nop
0000cc   0000     nop                      	nop
0000ce   0000     nop                      	nop
0000d0   0000     nop                      	nop
0000d2   0000     nop                      	nop
0000d4   0000     nop                      	nop
0000d6   0000     nop                      	nop
0000d8   0000     nop                      	nop
0000da   0000     nop                      	nop
0000dc   0000     nop                      	nop
0000de   0000     nop                      	nop
0000e0   0000     nop                      	nop
0000e2   0000     nop                      	nop
0000e4   0000     nop                      	nop
0000e6   0000     nop                      	nop
0000e8   0000     nop                      	nop
0000ea   0000     nop                      	nop
0000ec   0000     nop                      	nop
0000ee   0000     nop                      	nop
0000f0   0000     nop                      	nop
0000f2   0000     nop                      	nop
0000f4   0000     nop                      	nop
0000f6   0000     nop                      	nop
0000f8   0000     nop                      	nop
0000fa   0000     nop                      	nop
0000fc   0000     nop                      	nop
0000fe   0000     nop                      	nop
000100   0000     nop                      	nop
000102   0000     nop                      	nop
000104   0000     nop                      	nop
000106   0000     nop                      	nop
000108   0000     nop                      	nop
00010a   0000     nop                      	nop
00010c   0000     nop                      	nop
00010e   0000     nop                      	nop
000110   0000     nop                      	nop
000112   0000     nop                      	nop
000114   0000     nop                      	nop
000116   0000     nop                      	nop
000118   0000     nop                      	nop
00011a   0000     nop                      	nop
00011c   0000     nop                      	nop
00011e   0000     nop                      	nop
000120   0000     nop                      	nop
000122   0000     nop                      	nop
000124   0000     nop                      	nop
000126   0000     nop                      	nop
000128   0000     nop                      	nop
00012a   0000     nop                      	nop
00012c   0000     nop                      	nop
00012e   0000     nop                      	nop
000130   0000     nop                      	nop
000132   0000     nop                      	nop
                                           	
                                           ;	.line	1270; meter_logger.c	PWM_PIN = 0;
000134   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
000136   0000     nop                      	nop
000138   0000     nop                      	nop
00013a   0000     nop                      	nop
00013c   0000     nop                      	nop
00013e   0000     nop                      	nop
000140   0000     nop                      	nop
000142   0000     nop                      	nop
000144   0000     nop                      	nop
000146   0000     nop                      	nop
000148   0000     nop                      	nop
00014a   0000     nop                      	nop
00014c   0000     nop                      	nop
00014e   0000     nop                      	nop
000150   0000     nop                      	nop
000152   0000     nop                      	nop
000154   0000     nop                      	nop
000156   0000     nop                      	nop
000158   0000     nop                      	nop
00015a   0000     nop                      	nop
00015c   0000     nop                      	nop
00015e   0000     nop                      	nop
000160   0000     nop                      	nop
000162   0000     nop                      	nop
000164   0000     nop                      	nop
000166   0000     nop                      	nop
000168   0000     nop                      	nop
00016a   0000     nop                      	nop
00016c   0000     nop                      	nop
00016e   0000     nop                      	nop
000170   0000     nop                      	nop
000172   0000     nop                      	nop
000174   0000     nop                      	nop
000176   0000     nop                      	nop
000178   0000     nop                      	nop
00017a   0000     nop                      	nop
00017c   0000     nop                      	nop
00017e   0000     nop                      	nop
000180   0000     nop                      	nop
000182   0000     nop                      	nop
000184   0000     nop                      	nop
000186   0000     nop                      	nop
000188   0000     nop                      	nop
00018a   0000     nop                      	nop
00018c   0000     nop                      	nop
00018e   0000     nop                      	nop
000190   0000     nop                      	nop
000192   0000     nop                      	nop
000194   0000     nop                      	nop
000196   0000     nop                      	nop
000198   0000     nop                      	nop
00019a   0000     nop                      	nop
00019c   0000     nop                      	nop
00019e   0000     nop                      	nop
0001a0   0000     nop                      	nop
0001a2   0000     nop                      	nop
0001a4   0000     nop                      	nop
0001a6   0000     nop                      	nop
0001a8   0000     nop                      	nop
0001aa   0000     nop                      	nop
0001ac   0000     nop                      	nop
0001ae   0000     nop                      	nop
0001b0   0000     nop                      	nop
0001b2   0000     nop                      	nop
0001b4   0000     nop                      	nop
0001b6   0000     nop                      	nop
0001b8   0000     nop                      	nop
0001ba   0000     nop                      	nop
0001bc   0000     nop                      	nop
0001be   0000     nop                      	nop
0001c0   0000     nop                      	nop
0001c2   0000     nop                      	nop
0001c4   0000     nop                      	nop
0001c6   0000     nop                      	nop
0001c8   0000     nop                      	nop
0001ca   0000     nop                      	nop
0001cc   0000     nop                      	nop
0001ce   0000     nop                      	nop
0001d0   0000     nop                      	nop
0001d2   0000     nop                      	nop
0001d4   0000     nop                      	nop
0001d6   0000     nop                      	nop
0001d8   0000     nop                      	nop
0001da   0000     nop                      	nop
0001dc   0000     nop                      	nop
0001de   0000     nop                      	nop
0001e0   0000     nop                      	nop
0001e2   0000     nop                      	nop
0001e4   0000     nop                      	nop
0001e6   0000     nop                      	nop
0001e8   0000     nop                      	nop
0001ea   0000     nop                      	nop
0001ec   0000     nop                      	nop
0001ee   0000     nop                      	nop
0001f0   0000     nop                      	nop
0001f2   0000     nop                      	nop
0001f4   0000     nop                      	nop
0001f6   0000     nop                      	nop
0001f8   0000     nop                      	nop
0001fa   0000     nop                      	nop
0001fc   0000     nop                      	nop
0001fe   0000     nop                      	nop
000200   0000     nop                      	nop
000202   0000     nop                      	nop
000204   0000     nop                      	nop
000206   0000     nop                      	nop
000208   0000     nop                      	nop
00020a   0000     nop                      	nop
00020c   0000     nop                      	nop
00020e   0000     nop                      	nop
000210   0000     nop                      	nop
000212   0000     nop                      	nop
000214   0000     nop                      	nop
000216   0000     nop                      	nop
000218   0000     nop                      	nop
00021a   0000     nop                      	nop
00021c   0000     nop                      	nop
00021e   0000     nop                      	nop
000220   0000     nop                      	nop
000222   0000     nop                      	nop
000224   0000     nop                      	nop
000226   0000     nop                      	nop
000228   0000     nop                      	nop
00022a   0000     nop                      	nop
00022c   0000     nop                      	nop
00022e   0000     nop                      	nop
000230   0000     nop                      	nop
000232   0000     nop                      	nop
000234   0000     nop                      	nop
000236   0000     nop                      	nop
000238   0000     nop                      	nop
00023a   0000     nop                      	nop
00023c   0000     nop                      	nop
00023e   0000     nop                      	nop
000240   0000     nop                      	nop
000242   0000     nop                      	nop
                                           	
                                           ;	.line	1408; meter_logger.c	PWM_PIN = 1;
000244   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
000246   0000     nop                      	nop
000248   0000     nop                      	nop
00024a   0000     nop                      	nop
00024c   0000     nop                      	nop
00024e   0000     nop                      	nop
000250   0000     nop                      	nop
000252   0000     nop                      	nop
000254   0000     nop                      	nop
000256   0000     nop                      	nop
000258   0000     nop                      	nop
00025a   0000     nop                      	nop
00025c   0000     nop                      	nop
00025e   0000     nop                      	nop
000260   0000     nop                      	nop
000262   0000     nop                      	nop
000264   0000     nop                      	nop
000266   0000     nop                      	nop
000268   0000     nop                      	nop
00026a   0000     nop                      	nop
00026c   0000     nop                      	nop
00026e   0000     nop                      	nop
000270   0000     nop                      	nop
000272   0000     nop                      	nop
000274   0000     nop                      	nop
000276   0000     nop                      	nop
000278   0000     nop                      	nop
00027a   0000     nop                      	nop
00027c   0000     nop                      	nop
00027e   0000     nop                      	nop
000280   0000     nop                      	nop
000282   0000     nop                      	nop
000284   0000     nop                      	nop
000286   0000     nop                      	nop
000288   0000     nop                      	nop
00028a   0000     nop                      	nop
00028c   0000     nop                      	nop
00028e   0000     nop                      	nop
000290   0000     nop                      	nop
000292   0000     nop                      	nop
000294   0000     nop                      	nop
000296   0000     nop                      	nop
000298   0000     nop                      	nop
00029a   0000     nop                      	nop
00029c   0000     nop                      	nop
00029e   0000     nop                      	nop
0002a0   0000     nop                      	nop
0002a2   0000     nop                      	nop
0002a4   0000     nop                      	nop
0002a6   0000     nop                      	nop
0002a8   0000     nop                      	nop
0002aa   0000     nop                      	nop
0002ac   0000     nop                      	nop
0002ae   0000     nop                      	nop
0002b0   0000     nop                      	nop
0002b2   0000     nop                      	nop
0002b4   0000     nop                      	nop
0002b6   0000     nop                      	nop
0002b8   0000     nop                      	nop
0002ba   0000     nop                      	nop
0002bc   0000     nop                      	nop
0002be   0000     nop                      	nop
0002c0   0000     nop                      	nop
0002c2   0000     nop                      	nop
0002c4   0000     nop                      	nop
0002c6   0000     nop                      	nop
0002c8   0000     nop                      	nop
0002ca   0000     nop                      	nop
0002cc   0000     nop                      	nop
0002ce   0000     nop                      	nop
0002d0   0000     nop                      	nop
0002d2   0000     nop                      	nop
0002d4   0000     nop                      	nop
0002d6   0000     nop                      	nop
0002d8   0000     nop                      	nop
0002da   0000     nop                      	nop
0002dc   0000     nop                      	nop
0002de   0000     nop                      	nop
0002e0   0000     nop                      	nop
0002e2   0000     nop                      	nop
0002e4   0000     nop                      	nop
0002e6   0000     nop                      	nop
0002e8   0000     nop                      	nop
0002ea   0000     nop                      	nop
0002ec   0000     nop                      	nop
0002ee   0000     nop                      	nop
0002f0   0000     nop                      	nop
0002f2   0000     nop                      	nop
0002f4   0000     nop                      	nop
0002f6   0000     nop                      	nop
0002f8   0000     nop                      	nop
0002fa   0000     nop                      	nop
0002fc   0000     nop                      	nop
0002fe   0000     nop                      	nop
000300   0000     nop                      	nop
000302   0000     nop                      	nop
000304   0000     nop                      	nop
000306   0000     nop                      	nop
000308   0000     nop                      	nop
00030a   0000     nop                      	nop
00030c   0000     nop                      	nop
00030e   0000     nop                      	nop
000310   0000     nop                      	nop
000312   0000     nop                      	nop
000314   0000     nop                      	nop
000316   0000     nop                      	nop
000318   0000     nop                      	nop
00031a   0000     nop                      	nop
00031c   0000     nop                      	nop
00031e   0000     nop                      	nop
000320   0000     nop                      	nop
000322   0000     nop                      	nop
000324   0000     nop                      	nop
000326   0000     nop                      	nop
000328   0000     nop                      	nop
00032a   0000     nop                      	nop
00032c   0000     nop                      	nop
00032e   0000     nop                      	nop
000330   0000     nop                      	nop
000332   0000     nop                      	nop
000334   0000     nop                      	nop
000336   0000     nop                      	nop
000338   0000     nop                      	nop
00033a   0000     nop                      	nop
00033c   0000     nop                      	nop
00033e   0000     nop                      	nop
000340   0000     nop                      	nop
000342   0000     nop                      	nop
000344   0000     nop                      	nop
000346   0000     nop                      	nop
000348   0000     nop                      	nop
00034a   0000     nop                      	nop
00034c   0000     nop                      	nop
00034e   0000     nop                      	nop
000350   0000     nop                      	nop
000352   0000     nop                      	nop
                                           	
                                           ;	.line	1546; meter_logger.c	PWM_PIN = 0;
000354   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
000356   0000     nop                      	nop
000358   0000     nop                      	nop
00035a   0000     nop                      	nop
00035c   0000     nop                      	nop
00035e   0000     nop                      	nop
000360   0000     nop                      	nop
000362   0000     nop                      	nop
000364   0000     nop                      	nop
000366   0000     nop                      	nop
000368   0000     nop                      	nop
00036a   0000     nop                      	nop
00036c   0000     nop                      	nop
00036e   0000     nop                      	nop
000370   0000     nop                      	nop
000372   0000     nop                      	nop
000374   0000     nop                      	nop
000376   0000     nop                      	nop
000378   0000     nop                      	nop
00037a   0000     nop                      	nop
00037c   0000     nop                      	nop
00037e   0000     nop                      	nop
000380   0000     nop                      	nop
000382   0000     nop                      	nop
000384   0000     nop                      	nop
000386   0000     nop                      	nop
000388   0000     nop                      	nop
00038a   0000     nop                      	nop
00038c   0000     nop                      	nop
00038e   0000     nop                      	nop
000390   0000     nop                      	nop
000392   0000     nop                      	nop
000394   0000     nop                      	nop
000396   0000     nop                      	nop
000398   0000     nop                      	nop
00039a   0000     nop                      	nop
00039c   0000     nop                      	nop
00039e   0000     nop                      	nop
0003a0   0000     nop                      	nop
0003a2   0000     nop                      	nop
0003a4   0000     nop                      	nop
0003a6   0000     nop                      	nop
0003a8   0000     nop                      	nop
0003aa   0000     nop                      	nop
0003ac   0000     nop                      	nop
0003ae   0000     nop                      	nop
0003b0   0000     nop                      	nop
0003b2   0000     nop                      	nop
0003b4   0000     nop                      	nop
0003b6   0000     nop                      	nop
0003b8   0000     nop                      	nop
0003ba   0000     nop                      	nop
0003bc   0000     nop                      	nop
0003be   0000     nop                      	nop
0003c0   0000     nop                      	nop
0003c2   0000     nop                      	nop
0003c4   0000     nop                      	nop
0003c6   0000     nop                      	nop
0003c8   0000     nop                      	nop
0003ca   0000     nop                      	nop
0003cc   0000     nop                      	nop
0003ce   0000     nop                      	nop
0003d0   0000     nop                      	nop
0003d2   0000     nop                      	nop
0003d4   0000     nop                      	nop
0003d6   0000     nop                      	nop
0003d8   0000     nop                      	nop
0003da   0000     nop                      	nop
0003dc   0000     nop                      	nop
0003de   0000     nop                      	nop
0003e0   0000     nop                      	nop
0003e2   0000     nop                      	nop
0003e4   0000     nop                      	nop
0003e6   0000     nop                      	nop
0003e8   0000     nop                      	nop
0003ea   0000     nop                      	nop
0003ec   0000     nop                      	nop
0003ee   0000     nop                      	nop
0003f0   0000     nop                      	nop
0003f2   0000     nop                      	nop
0003f4   0000     nop                      	nop
0003f6   0000     nop                      	nop
0003f8   0000     nop                      	nop
0003fa   0000     nop                      	nop
0003fc   0000     nop                      	nop
0003fe   0000     nop                      	nop
000400   0000     nop                      	nop
000402   0000     nop                      	nop
000404   0000     nop                      	nop
000406   0000     nop                      	nop
000408   0000     nop                      	nop
00040a   0000     nop                      	nop
00040c   0000     nop                      	nop
00040e   0000     nop                      	nop
000410   0000     nop                      	nop
000412   0000     nop                      	nop
000414   0000     nop                      	nop
000416   0000     nop                      	nop
000418   0000     nop                      	nop
00041a   0000     nop                      	nop
00041c   0000     nop                      	nop
00041e   0000     nop                      	nop
000420   0000     nop                      	nop
000422   0000     nop                      	nop
000424   0000     nop                      	nop
000426   0000     nop                      	nop
000428   0000     nop                      	nop
00042a   0000     nop                      	nop
00042c   0000     nop                      	nop
00042e   0000     nop                      	nop
000430   0000     nop                      	nop
000432   0000     nop                      	nop
000434   0000     nop                      	nop
000436   0000     nop                      	nop
000438   0000     nop                      	nop
00043a   0000     nop                      	nop
00043c   0000     nop                      	nop
00043e   0000     nop                      	nop
000440   0000     nop                      	nop
000442   0000     nop                      	nop
000444   0000     nop                      	nop
000446   0000     nop                      	nop
000448   0000     nop                      	nop
00044a   0000     nop                      	nop
00044c   0000     nop                      	nop
00044e   0000     nop                      	nop
000450   0000     nop                      	nop
000452   0000     nop                      	nop
000454   0000     nop                      	nop
000456   0000     nop                      	nop
000458   0000     nop                      	nop
00045a   0000     nop                      	nop
00045c   0000     nop                      	nop
00045e   0000     nop                      	nop
000460   0000     nop                      	nop
000462   0000     nop                      	nop
                                           	
                                           ;	.line	1684; meter_logger.c	PWM_PIN = 1;
000464   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
000466   0000     nop                      	nop
000468   0000     nop                      	nop
00046a   0000     nop                      	nop
00046c   0000     nop                      	nop
00046e   0000     nop                      	nop
000470   0000     nop                      	nop
000472   0000     nop                      	nop
000474   0000     nop                      	nop
000476   0000     nop                      	nop
000478   0000     nop                      	nop
00047a   0000     nop                      	nop
00047c   0000     nop                      	nop
00047e   0000     nop                      	nop
000480   0000     nop                      	nop
000482   0000     nop                      	nop
000484   0000     nop                      	nop
000486   0000     nop                      	nop
000488   0000     nop                      	nop
00048a   0000     nop                      	nop
00048c   0000     nop                      	nop
00048e   0000     nop                      	nop
000490   0000     nop                      	nop
000492   0000     nop                      	nop
000494   0000     nop                      	nop
000496   0000     nop                      	nop
000498   0000     nop                      	nop
00049a   0000     nop                      	nop
00049c   0000     nop                      	nop
00049e   0000     nop                      	nop
0004a0   0000     nop                      	nop
0004a2   0000     nop                      	nop
0004a4   0000     nop                      	nop
0004a6   0000     nop                      	nop
0004a8   0000     nop                      	nop
0004aa   0000     nop                      	nop
0004ac   0000     nop                      	nop
0004ae   0000     nop                      	nop
0004b0   0000     nop                      	nop
0004b2   0000     nop                      	nop
0004b4   0000     nop                      	nop
0004b6   0000     nop                      	nop
0004b8   0000     nop                      	nop
0004ba   0000     nop                      	nop
0004bc   0000     nop                      	nop
0004be   0000     nop                      	nop
0004c0   0000     nop                      	nop
0004c2   0000     nop                      	nop
0004c4   0000     nop                      	nop
0004c6   0000     nop                      	nop
0004c8   0000     nop                      	nop
0004ca   0000     nop                      	nop
0004cc   0000     nop                      	nop
0004ce   0000     nop                      	nop
0004d0   0000     nop                      	nop
0004d2   0000     nop                      	nop
0004d4   0000     nop                      	nop
0004d6   0000     nop                      	nop
0004d8   0000     nop                      	nop
0004da   0000     nop                      	nop
0004dc   0000     nop                      	nop
0004de   0000     nop                      	nop
0004e0   0000     nop                      	nop
0004e2   0000     nop                      	nop
0004e4   0000     nop                      	nop
0004e6   0000     nop                      	nop
0004e8   0000     nop                      	nop
0004ea   0000     nop                      	nop
0004ec   0000     nop                      	nop
0004ee   0000     nop                      	nop
0004f0   0000     nop                      	nop
0004f2   0000     nop                      	nop
0004f4   0000     nop                      	nop
0004f6   0000     nop                      	nop
0004f8   0000     nop                      	nop
0004fa   0000     nop                      	nop
0004fc   0000     nop                      	nop
0004fe   0000     nop                      	nop
000500   0000     nop                      	nop
000502   0000     nop                      	nop
000504   0000     nop                      	nop
000506   0000     nop                      	nop
000508   0000     nop                      	nop
00050a   0000     nop                      	nop
00050c   0000     nop                      	nop
00050e   0000     nop                      	nop
000510   0000     nop                      	nop
000512   0000     nop                      	nop
000514   0000     nop                      	nop
000516   0000     nop                      	nop
000518   0000     nop                      	nop
00051a   0000     nop                      	nop
00051c   0000     nop                      	nop
00051e   0000     nop                      	nop
000520   0000     nop                      	nop
000522   0000     nop                      	nop
000524   0000     nop                      	nop
000526   0000     nop                      	nop
000528   0000     nop                      	nop
00052a   0000     nop                      	nop
00052c   0000     nop                      	nop
00052e   0000     nop                      	nop
000530   0000     nop                      	nop
000532   0000     nop                      	nop
000534   0000     nop                      	nop
000536   0000     nop                      	nop
000538   0000     nop                      	nop
00053a   0000     nop                      	nop
00053c   0000     nop                      	nop
00053e   0000     nop                      	nop
000540   0000     nop                      	nop
000542   0000     nop                      	nop
000544   0000     nop                      	nop
000546   0000     nop                      	nop
000548   0000     nop                      	nop
00054a   0000     nop                      	nop
00054c   0000     nop                      	nop
00054e   0000     nop                      	nop
000550   0000     nop                      	nop
000552   0000     nop                      	nop
000554   0000     nop                      	nop
000556   0000     nop                      	nop
000558   0000     nop                      	nop
00055a   0000     nop                      	nop
00055c   0000     nop                      	nop
00055e   0000     nop                      	nop
000560   0000     nop                      	nop
000562   0000     nop                      	nop
000564   0000     nop                      	nop
000566   0000     nop                      	nop
000568   0000     nop                      	nop
00056a   0000     nop                      	nop
00056c   0000     nop                      	nop
00056e   0000     nop                      	nop
000570   0000     nop                      	nop
000572   0000     nop                      	nop
                                           	
                                           ;	.line	1822; meter_logger.c	PWM_PIN = 0;
000574   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
000576   0000     nop                      	nop
000578   0000     nop                      	nop
00057a   0000     nop                      	nop
00057c   0000     nop                      	nop
00057e   0000     nop                      	nop
000580   0000     nop                      	nop
000582   0000     nop                      	nop
000584   0000     nop                      	nop
000586   0000     nop                      	nop
000588   0000     nop                      	nop
00058a   0000     nop                      	nop
00058c   0000     nop                      	nop
00058e   0000     nop                      	nop
000590   0000     nop                      	nop
000592   0000     nop                      	nop
000594   0000     nop                      	nop
000596   0000     nop                      	nop
000598   0000     nop                      	nop
00059a   0000     nop                      	nop
00059c   0000     nop                      	nop
00059e   0000     nop                      	nop
0005a0   0000     nop                      	nop
0005a2   0000     nop                      	nop
0005a4   0000     nop                      	nop
0005a6   0000     nop                      	nop
0005a8   0000     nop                      	nop
0005aa   0000     nop                      	nop
0005ac   0000     nop                      	nop
0005ae   0000     nop                      	nop
0005b0   0000     nop                      	nop
0005b2   0000     nop                      	nop
0005b4   0000     nop                      	nop
0005b6   0000     nop                      	nop
0005b8   0000     nop                      	nop
0005ba   0000     nop                      	nop
0005bc   0000     nop                      	nop
0005be   0000     nop                      	nop
0005c0   0000     nop                      	nop
0005c2   0000     nop                      	nop
0005c4   0000     nop                      	nop
0005c6   0000     nop                      	nop
0005c8   0000     nop                      	nop
0005ca   0000     nop                      	nop
0005cc   0000     nop                      	nop
0005ce   0000     nop                      	nop
0005d0   0000     nop                      	nop
0005d2   0000     nop                      	nop
0005d4   0000     nop                      	nop
0005d6   0000     nop                      	nop
0005d8   0000     nop                      	nop
0005da   0000     nop                      	nop
0005dc   0000     nop                      	nop
0005de   0000     nop                      	nop
0005e0   0000     nop                      	nop
0005e2   0000     nop                      	nop
0005e4   0000     nop                      	nop
0005e6   0000     nop                      	nop
0005e8   0000     nop                      	nop
0005ea   0000     nop                      	nop
0005ec   0000     nop                      	nop
0005ee   0000     nop                      	nop
0005f0   0000     nop                      	nop
0005f2   0000     nop                      	nop
0005f4   0000     nop                      	nop
0005f6   0000     nop                      	nop
0005f8   0000     nop                      	nop
0005fa   0000     nop                      	nop
0005fc   0000     nop                      	nop
0005fe   0000     nop                      	nop
000600   0000     nop                      	nop
000602   0000     nop                      	nop
000604   0000     nop                      	nop
000606   0000     nop                      	nop
000608   0000     nop                      	nop
00060a   0000     nop                      	nop
00060c   0000     nop                      	nop
00060e   0000     nop                      	nop
000610   0000     nop                      	nop
000612   0000     nop                      	nop
000614   0000     nop                      	nop
000616   0000     nop                      	nop
000618   0000     nop                      	nop
00061a   0000     nop                      	nop
00061c   0000     nop                      	nop
00061e   0000     nop                      	nop
000620   0000     nop                      	nop
000622   0000     nop                      	nop
000624   0000     nop                      	nop
000626   0000     nop                      	nop
000628   0000     nop                      	nop
00062a   0000     nop                      	nop
00062c   0000     nop                      	nop
00062e   0000     nop                      	nop
000630   0000     nop                      	nop
000632   0000     nop                      	nop
000634   0000     nop                      	nop
000636   0000     nop                      	nop
000638   0000     nop                      	nop
00063a   0000     nop                      	nop
00063c   0000     nop                      	nop
00063e   0000     nop                      	nop
000640   0000     nop                      	nop
000642   0000     nop                      	nop
000644   0000     nop                      	nop
000646   0000     nop                      	nop
000648   0000     nop                      	nop
00064a   0000     nop                      	nop
00064c   0000     nop                      	nop
00064e   0000     nop                      	nop
000650   0000     nop                      	nop
000652   0000     nop                      	nop
000654   0000     nop                      	nop
000656   0000     nop                      	nop
000658   0000     nop                      	nop
00065a   0000     nop                      	nop
00065c   0000     nop                      	nop
00065e   0000     nop                      	nop
000660   0000     nop                      	nop
000662   0000     nop                      	nop
000664   0000     nop                      	nop
000666   0000     nop                      	nop
000668   0000     nop                      	nop
00066a   0000     nop                      	nop
00066c   0000     nop                      	nop
00066e   0000     nop                      	nop
000670   0000     nop                      	nop
000672   0000     nop                      	nop
000674   0000     nop                      	nop
000676   0000     nop                      	nop
000678   0000     nop                      	nop
00067a   0000     nop                      	nop
00067c   0000     nop                      	nop
00067e   0000     nop                      	nop
000680   0000     nop                      	nop
000682   0000     nop                      	nop
                                           	
                                           ;	.line	1960; meter_logger.c	PWM_PIN = 1;
000684   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
000686   0000     nop                      	nop
000688   0000     nop                      	nop
00068a   0000     nop                      	nop
00068c   0000     nop                      	nop
00068e   0000     nop                      	nop
000690   0000     nop                      	nop
000692   0000     nop                      	nop
000694   0000     nop                      	nop
000696   0000     nop                      	nop
000698   0000     nop                      	nop
00069a   0000     nop                      	nop
00069c   0000     nop                      	nop
00069e   0000     nop                      	nop
0006a0   0000     nop                      	nop
0006a2   0000     nop                      	nop
0006a4   0000     nop                      	nop
0006a6   0000     nop                      	nop
0006a8   0000     nop                      	nop
0006aa   0000     nop                      	nop
0006ac   0000     nop                      	nop
0006ae   0000     nop                      	nop
0006b0   0000     nop                      	nop
0006b2   0000     nop                      	nop
0006b4   0000     nop                      	nop
0006b6   0000     nop                      	nop
0006b8   0000     nop                      	nop
0006ba   0000     nop                      	nop
0006bc   0000     nop                      	nop
0006be   0000     nop                      	nop
0006c0   0000     nop                      	nop
0006c2   0000     nop                      	nop
0006c4   0000     nop                      	nop
0006c6   0000     nop                      	nop
0006c8   0000     nop                      	nop
0006ca   0000     nop                      	nop
0006cc   0000     nop                      	nop
0006ce   0000     nop                      	nop
0006d0   0000     nop                      	nop
0006d2   0000     nop                      	nop
0006d4   0000     nop                      	nop
0006d6   0000     nop                      	nop
0006d8   0000     nop                      	nop
0006da   0000     nop                      	nop
0006dc   0000     nop                      	nop
0006de   0000     nop                      	nop
0006e0   0000     nop                      	nop
0006e2   0000     nop                      	nop
0006e4   0000     nop                      	nop
0006e6   0000     nop                      	nop
0006e8   0000     nop                      	nop
0006ea   0000     nop                      	nop
0006ec   0000     nop                      	nop
0006ee   0000     nop                      	nop
0006f0   0000     nop                      	nop
0006f2   0000     nop                      	nop
0006f4   0000     nop                      	nop
0006f6   0000     nop                      	nop
0006f8   0000     nop                      	nop
0006fa   0000     nop                      	nop
0006fc   0000     nop                      	nop
0006fe   0000     nop                      	nop
000700   0000     nop                      	nop
000702   0000     nop                      	nop
000704   0000     nop                      	nop
000706   0000     nop                      	nop
000708   0000     nop                      	nop
00070a   0000     nop                      	nop
00070c   0000     nop                      	nop
00070e   0000     nop                      	nop
000710   0000     nop                      	nop
000712   0000     nop                      	nop
000714   0000     nop                      	nop
000716   0000     nop                      	nop
000718   0000     nop                      	nop
00071a   0000     nop                      	nop
00071c   0000     nop                      	nop
00071e   0000     nop                      	nop
000720   0000     nop                      	nop
000722   0000     nop                      	nop
000724   0000     nop                      	nop
000726   0000     nop                      	nop
000728   0000     nop                      	nop
00072a   0000     nop                      	nop
00072c   0000     nop                      	nop
00072e   0000     nop                      	nop
000730   0000     nop                      	nop
000732   0000     nop                      	nop
000734   0000     nop                      	nop
000736   0000     nop                      	nop
000738   0000     nop                      	nop
00073a   0000     nop                      	nop
00073c   0000     nop                      	nop
00073e   0000     nop                      	nop
000740   0000     nop                      	nop
000742   0000     nop                      	nop
000744   0000     nop                      	nop
000746   0000     nop                      	nop
000748   0000     nop                      	nop
00074a   0000     nop                      	nop
00074c   0000     nop                      	nop
00074e   0000     nop                      	nop
000750   0000     nop                      	nop
000752   0000     nop                      	nop
000754   0000     nop                      	nop
000756   0000     nop                      	nop
000758   0000     nop                      	nop
00075a   0000     nop                      	nop
00075c   0000     nop                      	nop
00075e   0000     nop                      	nop
000760   0000     nop                      	nop
000762   0000     nop                      	nop
000764   0000     nop                      	nop
000766   0000     nop                      	nop
000768   0000     nop                      	nop
00076a   0000     nop                      	nop
00076c   0000     nop                      	nop
00076e   0000     nop                      	nop
000770   0000     nop                      	nop
000772   0000     nop                      	nop
000774   0000     nop                      	nop
000776   0000     nop                      	nop
000778   0000     nop                      	nop
00077a   0000     nop                      	nop
00077c   0000     nop                      	nop
00077e   0000     nop                      	nop
000780   0000     nop                      	nop
000782   0000     nop                      	nop
000784   0000     nop                      	nop
000786   0000     nop                      	nop
000788   0000     nop                      	nop
00078a   0000     nop                      	nop
00078c   0000     nop                      	nop
00078e   0000     nop                      	nop
000790   0000     nop                      	nop
000792   0000     nop                      	nop
                                           	
                                           ;	.line	2098; meter_logger.c	PWM_PIN = 0;
000794   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
000796   0000     nop                      	nop
000798   0000     nop                      	nop
00079a   0000     nop                      	nop
00079c   0000     nop                      	nop
00079e   0000     nop                      	nop
0007a0   0000     nop                      	nop
0007a2   0000     nop                      	nop
0007a4   0000     nop                      	nop
0007a6   0000     nop                      	nop
0007a8   0000     nop                      	nop
0007aa   0000     nop                      	nop
0007ac   0000     nop                      	nop
0007ae   0000     nop                      	nop
0007b0   0000     nop                      	nop
0007b2   0000     nop                      	nop
0007b4   0000     nop                      	nop
0007b6   0000     nop                      	nop
0007b8   0000     nop                      	nop
0007ba   0000     nop                      	nop
0007bc   0000     nop                      	nop
0007be   0000     nop                      	nop
0007c0   0000     nop                      	nop
0007c2   0000     nop                      	nop
0007c4   0000     nop                      	nop
0007c6   0000     nop                      	nop
0007c8   0000     nop                      	nop
0007ca   0000     nop                      	nop
0007cc   0000     nop                      	nop
0007ce   0000     nop                      	nop
0007d0   0000     nop                      	nop
0007d2   0000     nop                      	nop
0007d4   0000     nop                      	nop
0007d6   0000     nop                      	nop
0007d8   0000     nop                      	nop
0007da   0000     nop                      	nop
0007dc   0000     nop                      	nop
0007de   0000     nop                      	nop
0007e0   0000     nop                      	nop
0007e2   0000     nop                      	nop
0007e4   0000     nop                      	nop
0007e6   0000     nop                      	nop
0007e8   0000     nop                      	nop
0007ea   0000     nop                      	nop
0007ec   0000     nop                      	nop
0007ee   0000     nop                      	nop
0007f0   0000     nop                      	nop
0007f2   0000     nop                      	nop
0007f4   0000     nop                      	nop
0007f6   0000     nop                      	nop
0007f8   0000     nop                      	nop
0007fa   0000     nop                      	nop
0007fc   0000     nop                      	nop
0007fe   0000     nop                      	nop
000800   0000     nop                      	nop
000802   0000     nop                      	nop
000804   0000     nop                      	nop
000806   0000     nop                      	nop
000808   0000     nop                      	nop
00080a   0000     nop                      	nop
00080c   0000     nop                      	nop
00080e   0000     nop                      	nop
000810   0000     nop                      	nop
000812   0000     nop                      	nop
000814   0000     nop                      	nop
000816   0000     nop                      	nop
000818   0000     nop                      	nop
00081a   0000     nop                      	nop
00081c   0000     nop                      	nop
00081e   0000     nop                      	nop
000820   0000     nop                      	nop
000822   0000     nop                      	nop
000824   0000     nop                      	nop
000826   0000     nop                      	nop
000828   0000     nop                      	nop
00082a   0000     nop                      	nop
00082c   0000     nop                      	nop
00082e   0000     nop                      	nop
000830   0000     nop                      	nop
000832   0000     nop                      	nop
000834   0000     nop                      	nop
000836   0000     nop                      	nop
000838   0000     nop                      	nop
00083a   0000     nop                      	nop
00083c   0000     nop                      	nop
00083e   0000     nop                      	nop
000840   0000     nop                      	nop
000842   0000     nop                      	nop
000844   0000     nop                      	nop
000846   0000     nop                      	nop
000848   0000     nop                      	nop
00084a   0000     nop                      	nop
00084c   0000     nop                      	nop
00084e   0000     nop                      	nop
000850   0000     nop                      	nop
000852   0000     nop                      	nop
000854   0000     nop                      	nop
000856   0000     nop                      	nop
000858   0000     nop                      	nop
00085a   0000     nop                      	nop
00085c   0000     nop                      	nop
00085e   0000     nop                      	nop
000860   0000     nop                      	nop
000862   0000     nop                      	nop
000864   0000     nop                      	nop
000866   0000     nop                      	nop
000868   0000     nop                      	nop
00086a   0000     nop                      	nop
00086c   0000     nop                      	nop
00086e   0000     nop                      	nop
000870   0000     nop                      	nop
000872   0000     nop                      	nop
000874   0000     nop                      	nop
000876   0000     nop                      	nop
000878   0000     nop                      	nop
00087a   0000     nop                      	nop
00087c   0000     nop                      	nop
00087e   0000     nop                      	nop
000880   0000     nop                      	nop
000882   0000     nop                      	nop
000884   0000     nop                      	nop
000886   0000     nop                      	nop
000888   0000     nop                      	nop
00088a   0000     nop                      	nop
00088c   0000     nop                      	nop
00088e   0000     nop                      	nop
000890   0000     nop                      	nop
000892   0000     nop                      	nop
000894   0000     nop                      	nop
000896   0000     nop                      	nop
000898   0000     nop                      	nop
00089a   0000     nop                      	nop
00089c   0000     nop                      	nop
00089e   0000     nop                      	nop
0008a0   0000     nop                      	nop
0008a2   0000     nop                      	nop
                                           	
                                           ;	.line	2236; meter_logger.c	PWM_PIN = 1;
0008a4   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
0008a6   0000     nop                      	nop
0008a8   0000     nop                      	nop
0008aa   0000     nop                      	nop
0008ac   0000     nop                      	nop
0008ae   0000     nop                      	nop
0008b0   0000     nop                      	nop
0008b2   0000     nop                      	nop
0008b4   0000     nop                      	nop
0008b6   0000     nop                      	nop
0008b8   0000     nop                      	nop
0008ba   0000     nop                      	nop
0008bc   0000     nop                      	nop
0008be   0000     nop                      	nop
0008c0   0000     nop                      	nop
0008c2   0000     nop                      	nop
0008c4   0000     nop                      	nop
0008c6   0000     nop                      	nop
0008c8   0000     nop                      	nop
0008ca   0000     nop                      	nop
0008cc   0000     nop                      	nop
0008ce   0000     nop                      	nop
0008d0   0000     nop                      	nop
0008d2   0000     nop                      	nop
0008d4   0000     nop                      	nop
0008d6   0000     nop                      	nop
0008d8   0000     nop                      	nop
0008da   0000     nop                      	nop
0008dc   0000     nop                      	nop
0008de   0000     nop                      	nop
0008e0   0000     nop                      	nop
0008e2   0000     nop                      	nop
0008e4   0000     nop                      	nop
0008e6   0000     nop                      	nop
0008e8   0000     nop                      	nop
0008ea   0000     nop                      	nop
0008ec   0000     nop                      	nop
0008ee   0000     nop                      	nop
0008f0   0000     nop                      	nop
0008f2   0000     nop                      	nop
0008f4   0000     nop                      	nop
0008f6   0000     nop                      	nop
0008f8   0000     nop                      	nop
0008fa   0000     nop                      	nop
0008fc   0000     nop                      	nop
0008fe   0000     nop                      	nop
000900   0000     nop                      	nop
000902   0000     nop                      	nop
000904   0000     nop                      	nop
000906   0000     nop                      	nop
000908   0000     nop                      	nop
00090a   0000     nop                      	nop
00090c   0000     nop                      	nop
00090e   0000     nop                      	nop
000910   0000     nop                      	nop
000912   0000     nop                      	nop
000914   0000     nop                      	nop
000916   0000     nop                      	nop
000918   0000     nop                      	nop
00091a   0000     nop                      	nop
00091c   0000     nop                      	nop
00091e   0000     nop                      	nop
000920   0000     nop                      	nop
000922   0000     nop                      	nop
000924   0000     nop                      	nop
000926   0000     nop                      	nop
000928   0000     nop                      	nop
00092a   0000     nop                      	nop
00092c   0000     nop                      	nop
00092e   0000     nop                      	nop
000930   0000     nop                      	nop
000932   0000     nop                      	nop
000934   0000     nop                      	nop
000936   0000     nop                      	nop
000938   0000     nop                      	nop
00093a   0000     nop                      	nop
00093c   0000     nop                      	nop
00093e   0000     nop                      	nop
000940   0000     nop                      	nop
000942   0000     nop                      	nop
000944   0000     nop                      	nop
000946   0000     nop                      	nop
000948   0000     nop                      	nop
00094a   0000     nop                      	nop
00094c   0000     nop                      	nop
00094e   0000     nop                      	nop
000950   0000     nop                      	nop
000952   0000     nop                      	nop
000954   0000     nop                      	nop
000956   0000     nop                      	nop
000958   0000     nop                      	nop
00095a   0000     nop                      	nop
00095c   0000     nop                      	nop
00095e   0000     nop                      	nop
000960   0000     nop                      	nop
000962   0000     nop                      	nop
000964   0000     nop                      	nop
000966   0000     nop                      	nop
000968   0000     nop                      	nop
00096a   0000     nop                      	nop
00096c   0000     nop                      	nop
00096e   0000     nop                      	nop
000970   0000     nop                      	nop
000972   0000     nop                      	nop
000974   0000     nop                      	nop
000976   0000     nop                      	nop
000978   0000     nop                      	nop
00097a   0000     nop                      	nop
00097c   0000     nop                      	nop
00097e   0000     nop                      	nop
000980   0000     nop                      	nop
000982   0000     nop                      	nop
000984   0000     nop                      	nop
000986   0000     nop                      	nop
000988   0000     nop                      	nop
00098a   0000     nop                      	nop
00098c   0000     nop                      	nop
00098e   0000     nop                      	nop
000990   0000     nop                      	nop
000992   0000     nop                      	nop
000994   0000     nop                      	nop
000996   0000     nop                      	nop
000998   0000     nop                      	nop
00099a   0000     nop                      	nop
00099c   0000     nop                      	nop
00099e   0000     nop                      	nop
0009a0   0000     nop                      	nop
0009a2   0000     nop                      	nop
0009a4   0000     nop                      	nop
0009a6   0000     nop                      	nop
0009a8   0000     nop                      	nop
0009aa   0000     nop                      	nop
0009ac   0000     nop                      	nop
0009ae   0000     nop                      	nop
0009b0   0000     nop                      	nop
0009b2   0000     nop                      	nop
                                           	
                                           ;	.line	2374; meter_logger.c	PWM_PIN = 0;
0009b4   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
0009b6   0000     nop                      	nop
0009b8   0000     nop                      	nop
0009ba   0000     nop                      	nop
0009bc   0000     nop                      	nop
0009be   0000     nop                      	nop
0009c0   0000     nop                      	nop
0009c2   0000     nop                      	nop
0009c4   0000     nop                      	nop
0009c6   0000     nop                      	nop
0009c8   0000     nop                      	nop
0009ca   0000     nop                      	nop
0009cc   0000     nop                      	nop
0009ce   0000     nop                      	nop
0009d0   0000     nop                      	nop
0009d2   0000     nop                      	nop
0009d4   0000     nop                      	nop
0009d6   0000     nop                      	nop
0009d8   0000     nop                      	nop
0009da   0000     nop                      	nop
0009dc   0000     nop                      	nop
0009de   0000     nop                      	nop
0009e0   0000     nop                      	nop
0009e2   0000     nop                      	nop
0009e4   0000     nop                      	nop
0009e6   0000     nop                      	nop
0009e8   0000     nop                      	nop
0009ea   0000     nop                      	nop
0009ec   0000     nop                      	nop
0009ee   0000     nop                      	nop
0009f0   0000     nop                      	nop
0009f2   0000     nop                      	nop
0009f4   0000     nop                      	nop
0009f6   0000     nop                      	nop
0009f8   0000     nop                      	nop
0009fa   0000     nop                      	nop
0009fc   0000     nop                      	nop
0009fe   0000     nop                      	nop
000a00   0000     nop                      	nop
000a02   0000     nop                      	nop
000a04   0000     nop                      	nop
000a06   0000     nop                      	nop
000a08   0000     nop                      	nop
000a0a   0000     nop                      	nop
000a0c   0000     nop                      	nop
000a0e   0000     nop                      	nop
000a10   0000     nop                      	nop
000a12   0000     nop                      	nop
000a14   0000     nop                      	nop
000a16   0000     nop                      	nop
000a18   0000     nop                      	nop
000a1a   0000     nop                      	nop
000a1c   0000     nop                      	nop
000a1e   0000     nop                      	nop
000a20   0000     nop                      	nop
000a22   0000     nop                      	nop
000a24   0000     nop                      	nop
000a26   0000     nop                      	nop
000a28   0000     nop                      	nop
000a2a   0000     nop                      	nop
000a2c   0000     nop                      	nop
000a2e   0000     nop                      	nop
000a30   0000     nop                      	nop
000a32   0000     nop                      	nop
000a34   0000     nop                      	nop
000a36   0000     nop                      	nop
000a38   0000     nop                      	nop
000a3a   0000     nop                      	nop
000a3c   0000     nop                      	nop
000a3e   0000     nop                      	nop
000a40   0000     nop                      	nop
000a42   0000     nop                      	nop
000a44   0000     nop                      	nop
000a46   0000     nop                      	nop
000a48   0000     nop                      	nop
000a4a   0000     nop                      	nop
000a4c   0000     nop                      	nop
000a4e   0000     nop                      	nop
000a50   0000     nop                      	nop
000a52   0000     nop                      	nop
000a54   0000     nop                      	nop
000a56   0000     nop                      	nop
000a58   0000     nop                      	nop
000a5a   0000     nop                      	nop
000a5c   0000     nop                      	nop
000a5e   0000     nop                      	nop
000a60   0000     nop                      	nop
000a62   0000     nop                      	nop
000a64   0000     nop                      	nop
000a66   0000     nop                      	nop
000a68   0000     nop                      	nop
000a6a   0000     nop                      	nop
000a6c   0000     nop                      	nop
000a6e   0000     nop                      	nop
000a70   0000     nop                      	nop
000a72   0000     nop                      	nop
000a74   0000     nop                      	nop
000a76   0000     nop                      	nop
000a78   0000     nop                      	nop
000a7a   0000     nop                      	nop
000a7c   0000     nop                      	nop
000a7e   0000     nop                      	nop
000a80   0000     nop                      	nop
000a82   0000     nop                      	nop
000a84   0000     nop                      	nop
000a86   0000     nop                      	nop
000a88   0000     nop                      	nop
000a8a   0000     nop                      	nop
000a8c   0000     nop                      	nop
000a8e   0000     nop                      	nop
000a90   0000     nop                      	nop
000a92   0000     nop                      	nop
000a94   0000     nop                      	nop
000a96   0000     nop                      	nop
000a98   0000     nop                      	nop
000a9a   0000     nop                      	nop
000a9c   0000     nop                      	nop
000a9e   0000     nop                      	nop
000aa0   0000     nop                      	nop
000aa2   0000     nop                      	nop
000aa4   0000     nop                      	nop
000aa6   0000     nop                      	nop
000aa8   0000     nop                      	nop
000aaa   0000     nop                      	nop
000aac   0000     nop                      	nop
000aae   0000     nop                      	nop
000ab0   0000     nop                      	nop
000ab2   0000     nop                      	nop
000ab4   0000     nop                      	nop
000ab6   0000     nop                      	nop
000ab8   0000     nop                      	nop
000aba   0000     nop                      	nop
000abc   0000     nop                      	nop
000abe   0000     nop                      	nop
000ac0   0000     nop                      	nop
000ac2   0000     nop                      	nop
                                           	
                                           ;	.line	2512; meter_logger.c	PWM_PIN = 1;
000ac4   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
000ac6   0000     nop                      	nop
000ac8   0000     nop                      	nop
000aca   0000     nop                      	nop
000acc   0000     nop                      	nop
000ace   0000     nop                      	nop
000ad0   0000     nop                      	nop
000ad2   0000     nop                      	nop
000ad4   0000     nop                      	nop
000ad6   0000     nop                      	nop
000ad8   0000     nop                      	nop
000ada   0000     nop                      	nop
000adc   0000     nop                      	nop
000ade   0000     nop                      	nop
000ae0   0000     nop                      	nop
000ae2   0000     nop                      	nop
000ae4   0000     nop                      	nop
000ae6   0000     nop                      	nop
000ae8   0000     nop                      	nop
000aea   0000     nop                      	nop
000aec   0000     nop                      	nop
000aee   0000     nop                      	nop
000af0   0000     nop                      	nop
000af2   0000     nop                      	nop
000af4   0000     nop                      	nop
000af6   0000     nop                      	nop
000af8   0000     nop                      	nop
000afa   0000     nop                      	nop
000afc   0000     nop                      	nop
000afe   0000     nop                      	nop
000b00   0000     nop                      	nop
000b02   0000     nop                      	nop
000b04   0000     nop                      	nop
000b06   0000     nop                      	nop
000b08   0000     nop                      	nop
000b0a   0000     nop                      	nop
000b0c   0000     nop                      	nop
000b0e   0000     nop                      	nop
000b10   0000     nop                      	nop
000b12   0000     nop                      	nop
000b14   0000     nop                      	nop
000b16   0000     nop                      	nop
000b18   0000     nop                      	nop
000b1a   0000     nop                      	nop
000b1c   0000     nop                      	nop
000b1e   0000     nop                      	nop
000b20   0000     nop                      	nop
000b22   0000     nop                      	nop
000b24   0000     nop                      	nop
000b26   0000     nop                      	nop
000b28   0000     nop                      	nop
000b2a   0000     nop                      	nop
000b2c   0000     nop                      	nop
000b2e   0000     nop                      	nop
000b30   0000     nop                      	nop
000b32   0000     nop                      	nop
000b34   0000     nop                      	nop
000b36   0000     nop                      	nop
000b38   0000     nop                      	nop
000b3a   0000     nop                      	nop
000b3c   0000     nop                      	nop
000b3e   0000     nop                      	nop
000b40   0000     nop                      	nop
000b42   0000     nop                      	nop
000b44   0000     nop                      	nop
000b46   0000     nop                      	nop
000b48   0000     nop                      	nop
000b4a   0000     nop                      	nop
000b4c   0000     nop                      	nop
000b4e   0000     nop                      	nop
000b50   0000     nop                      	nop
000b52   0000     nop                      	nop
000b54   0000     nop                      	nop
000b56   0000     nop                      	nop
000b58   0000     nop                      	nop
000b5a   0000     nop                      	nop
000b5c   0000     nop                      	nop
000b5e   0000     nop                      	nop
000b60   0000     nop                      	nop
000b62   0000     nop                      	nop
000b64   0000     nop                      	nop
000b66   0000     nop                      	nop
000b68   0000     nop                      	nop
000b6a   0000     nop                      	nop
000b6c   0000     nop                      	nop
000b6e   0000     nop                      	nop
000b70   0000     nop                      	nop
000b72   0000     nop                      	nop
000b74   0000     nop                      	nop
000b76   0000     nop                      	nop
000b78   0000     nop                      	nop
000b7a   0000     nop                      	nop
000b7c   0000     nop                      	nop
000b7e   0000     nop                      	nop
000b80   0000     nop                      	nop
000b82   0000     nop                      	nop
000b84   0000     nop                      	nop
000b86   0000     nop                      	nop
000b88   0000     nop                      	nop
000b8a   0000     nop                      	nop
000b8c   0000     nop                      	nop
000b8e   0000     nop                      	nop
000b90   0000     nop                      	nop
000b92   0000     nop                      	nop
000b94   0000     nop                      	nop
000b96   0000     nop                      	nop
000b98   0000     nop                      	nop
000b9a   0000     nop                      	nop
000b9c   0000     nop                      	nop
000b9e   0000     nop                      	nop
000ba0   0000     nop                      	nop
000ba2   0000     nop                      	nop
000ba4   0000     nop                      	nop
000ba6   0000     nop                      	nop
000ba8   0000     nop                      	nop
000baa   0000     nop                      	nop
000bac   0000     nop                      	nop
000bae   0000     nop                      	nop
000bb0   0000     nop                      	nop
000bb2   0000     nop                      	nop
000bb4   0000     nop                      	nop
000bb6   0000     nop                      	nop
000bb8   0000     nop                      	nop
000bba   0000     nop                      	nop
000bbc   0000     nop                      	nop
000bbe   0000     nop                      	nop
000bc0   0000     nop                      	nop
000bc2   0000     nop                      	nop
000bc4   0000     nop                      	nop
000bc6   0000     nop                      	nop
000bc8   0000     nop                      	nop
000bca   0000     nop                      	nop
000bcc   0000     nop                      	nop
000bce   0000     nop                      	nop
000bd0   0000     nop                      	nop
000bd2   0000     nop                      	nop
                                           	
                                           ;	.line	2650; meter_logger.c	PWM_PIN = 0;
000bd4   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
000bd6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
000bd8   ffd9
000bda   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_rx_disable	code
                                           _fsk_rx_disable:
                                           ;	.line	1126; meter_logger.c	void fsk_rx_disable() {
00499c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00499e   ffe5
0049a0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0049a2   ffd9
                                           ;	.line	1127; meter_logger.c	PIE2bits.CMIE = 0;		// Disable comparator interrupt
0049a4   9ca0     bcf     0xa0, 0x6, 0     	BCF	_PIE2bits, 6
0049a6   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1128; meter_logger.c	codec_type = NONE;
0049a8   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
0049aa   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0049ac   ffd9
0049ae   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_rx_enable	code
                                           _fsk_rx_enable:
                                           ;	.line	1090; meter_logger.c	void fsk_rx_enable() {
004480   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004482   ffe5
004484   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004486   ffd9
                                           ;	.line	1091; meter_logger.c	fsk_proto.state = START_BIT_WAIT;
004488   0e02     movlw   0x2              	MOVLW	0x02
00448a   0105     movlb   0x5              	BANKSEL	_fsk_proto
00448c   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1092; meter_logger.c	fsk_proto.start_bit_time = 0;
00448e   6b0a     clrf    0xa, 0x1         	CLRF	(_fsk_proto + 10), B
                                           ; removed redundant BANKSEL
004490   6b0b     clrf    0xb, 0x1         	CLRF	(_fsk_proto + 11), B
                                           ;	.line	1094; meter_logger.c	timer0_reload = TIMER0_FSK;
004492   0e9f     movlw   0x9f             	MOVLW	0x9f
004494   0105     movlb   0x5              	BANKSEL	_timer0_reload
004496   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
004498   0ef9     movlw   0xf9             	MOVLW	0xf9
                                           ; removed redundant BANKSEL
00449a   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
                                           ;	.line	1096; meter_logger.c	codec_type = FSK_RX;
00449c   0e04     movlw   0x4              	MOVLW	0x04
00449e   0105     movlb   0x5              	BANKSEL	_codec_type
0044a0   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1099; meter_logger.c	T0CONbits.TMR0ON = 1;
0044a2   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1100; meter_logger.c	T0CONbits.T0PS0 = 0;
0044a4   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1101; meter_logger.c	T0CONbits.T0PS1 = 0;
0044a6   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1102; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
0044a8   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1103; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
0044aa   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1104; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
0044ac   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1105; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
0044ae   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1106; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
0044b0   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1107; meter_logger.c	INTCONbits.TMR0IE = 0;		// Dont enable TMR0 Interrupt
0044b2   9af2     bcf     0xf2, 0x5, 0     	BCF	_INTCONbits, 5
                                           ;	.line	1110; meter_logger.c	CVRCONbits.CVREF = 0xf;	// 0V
0044b4   88b5     bsf     0xb5, 0x4, 0     	BSF	_CVRCONbits, 4
                                           ;	.line	1112; meter_logger.c	CVRCONbits.CVRSS = 0;	// VDD – VSS
0044b6   98b5     bcf     0xb5, 0x4, 0     	BCF	_CVRCONbits, 4
                                           ;	.line	1113; meter_logger.c	CVRCONbits.CVRR = 0;	// high range, 0.25 CVRSRC to 0.75 CVRSRC, with CVRSRC/32 step size
0044b8   9ab5     bcf     0xb5, 0x5, 0     	BCF	_CVRCONbits, 5
                                           ;	.line	1114; meter_logger.c	CVRCONbits.CVR = 9;		// 2,65625 V
0044ba   50b5     movf    0xb5, 0, 0       	MOVF	_CVRCONbits, W
0044bc   0bf0     andlw   0xf0             	ANDLW	0xf0
0044be   0909     iorlw   0x9              	IORLW	0x09
0044c0   6eb5     movwf   0xb5, 0          	MOVWF	_CVRCONbits
                                           ;	.line	1115; meter_logger.c	CVRCONbits.CVROE = 0;	// Comparator VREF Output disabled, CVREF voltage is disconnected from the RA2/AN2/VREF-/CVREF pin
0044c2   9cb5     bcf     0xb5, 0x6, 0     	BCF	_CVRCONbits, 6
                                           ;	.line	1116; meter_logger.c	CVRCONbits.CVREN = 1;	// Comparator Voltage Reference Enable bit
0044c4   8eb5     bsf     0xb5, 0x7, 0     	BSF	_CVRCONbits, 7
                                           ;	.line	1118; meter_logger.c	CMCONbits.CM = 0x6;		// four inputs multiplexed to two comparators
0044c6   50b4     movf    0xb4, 0, 0       	MOVF	_CMCONbits, W
0044c8   0bf8     andlw   0xf8             	ANDLW	0xf8
0044ca   0906     iorlw   0x6              	IORLW	0x06
0044cc   6eb4     movwf   0xb4, 0          	MOVWF	_CMCONbits
                                           ;	.line	1119; meter_logger.c	CMCONbits.CIS = 0;		// multiplexed to RA0/AN0 and RA1/AN1
0044ce   96b4     bcf     0xb4, 0x3, 0     	BCF	_CMCONbits, 3
                                           ;	.line	1120; meter_logger.c	CMCONbits.C1INV = 1;	// inverted output, C1 VIN+ < C1 VIN-
0044d0   88b4     bsf     0xb4, 0x4, 0     	BSF	_CMCONbits, 4
                                           ;	.line	1122; meter_logger.c	IPR2bits.CMIP = 1;		// high priority
0044d2   8ca2     bsf     0xa2, 0x6, 0     	BSF	_IPR2bits, 6
                                           ;	.line	1123; meter_logger.c	PIE2bits.CMIE = 1;		// Enable comparator interrupt
0044d4   8ca0     bsf     0xa0, 0x6, 0     	BSF	_PIE2bits, 6
0044d6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0044d8   ffd9
0044da   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_disable	code
                                           _fsk_tx_disable:
                                           ;	.line	1084; meter_logger.c	void fsk_tx_disable() {
004944   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004946   ffe5
004948   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00494a   ffd9
00494c   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1085; meter_logger.c	codec_type = NONE;
00494e   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1086; meter_logger.c	T0CONbits.TMR0ON = 0;	// Disable TMR0 
004950   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1087; meter_logger.c	PIE2bits.CMIE = 1;		// Disable comparator interrupt
004952   8ca0     bsf     0xa0, 0x6, 0     	BSF	_PIE2bits, 6
004954   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004956   ffd9
004958   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_enable	code
                                           _fsk_tx_enable:
                                           ;	.line	1066; meter_logger.c	void fsk_tx_enable() {
0046d0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0046d2   ffe5
0046d4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0046d6   ffd9
                                           ;	.line	1067; meter_logger.c	timer0_reload = TIMER0_FSK;
0046d8   0e9f     movlw   0x9f             	MOVLW	0x9f
0046da   0105     movlb   0x5              	BANKSEL	_timer0_reload
0046dc   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
0046de   0ef9     movlw   0xf9             	MOVLW	0xf9
                                           ; removed redundant BANKSEL
0046e0   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
0046e2   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	1069; meter_logger.c	fsk_proto.state = INIT_STATE;
0046e4   6b00     clrf    0, 0x1           	CLRF	_fsk_proto, B
                                           ;	.line	1070; meter_logger.c	codec_type = FSK_TX;
0046e6   0e05     movlw   0x5              	MOVLW	0x05
0046e8   0105     movlb   0x5              	BANKSEL	_codec_type
0046ea   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1073; meter_logger.c	T0CONbits.TMR0ON = 1;
0046ec   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1074; meter_logger.c	T0CONbits.T0PS0 = 0;
0046ee   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1075; meter_logger.c	T0CONbits.T0PS1 = 0;
0046f0   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1076; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
0046f2   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1077; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
0046f4   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1078; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
0046f6   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1079; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
0046f8   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1080; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
0046fa   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1081; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
0046fc   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
0046fe   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004700   ffd9
004702   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_tx_byte	code
                                           _rs232_tx_byte:
                                           ;	.line	1059; meter_logger.c	void rs232_tx_byte(unsigned char c) {
0047be   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0047c0   ffe5
0047c2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0047c4   ffd9
0047c6   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0047c8   ffe5
0047ca   0e02     movlw   0x2              	MOVLW	0x02
0047cc   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0047ce   f000
                                           ;	.line	1060; meter_logger.c	rs232_proto.data = c;
0047d0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0047d2   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
0047d4   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	1061; meter_logger.c	rs232_proto.data_len = 8;
0047d6   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
0047d8   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	1062; meter_logger.c	T0CONbits.TMR0ON = 1;		// start timer 0
0047da   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1063; meter_logger.c	INTCONbits.TMR0IF = 1;		// enter timer interrupt handler now
0047dc   84f2     bsf     0xf2, 0x2, 0     	BSF	_INTCONbits, 2
0047de   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0047e0   f000
0047e2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0047e4   ffd9
0047e6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_rx_disable	code
                                           _rs232_rx_disable:
                                           ;	.line	1053; meter_logger.c	void rs232_rx_disable() {
00495a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00495c   ffe5
00495e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004960   ffd9
                                           ;	.line	1054; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
004962   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
004964   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1055; meter_logger.c	codec_type = NONE;
004966   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1056; meter_logger.c	T0CONbits.TMR0ON = 0;
004968   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
00496a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00496c   ffd9
00496e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_rx_enable	code
                                           _rs232_rx_enable:
                                           ;	.line	1029; meter_logger.c	void rs232_rx_enable() {
004572   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004574   ffe5
004576   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004578   ffd9
                                           ;	.line	1030; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
00457a   0e02     movlw   0x2              	MOVLW	0x02
00457c   0105     movlb   0x5              	BANKSEL	_rs232_proto
00457e   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1031; meter_logger.c	rs232_proto.data_len = 0;
004580   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1033; meter_logger.c	timer0_reload = TIMER0_RS232_1200;
004582   0eae     movlw   0xae             	MOVLW	0xae
004584   0105     movlb   0x5              	BANKSEL	_timer0_reload
004586   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
004588   0ef9     movlw   0xf9             	MOVLW	0xf9
                                           ; removed redundant BANKSEL
00458a   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
                                           ;	.line	1035; meter_logger.c	codec_type = RS232_RX;
00458c   0e02     movlw   0x2              	MOVLW	0x02
00458e   0105     movlb   0x5              	BANKSEL	_codec_type
004590   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1038; meter_logger.c	T0CONbits.TMR0ON = 0;
004592   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1039; meter_logger.c	T0CONbits.T0PS0 = 0;
004594   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1040; meter_logger.c	T0CONbits.T0PS1 = 0;
004596   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1041; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004598   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1042; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
00459a   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1043; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
00459c   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1044; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
00459e   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1045; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
0045a0   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1046; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
0045a2   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1047; meter_logger.c	INTCONbits.TMR0IF = 0;
0045a4   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1049; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
0045a6   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1050; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
0045a8   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
0045aa   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0045ac   ffd9
0045ae   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_tx_disable	code
                                           _rs232_tx_disable:
                                           ;	.line	1023; meter_logger.c	void rs232_tx_disable() {
004970   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004972   ffe5
004974   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004976   ffd9
004978   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1024; meter_logger.c	codec_type = NONE;
00497a   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1025; meter_logger.c	IR_LED_PIN = 0;				// no need to set it to inverted idle
00497c   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1026; meter_logger.c	T0CONbits.TMR0ON = 0;
00497e   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
004980   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004982   ffd9
004984   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_tx_enable	code
                                           _rs232_tx_enable:
                                           ;	.line	997; meter_logger.c	void rs232_tx_enable() {
0045b0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0045b2   ffe5
0045b4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0045b6   ffd9
                                           ;	.line	998; meter_logger.c	timer0_reload = TIMER0_RS232_1200;
0045b8   0eae     movlw   0xae             	MOVLW	0xae
0045ba   0105     movlb   0x5              	BANKSEL	_timer0_reload
0045bc   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
0045be   0ef9     movlw   0xf9             	MOVLW	0xf9
                                           ; removed redundant BANKSEL
0045c0   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
0045c2   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	1000; meter_logger.c	rs232_proto.state = INIT_STATE;
0045c4   6b23     clrf    0x23, 0x1        	CLRF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1001; meter_logger.c	rs232_proto.data_len = 0;
0045c6   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1003; meter_logger.c	IR_LED_PIN = 0;				// inverted rs232 output on ir, idle = no ir light
0045c8   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1005; meter_logger.c	codec_type = RS232_TX;
0045ca   0e03     movlw   0x3              	MOVLW	0x03
0045cc   0105     movlb   0x5              	BANKSEL	_codec_type
0045ce   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1008; meter_logger.c	T0CONbits.TMR0ON = 0;
0045d0   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1009; meter_logger.c	T0CONbits.T0PS0 = 0;
0045d2   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1010; meter_logger.c	T0CONbits.T0PS1 = 0;
0045d4   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1011; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
0045d6   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1012; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
0045d8   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1013; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
0045da   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1014; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
0045dc   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1015; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
0045de   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1016; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
0045e0   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1017; meter_logger.c	INTCONbits.TMR0IF = 0;
0045e2   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1020; meter_logger.c	T0CONbits.TMR0ON = 0;		// timer 0 started in rs232_tx_byte()
0045e4   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
0045e6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0045e8   ffd9
0045ea   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_ir_disable	code
                                           _testo_ir_disable:
                                           ;	.line	992; meter_logger.c	void testo_ir_disable() {
0049b0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0049b2   ffe5
0049b4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0049b6   ffd9
0049b8   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	993; meter_logger.c	codec_type = NONE;
0049ba   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	994; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
0049bc   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
0049be   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0049c0   ffd9
0049c2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_ir_enable	code
                                           _testo_ir_enable:
                                           ;	.line	968; meter_logger.c	void testo_ir_enable() {
0045ec   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0045ee   ffe5
0045f0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0045f2   ffd9
0045f4   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	969; meter_logger.c	testo_ir_proto.state = INIT_STATE;
0045f6   6b1d     clrf    0x1d, 0x1        	CLRF	_testo_ir_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	970; meter_logger.c	testo_ir_proto.start_bit_len = 0;
0045f8   6b1f     clrf    0x1f, 0x1        	CLRF	(_testo_ir_proto + 2), B
                                           ;	.line	972; meter_logger.c	timer0_reload = TIMER0_TESTO;
0045fa   0e23     movlw   0x23             	MOVLW	0x23
0045fc   0105     movlb   0x5              	BANKSEL	_timer0_reload
0045fe   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
004600   0ef3     movlw   0xf3             	MOVLW	0xf3
                                           ; removed redundant BANKSEL
004602   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
                                           ;	.line	974; meter_logger.c	codec_type = TESTO;
004604   0e01     movlw   0x1              	MOVLW	0x01
004606   0105     movlb   0x5              	BANKSEL	_codec_type
004608   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	977; meter_logger.c	T0CONbits.TMR0ON = 0;
00460a   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	978; meter_logger.c	T0CONbits.T0PS0 = 0;
00460c   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	979; meter_logger.c	T0CONbits.T0PS1 = 0;
00460e   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	980; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004610   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	981; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004612   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	982; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004614   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	983; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004616   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	984; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004618   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	985; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
00461a   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	986; meter_logger.c	INTCONbits.TMR0IF = 0;
00461c   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	988; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
00461e   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	989; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004620   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
004622   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004624   ffd9
004626   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_valid_err_corr	code
                                           _testo_valid_err_corr:
                                           ;	.line	913; meter_logger.c	unsigned char testo_valid_err_corr(unsigned int c) {
003170   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003172   ffe5
003174   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003176   ffd9
003178   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00317a   ffe5
00317c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00317e   ffe5
003180   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003182   ffe5
003184   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003186   ffe5
003188   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00318a   ffe5
00318c   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00318e   ffe5
003190   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003192   ffe5
003194   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
003196   ffe5
003198   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
00319a   ffe5
00319c   0e02     movlw   0x2              	MOVLW	0x02
00319e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0031a0   f000
0031a2   0e03     movlw   0x3              	MOVLW	0x03
0031a4   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0031a6   f001
                                           ;	.line	920; meter_logger.c	calculated_err_corr_bit = 0;
0031a8   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	921; meter_logger.c	for (i = 0; i < 8; i++) {
0031aa   0e78     movlw   0x78             	MOVLW	0x78
0031ac   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
0031ae   6e03     movwf   0x3, 0           	MOVWF	r0x03
0031b0   6a04     clrf    0x4, 0           	CLRF	r0x04
0031b2   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00704_DS_:
                                           ;	.line	922; meter_logger.c	calculated_err_corr_bit ^= (((c & 0x78) & (1 << i)) != 0);   // 0b01111000
0031b4   0e01     movlw   0x1              	MOVLW	0x01
0031b6   6e06     movwf   0x6, 0           	MOVWF	r0x06
0031b8   0e00     movlw   0                	MOVLW	0x00
0031ba   6e07     movwf   0x7, 0           	MOVWF	r0x07
0031bc   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0031be   e006     bz      0x31cc           	BZ	_00746_DS_
0031c0   6ce8     negf    0xe8, 0          	NEGF	WREG
0031c2   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00747_DS_:
0031c4   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
0031c6   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
0031c8   0f01     addlw   0x1              	ADDLW	0x01
0031ca   e3fc     bnc     0x31c4           	BNC	_00747_DS_
                                           _00746_DS_:
0031cc   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0031ce   1606     andwf   0x6, 0x1, 0      	ANDWF	r0x06, F
0031d0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0031d2   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
0031d4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0031d6   e105     bnz     0x31e2           	BNZ	_00749_DS_
0031d8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0031da   e103     bnz     0x31e2           	BNZ	_00749_DS_
0031dc   6a06     clrf    0x6, 0           	CLRF	r0x06
0031de   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
0031e0   d001     bra     0x31e4           	BRA	_00750_DS_
                                           _00749_DS_:
0031e2   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00750_DS_:
0031e4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0031e6   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
0031e8   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
0031ea   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0031ec   6a06     clrf    0x6, 0           	CLRF	r0x06
0031ee   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
0031f0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0031f2   6e07     movwf   0x7, 0           	MOVWF	r0x07
0031f4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0031f6   1807     xorwf   0x7, 0, 0        	XORWF	r0x07, W
0031f8   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	921; meter_logger.c	for (i = 0; i < 8; i++) {
0031fa   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
0031fc   0e08     movlw   0x8              	MOVLW	0x08
0031fe   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
003200   e3d9     bnc     0x31b4           	BNC	_00704_DS_
                                           ;	.line	925; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003202   4402     rlncf   0x2, 0, 0        	RLNCF	r0x02, W
003204   0bfe     andlw   0xfe             	ANDLW	0xfe
003206   6e03     movwf   0x3, 0           	MOVWF	r0x03
                                           ;	.line	928; meter_logger.c	calculated_err_corr_bit = 0;
003208   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	929; meter_logger.c	for (i = 0; i < 8; i++) {
00320a   0ee6     movlw   0xe6             	MOVLW	0xe6
00320c   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
00320e   6e04     movwf   0x4, 0           	MOVWF	r0x04
003210   6a05     clrf    0x5, 0           	CLRF	r0x05
003212   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00706_DS_:
                                           ;	.line	930; meter_logger.c	calculated_err_corr_bit ^= (((c & 0xe6) & (1 << i)) != 0);   // 0b11100110
003214   0e01     movlw   0x1              	MOVLW	0x01
003216   6e07     movwf   0x7, 0           	MOVWF	r0x07
003218   0e00     movlw   0                	MOVLW	0x00
00321a   6e08     movwf   0x8, 0           	MOVWF	r0x08
00321c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00321e   e006     bz      0x322c           	BZ	_00754_DS_
003220   6ce8     negf    0xe8, 0          	NEGF	WREG
003222   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00755_DS_:
003224   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003226   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003228   0f01     addlw   0x1              	ADDLW	0x01
00322a   e3fc     bnc     0x3224           	BNC	_00755_DS_
                                           _00754_DS_:
00322c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00322e   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003230   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003232   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003234   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003236   e105     bnz     0x3242           	BNZ	_00757_DS_
003238   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00323a   e103     bnz     0x3242           	BNZ	_00757_DS_
00323c   6a07     clrf    0x7, 0           	CLRF	r0x07
00323e   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003240   d001     bra     0x3244           	BRA	_00758_DS_
                                           _00757_DS_:
003242   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00758_DS_:
003244   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003246   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003248   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
00324a   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
00324c   6a07     clrf    0x7, 0           	CLRF	r0x07
00324e   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003250   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003252   6e08     movwf   0x8, 0           	MOVWF	r0x08
003254   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003256   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003258   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	929; meter_logger.c	for (i = 0; i < 8; i++) {
00325a   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
00325c   0e08     movlw   0x8              	MOVLW	0x08
00325e   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003260   e3d9     bnc     0x3214           	BNC	_00706_DS_
                                           ;	.line	932; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003262   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003264   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	933; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003266   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003268   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
                                           ;	.line	936; meter_logger.c	calculated_err_corr_bit = 0;
00326a   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	937; meter_logger.c	for (i = 0; i < 8; i++) {
00326c   0ed5     movlw   0xd5             	MOVLW	0xd5
00326e   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003270   6e04     movwf   0x4, 0           	MOVWF	r0x04
003272   6a05     clrf    0x5, 0           	CLRF	r0x05
003274   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00708_DS_:
                                           ;	.line	938; meter_logger.c	calculated_err_corr_bit ^= (((c & 0xd5) & (1 << i)) != 0);   // 0b11010101
003276   0e01     movlw   0x1              	MOVLW	0x01
003278   6e07     movwf   0x7, 0           	MOVWF	r0x07
00327a   0e00     movlw   0                	MOVLW	0x00
00327c   6e08     movwf   0x8, 0           	MOVWF	r0x08
00327e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003280   e006     bz      0x328e           	BZ	_00763_DS_
003282   6ce8     negf    0xe8, 0          	NEGF	WREG
003284   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00764_DS_:
003286   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003288   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
00328a   0f01     addlw   0x1              	ADDLW	0x01
00328c   e3fc     bnc     0x3286           	BNC	_00764_DS_
                                           _00763_DS_:
00328e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003290   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003292   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003294   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003296   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003298   e105     bnz     0x32a4           	BNZ	_00766_DS_
00329a   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00329c   e103     bnz     0x32a4           	BNZ	_00766_DS_
00329e   6a07     clrf    0x7, 0           	CLRF	r0x07
0032a0   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
0032a2   d001     bra     0x32a6           	BRA	_00767_DS_
                                           _00766_DS_:
0032a4   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00767_DS_:
0032a6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0032a8   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
0032aa   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
0032ac   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0032ae   6a07     clrf    0x7, 0           	CLRF	r0x07
0032b0   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
0032b2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0032b4   6e08     movwf   0x8, 0           	MOVWF	r0x08
0032b6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0032b8   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
0032ba   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	937; meter_logger.c	for (i = 0; i < 8; i++) {
0032bc   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
0032be   0e08     movlw   0x8              	MOVLW	0x08
0032c0   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
0032c2   e3d9     bnc     0x3276           	BNC	_00708_DS_
                                           ;	.line	940; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
0032c4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0032c6   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	941; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
0032c8   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0032ca   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
                                           ;	.line	944; meter_logger.c	calculated_err_corr_bit = 0;
0032cc   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	945; meter_logger.c	for (i = 0; i < 8; i++) {
0032ce   0e8b     movlw   0x8b             	MOVLW	0x8b
0032d0   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
0032d2   6e04     movwf   0x4, 0           	MOVWF	r0x04
0032d4   6a05     clrf    0x5, 0           	CLRF	r0x05
0032d6   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00710_DS_:
                                           ;	.line	946; meter_logger.c	calculated_err_corr_bit ^= (((c & 0x8b) & (1 << i)) != 0);   // 0b10001011
0032d8   0e01     movlw   0x1              	MOVLW	0x01
0032da   6e07     movwf   0x7, 0           	MOVWF	r0x07
0032dc   0e00     movlw   0                	MOVLW	0x00
0032de   6e08     movwf   0x8, 0           	MOVWF	r0x08
0032e0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0032e2   e006     bz      0x32f0           	BZ	_00772_DS_
0032e4   6ce8     negf    0xe8, 0          	NEGF	WREG
0032e6   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00773_DS_:
0032e8   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
0032ea   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
0032ec   0f01     addlw   0x1              	ADDLW	0x01
0032ee   e3fc     bnc     0x32e8           	BNC	_00773_DS_
                                           _00772_DS_:
0032f0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0032f2   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
0032f4   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0032f6   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
0032f8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0032fa   e105     bnz     0x3306           	BNZ	_00775_DS_
0032fc   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0032fe   e103     bnz     0x3306           	BNZ	_00775_DS_
003300   6a07     clrf    0x7, 0           	CLRF	r0x07
003302   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003304   d001     bra     0x3308           	BRA	_00776_DS_
                                           _00775_DS_:
003306   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00776_DS_:
003308   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00330a   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
00330c   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
00330e   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003310   6a07     clrf    0x7, 0           	CLRF	r0x07
003312   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003314   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003316   6e08     movwf   0x8, 0           	MOVWF	r0x08
003318   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00331a   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
00331c   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	945; meter_logger.c	for (i = 0; i < 8; i++) {
00331e   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003320   0e08     movlw   0x8              	MOVLW	0x08
003322   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003324   e3d9     bnc     0x32d8           	BNC	_00710_DS_
                                           ;	.line	948; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003326   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003328   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	959; meter_logger.c	if ((c >> 8) == calculated_err_corr) {
00332a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00332c   6e00     movwf   0, 0             	MOVWF	r0x00
00332e   6a01     clrf    0x1, 0           	CLRF	r0x01
003330   6a02     clrf    0x2, 0           	CLRF	r0x02
003332   5000     movf    0, 0, 0          	MOVF	r0x00, W
003334   1803     xorwf   0x3, 0, 0        	XORWF	r0x03, W
003336   e103     bnz     0x333e           	BNZ	_00780_DS_
003338   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00333a   1802     xorwf   0x2, 0, 0        	XORWF	r0x02, W
00333c   e001     bz      0x3340           	BZ	_00781_DS_
                                           _00780_DS_:
00333e   d002     bra     0x3344           	BRA	_00702_DS_
                                           _00781_DS_:
                                           ;	.line	960; meter_logger.c	return 1;
003340   0e01     movlw   0x1              	MOVLW	0x01
003342   d001     bra     0x3346           	BRA	_00712_DS_
                                           _00702_DS_:
                                           ;	.line	963; meter_logger.c	return 0;
003344   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00712_DS_:
003346   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
003348   f008
00334a   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
00334c   f007
00334e   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003350   f006
003352   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003354   f005
003356   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003358   f004
00335a   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00335c   f003
00335e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003360   f002
003362   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003364   f001
003366   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003368   f000
00336a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00336c   ffd9
00336e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__reverse	code
                                           _reverse:
                                           ;	.line	905; meter_logger.c	unsigned char reverse(unsigned char b) {
004300   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004302   ffe5
004304   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004306   ffd9
004308   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00430a   ffe5
00430c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00430e   ffe5
004310   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004312   ffe5
004314   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004316   ffe5
004318   0e02     movlw   0x2              	MOVLW	0x02
00431a   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00431c   f000
                                           ;	.line	907; meter_logger.c	c  = ((b >>  1) & 0x55) | ((b <<  1) & 0xaa);
00431e   4000     rrncf   0, 0, 0          	RRNCF	r0x00, W
004320   0b7f     andlw   0x7f             	ANDLW	0x7f
004322   6e01     movwf   0x1, 0           	MOVWF	r0x01
004324   0e55     movlw   0x55             	MOVLW	0x55
004326   1601     andwf   0x1, 0x1, 0      	ANDWF	r0x01, F
004328   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
00432a   0bfe     andlw   0xfe             	ANDLW	0xfe
00432c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00432e   0eaa     movlw   0xaa             	MOVLW	0xaa
004330   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004332   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004334   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	908; meter_logger.c	c |= ((b >>  2) & 0x33) | ((b <<  2) & 0xcc);
004336   4000     rrncf   0, 0, 0          	RRNCF	r0x00, W
004338   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
00433a   0b3f     andlw   0x3f             	ANDLW	0x3f
00433c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00433e   0e33     movlw   0x33             	MOVLW	0x33
004340   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004342   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
004344   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
004346   0bfc     andlw   0xfc             	ANDLW	0xfc
004348   6e03     movwf   0x3, 0           	MOVWF	r0x03
00434a   0ecc     movlw   0xcc             	MOVLW	0xcc
00434c   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
00434e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004350   1202     iorwf   0x2, 0x1, 0      	IORWF	r0x02, F
004352   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004354   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	909; meter_logger.c	c |= ((b >>  4) & 0x0f) | ((b <<  4) & 0xf0);
004356   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
004358   0b0f     andlw   0xf              	ANDLW	0x0f
00435a   6e02     movwf   0x2, 0           	MOVWF	r0x02
00435c   0e0f     movlw   0xf              	MOVLW	0x0f
00435e   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004360   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
004362   0bf0     andlw   0xf0             	ANDLW	0xf0
004364   6e03     movwf   0x3, 0           	MOVWF	r0x03
004366   0ef0     movlw   0xf0             	MOVLW	0xf0
004368   1403     andwf   0x3, 0, 0        	ANDWF	r0x03, W
00436a   6e00     movwf   0, 0             	MOVWF	r0x00
00436c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00436e   1202     iorwf   0x2, 0x1, 0      	IORWF	r0x02, F
004370   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004372   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	910; meter_logger.c	return(c);
004374   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004376   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004378   f003
00437a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00437c   f002
00437e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004380   f001
004382   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004384   f000
004386   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004388   ffd9
00438a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__my_usart_open	code
                                           _my_usart_open:
                                           ;	.line	875; meter_logger.c	void my_usart_open() {
0047e8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0047ea   ffe5
0047ec   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0047ee   ffd9
                                           ;	.line	876; meter_logger.c	SPBRG = 103;					// 8MHz => 19230 baud
0047f0   0e67     movlw   0x67             	MOVLW	0x67
0047f2   6eaf     movwf   0xaf, 0          	MOVWF	_SPBRG
                                           ;	.line	877; meter_logger.c	TXSTAbits.BRGH = 1;	// (0 = low speed)
0047f4   84ac     bsf     0xac, 0x2, 0     	BSF	_TXSTAbits, 2
                                           ;	.line	878; meter_logger.c	TXSTAbits.SYNC = 0;	// (0 = asynchronous)
0047f6   98ac     bcf     0xac, 0x4, 0     	BCF	_TXSTAbits, 4
                                           ;	.line	879; meter_logger.c	BAUDCONbits.BRG16 = 1;
0047f8   86b8     bsf     0xb8, 0x3, 0     	BSF	_BAUDCONbits, 3
                                           ;	.line	882; meter_logger.c	RCSTAbits.SPEN = 1; // (1 = serial port enabled)
0047fa   8eab     bsf     0xab, 0x7, 0     	BSF	_RCSTAbits, 7
                                           ;	.line	885; meter_logger.c	PIE1bits.TXIE = 0; // (1 = enabled)
0047fc   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
                                           ;	.line	886; meter_logger.c	IPR1bits.TXIP = 0; // USART Tx on low priority interrupt
0047fe   989f     bcf     0x9f, 0x4, 0     	BCF	_IPR1bits, 4
                                           ;	.line	889; meter_logger.c	PIE1bits.RCIE = 1; // (1 = enabled)
004800   8a9d     bsf     0x9d, 0x5, 0     	BSF	_PIE1bits, 5
                                           ;	.line	890; meter_logger.c	IPR1bits.RCIP = 0; // USART Rx on low priority interrupt
004802   9a9f     bcf     0x9f, 0x5, 0     	BCF	_IPR1bits, 5
                                           ;	.line	893; meter_logger.c	TXSTAbits.TX9 = 0; // (0 = 8-bit transmit)
004804   9cac     bcf     0xac, 0x6, 0     	BCF	_TXSTAbits, 6
                                           ;	.line	896; meter_logger.c	RCSTAbits.RX9 = 0; // (0 = 8-bit reception)
004806   9cab     bcf     0xab, 0x6, 0     	BCF	_RCSTAbits, 6
                                           ;	.line	899; meter_logger.c	RCSTAbits.CREN = 1; // (1 = Enables receiver)
004808   88ab     bsf     0xab, 0x4, 0     	BSF	_RCSTAbits, 4
                                           ;	.line	902; meter_logger.c	TXSTAbits.TXEN = 1; // (1 = transmit enabled)
00480a   8aac     bsf     0xac, 0x5, 0     	BSF	_TXSTAbits, 5
00480c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00480e   ffd9
004810   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__init_system	code
                                           _init_system:
                                           ;	.line	774; meter_logger.c	void init_system() {
0044dc   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0044de   ffe5
0044e0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0044e2   ffd9
                                           ;	.line	776; meter_logger.c	TRIS_COMP1 = INPUT_STATE;		// as input
0044e4   8092     bsf     0x92, 0, 0       	BSF	_TRISAbits, 0
                                           ;	.line	777; meter_logger.c	TRIS_COMP2 = INPUT_STATE;		// as input
0044e6   8292     bsf     0x92, 0x1, 0     	BSF	_TRISAbits, 1
                                           ;	.line	779; meter_logger.c	TRIS_IR_PIN = INPUT_STATE;		// as input
0044e8   8093     bsf     0x93, 0, 0       	BSF	_TRISBbits, 0
                                           ;	.line	781; meter_logger.c	TRIS_LED_PIN = OUTPUT_STATE;	// as output
0044ea   9893     bcf     0x93, 0x4, 0     	BCF	_TRISBbits, 4
                                           ;	.line	782; meter_logger.c	LED_PIN = 0;					// and clear
0044ec   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	784; meter_logger.c	TRIS_IR_LED_PIN = OUTPUT_STATE;	// as output
0044ee   9293     bcf     0x93, 0x1, 0     	BCF	_TRISBbits, 1
                                           ;	.line	785; meter_logger.c	IR_LED_PIN = 0;					// and clear
0044f0   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	787; meter_logger.c	TRIS_V_SENSE = INPUT_STATE;		// as input
0044f2   8a92     bsf     0x92, 0x5, 0     	BSF	_TRISAbits, 5
                                           ;	.line	789; meter_logger.c	TRIS_DEBUG_PIN = OUTPUT_STATE;	// as output
0044f4   9493     bcf     0x93, 0x2, 0     	BCF	_TRISBbits, 2
                                           ;	.line	790; meter_logger.c	DEBUG_PIN = 0;					// and clear
0044f6   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	792; meter_logger.c	TRIS_DEBUG2_PIN = OUTPUT_STATE;	// as output
0044f8   9693     bcf     0x93, 0x3, 0     	BCF	_TRISBbits, 3
                                           ;	.line	793; meter_logger.c	DEBUG2_PIN = 0;					// and clear
0044fa   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	795; meter_logger.c	TRIS_DEBUG3_PIN = OUTPUT_STATE;	// as output
0044fc   9893     bcf     0x93, 0x4, 0     	BCF	_TRISBbits, 4
                                           ;	.line	796; meter_logger.c	DEBUG3_PIN = 0;					// and clear
0044fe   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	800; meter_logger.c	TRIS_PWM_PIN = OUTPUT_STATE;	// enable output from pwm module at init
004500   9294     bcf     0x94, 0x1, 0     	BCF	_TRISCbits, 1
                                           ;	.line	801; meter_logger.c	PWM_PIN = 0;					// and clear
004502   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
                                           ;	.line	804; meter_logger.c	TRIS_RX_PIN = INPUT_STATE;		// as input
004504   8e94     bsf     0x94, 0x7, 0     	BSF	_TRISCbits, 7
                                           ;	.line	805; meter_logger.c	TRIS_TX_PIN = OUTPUT_STATE;		// as input
004506   9c94     bcf     0x94, 0x6, 0     	BCF	_TRISCbits, 6
                                           ;	.line	810; meter_logger.c	T1CONbits.TMR1ON = 1;
004508   80cd     bsf     0xcd, 0, 0       	BSF	_T1CONbits, 0
                                           ;	.line	811; meter_logger.c	T1CONbits.RD16 = 1;
00450a   8ecd     bsf     0xcd, 0x7, 0     	BSF	_T1CONbits, 7
                                           ;	.line	812; meter_logger.c	T1CONbits.TMR1CS = 0;   // internal clock source
00450c   92cd     bcf     0xcd, 0x1, 0     	BCF	_T1CONbits, 1
                                           ;	.line	813; meter_logger.c	T1CONbits.T1OSCEN = 0;  // dont put t1 on pin
00450e   96cd     bcf     0xcd, 0x3, 0     	BCF	_T1CONbits, 3
                                           ;	.line	814; meter_logger.c	T1CONbits.T1CKPS0 = 0;
004510   98cd     bcf     0xcd, 0x4, 0     	BCF	_T1CONbits, 4
                                           ;	.line	815; meter_logger.c	T1CONbits.T1CKPS1 = 0;
004512   9acd     bcf     0xcd, 0x5, 0     	BCF	_T1CONbits, 5
                                           ;	.line	816; meter_logger.c	IPR1bits.TMR1IP = 0;	// low priority
004514   909f     bcf     0x9f, 0, 0       	BCF	_IPR1bits, 0
                                           ;	.line	817; meter_logger.c	PIE1bits.TMR1IE = 1;	// Ensure that TMR1 Interrupt is enabled
004516   809d     bsf     0x9d, 0, 0       	BSF	_PIE1bits, 0
                                           ;	.line	818; meter_logger.c	PIR1bits.TMR1IF = 1;	// Force Instant entry to Timer 1 Interrupt
004518   809e     bsf     0x9e, 0, 0       	BSF	_PIR1bits, 0
                                           ;	.line	849; meter_logger.c	RCONbits.IPEN = 1;
00451a   8ed0     bsf     0xd0, 0x7, 0     	BSF	_RCONbits, 7
                                           ;	.line	851; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int, enabled when ir demodulator is started
00451c   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	852; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
00451e   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
                                           ;	.line	854; meter_logger.c	INTCONbits.PEIE = 1;
004520   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	855; meter_logger.c	INTCONbits.GIE = 1;	/* Enable Global interrupts   */	
004522   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           ;	.line	860; meter_logger.c	IPR1bits.RCIP = 0;
004524   9a9f     bcf     0x9f, 0x5, 0     	BCF	_IPR1bits, 5
                                           ;	.line	861; meter_logger.c	IPR1bits.TXIP = 0;
004526   989f     bcf     0x9f, 0x4, 0     	BCF	_IPR1bits, 4
                                           ;	.line	872; meter_logger.c	my_usart_open();
004528   ecf4     call    0x47e8, 0        	CALL	_my_usart_open
00452a   f023
00452c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00452e   ffd9
004530   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__sleep_ms	code
                                           _sleep_ms:
                                           ;	.line	754; meter_logger.c	void sleep_ms(unsigned int ms) {
00425a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00425c   ffe5
00425e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004260   ffd9
004262   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004264   ffe5
004266   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004268   ffe5
00426a   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00426c   ffe5
00426e   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004270   ffe5
004272   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004274   ffe5
004276   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004278   ffe5
00427a   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
00427c   ffe5
00427e   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
004280   ffe5
004282   0e02     movlw   0x2              	MOVLW	0x02
004284   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004286   f000
004288   0e03     movlw   0x3              	MOVLW	0x03
00428a   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
00428c   f001
                                           ;	.line	757; meter_logger.c	start_timer_1_ms = timer_1_ms;	
00428e   c540     movff   0x540, 0x2       	MOVFF	_timer_1_ms, r0x02
004290   f002
004292   c541     movff   0x541, 0x3       	MOVFF	(_timer_1_ms + 1), r0x03
004294   f003
                                           ;	.line	760; meter_logger.c	do {
004296   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004298   08ff     sublw   0xff             	SUBLW	0xff
00429a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00429c   0eff     movlw   0xff             	MOVLW	0xff
00429e   5403     subfwb  0x3, 0, 0        	SUBFWB	r0x03, W
0042a0   6e05     movwf   0x5, 0           	MOVWF	r0x05
                                           _00665_DS_:
                                           ;	.line	761; meter_logger.c	if (start_timer_1_ms <= timer_1_ms) {
0042a2   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0042a4   0105     movlb   0x5              	BANKSEL	(_timer_1_ms + 1)
0042a6   5d41     subwf   0x41, 0, 0x1     	SUBWF	(_timer_1_ms + 1), W, B
0042a8   e102     bnz     0x42ae           	BNZ	_00676_DS_
0042aa   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
0042ac   5d40     subwf   0x40, 0, 0x1     	SUBWF	_timer_1_ms, W, B
                                           _00676_DS_:
0042ae   e308     bnc     0x42c0           	BNC	_00663_DS_
                                           ;	.line	762; meter_logger.c	diff = timer_1_ms - start_timer_1_ms;
0042b0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0042b2   0105     movlb   0x5              	BANKSEL	_timer_1_ms
0042b4   5d40     subwf   0x40, 0, 0x1     	SUBWF	_timer_1_ms, W, B
0042b6   6e06     movwf   0x6, 0           	MOVWF	r0x06
0042b8   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
0042ba   5941     subwfb  0x41, 0, 0x1     	SUBWFB	(_timer_1_ms + 1), W, B
0042bc   6e07     movwf   0x7, 0           	MOVWF	r0x07
0042be   d007     bra     0x42ce           	BRA	_00666_DS_
                                           _00663_DS_:
0042c0   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	766; meter_logger.c	diff = 0xffff - start_timer_1_ms + timer_1_ms;
0042c2   5140     movf    0x40, 0, 0x1     	MOVF	_timer_1_ms, W, B
0042c4   2404     addwf   0x4, 0, 0        	ADDWF	r0x04, W
0042c6   6e06     movwf   0x6, 0           	MOVWF	r0x06
                                           ; removed redundant BANKSEL
0042c8   5141     movf    0x41, 0, 0x1     	MOVF	(_timer_1_ms + 1), W, B
0042ca   2005     addwfc  0x5, 0, 0        	ADDWFC	r0x05, W
0042cc   6e07     movwf   0x7, 0           	MOVWF	r0x07
                                           _00666_DS_:
                                           ;	.line	768; meter_logger.c	} while (diff < ms);
0042ce   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0042d0   5c07     subwf   0x7, 0, 0        	SUBWF	r0x07, W
0042d2   e102     bnz     0x42d8           	BNZ	_00677_DS_
0042d4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0042d6   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
                                           _00677_DS_:
0042d8   e3e4     bnc     0x42a2           	BNC	_00665_DS_
0042da   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
0042dc   f007
0042de   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
0042e0   f006
0042e2   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0042e4   f005
0042e6   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0042e8   f004
0042ea   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0042ec   f003
0042ee   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0042f0   f002
0042f2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0042f4   f001
0042f6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0042f8   f000
0042fa   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0042fc   ffd9
0042fe   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__isr_low_prio	code
                                           _isr_low_prio:
                                           ;	.line	722; meter_logger.c	static void isr_low_prio(void) __interrupt 2 {
004196   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
004198   ffe5
00419a   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
00419c   ffe5
00419e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0041a0   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
0041a2   ffe5
0041a4   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
0041a6   ffe5
0041a8   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
0041aa   ffe5
0041ac   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
0041ae   ffe5
0041b0   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
0041b2   ffe5
0041b4   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
0041b6   ffe5
0041b8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0041ba   ffe5
0041bc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0041be   ffd9
0041c0   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0041c2   ffe5
0041c4   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0041c6   ffe5
                                           ;	.line	725; meter_logger.c	if (PIR1bits.TMR1IF) {
0041c8   a09e     btfss   0x9e, 0, 0       	BTFSS	_PIR1bits, 0
0041ca   d024     bra     0x4214           	BRA	_00634_DS_
                                           ;	.line	726; meter_logger.c	TMR1H = (unsigned char)(TIMER1_RELOAD >> 8);    // 262,158ms @ 8MHz
0041cc   0ef8     movlw   0xf8             	MOVLW	0xf8
0041ce   6ecf     movwf   0xcf, 0          	MOVWF	_TMR1H
                                           ;	.line	727; meter_logger.c	TMR1L = (unsigned char)TIMER1_RELOAD;
0041d0   0e53     movlw   0x53             	MOVLW	0x53
0041d2   6ece     movwf   0xce, 0          	MOVWF	_TMR1L
                                           ;	.line	729; meter_logger.c	switch (led_flash.state) {
0041d4   c54c     movff   0x54c, 0         	MOVFF	_led_flash, r0x00
0041d6   f000
0041d8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0041da   6e01     movwf   0x1, 0           	MOVWF	r0x01
0041dc   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0041de   e004     bz      0x41e8           	BZ	_00628_DS_
0041e0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0041e2   0a01     xorlw   0x1              	XORLW	0x01
0041e4   e006     bz      0x41f2           	BZ	_00629_DS_
0041e6   d011     bra     0x420a           	BRA	_00632_DS_
                                           _00628_DS_:
                                           ;	.line	731; meter_logger.c	LED_PIN = 1;
0041e8   8881     bsf     0x81, 0x4, 0     	BSF	_PORTBbits, 4
                                           ;	.line	732; meter_logger.c	led_flash.state = LED_FLASH_RUNNING;
0041ea   0e01     movlw   0x1              	MOVLW	0x01
0041ec   0105     movlb   0x5              	BANKSEL	_led_flash
0041ee   6f4c     movwf   0x4c, 0x1        	MOVWF	_led_flash, B
                                           ;	.line	733; meter_logger.c	break;
0041f0   d00c     bra     0x420a           	BRA	_00632_DS_
                                           _00629_DS_:
                                           ;	.line	735; meter_logger.c	if (led_flash.timer-- == 0) {
0041f2   c54d     movff   0x54d, 0         	MOVFF	(_led_flash + 1), r0x00
0041f4   f000
0041f6   0400     decf    0, 0, 0          	DECF	r0x00, W
0041f8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0041fa   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0041fc   0105     movlb   0x5              	BANKSEL	(_led_flash + 1)
0041fe   6f4d     movwf   0x4d, 0x1        	MOVWF	(_led_flash + 1), B
004200   5000     movf    0, 0, 0          	MOVF	r0x00, W
004202   e103     bnz     0x420a           	BNZ	_00632_DS_
                                           ;	.line	736; meter_logger.c	LED_PIN = 0;
004204   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	737; meter_logger.c	led_flash.state = LED_FLASH_STOPPED;
004206   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
004208   6f4c     movwf   0x4c, 0x1        	MOVWF	_led_flash, B
                                           _00632_DS_:
00420a   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	741; meter_logger.c	timer_1_ms++;
00420c   3f40     incfsz  0x40, 0x1, 0x1   	INCFSZ	_timer_1_ms, F, B
00420e   d001     bra     0x4212           	BRA	_30972_DS_
                                           ; removed redundant BANKSEL
004210   2b41     incf    0x41, 0x1, 0x1   	INCF	(_timer_1_ms + 1), F, B
                                           _30972_DS_:
                                           ;	.line	742; meter_logger.c	PIR1bits.TMR1IF = 0;    /* Clear the Timer Flag  */
004212   909e     bcf     0x9e, 0, 0       	BCF	_PIR1bits, 0
                                           _00634_DS_:
                                           ;	.line	746; meter_logger.c	if (usart_drdy()) {
004214   ec08     call    0x4a10, 0        	CALL	_usart_drdy
004216   f025
004218   6e00     movwf   0, 0             	MOVWF	r0x00
00421a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00421c   e006     bz      0x422a           	BZ	_00637_DS_
                                           ;	.line	748; meter_logger.c	c = usart_getc();
00421e   ec09     call    0x4812, 0        	CALL	_usart_getc
004220   f024
004222   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	749; meter_logger.c	usart_putc(c);
004224   5000     movf    0, 0, 0          	MOVF	r0x00, W
004226   ecec     call    0x49d8, 0        	CALL	_usart_putc
004228   f024
                                           _00637_DS_:
00422a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00422c   f001
00422e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004230   f000
004232   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004234   ffd9
004236   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
004238   fffb
00423a   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
00423c   fffa
00423e   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
004240   ffea
004242   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
004244   ffe9
004246   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
004248   fff4
00424a   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
00424c   fff3
00424e   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
004250   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
004252   ffe0
004254   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
004256   ffd8
004258   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__isr_high_prio	code
                                           _isr_high_prio:
                                           ;	.line	363; meter_logger.c	static void isr_high_prio(void) __interrupt 1 {
00277e   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
002780   ffe5
002782   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
002784   ffe5
002786   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002788   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
00278a   ffe5
00278c   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
00278e   ffe5
002790   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
002792   ffe5
002794   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
002796   ffe5
002798   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
00279a   ffe5
00279c   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
00279e   ffe5
0027a0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0027a2   ffe5
0027a4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0027a6   ffd9
0027a8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0027aa   ffe5
0027ac   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0027ae   ffe5
0027b0   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0027b2   ffe5
0027b4   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0027b6   ffe5
0027b8   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0027ba   ffe5
0027bc   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0027be   ffe5
                                           ;	.line	365; meter_logger.c	if (INTCONbits.INT0IF && INTCONbits.INT0IE) {
0027c0   a2f2     btfss   0xf2, 0x1, 0     	BTFSS	_INTCONbits, 1
0027c2   d147     bra     0x2a52           	BRA	_00301_DS_
0027c4   a8f2     btfss   0xf2, 0x4, 0     	BTFSS	_INTCONbits, 4
0027c6   d145     bra     0x2a52           	BRA	_00301_DS_
                                           ;	.line	366; meter_logger.c	timer_0 = (unsigned int)(TMR0L) | ((unsigned int)(TMR0H) << 8);
0027c8   cfd6     movff   0xfd6, 0         	MOVFF	_TMR0L, r0x00
0027ca   f000
0027cc   6a01     clrf    0x1, 0           	CLRF	r0x01
0027ce   cfd7     movff   0xfd7, 0x2       	MOVFF	_TMR0H, r0x02
0027d0   f002
0027d2   6a03     clrf    0x3, 0           	CLRF	r0x03
0027d4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0027d6   6e05     movwf   0x5, 0           	MOVWF	r0x05
0027d8   6a04     clrf    0x4, 0           	CLRF	r0x04
0027da   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0027dc   1000     iorwf   0, 0, 0          	IORWF	r0x00, W
0027de   0105     movlb   0x5              	BANKSEL	_timer_0
0027e0   6f46     movwf   0x46, 0x1        	MOVWF	_timer_0, B
0027e2   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0027e4   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
                                           ; removed redundant BANKSEL
0027e6   6f47     movwf   0x47, 0x1        	MOVWF	(_timer_0 + 1), B
0027e8   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	367; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
0027ea   5149     movf    0x49, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
0027ec   6e00     movwf   0, 0             	MOVWF	r0x00
0027ee   6a01     clrf    0x1, 0           	CLRF	r0x01
0027f0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0027f2   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	368; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
0027f4   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0027f6   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
0027f8   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	370; meter_logger.c	switch (codec_type) {
0027fa   5151     movf    0x51, 0, 0x1     	MOVF	_codec_type, W, B
0027fc   0a01     xorlw   0x1              	XORLW	0x01
0027fe   e006     bz      0x280c           	BZ	_00262_DS_
                                           _00545_DS_:
002800   0105     movlb   0x5              	BANKSEL	_codec_type
002802   5151     movf    0x51, 0, 0x1     	MOVF	_codec_type, W, B
002804   0a02     xorlw   0x2              	XORLW	0x02
002806   e101     bnz     0x280a           	BNZ	_00547_DS_
002808   d117     bra     0x2a38           	BRA	_00296_DS_
                                           _00547_DS_:
00280a   d122     bra     0x2a50           	BRA	_00299_DS_
                                           _00262_DS_:
                                           ;	.line	372; meter_logger.c	flash_led(100);
00280c   0e64     movlw   0x64             	MOVLW	0x64
00280e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002810   ec44     call    0x4888, 0        	CALL	_flash_led
002812   f024
002814   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	373; meter_logger.c	switch (testo_ir_proto.state) {
002816   c51d     movff   0x51d, 0         	MOVFF	_testo_ir_proto, r0x00
002818   f000
00281a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00281c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00281e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002820   e008     bz      0x2832           	BZ	_00263_DS_
002822   5000     movf    0, 0, 0          	MOVF	r0x00, W
002824   0a02     xorlw   0x2              	XORLW	0x02
002826   e00c     bz      0x2840           	BZ	_00264_DS_
002828   5000     movf    0, 0, 0          	MOVF	r0x00, W
00282a   0a04     xorlw   0x4              	XORLW	0x04
00282c   e101     bnz     0x2830           	BNZ	_00553_DS_
00282e   d03b     bra     0x28a6           	BRA	_00272_DS_
                                           _00553_DS_:
002830   d10f     bra     0x2a50           	BRA	_00299_DS_
                                           _00263_DS_:
                                           ;	.line	375; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
002832   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	376; meter_logger.c	testo_ir_proto.start_bit_len = 1;
002834   0e01     movlw   0x1              	MOVLW	0x01
002836   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
002838   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	377; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
00283a   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
00283c   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
                                           ;	.line	378; meter_logger.c	break;
00283e   d108     bra     0x2a50           	BRA	_00299_DS_
                                           _00264_DS_:
002840   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	380; meter_logger.c	if ((TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < TICK + timer0_reload + TICK_ADJ)) {
002842   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002844   0f8f     addlw   0x8f             	ADDLW	0x8f
002846   6e00     movwf   0, 0             	MOVWF	r0x00
002848   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
00284a   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
00284c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00284e   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002850   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
002852   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002854   e102     bnz     0x285a           	BNZ	_00554_DS_
                                           ; removed redundant BANKSEL
002856   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
002858   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00554_DS_:
00285a   e21f     bc      0x289a           	BC	_00269_DS_
00285c   0105     movlb   0x5              	BANKSEL	_timer0_reload
00285e   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002860   0f1f     addlw   0x1f             	ADDLW	0x1f
002862   6e00     movwf   0, 0             	MOVWF	r0x00
002864   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
002866   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002868   6e01     movwf   0x1, 0           	MOVWF	r0x01
00286a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00286c   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
00286e   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
002870   e102     bnz     0x2876           	BNZ	_00555_DS_
002872   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002874   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00555_DS_:
002876   e211     bc      0x289a           	BC	_00269_DS_
                                           ;	.line	381; meter_logger.c	if (testo_ir_proto.start_bit_len < 2) {
002878   0e02     movlw   0x2              	MOVLW	0x02
00287a   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
00287c   5d1f     subwf   0x1f, 0, 0x1     	SUBWF	(_testo_ir_proto + 2), W, B
00287e   e206     bc      0x288c           	BC	_00266_DS_
                                           ;	.line	382; meter_logger.c	testo_ir_proto.start_bit_len++;
002880   c51f     movff   0x51f, 0         	MOVFF	(_testo_ir_proto + 2), r0x00
002882   f000
002884   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002886   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002888   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
00288a   d0e2     bra     0x2a50           	BRA	_00299_DS_
                                           _00266_DS_:
00288c   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	386; meter_logger.c	testo_ir_proto.data = 0;
00288e   6b20     clrf    0x20, 0x1        	CLRF	(_testo_ir_proto + 3), B
                                           ; removed redundant BANKSEL
002890   6b21     clrf    0x21, 0x1        	CLRF	(_testo_ir_proto + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	387; meter_logger.c	testo_ir_proto.data_len = 0;
002892   6b22     clrf    0x22, 0x1        	CLRF	(_testo_ir_proto + 5), B
                                           ;	.line	388; meter_logger.c	testo_ir_proto.state = DATA_WAIT;
002894   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
002896   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
002898   d0db     bra     0x2a50           	BRA	_00299_DS_
                                           _00269_DS_:
                                           ;	.line	393; meter_logger.c	testo_ir_proto.start_bit_len = 1;
00289a   0e01     movlw   0x1              	MOVLW	0x01
00289c   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
00289e   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	394; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
0028a0   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
0028a2   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
                                           ;	.line	396; meter_logger.c	break;
0028a4   d0d5     bra     0x2a50           	BRA	_00299_DS_
                                           _00272_DS_:
                                           ;	.line	398; meter_logger.c	if (testo_ir_proto.data_len <= 12) {
0028a6   0e0d     movlw   0xd              	MOVLW	0x0d
0028a8   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
0028aa   5d22     subwf   0x22, 0, 0x1     	SUBWF	(_testo_ir_proto + 5), W, B
0028ac   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0028ae   d0d0     bra     0x2a50           	BRA	_00299_DS_
0028b0   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	399; meter_logger.c	if (((TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < TICK + timer0_reload + TICK_ADJ)) || ((3 * TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < 3 * TICK + timer0_reload + TICK_ADJ))) {
0028b2   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0028b4   0f8f     addlw   0x8f             	ADDLW	0x8f
0028b6   6e00     movwf   0, 0             	MOVWF	r0x00
0028b8   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
0028ba   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0028bc   6e01     movwf   0x1, 0           	MOVWF	r0x01
0028be   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0028c0   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
0028c2   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0028c4   e102     bnz     0x28ca           	BNZ	_00558_DS_
                                           ; removed redundant BANKSEL
0028c6   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
0028c8   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00558_DS_:
0028ca   e20e     bc      0x28e8           	BC	_00288_DS_
0028cc   0105     movlb   0x5              	BANKSEL	_timer0_reload
0028ce   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0028d0   0f1f     addlw   0x1f             	ADDLW	0x1f
0028d2   6e00     movwf   0, 0             	MOVWF	r0x00
0028d4   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
0028d6   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0028d8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0028da   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0028dc   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0028de   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
0028e0   e102     bnz     0x28e6           	BNZ	_00559_DS_
0028e2   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0028e4   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00559_DS_:
0028e6   e31c     bnc     0x2920           	BNC	_00283_DS_
                                           _00288_DS_:
0028e8   0105     movlb   0x5              	BANKSEL	_timer0_reload
0028ea   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0028ec   0f3d     addlw   0x3d             	ADDLW	0x3d
0028ee   6e00     movwf   0, 0             	MOVWF	r0x00
0028f0   0e09     movlw   0x9              	MOVLW	0x09
                                           ; removed redundant BANKSEL
0028f2   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0028f4   6e01     movwf   0x1, 0           	MOVWF	r0x01
0028f6   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0028f8   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
0028fa   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0028fc   e102     bnz     0x2902           	BNZ	_00560_DS_
                                           ; removed redundant BANKSEL
0028fe   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
002900   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00560_DS_:
002902   e235     bc      0x296e           	BC	_00284_DS_
002904   0105     movlb   0x5              	BANKSEL	_timer0_reload
002906   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002908   0fcd     addlw   0xcd             	ADDLW	0xcd
00290a   6e00     movwf   0, 0             	MOVWF	r0x00
00290c   0e0a     movlw   0xa              	MOVLW	0x0a
                                           ; removed redundant BANKSEL
00290e   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002910   6e01     movwf   0x1, 0           	MOVWF	r0x01
002912   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002914   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002916   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
002918   e102     bnz     0x291e           	BNZ	_00561_DS_
00291a   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00291c   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00561_DS_:
00291e   e227     bc      0x296e           	BC	_00284_DS_
                                           _00283_DS_:
002920   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	401; meter_logger.c	if ((testo_ir_proto.data & 1) != 0) {
002922   a120     btfss   0x20, 0, 0x1     	BTFSS	(_testo_ir_proto + 3), 0
002924   d00a     bra     0x293a           	BRA	_00274_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	403; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
002926   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
002928   6e00     movwf   0, 0             	MOVWF	r0x00
00292a   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
00292c   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
00292e   6e01     movwf   0x1, 0           	MOVWF	r0x01
002930   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002932   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002934   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002936   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
002938   d013     bra     0x2960           	BRA	_00275_DS_
                                           _00274_DS_:
00293a   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	408; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
00293c   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
00293e   6e00     movwf   0, 0             	MOVWF	r0x00
002940   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
002942   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
002944   6e01     movwf   0x1, 0           	MOVWF	r0x01
002946   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002948   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
00294a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00294c   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           ;	.line	409; meter_logger.c	testo_ir_proto.data |= 1;	// and set bit 0
00294e   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002950   1120     iorwf   0x20, 0, 0x1     	IORWF	(_testo_ir_proto + 3), W, B
002952   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002954   5121     movf    0x21, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
002956   6e01     movwf   0x1, 0           	MOVWF	r0x01
002958   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00295a   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
00295c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00295e   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           _00275_DS_:
                                           ;	.line	411; meter_logger.c	testo_ir_proto.data_len++;
002960   c522     movff   0x522, 0         	MOVFF	(_testo_ir_proto + 5), r0x00
002962   f000
002964   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002966   5000     movf    0, 0, 0          	MOVF	r0x00, W
002968   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
00296a   6f22     movwf   0x22, 0x1        	MOVWF	(_testo_ir_proto + 5), B
00296c   d048     bra     0x29fe           	BRA	_00285_DS_
                                           _00284_DS_:
00296e   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	413; meter_logger.c	else if ((2 * TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < 2 * TICK + timer0_reload + TICK_ADJ)) {
002970   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002972   0fe6     addlw   0xe6             	ADDLW	0xe6
002974   6e00     movwf   0, 0             	MOVWF	r0x00
002976   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
002978   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
00297a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00297c   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
00297e   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
002980   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002982   e102     bnz     0x2988           	BNZ	_00564_DS_
                                           ; removed redundant BANKSEL
002984   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
002986   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00564_DS_:
002988   e235     bc      0x29f4           	BC	_00280_DS_
00298a   0105     movlb   0x5              	BANKSEL	_timer0_reload
00298c   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00298e   0f76     addlw   0x76             	ADDLW	0x76
002990   6e00     movwf   0, 0             	MOVWF	r0x00
002992   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
002994   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002996   6e01     movwf   0x1, 0           	MOVWF	r0x01
002998   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00299a   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
00299c   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
00299e   e102     bnz     0x29a4           	BNZ	_00565_DS_
0029a0   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0029a2   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00565_DS_:
0029a4   e227     bc      0x29f4           	BC	_00280_DS_
0029a6   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	415; meter_logger.c	if ((testo_ir_proto.data & 1) != 0) {
0029a8   a120     btfss   0x20, 0, 0x1     	BTFSS	(_testo_ir_proto + 3), 0
0029aa   d013     bra     0x29d2           	BRA	_00277_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	417; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
0029ac   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0029ae   6e00     movwf   0, 0             	MOVWF	r0x00
0029b0   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
0029b2   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
0029b4   6e01     movwf   0x1, 0           	MOVWF	r0x01
0029b6   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0029b8   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
0029ba   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0029bc   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           ;	.line	418; meter_logger.c	testo_ir_proto.data |= 1;	// and set bit 0
0029be   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
0029c0   1120     iorwf   0x20, 0, 0x1     	IORWF	(_testo_ir_proto + 3), W, B
0029c2   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
0029c4   5121     movf    0x21, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
0029c6   6e01     movwf   0x1, 0           	MOVWF	r0x01
0029c8   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0029ca   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
0029cc   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0029ce   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
0029d0   d00a     bra     0x29e6           	BRA	_00278_DS_
                                           _00277_DS_:
0029d2   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	422; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
0029d4   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0029d6   6e00     movwf   0, 0             	MOVWF	r0x00
0029d8   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
0029da   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
0029dc   6e01     movwf   0x1, 0           	MOVWF	r0x01
0029de   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0029e0   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
0029e2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0029e4   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           _00278_DS_:
                                           ;	.line	425; meter_logger.c	testo_ir_proto.data_len++;
0029e6   c522     movff   0x522, 0         	MOVFF	(_testo_ir_proto + 5), r0x00
0029e8   f000
0029ea   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0029ec   5000     movf    0, 0, 0          	MOVF	r0x00, W
0029ee   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
0029f0   6f22     movwf   0x22, 0x1        	MOVWF	(_testo_ir_proto + 5), B
0029f2   d005     bra     0x29fe           	BRA	_00285_DS_
                                           _00280_DS_:
                                           ;	.line	430; meter_logger.c	testo_ir_proto.start_bit_len = 1;
0029f4   0e01     movlw   0x1              	MOVLW	0x01
0029f6   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
0029f8   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	431; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
0029fa   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
0029fc   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
                                           _00285_DS_:
0029fe   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
                                           ;	.line	433; meter_logger.c	if (testo_ir_proto.data_len == 12) {
002a00   5122     movf    0x22, 0, 0x1     	MOVF	(_testo_ir_proto + 5), W, B
002a02   0a0c     xorlw   0xc              	XORLW	0x0c
002a04   e125     bnz     0x2a50           	BNZ	_00299_DS_
                                           _00569_DS_:
002a06   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 4)
                                           ;	.line	436; meter_logger.c	if (testo_valid_err_corr(testo_ir_proto.data & 0xffff)) {
002a08   5121     movf    0x21, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
002a0a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002a0c   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
002a0e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002a10   ecb8     call    0x3170, 0        	CALL	_testo_valid_err_corr
002a12   f018
002a14   6e00     movwf   0, 0             	MOVWF	r0x00
002a16   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002a18   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002a1a   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a1c   e00a     bz      0x2a32           	BZ	_00290_DS_
002a1e   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	438; meter_logger.c	fifo_put(testo_ir_proto.data & 0xff);
002a20   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
002a22   6e00     movwf   0, 0             	MOVWF	r0x00
002a24   6a01     clrf    0x1, 0           	CLRF	r0x01
002a26   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a28   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002a2a   ec74     call    0x3ae8, 0        	CALL	_fifo_put
002a2c   f01d
002a2e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	439; meter_logger.c	LED_PIN = 1;
002a30   8881     bsf     0x81, 0x4, 0     	BSF	_PORTBbits, 4
                                           _00290_DS_:
002a32   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	441; meter_logger.c	testo_ir_proto.state = INIT_STATE;
002a34   6b1d     clrf    0x1d, 0x1        	CLRF	_testo_ir_proto, B
                                           ;	.line	446; meter_logger.c	break;
002a36   d00c     bra     0x2a50           	BRA	_00299_DS_
                                           _00296_DS_:
002a38   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	448; meter_logger.c	switch (rs232_proto.state) {
002a3a   5123     movf    0x23, 0, 0x1     	MOVF	_rs232_proto, W, B
002a3c   0a02     xorlw   0x2              	XORLW	0x02
002a3e   e108     bnz     0x2a50           	BNZ	_00299_DS_
                                           ;	.line	459; meter_logger.c	TMR0H = (unsigned char)(TIMER0_RS232_1200_START >> 8);
002a40   0ef7     movlw   0xf7             	MOVLW	0xf7
002a42   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ;	.line	460; meter_logger.c	TMR0L = (unsigned char)TIMER0_RS232_1200_START;
002a44   6ad6     clrf    0xd6, 0          	CLRF	_TMR0L
                                           ;	.line	461; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int while we are using timer to receive data bits
002a46   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	462; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
002a48   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	463; meter_logger.c	rs232_proto.state = DATA_WAIT;
002a4a   0e04     movlw   0x4              	MOVLW	0x04
002a4c   0105     movlb   0x5              	BANKSEL	_rs232_proto
002a4e   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           _00299_DS_:
                                           ;	.line	468; meter_logger.c	INTCONbits.INT0IF = 0;	/* Clear Interrupt Flag */
002a50   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           _00301_DS_:
                                           ;	.line	472; meter_logger.c	if (INTCONbits.TMR0IF && INTCONbits.TMR0IE) {
002a52   a4f2     btfss   0xf2, 0x2, 0     	BTFSS	_INTCONbits, 2
002a54   d14d     bra     0x2cf0           	BRA	_00354_DS_
002a56   aaf2     btfss   0xf2, 0x5, 0     	BTFSS	_INTCONbits, 5
002a58   d14b     bra     0x2cf0           	BRA	_00354_DS_
002a5a   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	474; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
002a5c   5149     movf    0x49, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
002a5e   6e00     movwf   0, 0             	MOVWF	r0x00
002a60   6a01     clrf    0x1, 0           	CLRF	r0x01
002a62   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a64   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	475; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
002a66   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002a68   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
                                           ;	.line	477; meter_logger.c	switch (codec_type) {
002a6a   0e01     movlw   0x1              	MOVLW	0x01
002a6c   0105     movlb   0x5              	BANKSEL	_codec_type
002a6e   5d51     subwf   0x51, 0, 0x1     	SUBWF	_codec_type, W, B
002a70   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
002a72   d13d     bra     0x2cee           	BRA	_00352_DS_
002a74   0e06     movlw   0x6              	MOVLW	0x06
                                           ; removed redundant BANKSEL
002a76   5d51     subwf   0x51, 0, 0x1     	SUBWF	_codec_type, W, B
002a78   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002a7a   d139     bra     0x2cee           	BRA	_00352_DS_
                                           ; removed redundant BANKSEL
002a7c   0551     decf    0x51, 0, 0x1     	DECF	_codec_type, W, B
002a7e   6e00     movwf   0, 0             	MOVWF	r0x00
002a80   6afa     clrf    0xfa, 0          	CLRF	PCLATH
002a82   6afb     clrf    0xfb, 0          	CLRF	PCLATU
002a84   3400     rlcf    0, 0, 0          	RLCF	r0x00, W
002a86   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
002a88   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
002a8a   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
002a8c   0bfc     andlw   0xfc             	ANDLW	0xfc
002a8e   0f9e     addlw   0x9e             	ADDLW	LOW(_00575_DS_)
002a90   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002a92   0e2a     movlw   0x2a             	MOVLW	HIGH(_00575_DS_)
002a94   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
002a96   0e00     movlw   0                	MOVLW	UPPER(_00575_DS_)
002a98   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
002a9a   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002a9c   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00575_DS_:
002a9e   ef59     goto    0x2ab2           	GOTO	_00303_DS_
002aa0   f015
002aa2   efa7     goto    0x2b4e           	GOTO	_00315_DS_
002aa4   f015
002aa6   ef5e     goto    0x2abc           	GOTO	_00304_DS_
002aa8   f015
002aaa   efe0     goto    0x2bc0           	GOTO	_00325_DS_
002aac   f015
002aae   ef22     goto    0x2c44           	GOTO	_00336_DS_
002ab0   f016
                                           _00303_DS_:
                                           ;	.line	479; meter_logger.c	T0CONbits.TMR0ON = 0;			// Stop TMR0
002ab2   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
002ab4   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	480; meter_logger.c	testo_ir_proto.state = INIT_STATE;
002ab6   6b1d     clrf    0x1d, 0x1        	CLRF	_testo_ir_proto, B
002ab8   0003     sleep                    	sleep 
                                           ;	.line	482; meter_logger.c	break;
002aba   d119     bra     0x2cee           	BRA	_00352_DS_
                                           _00304_DS_:
                                           ;	.line	484; meter_logger.c	switch (rs232_proto.state) {
002abc   c523     movff   0x523, 0         	MOVFF	_rs232_proto, r0x00
002abe   f000
002ac0   5000     movf    0, 0, 0          	MOVF	r0x00, W
002ac2   6e01     movwf   0x1, 0           	MOVWF	r0x01
002ac4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002ac6   e00a     bz      0x2adc           	BZ	_00305_DS_
002ac8   5000     movf    0, 0, 0          	MOVF	r0x00, W
002aca   0a03     xorlw   0x3              	XORLW	0x03
002acc   e011     bz      0x2af0           	BZ	_00308_DS_
002ace   5000     movf    0, 0, 0          	MOVF	r0x00, W
002ad0   0a09     xorlw   0x9              	XORLW	0x09
002ad2   e033     bz      0x2b3a           	BZ	_00312_DS_
002ad4   5000     movf    0, 0, 0          	MOVF	r0x00, W
002ad6   0a0a     xorlw   0xa              	XORLW	0x0a
002ad8   e035     bz      0x2b44           	BZ	_00313_DS_
002ada   d109     bra     0x2cee           	BRA	_00352_DS_
                                           _00305_DS_:
002adc   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	486; meter_logger.c	if (rs232_proto.data_len == 8) {
002ade   5126     movf    0x26, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
002ae0   0a08     xorlw   0x8              	XORLW	0x08
002ae2   e001     bz      0x2ae6           	BZ	_00585_DS_
002ae4   d104     bra     0x2cee           	BRA	_00352_DS_
                                           _00585_DS_:
                                           ;	.line	487; meter_logger.c	IR_LED_PIN = 1;		// inverted rs232 output on ir, start bit = ir light
002ae6   8281     bsf     0x81, 0x1, 0     	BSF	_PORTBbits, 1
                                           ;	.line	488; meter_logger.c	rs232_proto.state = START_BIT_SENT;
002ae8   0e03     movlw   0x3              	MOVLW	0x03
002aea   0105     movlb   0x5              	BANKSEL	_rs232_proto
002aec   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	490; meter_logger.c	break;
002aee   d0ff     bra     0x2cee           	BRA	_00352_DS_
                                           _00308_DS_:
                                           ;	.line	492; meter_logger.c	if (rs232_proto.data_len >= 1) {
002af0   0e01     movlw   0x1              	MOVLW	0x01
002af2   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002af4   5d26     subwf   0x26, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002af6   e31c     bnc     0x2b30           	BNC	_00310_DS_
                                           ;	.line	493; meter_logger.c	IR_LED_PIN = (rs232_proto.data & 1) == 0;	// inverted rs232 output on ir
002af8   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002afa   1525     andwf   0x25, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
002afc   6e00     movwf   0, 0             	MOVWF	r0x00
002afe   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b00   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
002b02   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
002b04   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002b06   6a00     clrf    0, 0             	CLRF	r0x00
002b08   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
002b0a   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b0c   0b01     andlw   0x1              	ANDLW	0x01
002b0e   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
002b10   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
002b12   5081     movf    0x81, 0, 0       	MOVF	_PORTBbits, W
002b14   0bfd     andlw   0xfd             	ANDLW	0xfd
002b16   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
002b18   6e81     movwf   0x81, 0          	MOVWF	_PORTBbits
                                           ; removed redundant BANKSEL
                                           ;	.line	494; meter_logger.c	rs232_proto.data = rs232_proto.data >> 1;
002b1a   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002b1c   0b7f     andlw   0x7f             	ANDLW	0x7f
002b1e   6e00     movwf   0, 0             	MOVWF	r0x00
002b20   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002b22   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	495; meter_logger.c	rs232_proto.data_len--;
002b24   c526     movff   0x526, 0         	MOVFF	(_rs232_proto + 3), r0x00
002b26   f000
002b28   0600     decf    0, 0x1, 0        	DECF	r0x00, F
002b2a   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002b2c   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
002b2e   d0df     bra     0x2cee           	BRA	_00352_DS_
                                           _00310_DS_:
                                           ;	.line	498; meter_logger.c	IR_LED_PIN = 0;								// inverted rs232 output on ir					
002b30   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	499; meter_logger.c	rs232_proto.state = STOP_BIT_SENT;
002b32   0e09     movlw   0x9              	MOVLW	0x09
002b34   0105     movlb   0x5              	BANKSEL	_rs232_proto
002b36   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	501; meter_logger.c	break;
002b38   d0da     bra     0x2cee           	BRA	_00352_DS_
                                           _00312_DS_:
                                           ;	.line	503; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002b3a   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	504; meter_logger.c	rs232_proto.state = STOP_BIT2_SENT;
002b3c   0e0a     movlw   0xa              	MOVLW	0x0a
002b3e   0105     movlb   0x5              	BANKSEL	_rs232_proto
002b40   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	505; meter_logger.c	break;
002b42   d0d5     bra     0x2cee           	BRA	_00352_DS_
                                           _00313_DS_:
                                           ;	.line	507; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002b44   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
002b46   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	508; meter_logger.c	rs232_proto.state = INIT_STATE;
002b48   6b23     clrf    0x23, 0x1        	CLRF	_rs232_proto, B
                                           ;	.line	509; meter_logger.c	T0CONbits.TMR0ON = 0;							// stop timer 0
002b4a   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	512; meter_logger.c	break;
002b4c   d0d0     bra     0x2cee           	BRA	_00352_DS_
                                           _00315_DS_:
                                           ;	.line	514; meter_logger.c	switch (rs232_proto.state) {
002b4e   c523     movff   0x523, 0         	MOVFF	_rs232_proto, r0x00
002b50   f000
002b52   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b54   0a04     xorlw   0x4              	XORLW	0x04
002b56   e004     bz      0x2b60           	BZ	_00316_DS_
002b58   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b5a   0a07     xorlw   0x7              	XORLW	0x07
002b5c   e022     bz      0x2ba2           	BZ	_00323_DS_
002b5e   d0c7     bra     0x2cee           	BRA	_00352_DS_
                                           _00316_DS_:
                                           ;	.line	516; meter_logger.c	rs232_proto.data_len++;
002b60   c526     movff   0x526, 0         	MOVFF	(_rs232_proto + 3), r0x00
002b62   f000
002b64   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002b66   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b68   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002b6a   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	517; meter_logger.c	if (rs232_proto.data_len <= 8) {
002b6c   0e09     movlw   0x9              	MOVLW	0x09
                                           ; removed redundant BANKSEL
002b6e   5d26     subwf   0x26, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002b70   e214     bc      0x2b9a           	BC	_00321_DS_
                                           ;	.line	518; meter_logger.c	if (IR_PIN) {		
002b72   a081     btfss   0x81, 0, 0       	BTFSS	_PORTBbits, 0
002b74   d006     bra     0x2b82           	BRA	_00318_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	520; meter_logger.c	rs232_proto.data >>= 1;
002b76   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002b78   0b7f     andlw   0x7f             	ANDLW	0x7f
002b7a   6e00     movwf   0, 0             	MOVWF	r0x00
002b7c   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002b7e   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
002b80   d0b6     bra     0x2cee           	BRA	_00352_DS_
                                           _00318_DS_:
002b82   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	532; meter_logger.c	rs232_proto.data >>= 1;
002b84   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002b86   0b7f     andlw   0x7f             	ANDLW	0x7f
002b88   6e00     movwf   0, 0             	MOVWF	r0x00
002b8a   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002b8c   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	533; meter_logger.c	rs232_proto.data |= 0x80;
002b8e   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
002b90   1125     iorwf   0x25, 0, 0x1     	IORWF	(_rs232_proto + 2), W, B
002b92   6e00     movwf   0, 0             	MOVWF	r0x00
002b94   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002b96   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
002b98   d0aa     bra     0x2cee           	BRA	_00352_DS_
                                           _00321_DS_:
                                           ;	.line	555; meter_logger.c	rs232_proto.state = STOP_BIT_WAIT;
002b9a   0e07     movlw   0x7              	MOVLW	0x07
002b9c   0105     movlb   0x5              	BANKSEL	_rs232_proto
002b9e   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	557; meter_logger.c	break;
002ba0   d0a6     bra     0x2cee           	BRA	_00352_DS_
                                           _00323_DS_:
002ba2   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	563; meter_logger.c	fifo_put(rs232_proto.data);
002ba4   5125     movf    0x25, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
002ba6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002ba8   ec74     call    0x3ae8, 0        	CALL	_fifo_put
002baa   f01d
002bac   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002bae   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	564; meter_logger.c	rs232_proto.data = 0;
002bb0   6b25     clrf    0x25, 0x1        	CLRF	(_rs232_proto + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	565; meter_logger.c	rs232_proto.data_len = 0;
002bb2   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	566; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
002bb4   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002bb6   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	567; meter_logger.c	T0CONbits.TMR0ON = 0;
002bb8   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	568; meter_logger.c	INTCONbits.INT0IF = 0;		// dont enter ext int now
002bba   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           ;	.line	569; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int again
002bbc   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	572; meter_logger.c	break;
002bbe   d097     bra     0x2cee           	BRA	_00352_DS_
                                           _00325_DS_:
                                           ;	.line	574; meter_logger.c	switch (fsk_proto.state) {
002bc0   c500     movff   0x500, 0         	MOVFF	_fsk_proto, r0x00
002bc2   f000
002bc4   5000     movf    0, 0, 0          	MOVF	r0x00, W
002bc6   0a04     xorlw   0x4              	XORLW	0x04
002bc8   e004     bz      0x2bd2           	BZ	_00326_DS_
002bca   5000     movf    0, 0, 0          	MOVF	r0x00, W
002bcc   0a07     xorlw   0x7              	XORLW	0x07
002bce   e02e     bz      0x2c2c           	BZ	_00334_DS_
002bd0   d08e     bra     0x2cee           	BRA	_00352_DS_
                                           _00326_DS_:
                                           ;	.line	576; meter_logger.c	fsk_proto.data_len++;						
002bd2   c50d     movff   0x50d, 0         	MOVFF	(_fsk_proto + 13), r0x00
002bd4   f000
002bd6   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002bd8   5000     movf    0, 0, 0          	MOVF	r0x00, W
002bda   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
002bdc   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
                                           ;	.line	577; meter_logger.c	if (fsk_proto.data_len <= 8) {
002bde   0e09     movlw   0x9              	MOVLW	0x09
                                           ; removed redundant BANKSEL
002be0   5d0d     subwf   0xd, 0, 0x1      	SUBWF	(_fsk_proto + 13), W, B
002be2   e220     bc      0x2c24           	BC	_00332_DS_
                                           ;	.line	578; meter_logger.c	if ((fsk_proto.diff > 340) && (fsk_proto.diff < 476)) {
002be4   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002be6   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
002be8   e102     bnz     0x2bee           	BNZ	_00599_DS_
002bea   0e55     movlw   0x55             	MOVLW	0x55
                                           ; removed redundant BANKSEL
002bec   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00599_DS_:
002bee   e30e     bnc     0x2c0c           	BNC	_00328_DS_
002bf0   0e01     movlw   0x1              	MOVLW	0x01
002bf2   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 2)
002bf4   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
002bf6   e102     bnz     0x2bfc           	BNZ	_00600_DS_
002bf8   0edc     movlw   0xdc             	MOVLW	0xdc
                                           ; removed redundant BANKSEL
002bfa   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00600_DS_:
002bfc   e207     bc      0x2c0c           	BC	_00328_DS_
002bfe   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	581; meter_logger.c	fsk_proto.data >>= 1;
002c00   410c     rrncf   0xc, 0, 0x1      	RRNCF	(_fsk_proto + 12), W, B
002c02   0b7f     andlw   0x7f             	ANDLW	0x7f
002c04   6e00     movwf   0, 0             	MOVWF	r0x00
002c06   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002c08   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
002c0a   d071     bra     0x2cee           	BRA	_00352_DS_
                                           _00328_DS_:
002c0c   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	586; meter_logger.c	fsk_proto.data >>= 1;
002c0e   410c     rrncf   0xc, 0, 0x1      	RRNCF	(_fsk_proto + 12), W, B
002c10   0b7f     andlw   0x7f             	ANDLW	0x7f
002c12   6e00     movwf   0, 0             	MOVWF	r0x00
002c14   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002c16   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
                                           ;	.line	587; meter_logger.c	fsk_proto.data |= 0x80;
002c18   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
002c1a   110c     iorwf   0xc, 0, 0x1      	IORWF	(_fsk_proto + 12), W, B
002c1c   6e00     movwf   0, 0             	MOVWF	r0x00
002c1e   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002c20   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
002c22   d065     bra     0x2cee           	BRA	_00352_DS_
                                           _00332_DS_:
                                           ;	.line	595; meter_logger.c	fsk_proto.state = STOP_BIT_WAIT;
002c24   0e07     movlw   0x7              	MOVLW	0x07
002c26   0105     movlb   0x5              	BANKSEL	_fsk_proto
002c28   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	597; meter_logger.c	break;
002c2a   d061     bra     0x2cee           	BRA	_00352_DS_
                                           _00334_DS_:
002c2c   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	600; meter_logger.c	fifo_put(fsk_proto.data);
002c2e   510c     movf    0xc, 0, 0x1      	MOVF	(_fsk_proto + 12), W, B
002c30   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002c32   ec74     call    0x3ae8, 0        	CALL	_fifo_put
002c34   f01d
002c36   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002c38   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	601; meter_logger.c	fsk_proto.data = 0;
002c3a   6b0c     clrf    0xc, 0x1         	CLRF	(_fsk_proto + 12), B
                                           ;	.line	602; meter_logger.c	fsk_proto.state = START_BIT_WAIT;
002c3c   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002c3e   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	604; meter_logger.c	INTCONbits.TMR0IE = 0;						
002c40   9af2     bcf     0xf2, 0x5, 0     	BCF	_INTCONbits, 5
                                           ;	.line	607; meter_logger.c	break;
002c42   d055     bra     0x2cee           	BRA	_00352_DS_
                                           _00336_DS_:
                                           ;	.line	609; meter_logger.c	switch (fsk_proto.state) {
002c44   c500     movff   0x500, 0         	MOVFF	_fsk_proto, r0x00
002c46   f000
002c48   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c4a   6e01     movwf   0x1, 0           	MOVWF	r0x01
002c4c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002c4e   e00f     bz      0x2c6e           	BZ	_00337_DS_
002c50   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c52   0a01     xorlw   0x1              	XORLW	0x01
002c54   e015     bz      0x2c80           	BZ	_00340_DS_
002c56   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c58   0a03     xorlw   0x3              	XORLW	0x03
002c5a   e019     bz      0x2c8e           	BZ	_00341_DS_
002c5c   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c5e   0a05     xorlw   0x5              	XORLW	0x05
002c60   e101     bnz     0x2c64           	BNZ	_00609_DS_
002c62   d039     bra     0x2cd6           	BRA	_00349_DS_
                                           _00609_DS_:
002c64   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c66   0a09     xorlw   0x9              	XORLW	0x09
002c68   e101     bnz     0x2c6c           	BNZ	_00611_DS_
002c6a   d03c     bra     0x2ce4           	BRA	_00350_DS_
                                           _00611_DS_:
002c6c   d040     bra     0x2cee           	BRA	_00352_DS_
                                           _00337_DS_:
002c6e   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	612; meter_logger.c	if (fsk_proto.data_len == 8) {
002c70   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002c72   0a08     xorlw   0x8              	XORLW	0x08
002c74   e103     bnz     0x2c7c           	BNZ	_00339_DS_
                                           ;	.line	613; meter_logger.c	fsk_proto.state = IDLE;
002c76   0e01     movlw   0x1              	MOVLW	0x01
002c78   0105     movlb   0x5              	BANKSEL	_fsk_proto
002c7a   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           _00339_DS_:
                                           ;	.line	616; meter_logger.c	DEBUG_PIN = 0;
002c7c   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	618; meter_logger.c	break;
002c7e   d037     bra     0x2cee           	BRA	_00352_DS_
                                           _00340_DS_:
                                           ;	.line	620; meter_logger.c	send_fsk_low();
002c80   ecee     call    0xbdc, 0         	CALL	_send_fsk_low
002c82   f005
                                           ;	.line	621; meter_logger.c	fsk_proto.state = START_BIT_SENT;
002c84   0e03     movlw   0x3              	MOVLW	0x03
002c86   0105     movlb   0x5              	BANKSEL	_fsk_proto
002c88   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	623; meter_logger.c	DEBUG_PIN = 1;
002c8a   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
                                           ;	.line	625; meter_logger.c	break;
002c8c   d030     bra     0x2cee           	BRA	_00352_DS_
                                           _00341_DS_:
                                           ;	.line	627; meter_logger.c	if (fsk_proto.data_len--) {
002c8e   c50d     movff   0x50d, 0         	MOVFF	(_fsk_proto + 13), r0x00
002c90   f000
002c92   0400     decf    0, 0, 0          	DECF	r0x00, W
002c94   6e01     movwf   0x1, 0           	MOVWF	r0x01
002c96   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002c98   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
002c9a   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
002c9c   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c9e   e015     bz      0x2cca           	BZ	_00346_DS_
                                           ;	.line	628; meter_logger.c	if (fsk_proto.data & (0x80 >> fsk_proto.data_len)) {
002ca0   0e80     movlw   0x80             	MOVLW	0x80
002ca2   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002ca4   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002ca6   e005     bz      0x2cb2           	BZ	_00614_DS_
002ca8   6ce8     negf    0xe8, 0          	NEGF	WREG
002caa   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00615_DS_:
002cac   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
002cae   0f01     addlw   0x1              	ADDLW	0x01
002cb0   e3fd     bnc     0x2cac           	BNC	_00615_DS_
                                           _00614_DS_:
002cb2   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
002cb4   510c     movf    0xc, 0, 0x1      	MOVF	(_fsk_proto + 12), W, B
002cb6   1600     andwf   0, 0x1, 0        	ANDWF	r0x00, F
002cb8   5000     movf    0, 0, 0          	MOVF	r0x00, W
002cba   e004     bz      0x2cc4           	BZ	_00343_DS_
                                           ;	.line	629; meter_logger.c	send_fsk_high();
002cbc   ec0e     call    0x1c, 0          	CALL	_send_fsk_high
002cbe   f000
                                           ;	.line	631; meter_logger.c	DEBUG_PIN = 0;
002cc0   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
002cc2   d003     bra     0x2cca           	BRA	_00346_DS_
                                           _00343_DS_:
                                           ;	.line	635; meter_logger.c	send_fsk_low();
002cc4   ecee     call    0xbdc, 0         	CALL	_send_fsk_low
002cc6   f005
                                           ;	.line	637; meter_logger.c	DEBUG_PIN = 1;
002cc8   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
                                           _00346_DS_:
002cca   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	641; meter_logger.c	if (fsk_proto.data_len == 0) {
002ccc   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002cce   e10f     bnz     0x2cee           	BNZ	_00352_DS_
                                           ;	.line	642; meter_logger.c	fsk_proto.state = DATA_SENT;
002cd0   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
002cd2   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	644; meter_logger.c	break;
002cd4   d00c     bra     0x2cee           	BRA	_00352_DS_
                                           _00349_DS_:
                                           ;	.line	646; meter_logger.c	send_fsk_high();
002cd6   ec0e     call    0x1c, 0          	CALL	_send_fsk_high
002cd8   f000
                                           ;	.line	647; meter_logger.c	fsk_proto.state = STOP_BIT_SENT;
002cda   0e09     movlw   0x9              	MOVLW	0x09
002cdc   0105     movlb   0x5              	BANKSEL	_fsk_proto
002cde   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	649; meter_logger.c	DEBUG_PIN = 0;
002ce0   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	651; meter_logger.c	break;
002ce2   d005     bra     0x2cee           	BRA	_00352_DS_
                                           _00350_DS_:
                                           ;	.line	653; meter_logger.c	send_fsk_high();
002ce4   ec0e     call    0x1c, 0          	CALL	_send_fsk_high
002ce6   f000
002ce8   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	654; meter_logger.c	fsk_proto.state = INIT_STATE;
002cea   6b00     clrf    0, 0x1           	CLRF	_fsk_proto, B
                                           ;	.line	656; meter_logger.c	DEBUG_PIN = 0;
002cec   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           _00352_DS_:
                                           ;	.line	663; meter_logger.c	INTCONbits.TMR0IF = 0;
002cee   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           _00354_DS_:
                                           ;	.line	666; meter_logger.c	if (PIR2bits.CMIF && PIE2bits.CMIE) {
002cf0   aca1     btfss   0xa1, 0x6, 0     	BTFSS	_PIR2bits, 6
002cf2   d076     bra     0x2de0           	BRA	_00373_DS_
002cf4   aca0     btfss   0xa0, 0x6, 0     	BTFSS	_PIE2bits, 6
002cf6   d074     bra     0x2de0           	BRA	_00373_DS_
                                           ;	.line	668; meter_logger.c	if (CMCONbits.C1OUT) {		// rising edge
002cf8   acb4     btfss   0xb4, 0x6, 0     	BTFSS	_CMCONbits, 6
002cfa   d070     bra     0x2ddc           	BRA	_00368_DS_
                                           ;	.line	669; meter_logger.c	timer_0 = (unsigned int)(TMR0L) | ((unsigned int)(TMR0H) << 8);
002cfc   cfd6     movff   0xfd6, 0         	MOVFF	_TMR0L, r0x00
002cfe   f000
002d00   6a01     clrf    0x1, 0           	CLRF	r0x01
002d02   cfd7     movff   0xfd7, 0x2       	MOVFF	_TMR0H, r0x02
002d04   f002
002d06   6a03     clrf    0x3, 0           	CLRF	r0x03
002d08   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002d0a   6e05     movwf   0x5, 0           	MOVWF	r0x05
002d0c   6a04     clrf    0x4, 0           	CLRF	r0x04
002d0e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002d10   1000     iorwf   0, 0, 0          	IORWF	r0x00, W
002d12   0105     movlb   0x5              	BANKSEL	_timer_0
002d14   6f46     movwf   0x46, 0x1        	MOVWF	_timer_0, B
002d16   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002d18   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
                                           ; removed redundant BANKSEL
002d1a   6f47     movwf   0x47, 0x1        	MOVWF	(_timer_0 + 1), B
                                           ;	.line	674; meter_logger.c	DEBUG_PIN = 1;
002d1c   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
002d1e   0105     movlb   0x5              	BANKSEL	_last_timer_0
                                           ;	.line	676; meter_logger.c	fsk_proto.diff = timer_0 - last_timer_0;
002d20   514a     movf    0x4a, 0, 0x1     	MOVF	_last_timer_0, W, B
002d22   0105     movlb   0x5              	BANKSEL	_timer_0
002d24   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
002d26   6e00     movwf   0, 0             	MOVWF	r0x00
002d28   0105     movlb   0x5              	BANKSEL	(_last_timer_0 + 1)
002d2a   514b     movf    0x4b, 0, 0x1     	MOVF	(_last_timer_0 + 1), W, B
002d2c   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002d2e   5947     subwfb  0x47, 0, 0x1     	SUBWFB	(_timer_0 + 1), W, B
002d30   6e01     movwf   0x1, 0           	MOVWF	r0x01
002d32   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d34   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
002d36   6f01     movwf   0x1, 0x1         	MOVWF	(_fsk_proto + 1), B
002d38   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002d3a   6f02     movwf   0x2, 0x1         	MOVWF	(_fsk_proto + 2), B
                                           ;	.line	677; meter_logger.c	last_timer_0 = timer_0;
002d3c   c546     movff   0x546, 0x54a     	MOVFF	_timer_0, _last_timer_0
002d3e   f54a
002d40   c547     movff   0x547, 0x54b     	MOVFF	(_timer_0 + 1), (_last_timer_0 + 1)
002d42   f54b
                                           ;	.line	679; meter_logger.c	if ((fsk_proto.diff > 340) && (fsk_proto.diff < 476)) {
002d44   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002d46   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
002d48   e102     bnz     0x2d4e           	BNZ	_00617_DS_
002d4a   0e55     movlw   0x55             	MOVLW	0x55
                                           ; removed redundant BANKSEL
002d4c   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00617_DS_:
002d4e   e330     bnc     0x2db0           	BNC	_00364_DS_
002d50   0e01     movlw   0x1              	MOVLW	0x01
002d52   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 2)
002d54   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
002d56   e102     bnz     0x2d5c           	BNZ	_00618_DS_
002d58   0edc     movlw   0xdc             	MOVLW	0xdc
                                           ; removed redundant BANKSEL
002d5a   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00618_DS_:
002d5c   e229     bc      0x2db0           	BC	_00364_DS_
002d5e   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
                                           ;	.line	680; meter_logger.c	fsk_proto.low_count += fsk_proto.diff;
002d60   5101     movf    0x1, 0, 0x1      	MOVF	(_fsk_proto + 1), W, B
                                           ; removed redundant BANKSEL
002d62   2505     addwf   0x5, 0, 0x1      	ADDWF	(_fsk_proto + 5), W, B
002d64   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002d66   5102     movf    0x2, 0, 0x1      	MOVF	(_fsk_proto + 2), W, B
                                           ; removed redundant BANKSEL
002d68   2106     addwfc  0x6, 0, 0x1      	ADDWFC	(_fsk_proto + 6), W, B
002d6a   6e01     movwf   0x1, 0           	MOVWF	r0x01
002d6c   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002d6e   6f05     movwf   0x5, 0x1         	MOVWF	(_fsk_proto + 5), B
002d70   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002d72   6f06     movwf   0x6, 0x1         	MOVWF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	681; meter_logger.c	if (fsk_proto.state == START_BIT_WAIT) {
002d74   5100     movf    0, 0, 0x1        	MOVF	_fsk_proto, W, B
002d76   0a02     xorlw   0x2              	XORLW	0x02
002d78   e132     bnz     0x2dde           	BNZ	_00369_DS_
                                           ;	.line	682; meter_logger.c	if (fsk_proto.low_count >= 800) {								// start bit received
002d7a   0e03     movlw   0x3              	MOVLW	0x03
002d7c   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 6)
002d7e   5d06     subwf   0x6, 0, 0x1      	SUBWF	(_fsk_proto + 6), W, B
002d80   e102     bnz     0x2d86           	BNZ	_00621_DS_
002d82   0e20     movlw   0x20             	MOVLW	0x20
                                           ; removed redundant BANKSEL
002d84   5d05     subwf   0x5, 0, 0x1      	SUBWF	(_fsk_proto + 5), W, B
                                           _00621_DS_:
002d86   e32b     bnc     0x2dde           	BNC	_00369_DS_
002d88   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	684; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
002d8a   5149     movf    0x49, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
002d8c   6e00     movwf   0, 0             	MOVWF	r0x00
002d8e   6a01     clrf    0x1, 0           	CLRF	r0x01
002d90   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d92   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	685; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
002d94   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002d96   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
002d98   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 5)
                                           ;	.line	686; meter_logger.c	fsk_proto.low_count = 0;
002d9a   6b05     clrf    0x5, 0x1         	CLRF	(_fsk_proto + 5), B
                                           ; removed redundant BANKSEL
002d9c   6b06     clrf    0x6, 0x1         	CLRF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	687; meter_logger.c	fsk_proto.high_count = 0;
002d9e   6b07     clrf    0x7, 0x1         	CLRF	(_fsk_proto + 7), B
                                           ; removed redundant BANKSEL
002da0   6b08     clrf    0x8, 0x1         	CLRF	(_fsk_proto + 8), B
                                           ; removed redundant BANKSEL
                                           ;	.line	689; meter_logger.c	fsk_proto.data_len = 0;
002da2   6b0d     clrf    0xd, 0x1         	CLRF	(_fsk_proto + 13), B
                                           ; removed redundant BANKSEL
                                           ;	.line	690; meter_logger.c	fsk_proto.data = 0;
002da4   6b0c     clrf    0xc, 0x1         	CLRF	(_fsk_proto + 12), B
                                           ;	.line	691; meter_logger.c	fsk_proto.state = DATA_WAIT;
002da6   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
002da8   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	692; meter_logger.c	INTCONbits.TMR0IF = 0;		// clear flag so it dont enter isr now
002daa   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	693; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
002dac   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
002dae   d017     bra     0x2dde           	BRA	_00369_DS_
                                           _00364_DS_:
002db0   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	699; meter_logger.c	if (fsk_proto.state == START_BIT_WAIT) {
002db2   5100     movf    0, 0, 0x1        	MOVF	_fsk_proto, W, B
002db4   0a02     xorlw   0x2              	XORLW	0x02
002db6   e106     bnz     0x2dc4           	BNZ	_00361_DS_
                                           _00623_DS_:
002db8   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 5)
                                           ;	.line	700; meter_logger.c	fsk_proto.low_count = 0;
002dba   6b05     clrf    0x5, 0x1         	CLRF	(_fsk_proto + 5), B
                                           ; removed redundant BANKSEL
002dbc   6b06     clrf    0x6, 0x1         	CLRF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	701; meter_logger.c	fsk_proto.high_count = 0;
002dbe   6b07     clrf    0x7, 0x1         	CLRF	(_fsk_proto + 7), B
                                           ; removed redundant BANKSEL
002dc0   6b08     clrf    0x8, 0x1         	CLRF	(_fsk_proto + 8), B
002dc2   d00d     bra     0x2dde           	BRA	_00369_DS_
                                           _00361_DS_:
002dc4   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
                                           ;	.line	704; meter_logger.c	fsk_proto.high_count += fsk_proto.diff;
002dc6   5101     movf    0x1, 0, 0x1      	MOVF	(_fsk_proto + 1), W, B
                                           ; removed redundant BANKSEL
002dc8   2507     addwf   0x7, 0, 0x1      	ADDWF	(_fsk_proto + 7), W, B
002dca   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002dcc   5102     movf    0x2, 0, 0x1      	MOVF	(_fsk_proto + 2), W, B
                                           ; removed redundant BANKSEL
002dce   2108     addwfc  0x8, 0, 0x1      	ADDWFC	(_fsk_proto + 8), W, B
002dd0   6e01     movwf   0x1, 0           	MOVWF	r0x01
002dd2   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002dd4   6f07     movwf   0x7, 0x1         	MOVWF	(_fsk_proto + 7), B
002dd6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002dd8   6f08     movwf   0x8, 0x1         	MOVWF	(_fsk_proto + 8), B
002dda   d001     bra     0x2dde           	BRA	_00369_DS_
                                           _00368_DS_:
                                           ;	.line	710; meter_logger.c	DEBUG_PIN = 0;
002ddc   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           _00369_DS_:
                                           ;	.line	714; meter_logger.c	PIR2bits.CMIF = 0;
002dde   9ca1     bcf     0xa1, 0x6, 0     	BCF	_PIR2bits, 6
                                           _00373_DS_:
002de0   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002de2   f005
002de4   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002de6   f004
002de8   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002dea   f003
002dec   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002dee   f002
002df0   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002df2   f001
002df4   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002df6   f000
002df8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002dfa   ffd9
002dfc   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
002dfe   fffb
002e00   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
002e02   fffa
002e04   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
002e06   ffea
002e08   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
002e0a   ffe9
002e0c   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
002e0e   fff4
002e10   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
002e12   fff3
002e14   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002e16   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
002e18   ffe0
002e1a   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
002e1c   ffd8
002e1e   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           ___str_0:
002e20   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x67, 0x65
002e22   654d     cpfsgt  0x4d, 0x1        
002e24   6574     cpfsgt  0x74, 0x1        
002e26   4c72     dcfsnz  0x72, 0, 0       
002e28   676f     tstfsz  0x6f, 0x1        
002e2a   6567     cpfsgt  0x67, 0x1        
002e2c   2e72     decfsz  0x72, 0x1, 0     	DB	0x72, 0x2e, 0x2e, 0x2e, 0x20, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x20
002e2e   2e2e     decfsz  0x2e, 0x1, 0     
002e30   7320     btg     0x20, 0x1, 0x1   
002e32   7265     btg     0x65, 0x1, 0     
002e34   6169     cpfslt  0x69, 0x1        
002e36   206c     addwfc  0x6c, 0, 0       
002e38   6f77     movwf   0x77, 0x1        	DB	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x0a, 0x0d, 0x00
002e3a   6b72     clrf    0x72, 0x1        
002e3c   6e69     movwf   0x69, 0          
002e3e   0a67     xorlw   0x67             
002e40   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_1:
002e42   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x70, 0x72, 0x69, 0x6e
002e44   7270     btg     0x70, 0x1, 0     
002e46   7365     btg     0x65, 0x1, 0x1   
002e48   2073     addwfc  0x73, 0, 0       
002e4a   7270     btg     0x70, 0x1, 0     
002e4c   6e69     movwf   0x69, 0          
002e4e   2074     addwfc  0x74, 0, 0       	DB	0x74, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x0a, 0x0d
002e50   6e6f     movwf   0x6f, 0          
002e52   7420     btg     0x20, 0x2, 0     
002e54   7365     btg     0x65, 0x1, 0x1   
002e56   6f74     movwf   0x74, 0x1        
002e58   0d0a     mullw   0xa              
002e5a   0000     nop                      	DB	0x00
                                           ; ; Starting pCode block
                                           ___str_2:
002e5c   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x64, 0x6f, 0x6e, 0x65, 0x20, 0x72, 0x65, 0x63, 0x65, 0x69
002e5e   6f64     movwf   0x64, 0x1        
002e60   656e     cpfsgt  0x6e, 0x1        
002e62   7220     btg     0x20, 0x1, 0     
002e64   6365     cpfseq  0x65, 0x1        
002e66   6965     setf    0x65, 0x1        
002e68   6976     setf    0x76, 0x1        	DB	0x76, 0x69, 0x6e, 0x67, 0x20, 0x2d, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x69
002e6a   676e     tstfsz  0x6e, 0x1        
002e6c   2d20     decfsz  0x20, 0, 0x1     
002e6e   7320     btg     0x20, 0x1, 0x1   
002e70   6e65     movwf   0x65, 0          
002e72   6964     setf    0x64, 0x1        
002e74   676e     tstfsz  0x6e, 0x1        	DB	0x6e, 0x67, 0x20, 0x76, 0x69, 0x61, 0x20, 0x73, 0x65, 0x72, 0x69, 0x61
002e76   7620     btg     0x20, 0x3, 0     
002e78   6169     cpfslt  0x69, 0x1        
002e7a   7320     btg     0x20, 0x1, 0x1   
002e7c   7265     btg     0x65, 0x1, 0     
002e7e   6169     cpfslt  0x69, 0x1        
002e80   2f6c     decfsz  0x6c, 0x1, 0x1   	DB	0x6c, 0x2f, 0x66, 0x73, 0x6b, 0x0a, 0x0d, 0x00
002e82   7366     btg     0x66, 0x1, 0x1   
002e84   0a6b     xorlw   0x6b             
002e86   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_3:
002e88   6425     cpfsgt  0x25, 0          	DB	0x25, 0x64, 0x20, 0x00
002e8a   0020     dw      0x20             
                                           ; ; Starting pCode block
                                           ___str_4:
002e8c   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6f
002e8e   6177     cpfslt  0x77, 0x1        
002e90   7469     btg     0x69, 0x2, 0     
002e92   6e69     movwf   0x69, 0          
002e94   2067     addwfc  0x67, 0, 0       
002e96   6f66     movwf   0x66, 0x1        
002e98   2072     addwfc  0x72, 0, 0       	DB	0x72, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e
002e9a   656e     cpfsgt  0x6e, 0x1        
002e9c   2077     addwfc  0x77, 0, 0       
002e9e   6f63     movwf   0x63, 0x1        
002ea0   6d6d     negf    0x6d, 0x1        
002ea2   6e61     movwf   0x61, 0          
002ea4   0a64     xorlw   0x64             	DB	0x64, 0x0a, 0x0d, 0x00
002ea6   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_5:
002ea8   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x74, 0x65, 0x73, 0x74, 0x20
002eaa   6365     cpfseq  0x65, 0x1        
002eac   6f68     movwf   0x68, 0x1        
002eae   7420     btg     0x20, 0x2, 0     
002eb0   7365     btg     0x65, 0x1, 0x1   
002eb2   2074     addwfc  0x74, 0, 0       
002eb4   202d     addwfc  0x2d, 0, 0       	DB	0x2d, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x20, 0x73, 0x6f, 0x6d, 0x65, 0x20
002eb6   6573     cpfsgt  0x73, 0x1        
002eb8   646e     cpfsgt  0x6e, 0          
002eba   7320     btg     0x20, 0x1, 0x1   
002ebc   6d6f     negf    0x6f, 0x1        
002ebe   2065     addwfc  0x65, 0, 0       
002ec0   6164     cpfslt  0x64, 0x1        	DB	0x64, 0x61, 0x74, 0x61, 0x0a, 0x0d, 0x00
002ec2   6174     cpfslt  0x74, 0x1        
002ec4   0d0a     mullw   0xa              
002ec6   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_6:
002ec8   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002eca   616b     cpfslt  0x6b, 0x1        
002ecc   736d     btg     0x6d, 0x1, 0x1   
002ece   7274     btg     0x74, 0x1, 0     
002ed0   7075     btg     0x75, 0, 0       
002ed2   2d20     decfsz  0x20, 0, 0x1     
002ed4   7320     btg     0x20, 0x1, 0x1   	DB	0x20, 0x73, 0x65, 0x6e, 0x64, 0x20, 0x6b, 0x6d, 0x70, 0x20, 0x66, 0x72
002ed6   6e65     movwf   0x65, 0          
002ed8   2064     addwfc  0x64, 0, 0       
002eda   6d6b     negf    0x6b, 0x1        
002edc   2070     addwfc  0x70, 0, 0       
002ede   7266     btg     0x66, 0x1, 0     
002ee0   6d61     negf    0x61, 0x1        	DB	0x61, 0x6d, 0x65, 0x20, 0x64, 0x61, 0x74, 0x61, 0x0a, 0x0d, 0x00
002ee2   2065     addwfc  0x65, 0, 0       
002ee4   6164     cpfslt  0x64, 0x1        
002ee6   6174     cpfslt  0x74, 0x1        
002ee8   0d0a     mullw   0xa              
002eea   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_7:
002eec   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002eee   616b     cpfslt  0x6b, 0x1        
002ef0   736d     btg     0x6d, 0x1, 0x1   
002ef2   7274     btg     0x74, 0x1, 0     
002ef4   7075     btg     0x75, 0, 0       
002ef6   2d20     decfsz  0x20, 0, 0x1     
002ef8   6b20     clrf    0x20, 0x1        	DB	0x20, 0x6b, 0x6d, 0x70, 0x20, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x20, 0x72
002efa   706d     btg     0x6d, 0, 0       
002efc   6620     tstfsz  0x20, 0          
002efe   6172     cpfslt  0x72, 0x1        
002f00   656d     cpfsgt  0x6d, 0x1        
002f02   7220     btg     0x20, 0x1, 0     
002f04   6365     cpfseq  0x65, 0x1        	DB	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x3a, 0x0a, 0x0d, 0x00
002f06   6965     setf    0x65, 0x1        
002f08   6576     cpfsgt  0x76, 0x1        
002f0a   3a64     swapf   0x64, 0x1, 0     
002f0c   0d0a     mullw   0xa              
002f0e   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_8:
002f10   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002f12   616b     cpfslt  0x6b, 0x1        
002f14   736d     btg     0x6d, 0x1, 0x1   
002f16   7274     btg     0x74, 0x1, 0     
002f18   7075     btg     0x75, 0, 0       
002f1a   2d20     decfsz  0x20, 0, 0x1     
002f1c   6b20     clrf    0x20, 0x1        	DB	0x20, 0x6b, 0x6d, 0x70, 0x20, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x20, 0x72
002f1e   706d     btg     0x6d, 0, 0       
002f20   7220     btg     0x20, 0x1, 0     
002f22   7065     btg     0x65, 0, 0       
002f24   796c     btg     0x6c, 0x4, 0x1   
002f26   7220     btg     0x20, 0x1, 0     
002f28   6365     cpfseq  0x65, 0x1        	DB	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x3a, 0x0a, 0x0d, 0x00
002f2a   6965     setf    0x65, 0x1        
002f2c   6576     cpfsgt  0x76, 0x1        
002f2e   3a64     swapf   0x64, 0x1, 0     
002f30   0d0a     mullw   0xa              
002f32   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_9:
002f34   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6e, 0x6f, 0x20, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x20, 0x66
002f36   6f6e     movwf   0x6e, 0x1        
002f38   7220     btg     0x20, 0x1, 0     
002f3a   7065     btg     0x65, 0, 0       
002f3c   796c     btg     0x6c, 0x4, 0x1   
002f3e   6620     tstfsz  0x20, 0          
002f40   6f72     movwf   0x72, 0x1        	DB	0x72, 0x6f, 0x6d, 0x20, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x0a, 0x0d, 0x00
002f42   206d     addwfc  0x6d, 0, 0       
002f44   656d     cpfsgt  0x6d, 0x1        
002f46   6574     cpfsgt  0x74, 0x1        
002f48   0a72     xorlw   0x72             
002f4a   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_10:
002f4c   6142     cpfslt  0x42, 0x1        	DB	0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x3a, 0x20, 0x25, 0x64, 0x6d
002f4e   7474     btg     0x74, 0x2, 0     
002f50   7265     btg     0x65, 0x1, 0     
002f52   3a79     swapf   0x79, 0x1, 0     
002f54   2520     addwf   0x20, 0, 0x1     
002f56   6d64     negf    0x64, 0x1        
002f58   0a56     xorlw   0x56             	DB	0x56, 0x0a, 0x0d, 0x00
002f5a   000d     tblwt   *+               
                                           
                                           
                                           ; Statistics:
                                           ; code size:	13422 (0x346e) bytes (10.24%)
                                           ;           	 6711 (0x1a37) words
                                           ; udata size:	 1198 (0x04ae) bytes (66.85%)
                                           ; access size:	   14 (0x000e) bytes
                                           
                                           
                                           	end
