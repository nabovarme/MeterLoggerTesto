gplink-1.2.0 #980 (Jul 31 2013)
Copyright (c) 1998-2013 gputils project
Listing File Generated: 6-19-2014  02:41:35
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.4.0 #8981 (Jun  6 2014) (Mac OS X x86_64)
                                           ; This file was generated Thu Jun 19 02:41:35 2014
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f2550
                                           	radix	dec
                                           	CONFIG	PLLDIV=2
                                           	CONFIG	CPUDIV=OSC1_PLL2
                                           	CONFIG	USBDIV=1
                                           	CONFIG	FOSC=INTOSC_XT
                                           	CONFIG	FCMEN=OFF
                                           	CONFIG	IESO=OFF
                                           	CONFIG	PWRT=OFF
                                           	CONFIG	BOR=OFF
                                           	CONFIG	BORV=3
                                           	CONFIG	VREGEN=OFF
                                           	CONFIG	WDT=OFF
                                           	CONFIG	WDTPS=32768
                                           	CONFIG	CCP2MX=ON
                                           	CONFIG	PBADEN=OFF
                                           	CONFIG	LPT1OSC=OFF
                                           	CONFIG	MCLRE=ON
                                           	CONFIG	STVREN=ON
                                           	CONFIG	LVP=ON
                                           	CONFIG	XINST=OFF
                                           	CONFIG	CP0=OFF
                                           	CONFIG	CP1=OFF
                                           	CONFIG	CP2=OFF
                                           	CONFIG	CP3=OFF
                                           	CONFIG	CPB=OFF
                                           	CONFIG	CPD=OFF
                                           	CONFIG	WRT0=OFF
                                           	CONFIG	WRT1=OFF
                                           	CONFIG	WRT2=OFF
                                           	CONFIG	WRT3=OFF
                                           	CONFIG	WRTC=OFF
                                           	CONFIG	WRTB=OFF
                                           	CONFIG	WRTD=OFF
                                           	CONFIG	EBTR0=OFF
                                           	CONFIG	EBTR1=OFF
                                           	CONFIG	EBTR2=OFF
                                           	CONFIG	EBTR3=OFF
                                           	CONFIG	EBTRB=OFF
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_c
                                           	global	_sleep_ms
                                           	global	_init_system
                                           	global	_get_dev_id
                                           	global	_my_usart_open
                                           	global	_reverse
                                           	global	_testo_valid_err_corr
                                           	global	_testo_ir_enable
                                           	global	_testo_ir_disable
                                           	global	_rs232_8n2_tx_enable
                                           	global	_rs232_8n2_tx_disable
                                           	global	_rs232_8n2_rx_enable
                                           	global	_rs232_8n2_rx_disable
                                           	global	_rs232_8n2_tx_byte
                                           	global	_rs232_7e1_tx_enable
                                           	global	_rs232_7e1_tx_disable
                                           	global	_rs232_7e1_rx_enable
                                           	global	_rs232_7e1_rx_disable
                                           	global	_rs232_7e1_tx_byte
                                           	global	_fsk_tx_enable
                                           	global	_fsk_tx_disable
                                           	global	_fsk_rx_enable
                                           	global	_fsk_rx_disable
                                           	global	_send_fsk_high
                                           	global	_send_fsk_low
                                           	global	_fsk_tx_byte
                                           	global	_fifo_in_use
                                           	global	_fifo_put
                                           	global	_fifo_get
                                           	global	_fifo_snoop
                                           	global	_get_battery_level
                                           	global	_flash_led
                                           	global	__debug
                                           	global	__debug2
                                           	global	_timer_0
                                           	global	_last_timer_0
                                           	global	_timer_1_ms
                                           	global	_timer0_reload
                                           	global	_debug_buffer
                                           	global	_fifo_head
                                           	global	_fifo_tail
                                           	global	_fifo_buffer_0
                                           	global	_fifo_buffer_1
                                           	global	_fifo_buffer_2
                                           	global	_fifo_buffer_3
                                           	global	_codec_type
                                           	global	_led_flash
                                           	global	_testo_ir_proto
                                           	global	_rs232_proto
                                           	global	_fsk_proto
                                           	global	_main
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrput1
                                           	extern	_UFRMLbits
                                           	extern	_UFRMHbits
                                           	extern	_UIRbits
                                           	extern	_UIEbits
                                           	extern	_UEIRbits
                                           	extern	_UEIEbits
                                           	extern	_USTATbits
                                           	extern	_UCONbits
                                           	extern	_UADDRbits
                                           	extern	_UCFGbits
                                           	extern	_UEP0bits
                                           	extern	_UEP1bits
                                           	extern	_UEP2bits
                                           	extern	_UEP3bits
                                           	extern	_UEP4bits
                                           	extern	_UEP5bits
                                           	extern	_UEP6bits
                                           	extern	_UEP7bits
                                           	extern	_UEP8bits
                                           	extern	_UEP9bits
                                           	extern	_UEP10bits
                                           	extern	_UEP11bits
                                           	extern	_UEP12bits
                                           	extern	_UEP13bits
                                           	extern	_UEP14bits
                                           	extern	_UEP15bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_EECON1bits
                                           	extern	_RCSTAbits
                                           	extern	_TXSTAbits
                                           	extern	_T3CONbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_CCP1ASbits
                                           	extern	_ECCP1ASbits
                                           	extern	_CCP1DELbits
                                           	extern	_ECCP1DELbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCTLbits
                                           	extern	_CCP2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_UFRM
                                           	extern	_UFRML
                                           	extern	_UFRMH
                                           	extern	_UIR
                                           	extern	_UIE
                                           	extern	_UEIR
                                           	extern	_UEIE
                                           	extern	_USTAT
                                           	extern	_UCON
                                           	extern	_UADDR
                                           	extern	_UCFG
                                           	extern	_UEP0
                                           	extern	_UEP1
                                           	extern	_UEP2
                                           	extern	_UEP3
                                           	extern	_UEP4
                                           	extern	_UEP5
                                           	extern	_UEP6
                                           	extern	_UEP7
                                           	extern	_UEP8
                                           	extern	_UEP9
                                           	extern	_UEP10
                                           	extern	_UEP11
                                           	extern	_UEP12
                                           	extern	_UEP13
                                           	extern	_UEP14
                                           	extern	_UEP15
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_OSCTUNE
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_RCSTA
                                           	extern	_TXSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_CCP1AS
                                           	extern	_ECCP1AS
                                           	extern	_CCP1DEL
                                           	extern	_ECCP1DEL
                                           	extern	_BAUDCON
                                           	extern	_BAUDCTL
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_sprintf
                                           	extern	_usart_drdy
                                           	extern	_usart_getc
                                           	extern	_usart_putc
                                           	extern	_usart_puts
                                           	extern	_adc_open
                                           	extern	_adc_close
                                           	extern	_adc_conv
                                           	extern	_adc_busy
                                           	extern	_adc_read
                                           	extern	_adc_setchannel
                                           	extern	__mullong
                                           	extern	__divulong
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           r0x0d	res	1
                                           
                                           udata_meter_logger_0	udata
                                           _c	res	1
                                           
                                           udata_meter_logger_1	udata
                                           _timer_1_ms	res	2
                                           
                                           udata_meter_logger_2	udata
                                           _fifo_head	res	2
                                           
                                           udata_meter_logger_3	udata
                                           _fifo_tail	res	2
                                           
                                           udata_meter_logger_4	udata
                                           _debug_buffer	res	128
                                           
                                           udata_meter_logger_5	udata
                                           _main_cmd_1_90	res	1
                                           
                                           udata_meter_logger_6	udata
                                           _main_sub_cmd_1_90	res	1
                                           
                                           udata_meter_logger_7	udata
                                           _timer_0	res	2
                                           
                                           udata_meter_logger_8	udata
                                           _timer0_reload	res	2
                                           
                                           udata_meter_logger_9	udata
                                           _testo_ir_proto	res	6
                                           
                                           udata_meter_logger_10	udata
                                           _rs232_proto	res	6
                                           
                                           udata_meter_logger_11	udata
                                           _fsk_proto	res	16
                                           
                                           udata_meter_logger_12	udata
                                           _last_timer_0	res	2
                                           
                                           udata_meter_logger_13	udata
                                           _codec_type	res	1
                                           
                                           udata_meter_logger_14	udata
                                           _led_flash	res	2
                                           
                                           udata_meter_logger_15	udata
                                           _fifo_buffer_0	res	256
                                           
                                           udata_meter_logger_16	udata
                                           _fifo_buffer_1	res	256
                                           
                                           udata_meter_logger_17	udata
                                           _fifo_buffer_2	res	256
                                           
                                           udata_meter_logger_18	udata
                                           _fifo_buffer_3	res	256
                                           
                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_meter_logger_ivec_0x1_isr_high_prio	code	0X000008
                                           ivec_0x1_isr_high_prio:
000008   ef20     goto    0x2440           	GOTO	_isr_high_prio
00000a   f012
                                           
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_meter_logger_ivec_0x2_isr_low_prio	code	0X000018
                                           ivec_0x2_isr_low_prio:
000018   ef0f     goto    0x4a1e           	GOTO	_isr_low_prio
00001a   f025
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_meter_logger__main	code
                                           _main:
                                           ;	.line	120; meter_logger.c	OSCCONbits.SCS = 0x10;
00001c   50d3     movf    0xd3, 0, 0       	MOVF	_OSCCONbits, W
00001e   0bfc     andlw   0xfc             	ANDLW	0xfc
000020   6ed3     movwf   0xd3, 0          	MOVWF	_OSCCONbits
                                           ;	.line	122; meter_logger.c	OSCCONbits.IRCF = 0x7;	// 8 MHz
000022   50d3     movf    0xd3, 0, 0       	MOVF	_OSCCONbits, W
000024   0b8f     andlw   0x8f             	ANDLW	0x8f
000026   0970     iorlw   0x70             	IORLW	0x70
000028   6ed3     movwf   0xd3, 0          	MOVWF	_OSCCONbits
00002a   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	125; meter_logger.c	timer_1_ms = 0;
00002c   6b40     clrf    0x40, 0x1        	CLRF	_timer_1_ms, B
                                           ; removed redundant BANKSEL
00002e   6b41     clrf    0x41, 0x1        	CLRF	(_timer_1_ms + 1), B
000030   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	127; meter_logger.c	fifo_head = 0;
000032   6b42     clrf    0x42, 0x1        	CLRF	_fifo_head, B
                                           ; removed redundant BANKSEL
000034   6b43     clrf    0x43, 0x1        	CLRF	(_fifo_head + 1), B
000036   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	128; meter_logger.c	fifo_tail = 0;
000038   6b44     clrf    0x44, 0x1        	CLRF	_fifo_tail, B
                                           ; removed redundant BANKSEL
00003a   6b45     clrf    0x45, 0x1        	CLRF	(_fifo_tail + 1), B
                                           ;	.line	130; meter_logger.c	init_system();	
00003c   eceb     call    0x4dd6, 0        	CALL	_init_system
00003e   f026
                                           ;	.line	131; meter_logger.c	sleep_ms(100);
000040   0e00     movlw   0                	MOVLW	0x00
000042   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000044   0e64     movlw   0x64             	MOVLW	0x64
000046   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000048   ec71     call    0x4ae2, 0        	CALL	_sleep_ms
00004a   f025
00004c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00004e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	134; meter_logger.c	usart_puts("\n\rMeterLogger... serial working\n\r");
000050   0e00     movlw   0                	MOVLW	UPPER(___str_0)
000052   6e02     movwf   0x2, 0           	MOVWF	r0x02
000054   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_0)
000056   6e01     movwf   0x1, 0           	MOVWF	r0x01
000058   0e06     movlw   0x6              	MOVLW	LOW(___str_0)
00005a   6e00     movwf   0, 0             	MOVWF	r0x00
00005c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00005e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000060   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000062   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000064   5000     movf    0, 0, 0          	MOVF	r0x00, W
000066   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000068   ec48     call    0x4c90, 0        	CALL	_usart_puts
00006a   f026
00006c   0e03     movlw   0x3              	MOVLW	0x03
00006e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	138; meter_logger.c	get_battery_level();
000070   ec91     call    0x3722, 0        	CALL	_get_battery_level
000072   f01b
                                           ;	.line	141; meter_logger.c	dev_id = get_dev_id();
000074   ec84     call    0x4d08, 0        	CALL	_get_dev_id
000076   f026
000078   6e00     movwf   0, 0             	MOVWF	r0x00
00007a   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00007c   f001
                                           ;	.line	143; meter_logger.c	if (dev_id == 0x1240) {
00007e   5000     movf    0, 0, 0          	MOVF	r0x00, W
000080   0a40     xorlw   0x40             	XORLW	0x40
000082   e103     bnz     0x8a             	BNZ	_00325_DS_
000084   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000086   0a12     xorlw   0x12             	XORLW	0x12
000088   e001     bz      0x8c             	BZ	_00326_DS_
                                           _00325_DS_:
00008a   d01d     bra     0xc6             	BRA	_00109_DS_
                                           _00326_DS_:
                                           ;	.line	144; meter_logger.c	sprintf(debug_buffer, "Processor: pic18f2550\n\r");
00008c   0e00     movlw   0                	MOVLW	UPPER(___str_1)
00008e   6e04     movwf   0x4, 0           	MOVWF	r0x04
000090   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_1)
000092   6e03     movwf   0x3, 0           	MOVWF	r0x03
000094   0e28     movlw   0x28             	MOVLW	LOW(___str_1)
000096   6e02     movwf   0x2, 0           	MOVWF	r0x02
000098   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00009a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00009c   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00009e   6e05     movwf   0x5, 0           	MOVWF	r0x05
0000a0   0e80     movlw   0x80             	MOVLW	0x80
0000a2   6e07     movwf   0x7, 0           	MOVWF	r0x07
0000a4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0000a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000a8   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0000aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000ac   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0000ae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000b0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0000b2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000b4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0000b6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000b8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0000ba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000bc   ecd3     call    0x45a6, 0        	CALL	_sprintf
0000be   f022
0000c0   0e06     movlw   0x6              	MOVLW	0x06
0000c2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0000c4   d044     bra     0x14e            	BRA	_00110_DS_
                                           _00109_DS_:
                                           ;	.line	146; meter_logger.c	else if (dev_id == 0x2a40) {
0000c6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0000c8   0a40     xorlw   0x40             	XORLW	0x40
0000ca   e103     bnz     0xd2             	BNZ	_00327_DS_
0000cc   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0000ce   0a2a     xorlw   0x2a             	XORLW	0x2a
0000d0   e001     bz      0xd4             	BZ	_00328_DS_
                                           _00327_DS_:
0000d2   d01d     bra     0x10e            	BRA	_00106_DS_
                                           _00328_DS_:
                                           ;	.line	147; meter_logger.c	sprintf(debug_buffer, "Processor: pic18f2553\n\r");
0000d4   0e00     movlw   0                	MOVLW	UPPER(___str_2)
0000d6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0000d8   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_2)
0000da   6e03     movwf   0x3, 0           	MOVWF	r0x03
0000dc   0e40     movlw   0x40             	MOVLW	LOW(___str_2)
0000de   6e02     movwf   0x2, 0           	MOVWF	r0x02
0000e0   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0000e2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0000e4   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0000e6   6e05     movwf   0x5, 0           	MOVWF	r0x05
0000e8   0e80     movlw   0x80             	MOVLW	0x80
0000ea   6e07     movwf   0x7, 0           	MOVWF	r0x07
0000ec   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0000ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000f0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0000f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000f4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0000f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000f8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0000fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000fc   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0000fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000100   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000102   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000104   ecd3     call    0x45a6, 0        	CALL	_sprintf
000106   f022
000108   0e06     movlw   0x6              	MOVLW	0x06
00010a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00010c   d020     bra     0x14e            	BRA	_00110_DS_
                                           _00106_DS_:
                                           ;	.line	150; meter_logger.c	sprintf(debug_buffer, "Processor: unsupported, device id: 0x%04x\n\r", dev_id);
00010e   0e00     movlw   0                	MOVLW	UPPER(___str_3)
000110   6e04     movwf   0x4, 0           	MOVWF	r0x04
000112   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_3)
000114   6e03     movwf   0x3, 0           	MOVWF	r0x03
000116   0e58     movlw   0x58             	MOVLW	LOW(___str_3)
000118   6e02     movwf   0x2, 0           	MOVWF	r0x02
00011a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00011c   6e06     movwf   0x6, 0           	MOVWF	r0x06
00011e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000120   6e05     movwf   0x5, 0           	MOVWF	r0x05
000122   0e80     movlw   0x80             	MOVLW	0x80
000124   6e07     movwf   0x7, 0           	MOVWF	r0x07
000126   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000128   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00012a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00012c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00012e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000130   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000132   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000134   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000136   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000138   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00013a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00013c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00013e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000140   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000142   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000144   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000146   ecd3     call    0x45a6, 0        	CALL	_sprintf
000148   f022
00014a   0e08     movlw   0x8              	MOVLW	0x08
00014c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _00110_DS_:
                                           ;	.line	152; meter_logger.c	usart_puts(debug_buffer);
00014e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000150   6e01     movwf   0x1, 0           	MOVWF	r0x01
000152   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000154   6e00     movwf   0, 0             	MOVWF	r0x00
000156   0e80     movlw   0x80             	MOVLW	0x80
000158   6e02     movwf   0x2, 0           	MOVWF	r0x02
00015a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00015c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00015e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000160   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000162   5000     movf    0, 0, 0          	MOVF	r0x00, W
000164   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000166   ec48     call    0x4c90, 0        	CALL	_usart_puts
000168   f026
00016a   0e03     movlw   0x3              	MOVLW	0x03
00016c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	155; meter_logger.c	fsk_rx_enable();
00016e   ecbd     call    0x4d7a, 0        	CALL	_fsk_rx_enable
000170   f026
                                           _00168_DS_:
                                           ;	.line	157; meter_logger.c	if (fifo_get(&cmd)) {
000172   0e05     movlw   0x5              	MOVLW	HIGH(_main_cmd_1_90)
000174   6e01     movwf   0x1, 0           	MOVWF	r0x01
000176   0e4f     movlw   0x4f             	MOVLW	LOW(_main_cmd_1_90)
000178   6e00     movwf   0, 0             	MOVWF	r0x00
00017a   0e80     movlw   0x80             	MOVLW	0x80
00017c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00017e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000180   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000182   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000184   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000186   5000     movf    0, 0, 0          	MOVF	r0x00, W
000188   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00018a   ec5c     call    0x40b8, 0        	CALL	_fifo_get
00018c   f020
00018e   6e00     movwf   0, 0             	MOVWF	r0x00
000190   0e03     movlw   0x3              	MOVLW	0x03
000192   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000194   5000     movf    0, 0, 0          	MOVF	r0x00, W
000196   e0ed     bz      0x172            	BZ	_00168_DS_
                                           ;	.line	158; meter_logger.c	switch (cmd) {
000198   0efb     movlw   0xfb             	MOVLW	0xfb
00019a   0105     movlb   0x5              	BANKSEL	_main_cmd_1_90
00019c   5d4f     subwf   0x4f, 0, 0x1     	SUBWF	_main_cmd_1_90, W, B
00019e   e3e9     bnc     0x172            	BNC	_00168_DS_
0001a0   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
0001a2   254f     addwf   0x4f, 0, 0x1     	ADDWF	_main_cmd_1_90, W, B
0001a4   6e00     movwf   0, 0             	MOVWF	r0x00
0001a6   6afa     clrf    0xfa, 0          	CLRF	PCLATH
0001a8   6afb     clrf    0xfb, 0          	CLRF	PCLATU
0001aa   3400     rlcf    0, 0, 0          	RLCF	r0x00, W
0001ac   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0001ae   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
0001b0   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0001b2   0bfc     andlw   0xfc             	ANDLW	0xfc
0001b4   0fc4     addlw   0xc4             	ADDLW	LOW(_00330_DS_)
0001b6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001b8   0e01     movlw   0x1              	MOVLW	HIGH(_00330_DS_)
0001ba   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
0001bc   0e00     movlw   0                	MOVLW	UPPER(_00330_DS_)
0001be   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0001c0   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0001c2   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00330_DS_:
0001c4   ef94     goto    0xd28            	GOTO	_00163_DS_
0001c6   f006
0001c8   ef98     goto    0x930            	GOTO	_00145_DS_
0001ca   f004
0001cc   ef9c     goto    0x538            	GOTO	_00127_DS_
0001ce   f002
0001d0   efec     goto    0x1d8            	GOTO	_00111_DS_
0001d2   f000
0001d4   efcc     goto    0x398            	GOTO	_00119_DS_
0001d6   f001
                                           _00111_DS_:
                                           ;	.line	160; meter_logger.c	fsk_rx_disable();
0001d8   ecc0     call    0x5380, 0        	CALL	_fsk_rx_disable
0001da   f029
                                           ;	.line	161; meter_logger.c	usart_puts("\n\rpress print on testo\n\r");
0001dc   0e00     movlw   0                	MOVLW	UPPER(___str_4)
0001de   6e02     movwf   0x2, 0           	MOVWF	r0x02
0001e0   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_4)
0001e2   6e01     movwf   0x1, 0           	MOVWF	r0x01
0001e4   0e84     movlw   0x84             	MOVLW	LOW(___str_4)
0001e6   6e00     movwf   0, 0             	MOVWF	r0x00
0001e8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0001ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001ec   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0001ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001f0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0001f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001f4   ec48     call    0x4c90, 0        	CALL	_usart_puts
0001f6   f026
0001f8   0e03     movlw   0x3              	MOVLW	0x03
0001fa   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	162; meter_logger.c	testo_ir_enable();
0001fc   ecb4     call    0x4f68, 0        	CALL	_testo_ir_enable
0001fe   f027
                                           ;	.line	164; meter_logger.c	last_fifo_size = 0;
000200   6a00     clrf    0, 0             	CLRF	r0x00
000202   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	165; meter_logger.c	sleep_ms(10000);						// 10 seconds to start printing
000204   0e27     movlw   0x27             	MOVLW	0x27
000206   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000208   0e10     movlw   0x10             	MOVLW	0x10
00020a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00020c   ec71     call    0x4ae2, 0        	CALL	_sleep_ms
00020e   f025
000210   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000212   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	166; meter_logger.c	fifo_size = fifo_in_use();
000214   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
000216   f027
000218   6e02     movwf   0x2, 0           	MOVWF	r0x02
00021a   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00021c   f003
                                           _00112_DS_:
                                           ;	.line	167; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
00021e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000220   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000222   e102     bnz     0x228            	BNZ	_00331_DS_
000224   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000226   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00331_DS_:
000228   e212     bc      0x24e            	BC	_00114_DS_
                                           ;	.line	168; meter_logger.c	last_fifo_size = fifo_size;
00022a   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
00022c   f000
00022e   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000230   f001
                                           ;	.line	169; meter_logger.c	sleep_ms(200);						// return data when no data for 200 ms
000232   0e00     movlw   0                	MOVLW	0x00
000234   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000236   0ec8     movlw   0xc8             	MOVLW	0xc8
000238   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00023a   ec71     call    0x4ae2, 0        	CALL	_sleep_ms
00023c   f025
00023e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000240   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	170; meter_logger.c	fifo_size = fifo_in_use();
000242   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
000244   f027
000246   6e02     movwf   0x2, 0           	MOVWF	r0x02
000248   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00024a   f003
00024c   d7e8     bra     0x21e            	BRA	_00112_DS_
                                           _00114_DS_:
                                           ;	.line	172; meter_logger.c	testo_ir_disable();
00024e   ecca     call    0x5394, 0        	CALL	_testo_ir_disable
000250   f029
                                           ;	.line	175; meter_logger.c	usart_puts("\n\rdone receiving - sending via serial/fsk\n\r");
000252   0e00     movlw   0                	MOVLW	UPPER(___str_5)
000254   6e06     movwf   0x6, 0           	MOVWF	r0x06
000256   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_5)
000258   6e05     movwf   0x5, 0           	MOVWF	r0x05
00025a   0e9e     movlw   0x9e             	MOVLW	LOW(___str_5)
00025c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00025e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000260   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000262   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000264   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000266   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000268   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00026a   ec48     call    0x4c90, 0        	CALL	_usart_puts
00026c   f026
00026e   0e03     movlw   0x3              	MOVLW	0x03
000270   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	178; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000272   6a04     clrf    0x4, 0           	CLRF	r0x04
000274   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00171_DS_:
000276   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
000278   f027
00027a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00027c   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
00027e   f007
000280   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000282   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000284   e102     bnz     0x28a            	BNZ	_00332_DS_
000286   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000288   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00332_DS_:
00028a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00028c   d04c     bra     0x326            	BRA	_00115_DS_
                                           ;	.line	180; meter_logger.c	fifo_get(&sub_cmd);
00028e   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000290   6e07     movwf   0x7, 0           	MOVWF	r0x07
000292   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
000294   6e06     movwf   0x6, 0           	MOVWF	r0x06
000296   0e80     movlw   0x80             	MOVLW	0x80
000298   6e08     movwf   0x8, 0           	MOVWF	r0x08
00029a   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00029c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00029e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0002a0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002a2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0002a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002a6   ec5c     call    0x40b8, 0        	CALL	_fifo_get
0002a8   f020
0002aa   0e03     movlw   0x3              	MOVLW	0x03
0002ac   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	182; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
0002ae   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
0002b0   f006
0002b2   6a07     clrf    0x7, 0           	CLRF	r0x07
0002b4   0e00     movlw   0                	MOVLW	UPPER(___str_6)
0002b6   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0002b8   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_6)
0002ba   6e09     movwf   0x9, 0           	MOVWF	r0x09
0002bc   0eca     movlw   0xca             	MOVLW	LOW(___str_6)
0002be   6e08     movwf   0x8, 0           	MOVWF	r0x08
0002c0   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0002c2   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
0002c4   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0002c6   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0002c8   0e80     movlw   0x80             	MOVLW	0x80
0002ca   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
0002cc   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0002ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002d0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0002d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002d4   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
0002d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002d8   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0002da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002dc   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0002de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002e0   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
0002e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002e4   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
0002e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002e8   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
0002ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002ec   ecd3     call    0x45a6, 0        	CALL	_sprintf
0002ee   f022
0002f0   0e08     movlw   0x8              	MOVLW	0x08
0002f2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	183; meter_logger.c	usart_puts(debug_buffer);
0002f4   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0002f6   6e07     movwf   0x7, 0           	MOVWF	r0x07
0002f8   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0002fa   6e06     movwf   0x6, 0           	MOVWF	r0x06
0002fc   0e80     movlw   0x80             	MOVLW	0x80
0002fe   6e08     movwf   0x8, 0           	MOVWF	r0x08
000300   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000302   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000304   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000306   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000308   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00030a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00030c   ec48     call    0x4c90, 0        	CALL	_usart_puts
00030e   f026
000310   0e03     movlw   0x3              	MOVLW	0x03
000312   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000314   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	185; meter_logger.c	fifo_put(sub_cmd);
000316   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000318   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00031a   ecb8     call    0x4370, 0        	CALL	_fifo_put
00031c   f021
00031e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	178; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000320   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000322   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000324   d7a8     bra     0x276            	BRA	_00171_DS_
                                           _00115_DS_:
                                           ;	.line	188; meter_logger.c	fsk_tx_enable();
000326   ec26     call    0x504c, 0        	CALL	_fsk_tx_enable
000328   f028
                                           _00116_DS_:
                                           ;	.line	189; meter_logger.c	while (fifo_get(&cmd)) {	// and print them to serial
00032a   0e05     movlw   0x5              	MOVLW	HIGH(_main_cmd_1_90)
00032c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00032e   0e4f     movlw   0x4f             	MOVLW	LOW(_main_cmd_1_90)
000330   6e04     movwf   0x4, 0           	MOVWF	r0x04
000332   0e80     movlw   0x80             	MOVLW	0x80
000334   6e06     movwf   0x6, 0           	MOVWF	r0x06
000336   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000338   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00033a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00033c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00033e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000340   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000342   ec5c     call    0x40b8, 0        	CALL	_fifo_get
000344   f020
000346   6e04     movwf   0x4, 0           	MOVWF	r0x04
000348   0e03     movlw   0x3              	MOVLW	0x03
00034a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00034c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00034e   e00f     bz      0x36e            	BZ	_00118_DS_
000350   0105     movlb   0x5              	BANKSEL	_main_cmd_1_90
                                           ;	.line	190; meter_logger.c	fsk_tx_byte(cmd);
000352   514f     movf    0x4f, 0, 0x1     	MOVF	_main_cmd_1_90, W, B
000354   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000356   ecb7     call    0x516e, 0        	CALL	_fsk_tx_byte
000358   f028
00035a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	191; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
00035c   0e00     movlw   0                	MOVLW	0x00
00035e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000360   0e02     movlw   0x2              	MOVLW	0x02
000362   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000364   ec71     call    0x4ae2, 0        	CALL	_sleep_ms
000366   f025
000368   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00036a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00036c   d7de     bra     0x32a            	BRA	_00116_DS_
                                           _00118_DS_:
                                           ;	.line	193; meter_logger.c	fsk_tx_disable();
00036e   ec7e     call    0x52fc, 0        	CALL	_fsk_tx_disable
000370   f029
                                           ;	.line	195; meter_logger.c	usart_puts("\n\rwaiting for new command\n\r");
000372   0e00     movlw   0                	MOVLW	UPPER(___str_7)
000374   6e06     movwf   0x6, 0           	MOVWF	r0x06
000376   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_7)
000378   6e05     movwf   0x5, 0           	MOVWF	r0x05
00037a   0ece     movlw   0xce             	MOVLW	LOW(___str_7)
00037c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00037e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000380   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000382   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000384   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000386   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000388   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00038a   ec48     call    0x4c90, 0        	CALL	_usart_puts
00038c   f026
00038e   0e03     movlw   0x3              	MOVLW	0x03
000390   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	197; meter_logger.c	fsk_rx_enable();
000392   ecbd     call    0x4d7a, 0        	CALL	_fsk_rx_enable
000394   f026
                                           ;	.line	198; meter_logger.c	break;
000396   d6ed     bra     0x172            	BRA	_00168_DS_
                                           _00119_DS_:
                                           ;	.line	202; meter_logger.c	fsk_rx_disable();
000398   ecc0     call    0x5380, 0        	CALL	_fsk_rx_disable
00039a   f029
                                           ;	.line	203; meter_logger.c	usart_puts("\n\recho test - send some data\n\r");
00039c   0e00     movlw   0                	MOVLW	UPPER(___str_8)
00039e   6e06     movwf   0x6, 0           	MOVWF	r0x06
0003a0   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_8)
0003a2   6e05     movwf   0x5, 0           	MOVWF	r0x05
0003a4   0eea     movlw   0xea             	MOVLW	LOW(___str_8)
0003a6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0003a8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0003aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003ac   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0003ae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003b0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0003b2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003b4   ec48     call    0x4c90, 0        	CALL	_usart_puts
0003b6   f026
0003b8   0e03     movlw   0x3              	MOVLW	0x03
0003ba   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	204; meter_logger.c	fsk_rx_enable();
0003bc   ecbd     call    0x4d7a, 0        	CALL	_fsk_rx_enable
0003be   f026
                                           ;	.line	208; meter_logger.c	last_fifo_size = 0;
0003c0   6a00     clrf    0, 0             	CLRF	r0x00
0003c2   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	209; meter_logger.c	sleep_ms(1000);							// 1 second
0003c4   0e03     movlw   0x3              	MOVLW	0x03
0003c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003c8   0ee8     movlw   0xe8             	MOVLW	0xe8
0003ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003cc   ec71     call    0x4ae2, 0        	CALL	_sleep_ms
0003ce   f025
0003d0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0003d2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	210; meter_logger.c	fifo_size = fifo_in_use();
0003d4   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
0003d6   f027
0003d8   6e02     movwf   0x2, 0           	MOVWF	r0x02
0003da   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0003dc   f003
                                           _00120_DS_:
                                           ;	.line	211; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
0003de   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0003e0   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0003e2   e102     bnz     0x3e8            	BNZ	_00333_DS_
0003e4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0003e6   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00333_DS_:
0003e8   e212     bc      0x40e            	BC	_00122_DS_
                                           ;	.line	212; meter_logger.c	last_fifo_size = fifo_size;
0003ea   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
0003ec   f000
0003ee   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
0003f0   f001
                                           ;	.line	213; meter_logger.c	sleep_ms(500);						// return data when no data for 500 ms
0003f2   0e01     movlw   0x1              	MOVLW	0x01
0003f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003f6   0ef4     movlw   0xf4             	MOVLW	0xf4
0003f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003fa   ec71     call    0x4ae2, 0        	CALL	_sleep_ms
0003fc   f025
0003fe   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000400   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	214; meter_logger.c	fifo_size = fifo_in_use();
000402   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
000404   f027
000406   6e02     movwf   0x2, 0           	MOVWF	r0x02
000408   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00040a   f003
00040c   d7e8     bra     0x3de            	BRA	_00120_DS_
                                           _00122_DS_:
                                           ;	.line	216; meter_logger.c	fsk_rx_disable();
00040e   ecc0     call    0x5380, 0        	CALL	_fsk_rx_disable
000410   f029
                                           ;	.line	219; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000412   6a04     clrf    0x4, 0           	CLRF	r0x04
000414   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00174_DS_:
000416   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
000418   f027
00041a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00041c   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
00041e   f007
000420   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000422   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000424   e102     bnz     0x42a            	BNZ	_00334_DS_
000426   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000428   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00334_DS_:
00042a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00042c   d04c     bra     0x4c6            	BRA	_00123_DS_
                                           ;	.line	221; meter_logger.c	fifo_get(&sub_cmd);
00042e   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000430   6e07     movwf   0x7, 0           	MOVWF	r0x07
000432   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
000434   6e06     movwf   0x6, 0           	MOVWF	r0x06
000436   0e80     movlw   0x80             	MOVLW	0x80
000438   6e08     movwf   0x8, 0           	MOVWF	r0x08
00043a   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00043c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00043e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000440   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000442   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000444   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000446   ec5c     call    0x40b8, 0        	CALL	_fifo_get
000448   f020
00044a   0e03     movlw   0x3              	MOVLW	0x03
00044c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	223; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
00044e   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
000450   f006
000452   6a07     clrf    0x7, 0           	CLRF	r0x07
000454   0e00     movlw   0                	MOVLW	UPPER(___str_6)
000456   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000458   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_6)
00045a   6e09     movwf   0x9, 0           	MOVWF	r0x09
00045c   0eca     movlw   0xca             	MOVLW	LOW(___str_6)
00045e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000460   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000462   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
000464   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000466   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
000468   0e80     movlw   0x80             	MOVLW	0x80
00046a   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
00046c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00046e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000470   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000472   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000474   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000476   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000478   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00047a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00047c   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00047e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000480   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000482   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000484   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000486   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000488   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
00048a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00048c   ecd3     call    0x45a6, 0        	CALL	_sprintf
00048e   f022
000490   0e08     movlw   0x8              	MOVLW	0x08
000492   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	224; meter_logger.c	usart_puts(debug_buffer);
000494   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000496   6e07     movwf   0x7, 0           	MOVWF	r0x07
000498   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00049a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00049c   0e80     movlw   0x80             	MOVLW	0x80
00049e   6e08     movwf   0x8, 0           	MOVWF	r0x08
0004a0   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0004a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004a4   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0004a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004a8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0004aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004ac   ec48     call    0x4c90, 0        	CALL	_usart_puts
0004ae   f026
0004b0   0e03     movlw   0x3              	MOVLW	0x03
0004b2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0004b4   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	226; meter_logger.c	fifo_put(sub_cmd);
0004b6   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
0004b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004ba   ecb8     call    0x4370, 0        	CALL	_fifo_put
0004bc   f021
0004be   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	219; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
0004c0   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
0004c2   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
0004c4   d7a8     bra     0x416            	BRA	_00174_DS_
                                           _00123_DS_:
                                           ;	.line	231; meter_logger.c	fsk_tx_enable();
0004c6   ec26     call    0x504c, 0        	CALL	_fsk_tx_enable
0004c8   f028
                                           _00124_DS_:
                                           ;	.line	232; meter_logger.c	while (fifo_get(&sub_cmd)) {
0004ca   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0004cc   6e05     movwf   0x5, 0           	MOVWF	r0x05
0004ce   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
0004d0   6e04     movwf   0x4, 0           	MOVWF	r0x04
0004d2   0e80     movlw   0x80             	MOVLW	0x80
0004d4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0004d6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0004d8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004da   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0004dc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004de   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0004e0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004e2   ec5c     call    0x40b8, 0        	CALL	_fifo_get
0004e4   f020
0004e6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0004e8   0e03     movlw   0x3              	MOVLW	0x03
0004ea   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0004ec   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0004ee   e00f     bz      0x50e            	BZ	_00126_DS_
0004f0   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	233; meter_logger.c	fsk_tx_byte(sub_cmd);
0004f2   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
0004f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004f6   ecb7     call    0x516e, 0        	CALL	_fsk_tx_byte
0004f8   f028
0004fa   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	234; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
0004fc   0e00     movlw   0                	MOVLW	0x00
0004fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000500   0e02     movlw   0x2              	MOVLW	0x02
000502   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000504   ec71     call    0x4ae2, 0        	CALL	_sleep_ms
000506   f025
000508   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00050a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00050c   d7de     bra     0x4ca            	BRA	_00124_DS_
                                           _00126_DS_:
                                           ;	.line	236; meter_logger.c	fsk_tx_disable();
00050e   ec7e     call    0x52fc, 0        	CALL	_fsk_tx_disable
000510   f029
                                           ;	.line	239; meter_logger.c	usart_puts("\n\rwaiting for new command\n\r");
000512   0e00     movlw   0                	MOVLW	UPPER(___str_7)
000514   6e06     movwf   0x6, 0           	MOVWF	r0x06
000516   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_7)
000518   6e05     movwf   0x5, 0           	MOVWF	r0x05
00051a   0ece     movlw   0xce             	MOVLW	LOW(___str_7)
00051c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00051e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000520   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000522   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000524   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000526   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000528   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00052a   ec48     call    0x4c90, 0        	CALL	_usart_puts
00052c   f026
00052e   0e03     movlw   0x3              	MOVLW	0x03
000530   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	241; meter_logger.c	fsk_rx_enable();
000532   ecbd     call    0x4d7a, 0        	CALL	_fsk_rx_enable
000534   f026
                                           ;	.line	242; meter_logger.c	break;
000536   d61d     bra     0x172            	BRA	_00168_DS_
                                           _00127_DS_:
                                           ;	.line	245; meter_logger.c	fsk_rx_disable();
000538   ecc0     call    0x5380, 0        	CALL	_fsk_rx_disable
00053a   f029
                                           ;	.line	247; meter_logger.c	usart_puts("\n\rkamstrup - send kmp frame data\n\r");
00053c   0e00     movlw   0                	MOVLW	UPPER(___str_9)
00053e   6e06     movwf   0x6, 0           	MOVWF	r0x06
000540   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_9)
000542   6e05     movwf   0x5, 0           	MOVWF	r0x05
000544   0e0a     movlw   0xa              	MOVLW	LOW(___str_9)
000546   6e04     movwf   0x4, 0           	MOVWF	r0x04
000548   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00054a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00054c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00054e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000550   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000552   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000554   ec48     call    0x4c90, 0        	CALL	_usart_puts
000556   f026
000558   0e03     movlw   0x3              	MOVLW	0x03
00055a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	251; meter_logger.c	fsk_rx_enable();
00055c   ecbd     call    0x4d7a, 0        	CALL	_fsk_rx_enable
00055e   f026
                                           ;	.line	252; meter_logger.c	last_fifo_size = 0;
000560   6a00     clrf    0, 0             	CLRF	r0x00
000562   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	253; meter_logger.c	sleep_ms(400);							// sleep 400 ms to let some data come in
000564   0e01     movlw   0x1              	MOVLW	0x01
000566   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000568   0e90     movlw   0x90             	MOVLW	0x90
00056a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00056c   ec71     call    0x4ae2, 0        	CALL	_sleep_ms
00056e   f025
000570   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000572   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	254; meter_logger.c	fifo_size = fifo_in_use();
000574   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
000576   f027
000578   6e02     movwf   0x2, 0           	MOVWF	r0x02
00057a   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00057c   f003
                                           _00128_DS_:
                                           ;	.line	255; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
00057e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000580   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000582   e102     bnz     0x588            	BNZ	_00335_DS_
000584   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000586   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00335_DS_:
000588   e212     bc      0x5ae            	BC	_00130_DS_
                                           ;	.line	256; meter_logger.c	last_fifo_size = fifo_size;
00058a   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
00058c   f000
00058e   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000590   f001
                                           ;	.line	257; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
000592   0e00     movlw   0                	MOVLW	0x00
000594   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000596   0ec8     movlw   0xc8             	MOVLW	0xc8
000598   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00059a   ec71     call    0x4ae2, 0        	CALL	_sleep_ms
00059c   f025
00059e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0005a0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	258; meter_logger.c	fifo_size = fifo_in_use();
0005a2   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
0005a4   f027
0005a6   6e02     movwf   0x2, 0           	MOVWF	r0x02
0005a8   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0005aa   f003
0005ac   d7e8     bra     0x57e            	BRA	_00128_DS_
                                           _00130_DS_:
                                           ;	.line	260; meter_logger.c	fsk_rx_disable();
0005ae   ecc0     call    0x5380, 0        	CALL	_fsk_rx_disable
0005b0   f029
                                           ;	.line	263; meter_logger.c	usart_puts("\n\rkamstrup - kmp frame received:\n\r");
0005b2   0e00     movlw   0                	MOVLW	UPPER(___str_10)
0005b4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0005b6   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_10)
0005b8   6e05     movwf   0x5, 0           	MOVWF	r0x05
0005ba   0e2e     movlw   0x2e             	MOVLW	LOW(___str_10)
0005bc   6e04     movwf   0x4, 0           	MOVWF	r0x04
0005be   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0005c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005c2   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0005c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005c6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0005c8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005ca   ec48     call    0x4c90, 0        	CALL	_usart_puts
0005cc   f026
0005ce   0e03     movlw   0x3              	MOVLW	0x03
0005d0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	266; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
0005d2   6a04     clrf    0x4, 0           	CLRF	r0x04
0005d4   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00177_DS_:
0005d6   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
0005d8   f027
0005da   6e06     movwf   0x6, 0           	MOVWF	r0x06
0005dc   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
0005de   f007
0005e0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0005e2   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0005e4   e102     bnz     0x5ea            	BNZ	_00336_DS_
0005e6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0005e8   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00336_DS_:
0005ea   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0005ec   d04c     bra     0x686            	BRA	_00131_DS_
                                           ;	.line	268; meter_logger.c	fifo_get(&sub_cmd);
0005ee   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0005f0   6e07     movwf   0x7, 0           	MOVWF	r0x07
0005f2   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
0005f4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0005f6   0e80     movlw   0x80             	MOVLW	0x80
0005f8   6e08     movwf   0x8, 0           	MOVWF	r0x08
0005fa   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0005fc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005fe   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000600   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000602   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000604   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000606   ec5c     call    0x40b8, 0        	CALL	_fifo_get
000608   f020
00060a   0e03     movlw   0x3              	MOVLW	0x03
00060c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	270; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
00060e   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
000610   f006
000612   6a07     clrf    0x7, 0           	CLRF	r0x07
000614   0e00     movlw   0                	MOVLW	UPPER(___str_6)
000616   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000618   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_6)
00061a   6e09     movwf   0x9, 0           	MOVWF	r0x09
00061c   0eca     movlw   0xca             	MOVLW	LOW(___str_6)
00061e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000620   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000622   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
000624   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000626   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
000628   0e80     movlw   0x80             	MOVLW	0x80
00062a   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
00062c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00062e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000630   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000632   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000634   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000636   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000638   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00063a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00063c   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00063e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000640   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000642   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000644   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000646   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000648   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
00064a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00064c   ecd3     call    0x45a6, 0        	CALL	_sprintf
00064e   f022
000650   0e08     movlw   0x8              	MOVLW	0x08
000652   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	271; meter_logger.c	usart_puts(debug_buffer);
000654   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000656   6e07     movwf   0x7, 0           	MOVWF	r0x07
000658   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00065a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00065c   0e80     movlw   0x80             	MOVLW	0x80
00065e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000660   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000662   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000664   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000666   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000668   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00066a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00066c   ec48     call    0x4c90, 0        	CALL	_usart_puts
00066e   f026
000670   0e03     movlw   0x3              	MOVLW	0x03
000672   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000674   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	273; meter_logger.c	fifo_put(sub_cmd);
000676   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000678   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00067a   ecb8     call    0x4370, 0        	CALL	_fifo_put
00067c   f021
00067e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	266; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000680   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000682   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000684   d7a8     bra     0x5d6            	BRA	_00177_DS_
                                           _00131_DS_:
                                           ;	.line	277; meter_logger.c	rs232_8n2_tx_enable(TIMER0_RS232_1200);
000686   0ef9     movlw   0xf9             	MOVLW	0xf9
000688   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00068a   0eae     movlw   0xae             	MOVLW	0xae
00068c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00068e   ec95     call    0x4f2a, 0        	CALL	_rs232_8n2_tx_enable
000690   f027
000692   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000694   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00132_DS_:
                                           ;	.line	278; meter_logger.c	while (fifo_get(&sub_cmd)) {
000696   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000698   6e05     movwf   0x5, 0           	MOVWF	r0x05
00069a   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
00069c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00069e   0e80     movlw   0x80             	MOVLW	0x80
0006a0   6e06     movwf   0x6, 0           	MOVWF	r0x06
0006a2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0006a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006a6   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0006a8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006aa   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0006ac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006ae   ec5c     call    0x40b8, 0        	CALL	_fifo_get
0006b0   f020
0006b2   6e04     movwf   0x4, 0           	MOVWF	r0x04
0006b4   0e03     movlw   0x3              	MOVLW	0x03
0006b6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0006b8   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0006ba   e00f     bz      0x6da            	BZ	_00134_DS_
0006bc   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	279; meter_logger.c	rs232_8n2_tx_byte(sub_cmd);
0006be   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
0006c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006c2   ec58     call    0x50b0, 0        	CALL	_rs232_8n2_tx_byte
0006c4   f028
0006c6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	280; meter_logger.c	sleep_ms(RS232_TX_SLEEP);
0006c8   0e00     movlw   0                	MOVLW	0x00
0006ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006cc   0e0c     movlw   0xc              	MOVLW	0x0c
0006ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006d0   ec71     call    0x4ae2, 0        	CALL	_sleep_ms
0006d2   f025
0006d4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0006d6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0006d8   d7de     bra     0x696            	BRA	_00132_DS_
                                           _00134_DS_:
                                           ;	.line	282; meter_logger.c	rs232_8n2_tx_disable();
0006da   ecaa     call    0x5354, 0        	CALL	_rs232_8n2_tx_disable
0006dc   f029
                                           ;	.line	288; meter_logger.c	rs232_8n2_rx_enable(TIMER0_RS232_1200);
0006de   0ef9     movlw   0xf9             	MOVLW	0xf9
0006e0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006e2   0eae     movlw   0xae             	MOVLW	0xae
0006e4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006e6   ec36     call    0x4e6c, 0        	CALL	_rs232_8n2_rx_enable
0006e8   f027
0006ea   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0006ec   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	289; meter_logger.c	last_fifo_size = 0;
0006ee   6a00     clrf    0, 0             	CLRF	r0x00
0006f0   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	290; meter_logger.c	sleep_ms(400);							// sleep 400 ms to let some data come in
0006f2   0e01     movlw   0x1              	MOVLW	0x01
0006f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006f6   0e90     movlw   0x90             	MOVLW	0x90
0006f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006fa   ec71     call    0x4ae2, 0        	CALL	_sleep_ms
0006fc   f025
0006fe   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000700   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	291; meter_logger.c	fifo_size = fifo_in_use();
000702   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
000704   f027
000706   6e02     movwf   0x2, 0           	MOVWF	r0x02
000708   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00070a   f003
                                           _00135_DS_:
                                           ;	.line	293; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
00070c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00070e   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000710   e102     bnz     0x716            	BNZ	_00337_DS_
000712   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000714   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00337_DS_:
000716   e212     bc      0x73c            	BC	_00137_DS_
                                           ;	.line	294; meter_logger.c	last_fifo_size = fifo_size;
000718   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
00071a   f000
00071c   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
00071e   f001
                                           ;	.line	295; meter_logger.c	sleep_ms(200);						// return data when no data for 200 ms
000720   0e00     movlw   0                	MOVLW	0x00
000722   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000724   0ec8     movlw   0xc8             	MOVLW	0xc8
000726   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000728   ec71     call    0x4ae2, 0        	CALL	_sleep_ms
00072a   f025
00072c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00072e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	296; meter_logger.c	fifo_size = fifo_in_use();
000730   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
000732   f027
000734   6e02     movwf   0x2, 0           	MOVWF	r0x02
000736   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000738   f003
00073a   d7e8     bra     0x70c            	BRA	_00135_DS_
                                           _00137_DS_:
                                           ;	.line	299; meter_logger.c	rs232_8n2_rx_disable();
00073c   ec9f     call    0x533e, 0        	CALL	_rs232_8n2_rx_disable
00073e   f029
                                           ;	.line	303; meter_logger.c	usart_puts("\n\rkamstrup - kmp reply received:\n\r");
000740   0e00     movlw   0                	MOVLW	UPPER(___str_11)
000742   6e06     movwf   0x6, 0           	MOVWF	r0x06
000744   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_11)
000746   6e05     movwf   0x5, 0           	MOVWF	r0x05
000748   0e52     movlw   0x52             	MOVLW	LOW(___str_11)
00074a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00074c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00074e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000750   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000752   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000754   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000756   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000758   ec48     call    0x4c90, 0        	CALL	_usart_puts
00075a   f026
00075c   0e03     movlw   0x3              	MOVLW	0x03
00075e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	306; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000760   6a04     clrf    0x4, 0           	CLRF	r0x04
000762   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00180_DS_:
000764   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
000766   f027
000768   6e06     movwf   0x6, 0           	MOVWF	r0x06
00076a   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
00076c   f007
00076e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000770   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000772   e102     bnz     0x778            	BNZ	_00338_DS_
000774   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000776   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00338_DS_:
000778   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00077a   d04c     bra     0x814            	BRA	_00138_DS_
                                           ;	.line	308; meter_logger.c	fifo_get(&sub_cmd);
00077c   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
00077e   6e07     movwf   0x7, 0           	MOVWF	r0x07
000780   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
000782   6e06     movwf   0x6, 0           	MOVWF	r0x06
000784   0e80     movlw   0x80             	MOVLW	0x80
000786   6e08     movwf   0x8, 0           	MOVWF	r0x08
000788   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00078a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00078c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00078e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000790   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000792   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000794   ec5c     call    0x40b8, 0        	CALL	_fifo_get
000796   f020
000798   0e03     movlw   0x3              	MOVLW	0x03
00079a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	310; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
00079c   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
00079e   f006
0007a0   6a07     clrf    0x7, 0           	CLRF	r0x07
0007a2   0e00     movlw   0                	MOVLW	UPPER(___str_6)
0007a4   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0007a6   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_6)
0007a8   6e09     movwf   0x9, 0           	MOVWF	r0x09
0007aa   0eca     movlw   0xca             	MOVLW	LOW(___str_6)
0007ac   6e08     movwf   0x8, 0           	MOVWF	r0x08
0007ae   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0007b0   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
0007b2   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0007b4   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0007b6   0e80     movlw   0x80             	MOVLW	0x80
0007b8   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
0007ba   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0007bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007be   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0007c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007c2   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
0007c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007c6   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0007c8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007ca   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0007cc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007ce   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
0007d0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007d2   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
0007d4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007d6   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
0007d8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007da   ecd3     call    0x45a6, 0        	CALL	_sprintf
0007dc   f022
0007de   0e08     movlw   0x8              	MOVLW	0x08
0007e0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	311; meter_logger.c	usart_puts(debug_buffer);
0007e2   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0007e4   6e07     movwf   0x7, 0           	MOVWF	r0x07
0007e6   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0007e8   6e06     movwf   0x6, 0           	MOVWF	r0x06
0007ea   0e80     movlw   0x80             	MOVLW	0x80
0007ec   6e08     movwf   0x8, 0           	MOVWF	r0x08
0007ee   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0007f0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007f2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0007f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007f6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0007f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007fa   ec48     call    0x4c90, 0        	CALL	_usart_puts
0007fc   f026
0007fe   0e03     movlw   0x3              	MOVLW	0x03
000800   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000802   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	313; meter_logger.c	fifo_put(sub_cmd);
000804   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000806   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000808   ecb8     call    0x4370, 0        	CALL	_fifo_put
00080a   f021
00080c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	306; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
00080e   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000810   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000812   d7a8     bra     0x764            	BRA	_00180_DS_
                                           _00138_DS_:
                                           ;	.line	316; meter_logger.c	if (fifo_in_use()) {
000814   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
000816   f027
000818   6e04     movwf   0x4, 0           	MOVWF	r0x04
00081a   cff3     movff   0xff3, 0x5       	MOVFF	PRODL, r0x05
00081c   f005
00081e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000820   1005     iorwf   0x5, 0, 0        	IORWF	r0x05, W
000822   e02b     bz      0x87a            	BZ	_00143_DS_
                                           ;	.line	318; meter_logger.c	DEBUG2_PIN = 1;
000824   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000826   0000     nop                      	nop
000828   0000     nop                      	nop
                                           	
                                           ;	.line	323; meter_logger.c	DEBUG2_PIN = 0;
00082a   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	324; meter_logger.c	fsk_tx_enable();
00082c   ec26     call    0x504c, 0        	CALL	_fsk_tx_enable
00082e   f028
                                           _00139_DS_:
                                           ;	.line	325; meter_logger.c	while (fifo_get(&sub_cmd)) {
000830   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000832   6e05     movwf   0x5, 0           	MOVWF	r0x05
000834   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
000836   6e04     movwf   0x4, 0           	MOVWF	r0x04
000838   0e80     movlw   0x80             	MOVLW	0x80
00083a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00083c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00083e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000840   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000842   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000844   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000846   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000848   ec5c     call    0x40b8, 0        	CALL	_fifo_get
00084a   f020
00084c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00084e   0e03     movlw   0x3              	MOVLW	0x03
000850   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000852   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000854   e00f     bz      0x874            	BZ	_00141_DS_
000856   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	326; meter_logger.c	fsk_tx_byte(sub_cmd);
000858   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
00085a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00085c   ecb7     call    0x516e, 0        	CALL	_fsk_tx_byte
00085e   f028
000860   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	327; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000862   0e00     movlw   0                	MOVLW	0x00
000864   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000866   0e02     movlw   0x2              	MOVLW	0x02
000868   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00086a   ec71     call    0x4ae2, 0        	CALL	_sleep_ms
00086c   f025
00086e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000870   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000872   d7de     bra     0x830            	BRA	_00139_DS_
                                           _00141_DS_:
                                           ;	.line	329; meter_logger.c	fsk_tx_disable();
000874   ec7e     call    0x52fc, 0        	CALL	_fsk_tx_disable
000876   f029
000878   d047     bra     0x908            	BRA	_00144_DS_
                                           _00143_DS_:
                                           ;	.line	333; meter_logger.c	DEBUG2_PIN = 1;
00087a   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
00087c   0000     nop                      	nop
00087e   0000     nop                      	nop
                                           	
                                           ;	.line	338; meter_logger.c	DEBUG2_PIN = 0;
000880   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
000882   0000     nop                      	nop
000884   0000     nop                      	nop
                                           	
                                           ;	.line	343; meter_logger.c	DEBUG2_PIN = 1;
000886   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000888   0000     nop                      	nop
00088a   0000     nop                      	nop
                                           	
                                           ;	.line	348; meter_logger.c	DEBUG2_PIN = 0;
00088c   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	350; meter_logger.c	sprintf(debug_buffer, "\n\rno reply from meter\n\r");
00088e   0e00     movlw   0                	MOVLW	UPPER(___str_12)
000890   6e06     movwf   0x6, 0           	MOVWF	r0x06
000892   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_12)
000894   6e05     movwf   0x5, 0           	MOVWF	r0x05
000896   0e76     movlw   0x76             	MOVLW	LOW(___str_12)
000898   6e04     movwf   0x4, 0           	MOVWF	r0x04
00089a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00089c   6e08     movwf   0x8, 0           	MOVWF	r0x08
00089e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0008a0   6e07     movwf   0x7, 0           	MOVWF	r0x07
0008a2   0e80     movlw   0x80             	MOVLW	0x80
0008a4   6e09     movwf   0x9, 0           	MOVWF	r0x09
0008a6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0008a8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008aa   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0008ac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008ae   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0008b0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008b2   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0008b4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008b6   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0008b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008ba   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0008bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008be   ecd3     call    0x45a6, 0        	CALL	_sprintf
0008c0   f022
0008c2   0e06     movlw   0x6              	MOVLW	0x06
0008c4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	351; meter_logger.c	usart_puts(debug_buffer);
0008c6   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0008c8   6e05     movwf   0x5, 0           	MOVWF	r0x05
0008ca   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0008cc   6e04     movwf   0x4, 0           	MOVWF	r0x04
0008ce   0e80     movlw   0x80             	MOVLW	0x80
0008d0   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008d2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0008d4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008d6   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0008d8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008da   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0008dc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008de   ec48     call    0x4c90, 0        	CALL	_usart_puts
0008e0   f026
0008e2   0e03     movlw   0x3              	MOVLW	0x03
0008e4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	353; meter_logger.c	fsk_tx_enable();
0008e6   ec26     call    0x504c, 0        	CALL	_fsk_tx_enable
0008e8   f028
                                           ;	.line	354; meter_logger.c	fsk_tx_byte(0x0d);
0008ea   0e0d     movlw   0xd              	MOVLW	0x0d
0008ec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008ee   ecb7     call    0x516e, 0        	CALL	_fsk_tx_byte
0008f0   f028
0008f2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	355; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
0008f4   0e00     movlw   0                	MOVLW	0x00
0008f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008f8   0e02     movlw   0x2              	MOVLW	0x02
0008fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008fc   ec71     call    0x4ae2, 0        	CALL	_sleep_ms
0008fe   f025
000900   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000902   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	356; meter_logger.c	fsk_tx_disable();
000904   ec7e     call    0x52fc, 0        	CALL	_fsk_tx_disable
000906   f029
                                           _00144_DS_:
                                           ;	.line	359; meter_logger.c	usart_puts("\n\rwaiting for new command\n\r");
000908   0e00     movlw   0                	MOVLW	UPPER(___str_7)
00090a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00090c   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_7)
00090e   6e05     movwf   0x5, 0           	MOVWF	r0x05
000910   0ece     movlw   0xce             	MOVLW	LOW(___str_7)
000912   6e04     movwf   0x4, 0           	MOVWF	r0x04
000914   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000916   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000918   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00091a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00091c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00091e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000920   ec48     call    0x4c90, 0        	CALL	_usart_puts
000922   f026
000924   0e03     movlw   0x3              	MOVLW	0x03
000926   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	361; meter_logger.c	fsk_rx_enable();
000928   ecbd     call    0x4d7a, 0        	CALL	_fsk_rx_enable
00092a   f026
                                           ;	.line	362; meter_logger.c	break;
00092c   efb9     goto    0x172            	GOTO	_00168_DS_
00092e   f000
                                           _00145_DS_:
                                           ;	.line	364; meter_logger.c	fsk_rx_disable();
000930   ecc0     call    0x5380, 0        	CALL	_fsk_rx_disable
000932   f029
                                           ;	.line	366; meter_logger.c	usart_puts("\n\rkamstrup - send IEC61107 frame data\n\r");
000934   0e00     movlw   0                	MOVLW	UPPER(___str_13)
000936   6e06     movwf   0x6, 0           	MOVWF	r0x06
000938   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_13)
00093a   6e05     movwf   0x5, 0           	MOVWF	r0x05
00093c   0e8e     movlw   0x8e             	MOVLW	LOW(___str_13)
00093e   6e04     movwf   0x4, 0           	MOVWF	r0x04
000940   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000942   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000944   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000946   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000948   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00094a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00094c   ec48     call    0x4c90, 0        	CALL	_usart_puts
00094e   f026
000950   0e03     movlw   0x3              	MOVLW	0x03
000952   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	370; meter_logger.c	fsk_rx_enable();
000954   ecbd     call    0x4d7a, 0        	CALL	_fsk_rx_enable
000956   f026
                                           ;	.line	371; meter_logger.c	last_fifo_size = 0;
000958   6a00     clrf    0, 0             	CLRF	r0x00
00095a   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	372; meter_logger.c	sleep_ms(400);							// sleep 400 ms to let some data come in
00095c   0e01     movlw   0x1              	MOVLW	0x01
00095e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000960   0e90     movlw   0x90             	MOVLW	0x90
000962   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000964   ec71     call    0x4ae2, 0        	CALL	_sleep_ms
000966   f025
000968   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00096a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	373; meter_logger.c	fifo_size = fifo_in_use();
00096c   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
00096e   f027
000970   6e02     movwf   0x2, 0           	MOVWF	r0x02
000972   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000974   f003
                                           _00146_DS_:
                                           ;	.line	374; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000976   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000978   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00097a   e102     bnz     0x980            	BNZ	_00339_DS_
00097c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00097e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00339_DS_:
000980   e212     bc      0x9a6            	BC	_00148_DS_
                                           ;	.line	375; meter_logger.c	last_fifo_size = fifo_size;
000982   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000984   f000
000986   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000988   f001
                                           ;	.line	376; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
00098a   0e00     movlw   0                	MOVLW	0x00
00098c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00098e   0ec8     movlw   0xc8             	MOVLW	0xc8
000990   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000992   ec71     call    0x4ae2, 0        	CALL	_sleep_ms
000994   f025
000996   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000998   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	377; meter_logger.c	fifo_size = fifo_in_use();
00099a   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
00099c   f027
00099e   6e02     movwf   0x2, 0           	MOVWF	r0x02
0009a0   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0009a2   f003
0009a4   d7e8     bra     0x976            	BRA	_00146_DS_
                                           _00148_DS_:
                                           ;	.line	379; meter_logger.c	fsk_rx_disable();
0009a6   ecc0     call    0x5380, 0        	CALL	_fsk_rx_disable
0009a8   f029
                                           ;	.line	382; meter_logger.c	usart_puts("\n\rkamstrup - IEC61107 frame received:\n\r");
0009aa   0e00     movlw   0                	MOVLW	UPPER(___str_14)
0009ac   6e06     movwf   0x6, 0           	MOVWF	r0x06
0009ae   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_14)
0009b0   6e05     movwf   0x5, 0           	MOVWF	r0x05
0009b2   0eb6     movlw   0xb6             	MOVLW	LOW(___str_14)
0009b4   6e04     movwf   0x4, 0           	MOVWF	r0x04
0009b6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0009b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009ba   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0009bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009be   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0009c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009c2   ec48     call    0x4c90, 0        	CALL	_usart_puts
0009c4   f026
0009c6   0e03     movlw   0x3              	MOVLW	0x03
0009c8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	385; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
0009ca   6a04     clrf    0x4, 0           	CLRF	r0x04
0009cc   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00183_DS_:
0009ce   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
0009d0   f027
0009d2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0009d4   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
0009d6   f007
0009d8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0009da   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0009dc   e102     bnz     0x9e2            	BNZ	_00340_DS_
0009de   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0009e0   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00340_DS_:
0009e2   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0009e4   d04c     bra     0xa7e            	BRA	_00149_DS_
                                           ;	.line	387; meter_logger.c	fifo_get(&sub_cmd);
0009e6   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0009e8   6e07     movwf   0x7, 0           	MOVWF	r0x07
0009ea   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
0009ec   6e06     movwf   0x6, 0           	MOVWF	r0x06
0009ee   0e80     movlw   0x80             	MOVLW	0x80
0009f0   6e08     movwf   0x8, 0           	MOVWF	r0x08
0009f2   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0009f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009f6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0009f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009fa   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0009fc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009fe   ec5c     call    0x40b8, 0        	CALL	_fifo_get
000a00   f020
000a02   0e03     movlw   0x3              	MOVLW	0x03
000a04   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	389; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
000a06   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
000a08   f006
000a0a   6a07     clrf    0x7, 0           	CLRF	r0x07
000a0c   0e00     movlw   0                	MOVLW	UPPER(___str_6)
000a0e   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000a10   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_6)
000a12   6e09     movwf   0x9, 0           	MOVWF	r0x09
000a14   0eca     movlw   0xca             	MOVLW	LOW(___str_6)
000a16   6e08     movwf   0x8, 0           	MOVWF	r0x08
000a18   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000a1a   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
000a1c   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000a1e   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
000a20   0e80     movlw   0x80             	MOVLW	0x80
000a22   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
000a24   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000a26   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a28   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000a2a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a2c   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000a2e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a30   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000a32   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a34   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000a36   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a38   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000a3a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a3c   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000a3e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a40   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000a42   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a44   ecd3     call    0x45a6, 0        	CALL	_sprintf
000a46   f022
000a48   0e08     movlw   0x8              	MOVLW	0x08
000a4a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	390; meter_logger.c	usart_puts(debug_buffer);
000a4c   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000a4e   6e07     movwf   0x7, 0           	MOVWF	r0x07
000a50   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000a52   6e06     movwf   0x6, 0           	MOVWF	r0x06
000a54   0e80     movlw   0x80             	MOVLW	0x80
000a56   6e08     movwf   0x8, 0           	MOVWF	r0x08
000a58   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000a5a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a5c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000a5e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a60   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000a62   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a64   ec48     call    0x4c90, 0        	CALL	_usart_puts
000a66   f026
000a68   0e03     movlw   0x3              	MOVLW	0x03
000a6a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000a6c   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	392; meter_logger.c	fifo_put(sub_cmd);
000a6e   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000a70   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a72   ecb8     call    0x4370, 0        	CALL	_fifo_put
000a74   f021
000a76   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	385; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000a78   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000a7a   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000a7c   d7a8     bra     0x9ce            	BRA	_00183_DS_
                                           _00149_DS_:
                                           ;	.line	395; meter_logger.c	rs232_7e1_tx_enable(TIMER0_RS232_300);
000a7e   0ee6     movlw   0xe6             	MOVLW	0xe6
000a80   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a82   0e1b     movlw   0x1b             	MOVLW	0x1b
000a84   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a86   ec76     call    0x4eec, 0        	CALL	_rs232_7e1_tx_enable
000a88   f027
000a8a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000a8c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00150_DS_:
                                           ;	.line	396; meter_logger.c	while (fifo_get(&sub_cmd)) {
000a8e   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000a90   6e05     movwf   0x5, 0           	MOVWF	r0x05
000a92   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
000a94   6e04     movwf   0x4, 0           	MOVWF	r0x04
000a96   0e80     movlw   0x80             	MOVLW	0x80
000a98   6e06     movwf   0x6, 0           	MOVWF	r0x06
000a9a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000a9c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a9e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000aa0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000aa2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000aa4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000aa6   ec5c     call    0x40b8, 0        	CALL	_fifo_get
000aa8   f020
000aaa   6e04     movwf   0x4, 0           	MOVWF	r0x04
000aac   0e03     movlw   0x3              	MOVLW	0x03
000aae   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000ab0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000ab2   e00f     bz      0xad2            	BZ	_00152_DS_
000ab4   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	397; meter_logger.c	rs232_7e1_tx_byte(sub_cmd);
000ab6   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000ab8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000aba   ec40     call    0x5080, 0        	CALL	_rs232_7e1_tx_byte
000abc   f028
000abe   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	398; meter_logger.c	sleep_ms(RS232_TX_SLEEP);
000ac0   0e00     movlw   0                	MOVLW	0x00
000ac2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ac4   0e0c     movlw   0xc              	MOVLW	0x0c
000ac6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ac8   ec71     call    0x4ae2, 0        	CALL	_sleep_ms
000aca   f025
000acc   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000ace   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000ad0   d7de     bra     0xa8e            	BRA	_00150_DS_
                                           _00152_DS_:
                                           ;	.line	400; meter_logger.c	rs232_7e1_tx_disable();
000ad2   ec94     call    0x5328, 0        	CALL	_rs232_7e1_tx_disable
000ad4   f029
                                           ;	.line	406; meter_logger.c	rs232_7e1_rx_enable(TIMER0_RS232_300);
000ad6   0ee6     movlw   0xe6             	MOVLW	0xe6
000ad8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ada   0e1b     movlw   0x1b             	MOVLW	0x1b
000adc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ade   ec16     call    0x4e2c, 0        	CALL	_rs232_7e1_rx_enable
000ae0   f027
000ae2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000ae4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	407; meter_logger.c	last_fifo_size = 0;
000ae6   6a00     clrf    0, 0             	CLRF	r0x00
000ae8   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	408; meter_logger.c	sleep_ms(1500);							// sleep 1500 ms to let some data come in
000aea   0e05     movlw   0x5              	MOVLW	0x05
000aec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000aee   0edc     movlw   0xdc             	MOVLW	0xdc
000af0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000af2   ec71     call    0x4ae2, 0        	CALL	_sleep_ms
000af4   f025
000af6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000af8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	409; meter_logger.c	fifo_size = fifo_in_use();
000afa   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
000afc   f027
000afe   6e02     movwf   0x2, 0           	MOVWF	r0x02
000b00   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000b02   f003
                                           _00153_DS_:
                                           ;	.line	411; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000b04   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000b06   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000b08   e102     bnz     0xb0e            	BNZ	_00341_DS_
000b0a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000b0c   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00341_DS_:
000b0e   e212     bc      0xb34            	BC	_00155_DS_
                                           ;	.line	412; meter_logger.c	last_fifo_size = fifo_size;
000b10   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000b12   f000
000b14   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000b16   f001
                                           ;	.line	413; meter_logger.c	sleep_ms(600);						// return data when no data for 600 ms
000b18   0e02     movlw   0x2              	MOVLW	0x02
000b1a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b1c   0e58     movlw   0x58             	MOVLW	0x58
000b1e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b20   ec71     call    0x4ae2, 0        	CALL	_sleep_ms
000b22   f025
000b24   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000b26   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	414; meter_logger.c	fifo_size = fifo_in_use();
000b28   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
000b2a   f027
000b2c   6e02     movwf   0x2, 0           	MOVWF	r0x02
000b2e   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000b30   f003
000b32   d7e8     bra     0xb04            	BRA	_00153_DS_
                                           _00155_DS_:
                                           ;	.line	417; meter_logger.c	rs232_7e1_rx_disable();
000b34   ec89     call    0x5312, 0        	CALL	_rs232_7e1_rx_disable
000b36   f029
                                           ;	.line	421; meter_logger.c	usart_puts("\n\rkamstrup - IEC61107 reply received:\n\r");
000b38   0e00     movlw   0                	MOVLW	UPPER(___str_15)
000b3a   6e02     movwf   0x2, 0           	MOVWF	r0x02
000b3c   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_15)
000b3e   6e01     movwf   0x1, 0           	MOVWF	r0x01
000b40   0ede     movlw   0xde             	MOVLW	LOW(___str_15)
000b42   6e00     movwf   0, 0             	MOVWF	r0x00
000b44   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000b46   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b48   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000b4a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b4c   5000     movf    0, 0, 0          	MOVF	r0x00, W
000b4e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b50   ec48     call    0x4c90, 0        	CALL	_usart_puts
000b52   f026
000b54   0e03     movlw   0x3              	MOVLW	0x03
000b56   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	424; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000b58   6a00     clrf    0, 0             	CLRF	r0x00
000b5a   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00186_DS_:
000b5c   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
000b5e   f027
000b60   6e02     movwf   0x2, 0           	MOVWF	r0x02
000b62   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000b64   f003
000b66   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000b68   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000b6a   e102     bnz     0xb70            	BNZ	_00342_DS_
000b6c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000b6e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00342_DS_:
000b70   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
000b72   d04c     bra     0xc0c            	BRA	_00156_DS_
                                           ;	.line	426; meter_logger.c	fifo_get(&sub_cmd);
000b74   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000b76   6e03     movwf   0x3, 0           	MOVWF	r0x03
000b78   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
000b7a   6e02     movwf   0x2, 0           	MOVWF	r0x02
000b7c   0e80     movlw   0x80             	MOVLW	0x80
000b7e   6e04     movwf   0x4, 0           	MOVWF	r0x04
000b80   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000b82   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b84   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000b86   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b88   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000b8a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b8c   ec5c     call    0x40b8, 0        	CALL	_fifo_get
000b8e   f020
000b90   0e03     movlw   0x3              	MOVLW	0x03
000b92   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	428; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
000b94   c550     movff   0x550, 0x2       	MOVFF	_main_sub_cmd_1_90, r0x02
000b96   f002
000b98   6a03     clrf    0x3, 0           	CLRF	r0x03
000b9a   0e00     movlw   0                	MOVLW	UPPER(___str_6)
000b9c   6e06     movwf   0x6, 0           	MOVWF	r0x06
000b9e   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_6)
000ba0   6e05     movwf   0x5, 0           	MOVWF	r0x05
000ba2   0eca     movlw   0xca             	MOVLW	LOW(___str_6)
000ba4   6e04     movwf   0x4, 0           	MOVWF	r0x04
000ba6   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000ba8   6e08     movwf   0x8, 0           	MOVWF	r0x08
000baa   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000bac   6e07     movwf   0x7, 0           	MOVWF	r0x07
000bae   0e80     movlw   0x80             	MOVLW	0x80
000bb0   6e09     movwf   0x9, 0           	MOVWF	r0x09
000bb2   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000bb4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bb6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000bb8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bba   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000bbc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bbe   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000bc0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bc2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000bc4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bc6   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000bc8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bca   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000bcc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bce   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000bd0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bd2   ecd3     call    0x45a6, 0        	CALL	_sprintf
000bd4   f022
000bd6   0e08     movlw   0x8              	MOVLW	0x08
000bd8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	429; meter_logger.c	usart_puts(debug_buffer);
000bda   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000bdc   6e03     movwf   0x3, 0           	MOVWF	r0x03
000bde   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000be0   6e02     movwf   0x2, 0           	MOVWF	r0x02
000be2   0e80     movlw   0x80             	MOVLW	0x80
000be4   6e04     movwf   0x4, 0           	MOVWF	r0x04
000be6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000be8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bea   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000bec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bee   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000bf0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bf2   ec48     call    0x4c90, 0        	CALL	_usart_puts
000bf4   f026
000bf6   0e03     movlw   0x3              	MOVLW	0x03
000bf8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000bfa   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	431; meter_logger.c	fifo_put(sub_cmd);
000bfc   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000bfe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c00   ecb8     call    0x4370, 0        	CALL	_fifo_put
000c02   f021
000c04   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	424; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000c06   4a00     infsnz  0, 0x1, 0        	INFSNZ	r0x00, F
000c08   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
000c0a   d7a8     bra     0xb5c            	BRA	_00186_DS_
                                           _00156_DS_:
                                           ;	.line	434; meter_logger.c	if (fifo_in_use()) {
000c0c   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
000c0e   f027
000c10   6e00     movwf   0, 0             	MOVWF	r0x00
000c12   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
000c14   f001
000c16   5000     movf    0, 0, 0          	MOVF	r0x00, W
000c18   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
000c1a   e02b     bz      0xc72            	BZ	_00161_DS_
                                           ;	.line	436; meter_logger.c	DEBUG2_PIN = 1;
000c1c   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000c1e   0000     nop                      	nop
000c20   0000     nop                      	nop
                                           	
                                           ;	.line	441; meter_logger.c	DEBUG2_PIN = 0;
000c22   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	442; meter_logger.c	fsk_tx_enable();
000c24   ec26     call    0x504c, 0        	CALL	_fsk_tx_enable
000c26   f028
                                           _00157_DS_:
                                           ;	.line	443; meter_logger.c	while (fifo_get(&sub_cmd)) {
000c28   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000c2a   6e01     movwf   0x1, 0           	MOVWF	r0x01
000c2c   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
000c2e   6e00     movwf   0, 0             	MOVWF	r0x00
000c30   0e80     movlw   0x80             	MOVLW	0x80
000c32   6e02     movwf   0x2, 0           	MOVWF	r0x02
000c34   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000c36   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c38   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000c3a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c3c   5000     movf    0, 0, 0          	MOVF	r0x00, W
000c3e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c40   ec5c     call    0x40b8, 0        	CALL	_fifo_get
000c42   f020
000c44   6e00     movwf   0, 0             	MOVWF	r0x00
000c46   0e03     movlw   0x3              	MOVLW	0x03
000c48   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000c4a   5000     movf    0, 0, 0          	MOVF	r0x00, W
000c4c   e00f     bz      0xc6c            	BZ	_00159_DS_
000c4e   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	444; meter_logger.c	fsk_tx_byte(sub_cmd);
000c50   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000c52   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c54   ecb7     call    0x516e, 0        	CALL	_fsk_tx_byte
000c56   f028
000c58   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	445; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000c5a   0e00     movlw   0                	MOVLW	0x00
000c5c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c5e   0e02     movlw   0x2              	MOVLW	0x02
000c60   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c62   ec71     call    0x4ae2, 0        	CALL	_sleep_ms
000c64   f025
000c66   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c68   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c6a   d7de     bra     0xc28            	BRA	_00157_DS_
                                           _00159_DS_:
                                           ;	.line	447; meter_logger.c	fsk_tx_disable();
000c6c   ec7e     call    0x52fc, 0        	CALL	_fsk_tx_disable
000c6e   f029
000c70   d047     bra     0xd00            	BRA	_00162_DS_
                                           _00161_DS_:
                                           ;	.line	451; meter_logger.c	DEBUG2_PIN = 1;
000c72   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000c74   0000     nop                      	nop
000c76   0000     nop                      	nop
                                           	
                                           ;	.line	456; meter_logger.c	DEBUG2_PIN = 0;
000c78   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
000c7a   0000     nop                      	nop
000c7c   0000     nop                      	nop
                                           	
                                           ;	.line	461; meter_logger.c	DEBUG2_PIN = 1;
000c7e   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000c80   0000     nop                      	nop
000c82   0000     nop                      	nop
                                           	
                                           ;	.line	466; meter_logger.c	DEBUG2_PIN = 0;
000c84   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	468; meter_logger.c	sprintf(debug_buffer, "\n\rno reply from meter\n\r");
000c86   0e00     movlw   0                	MOVLW	UPPER(___str_12)
000c88   6e02     movwf   0x2, 0           	MOVWF	r0x02
000c8a   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_12)
000c8c   6e01     movwf   0x1, 0           	MOVWF	r0x01
000c8e   0e76     movlw   0x76             	MOVLW	LOW(___str_12)
000c90   6e00     movwf   0, 0             	MOVWF	r0x00
000c92   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000c94   6e04     movwf   0x4, 0           	MOVWF	r0x04
000c96   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000c98   6e03     movwf   0x3, 0           	MOVWF	r0x03
000c9a   0e80     movlw   0x80             	MOVLW	0x80
000c9c   6e05     movwf   0x5, 0           	MOVWF	r0x05
000c9e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000ca0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ca2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000ca4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ca6   5000     movf    0, 0, 0          	MOVF	r0x00, W
000ca8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000caa   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000cac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cae   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000cb0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cb2   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000cb4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cb6   ecd3     call    0x45a6, 0        	CALL	_sprintf
000cb8   f022
000cba   0e06     movlw   0x6              	MOVLW	0x06
000cbc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	469; meter_logger.c	usart_puts(debug_buffer);
000cbe   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000cc0   6e01     movwf   0x1, 0           	MOVWF	r0x01
000cc2   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000cc4   6e00     movwf   0, 0             	MOVWF	r0x00
000cc6   0e80     movlw   0x80             	MOVLW	0x80
000cc8   6e02     movwf   0x2, 0           	MOVWF	r0x02
000cca   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000ccc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cce   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000cd0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cd2   5000     movf    0, 0, 0          	MOVF	r0x00, W
000cd4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cd6   ec48     call    0x4c90, 0        	CALL	_usart_puts
000cd8   f026
000cda   0e03     movlw   0x3              	MOVLW	0x03
000cdc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	471; meter_logger.c	fsk_tx_enable();
000cde   ec26     call    0x504c, 0        	CALL	_fsk_tx_enable
000ce0   f028
                                           ;	.line	472; meter_logger.c	fsk_tx_byte(0x0d);
000ce2   0e0d     movlw   0xd              	MOVLW	0x0d
000ce4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ce6   ecb7     call    0x516e, 0        	CALL	_fsk_tx_byte
000ce8   f028
000cea   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	473; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000cec   0e00     movlw   0                	MOVLW	0x00
000cee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cf0   0e02     movlw   0x2              	MOVLW	0x02
000cf2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cf4   ec71     call    0x4ae2, 0        	CALL	_sleep_ms
000cf6   f025
000cf8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000cfa   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	474; meter_logger.c	fsk_tx_disable();
000cfc   ec7e     call    0x52fc, 0        	CALL	_fsk_tx_disable
000cfe   f029
                                           _00162_DS_:
                                           ;	.line	477; meter_logger.c	usart_puts("\n\rwaiting for new command\n\r");
000d00   0e00     movlw   0                	MOVLW	UPPER(___str_7)
000d02   6e02     movwf   0x2, 0           	MOVWF	r0x02
000d04   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_7)
000d06   6e01     movwf   0x1, 0           	MOVWF	r0x01
000d08   0ece     movlw   0xce             	MOVLW	LOW(___str_7)
000d0a   6e00     movwf   0, 0             	MOVWF	r0x00
000d0c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000d0e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d10   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000d12   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d14   5000     movf    0, 0, 0          	MOVF	r0x00, W
000d16   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d18   ec48     call    0x4c90, 0        	CALL	_usart_puts
000d1a   f026
000d1c   0e03     movlw   0x3              	MOVLW	0x03
000d1e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	479; meter_logger.c	fsk_rx_enable();
000d20   ecbd     call    0x4d7a, 0        	CALL	_fsk_rx_enable
000d22   f026
                                           ;	.line	480; meter_logger.c	break;
000d24   efb9     goto    0x172            	GOTO	_00168_DS_
000d26   f000
                                           _00163_DS_:
                                           ;	.line	482; meter_logger.c	fsk_rx_disable();
000d28   ecc0     call    0x5380, 0        	CALL	_fsk_rx_disable
000d2a   f029
                                           ;	.line	483; meter_logger.c	get_battery_level();
000d2c   ec91     call    0x3722, 0        	CALL	_get_battery_level
000d2e   f01b
                                           ;	.line	484; meter_logger.c	fsk_rx_enable();
000d30   ecbd     call    0x4d7a, 0        	CALL	_fsk_rx_enable
000d32   f026
                                           ;	.line	486; meter_logger.c	}
000d34   efb9     goto    0x172            	GOTO	_00168_DS_
000d36   f000
000d38   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger___debug2	code
                                           __debug2:
                                           ;	.line	4660; meter_logger.c	void _debug2() {
0047cc   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0047ce   ffe5
0047d0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0047d2   ffd9
                                           ;	.line	4661; meter_logger.c	DEBUG2_PIN = 0x1;
0047d4   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
0047d6   0000     nop                      	nop
0047d8   0000     nop                      	nop
0047da   0000     nop                      	nop
0047dc   0000     nop                      	nop
0047de   0000     nop                      	nop
0047e0   0000     nop                      	nop
0047e2   0000     nop                      	nop
0047e4   0000     nop                      	nop
0047e6   0000     nop                      	nop
0047e8   0000     nop                      	nop
0047ea   0000     nop                      	nop
0047ec   0000     nop                      	nop
0047ee   0000     nop                      	nop
0047f0   0000     nop                      	nop
0047f2   0000     nop                      	nop
0047f4   0000     nop                      	nop
0047f6   0000     nop                      	nop
0047f8   0000     nop                      	nop
0047fa   0000     nop                      	nop
0047fc   0000     nop                      	nop
0047fe   0000     nop                      	nop
004800   0000     nop                      	nop
004802   0000     nop                      	nop
004804   0000     nop                      	nop
004806   0000     nop                      	nop
004808   0000     nop                      	nop
00480a   0000     nop                      	nop
00480c   0000     nop                      	nop
00480e   0000     nop                      	nop
004810   0000     nop                      	nop
004812   0000     nop                      	nop
004814   0000     nop                      	nop
004816   0000     nop                      	nop
004818   0000     nop                      	nop
00481a   0000     nop                      	nop
00481c   0000     nop                      	nop
00481e   0000     nop                      	nop
004820   0000     nop                      	nop
004822   0000     nop                      	nop
004824   0000     nop                      	nop
004826   0000     nop                      	nop
004828   0000     nop                      	nop
00482a   0000     nop                      	nop
00482c   0000     nop                      	nop
00482e   0000     nop                      	nop
                                           	
                                           ;	.line	4709; meter_logger.c	DEBUG2_PIN = 0x0;
004830   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
004832   0000     nop                      	nop
004834   0000     nop                      	nop
004836   0000     nop                      	nop
004838   0000     nop                      	nop
00483a   0000     nop                      	nop
00483c   0000     nop                      	nop
00483e   0000     nop                      	nop
004840   0000     nop                      	nop
004842   0000     nop                      	nop
004844   0000     nop                      	nop
004846   0000     nop                      	nop
004848   0000     nop                      	nop
00484a   0000     nop                      	nop
00484c   0000     nop                      	nop
00484e   0000     nop                      	nop
004850   0000     nop                      	nop
004852   0000     nop                      	nop
004854   0000     nop                      	nop
004856   0000     nop                      	nop
004858   0000     nop                      	nop
00485a   0000     nop                      	nop
00485c   0000     nop                      	nop
00485e   0000     nop                      	nop
004860   0000     nop                      	nop
004862   0000     nop                      	nop
004864   0000     nop                      	nop
004866   0000     nop                      	nop
004868   0000     nop                      	nop
00486a   0000     nop                      	nop
00486c   0000     nop                      	nop
00486e   0000     nop                      	nop
004870   0000     nop                      	nop
004872   0000     nop                      	nop
004874   0000     nop                      	nop
004876   0000     nop                      	nop
004878   0000     nop                      	nop
00487a   0000     nop                      	nop
00487c   0000     nop                      	nop
00487e   0000     nop                      	nop
004880   0000     nop                      	nop
004882   0000     nop                      	nop
004884   0000     nop                      	nop
004886   0000     nop                      	nop
004888   0000     nop                      	nop
00488a   0000     nop                      	nop
                                           	
00488c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00488e   ffd9
004890   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger___debug	code
                                           __debug:
                                           ;	.line	4560; meter_logger.c	void _debug() {
004892   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004894   ffe5
004896   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004898   ffd9
                                           ;	.line	4561; meter_logger.c	DEBUG_PIN = 0x1;
00489a   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
00489c   0000     nop                      	nop
00489e   0000     nop                      	nop
0048a0   0000     nop                      	nop
0048a2   0000     nop                      	nop
0048a4   0000     nop                      	nop
0048a6   0000     nop                      	nop
0048a8   0000     nop                      	nop
0048aa   0000     nop                      	nop
0048ac   0000     nop                      	nop
0048ae   0000     nop                      	nop
0048b0   0000     nop                      	nop
0048b2   0000     nop                      	nop
0048b4   0000     nop                      	nop
0048b6   0000     nop                      	nop
0048b8   0000     nop                      	nop
0048ba   0000     nop                      	nop
0048bc   0000     nop                      	nop
0048be   0000     nop                      	nop
0048c0   0000     nop                      	nop
0048c2   0000     nop                      	nop
0048c4   0000     nop                      	nop
0048c6   0000     nop                      	nop
0048c8   0000     nop                      	nop
0048ca   0000     nop                      	nop
0048cc   0000     nop                      	nop
0048ce   0000     nop                      	nop
0048d0   0000     nop                      	nop
0048d2   0000     nop                      	nop
0048d4   0000     nop                      	nop
0048d6   0000     nop                      	nop
0048d8   0000     nop                      	nop
0048da   0000     nop                      	nop
0048dc   0000     nop                      	nop
0048de   0000     nop                      	nop
0048e0   0000     nop                      	nop
0048e2   0000     nop                      	nop
0048e4   0000     nop                      	nop
0048e6   0000     nop                      	nop
0048e8   0000     nop                      	nop
0048ea   0000     nop                      	nop
0048ec   0000     nop                      	nop
0048ee   0000     nop                      	nop
0048f0   0000     nop                      	nop
0048f2   0000     nop                      	nop
0048f4   0000     nop                      	nop
                                           	
                                           ;	.line	4609; meter_logger.c	DEBUG_PIN = 0x0;
0048f6   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
0048f8   0000     nop                      	nop
0048fa   0000     nop                      	nop
0048fc   0000     nop                      	nop
0048fe   0000     nop                      	nop
004900   0000     nop                      	nop
004902   0000     nop                      	nop
004904   0000     nop                      	nop
004906   0000     nop                      	nop
004908   0000     nop                      	nop
00490a   0000     nop                      	nop
00490c   0000     nop                      	nop
00490e   0000     nop                      	nop
004910   0000     nop                      	nop
004912   0000     nop                      	nop
004914   0000     nop                      	nop
004916   0000     nop                      	nop
004918   0000     nop                      	nop
00491a   0000     nop                      	nop
00491c   0000     nop                      	nop
00491e   0000     nop                      	nop
004920   0000     nop                      	nop
004922   0000     nop                      	nop
004924   0000     nop                      	nop
004926   0000     nop                      	nop
004928   0000     nop                      	nop
00492a   0000     nop                      	nop
00492c   0000     nop                      	nop
00492e   0000     nop                      	nop
004930   0000     nop                      	nop
004932   0000     nop                      	nop
004934   0000     nop                      	nop
004936   0000     nop                      	nop
004938   0000     nop                      	nop
00493a   0000     nop                      	nop
00493c   0000     nop                      	nop
00493e   0000     nop                      	nop
004940   0000     nop                      	nop
004942   0000     nop                      	nop
004944   0000     nop                      	nop
004946   0000     nop                      	nop
004948   0000     nop                      	nop
00494a   0000     nop                      	nop
00494c   0000     nop                      	nop
00494e   0000     nop                      	nop
004950   0000     nop                      	nop
                                           	
004952   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004954   ffd9
004956   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__flash_led	code
                                           _flash_led:
                                           ;	.line	4555; meter_logger.c	void flash_led(unsigned char ms) {
005240   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005242   ffe5
005244   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005246   ffd9
005248   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00524a   ffe5
00524c   0e02     movlw   0x2              	MOVLW	0x02
00524e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
005250   f000
                                           ;	.line	4556; meter_logger.c	led_flash.timer = ms;
005252   5000     movf    0, 0, 0          	MOVF	r0x00, W
005254   0105     movlb   0x5              	BANKSEL	(_led_flash + 1)
005256   6f4d     movwf   0x4d, 0x1        	MOVWF	(_led_flash + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	4557; meter_logger.c	led_flash.state = LED_FLASH_RUN;
005258   6b4c     clrf    0x4c, 0x1        	CLRF	_led_flash, B
00525a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00525c   f000
00525e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005260   ffd9
005262   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__get_battery_level	code
                                           _get_battery_level:
                                           ;	.line	4524; meter_logger.c	unsigned int get_battery_level() {
003722   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003724   ffe5
003726   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003728   ffd9
00372a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00372c   ffe5
00372e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003730   ffe5
003732   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003734   ffe5
003736   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003738   ffe5
00373a   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00373c   ffe5
00373e   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003740   ffe5
003742   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003744   ffe5
003746   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
003748   ffe5
                                           ;	.line	4528; meter_logger.c	adc_open(ADC_CHN_4 , ADC_FOSC_64, ADC_CFG_5A, ADC_FRM_RJUST | ADC_INT_OFF | ADC_VCFG_VDD_VSS);
00374a   0e80     movlw   0x80             	MOVLW	0x80
00374c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00374e   0e0a     movlw   0xa              	MOVLW	0x0a
003750   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003752   0e06     movlw   0x6              	MOVLW	0x06
003754   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003756   0e04     movlw   0x4              	MOVLW	0x04
003758   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00375a   ec0a     call    0x4c14, 0        	CALL	_adc_open
00375c   f026
00375e   0e04     movlw   0x4              	MOVLW	0x04
003760   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4530; meter_logger.c	adc_setchannel(ADC_CHN_4);
003762   0e04     movlw   0x4              	MOVLW	0x04
003764   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003766   ecd2     call    0x4fa4, 0        	CALL	_adc_setchannel
003768   f027
00376a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	4531; meter_logger.c	adc_conv();
00376c   ec0a     call    0x14, 0          	CALL	_adc_conv
00376e   f000
                                           _01172_DS_:
                                           ;	.line	4532; meter_logger.c	while(adc_busy()) {
003770   ecf6     call    0x53ec, 0        	CALL	_adc_busy
003772   f029
003774   6e00     movwf   0, 0             	MOVWF	r0x00
003776   5000     movf    0, 0, 0          	MOVF	r0x00, W
003778   e1fb     bnz     0x3770           	BNZ	_01172_DS_
                                           ;	.line	4536; meter_logger.c	dev_id = get_dev_id();
00377a   ec84     call    0x4d08, 0        	CALL	_get_dev_id
00377c   f026
00377e   6e00     movwf   0, 0             	MOVWF	r0x00
003780   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003782   f001
                                           ;	.line	4537; meter_logger.c	if (dev_id == 0x1240) {
003784   5000     movf    0, 0, 0          	MOVF	r0x00, W
003786   0a40     xorlw   0x40             	XORLW	0x40
003788   e103     bnz     0x3790           	BNZ	_01195_DS_
00378a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00378c   0a12     xorlw   0x12             	XORLW	0x12
00378e   e001     bz      0x3792           	BZ	_01196_DS_
                                           _01195_DS_:
003790   d041     bra     0x3814           	BRA	_01179_DS_
                                           _01196_DS_:
                                           ;	.line	4539; meter_logger.c	v_level = (unsigned long)1000 * (unsigned long)adc_read() * (unsigned long)833/(unsigned long)93600;
003792   ecee     call    0x53dc, 0        	CALL	_adc_read
003794   f029
003796   6e02     movwf   0x2, 0           	MOVWF	r0x02
003798   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00379a   f003
00379c   6ae8     clrf    0xe8, 0          	CLRF	WREG
00379e   be03     btfsc   0x3, 0x7, 0      	BTFSC	r0x03, 7
0037a0   0eff     movlw   0xff             	MOVLW	0xff
0037a2   6e04     movwf   0x4, 0           	MOVWF	r0x04
0037a4   6e05     movwf   0x5, 0           	MOVWF	r0x05
0037a6   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0037a8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037aa   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0037ac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037ae   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0037b0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037b2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0037b4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037b6   0e00     movlw   0                	MOVLW	0x00
0037b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037ba   0e0c     movlw   0xc              	MOVLW	0x0c
0037bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037be   0eb5     movlw   0xb5             	MOVLW	0xb5
0037c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037c2   0ee8     movlw   0xe8             	MOVLW	0xe8
0037c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037c6   eca6     call    0x394c, 0        	CALL	__mullong
0037c8   f01c
0037ca   6e02     movwf   0x2, 0           	MOVWF	r0x02
0037cc   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0037ce   f003
0037d0   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
0037d2   f004
0037d4   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
0037d6   f005
0037d8   0e08     movlw   0x8              	MOVLW	0x08
0037da   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0037dc   0e00     movlw   0                	MOVLW	0x00
0037de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037e0   0e01     movlw   0x1              	MOVLW	0x01
0037e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037e4   0e6d     movlw   0x6d             	MOVLW	0x6d
0037e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037e8   0ea0     movlw   0xa0             	MOVLW	0xa0
0037ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037ec   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0037ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037f0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0037f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037f4   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0037f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037f8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0037fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037fc   ec47     call    0x448e, 0        	CALL	__divulong
0037fe   f022
003800   6e02     movwf   0x2, 0           	MOVWF	r0x02
003802   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
003804   f003
003806   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
003808   f004
00380a   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
00380c   f005
00380e   0e08     movlw   0x8              	MOVLW	0x08
003810   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003812   d054     bra     0x38bc           	BRA	_01180_DS_
                                           _01179_DS_:
                                           ;	.line	4541; meter_logger.c	else if (dev_id == 0x2a40) {
003814   5000     movf    0, 0, 0          	MOVF	r0x00, W
003816   0a40     xorlw   0x40             	XORLW	0x40
003818   e103     bnz     0x3820           	BNZ	_01197_DS_
00381a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00381c   0a2a     xorlw   0x2a             	XORLW	0x2a
00381e   e001     bz      0x3822           	BZ	_01198_DS_
                                           _01197_DS_:
003820   d04b     bra     0x38b8           	BRA	_01176_DS_
                                           _01198_DS_:
                                           ;	.line	4543; meter_logger.c	v_level = (unsigned long)1000 * (unsigned long)(adc_read() >> 2) * (unsigned long)833/(unsigned long)93600;
003822   ecee     call    0x53dc, 0        	CALL	_adc_read
003824   f029
003826   6e00     movwf   0, 0             	MOVWF	r0x00
003828   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00382a   f001
00382c   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
00382e   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
003830   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
003832   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
003834   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
003836   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
003838   6ae8     clrf    0xe8, 0          	CLRF	WREG
00383a   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
00383c   0eff     movlw   0xff             	MOVLW	0xff
00383e   6e04     movwf   0x4, 0           	MOVWF	r0x04
003840   6e05     movwf   0x5, 0           	MOVWF	r0x05
003842   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003844   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003846   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003848   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00384a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00384c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00384e   5000     movf    0, 0, 0          	MOVF	r0x00, W
003850   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003852   0e00     movlw   0                	MOVLW	0x00
003854   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003856   0e0c     movlw   0xc              	MOVLW	0x0c
003858   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00385a   0eb5     movlw   0xb5             	MOVLW	0xb5
00385c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00385e   0ee8     movlw   0xe8             	MOVLW	0xe8
003860   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003862   eca6     call    0x394c, 0        	CALL	__mullong
003864   f01c
003866   6e00     movwf   0, 0             	MOVWF	r0x00
003868   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00386a   f001
00386c   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
00386e   f004
003870   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
003872   f005
003874   0e08     movlw   0x8              	MOVLW	0x08
003876   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003878   0e00     movlw   0                	MOVLW	0x00
00387a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00387c   0e01     movlw   0x1              	MOVLW	0x01
00387e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003880   0e6d     movlw   0x6d             	MOVLW	0x6d
003882   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003884   0ea0     movlw   0xa0             	MOVLW	0xa0
003886   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003888   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00388a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00388c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00388e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003890   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003892   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003894   5000     movf    0, 0, 0          	MOVF	r0x00, W
003896   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003898   ec47     call    0x448e, 0        	CALL	__divulong
00389a   f022
00389c   6e00     movwf   0, 0             	MOVWF	r0x00
00389e   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0038a0   f001
0038a2   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
0038a4   f004
0038a6   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
0038a8   f005
0038aa   0e08     movlw   0x8              	MOVLW	0x08
0038ac   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0038ae   5000     movf    0, 0, 0          	MOVF	r0x00, W
0038b0   6e02     movwf   0x2, 0           	MOVWF	r0x02
0038b2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0038b4   6e03     movwf   0x3, 0           	MOVWF	r0x03
0038b6   d002     bra     0x38bc           	BRA	_01180_DS_
                                           _01176_DS_:
                                           ;	.line	4546; meter_logger.c	v_level = 0;
0038b8   6a02     clrf    0x2, 0           	CLRF	r0x02
0038ba   6a03     clrf    0x3, 0           	CLRF	r0x03
                                           _01180_DS_:
                                           ;	.line	4548; meter_logger.c	sprintf(debug_buffer, "Battery: %dmV\n\r", v_level);
0038bc   0e00     movlw   0                	MOVLW	UPPER(___str_16)
0038be   6e04     movwf   0x4, 0           	MOVWF	r0x04
0038c0   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_16)
0038c2   6e01     movwf   0x1, 0           	MOVWF	r0x01
0038c4   0e06     movlw   0x6              	MOVLW	LOW(___str_16)
0038c6   6e00     movwf   0, 0             	MOVWF	r0x00
0038c8   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0038ca   6e06     movwf   0x6, 0           	MOVWF	r0x06
0038cc   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0038ce   6e05     movwf   0x5, 0           	MOVWF	r0x05
0038d0   0e80     movlw   0x80             	MOVLW	0x80
0038d2   6e07     movwf   0x7, 0           	MOVWF	r0x07
0038d4   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0038d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038d8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0038da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038dc   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0038de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038e0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0038e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038e4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0038e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038e8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0038ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038ec   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0038ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038f0   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0038f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038f4   ecd3     call    0x45a6, 0        	CALL	_sprintf
0038f6   f022
0038f8   0e08     movlw   0x8              	MOVLW	0x08
0038fa   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4549; meter_logger.c	usart_puts(debug_buffer);	
0038fc   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0038fe   6e01     movwf   0x1, 0           	MOVWF	r0x01
003900   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
003902   6e00     movwf   0, 0             	MOVWF	r0x00
003904   0e80     movlw   0x80             	MOVLW	0x80
003906   6e04     movwf   0x4, 0           	MOVWF	r0x04
003908   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00390a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00390c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00390e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003910   5000     movf    0, 0, 0          	MOVF	r0x00, W
003912   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003914   ec48     call    0x4c90, 0        	CALL	_usart_puts
003916   f026
003918   0e03     movlw   0x3              	MOVLW	0x03
00391a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4551; meter_logger.c	adc_close();
00391c   ec01     call    0x5402, 0        	CALL	_adc_close
00391e   f02a
                                           ;	.line	4552; meter_logger.c	return v_level;
003920   c003     movff   0x3, 0xff3       	MOVFF	r0x03, PRODL
003922   fff3
003924   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003926   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003928   f007
00392a   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
00392c   f006
00392e   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003930   f005
003932   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003934   f004
003936   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003938   f003
00393a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00393c   f002
00393e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003940   f001
003942   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003944   f000
003946   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003948   ffd9
00394a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_snoop	code
                                           _fifo_snoop:
                                           ;	.line	4501; meter_logger.c	unsigned char fifo_snoop(unsigned char *c, unsigned int pos) {
003f18   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003f1a   ffe5
003f1c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003f1e   ffd9
003f20   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003f22   ffe5
003f24   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003f26   ffe5
003f28   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003f2a   ffe5
003f2c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003f2e   ffe5
003f30   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003f32   ffe5
003f34   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003f36   ffe5
003f38   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003f3a   ffe5
003f3c   0e02     movlw   0x2              	MOVLW	0x02
003f3e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003f40   f000
003f42   0e03     movlw   0x3              	MOVLW	0x03
003f44   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003f46   f001
003f48   0e04     movlw   0x4              	MOVLW	0x04
003f4a   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
003f4c   f002
003f4e   0e05     movlw   0x5              	MOVLW	0x05
003f50   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
003f52   f003
003f54   0e06     movlw   0x6              	MOVLW	0x06
003f56   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
003f58   f004
                                           ;	.line	4502; meter_logger.c	if (fifo_in_use() > (pos)) {
003f5a   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
003f5c   f027
003f5e   6e05     movwf   0x5, 0           	MOVWF	r0x05
003f60   cff3     movff   0xff3, 0x6       	MOVFF	PRODL, r0x06
003f62   f006
003f64   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003f66   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
003f68   e102     bnz     0x3f6e           	BNZ	_01165_DS_
003f6a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003f6c   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _01165_DS_:
003f6e   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003f70   d091     bra     0x4094           	BRA	_01155_DS_
003f72   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
                                           ;	.line	4503; meter_logger.c	switch (fifo_tail/QUEUE_SIZE) {
003f74   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
003f76   6e05     movwf   0x5, 0           	MOVWF	r0x05
003f78   6a06     clrf    0x6, 0           	CLRF	r0x06
003f7a   0e00     movlw   0                	MOVLW	0x00
003f7c   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003f7e   e102     bnz     0x3f84           	BNZ	_01166_DS_
003f80   0e04     movlw   0x4              	MOVLW	0x04
003f82   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
                                           _01166_DS_:
003f84   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003f86   d084     bra     0x4090           	BRA	_01153_DS_
003f88   6afa     clrf    0xfa, 0          	CLRF	PCLATH
003f8a   6afb     clrf    0xfb, 0          	CLRF	PCLATU
003f8c   3405     rlcf    0x5, 0, 0        	RLCF	r0x05, W
003f8e   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
003f90   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
003f92   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
003f94   0bfc     andlw   0xfc             	ANDLW	0xfc
003f96   0fa6     addlw   0xa6             	ADDLW	LOW(_01167_DS_)
003f98   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003f9a   0e3f     movlw   0x3f             	MOVLW	HIGH(_01167_DS_)
003f9c   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
003f9e   0e00     movlw   0                	MOVLW	UPPER(_01167_DS_)
003fa0   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
003fa2   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
003fa4   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01167_DS_:
003fa6   efdb     goto    0x3fb6           	GOTO	_01149_DS_
003fa8   f01f
003faa   eff7     goto    0x3fee           	GOTO	_01150_DS_
003fac   f01f
003fae   ef13     goto    0x4026           	GOTO	_01151_DS_
003fb0   f020
003fb2   ef2f     goto    0x405e           	GOTO	_01152_DS_
003fb4   f020
                                           _01149_DS_:
                                           ;	.line	4505; meter_logger.c	*c = fifo_buffer_0[(fifo_tail + pos) % QUEUE_SIZE];
003fb6   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003fb8   0105     movlb   0x5              	BANKSEL	_fifo_tail
003fba   2544     addwf   0x44, 0, 0x1     	ADDWF	_fifo_tail, W, B
003fbc   6e05     movwf   0x5, 0           	MOVWF	r0x05
003fbe   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
003fc0   2145     addwfc  0x45, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
003fc2   6e06     movwf   0x6, 0           	MOVWF	r0x06
003fc4   6a06     clrf    0x6, 0           	CLRF	r0x06
003fc6   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
003fc8   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
003fca   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
003fcc   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
003fce   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
003fd0   ffe9
003fd2   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
003fd4   ffea
003fd6   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
003fd8   f005
003fda   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003fdc   ffe5
003fde   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003fe0   ffe9
003fe2   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003fe4   fff3
003fe6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003fe8   ecb5     call    0x536a, 0        	CALL	__gptrput1
003fea   f029
                                           ;	.line	4506; meter_logger.c	break;
003fec   d051     bra     0x4090           	BRA	_01153_DS_
                                           _01150_DS_:
                                           ;	.line	4508; meter_logger.c	*c = fifo_buffer_1[(fifo_tail + pos) % QUEUE_SIZE];
003fee   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003ff0   0105     movlb   0x5              	BANKSEL	_fifo_tail
003ff2   2544     addwf   0x44, 0, 0x1     	ADDWF	_fifo_tail, W, B
003ff4   6e05     movwf   0x5, 0           	MOVWF	r0x05
003ff6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
003ff8   2145     addwfc  0x45, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
003ffa   6e06     movwf   0x6, 0           	MOVWF	r0x06
003ffc   6a06     clrf    0x6, 0           	CLRF	r0x06
003ffe   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
004000   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
004002   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
004004   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
004006   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
004008   ffe9
00400a   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
00400c   ffea
00400e   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
004010   f005
004012   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004014   ffe5
004016   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004018   ffe9
00401a   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00401c   fff3
00401e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004020   ecb5     call    0x536a, 0        	CALL	__gptrput1
004022   f029
                                           ;	.line	4509; meter_logger.c	break;
004024   d035     bra     0x4090           	BRA	_01153_DS_
                                           _01151_DS_:
                                           ;	.line	4511; meter_logger.c	*c = fifo_buffer_2[(fifo_tail + pos) % QUEUE_SIZE];
004026   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004028   0105     movlb   0x5              	BANKSEL	_fifo_tail
00402a   2544     addwf   0x44, 0, 0x1     	ADDWF	_fifo_tail, W, B
00402c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00402e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
004030   2145     addwfc  0x45, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
004032   6e06     movwf   0x6, 0           	MOVWF	r0x06
004034   6a06     clrf    0x6, 0           	CLRF	r0x06
004036   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
004038   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
00403a   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
00403c   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
00403e   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
004040   ffe9
004042   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
004044   ffea
004046   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
004048   f005
00404a   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00404c   ffe5
00404e   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004050   ffe9
004052   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
004054   fff3
004056   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004058   ecb5     call    0x536a, 0        	CALL	__gptrput1
00405a   f029
                                           ;	.line	4512; meter_logger.c	break;
00405c   d019     bra     0x4090           	BRA	_01153_DS_
                                           _01152_DS_:
00405e   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4514; meter_logger.c	*c = fifo_buffer_3[(fifo_tail + pos) % QUEUE_SIZE];
004060   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
004062   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
                                           ; removed redundant BANKSEL
004064   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
004066   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
004068   6a04     clrf    0x4, 0           	CLRF	r0x04
00406a   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
00406c   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
00406e   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
004070   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
004072   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
004074   ffe9
004076   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
004078   ffea
00407a   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
00407c   f003
00407e   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004080   ffe5
004082   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004084   ffe9
004086   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
004088   fff3
00408a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00408c   ecb5     call    0x536a, 0        	CALL	__gptrput1
00408e   f029
                                           _01153_DS_:
                                           ;	.line	4517; meter_logger.c	return 1;
004090   0e01     movlw   0x1              	MOVLW	0x01
004092   d001     bra     0x4096           	BRA	_01157_DS_
                                           _01155_DS_:
                                           ;	.line	4520; meter_logger.c	return 0;
004094   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _01157_DS_:
004096   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
004098   f006
00409a   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
00409c   f005
00409e   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0040a0   f004
0040a2   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0040a4   f003
0040a6   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0040a8   f002
0040aa   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0040ac   f001
0040ae   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0040b0   f000
0040b2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0040b4   ffd9
0040b6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_get	code
                                           _fifo_get:
                                           ;	.line	4473; meter_logger.c	unsigned char fifo_get(unsigned char *c) {
0040b8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0040ba   ffe5
0040bc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0040be   ffd9
0040c0   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0040c2   ffe5
0040c4   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0040c6   ffe5
0040c8   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0040ca   ffe5
0040cc   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0040ce   ffe5
0040d0   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0040d2   ffe5
0040d4   0e02     movlw   0x2              	MOVLW	0x02
0040d6   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0040d8   f000
0040da   0e03     movlw   0x3              	MOVLW	0x03
0040dc   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0040de   f001
0040e0   0e04     movlw   0x4              	MOVLW	0x04
0040e2   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
0040e4   f002
                                           ;	.line	4474; meter_logger.c	if (fifo_in_use() != 0) {
0040e6   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
0040e8   f027
0040ea   6e03     movwf   0x3, 0           	MOVWF	r0x03
0040ec   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
0040ee   f004
0040f0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0040f2   1004     iorwf   0x4, 0, 0        	IORWF	r0x04, W
0040f4   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
0040f6   d091     bra     0x421a           	BRA	_01124_DS_
0040f8   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
                                           ;	.line	4475; meter_logger.c	switch (fifo_tail/QUEUE_SIZE) {
0040fa   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
0040fc   6e03     movwf   0x3, 0           	MOVWF	r0x03
0040fe   6a04     clrf    0x4, 0           	CLRF	r0x04
004100   0e00     movlw   0                	MOVLW	0x00
004102   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
004104   e102     bnz     0x410a           	BNZ	_01137_DS_
004106   0e04     movlw   0x4              	MOVLW	0x04
004108   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _01137_DS_:
00410a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00410c   d076     bra     0x41fa           	BRA	_01120_DS_
00410e   6afa     clrf    0xfa, 0          	CLRF	PCLATH
004110   6afb     clrf    0xfb, 0          	CLRF	PCLATU
004112   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
004114   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
004116   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
004118   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00411a   0bfc     andlw   0xfc             	ANDLW	0xfc
00411c   0f2c     addlw   0x2c             	ADDLW	LOW(_01138_DS_)
00411e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004120   0e41     movlw   0x41             	MOVLW	HIGH(_01138_DS_)
004122   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
004124   0e00     movlw   0                	MOVLW	UPPER(_01138_DS_)
004126   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
004128   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
00412a   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01138_DS_:
00412c   ef9e     goto    0x413c           	GOTO	_01116_DS_
00412e   f020
004130   efb6     goto    0x416c           	GOTO	_01117_DS_
004132   f020
004134   efce     goto    0x419c           	GOTO	_01118_DS_
004136   f020
004138   efe6     goto    0x41cc           	GOTO	_01119_DS_
00413a   f020
                                           _01116_DS_:
00413c   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4477; meter_logger.c	*c = fifo_buffer_0[fifo_tail % QUEUE_SIZE];
00413e   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
004140   6e03     movwf   0x3, 0           	MOVWF	r0x03
004142   6a04     clrf    0x4, 0           	CLRF	r0x04
004144   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
004146   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
004148   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
00414a   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
00414c   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
00414e   ffe9
004150   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
004152   ffea
004154   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
004156   f003
004158   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00415a   ffe5
00415c   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00415e   ffe9
004160   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
004162   fff3
004164   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004166   ecb5     call    0x536a, 0        	CALL	__gptrput1
004168   f029
                                           ;	.line	4478; meter_logger.c	break;
00416a   d047     bra     0x41fa           	BRA	_01120_DS_
                                           _01117_DS_:
00416c   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4480; meter_logger.c	*c = fifo_buffer_1[fifo_tail % QUEUE_SIZE];
00416e   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
004170   6e03     movwf   0x3, 0           	MOVWF	r0x03
004172   6a04     clrf    0x4, 0           	CLRF	r0x04
004174   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
004176   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
004178   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
00417a   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
00417c   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
00417e   ffe9
004180   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
004182   ffea
004184   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
004186   f003
004188   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00418a   ffe5
00418c   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00418e   ffe9
004190   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
004192   fff3
004194   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004196   ecb5     call    0x536a, 0        	CALL	__gptrput1
004198   f029
                                           ;	.line	4481; meter_logger.c	break;
00419a   d02f     bra     0x41fa           	BRA	_01120_DS_
                                           _01118_DS_:
00419c   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4483; meter_logger.c	*c = fifo_buffer_2[fifo_tail % QUEUE_SIZE];
00419e   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
0041a0   6e03     movwf   0x3, 0           	MOVWF	r0x03
0041a2   6a04     clrf    0x4, 0           	CLRF	r0x04
0041a4   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
0041a6   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
0041a8   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
0041aa   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0041ac   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0041ae   ffe9
0041b0   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0041b2   ffea
0041b4   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
0041b6   f003
0041b8   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0041ba   ffe5
0041bc   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0041be   ffe9
0041c0   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0041c2   fff3
0041c4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0041c6   ecb5     call    0x536a, 0        	CALL	__gptrput1
0041c8   f029
                                           ;	.line	4484; meter_logger.c	break;
0041ca   d017     bra     0x41fa           	BRA	_01120_DS_
                                           _01119_DS_:
0041cc   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4486; meter_logger.c	*c = fifo_buffer_3[fifo_tail % QUEUE_SIZE];
0041ce   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
0041d0   6e03     movwf   0x3, 0           	MOVWF	r0x03
0041d2   6a04     clrf    0x4, 0           	CLRF	r0x04
0041d4   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
0041d6   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
0041d8   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
0041da   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0041dc   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0041de   ffe9
0041e0   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0041e2   ffea
0041e4   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
0041e6   f003
0041e8   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0041ea   ffe5
0041ec   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0041ee   ffe9
0041f0   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0041f2   fff3
0041f4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0041f6   ecb5     call    0x536a, 0        	CALL	__gptrput1
0041f8   f029
                                           _01120_DS_:
0041fa   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4489; meter_logger.c	fifo_tail++;
0041fc   3f44     incfsz  0x44, 0x1, 0x1   	INCFSZ	_fifo_tail, F, B
0041fe   d001     bra     0x4202           	BRA	_11213_DS_
                                           ; removed redundant BANKSEL
004200   2b45     incf    0x45, 0x1, 0x1   	INCF	(_fifo_tail + 1), F, B
                                           _11213_DS_:
004202   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4491; meter_logger.c	if (fifo_tail == QUEUE_SIZE_COMBINED) {
004204   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
004206   e103     bnz     0x420e           	BNZ	_01143_DS_
                                           ; removed redundant BANKSEL
004208   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
00420a   0a04     xorlw   0x4              	XORLW	0x04
00420c   e001     bz      0x4210           	BZ	_01144_DS_
                                           _01143_DS_:
00420e   d003     bra     0x4216           	BRA	_01122_DS_
                                           _01144_DS_:
004210   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4492; meter_logger.c	fifo_tail = 0;
004212   6b44     clrf    0x44, 0x1        	CLRF	_fifo_tail, B
                                           ; removed redundant BANKSEL
004214   6b45     clrf    0x45, 0x1        	CLRF	(_fifo_tail + 1), B
                                           _01122_DS_:
                                           ;	.line	4494; meter_logger.c	return 1;
004216   0e01     movlw   0x1              	MOVLW	0x01
004218   d001     bra     0x421c           	BRA	_01126_DS_
                                           _01124_DS_:
                                           ;	.line	4497; meter_logger.c	return 0;
00421a   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _01126_DS_:
00421c   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00421e   f004
004220   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004222   f003
004224   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004226   f002
004228   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00422a   f001
00422c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00422e   f000
004230   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004232   ffd9
004234   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_put	code
                                           _fifo_put:
                                           ;	.line	4445; meter_logger.c	unsigned char fifo_put(unsigned char c) {
004370   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004372   ffe5
004374   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004376   ffd9
004378   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00437a   ffe5
00437c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00437e   ffe5
004380   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004382   ffe5
004384   0e02     movlw   0x2              	MOVLW	0x02
004386   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004388   f000
                                           ;	.line	4446; meter_logger.c	if (fifo_in_use() != QUEUE_SIZE_COMBINED) {
00438a   ecef     call    0x4fde, 0        	CALL	_fifo_in_use
00438c   f027
00438e   6e01     movwf   0x1, 0           	MOVWF	r0x01
004390   cff3     movff   0xff3, 0x2       	MOVFF	PRODL, r0x02
004392   f002
004394   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004396   e104     bnz     0x43a0           	BNZ	_01103_DS_
004398   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00439a   0a04     xorlw   0x4              	XORLW	0x04
00439c   e101     bnz     0x43a0           	BNZ	_01103_DS_
00439e   d06d     bra     0x447a           	BRA	_01089_DS_
                                           _01103_DS_:
0043a0   0105     movlb   0x5              	BANKSEL	(_fifo_head + 1)
                                           ;	.line	4447; meter_logger.c	switch (fifo_head/QUEUE_SIZE) {
0043a2   5143     movf    0x43, 0, 0x1     	MOVF	(_fifo_head + 1), W, B
0043a4   6e01     movwf   0x1, 0           	MOVWF	r0x01
0043a6   6a02     clrf    0x2, 0           	CLRF	r0x02
0043a8   0e00     movlw   0                	MOVLW	0x00
0043aa   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
0043ac   e102     bnz     0x43b2           	BNZ	_01104_DS_
0043ae   0e04     movlw   0x4              	MOVLW	0x04
0043b0   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
                                           _01104_DS_:
0043b2   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0043b4   d052     bra     0x445a           	BRA	_01085_DS_
0043b6   6afa     clrf    0xfa, 0          	CLRF	PCLATH
0043b8   6afb     clrf    0xfb, 0          	CLRF	PCLATU
0043ba   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
0043bc   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0043be   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
0043c0   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0043c2   0bfc     andlw   0xfc             	ANDLW	0xfc
0043c4   0fd4     addlw   0xd4             	ADDLW	LOW(_01105_DS_)
0043c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0043c8   0e43     movlw   0x43             	MOVLW	HIGH(_01105_DS_)
0043ca   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
0043cc   0e00     movlw   0                	MOVLW	UPPER(_01105_DS_)
0043ce   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0043d0   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0043d2   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01105_DS_:
0043d4   eff2     goto    0x43e4           	GOTO	_01081_DS_
0043d6   f021
0043d8   ef01     goto    0x4402           	GOTO	_01082_DS_
0043da   f022
0043dc   ef10     goto    0x4420           	GOTO	_01083_DS_
0043de   f022
0043e0   ef1f     goto    0x443e           	GOTO	_01084_DS_
0043e2   f022
                                           _01081_DS_:
0043e4   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4449; meter_logger.c	fifo_buffer_0[fifo_head % QUEUE_SIZE] = c;
0043e6   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
0043e8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0043ea   6a02     clrf    0x2, 0           	CLRF	r0x02
0043ec   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
0043ee   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
0043f0   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
0043f2   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0043f4   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0043f6   ffe9
0043f8   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0043fa   ffea
0043fc   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
0043fe   ffef
                                           ;	.line	4450; meter_logger.c	break;
004400   d02c     bra     0x445a           	BRA	_01085_DS_
                                           _01082_DS_:
004402   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4452; meter_logger.c	fifo_buffer_1[fifo_head % QUEUE_SIZE] = c;
004404   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
004406   6e01     movwf   0x1, 0           	MOVWF	r0x01
004408   6a02     clrf    0x2, 0           	CLRF	r0x02
00440a   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
00440c   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
00440e   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
004410   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
004412   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
004414   ffe9
004416   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
004418   ffea
00441a   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
00441c   ffef
                                           ;	.line	4453; meter_logger.c	break;
00441e   d01d     bra     0x445a           	BRA	_01085_DS_
                                           _01083_DS_:
004420   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4455; meter_logger.c	fifo_buffer_2[fifo_head % QUEUE_SIZE] = c;
004422   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
004424   6e01     movwf   0x1, 0           	MOVWF	r0x01
004426   6a02     clrf    0x2, 0           	CLRF	r0x02
004428   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
00442a   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
00442c   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
00442e   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
004430   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
004432   ffe9
004434   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
004436   ffea
004438   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
00443a   ffef
                                           ;	.line	4456; meter_logger.c	break;
00443c   d00e     bra     0x445a           	BRA	_01085_DS_
                                           _01084_DS_:
00443e   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4458; meter_logger.c	fifo_buffer_3[fifo_head % QUEUE_SIZE] = c;
004440   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
004442   6e01     movwf   0x1, 0           	MOVWF	r0x01
004444   6a02     clrf    0x2, 0           	CLRF	r0x02
004446   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
004448   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
00444a   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
00444c   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00444e   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
004450   ffe9
004452   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
004454   ffea
004456   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
004458   ffef
                                           _01085_DS_:
00445a   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4461; meter_logger.c	fifo_head++;
00445c   3f42     incfsz  0x42, 0x1, 0x1   	INCFSZ	_fifo_head, F, B
00445e   d001     bra     0x4462           	BRA	_21214_DS_
                                           ; removed redundant BANKSEL
004460   2b43     incf    0x43, 0x1, 0x1   	INCF	(_fifo_head + 1), F, B
                                           _21214_DS_:
004462   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4463; meter_logger.c	if (fifo_head == QUEUE_SIZE_COMBINED) {
004464   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
004466   e103     bnz     0x446e           	BNZ	_01110_DS_
                                           ; removed redundant BANKSEL
004468   5143     movf    0x43, 0, 0x1     	MOVF	(_fifo_head + 1), W, B
00446a   0a04     xorlw   0x4              	XORLW	0x04
00446c   e001     bz      0x4470           	BZ	_01111_DS_
                                           _01110_DS_:
00446e   d003     bra     0x4476           	BRA	_01087_DS_
                                           _01111_DS_:
004470   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4464; meter_logger.c	fifo_head = 0;
004472   6b42     clrf    0x42, 0x1        	CLRF	_fifo_head, B
                                           ; removed redundant BANKSEL
004474   6b43     clrf    0x43, 0x1        	CLRF	(_fifo_head + 1), B
                                           _01087_DS_:
                                           ;	.line	4466; meter_logger.c	return 1;
004476   0e01     movlw   0x1              	MOVLW	0x01
004478   d001     bra     0x447c           	BRA	_01091_DS_
                                           _01089_DS_:
                                           ;	.line	4469; meter_logger.c	return 0;
00447a   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _01091_DS_:
00447c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00447e   f002
004480   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004482   f001
004484   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004486   f000
004488   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00448a   ffd9
00448c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_in_use	code
                                           _fifo_in_use:
                                           ;	.line	4441; meter_logger.c	unsigned int fifo_in_use() {
004fde   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004fe0   ffe5
004fe2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004fe4   ffd9
004fe6   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004fe8   ffe5
004fea   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004fec   ffe5
004fee   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4442; meter_logger.c	return fifo_head - fifo_tail;
004ff0   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
004ff2   0105     movlb   0x5              	BANKSEL	_fifo_head
004ff4   5d42     subwf   0x42, 0, 0x1     	SUBWF	_fifo_head, W, B
004ff6   6e00     movwf   0, 0             	MOVWF	r0x00
004ff8   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
004ffa   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
004ffc   0105     movlb   0x5              	BANKSEL	(_fifo_head + 1)
004ffe   5943     subwfb  0x43, 0, 0x1     	SUBWFB	(_fifo_head + 1), W, B
005000   6e01     movwf   0x1, 0           	MOVWF	r0x01
005002   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
005004   fff3
005006   5000     movf    0, 0, 0          	MOVF	r0x00, W
005008   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00500a   f001
00500c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00500e   f000
005010   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005012   ffd9
005014   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_byte	code
                                           _fsk_tx_byte:
                                           ;	.line	4433; meter_logger.c	void fsk_tx_byte(unsigned char c) {
00516e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005170   ffe5
005172   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005174   ffd9
005176   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
005178   ffe5
00517a   0e02     movlw   0x2              	MOVLW	0x02
00517c   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00517e   f000
                                           ;	.line	4434; meter_logger.c	fsk_proto.data = c;
005180   5000     movf    0, 0, 0          	MOVF	r0x00, W
005182   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
005184   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
                                           ;	.line	4435; meter_logger.c	fsk_proto.data_len = 8;
005186   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
005188   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
                                           _01068_DS_:
00518a   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	4436; meter_logger.c	while (fsk_proto.data_len) {
00518c   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
00518e   e1fd     bnz     0x518a           	BNZ	_01068_DS_
005190   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
005192   f000
005194   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005196   ffd9
005198   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__send_fsk_low	code
                                           _send_fsk_low:
                                           ;	.line	2980; meter_logger.c	void send_fsk_low(void) {
0018fa   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0018fc   ffe5
0018fe   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
001900   ffd9
                                           ;	.line	2981; meter_logger.c	PWM_PIN = 1;
001902   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001904   0000     nop                      	nop
001906   0000     nop                      	nop
001908   0000     nop                      	nop
00190a   0000     nop                      	nop
00190c   0000     nop                      	nop
00190e   0000     nop                      	nop
001910   0000     nop                      	nop
001912   0000     nop                      	nop
001914   0000     nop                      	nop
001916   0000     nop                      	nop
001918   0000     nop                      	nop
00191a   0000     nop                      	nop
00191c   0000     nop                      	nop
00191e   0000     nop                      	nop
001920   0000     nop                      	nop
001922   0000     nop                      	nop
001924   0000     nop                      	nop
001926   0000     nop                      	nop
001928   0000     nop                      	nop
00192a   0000     nop                      	nop
00192c   0000     nop                      	nop
00192e   0000     nop                      	nop
001930   0000     nop                      	nop
001932   0000     nop                      	nop
001934   0000     nop                      	nop
001936   0000     nop                      	nop
001938   0000     nop                      	nop
00193a   0000     nop                      	nop
00193c   0000     nop                      	nop
00193e   0000     nop                      	nop
001940   0000     nop                      	nop
001942   0000     nop                      	nop
001944   0000     nop                      	nop
001946   0000     nop                      	nop
001948   0000     nop                      	nop
00194a   0000     nop                      	nop
00194c   0000     nop                      	nop
00194e   0000     nop                      	nop
001950   0000     nop                      	nop
001952   0000     nop                      	nop
001954   0000     nop                      	nop
001956   0000     nop                      	nop
001958   0000     nop                      	nop
00195a   0000     nop                      	nop
00195c   0000     nop                      	nop
00195e   0000     nop                      	nop
001960   0000     nop                      	nop
001962   0000     nop                      	nop
001964   0000     nop                      	nop
001966   0000     nop                      	nop
001968   0000     nop                      	nop
00196a   0000     nop                      	nop
00196c   0000     nop                      	nop
00196e   0000     nop                      	nop
001970   0000     nop                      	nop
001972   0000     nop                      	nop
001974   0000     nop                      	nop
001976   0000     nop                      	nop
001978   0000     nop                      	nop
00197a   0000     nop                      	nop
00197c   0000     nop                      	nop
00197e   0000     nop                      	nop
001980   0000     nop                      	nop
001982   0000     nop                      	nop
001984   0000     nop                      	nop
001986   0000     nop                      	nop
001988   0000     nop                      	nop
00198a   0000     nop                      	nop
00198c   0000     nop                      	nop
00198e   0000     nop                      	nop
001990   0000     nop                      	nop
001992   0000     nop                      	nop
001994   0000     nop                      	nop
001996   0000     nop                      	nop
001998   0000     nop                      	nop
00199a   0000     nop                      	nop
00199c   0000     nop                      	nop
00199e   0000     nop                      	nop
0019a0   0000     nop                      	nop
0019a2   0000     nop                      	nop
0019a4   0000     nop                      	nop
0019a6   0000     nop                      	nop
0019a8   0000     nop                      	nop
0019aa   0000     nop                      	nop
0019ac   0000     nop                      	nop
0019ae   0000     nop                      	nop
0019b0   0000     nop                      	nop
0019b2   0000     nop                      	nop
0019b4   0000     nop                      	nop
0019b6   0000     nop                      	nop
0019b8   0000     nop                      	nop
0019ba   0000     nop                      	nop
0019bc   0000     nop                      	nop
0019be   0000     nop                      	nop
0019c0   0000     nop                      	nop
0019c2   0000     nop                      	nop
0019c4   0000     nop                      	nop
0019c6   0000     nop                      	nop
0019c8   0000     nop                      	nop
0019ca   0000     nop                      	nop
0019cc   0000     nop                      	nop
0019ce   0000     nop                      	nop
0019d0   0000     nop                      	nop
0019d2   0000     nop                      	nop
0019d4   0000     nop                      	nop
0019d6   0000     nop                      	nop
0019d8   0000     nop                      	nop
0019da   0000     nop                      	nop
0019dc   0000     nop                      	nop
0019de   0000     nop                      	nop
0019e0   0000     nop                      	nop
0019e2   0000     nop                      	nop
0019e4   0000     nop                      	nop
0019e6   0000     nop                      	nop
0019e8   0000     nop                      	nop
0019ea   0000     nop                      	nop
0019ec   0000     nop                      	nop
0019ee   0000     nop                      	nop
0019f0   0000     nop                      	nop
0019f2   0000     nop                      	nop
0019f4   0000     nop                      	nop
0019f6   0000     nop                      	nop
0019f8   0000     nop                      	nop
0019fa   0000     nop                      	nop
0019fc   0000     nop                      	nop
0019fe   0000     nop                      	nop
001a00   0000     nop                      	nop
001a02   0000     nop                      	nop
001a04   0000     nop                      	nop
001a06   0000     nop                      	nop
001a08   0000     nop                      	nop
001a0a   0000     nop                      	nop
001a0c   0000     nop                      	nop
001a0e   0000     nop                      	nop
001a10   0000     nop                      	nop
001a12   0000     nop                      	nop
001a14   0000     nop                      	nop
001a16   0000     nop                      	nop
001a18   0000     nop                      	nop
001a1a   0000     nop                      	nop
001a1c   0000     nop                      	nop
001a1e   0000     nop                      	nop
001a20   0000     nop                      	nop
001a22   0000     nop                      	nop
001a24   0000     nop                      	nop
001a26   0000     nop                      	nop
001a28   0000     nop                      	nop
001a2a   0000     nop                      	nop
001a2c   0000     nop                      	nop
001a2e   0000     nop                      	nop
001a30   0000     nop                      	nop
001a32   0000     nop                      	nop
001a34   0000     nop                      	nop
001a36   0000     nop                      	nop
001a38   0000     nop                      	nop
001a3a   0000     nop                      	nop
001a3c   0000     nop                      	nop
001a3e   0000     nop                      	nop
001a40   0000     nop                      	nop
001a42   0000     nop                      	nop
001a44   0000     nop                      	nop
001a46   0000     nop                      	nop
001a48   0000     nop                      	nop
001a4a   0000     nop                      	nop
001a4c   0000     nop                      	nop
001a4e   0000     nop                      	nop
001a50   0000     nop                      	nop
001a52   0000     nop                      	nop
001a54   0000     nop                      	nop
001a56   0000     nop                      	nop
001a58   0000     nop                      	nop
001a5a   0000     nop                      	nop
001a5c   0000     nop                      	nop
001a5e   0000     nop                      	nop
001a60   0000     nop                      	nop
001a62   0000     nop                      	nop
001a64   0000     nop                      	nop
001a66   0000     nop                      	nop
001a68   0000     nop                      	nop
001a6a   0000     nop                      	nop
001a6c   0000     nop                      	nop
001a6e   0000     nop                      	nop
001a70   0000     nop                      	nop
001a72   0000     nop                      	nop
001a74   0000     nop                      	nop
001a76   0000     nop                      	nop
001a78   0000     nop                      	nop
001a7a   0000     nop                      	nop
001a7c   0000     nop                      	nop
001a7e   0000     nop                      	nop
001a80   0000     nop                      	nop
001a82   0000     nop                      	nop
001a84   0000     nop                      	nop
001a86   0000     nop                      	nop
001a88   0000     nop                      	nop
001a8a   0000     nop                      	nop
001a8c   0000     nop                      	nop
001a8e   0000     nop                      	nop
001a90   0000     nop                      	nop
001a92   0000     nop                      	nop
001a94   0000     nop                      	nop
001a96   0000     nop                      	nop
001a98   0000     nop                      	nop
001a9a   0000     nop                      	nop
                                           	
                                           ;	.line	3188; meter_logger.c	PWM_PIN = 0;
001a9c   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001a9e   0000     nop                      	nop
001aa0   0000     nop                      	nop
001aa2   0000     nop                      	nop
001aa4   0000     nop                      	nop
001aa6   0000     nop                      	nop
001aa8   0000     nop                      	nop
001aaa   0000     nop                      	nop
001aac   0000     nop                      	nop
001aae   0000     nop                      	nop
001ab0   0000     nop                      	nop
001ab2   0000     nop                      	nop
001ab4   0000     nop                      	nop
001ab6   0000     nop                      	nop
001ab8   0000     nop                      	nop
001aba   0000     nop                      	nop
001abc   0000     nop                      	nop
001abe   0000     nop                      	nop
001ac0   0000     nop                      	nop
001ac2   0000     nop                      	nop
001ac4   0000     nop                      	nop
001ac6   0000     nop                      	nop
001ac8   0000     nop                      	nop
001aca   0000     nop                      	nop
001acc   0000     nop                      	nop
001ace   0000     nop                      	nop
001ad0   0000     nop                      	nop
001ad2   0000     nop                      	nop
001ad4   0000     nop                      	nop
001ad6   0000     nop                      	nop
001ad8   0000     nop                      	nop
001ada   0000     nop                      	nop
001adc   0000     nop                      	nop
001ade   0000     nop                      	nop
001ae0   0000     nop                      	nop
001ae2   0000     nop                      	nop
001ae4   0000     nop                      	nop
001ae6   0000     nop                      	nop
001ae8   0000     nop                      	nop
001aea   0000     nop                      	nop
001aec   0000     nop                      	nop
001aee   0000     nop                      	nop
001af0   0000     nop                      	nop
001af2   0000     nop                      	nop
001af4   0000     nop                      	nop
001af6   0000     nop                      	nop
001af8   0000     nop                      	nop
001afa   0000     nop                      	nop
001afc   0000     nop                      	nop
001afe   0000     nop                      	nop
001b00   0000     nop                      	nop
001b02   0000     nop                      	nop
001b04   0000     nop                      	nop
001b06   0000     nop                      	nop
001b08   0000     nop                      	nop
001b0a   0000     nop                      	nop
001b0c   0000     nop                      	nop
001b0e   0000     nop                      	nop
001b10   0000     nop                      	nop
001b12   0000     nop                      	nop
001b14   0000     nop                      	nop
001b16   0000     nop                      	nop
001b18   0000     nop                      	nop
001b1a   0000     nop                      	nop
001b1c   0000     nop                      	nop
001b1e   0000     nop                      	nop
001b20   0000     nop                      	nop
001b22   0000     nop                      	nop
001b24   0000     nop                      	nop
001b26   0000     nop                      	nop
001b28   0000     nop                      	nop
001b2a   0000     nop                      	nop
001b2c   0000     nop                      	nop
001b2e   0000     nop                      	nop
001b30   0000     nop                      	nop
001b32   0000     nop                      	nop
001b34   0000     nop                      	nop
001b36   0000     nop                      	nop
001b38   0000     nop                      	nop
001b3a   0000     nop                      	nop
001b3c   0000     nop                      	nop
001b3e   0000     nop                      	nop
001b40   0000     nop                      	nop
001b42   0000     nop                      	nop
001b44   0000     nop                      	nop
001b46   0000     nop                      	nop
001b48   0000     nop                      	nop
001b4a   0000     nop                      	nop
001b4c   0000     nop                      	nop
001b4e   0000     nop                      	nop
001b50   0000     nop                      	nop
001b52   0000     nop                      	nop
001b54   0000     nop                      	nop
001b56   0000     nop                      	nop
001b58   0000     nop                      	nop
001b5a   0000     nop                      	nop
001b5c   0000     nop                      	nop
001b5e   0000     nop                      	nop
001b60   0000     nop                      	nop
001b62   0000     nop                      	nop
001b64   0000     nop                      	nop
001b66   0000     nop                      	nop
001b68   0000     nop                      	nop
001b6a   0000     nop                      	nop
001b6c   0000     nop                      	nop
001b6e   0000     nop                      	nop
001b70   0000     nop                      	nop
001b72   0000     nop                      	nop
001b74   0000     nop                      	nop
001b76   0000     nop                      	nop
001b78   0000     nop                      	nop
001b7a   0000     nop                      	nop
001b7c   0000     nop                      	nop
001b7e   0000     nop                      	nop
001b80   0000     nop                      	nop
001b82   0000     nop                      	nop
001b84   0000     nop                      	nop
001b86   0000     nop                      	nop
001b88   0000     nop                      	nop
001b8a   0000     nop                      	nop
001b8c   0000     nop                      	nop
001b8e   0000     nop                      	nop
001b90   0000     nop                      	nop
001b92   0000     nop                      	nop
001b94   0000     nop                      	nop
001b96   0000     nop                      	nop
001b98   0000     nop                      	nop
001b9a   0000     nop                      	nop
001b9c   0000     nop                      	nop
001b9e   0000     nop                      	nop
001ba0   0000     nop                      	nop
001ba2   0000     nop                      	nop
001ba4   0000     nop                      	nop
001ba6   0000     nop                      	nop
001ba8   0000     nop                      	nop
001baa   0000     nop                      	nop
001bac   0000     nop                      	nop
001bae   0000     nop                      	nop
001bb0   0000     nop                      	nop
001bb2   0000     nop                      	nop
001bb4   0000     nop                      	nop
001bb6   0000     nop                      	nop
001bb8   0000     nop                      	nop
001bba   0000     nop                      	nop
001bbc   0000     nop                      	nop
001bbe   0000     nop                      	nop
001bc0   0000     nop                      	nop
001bc2   0000     nop                      	nop
001bc4   0000     nop                      	nop
001bc6   0000     nop                      	nop
001bc8   0000     nop                      	nop
001bca   0000     nop                      	nop
001bcc   0000     nop                      	nop
001bce   0000     nop                      	nop
001bd0   0000     nop                      	nop
001bd2   0000     nop                      	nop
001bd4   0000     nop                      	nop
001bd6   0000     nop                      	nop
001bd8   0000     nop                      	nop
001bda   0000     nop                      	nop
001bdc   0000     nop                      	nop
001bde   0000     nop                      	nop
001be0   0000     nop                      	nop
001be2   0000     nop                      	nop
001be4   0000     nop                      	nop
001be6   0000     nop                      	nop
001be8   0000     nop                      	nop
001bea   0000     nop                      	nop
001bec   0000     nop                      	nop
001bee   0000     nop                      	nop
001bf0   0000     nop                      	nop
001bf2   0000     nop                      	nop
001bf4   0000     nop                      	nop
001bf6   0000     nop                      	nop
001bf8   0000     nop                      	nop
001bfa   0000     nop                      	nop
001bfc   0000     nop                      	nop
001bfe   0000     nop                      	nop
001c00   0000     nop                      	nop
001c02   0000     nop                      	nop
001c04   0000     nop                      	nop
001c06   0000     nop                      	nop
001c08   0000     nop                      	nop
001c0a   0000     nop                      	nop
001c0c   0000     nop                      	nop
001c0e   0000     nop                      	nop
001c10   0000     nop                      	nop
001c12   0000     nop                      	nop
001c14   0000     nop                      	nop
001c16   0000     nop                      	nop
001c18   0000     nop                      	nop
001c1a   0000     nop                      	nop
001c1c   0000     nop                      	nop
001c1e   0000     nop                      	nop
001c20   0000     nop                      	nop
001c22   0000     nop                      	nop
001c24   0000     nop                      	nop
001c26   0000     nop                      	nop
001c28   0000     nop                      	nop
001c2a   0000     nop                      	nop
001c2c   0000     nop                      	nop
001c2e   0000     nop                      	nop
001c30   0000     nop                      	nop
001c32   0000     nop                      	nop
001c34   0000     nop                      	nop
                                           	
                                           ;	.line	3395; meter_logger.c	PWM_PIN = 1;
001c36   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001c38   0000     nop                      	nop
001c3a   0000     nop                      	nop
001c3c   0000     nop                      	nop
001c3e   0000     nop                      	nop
001c40   0000     nop                      	nop
001c42   0000     nop                      	nop
001c44   0000     nop                      	nop
001c46   0000     nop                      	nop
001c48   0000     nop                      	nop
001c4a   0000     nop                      	nop
001c4c   0000     nop                      	nop
001c4e   0000     nop                      	nop
001c50   0000     nop                      	nop
001c52   0000     nop                      	nop
001c54   0000     nop                      	nop
001c56   0000     nop                      	nop
001c58   0000     nop                      	nop
001c5a   0000     nop                      	nop
001c5c   0000     nop                      	nop
001c5e   0000     nop                      	nop
001c60   0000     nop                      	nop
001c62   0000     nop                      	nop
001c64   0000     nop                      	nop
001c66   0000     nop                      	nop
001c68   0000     nop                      	nop
001c6a   0000     nop                      	nop
001c6c   0000     nop                      	nop
001c6e   0000     nop                      	nop
001c70   0000     nop                      	nop
001c72   0000     nop                      	nop
001c74   0000     nop                      	nop
001c76   0000     nop                      	nop
001c78   0000     nop                      	nop
001c7a   0000     nop                      	nop
001c7c   0000     nop                      	nop
001c7e   0000     nop                      	nop
001c80   0000     nop                      	nop
001c82   0000     nop                      	nop
001c84   0000     nop                      	nop
001c86   0000     nop                      	nop
001c88   0000     nop                      	nop
001c8a   0000     nop                      	nop
001c8c   0000     nop                      	nop
001c8e   0000     nop                      	nop
001c90   0000     nop                      	nop
001c92   0000     nop                      	nop
001c94   0000     nop                      	nop
001c96   0000     nop                      	nop
001c98   0000     nop                      	nop
001c9a   0000     nop                      	nop
001c9c   0000     nop                      	nop
001c9e   0000     nop                      	nop
001ca0   0000     nop                      	nop
001ca2   0000     nop                      	nop
001ca4   0000     nop                      	nop
001ca6   0000     nop                      	nop
001ca8   0000     nop                      	nop
001caa   0000     nop                      	nop
001cac   0000     nop                      	nop
001cae   0000     nop                      	nop
001cb0   0000     nop                      	nop
001cb2   0000     nop                      	nop
001cb4   0000     nop                      	nop
001cb6   0000     nop                      	nop
001cb8   0000     nop                      	nop
001cba   0000     nop                      	nop
001cbc   0000     nop                      	nop
001cbe   0000     nop                      	nop
001cc0   0000     nop                      	nop
001cc2   0000     nop                      	nop
001cc4   0000     nop                      	nop
001cc6   0000     nop                      	nop
001cc8   0000     nop                      	nop
001cca   0000     nop                      	nop
001ccc   0000     nop                      	nop
001cce   0000     nop                      	nop
001cd0   0000     nop                      	nop
001cd2   0000     nop                      	nop
001cd4   0000     nop                      	nop
001cd6   0000     nop                      	nop
001cd8   0000     nop                      	nop
001cda   0000     nop                      	nop
001cdc   0000     nop                      	nop
001cde   0000     nop                      	nop
001ce0   0000     nop                      	nop
001ce2   0000     nop                      	nop
001ce4   0000     nop                      	nop
001ce6   0000     nop                      	nop
001ce8   0000     nop                      	nop
001cea   0000     nop                      	nop
001cec   0000     nop                      	nop
001cee   0000     nop                      	nop
001cf0   0000     nop                      	nop
001cf2   0000     nop                      	nop
001cf4   0000     nop                      	nop
001cf6   0000     nop                      	nop
001cf8   0000     nop                      	nop
001cfa   0000     nop                      	nop
001cfc   0000     nop                      	nop
001cfe   0000     nop                      	nop
001d00   0000     nop                      	nop
001d02   0000     nop                      	nop
001d04   0000     nop                      	nop
001d06   0000     nop                      	nop
001d08   0000     nop                      	nop
001d0a   0000     nop                      	nop
001d0c   0000     nop                      	nop
001d0e   0000     nop                      	nop
001d10   0000     nop                      	nop
001d12   0000     nop                      	nop
001d14   0000     nop                      	nop
001d16   0000     nop                      	nop
001d18   0000     nop                      	nop
001d1a   0000     nop                      	nop
001d1c   0000     nop                      	nop
001d1e   0000     nop                      	nop
001d20   0000     nop                      	nop
001d22   0000     nop                      	nop
001d24   0000     nop                      	nop
001d26   0000     nop                      	nop
001d28   0000     nop                      	nop
001d2a   0000     nop                      	nop
001d2c   0000     nop                      	nop
001d2e   0000     nop                      	nop
001d30   0000     nop                      	nop
001d32   0000     nop                      	nop
001d34   0000     nop                      	nop
001d36   0000     nop                      	nop
001d38   0000     nop                      	nop
001d3a   0000     nop                      	nop
001d3c   0000     nop                      	nop
001d3e   0000     nop                      	nop
001d40   0000     nop                      	nop
001d42   0000     nop                      	nop
001d44   0000     nop                      	nop
001d46   0000     nop                      	nop
001d48   0000     nop                      	nop
001d4a   0000     nop                      	nop
001d4c   0000     nop                      	nop
001d4e   0000     nop                      	nop
001d50   0000     nop                      	nop
001d52   0000     nop                      	nop
001d54   0000     nop                      	nop
001d56   0000     nop                      	nop
001d58   0000     nop                      	nop
001d5a   0000     nop                      	nop
001d5c   0000     nop                      	nop
001d5e   0000     nop                      	nop
001d60   0000     nop                      	nop
001d62   0000     nop                      	nop
001d64   0000     nop                      	nop
001d66   0000     nop                      	nop
001d68   0000     nop                      	nop
001d6a   0000     nop                      	nop
001d6c   0000     nop                      	nop
001d6e   0000     nop                      	nop
001d70   0000     nop                      	nop
001d72   0000     nop                      	nop
001d74   0000     nop                      	nop
001d76   0000     nop                      	nop
001d78   0000     nop                      	nop
001d7a   0000     nop                      	nop
001d7c   0000     nop                      	nop
001d7e   0000     nop                      	nop
001d80   0000     nop                      	nop
001d82   0000     nop                      	nop
001d84   0000     nop                      	nop
001d86   0000     nop                      	nop
001d88   0000     nop                      	nop
001d8a   0000     nop                      	nop
001d8c   0000     nop                      	nop
001d8e   0000     nop                      	nop
001d90   0000     nop                      	nop
001d92   0000     nop                      	nop
001d94   0000     nop                      	nop
001d96   0000     nop                      	nop
001d98   0000     nop                      	nop
001d9a   0000     nop                      	nop
001d9c   0000     nop                      	nop
001d9e   0000     nop                      	nop
001da0   0000     nop                      	nop
001da2   0000     nop                      	nop
001da4   0000     nop                      	nop
001da6   0000     nop                      	nop
001da8   0000     nop                      	nop
001daa   0000     nop                      	nop
001dac   0000     nop                      	nop
001dae   0000     nop                      	nop
001db0   0000     nop                      	nop
001db2   0000     nop                      	nop
001db4   0000     nop                      	nop
001db6   0000     nop                      	nop
001db8   0000     nop                      	nop
001dba   0000     nop                      	nop
001dbc   0000     nop                      	nop
001dbe   0000     nop                      	nop
001dc0   0000     nop                      	nop
001dc2   0000     nop                      	nop
001dc4   0000     nop                      	nop
001dc6   0000     nop                      	nop
001dc8   0000     nop                      	nop
001dca   0000     nop                      	nop
001dcc   0000     nop                      	nop
001dce   0000     nop                      	nop
                                           	
                                           ;	.line	3602; meter_logger.c	PWM_PIN = 0;
001dd0   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001dd2   0000     nop                      	nop
001dd4   0000     nop                      	nop
001dd6   0000     nop                      	nop
001dd8   0000     nop                      	nop
001dda   0000     nop                      	nop
001ddc   0000     nop                      	nop
001dde   0000     nop                      	nop
001de0   0000     nop                      	nop
001de2   0000     nop                      	nop
001de4   0000     nop                      	nop
001de6   0000     nop                      	nop
001de8   0000     nop                      	nop
001dea   0000     nop                      	nop
001dec   0000     nop                      	nop
001dee   0000     nop                      	nop
001df0   0000     nop                      	nop
001df2   0000     nop                      	nop
001df4   0000     nop                      	nop
001df6   0000     nop                      	nop
001df8   0000     nop                      	nop
001dfa   0000     nop                      	nop
001dfc   0000     nop                      	nop
001dfe   0000     nop                      	nop
001e00   0000     nop                      	nop
001e02   0000     nop                      	nop
001e04   0000     nop                      	nop
001e06   0000     nop                      	nop
001e08   0000     nop                      	nop
001e0a   0000     nop                      	nop
001e0c   0000     nop                      	nop
001e0e   0000     nop                      	nop
001e10   0000     nop                      	nop
001e12   0000     nop                      	nop
001e14   0000     nop                      	nop
001e16   0000     nop                      	nop
001e18   0000     nop                      	nop
001e1a   0000     nop                      	nop
001e1c   0000     nop                      	nop
001e1e   0000     nop                      	nop
001e20   0000     nop                      	nop
001e22   0000     nop                      	nop
001e24   0000     nop                      	nop
001e26   0000     nop                      	nop
001e28   0000     nop                      	nop
001e2a   0000     nop                      	nop
001e2c   0000     nop                      	nop
001e2e   0000     nop                      	nop
001e30   0000     nop                      	nop
001e32   0000     nop                      	nop
001e34   0000     nop                      	nop
001e36   0000     nop                      	nop
001e38   0000     nop                      	nop
001e3a   0000     nop                      	nop
001e3c   0000     nop                      	nop
001e3e   0000     nop                      	nop
001e40   0000     nop                      	nop
001e42   0000     nop                      	nop
001e44   0000     nop                      	nop
001e46   0000     nop                      	nop
001e48   0000     nop                      	nop
001e4a   0000     nop                      	nop
001e4c   0000     nop                      	nop
001e4e   0000     nop                      	nop
001e50   0000     nop                      	nop
001e52   0000     nop                      	nop
001e54   0000     nop                      	nop
001e56   0000     nop                      	nop
001e58   0000     nop                      	nop
001e5a   0000     nop                      	nop
001e5c   0000     nop                      	nop
001e5e   0000     nop                      	nop
001e60   0000     nop                      	nop
001e62   0000     nop                      	nop
001e64   0000     nop                      	nop
001e66   0000     nop                      	nop
001e68   0000     nop                      	nop
001e6a   0000     nop                      	nop
001e6c   0000     nop                      	nop
001e6e   0000     nop                      	nop
001e70   0000     nop                      	nop
001e72   0000     nop                      	nop
001e74   0000     nop                      	nop
001e76   0000     nop                      	nop
001e78   0000     nop                      	nop
001e7a   0000     nop                      	nop
001e7c   0000     nop                      	nop
001e7e   0000     nop                      	nop
001e80   0000     nop                      	nop
001e82   0000     nop                      	nop
001e84   0000     nop                      	nop
001e86   0000     nop                      	nop
001e88   0000     nop                      	nop
001e8a   0000     nop                      	nop
001e8c   0000     nop                      	nop
001e8e   0000     nop                      	nop
001e90   0000     nop                      	nop
001e92   0000     nop                      	nop
001e94   0000     nop                      	nop
001e96   0000     nop                      	nop
001e98   0000     nop                      	nop
001e9a   0000     nop                      	nop
001e9c   0000     nop                      	nop
001e9e   0000     nop                      	nop
001ea0   0000     nop                      	nop
001ea2   0000     nop                      	nop
001ea4   0000     nop                      	nop
001ea6   0000     nop                      	nop
001ea8   0000     nop                      	nop
001eaa   0000     nop                      	nop
001eac   0000     nop                      	nop
001eae   0000     nop                      	nop
001eb0   0000     nop                      	nop
001eb2   0000     nop                      	nop
001eb4   0000     nop                      	nop
001eb6   0000     nop                      	nop
001eb8   0000     nop                      	nop
001eba   0000     nop                      	nop
001ebc   0000     nop                      	nop
001ebe   0000     nop                      	nop
001ec0   0000     nop                      	nop
001ec2   0000     nop                      	nop
001ec4   0000     nop                      	nop
001ec6   0000     nop                      	nop
001ec8   0000     nop                      	nop
001eca   0000     nop                      	nop
001ecc   0000     nop                      	nop
001ece   0000     nop                      	nop
001ed0   0000     nop                      	nop
001ed2   0000     nop                      	nop
001ed4   0000     nop                      	nop
001ed6   0000     nop                      	nop
001ed8   0000     nop                      	nop
001eda   0000     nop                      	nop
001edc   0000     nop                      	nop
001ede   0000     nop                      	nop
001ee0   0000     nop                      	nop
001ee2   0000     nop                      	nop
001ee4   0000     nop                      	nop
001ee6   0000     nop                      	nop
001ee8   0000     nop                      	nop
001eea   0000     nop                      	nop
001eec   0000     nop                      	nop
001eee   0000     nop                      	nop
001ef0   0000     nop                      	nop
001ef2   0000     nop                      	nop
001ef4   0000     nop                      	nop
001ef6   0000     nop                      	nop
001ef8   0000     nop                      	nop
001efa   0000     nop                      	nop
001efc   0000     nop                      	nop
001efe   0000     nop                      	nop
001f00   0000     nop                      	nop
001f02   0000     nop                      	nop
001f04   0000     nop                      	nop
001f06   0000     nop                      	nop
001f08   0000     nop                      	nop
001f0a   0000     nop                      	nop
001f0c   0000     nop                      	nop
001f0e   0000     nop                      	nop
001f10   0000     nop                      	nop
001f12   0000     nop                      	nop
001f14   0000     nop                      	nop
001f16   0000     nop                      	nop
001f18   0000     nop                      	nop
001f1a   0000     nop                      	nop
001f1c   0000     nop                      	nop
001f1e   0000     nop                      	nop
001f20   0000     nop                      	nop
001f22   0000     nop                      	nop
001f24   0000     nop                      	nop
001f26   0000     nop                      	nop
001f28   0000     nop                      	nop
001f2a   0000     nop                      	nop
001f2c   0000     nop                      	nop
001f2e   0000     nop                      	nop
001f30   0000     nop                      	nop
001f32   0000     nop                      	nop
001f34   0000     nop                      	nop
001f36   0000     nop                      	nop
001f38   0000     nop                      	nop
001f3a   0000     nop                      	nop
001f3c   0000     nop                      	nop
001f3e   0000     nop                      	nop
001f40   0000     nop                      	nop
001f42   0000     nop                      	nop
001f44   0000     nop                      	nop
001f46   0000     nop                      	nop
001f48   0000     nop                      	nop
001f4a   0000     nop                      	nop
001f4c   0000     nop                      	nop
001f4e   0000     nop                      	nop
001f50   0000     nop                      	nop
001f52   0000     nop                      	nop
001f54   0000     nop                      	nop
001f56   0000     nop                      	nop
001f58   0000     nop                      	nop
001f5a   0000     nop                      	nop
001f5c   0000     nop                      	nop
001f5e   0000     nop                      	nop
001f60   0000     nop                      	nop
001f62   0000     nop                      	nop
001f64   0000     nop                      	nop
001f66   0000     nop                      	nop
001f68   0000     nop                      	nop
                                           	
                                           ;	.line	3809; meter_logger.c	PWM_PIN = 1;
001f6a   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001f6c   0000     nop                      	nop
001f6e   0000     nop                      	nop
001f70   0000     nop                      	nop
001f72   0000     nop                      	nop
001f74   0000     nop                      	nop
001f76   0000     nop                      	nop
001f78   0000     nop                      	nop
001f7a   0000     nop                      	nop
001f7c   0000     nop                      	nop
001f7e   0000     nop                      	nop
001f80   0000     nop                      	nop
001f82   0000     nop                      	nop
001f84   0000     nop                      	nop
001f86   0000     nop                      	nop
001f88   0000     nop                      	nop
001f8a   0000     nop                      	nop
001f8c   0000     nop                      	nop
001f8e   0000     nop                      	nop
001f90   0000     nop                      	nop
001f92   0000     nop                      	nop
001f94   0000     nop                      	nop
001f96   0000     nop                      	nop
001f98   0000     nop                      	nop
001f9a   0000     nop                      	nop
001f9c   0000     nop                      	nop
001f9e   0000     nop                      	nop
001fa0   0000     nop                      	nop
001fa2   0000     nop                      	nop
001fa4   0000     nop                      	nop
001fa6   0000     nop                      	nop
001fa8   0000     nop                      	nop
001faa   0000     nop                      	nop
001fac   0000     nop                      	nop
001fae   0000     nop                      	nop
001fb0   0000     nop                      	nop
001fb2   0000     nop                      	nop
001fb4   0000     nop                      	nop
001fb6   0000     nop                      	nop
001fb8   0000     nop                      	nop
001fba   0000     nop                      	nop
001fbc   0000     nop                      	nop
001fbe   0000     nop                      	nop
001fc0   0000     nop                      	nop
001fc2   0000     nop                      	nop
001fc4   0000     nop                      	nop
001fc6   0000     nop                      	nop
001fc8   0000     nop                      	nop
001fca   0000     nop                      	nop
001fcc   0000     nop                      	nop
001fce   0000     nop                      	nop
001fd0   0000     nop                      	nop
001fd2   0000     nop                      	nop
001fd4   0000     nop                      	nop
001fd6   0000     nop                      	nop
001fd8   0000     nop                      	nop
001fda   0000     nop                      	nop
001fdc   0000     nop                      	nop
001fde   0000     nop                      	nop
001fe0   0000     nop                      	nop
001fe2   0000     nop                      	nop
001fe4   0000     nop                      	nop
001fe6   0000     nop                      	nop
001fe8   0000     nop                      	nop
001fea   0000     nop                      	nop
001fec   0000     nop                      	nop
001fee   0000     nop                      	nop
001ff0   0000     nop                      	nop
001ff2   0000     nop                      	nop
001ff4   0000     nop                      	nop
001ff6   0000     nop                      	nop
001ff8   0000     nop                      	nop
001ffa   0000     nop                      	nop
001ffc   0000     nop                      	nop
001ffe   0000     nop                      	nop
002000   0000     nop                      	nop
002002   0000     nop                      	nop
002004   0000     nop                      	nop
002006   0000     nop                      	nop
002008   0000     nop                      	nop
00200a   0000     nop                      	nop
00200c   0000     nop                      	nop
00200e   0000     nop                      	nop
002010   0000     nop                      	nop
002012   0000     nop                      	nop
002014   0000     nop                      	nop
002016   0000     nop                      	nop
002018   0000     nop                      	nop
00201a   0000     nop                      	nop
00201c   0000     nop                      	nop
00201e   0000     nop                      	nop
002020   0000     nop                      	nop
002022   0000     nop                      	nop
002024   0000     nop                      	nop
002026   0000     nop                      	nop
002028   0000     nop                      	nop
00202a   0000     nop                      	nop
00202c   0000     nop                      	nop
00202e   0000     nop                      	nop
002030   0000     nop                      	nop
002032   0000     nop                      	nop
002034   0000     nop                      	nop
002036   0000     nop                      	nop
002038   0000     nop                      	nop
00203a   0000     nop                      	nop
00203c   0000     nop                      	nop
00203e   0000     nop                      	nop
002040   0000     nop                      	nop
002042   0000     nop                      	nop
002044   0000     nop                      	nop
002046   0000     nop                      	nop
002048   0000     nop                      	nop
00204a   0000     nop                      	nop
00204c   0000     nop                      	nop
00204e   0000     nop                      	nop
002050   0000     nop                      	nop
002052   0000     nop                      	nop
002054   0000     nop                      	nop
002056   0000     nop                      	nop
002058   0000     nop                      	nop
00205a   0000     nop                      	nop
00205c   0000     nop                      	nop
00205e   0000     nop                      	nop
002060   0000     nop                      	nop
002062   0000     nop                      	nop
002064   0000     nop                      	nop
002066   0000     nop                      	nop
002068   0000     nop                      	nop
00206a   0000     nop                      	nop
00206c   0000     nop                      	nop
00206e   0000     nop                      	nop
002070   0000     nop                      	nop
002072   0000     nop                      	nop
002074   0000     nop                      	nop
002076   0000     nop                      	nop
002078   0000     nop                      	nop
00207a   0000     nop                      	nop
00207c   0000     nop                      	nop
00207e   0000     nop                      	nop
002080   0000     nop                      	nop
002082   0000     nop                      	nop
002084   0000     nop                      	nop
002086   0000     nop                      	nop
002088   0000     nop                      	nop
00208a   0000     nop                      	nop
00208c   0000     nop                      	nop
00208e   0000     nop                      	nop
002090   0000     nop                      	nop
002092   0000     nop                      	nop
002094   0000     nop                      	nop
002096   0000     nop                      	nop
002098   0000     nop                      	nop
00209a   0000     nop                      	nop
00209c   0000     nop                      	nop
00209e   0000     nop                      	nop
0020a0   0000     nop                      	nop
0020a2   0000     nop                      	nop
0020a4   0000     nop                      	nop
0020a6   0000     nop                      	nop
0020a8   0000     nop                      	nop
0020aa   0000     nop                      	nop
0020ac   0000     nop                      	nop
0020ae   0000     nop                      	nop
0020b0   0000     nop                      	nop
0020b2   0000     nop                      	nop
0020b4   0000     nop                      	nop
0020b6   0000     nop                      	nop
0020b8   0000     nop                      	nop
0020ba   0000     nop                      	nop
0020bc   0000     nop                      	nop
0020be   0000     nop                      	nop
0020c0   0000     nop                      	nop
0020c2   0000     nop                      	nop
0020c4   0000     nop                      	nop
0020c6   0000     nop                      	nop
0020c8   0000     nop                      	nop
0020ca   0000     nop                      	nop
0020cc   0000     nop                      	nop
0020ce   0000     nop                      	nop
0020d0   0000     nop                      	nop
0020d2   0000     nop                      	nop
0020d4   0000     nop                      	nop
0020d6   0000     nop                      	nop
0020d8   0000     nop                      	nop
0020da   0000     nop                      	nop
0020dc   0000     nop                      	nop
0020de   0000     nop                      	nop
0020e0   0000     nop                      	nop
0020e2   0000     nop                      	nop
0020e4   0000     nop                      	nop
0020e6   0000     nop                      	nop
0020e8   0000     nop                      	nop
0020ea   0000     nop                      	nop
0020ec   0000     nop                      	nop
0020ee   0000     nop                      	nop
0020f0   0000     nop                      	nop
0020f2   0000     nop                      	nop
0020f4   0000     nop                      	nop
0020f6   0000     nop                      	nop
0020f8   0000     nop                      	nop
0020fa   0000     nop                      	nop
0020fc   0000     nop                      	nop
0020fe   0000     nop                      	nop
002100   0000     nop                      	nop
002102   0000     nop                      	nop
                                           	
                                           ;	.line	4016; meter_logger.c	PWM_PIN = 0;
002104   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
002106   0000     nop                      	nop
002108   0000     nop                      	nop
00210a   0000     nop                      	nop
00210c   0000     nop                      	nop
00210e   0000     nop                      	nop
002110   0000     nop                      	nop
002112   0000     nop                      	nop
002114   0000     nop                      	nop
002116   0000     nop                      	nop
002118   0000     nop                      	nop
00211a   0000     nop                      	nop
00211c   0000     nop                      	nop
00211e   0000     nop                      	nop
002120   0000     nop                      	nop
002122   0000     nop                      	nop
002124   0000     nop                      	nop
002126   0000     nop                      	nop
002128   0000     nop                      	nop
00212a   0000     nop                      	nop
00212c   0000     nop                      	nop
00212e   0000     nop                      	nop
002130   0000     nop                      	nop
002132   0000     nop                      	nop
002134   0000     nop                      	nop
002136   0000     nop                      	nop
002138   0000     nop                      	nop
00213a   0000     nop                      	nop
00213c   0000     nop                      	nop
00213e   0000     nop                      	nop
002140   0000     nop                      	nop
002142   0000     nop                      	nop
002144   0000     nop                      	nop
002146   0000     nop                      	nop
002148   0000     nop                      	nop
00214a   0000     nop                      	nop
00214c   0000     nop                      	nop
00214e   0000     nop                      	nop
002150   0000     nop                      	nop
002152   0000     nop                      	nop
002154   0000     nop                      	nop
002156   0000     nop                      	nop
002158   0000     nop                      	nop
00215a   0000     nop                      	nop
00215c   0000     nop                      	nop
00215e   0000     nop                      	nop
002160   0000     nop                      	nop
002162   0000     nop                      	nop
002164   0000     nop                      	nop
002166   0000     nop                      	nop
002168   0000     nop                      	nop
00216a   0000     nop                      	nop
00216c   0000     nop                      	nop
00216e   0000     nop                      	nop
002170   0000     nop                      	nop
002172   0000     nop                      	nop
002174   0000     nop                      	nop
002176   0000     nop                      	nop
002178   0000     nop                      	nop
00217a   0000     nop                      	nop
00217c   0000     nop                      	nop
00217e   0000     nop                      	nop
002180   0000     nop                      	nop
002182   0000     nop                      	nop
002184   0000     nop                      	nop
002186   0000     nop                      	nop
002188   0000     nop                      	nop
00218a   0000     nop                      	nop
00218c   0000     nop                      	nop
00218e   0000     nop                      	nop
002190   0000     nop                      	nop
002192   0000     nop                      	nop
002194   0000     nop                      	nop
002196   0000     nop                      	nop
002198   0000     nop                      	nop
00219a   0000     nop                      	nop
00219c   0000     nop                      	nop
00219e   0000     nop                      	nop
0021a0   0000     nop                      	nop
0021a2   0000     nop                      	nop
0021a4   0000     nop                      	nop
0021a6   0000     nop                      	nop
0021a8   0000     nop                      	nop
0021aa   0000     nop                      	nop
0021ac   0000     nop                      	nop
0021ae   0000     nop                      	nop
0021b0   0000     nop                      	nop
0021b2   0000     nop                      	nop
0021b4   0000     nop                      	nop
0021b6   0000     nop                      	nop
0021b8   0000     nop                      	nop
0021ba   0000     nop                      	nop
0021bc   0000     nop                      	nop
0021be   0000     nop                      	nop
0021c0   0000     nop                      	nop
0021c2   0000     nop                      	nop
0021c4   0000     nop                      	nop
0021c6   0000     nop                      	nop
0021c8   0000     nop                      	nop
0021ca   0000     nop                      	nop
0021cc   0000     nop                      	nop
0021ce   0000     nop                      	nop
0021d0   0000     nop                      	nop
0021d2   0000     nop                      	nop
0021d4   0000     nop                      	nop
0021d6   0000     nop                      	nop
0021d8   0000     nop                      	nop
0021da   0000     nop                      	nop
0021dc   0000     nop                      	nop
0021de   0000     nop                      	nop
0021e0   0000     nop                      	nop
0021e2   0000     nop                      	nop
0021e4   0000     nop                      	nop
0021e6   0000     nop                      	nop
0021e8   0000     nop                      	nop
0021ea   0000     nop                      	nop
0021ec   0000     nop                      	nop
0021ee   0000     nop                      	nop
0021f0   0000     nop                      	nop
0021f2   0000     nop                      	nop
0021f4   0000     nop                      	nop
0021f6   0000     nop                      	nop
0021f8   0000     nop                      	nop
0021fa   0000     nop                      	nop
0021fc   0000     nop                      	nop
0021fe   0000     nop                      	nop
002200   0000     nop                      	nop
002202   0000     nop                      	nop
002204   0000     nop                      	nop
002206   0000     nop                      	nop
002208   0000     nop                      	nop
00220a   0000     nop                      	nop
00220c   0000     nop                      	nop
00220e   0000     nop                      	nop
002210   0000     nop                      	nop
002212   0000     nop                      	nop
002214   0000     nop                      	nop
002216   0000     nop                      	nop
002218   0000     nop                      	nop
00221a   0000     nop                      	nop
00221c   0000     nop                      	nop
00221e   0000     nop                      	nop
002220   0000     nop                      	nop
002222   0000     nop                      	nop
002224   0000     nop                      	nop
002226   0000     nop                      	nop
002228   0000     nop                      	nop
00222a   0000     nop                      	nop
00222c   0000     nop                      	nop
00222e   0000     nop                      	nop
002230   0000     nop                      	nop
002232   0000     nop                      	nop
002234   0000     nop                      	nop
002236   0000     nop                      	nop
002238   0000     nop                      	nop
00223a   0000     nop                      	nop
00223c   0000     nop                      	nop
00223e   0000     nop                      	nop
002240   0000     nop                      	nop
002242   0000     nop                      	nop
002244   0000     nop                      	nop
002246   0000     nop                      	nop
002248   0000     nop                      	nop
00224a   0000     nop                      	nop
00224c   0000     nop                      	nop
00224e   0000     nop                      	nop
002250   0000     nop                      	nop
002252   0000     nop                      	nop
002254   0000     nop                      	nop
002256   0000     nop                      	nop
002258   0000     nop                      	nop
00225a   0000     nop                      	nop
00225c   0000     nop                      	nop
00225e   0000     nop                      	nop
002260   0000     nop                      	nop
002262   0000     nop                      	nop
002264   0000     nop                      	nop
002266   0000     nop                      	nop
002268   0000     nop                      	nop
00226a   0000     nop                      	nop
00226c   0000     nop                      	nop
00226e   0000     nop                      	nop
002270   0000     nop                      	nop
002272   0000     nop                      	nop
002274   0000     nop                      	nop
002276   0000     nop                      	nop
002278   0000     nop                      	nop
00227a   0000     nop                      	nop
00227c   0000     nop                      	nop
00227e   0000     nop                      	nop
002280   0000     nop                      	nop
002282   0000     nop                      	nop
002284   0000     nop                      	nop
002286   0000     nop                      	nop
002288   0000     nop                      	nop
00228a   0000     nop                      	nop
00228c   0000     nop                      	nop
00228e   0000     nop                      	nop
002290   0000     nop                      	nop
002292   0000     nop                      	nop
002294   0000     nop                      	nop
002296   0000     nop                      	nop
002298   0000     nop                      	nop
00229a   0000     nop                      	nop
00229c   0000     nop                      	nop
                                           	
                                           ;	.line	4223; meter_logger.c	PWM_PIN = 1;
00229e   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
0022a0   0000     nop                      	nop
0022a2   0000     nop                      	nop
0022a4   0000     nop                      	nop
0022a6   0000     nop                      	nop
0022a8   0000     nop                      	nop
0022aa   0000     nop                      	nop
0022ac   0000     nop                      	nop
0022ae   0000     nop                      	nop
0022b0   0000     nop                      	nop
0022b2   0000     nop                      	nop
0022b4   0000     nop                      	nop
0022b6   0000     nop                      	nop
0022b8   0000     nop                      	nop
0022ba   0000     nop                      	nop
0022bc   0000     nop                      	nop
0022be   0000     nop                      	nop
0022c0   0000     nop                      	nop
0022c2   0000     nop                      	nop
0022c4   0000     nop                      	nop
0022c6   0000     nop                      	nop
0022c8   0000     nop                      	nop
0022ca   0000     nop                      	nop
0022cc   0000     nop                      	nop
0022ce   0000     nop                      	nop
0022d0   0000     nop                      	nop
0022d2   0000     nop                      	nop
0022d4   0000     nop                      	nop
0022d6   0000     nop                      	nop
0022d8   0000     nop                      	nop
0022da   0000     nop                      	nop
0022dc   0000     nop                      	nop
0022de   0000     nop                      	nop
0022e0   0000     nop                      	nop
0022e2   0000     nop                      	nop
0022e4   0000     nop                      	nop
0022e6   0000     nop                      	nop
0022e8   0000     nop                      	nop
0022ea   0000     nop                      	nop
0022ec   0000     nop                      	nop
0022ee   0000     nop                      	nop
0022f0   0000     nop                      	nop
0022f2   0000     nop                      	nop
0022f4   0000     nop                      	nop
0022f6   0000     nop                      	nop
0022f8   0000     nop                      	nop
0022fa   0000     nop                      	nop
0022fc   0000     nop                      	nop
0022fe   0000     nop                      	nop
002300   0000     nop                      	nop
002302   0000     nop                      	nop
002304   0000     nop                      	nop
002306   0000     nop                      	nop
002308   0000     nop                      	nop
00230a   0000     nop                      	nop
00230c   0000     nop                      	nop
00230e   0000     nop                      	nop
002310   0000     nop                      	nop
002312   0000     nop                      	nop
002314   0000     nop                      	nop
002316   0000     nop                      	nop
002318   0000     nop                      	nop
00231a   0000     nop                      	nop
00231c   0000     nop                      	nop
00231e   0000     nop                      	nop
002320   0000     nop                      	nop
002322   0000     nop                      	nop
002324   0000     nop                      	nop
002326   0000     nop                      	nop
002328   0000     nop                      	nop
00232a   0000     nop                      	nop
00232c   0000     nop                      	nop
00232e   0000     nop                      	nop
002330   0000     nop                      	nop
002332   0000     nop                      	nop
002334   0000     nop                      	nop
002336   0000     nop                      	nop
002338   0000     nop                      	nop
00233a   0000     nop                      	nop
00233c   0000     nop                      	nop
00233e   0000     nop                      	nop
002340   0000     nop                      	nop
002342   0000     nop                      	nop
002344   0000     nop                      	nop
002346   0000     nop                      	nop
002348   0000     nop                      	nop
00234a   0000     nop                      	nop
00234c   0000     nop                      	nop
00234e   0000     nop                      	nop
002350   0000     nop                      	nop
002352   0000     nop                      	nop
002354   0000     nop                      	nop
002356   0000     nop                      	nop
002358   0000     nop                      	nop
00235a   0000     nop                      	nop
00235c   0000     nop                      	nop
00235e   0000     nop                      	nop
002360   0000     nop                      	nop
002362   0000     nop                      	nop
002364   0000     nop                      	nop
002366   0000     nop                      	nop
002368   0000     nop                      	nop
00236a   0000     nop                      	nop
00236c   0000     nop                      	nop
00236e   0000     nop                      	nop
002370   0000     nop                      	nop
002372   0000     nop                      	nop
002374   0000     nop                      	nop
002376   0000     nop                      	nop
002378   0000     nop                      	nop
00237a   0000     nop                      	nop
00237c   0000     nop                      	nop
00237e   0000     nop                      	nop
002380   0000     nop                      	nop
002382   0000     nop                      	nop
002384   0000     nop                      	nop
002386   0000     nop                      	nop
002388   0000     nop                      	nop
00238a   0000     nop                      	nop
00238c   0000     nop                      	nop
00238e   0000     nop                      	nop
002390   0000     nop                      	nop
002392   0000     nop                      	nop
002394   0000     nop                      	nop
002396   0000     nop                      	nop
002398   0000     nop                      	nop
00239a   0000     nop                      	nop
00239c   0000     nop                      	nop
00239e   0000     nop                      	nop
0023a0   0000     nop                      	nop
0023a2   0000     nop                      	nop
0023a4   0000     nop                      	nop
0023a6   0000     nop                      	nop
0023a8   0000     nop                      	nop
0023aa   0000     nop                      	nop
0023ac   0000     nop                      	nop
0023ae   0000     nop                      	nop
0023b0   0000     nop                      	nop
0023b2   0000     nop                      	nop
0023b4   0000     nop                      	nop
0023b6   0000     nop                      	nop
0023b8   0000     nop                      	nop
0023ba   0000     nop                      	nop
0023bc   0000     nop                      	nop
0023be   0000     nop                      	nop
0023c0   0000     nop                      	nop
0023c2   0000     nop                      	nop
0023c4   0000     nop                      	nop
0023c6   0000     nop                      	nop
0023c8   0000     nop                      	nop
0023ca   0000     nop                      	nop
0023cc   0000     nop                      	nop
0023ce   0000     nop                      	nop
0023d0   0000     nop                      	nop
0023d2   0000     nop                      	nop
0023d4   0000     nop                      	nop
0023d6   0000     nop                      	nop
0023d8   0000     nop                      	nop
0023da   0000     nop                      	nop
0023dc   0000     nop                      	nop
0023de   0000     nop                      	nop
0023e0   0000     nop                      	nop
0023e2   0000     nop                      	nop
0023e4   0000     nop                      	nop
0023e6   0000     nop                      	nop
0023e8   0000     nop                      	nop
0023ea   0000     nop                      	nop
0023ec   0000     nop                      	nop
0023ee   0000     nop                      	nop
0023f0   0000     nop                      	nop
0023f2   0000     nop                      	nop
0023f4   0000     nop                      	nop
0023f6   0000     nop                      	nop
0023f8   0000     nop                      	nop
0023fa   0000     nop                      	nop
0023fc   0000     nop                      	nop
0023fe   0000     nop                      	nop
002400   0000     nop                      	nop
002402   0000     nop                      	nop
002404   0000     nop                      	nop
002406   0000     nop                      	nop
002408   0000     nop                      	nop
00240a   0000     nop                      	nop
00240c   0000     nop                      	nop
00240e   0000     nop                      	nop
002410   0000     nop                      	nop
002412   0000     nop                      	nop
002414   0000     nop                      	nop
002416   0000     nop                      	nop
002418   0000     nop                      	nop
00241a   0000     nop                      	nop
00241c   0000     nop                      	nop
00241e   0000     nop                      	nop
002420   0000     nop                      	nop
002422   0000     nop                      	nop
002424   0000     nop                      	nop
002426   0000     nop                      	nop
002428   0000     nop                      	nop
00242a   0000     nop                      	nop
00242c   0000     nop                      	nop
00242e   0000     nop                      	nop
002430   0000     nop                      	nop
002432   0000     nop                      	nop
002434   0000     nop                      	nop
002436   0000     nop                      	nop
                                           	
                                           ;	.line	4430; meter_logger.c	PWM_PIN = 0;
002438   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
00243a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00243c   ffd9
00243e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__send_fsk_high	code
                                           _send_fsk_high:
                                           ;	.line	1458; meter_logger.c	void send_fsk_high(void) {
000d3a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000d3c   ffe5
000d3e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000d40   ffd9
                                           ;	.line	1459; meter_logger.c	PWM_PIN = 1;
000d42   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
000d44   0000     nop                      	nop
000d46   0000     nop                      	nop
000d48   0000     nop                      	nop
000d4a   0000     nop                      	nop
000d4c   0000     nop                      	nop
000d4e   0000     nop                      	nop
000d50   0000     nop                      	nop
000d52   0000     nop                      	nop
000d54   0000     nop                      	nop
000d56   0000     nop                      	nop
000d58   0000     nop                      	nop
000d5a   0000     nop                      	nop
000d5c   0000     nop                      	nop
000d5e   0000     nop                      	nop
000d60   0000     nop                      	nop
000d62   0000     nop                      	nop
000d64   0000     nop                      	nop
000d66   0000     nop                      	nop
000d68   0000     nop                      	nop
000d6a   0000     nop                      	nop
000d6c   0000     nop                      	nop
000d6e   0000     nop                      	nop
000d70   0000     nop                      	nop
000d72   0000     nop                      	nop
000d74   0000     nop                      	nop
000d76   0000     nop                      	nop
000d78   0000     nop                      	nop
000d7a   0000     nop                      	nop
000d7c   0000     nop                      	nop
000d7e   0000     nop                      	nop
000d80   0000     nop                      	nop
000d82   0000     nop                      	nop
000d84   0000     nop                      	nop
000d86   0000     nop                      	nop
000d88   0000     nop                      	nop
000d8a   0000     nop                      	nop
000d8c   0000     nop                      	nop
000d8e   0000     nop                      	nop
000d90   0000     nop                      	nop
000d92   0000     nop                      	nop
000d94   0000     nop                      	nop
000d96   0000     nop                      	nop
000d98   0000     nop                      	nop
000d9a   0000     nop                      	nop
000d9c   0000     nop                      	nop
000d9e   0000     nop                      	nop
000da0   0000     nop                      	nop
000da2   0000     nop                      	nop
000da4   0000     nop                      	nop
000da6   0000     nop                      	nop
000da8   0000     nop                      	nop
000daa   0000     nop                      	nop
000dac   0000     nop                      	nop
000dae   0000     nop                      	nop
000db0   0000     nop                      	nop
000db2   0000     nop                      	nop
000db4   0000     nop                      	nop
000db6   0000     nop                      	nop
000db8   0000     nop                      	nop
000dba   0000     nop                      	nop
000dbc   0000     nop                      	nop
000dbe   0000     nop                      	nop
000dc0   0000     nop                      	nop
000dc2   0000     nop                      	nop
000dc4   0000     nop                      	nop
000dc6   0000     nop                      	nop
000dc8   0000     nop                      	nop
000dca   0000     nop                      	nop
000dcc   0000     nop                      	nop
000dce   0000     nop                      	nop
000dd0   0000     nop                      	nop
000dd2   0000     nop                      	nop
000dd4   0000     nop                      	nop
000dd6   0000     nop                      	nop
000dd8   0000     nop                      	nop
000dda   0000     nop                      	nop
000ddc   0000     nop                      	nop
000dde   0000     nop                      	nop
000de0   0000     nop                      	nop
000de2   0000     nop                      	nop
000de4   0000     nop                      	nop
000de6   0000     nop                      	nop
000de8   0000     nop                      	nop
000dea   0000     nop                      	nop
000dec   0000     nop                      	nop
000dee   0000     nop                      	nop
000df0   0000     nop                      	nop
000df2   0000     nop                      	nop
000df4   0000     nop                      	nop
000df6   0000     nop                      	nop
000df8   0000     nop                      	nop
000dfa   0000     nop                      	nop
000dfc   0000     nop                      	nop
000dfe   0000     nop                      	nop
000e00   0000     nop                      	nop
000e02   0000     nop                      	nop
000e04   0000     nop                      	nop
000e06   0000     nop                      	nop
000e08   0000     nop                      	nop
000e0a   0000     nop                      	nop
000e0c   0000     nop                      	nop
000e0e   0000     nop                      	nop
000e10   0000     nop                      	nop
000e12   0000     nop                      	nop
000e14   0000     nop                      	nop
000e16   0000     nop                      	nop
000e18   0000     nop                      	nop
000e1a   0000     nop                      	nop
000e1c   0000     nop                      	nop
000e1e   0000     nop                      	nop
000e20   0000     nop                      	nop
000e22   0000     nop                      	nop
000e24   0000     nop                      	nop
000e26   0000     nop                      	nop
000e28   0000     nop                      	nop
000e2a   0000     nop                      	nop
000e2c   0000     nop                      	nop
000e2e   0000     nop                      	nop
000e30   0000     nop                      	nop
000e32   0000     nop                      	nop
000e34   0000     nop                      	nop
000e36   0000     nop                      	nop
000e38   0000     nop                      	nop
000e3a   0000     nop                      	nop
000e3c   0000     nop                      	nop
000e3e   0000     nop                      	nop
000e40   0000     nop                      	nop
000e42   0000     nop                      	nop
000e44   0000     nop                      	nop
000e46   0000     nop                      	nop
000e48   0000     nop                      	nop
000e4a   0000     nop                      	nop
000e4c   0000     nop                      	nop
000e4e   0000     nop                      	nop
000e50   0000     nop                      	nop
                                           	
                                           ;	.line	1597; meter_logger.c	PWM_PIN = 0;
000e52   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
000e54   0000     nop                      	nop
000e56   0000     nop                      	nop
000e58   0000     nop                      	nop
000e5a   0000     nop                      	nop
000e5c   0000     nop                      	nop
000e5e   0000     nop                      	nop
000e60   0000     nop                      	nop
000e62   0000     nop                      	nop
000e64   0000     nop                      	nop
000e66   0000     nop                      	nop
000e68   0000     nop                      	nop
000e6a   0000     nop                      	nop
000e6c   0000     nop                      	nop
000e6e   0000     nop                      	nop
000e70   0000     nop                      	nop
000e72   0000     nop                      	nop
000e74   0000     nop                      	nop
000e76   0000     nop                      	nop
000e78   0000     nop                      	nop
000e7a   0000     nop                      	nop
000e7c   0000     nop                      	nop
000e7e   0000     nop                      	nop
000e80   0000     nop                      	nop
000e82   0000     nop                      	nop
000e84   0000     nop                      	nop
000e86   0000     nop                      	nop
000e88   0000     nop                      	nop
000e8a   0000     nop                      	nop
000e8c   0000     nop                      	nop
000e8e   0000     nop                      	nop
000e90   0000     nop                      	nop
000e92   0000     nop                      	nop
000e94   0000     nop                      	nop
000e96   0000     nop                      	nop
000e98   0000     nop                      	nop
000e9a   0000     nop                      	nop
000e9c   0000     nop                      	nop
000e9e   0000     nop                      	nop
000ea0   0000     nop                      	nop
000ea2   0000     nop                      	nop
000ea4   0000     nop                      	nop
000ea6   0000     nop                      	nop
000ea8   0000     nop                      	nop
000eaa   0000     nop                      	nop
000eac   0000     nop                      	nop
000eae   0000     nop                      	nop
000eb0   0000     nop                      	nop
000eb2   0000     nop                      	nop
000eb4   0000     nop                      	nop
000eb6   0000     nop                      	nop
000eb8   0000     nop                      	nop
000eba   0000     nop                      	nop
000ebc   0000     nop                      	nop
000ebe   0000     nop                      	nop
000ec0   0000     nop                      	nop
000ec2   0000     nop                      	nop
000ec4   0000     nop                      	nop
000ec6   0000     nop                      	nop
000ec8   0000     nop                      	nop
000eca   0000     nop                      	nop
000ecc   0000     nop                      	nop
000ece   0000     nop                      	nop
000ed0   0000     nop                      	nop
000ed2   0000     nop                      	nop
000ed4   0000     nop                      	nop
000ed6   0000     nop                      	nop
000ed8   0000     nop                      	nop
000eda   0000     nop                      	nop
000edc   0000     nop                      	nop
000ede   0000     nop                      	nop
000ee0   0000     nop                      	nop
000ee2   0000     nop                      	nop
000ee4   0000     nop                      	nop
000ee6   0000     nop                      	nop
000ee8   0000     nop                      	nop
000eea   0000     nop                      	nop
000eec   0000     nop                      	nop
000eee   0000     nop                      	nop
000ef0   0000     nop                      	nop
000ef2   0000     nop                      	nop
000ef4   0000     nop                      	nop
000ef6   0000     nop                      	nop
000ef8   0000     nop                      	nop
000efa   0000     nop                      	nop
000efc   0000     nop                      	nop
000efe   0000     nop                      	nop
000f00   0000     nop                      	nop
000f02   0000     nop                      	nop
000f04   0000     nop                      	nop
000f06   0000     nop                      	nop
000f08   0000     nop                      	nop
000f0a   0000     nop                      	nop
000f0c   0000     nop                      	nop
000f0e   0000     nop                      	nop
000f10   0000     nop                      	nop
000f12   0000     nop                      	nop
000f14   0000     nop                      	nop
000f16   0000     nop                      	nop
000f18   0000     nop                      	nop
000f1a   0000     nop                      	nop
000f1c   0000     nop                      	nop
000f1e   0000     nop                      	nop
000f20   0000     nop                      	nop
000f22   0000     nop                      	nop
000f24   0000     nop                      	nop
000f26   0000     nop                      	nop
000f28   0000     nop                      	nop
000f2a   0000     nop                      	nop
000f2c   0000     nop                      	nop
000f2e   0000     nop                      	nop
000f30   0000     nop                      	nop
000f32   0000     nop                      	nop
000f34   0000     nop                      	nop
000f36   0000     nop                      	nop
000f38   0000     nop                      	nop
000f3a   0000     nop                      	nop
000f3c   0000     nop                      	nop
000f3e   0000     nop                      	nop
000f40   0000     nop                      	nop
000f42   0000     nop                      	nop
000f44   0000     nop                      	nop
000f46   0000     nop                      	nop
000f48   0000     nop                      	nop
000f4a   0000     nop                      	nop
000f4c   0000     nop                      	nop
000f4e   0000     nop                      	nop
000f50   0000     nop                      	nop
000f52   0000     nop                      	nop
000f54   0000     nop                      	nop
000f56   0000     nop                      	nop
000f58   0000     nop                      	nop
000f5a   0000     nop                      	nop
000f5c   0000     nop                      	nop
000f5e   0000     nop                      	nop
000f60   0000     nop                      	nop
                                           	
                                           ;	.line	1735; meter_logger.c	PWM_PIN = 1;
000f62   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
000f64   0000     nop                      	nop
000f66   0000     nop                      	nop
000f68   0000     nop                      	nop
000f6a   0000     nop                      	nop
000f6c   0000     nop                      	nop
000f6e   0000     nop                      	nop
000f70   0000     nop                      	nop
000f72   0000     nop                      	nop
000f74   0000     nop                      	nop
000f76   0000     nop                      	nop
000f78   0000     nop                      	nop
000f7a   0000     nop                      	nop
000f7c   0000     nop                      	nop
000f7e   0000     nop                      	nop
000f80   0000     nop                      	nop
000f82   0000     nop                      	nop
000f84   0000     nop                      	nop
000f86   0000     nop                      	nop
000f88   0000     nop                      	nop
000f8a   0000     nop                      	nop
000f8c   0000     nop                      	nop
000f8e   0000     nop                      	nop
000f90   0000     nop                      	nop
000f92   0000     nop                      	nop
000f94   0000     nop                      	nop
000f96   0000     nop                      	nop
000f98   0000     nop                      	nop
000f9a   0000     nop                      	nop
000f9c   0000     nop                      	nop
000f9e   0000     nop                      	nop
000fa0   0000     nop                      	nop
000fa2   0000     nop                      	nop
000fa4   0000     nop                      	nop
000fa6   0000     nop                      	nop
000fa8   0000     nop                      	nop
000faa   0000     nop                      	nop
000fac   0000     nop                      	nop
000fae   0000     nop                      	nop
000fb0   0000     nop                      	nop
000fb2   0000     nop                      	nop
000fb4   0000     nop                      	nop
000fb6   0000     nop                      	nop
000fb8   0000     nop                      	nop
000fba   0000     nop                      	nop
000fbc   0000     nop                      	nop
000fbe   0000     nop                      	nop
000fc0   0000     nop                      	nop
000fc2   0000     nop                      	nop
000fc4   0000     nop                      	nop
000fc6   0000     nop                      	nop
000fc8   0000     nop                      	nop
000fca   0000     nop                      	nop
000fcc   0000     nop                      	nop
000fce   0000     nop                      	nop
000fd0   0000     nop                      	nop
000fd2   0000     nop                      	nop
000fd4   0000     nop                      	nop
000fd6   0000     nop                      	nop
000fd8   0000     nop                      	nop
000fda   0000     nop                      	nop
000fdc   0000     nop                      	nop
000fde   0000     nop                      	nop
000fe0   0000     nop                      	nop
000fe2   0000     nop                      	nop
000fe4   0000     nop                      	nop
000fe6   0000     nop                      	nop
000fe8   0000     nop                      	nop
000fea   0000     nop                      	nop
000fec   0000     nop                      	nop
000fee   0000     nop                      	nop
000ff0   0000     nop                      	nop
000ff2   0000     nop                      	nop
000ff4   0000     nop                      	nop
000ff6   0000     nop                      	nop
000ff8   0000     nop                      	nop
000ffa   0000     nop                      	nop
000ffc   0000     nop                      	nop
000ffe   0000     nop                      	nop
001000   0000     nop                      	nop
001002   0000     nop                      	nop
001004   0000     nop                      	nop
001006   0000     nop                      	nop
001008   0000     nop                      	nop
00100a   0000     nop                      	nop
00100c   0000     nop                      	nop
00100e   0000     nop                      	nop
001010   0000     nop                      	nop
001012   0000     nop                      	nop
001014   0000     nop                      	nop
001016   0000     nop                      	nop
001018   0000     nop                      	nop
00101a   0000     nop                      	nop
00101c   0000     nop                      	nop
00101e   0000     nop                      	nop
001020   0000     nop                      	nop
001022   0000     nop                      	nop
001024   0000     nop                      	nop
001026   0000     nop                      	nop
001028   0000     nop                      	nop
00102a   0000     nop                      	nop
00102c   0000     nop                      	nop
00102e   0000     nop                      	nop
001030   0000     nop                      	nop
001032   0000     nop                      	nop
001034   0000     nop                      	nop
001036   0000     nop                      	nop
001038   0000     nop                      	nop
00103a   0000     nop                      	nop
00103c   0000     nop                      	nop
00103e   0000     nop                      	nop
001040   0000     nop                      	nop
001042   0000     nop                      	nop
001044   0000     nop                      	nop
001046   0000     nop                      	nop
001048   0000     nop                      	nop
00104a   0000     nop                      	nop
00104c   0000     nop                      	nop
00104e   0000     nop                      	nop
001050   0000     nop                      	nop
001052   0000     nop                      	nop
001054   0000     nop                      	nop
001056   0000     nop                      	nop
001058   0000     nop                      	nop
00105a   0000     nop                      	nop
00105c   0000     nop                      	nop
00105e   0000     nop                      	nop
001060   0000     nop                      	nop
001062   0000     nop                      	nop
001064   0000     nop                      	nop
001066   0000     nop                      	nop
001068   0000     nop                      	nop
00106a   0000     nop                      	nop
00106c   0000     nop                      	nop
00106e   0000     nop                      	nop
001070   0000     nop                      	nop
                                           	
                                           ;	.line	1873; meter_logger.c	PWM_PIN = 0;
001072   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001074   0000     nop                      	nop
001076   0000     nop                      	nop
001078   0000     nop                      	nop
00107a   0000     nop                      	nop
00107c   0000     nop                      	nop
00107e   0000     nop                      	nop
001080   0000     nop                      	nop
001082   0000     nop                      	nop
001084   0000     nop                      	nop
001086   0000     nop                      	nop
001088   0000     nop                      	nop
00108a   0000     nop                      	nop
00108c   0000     nop                      	nop
00108e   0000     nop                      	nop
001090   0000     nop                      	nop
001092   0000     nop                      	nop
001094   0000     nop                      	nop
001096   0000     nop                      	nop
001098   0000     nop                      	nop
00109a   0000     nop                      	nop
00109c   0000     nop                      	nop
00109e   0000     nop                      	nop
0010a0   0000     nop                      	nop
0010a2   0000     nop                      	nop
0010a4   0000     nop                      	nop
0010a6   0000     nop                      	nop
0010a8   0000     nop                      	nop
0010aa   0000     nop                      	nop
0010ac   0000     nop                      	nop
0010ae   0000     nop                      	nop
0010b0   0000     nop                      	nop
0010b2   0000     nop                      	nop
0010b4   0000     nop                      	nop
0010b6   0000     nop                      	nop
0010b8   0000     nop                      	nop
0010ba   0000     nop                      	nop
0010bc   0000     nop                      	nop
0010be   0000     nop                      	nop
0010c0   0000     nop                      	nop
0010c2   0000     nop                      	nop
0010c4   0000     nop                      	nop
0010c6   0000     nop                      	nop
0010c8   0000     nop                      	nop
0010ca   0000     nop                      	nop
0010cc   0000     nop                      	nop
0010ce   0000     nop                      	nop
0010d0   0000     nop                      	nop
0010d2   0000     nop                      	nop
0010d4   0000     nop                      	nop
0010d6   0000     nop                      	nop
0010d8   0000     nop                      	nop
0010da   0000     nop                      	nop
0010dc   0000     nop                      	nop
0010de   0000     nop                      	nop
0010e0   0000     nop                      	nop
0010e2   0000     nop                      	nop
0010e4   0000     nop                      	nop
0010e6   0000     nop                      	nop
0010e8   0000     nop                      	nop
0010ea   0000     nop                      	nop
0010ec   0000     nop                      	nop
0010ee   0000     nop                      	nop
0010f0   0000     nop                      	nop
0010f2   0000     nop                      	nop
0010f4   0000     nop                      	nop
0010f6   0000     nop                      	nop
0010f8   0000     nop                      	nop
0010fa   0000     nop                      	nop
0010fc   0000     nop                      	nop
0010fe   0000     nop                      	nop
001100   0000     nop                      	nop
001102   0000     nop                      	nop
001104   0000     nop                      	nop
001106   0000     nop                      	nop
001108   0000     nop                      	nop
00110a   0000     nop                      	nop
00110c   0000     nop                      	nop
00110e   0000     nop                      	nop
001110   0000     nop                      	nop
001112   0000     nop                      	nop
001114   0000     nop                      	nop
001116   0000     nop                      	nop
001118   0000     nop                      	nop
00111a   0000     nop                      	nop
00111c   0000     nop                      	nop
00111e   0000     nop                      	nop
001120   0000     nop                      	nop
001122   0000     nop                      	nop
001124   0000     nop                      	nop
001126   0000     nop                      	nop
001128   0000     nop                      	nop
00112a   0000     nop                      	nop
00112c   0000     nop                      	nop
00112e   0000     nop                      	nop
001130   0000     nop                      	nop
001132   0000     nop                      	nop
001134   0000     nop                      	nop
001136   0000     nop                      	nop
001138   0000     nop                      	nop
00113a   0000     nop                      	nop
00113c   0000     nop                      	nop
00113e   0000     nop                      	nop
001140   0000     nop                      	nop
001142   0000     nop                      	nop
001144   0000     nop                      	nop
001146   0000     nop                      	nop
001148   0000     nop                      	nop
00114a   0000     nop                      	nop
00114c   0000     nop                      	nop
00114e   0000     nop                      	nop
001150   0000     nop                      	nop
001152   0000     nop                      	nop
001154   0000     nop                      	nop
001156   0000     nop                      	nop
001158   0000     nop                      	nop
00115a   0000     nop                      	nop
00115c   0000     nop                      	nop
00115e   0000     nop                      	nop
001160   0000     nop                      	nop
001162   0000     nop                      	nop
001164   0000     nop                      	nop
001166   0000     nop                      	nop
001168   0000     nop                      	nop
00116a   0000     nop                      	nop
00116c   0000     nop                      	nop
00116e   0000     nop                      	nop
001170   0000     nop                      	nop
001172   0000     nop                      	nop
001174   0000     nop                      	nop
001176   0000     nop                      	nop
001178   0000     nop                      	nop
00117a   0000     nop                      	nop
00117c   0000     nop                      	nop
00117e   0000     nop                      	nop
001180   0000     nop                      	nop
                                           	
                                           ;	.line	2011; meter_logger.c	PWM_PIN = 1;
001182   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001184   0000     nop                      	nop
001186   0000     nop                      	nop
001188   0000     nop                      	nop
00118a   0000     nop                      	nop
00118c   0000     nop                      	nop
00118e   0000     nop                      	nop
001190   0000     nop                      	nop
001192   0000     nop                      	nop
001194   0000     nop                      	nop
001196   0000     nop                      	nop
001198   0000     nop                      	nop
00119a   0000     nop                      	nop
00119c   0000     nop                      	nop
00119e   0000     nop                      	nop
0011a0   0000     nop                      	nop
0011a2   0000     nop                      	nop
0011a4   0000     nop                      	nop
0011a6   0000     nop                      	nop
0011a8   0000     nop                      	nop
0011aa   0000     nop                      	nop
0011ac   0000     nop                      	nop
0011ae   0000     nop                      	nop
0011b0   0000     nop                      	nop
0011b2   0000     nop                      	nop
0011b4   0000     nop                      	nop
0011b6   0000     nop                      	nop
0011b8   0000     nop                      	nop
0011ba   0000     nop                      	nop
0011bc   0000     nop                      	nop
0011be   0000     nop                      	nop
0011c0   0000     nop                      	nop
0011c2   0000     nop                      	nop
0011c4   0000     nop                      	nop
0011c6   0000     nop                      	nop
0011c8   0000     nop                      	nop
0011ca   0000     nop                      	nop
0011cc   0000     nop                      	nop
0011ce   0000     nop                      	nop
0011d0   0000     nop                      	nop
0011d2   0000     nop                      	nop
0011d4   0000     nop                      	nop
0011d6   0000     nop                      	nop
0011d8   0000     nop                      	nop
0011da   0000     nop                      	nop
0011dc   0000     nop                      	nop
0011de   0000     nop                      	nop
0011e0   0000     nop                      	nop
0011e2   0000     nop                      	nop
0011e4   0000     nop                      	nop
0011e6   0000     nop                      	nop
0011e8   0000     nop                      	nop
0011ea   0000     nop                      	nop
0011ec   0000     nop                      	nop
0011ee   0000     nop                      	nop
0011f0   0000     nop                      	nop
0011f2   0000     nop                      	nop
0011f4   0000     nop                      	nop
0011f6   0000     nop                      	nop
0011f8   0000     nop                      	nop
0011fa   0000     nop                      	nop
0011fc   0000     nop                      	nop
0011fe   0000     nop                      	nop
001200   0000     nop                      	nop
001202   0000     nop                      	nop
001204   0000     nop                      	nop
001206   0000     nop                      	nop
001208   0000     nop                      	nop
00120a   0000     nop                      	nop
00120c   0000     nop                      	nop
00120e   0000     nop                      	nop
001210   0000     nop                      	nop
001212   0000     nop                      	nop
001214   0000     nop                      	nop
001216   0000     nop                      	nop
001218   0000     nop                      	nop
00121a   0000     nop                      	nop
00121c   0000     nop                      	nop
00121e   0000     nop                      	nop
001220   0000     nop                      	nop
001222   0000     nop                      	nop
001224   0000     nop                      	nop
001226   0000     nop                      	nop
001228   0000     nop                      	nop
00122a   0000     nop                      	nop
00122c   0000     nop                      	nop
00122e   0000     nop                      	nop
001230   0000     nop                      	nop
001232   0000     nop                      	nop
001234   0000     nop                      	nop
001236   0000     nop                      	nop
001238   0000     nop                      	nop
00123a   0000     nop                      	nop
00123c   0000     nop                      	nop
00123e   0000     nop                      	nop
001240   0000     nop                      	nop
001242   0000     nop                      	nop
001244   0000     nop                      	nop
001246   0000     nop                      	nop
001248   0000     nop                      	nop
00124a   0000     nop                      	nop
00124c   0000     nop                      	nop
00124e   0000     nop                      	nop
001250   0000     nop                      	nop
001252   0000     nop                      	nop
001254   0000     nop                      	nop
001256   0000     nop                      	nop
001258   0000     nop                      	nop
00125a   0000     nop                      	nop
00125c   0000     nop                      	nop
00125e   0000     nop                      	nop
001260   0000     nop                      	nop
001262   0000     nop                      	nop
001264   0000     nop                      	nop
001266   0000     nop                      	nop
001268   0000     nop                      	nop
00126a   0000     nop                      	nop
00126c   0000     nop                      	nop
00126e   0000     nop                      	nop
001270   0000     nop                      	nop
001272   0000     nop                      	nop
001274   0000     nop                      	nop
001276   0000     nop                      	nop
001278   0000     nop                      	nop
00127a   0000     nop                      	nop
00127c   0000     nop                      	nop
00127e   0000     nop                      	nop
001280   0000     nop                      	nop
001282   0000     nop                      	nop
001284   0000     nop                      	nop
001286   0000     nop                      	nop
001288   0000     nop                      	nop
00128a   0000     nop                      	nop
00128c   0000     nop                      	nop
00128e   0000     nop                      	nop
001290   0000     nop                      	nop
                                           	
                                           ;	.line	2149; meter_logger.c	PWM_PIN = 0;
001292   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001294   0000     nop                      	nop
001296   0000     nop                      	nop
001298   0000     nop                      	nop
00129a   0000     nop                      	nop
00129c   0000     nop                      	nop
00129e   0000     nop                      	nop
0012a0   0000     nop                      	nop
0012a2   0000     nop                      	nop
0012a4   0000     nop                      	nop
0012a6   0000     nop                      	nop
0012a8   0000     nop                      	nop
0012aa   0000     nop                      	nop
0012ac   0000     nop                      	nop
0012ae   0000     nop                      	nop
0012b0   0000     nop                      	nop
0012b2   0000     nop                      	nop
0012b4   0000     nop                      	nop
0012b6   0000     nop                      	nop
0012b8   0000     nop                      	nop
0012ba   0000     nop                      	nop
0012bc   0000     nop                      	nop
0012be   0000     nop                      	nop
0012c0   0000     nop                      	nop
0012c2   0000     nop                      	nop
0012c4   0000     nop                      	nop
0012c6   0000     nop                      	nop
0012c8   0000     nop                      	nop
0012ca   0000     nop                      	nop
0012cc   0000     nop                      	nop
0012ce   0000     nop                      	nop
0012d0   0000     nop                      	nop
0012d2   0000     nop                      	nop
0012d4   0000     nop                      	nop
0012d6   0000     nop                      	nop
0012d8   0000     nop                      	nop
0012da   0000     nop                      	nop
0012dc   0000     nop                      	nop
0012de   0000     nop                      	nop
0012e0   0000     nop                      	nop
0012e2   0000     nop                      	nop
0012e4   0000     nop                      	nop
0012e6   0000     nop                      	nop
0012e8   0000     nop                      	nop
0012ea   0000     nop                      	nop
0012ec   0000     nop                      	nop
0012ee   0000     nop                      	nop
0012f0   0000     nop                      	nop
0012f2   0000     nop                      	nop
0012f4   0000     nop                      	nop
0012f6   0000     nop                      	nop
0012f8   0000     nop                      	nop
0012fa   0000     nop                      	nop
0012fc   0000     nop                      	nop
0012fe   0000     nop                      	nop
001300   0000     nop                      	nop
001302   0000     nop                      	nop
001304   0000     nop                      	nop
001306   0000     nop                      	nop
001308   0000     nop                      	nop
00130a   0000     nop                      	nop
00130c   0000     nop                      	nop
00130e   0000     nop                      	nop
001310   0000     nop                      	nop
001312   0000     nop                      	nop
001314   0000     nop                      	nop
001316   0000     nop                      	nop
001318   0000     nop                      	nop
00131a   0000     nop                      	nop
00131c   0000     nop                      	nop
00131e   0000     nop                      	nop
001320   0000     nop                      	nop
001322   0000     nop                      	nop
001324   0000     nop                      	nop
001326   0000     nop                      	nop
001328   0000     nop                      	nop
00132a   0000     nop                      	nop
00132c   0000     nop                      	nop
00132e   0000     nop                      	nop
001330   0000     nop                      	nop
001332   0000     nop                      	nop
001334   0000     nop                      	nop
001336   0000     nop                      	nop
001338   0000     nop                      	nop
00133a   0000     nop                      	nop
00133c   0000     nop                      	nop
00133e   0000     nop                      	nop
001340   0000     nop                      	nop
001342   0000     nop                      	nop
001344   0000     nop                      	nop
001346   0000     nop                      	nop
001348   0000     nop                      	nop
00134a   0000     nop                      	nop
00134c   0000     nop                      	nop
00134e   0000     nop                      	nop
001350   0000     nop                      	nop
001352   0000     nop                      	nop
001354   0000     nop                      	nop
001356   0000     nop                      	nop
001358   0000     nop                      	nop
00135a   0000     nop                      	nop
00135c   0000     nop                      	nop
00135e   0000     nop                      	nop
001360   0000     nop                      	nop
001362   0000     nop                      	nop
001364   0000     nop                      	nop
001366   0000     nop                      	nop
001368   0000     nop                      	nop
00136a   0000     nop                      	nop
00136c   0000     nop                      	nop
00136e   0000     nop                      	nop
001370   0000     nop                      	nop
001372   0000     nop                      	nop
001374   0000     nop                      	nop
001376   0000     nop                      	nop
001378   0000     nop                      	nop
00137a   0000     nop                      	nop
00137c   0000     nop                      	nop
00137e   0000     nop                      	nop
001380   0000     nop                      	nop
001382   0000     nop                      	nop
001384   0000     nop                      	nop
001386   0000     nop                      	nop
001388   0000     nop                      	nop
00138a   0000     nop                      	nop
00138c   0000     nop                      	nop
00138e   0000     nop                      	nop
001390   0000     nop                      	nop
001392   0000     nop                      	nop
001394   0000     nop                      	nop
001396   0000     nop                      	nop
001398   0000     nop                      	nop
00139a   0000     nop                      	nop
00139c   0000     nop                      	nop
00139e   0000     nop                      	nop
0013a0   0000     nop                      	nop
                                           	
                                           ;	.line	2287; meter_logger.c	PWM_PIN = 1;
0013a2   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
0013a4   0000     nop                      	nop
0013a6   0000     nop                      	nop
0013a8   0000     nop                      	nop
0013aa   0000     nop                      	nop
0013ac   0000     nop                      	nop
0013ae   0000     nop                      	nop
0013b0   0000     nop                      	nop
0013b2   0000     nop                      	nop
0013b4   0000     nop                      	nop
0013b6   0000     nop                      	nop
0013b8   0000     nop                      	nop
0013ba   0000     nop                      	nop
0013bc   0000     nop                      	nop
0013be   0000     nop                      	nop
0013c0   0000     nop                      	nop
0013c2   0000     nop                      	nop
0013c4   0000     nop                      	nop
0013c6   0000     nop                      	nop
0013c8   0000     nop                      	nop
0013ca   0000     nop                      	nop
0013cc   0000     nop                      	nop
0013ce   0000     nop                      	nop
0013d0   0000     nop                      	nop
0013d2   0000     nop                      	nop
0013d4   0000     nop                      	nop
0013d6   0000     nop                      	nop
0013d8   0000     nop                      	nop
0013da   0000     nop                      	nop
0013dc   0000     nop                      	nop
0013de   0000     nop                      	nop
0013e0   0000     nop                      	nop
0013e2   0000     nop                      	nop
0013e4   0000     nop                      	nop
0013e6   0000     nop                      	nop
0013e8   0000     nop                      	nop
0013ea   0000     nop                      	nop
0013ec   0000     nop                      	nop
0013ee   0000     nop                      	nop
0013f0   0000     nop                      	nop
0013f2   0000     nop                      	nop
0013f4   0000     nop                      	nop
0013f6   0000     nop                      	nop
0013f8   0000     nop                      	nop
0013fa   0000     nop                      	nop
0013fc   0000     nop                      	nop
0013fe   0000     nop                      	nop
001400   0000     nop                      	nop
001402   0000     nop                      	nop
001404   0000     nop                      	nop
001406   0000     nop                      	nop
001408   0000     nop                      	nop
00140a   0000     nop                      	nop
00140c   0000     nop                      	nop
00140e   0000     nop                      	nop
001410   0000     nop                      	nop
001412   0000     nop                      	nop
001414   0000     nop                      	nop
001416   0000     nop                      	nop
001418   0000     nop                      	nop
00141a   0000     nop                      	nop
00141c   0000     nop                      	nop
00141e   0000     nop                      	nop
001420   0000     nop                      	nop
001422   0000     nop                      	nop
001424   0000     nop                      	nop
001426   0000     nop                      	nop
001428   0000     nop                      	nop
00142a   0000     nop                      	nop
00142c   0000     nop                      	nop
00142e   0000     nop                      	nop
001430   0000     nop                      	nop
001432   0000     nop                      	nop
001434   0000     nop                      	nop
001436   0000     nop                      	nop
001438   0000     nop                      	nop
00143a   0000     nop                      	nop
00143c   0000     nop                      	nop
00143e   0000     nop                      	nop
001440   0000     nop                      	nop
001442   0000     nop                      	nop
001444   0000     nop                      	nop
001446   0000     nop                      	nop
001448   0000     nop                      	nop
00144a   0000     nop                      	nop
00144c   0000     nop                      	nop
00144e   0000     nop                      	nop
001450   0000     nop                      	nop
001452   0000     nop                      	nop
001454   0000     nop                      	nop
001456   0000     nop                      	nop
001458   0000     nop                      	nop
00145a   0000     nop                      	nop
00145c   0000     nop                      	nop
00145e   0000     nop                      	nop
001460   0000     nop                      	nop
001462   0000     nop                      	nop
001464   0000     nop                      	nop
001466   0000     nop                      	nop
001468   0000     nop                      	nop
00146a   0000     nop                      	nop
00146c   0000     nop                      	nop
00146e   0000     nop                      	nop
001470   0000     nop                      	nop
001472   0000     nop                      	nop
001474   0000     nop                      	nop
001476   0000     nop                      	nop
001478   0000     nop                      	nop
00147a   0000     nop                      	nop
00147c   0000     nop                      	nop
00147e   0000     nop                      	nop
001480   0000     nop                      	nop
001482   0000     nop                      	nop
001484   0000     nop                      	nop
001486   0000     nop                      	nop
001488   0000     nop                      	nop
00148a   0000     nop                      	nop
00148c   0000     nop                      	nop
00148e   0000     nop                      	nop
001490   0000     nop                      	nop
001492   0000     nop                      	nop
001494   0000     nop                      	nop
001496   0000     nop                      	nop
001498   0000     nop                      	nop
00149a   0000     nop                      	nop
00149c   0000     nop                      	nop
00149e   0000     nop                      	nop
0014a0   0000     nop                      	nop
0014a2   0000     nop                      	nop
0014a4   0000     nop                      	nop
0014a6   0000     nop                      	nop
0014a8   0000     nop                      	nop
0014aa   0000     nop                      	nop
0014ac   0000     nop                      	nop
0014ae   0000     nop                      	nop
0014b0   0000     nop                      	nop
                                           	
                                           ;	.line	2425; meter_logger.c	PWM_PIN = 0;
0014b2   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
0014b4   0000     nop                      	nop
0014b6   0000     nop                      	nop
0014b8   0000     nop                      	nop
0014ba   0000     nop                      	nop
0014bc   0000     nop                      	nop
0014be   0000     nop                      	nop
0014c0   0000     nop                      	nop
0014c2   0000     nop                      	nop
0014c4   0000     nop                      	nop
0014c6   0000     nop                      	nop
0014c8   0000     nop                      	nop
0014ca   0000     nop                      	nop
0014cc   0000     nop                      	nop
0014ce   0000     nop                      	nop
0014d0   0000     nop                      	nop
0014d2   0000     nop                      	nop
0014d4   0000     nop                      	nop
0014d6   0000     nop                      	nop
0014d8   0000     nop                      	nop
0014da   0000     nop                      	nop
0014dc   0000     nop                      	nop
0014de   0000     nop                      	nop
0014e0   0000     nop                      	nop
0014e2   0000     nop                      	nop
0014e4   0000     nop                      	nop
0014e6   0000     nop                      	nop
0014e8   0000     nop                      	nop
0014ea   0000     nop                      	nop
0014ec   0000     nop                      	nop
0014ee   0000     nop                      	nop
0014f0   0000     nop                      	nop
0014f2   0000     nop                      	nop
0014f4   0000     nop                      	nop
0014f6   0000     nop                      	nop
0014f8   0000     nop                      	nop
0014fa   0000     nop                      	nop
0014fc   0000     nop                      	nop
0014fe   0000     nop                      	nop
001500   0000     nop                      	nop
001502   0000     nop                      	nop
001504   0000     nop                      	nop
001506   0000     nop                      	nop
001508   0000     nop                      	nop
00150a   0000     nop                      	nop
00150c   0000     nop                      	nop
00150e   0000     nop                      	nop
001510   0000     nop                      	nop
001512   0000     nop                      	nop
001514   0000     nop                      	nop
001516   0000     nop                      	nop
001518   0000     nop                      	nop
00151a   0000     nop                      	nop
00151c   0000     nop                      	nop
00151e   0000     nop                      	nop
001520   0000     nop                      	nop
001522   0000     nop                      	nop
001524   0000     nop                      	nop
001526   0000     nop                      	nop
001528   0000     nop                      	nop
00152a   0000     nop                      	nop
00152c   0000     nop                      	nop
00152e   0000     nop                      	nop
001530   0000     nop                      	nop
001532   0000     nop                      	nop
001534   0000     nop                      	nop
001536   0000     nop                      	nop
001538   0000     nop                      	nop
00153a   0000     nop                      	nop
00153c   0000     nop                      	nop
00153e   0000     nop                      	nop
001540   0000     nop                      	nop
001542   0000     nop                      	nop
001544   0000     nop                      	nop
001546   0000     nop                      	nop
001548   0000     nop                      	nop
00154a   0000     nop                      	nop
00154c   0000     nop                      	nop
00154e   0000     nop                      	nop
001550   0000     nop                      	nop
001552   0000     nop                      	nop
001554   0000     nop                      	nop
001556   0000     nop                      	nop
001558   0000     nop                      	nop
00155a   0000     nop                      	nop
00155c   0000     nop                      	nop
00155e   0000     nop                      	nop
001560   0000     nop                      	nop
001562   0000     nop                      	nop
001564   0000     nop                      	nop
001566   0000     nop                      	nop
001568   0000     nop                      	nop
00156a   0000     nop                      	nop
00156c   0000     nop                      	nop
00156e   0000     nop                      	nop
001570   0000     nop                      	nop
001572   0000     nop                      	nop
001574   0000     nop                      	nop
001576   0000     nop                      	nop
001578   0000     nop                      	nop
00157a   0000     nop                      	nop
00157c   0000     nop                      	nop
00157e   0000     nop                      	nop
001580   0000     nop                      	nop
001582   0000     nop                      	nop
001584   0000     nop                      	nop
001586   0000     nop                      	nop
001588   0000     nop                      	nop
00158a   0000     nop                      	nop
00158c   0000     nop                      	nop
00158e   0000     nop                      	nop
001590   0000     nop                      	nop
001592   0000     nop                      	nop
001594   0000     nop                      	nop
001596   0000     nop                      	nop
001598   0000     nop                      	nop
00159a   0000     nop                      	nop
00159c   0000     nop                      	nop
00159e   0000     nop                      	nop
0015a0   0000     nop                      	nop
0015a2   0000     nop                      	nop
0015a4   0000     nop                      	nop
0015a6   0000     nop                      	nop
0015a8   0000     nop                      	nop
0015aa   0000     nop                      	nop
0015ac   0000     nop                      	nop
0015ae   0000     nop                      	nop
0015b0   0000     nop                      	nop
0015b2   0000     nop                      	nop
0015b4   0000     nop                      	nop
0015b6   0000     nop                      	nop
0015b8   0000     nop                      	nop
0015ba   0000     nop                      	nop
0015bc   0000     nop                      	nop
0015be   0000     nop                      	nop
0015c0   0000     nop                      	nop
                                           	
                                           ;	.line	2563; meter_logger.c	PWM_PIN = 1;
0015c2   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
0015c4   0000     nop                      	nop
0015c6   0000     nop                      	nop
0015c8   0000     nop                      	nop
0015ca   0000     nop                      	nop
0015cc   0000     nop                      	nop
0015ce   0000     nop                      	nop
0015d0   0000     nop                      	nop
0015d2   0000     nop                      	nop
0015d4   0000     nop                      	nop
0015d6   0000     nop                      	nop
0015d8   0000     nop                      	nop
0015da   0000     nop                      	nop
0015dc   0000     nop                      	nop
0015de   0000     nop                      	nop
0015e0   0000     nop                      	nop
0015e2   0000     nop                      	nop
0015e4   0000     nop                      	nop
0015e6   0000     nop                      	nop
0015e8   0000     nop                      	nop
0015ea   0000     nop                      	nop
0015ec   0000     nop                      	nop
0015ee   0000     nop                      	nop
0015f0   0000     nop                      	nop
0015f2   0000     nop                      	nop
0015f4   0000     nop                      	nop
0015f6   0000     nop                      	nop
0015f8   0000     nop                      	nop
0015fa   0000     nop                      	nop
0015fc   0000     nop                      	nop
0015fe   0000     nop                      	nop
001600   0000     nop                      	nop
001602   0000     nop                      	nop
001604   0000     nop                      	nop
001606   0000     nop                      	nop
001608   0000     nop                      	nop
00160a   0000     nop                      	nop
00160c   0000     nop                      	nop
00160e   0000     nop                      	nop
001610   0000     nop                      	nop
001612   0000     nop                      	nop
001614   0000     nop                      	nop
001616   0000     nop                      	nop
001618   0000     nop                      	nop
00161a   0000     nop                      	nop
00161c   0000     nop                      	nop
00161e   0000     nop                      	nop
001620   0000     nop                      	nop
001622   0000     nop                      	nop
001624   0000     nop                      	nop
001626   0000     nop                      	nop
001628   0000     nop                      	nop
00162a   0000     nop                      	nop
00162c   0000     nop                      	nop
00162e   0000     nop                      	nop
001630   0000     nop                      	nop
001632   0000     nop                      	nop
001634   0000     nop                      	nop
001636   0000     nop                      	nop
001638   0000     nop                      	nop
00163a   0000     nop                      	nop
00163c   0000     nop                      	nop
00163e   0000     nop                      	nop
001640   0000     nop                      	nop
001642   0000     nop                      	nop
001644   0000     nop                      	nop
001646   0000     nop                      	nop
001648   0000     nop                      	nop
00164a   0000     nop                      	nop
00164c   0000     nop                      	nop
00164e   0000     nop                      	nop
001650   0000     nop                      	nop
001652   0000     nop                      	nop
001654   0000     nop                      	nop
001656   0000     nop                      	nop
001658   0000     nop                      	nop
00165a   0000     nop                      	nop
00165c   0000     nop                      	nop
00165e   0000     nop                      	nop
001660   0000     nop                      	nop
001662   0000     nop                      	nop
001664   0000     nop                      	nop
001666   0000     nop                      	nop
001668   0000     nop                      	nop
00166a   0000     nop                      	nop
00166c   0000     nop                      	nop
00166e   0000     nop                      	nop
001670   0000     nop                      	nop
001672   0000     nop                      	nop
001674   0000     nop                      	nop
001676   0000     nop                      	nop
001678   0000     nop                      	nop
00167a   0000     nop                      	nop
00167c   0000     nop                      	nop
00167e   0000     nop                      	nop
001680   0000     nop                      	nop
001682   0000     nop                      	nop
001684   0000     nop                      	nop
001686   0000     nop                      	nop
001688   0000     nop                      	nop
00168a   0000     nop                      	nop
00168c   0000     nop                      	nop
00168e   0000     nop                      	nop
001690   0000     nop                      	nop
001692   0000     nop                      	nop
001694   0000     nop                      	nop
001696   0000     nop                      	nop
001698   0000     nop                      	nop
00169a   0000     nop                      	nop
00169c   0000     nop                      	nop
00169e   0000     nop                      	nop
0016a0   0000     nop                      	nop
0016a2   0000     nop                      	nop
0016a4   0000     nop                      	nop
0016a6   0000     nop                      	nop
0016a8   0000     nop                      	nop
0016aa   0000     nop                      	nop
0016ac   0000     nop                      	nop
0016ae   0000     nop                      	nop
0016b0   0000     nop                      	nop
0016b2   0000     nop                      	nop
0016b4   0000     nop                      	nop
0016b6   0000     nop                      	nop
0016b8   0000     nop                      	nop
0016ba   0000     nop                      	nop
0016bc   0000     nop                      	nop
0016be   0000     nop                      	nop
0016c0   0000     nop                      	nop
0016c2   0000     nop                      	nop
0016c4   0000     nop                      	nop
0016c6   0000     nop                      	nop
0016c8   0000     nop                      	nop
0016ca   0000     nop                      	nop
0016cc   0000     nop                      	nop
0016ce   0000     nop                      	nop
0016d0   0000     nop                      	nop
                                           	
                                           ;	.line	2701; meter_logger.c	PWM_PIN = 0;
0016d2   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
0016d4   0000     nop                      	nop
0016d6   0000     nop                      	nop
0016d8   0000     nop                      	nop
0016da   0000     nop                      	nop
0016dc   0000     nop                      	nop
0016de   0000     nop                      	nop
0016e0   0000     nop                      	nop
0016e2   0000     nop                      	nop
0016e4   0000     nop                      	nop
0016e6   0000     nop                      	nop
0016e8   0000     nop                      	nop
0016ea   0000     nop                      	nop
0016ec   0000     nop                      	nop
0016ee   0000     nop                      	nop
0016f0   0000     nop                      	nop
0016f2   0000     nop                      	nop
0016f4   0000     nop                      	nop
0016f6   0000     nop                      	nop
0016f8   0000     nop                      	nop
0016fa   0000     nop                      	nop
0016fc   0000     nop                      	nop
0016fe   0000     nop                      	nop
001700   0000     nop                      	nop
001702   0000     nop                      	nop
001704   0000     nop                      	nop
001706   0000     nop                      	nop
001708   0000     nop                      	nop
00170a   0000     nop                      	nop
00170c   0000     nop                      	nop
00170e   0000     nop                      	nop
001710   0000     nop                      	nop
001712   0000     nop                      	nop
001714   0000     nop                      	nop
001716   0000     nop                      	nop
001718   0000     nop                      	nop
00171a   0000     nop                      	nop
00171c   0000     nop                      	nop
00171e   0000     nop                      	nop
001720   0000     nop                      	nop
001722   0000     nop                      	nop
001724   0000     nop                      	nop
001726   0000     nop                      	nop
001728   0000     nop                      	nop
00172a   0000     nop                      	nop
00172c   0000     nop                      	nop
00172e   0000     nop                      	nop
001730   0000     nop                      	nop
001732   0000     nop                      	nop
001734   0000     nop                      	nop
001736   0000     nop                      	nop
001738   0000     nop                      	nop
00173a   0000     nop                      	nop
00173c   0000     nop                      	nop
00173e   0000     nop                      	nop
001740   0000     nop                      	nop
001742   0000     nop                      	nop
001744   0000     nop                      	nop
001746   0000     nop                      	nop
001748   0000     nop                      	nop
00174a   0000     nop                      	nop
00174c   0000     nop                      	nop
00174e   0000     nop                      	nop
001750   0000     nop                      	nop
001752   0000     nop                      	nop
001754   0000     nop                      	nop
001756   0000     nop                      	nop
001758   0000     nop                      	nop
00175a   0000     nop                      	nop
00175c   0000     nop                      	nop
00175e   0000     nop                      	nop
001760   0000     nop                      	nop
001762   0000     nop                      	nop
001764   0000     nop                      	nop
001766   0000     nop                      	nop
001768   0000     nop                      	nop
00176a   0000     nop                      	nop
00176c   0000     nop                      	nop
00176e   0000     nop                      	nop
001770   0000     nop                      	nop
001772   0000     nop                      	nop
001774   0000     nop                      	nop
001776   0000     nop                      	nop
001778   0000     nop                      	nop
00177a   0000     nop                      	nop
00177c   0000     nop                      	nop
00177e   0000     nop                      	nop
001780   0000     nop                      	nop
001782   0000     nop                      	nop
001784   0000     nop                      	nop
001786   0000     nop                      	nop
001788   0000     nop                      	nop
00178a   0000     nop                      	nop
00178c   0000     nop                      	nop
00178e   0000     nop                      	nop
001790   0000     nop                      	nop
001792   0000     nop                      	nop
001794   0000     nop                      	nop
001796   0000     nop                      	nop
001798   0000     nop                      	nop
00179a   0000     nop                      	nop
00179c   0000     nop                      	nop
00179e   0000     nop                      	nop
0017a0   0000     nop                      	nop
0017a2   0000     nop                      	nop
0017a4   0000     nop                      	nop
0017a6   0000     nop                      	nop
0017a8   0000     nop                      	nop
0017aa   0000     nop                      	nop
0017ac   0000     nop                      	nop
0017ae   0000     nop                      	nop
0017b0   0000     nop                      	nop
0017b2   0000     nop                      	nop
0017b4   0000     nop                      	nop
0017b6   0000     nop                      	nop
0017b8   0000     nop                      	nop
0017ba   0000     nop                      	nop
0017bc   0000     nop                      	nop
0017be   0000     nop                      	nop
0017c0   0000     nop                      	nop
0017c2   0000     nop                      	nop
0017c4   0000     nop                      	nop
0017c6   0000     nop                      	nop
0017c8   0000     nop                      	nop
0017ca   0000     nop                      	nop
0017cc   0000     nop                      	nop
0017ce   0000     nop                      	nop
0017d0   0000     nop                      	nop
0017d2   0000     nop                      	nop
0017d4   0000     nop                      	nop
0017d6   0000     nop                      	nop
0017d8   0000     nop                      	nop
0017da   0000     nop                      	nop
0017dc   0000     nop                      	nop
0017de   0000     nop                      	nop
0017e0   0000     nop                      	nop
                                           	
                                           ;	.line	2839; meter_logger.c	PWM_PIN = 1;
0017e2   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
0017e4   0000     nop                      	nop
0017e6   0000     nop                      	nop
0017e8   0000     nop                      	nop
0017ea   0000     nop                      	nop
0017ec   0000     nop                      	nop
0017ee   0000     nop                      	nop
0017f0   0000     nop                      	nop
0017f2   0000     nop                      	nop
0017f4   0000     nop                      	nop
0017f6   0000     nop                      	nop
0017f8   0000     nop                      	nop
0017fa   0000     nop                      	nop
0017fc   0000     nop                      	nop
0017fe   0000     nop                      	nop
001800   0000     nop                      	nop
001802   0000     nop                      	nop
001804   0000     nop                      	nop
001806   0000     nop                      	nop
001808   0000     nop                      	nop
00180a   0000     nop                      	nop
00180c   0000     nop                      	nop
00180e   0000     nop                      	nop
001810   0000     nop                      	nop
001812   0000     nop                      	nop
001814   0000     nop                      	nop
001816   0000     nop                      	nop
001818   0000     nop                      	nop
00181a   0000     nop                      	nop
00181c   0000     nop                      	nop
00181e   0000     nop                      	nop
001820   0000     nop                      	nop
001822   0000     nop                      	nop
001824   0000     nop                      	nop
001826   0000     nop                      	nop
001828   0000     nop                      	nop
00182a   0000     nop                      	nop
00182c   0000     nop                      	nop
00182e   0000     nop                      	nop
001830   0000     nop                      	nop
001832   0000     nop                      	nop
001834   0000     nop                      	nop
001836   0000     nop                      	nop
001838   0000     nop                      	nop
00183a   0000     nop                      	nop
00183c   0000     nop                      	nop
00183e   0000     nop                      	nop
001840   0000     nop                      	nop
001842   0000     nop                      	nop
001844   0000     nop                      	nop
001846   0000     nop                      	nop
001848   0000     nop                      	nop
00184a   0000     nop                      	nop
00184c   0000     nop                      	nop
00184e   0000     nop                      	nop
001850   0000     nop                      	nop
001852   0000     nop                      	nop
001854   0000     nop                      	nop
001856   0000     nop                      	nop
001858   0000     nop                      	nop
00185a   0000     nop                      	nop
00185c   0000     nop                      	nop
00185e   0000     nop                      	nop
001860   0000     nop                      	nop
001862   0000     nop                      	nop
001864   0000     nop                      	nop
001866   0000     nop                      	nop
001868   0000     nop                      	nop
00186a   0000     nop                      	nop
00186c   0000     nop                      	nop
00186e   0000     nop                      	nop
001870   0000     nop                      	nop
001872   0000     nop                      	nop
001874   0000     nop                      	nop
001876   0000     nop                      	nop
001878   0000     nop                      	nop
00187a   0000     nop                      	nop
00187c   0000     nop                      	nop
00187e   0000     nop                      	nop
001880   0000     nop                      	nop
001882   0000     nop                      	nop
001884   0000     nop                      	nop
001886   0000     nop                      	nop
001888   0000     nop                      	nop
00188a   0000     nop                      	nop
00188c   0000     nop                      	nop
00188e   0000     nop                      	nop
001890   0000     nop                      	nop
001892   0000     nop                      	nop
001894   0000     nop                      	nop
001896   0000     nop                      	nop
001898   0000     nop                      	nop
00189a   0000     nop                      	nop
00189c   0000     nop                      	nop
00189e   0000     nop                      	nop
0018a0   0000     nop                      	nop
0018a2   0000     nop                      	nop
0018a4   0000     nop                      	nop
0018a6   0000     nop                      	nop
0018a8   0000     nop                      	nop
0018aa   0000     nop                      	nop
0018ac   0000     nop                      	nop
0018ae   0000     nop                      	nop
0018b0   0000     nop                      	nop
0018b2   0000     nop                      	nop
0018b4   0000     nop                      	nop
0018b6   0000     nop                      	nop
0018b8   0000     nop                      	nop
0018ba   0000     nop                      	nop
0018bc   0000     nop                      	nop
0018be   0000     nop                      	nop
0018c0   0000     nop                      	nop
0018c2   0000     nop                      	nop
0018c4   0000     nop                      	nop
0018c6   0000     nop                      	nop
0018c8   0000     nop                      	nop
0018ca   0000     nop                      	nop
0018cc   0000     nop                      	nop
0018ce   0000     nop                      	nop
0018d0   0000     nop                      	nop
0018d2   0000     nop                      	nop
0018d4   0000     nop                      	nop
0018d6   0000     nop                      	nop
0018d8   0000     nop                      	nop
0018da   0000     nop                      	nop
0018dc   0000     nop                      	nop
0018de   0000     nop                      	nop
0018e0   0000     nop                      	nop
0018e2   0000     nop                      	nop
0018e4   0000     nop                      	nop
0018e6   0000     nop                      	nop
0018e8   0000     nop                      	nop
0018ea   0000     nop                      	nop
0018ec   0000     nop                      	nop
0018ee   0000     nop                      	nop
0018f0   0000     nop                      	nop
                                           	
                                           ;	.line	2977; meter_logger.c	PWM_PIN = 0;
0018f2   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
0018f4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0018f6   ffd9
0018f8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_rx_disable	code
                                           _fsk_rx_disable:
                                           ;	.line	1453; meter_logger.c	void fsk_rx_disable() {
005380   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005382   ffe5
005384   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005386   ffd9
                                           ;	.line	1454; meter_logger.c	PIE2bits.CMIE = 0;		// Disable comparator interrupt
005388   9ca0     bcf     0xa0, 0x6, 0     	BCF	_PIE2bits, 6
00538a   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1455; meter_logger.c	codec_type = NONE;
00538c   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
00538e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005390   ffd9
005392   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_rx_enable	code
                                           _fsk_rx_enable:
                                           ;	.line	1417; meter_logger.c	void fsk_rx_enable() {
004d7a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004d7c   ffe5
004d7e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004d80   ffd9
                                           ;	.line	1418; meter_logger.c	fsk_proto.state = START_BIT_WAIT;
004d82   0e02     movlw   0x2              	MOVLW	0x02
004d84   0105     movlb   0x5              	BANKSEL	_fsk_proto
004d86   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1419; meter_logger.c	fsk_proto.start_bit_time = 0;
004d88   6b0a     clrf    0xa, 0x1         	CLRF	(_fsk_proto + 10), B
                                           ; removed redundant BANKSEL
004d8a   6b0b     clrf    0xb, 0x1         	CLRF	(_fsk_proto + 11), B
                                           ;	.line	1421; meter_logger.c	timer0_reload = TIMER0_FSK;
004d8c   0e9f     movlw   0x9f             	MOVLW	0x9f
004d8e   0105     movlb   0x5              	BANKSEL	_timer0_reload
004d90   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
004d92   0ef9     movlw   0xf9             	MOVLW	0xf9
                                           ; removed redundant BANKSEL
004d94   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
                                           ;	.line	1423; meter_logger.c	codec_type = FSK_RX;
004d96   0e06     movlw   0x6              	MOVLW	0x06
004d98   0105     movlb   0x5              	BANKSEL	_codec_type
004d9a   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1426; meter_logger.c	T0CONbits.TMR0ON = 1;
004d9c   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1427; meter_logger.c	T0CONbits.T0PS0 = 0;
004d9e   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1428; meter_logger.c	T0CONbits.T0PS1 = 0;
004da0   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1429; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004da2   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1430; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004da4   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1431; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004da6   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1432; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004da8   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1433; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004daa   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1434; meter_logger.c	INTCONbits.TMR0IE = 0;		// Dont enable TMR0 Interrupt
004dac   9af2     bcf     0xf2, 0x5, 0     	BCF	_INTCONbits, 5
                                           ;	.line	1437; meter_logger.c	CVRCONbits.CVREF = 0xf;	// 0V
004dae   88b5     bsf     0xb5, 0x4, 0     	BSF	_CVRCONbits, 4
                                           ;	.line	1439; meter_logger.c	CVRCONbits.CVRSS = 0;	// VDD – VSS
004db0   98b5     bcf     0xb5, 0x4, 0     	BCF	_CVRCONbits, 4
                                           ;	.line	1440; meter_logger.c	CVRCONbits.CVRR = 0;	// high range, 0.25 CVRSRC to 0.75 CVRSRC, with CVRSRC/32 step size
004db2   9ab5     bcf     0xb5, 0x5, 0     	BCF	_CVRCONbits, 5
                                           ;	.line	1441; meter_logger.c	CVRCONbits.CVR = 9;		// 2,65625 V
004db4   50b5     movf    0xb5, 0, 0       	MOVF	_CVRCONbits, W
004db6   0bf0     andlw   0xf0             	ANDLW	0xf0
004db8   0909     iorlw   0x9              	IORLW	0x09
004dba   6eb5     movwf   0xb5, 0          	MOVWF	_CVRCONbits
                                           ;	.line	1442; meter_logger.c	CVRCONbits.CVROE = 0;	// Comparator VREF Output disabled, CVREF voltage is disconnected from the RA2/AN2/VREF-/CVREF pin
004dbc   9cb5     bcf     0xb5, 0x6, 0     	BCF	_CVRCONbits, 6
                                           ;	.line	1443; meter_logger.c	CVRCONbits.CVREN = 1;	// Comparator Voltage Reference Enable bit
004dbe   8eb5     bsf     0xb5, 0x7, 0     	BSF	_CVRCONbits, 7
                                           ;	.line	1445; meter_logger.c	CMCONbits.CM = 0x6;		// four inputs multiplexed to two comparators
004dc0   50b4     movf    0xb4, 0, 0       	MOVF	_CMCONbits, W
004dc2   0bf8     andlw   0xf8             	ANDLW	0xf8
004dc4   0906     iorlw   0x6              	IORLW	0x06
004dc6   6eb4     movwf   0xb4, 0          	MOVWF	_CMCONbits
                                           ;	.line	1446; meter_logger.c	CMCONbits.CIS = 0;		// multiplexed to RA0/AN0 and RA1/AN1
004dc8   96b4     bcf     0xb4, 0x3, 0     	BCF	_CMCONbits, 3
                                           ;	.line	1447; meter_logger.c	CMCONbits.C1INV = 1;	// inverted output, C1 VIN+ < C1 VIN-
004dca   88b4     bsf     0xb4, 0x4, 0     	BSF	_CMCONbits, 4
                                           ;	.line	1449; meter_logger.c	IPR2bits.CMIP = 1;		// high priority
004dcc   8ca2     bsf     0xa2, 0x6, 0     	BSF	_IPR2bits, 6
                                           ;	.line	1450; meter_logger.c	PIE2bits.CMIE = 1;		// Enable comparator interrupt
004dce   8ca0     bsf     0xa0, 0x6, 0     	BSF	_PIE2bits, 6
004dd0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004dd2   ffd9
004dd4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_disable	code
                                           _fsk_tx_disable:
                                           ;	.line	1411; meter_logger.c	void fsk_tx_disable() {
0052fc   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0052fe   ffe5
005300   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005302   ffd9
005304   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1412; meter_logger.c	codec_type = NONE;
005306   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1413; meter_logger.c	T0CONbits.TMR0ON = 0;	// Disable TMR0 
005308   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1414; meter_logger.c	PIE2bits.CMIE = 1;		// Disable comparator interrupt
00530a   8ca0     bsf     0xa0, 0x6, 0     	BSF	_PIE2bits, 6
00530c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00530e   ffd9
005310   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_enable	code
                                           _fsk_tx_enable:
                                           ;	.line	1393; meter_logger.c	void fsk_tx_enable() {
00504c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00504e   ffe5
005050   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005052   ffd9
                                           ;	.line	1394; meter_logger.c	timer0_reload = TIMER0_FSK;
005054   0e9f     movlw   0x9f             	MOVLW	0x9f
005056   0105     movlb   0x5              	BANKSEL	_timer0_reload
005058   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
00505a   0ef9     movlw   0xf9             	MOVLW	0xf9
                                           ; removed redundant BANKSEL
00505c   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
00505e   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	1396; meter_logger.c	fsk_proto.state = INIT_STATE;
005060   6b00     clrf    0, 0x1           	CLRF	_fsk_proto, B
                                           ;	.line	1397; meter_logger.c	codec_type = FSK_TX;
005062   0e07     movlw   0x7              	MOVLW	0x07
005064   0105     movlb   0x5              	BANKSEL	_codec_type
005066   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1400; meter_logger.c	T0CONbits.TMR0ON = 1;
005068   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1401; meter_logger.c	T0CONbits.T0PS0 = 0;
00506a   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1402; meter_logger.c	T0CONbits.T0PS1 = 0;
00506c   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1403; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
00506e   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1404; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
005070   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1405; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
005072   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1406; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
005074   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1407; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
005076   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1408; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
005078   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
00507a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00507c   ffd9
00507e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_tx_byte	code
                                           _rs232_7e1_tx_byte:
                                           ;	.line	1383; meter_logger.c	void rs232_7e1_tx_byte(unsigned char c) {
005080   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005082   ffe5
005084   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005086   ffd9
005088   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00508a   ffe5
00508c   0e02     movlw   0x2              	MOVLW	0x02
00508e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
005090   f000
                                           ;	.line	1384; meter_logger.c	rs232_proto.data = c;
005092   5000     movf    0, 0, 0          	MOVF	r0x00, W
005094   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
005096   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	1385; meter_logger.c	rs232_proto.data_len = 7;
005098   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
00509a   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	1386; meter_logger.c	T0CONbits.TMR0ON = 1;		// start timer 0
00509c   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1387; meter_logger.c	INTCONbits.TMR0IF = 1;		// enter timer interrupt handler now
00509e   84f2     bsf     0xf2, 0x2, 0     	BSF	_INTCONbits, 2
                                           _01030_DS_:
0050a0   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	1388; meter_logger.c	while (rs232_proto.data_len) {
0050a2   5126     movf    0x26, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
0050a4   e1fd     bnz     0x50a0           	BNZ	_01030_DS_
0050a6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0050a8   f000
0050aa   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0050ac   ffd9
0050ae   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_rx_disable	code
                                           _rs232_7e1_rx_disable:
                                           ;	.line	1377; meter_logger.c	void rs232_7e1_rx_disable() {
005312   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005314   ffe5
005316   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005318   ffd9
                                           ;	.line	1378; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
00531a   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
00531c   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1379; meter_logger.c	codec_type = NONE;
00531e   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1380; meter_logger.c	T0CONbits.TMR0ON = 0;
005320   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
005322   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005324   ffd9
005326   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_rx_enable	code
                                           _rs232_7e1_rx_enable:
                                           ;	.line	1353; meter_logger.c	void rs232_7e1_rx_enable(unsigned int t) {
004e2c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004e2e   ffe5
004e30   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004e32   ffd9
004e34   0e02     movlw   0x2              	MOVLW	0x02
004e36   cfdb     movff   0xfdb, 0x548     	MOVFF	PLUSW2, _timer0_reload
004e38   f548
004e3a   0e03     movlw   0x3              	MOVLW	0x03
004e3c   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, (_timer0_reload + 1)
004e3e   f549
                                           ;	.line	1354; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
004e40   0e02     movlw   0x2              	MOVLW	0x02
004e42   0105     movlb   0x5              	BANKSEL	_rs232_proto
004e44   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1355; meter_logger.c	rs232_proto.data_len = 0;
004e46   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1359; meter_logger.c	codec_type = RS232_7E1_RX;
004e48   0e04     movlw   0x4              	MOVLW	0x04
004e4a   0105     movlb   0x5              	BANKSEL	_codec_type
004e4c   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1362; meter_logger.c	T0CONbits.TMR0ON = 0;
004e4e   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1363; meter_logger.c	T0CONbits.T0PS0 = 0;
004e50   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1364; meter_logger.c	T0CONbits.T0PS1 = 0;
004e52   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1365; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004e54   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1366; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004e56   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1367; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004e58   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1368; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004e5a   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1369; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004e5c   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1370; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004e5e   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1371; meter_logger.c	INTCONbits.TMR0IF = 0;
004e60   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1373; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
004e62   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1374; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004e64   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
004e66   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004e68   ffd9
004e6a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_tx_disable	code
                                           _rs232_7e1_tx_disable:
                                           ;	.line	1347; meter_logger.c	void rs232_7e1_tx_disable() {
005328   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00532a   ffe5
00532c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00532e   ffd9
005330   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1348; meter_logger.c	codec_type = NONE;
005332   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1349; meter_logger.c	IR_LED_PIN = 0;				// no need to set it to inverted idle
005334   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1350; meter_logger.c	T0CONbits.TMR0ON = 0;
005336   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
005338   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00533a   ffd9
00533c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_tx_enable	code
                                           _rs232_7e1_tx_enable:
                                           ;	.line	1321; meter_logger.c	void rs232_7e1_tx_enable(unsigned int t) {
004eec   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004eee   ffe5
004ef0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004ef2   ffd9
004ef4   0e02     movlw   0x2              	MOVLW	0x02
004ef6   cfdb     movff   0xfdb, 0x548     	MOVFF	PLUSW2, _timer0_reload
004ef8   f548
004efa   0e03     movlw   0x3              	MOVLW	0x03
004efc   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, (_timer0_reload + 1)
004efe   f549
004f00   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	1324; meter_logger.c	rs232_proto.state = INIT_STATE;
004f02   6b23     clrf    0x23, 0x1        	CLRF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1325; meter_logger.c	rs232_proto.data_len = 0;
004f04   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1327; meter_logger.c	IR_LED_PIN = 0;				// inverted rs232 output on ir, idle = no ir light
004f06   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1329; meter_logger.c	codec_type = RS232_7E1_TX;
004f08   0e05     movlw   0x5              	MOVLW	0x05
004f0a   0105     movlb   0x5              	BANKSEL	_codec_type
004f0c   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1332; meter_logger.c	T0CONbits.TMR0ON = 0;
004f0e   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1333; meter_logger.c	T0CONbits.T0PS0 = 0;
004f10   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1334; meter_logger.c	T0CONbits.T0PS1 = 0;
004f12   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1335; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004f14   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1336; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004f16   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1337; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004f18   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1338; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004f1a   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1339; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004f1c   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1340; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004f1e   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1341; meter_logger.c	INTCONbits.TMR0IF = 0;
004f20   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1344; meter_logger.c	T0CONbits.TMR0ON = 0;		// timer 0 started in rs232_8n2_tx_byte()
004f22   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
004f24   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004f26   ffd9
004f28   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_tx_byte	code
                                           _rs232_8n2_tx_byte:
                                           ;	.line	1311; meter_logger.c	void rs232_8n2_tx_byte(unsigned char c) {
0050b0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0050b2   ffe5
0050b4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0050b6   ffd9
0050b8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0050ba   ffe5
0050bc   0e02     movlw   0x2              	MOVLW	0x02
0050be   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0050c0   f000
                                           ;	.line	1312; meter_logger.c	rs232_proto.data = c;
0050c2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0050c4   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
0050c6   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	1313; meter_logger.c	rs232_proto.data_len = 8;
0050c8   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
0050ca   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	1314; meter_logger.c	T0CONbits.TMR0ON = 1;		// start timer 0
0050cc   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1315; meter_logger.c	INTCONbits.TMR0IF = 1;		// enter timer interrupt handler now
0050ce   84f2     bsf     0xf2, 0x2, 0     	BSF	_INTCONbits, 2
                                           _01002_DS_:
0050d0   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	1316; meter_logger.c	while (rs232_proto.data_len) {
0050d2   5126     movf    0x26, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
0050d4   e1fd     bnz     0x50d0           	BNZ	_01002_DS_
0050d6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0050d8   f000
0050da   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0050dc   ffd9
0050de   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_rx_disable	code
                                           _rs232_8n2_rx_disable:
                                           ;	.line	1305; meter_logger.c	void rs232_8n2_rx_disable() {
00533e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005340   ffe5
005342   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005344   ffd9
                                           ;	.line	1306; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
005346   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
005348   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1307; meter_logger.c	codec_type = NONE;
00534a   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1308; meter_logger.c	T0CONbits.TMR0ON = 0;
00534c   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
00534e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005350   ffd9
005352   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_rx_enable	code
                                           _rs232_8n2_rx_enable:
                                           ;	.line	1281; meter_logger.c	void rs232_8n2_rx_enable(unsigned int t) {
004e6c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004e6e   ffe5
004e70   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004e72   ffd9
004e74   0e02     movlw   0x2              	MOVLW	0x02
004e76   cfdb     movff   0xfdb, 0x548     	MOVFF	PLUSW2, _timer0_reload
004e78   f548
004e7a   0e03     movlw   0x3              	MOVLW	0x03
004e7c   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, (_timer0_reload + 1)
004e7e   f549
                                           ;	.line	1282; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
004e80   0e02     movlw   0x2              	MOVLW	0x02
004e82   0105     movlb   0x5              	BANKSEL	_rs232_proto
004e84   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1283; meter_logger.c	rs232_proto.data_len = 0;
004e86   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1287; meter_logger.c	codec_type = RS232_8N2_RX;
004e88   0e02     movlw   0x2              	MOVLW	0x02
004e8a   0105     movlb   0x5              	BANKSEL	_codec_type
004e8c   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1290; meter_logger.c	T0CONbits.TMR0ON = 0;
004e8e   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1291; meter_logger.c	T0CONbits.T0PS0 = 0;
004e90   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1292; meter_logger.c	T0CONbits.T0PS1 = 0;
004e92   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1293; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004e94   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1294; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004e96   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1295; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004e98   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1296; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004e9a   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1297; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004e9c   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1298; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004e9e   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1299; meter_logger.c	INTCONbits.TMR0IF = 0;
004ea0   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1301; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
004ea2   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1302; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004ea4   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
004ea6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004ea8   ffd9
004eaa   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_tx_disable	code
                                           _rs232_8n2_tx_disable:
                                           ;	.line	1275; meter_logger.c	void rs232_8n2_tx_disable() {
005354   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005356   ffe5
005358   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00535a   ffd9
00535c   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1276; meter_logger.c	codec_type = NONE;
00535e   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1277; meter_logger.c	IR_LED_PIN = 0;				// no need to set it to inverted idle
005360   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1278; meter_logger.c	T0CONbits.TMR0ON = 0;
005362   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
005364   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005366   ffd9
005368   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_tx_enable	code
                                           _rs232_8n2_tx_enable:
                                           ;	.line	1249; meter_logger.c	void rs232_8n2_tx_enable(unsigned int t) {
004f2a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004f2c   ffe5
004f2e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004f30   ffd9
004f32   0e02     movlw   0x2              	MOVLW	0x02
004f34   cfdb     movff   0xfdb, 0x548     	MOVFF	PLUSW2, _timer0_reload
004f36   f548
004f38   0e03     movlw   0x3              	MOVLW	0x03
004f3a   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, (_timer0_reload + 1)
004f3c   f549
004f3e   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	1252; meter_logger.c	rs232_proto.state = INIT_STATE;
004f40   6b23     clrf    0x23, 0x1        	CLRF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1253; meter_logger.c	rs232_proto.data_len = 0;
004f42   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1255; meter_logger.c	IR_LED_PIN = 0;				// inverted rs232 output on ir, idle = no ir light
004f44   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1257; meter_logger.c	codec_type = RS232_8N2_TX;
004f46   0e03     movlw   0x3              	MOVLW	0x03
004f48   0105     movlb   0x5              	BANKSEL	_codec_type
004f4a   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1260; meter_logger.c	T0CONbits.TMR0ON = 0;
004f4c   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1261; meter_logger.c	T0CONbits.T0PS0 = 0;
004f4e   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1262; meter_logger.c	T0CONbits.T0PS1 = 0;
004f50   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1263; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004f52   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1264; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004f54   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1265; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004f56   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1266; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004f58   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1267; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004f5a   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1268; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004f5c   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1269; meter_logger.c	INTCONbits.TMR0IF = 0;
004f5e   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1272; meter_logger.c	T0CONbits.TMR0ON = 0;		// timer 0 started in rs232_8n2_tx_byte()
004f60   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
004f62   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004f64   ffd9
004f66   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_ir_disable	code
                                           _testo_ir_disable:
                                           ;	.line	1244; meter_logger.c	void testo_ir_disable() {
005394   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005396   ffe5
005398   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00539a   ffd9
00539c   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1245; meter_logger.c	codec_type = NONE;
00539e   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1246; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
0053a0   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
0053a2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0053a4   ffd9
0053a6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_ir_enable	code
                                           _testo_ir_enable:
                                           ;	.line	1220; meter_logger.c	void testo_ir_enable() {
004f68   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004f6a   ffe5
004f6c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004f6e   ffd9
004f70   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	1221; meter_logger.c	testo_ir_proto.state = INIT_STATE;
004f72   6b1d     clrf    0x1d, 0x1        	CLRF	_testo_ir_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1222; meter_logger.c	testo_ir_proto.start_bit_len = 0;
004f74   6b1f     clrf    0x1f, 0x1        	CLRF	(_testo_ir_proto + 2), B
                                           ;	.line	1224; meter_logger.c	timer0_reload = TIMER0_TESTO;
004f76   0e23     movlw   0x23             	MOVLW	0x23
004f78   0105     movlb   0x5              	BANKSEL	_timer0_reload
004f7a   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
004f7c   0ef3     movlw   0xf3             	MOVLW	0xf3
                                           ; removed redundant BANKSEL
004f7e   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
                                           ;	.line	1226; meter_logger.c	codec_type = TESTO;
004f80   0e01     movlw   0x1              	MOVLW	0x01
004f82   0105     movlb   0x5              	BANKSEL	_codec_type
004f84   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1229; meter_logger.c	T0CONbits.TMR0ON = 0;
004f86   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1230; meter_logger.c	T0CONbits.T0PS0 = 0;
004f88   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1231; meter_logger.c	T0CONbits.T0PS1 = 0;
004f8a   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1232; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004f8c   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1233; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004f8e   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1234; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004f90   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1235; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004f92   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1236; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004f94   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1237; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004f96   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1238; meter_logger.c	INTCONbits.TMR0IF = 0;
004f98   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1240; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
004f9a   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1241; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004f9c   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
004f9e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004fa0   ffd9
004fa2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_valid_err_corr	code
                                           _testo_valid_err_corr:
                                           ;	.line	1165; meter_logger.c	unsigned char testo_valid_err_corr(unsigned int c) {
003b60   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003b62   ffe5
003b64   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003b66   ffd9
003b68   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003b6a   ffe5
003b6c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003b6e   ffe5
003b70   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003b72   ffe5
003b74   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003b76   ffe5
003b78   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003b7a   ffe5
003b7c   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003b7e   ffe5
003b80   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003b82   ffe5
003b84   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
003b86   ffe5
003b88   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
003b8a   ffe5
003b8c   0e02     movlw   0x2              	MOVLW	0x02
003b8e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003b90   f000
003b92   0e03     movlw   0x3              	MOVLW	0x03
003b94   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003b96   f001
                                           ;	.line	1172; meter_logger.c	calculated_err_corr_bit = 0;
003b98   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1173; meter_logger.c	for (i = 0; i < 8; i++) {
003b9a   0e78     movlw   0x78             	MOVLW	0x78
003b9c   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003b9e   6e03     movwf   0x3, 0           	MOVWF	r0x03
003ba0   6a04     clrf    0x4, 0           	CLRF	r0x04
003ba2   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00890_DS_:
                                           ;	.line	1174; meter_logger.c	calculated_err_corr_bit ^= (((c & 0x78) & (1 << i)) != 0);   // 0b01111000
003ba4   0e01     movlw   0x1              	MOVLW	0x01
003ba6   6e06     movwf   0x6, 0           	MOVWF	r0x06
003ba8   0e00     movlw   0                	MOVLW	0x00
003baa   6e07     movwf   0x7, 0           	MOVWF	r0x07
003bac   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003bae   e006     bz      0x3bbc           	BZ	_00932_DS_
003bb0   6ce8     negf    0xe8, 0          	NEGF	WREG
003bb2   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00933_DS_:
003bb4   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
003bb6   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003bb8   0f01     addlw   0x1              	ADDLW	0x01
003bba   e3fc     bnc     0x3bb4           	BNC	_00933_DS_
                                           _00932_DS_:
003bbc   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003bbe   1606     andwf   0x6, 0x1, 0      	ANDWF	r0x06, F
003bc0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003bc2   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003bc4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003bc6   e105     bnz     0x3bd2           	BNZ	_00935_DS_
003bc8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003bca   e103     bnz     0x3bd2           	BNZ	_00935_DS_
003bcc   6a06     clrf    0x6, 0           	CLRF	r0x06
003bce   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003bd0   d001     bra     0x3bd4           	BRA	_00936_DS_
                                           _00935_DS_:
003bd2   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00936_DS_:
003bd4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003bd6   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003bd8   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003bda   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003bdc   6a06     clrf    0x6, 0           	CLRF	r0x06
003bde   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
003be0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003be2   6e07     movwf   0x7, 0           	MOVWF	r0x07
003be4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003be6   1807     xorwf   0x7, 0, 0        	XORWF	r0x07, W
003be8   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1173; meter_logger.c	for (i = 0; i < 8; i++) {
003bea   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
003bec   0e08     movlw   0x8              	MOVLW	0x08
003bee   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
003bf0   e3d9     bnc     0x3ba4           	BNC	_00890_DS_
                                           ;	.line	1177; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003bf2   4402     rlncf   0x2, 0, 0        	RLNCF	r0x02, W
003bf4   0bfe     andlw   0xfe             	ANDLW	0xfe
003bf6   6e03     movwf   0x3, 0           	MOVWF	r0x03
                                           ;	.line	1180; meter_logger.c	calculated_err_corr_bit = 0;
003bf8   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1181; meter_logger.c	for (i = 0; i < 8; i++) {
003bfa   0ee6     movlw   0xe6             	MOVLW	0xe6
003bfc   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003bfe   6e04     movwf   0x4, 0           	MOVWF	r0x04
003c00   6a05     clrf    0x5, 0           	CLRF	r0x05
003c02   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00892_DS_:
                                           ;	.line	1182; meter_logger.c	calculated_err_corr_bit ^= (((c & 0xe6) & (1 << i)) != 0);   // 0b11100110
003c04   0e01     movlw   0x1              	MOVLW	0x01
003c06   6e07     movwf   0x7, 0           	MOVWF	r0x07
003c08   0e00     movlw   0                	MOVLW	0x00
003c0a   6e08     movwf   0x8, 0           	MOVWF	r0x08
003c0c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003c0e   e006     bz      0x3c1c           	BZ	_00940_DS_
003c10   6ce8     negf    0xe8, 0          	NEGF	WREG
003c12   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00941_DS_:
003c14   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003c16   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003c18   0f01     addlw   0x1              	ADDLW	0x01
003c1a   e3fc     bnc     0x3c14           	BNC	_00941_DS_
                                           _00940_DS_:
003c1c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003c1e   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003c20   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003c22   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003c24   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003c26   e105     bnz     0x3c32           	BNZ	_00943_DS_
003c28   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003c2a   e103     bnz     0x3c32           	BNZ	_00943_DS_
003c2c   6a07     clrf    0x7, 0           	CLRF	r0x07
003c2e   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003c30   d001     bra     0x3c34           	BRA	_00944_DS_
                                           _00943_DS_:
003c32   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00944_DS_:
003c34   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003c36   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003c38   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003c3a   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003c3c   6a07     clrf    0x7, 0           	CLRF	r0x07
003c3e   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003c40   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003c42   6e08     movwf   0x8, 0           	MOVWF	r0x08
003c44   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003c46   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003c48   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1181; meter_logger.c	for (i = 0; i < 8; i++) {
003c4a   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003c4c   0e08     movlw   0x8              	MOVLW	0x08
003c4e   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003c50   e3d9     bnc     0x3c04           	BNC	_00892_DS_
                                           ;	.line	1184; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003c52   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003c54   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1185; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003c56   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003c58   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
                                           ;	.line	1188; meter_logger.c	calculated_err_corr_bit = 0;
003c5a   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1189; meter_logger.c	for (i = 0; i < 8; i++) {
003c5c   0ed5     movlw   0xd5             	MOVLW	0xd5
003c5e   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003c60   6e04     movwf   0x4, 0           	MOVWF	r0x04
003c62   6a05     clrf    0x5, 0           	CLRF	r0x05
003c64   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00894_DS_:
                                           ;	.line	1190; meter_logger.c	calculated_err_corr_bit ^= (((c & 0xd5) & (1 << i)) != 0);   // 0b11010101
003c66   0e01     movlw   0x1              	MOVLW	0x01
003c68   6e07     movwf   0x7, 0           	MOVWF	r0x07
003c6a   0e00     movlw   0                	MOVLW	0x00
003c6c   6e08     movwf   0x8, 0           	MOVWF	r0x08
003c6e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003c70   e006     bz      0x3c7e           	BZ	_00949_DS_
003c72   6ce8     negf    0xe8, 0          	NEGF	WREG
003c74   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00950_DS_:
003c76   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003c78   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003c7a   0f01     addlw   0x1              	ADDLW	0x01
003c7c   e3fc     bnc     0x3c76           	BNC	_00950_DS_
                                           _00949_DS_:
003c7e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003c80   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003c82   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003c84   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003c86   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003c88   e105     bnz     0x3c94           	BNZ	_00952_DS_
003c8a   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003c8c   e103     bnz     0x3c94           	BNZ	_00952_DS_
003c8e   6a07     clrf    0x7, 0           	CLRF	r0x07
003c90   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003c92   d001     bra     0x3c96           	BRA	_00953_DS_
                                           _00952_DS_:
003c94   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00953_DS_:
003c96   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003c98   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003c9a   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003c9c   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003c9e   6a07     clrf    0x7, 0           	CLRF	r0x07
003ca0   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003ca2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003ca4   6e08     movwf   0x8, 0           	MOVWF	r0x08
003ca6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003ca8   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003caa   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1189; meter_logger.c	for (i = 0; i < 8; i++) {
003cac   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003cae   0e08     movlw   0x8              	MOVLW	0x08
003cb0   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003cb2   e3d9     bnc     0x3c66           	BNC	_00894_DS_
                                           ;	.line	1192; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003cb4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003cb6   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1193; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003cb8   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003cba   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
                                           ;	.line	1196; meter_logger.c	calculated_err_corr_bit = 0;
003cbc   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1197; meter_logger.c	for (i = 0; i < 8; i++) {
003cbe   0e8b     movlw   0x8b             	MOVLW	0x8b
003cc0   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003cc2   6e04     movwf   0x4, 0           	MOVWF	r0x04
003cc4   6a05     clrf    0x5, 0           	CLRF	r0x05
003cc6   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00896_DS_:
                                           ;	.line	1198; meter_logger.c	calculated_err_corr_bit ^= (((c & 0x8b) & (1 << i)) != 0);   // 0b10001011
003cc8   0e01     movlw   0x1              	MOVLW	0x01
003cca   6e07     movwf   0x7, 0           	MOVWF	r0x07
003ccc   0e00     movlw   0                	MOVLW	0x00
003cce   6e08     movwf   0x8, 0           	MOVWF	r0x08
003cd0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003cd2   e006     bz      0x3ce0           	BZ	_00958_DS_
003cd4   6ce8     negf    0xe8, 0          	NEGF	WREG
003cd6   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00959_DS_:
003cd8   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003cda   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003cdc   0f01     addlw   0x1              	ADDLW	0x01
003cde   e3fc     bnc     0x3cd8           	BNC	_00959_DS_
                                           _00958_DS_:
003ce0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003ce2   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003ce4   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003ce6   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003ce8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003cea   e105     bnz     0x3cf6           	BNZ	_00961_DS_
003cec   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003cee   e103     bnz     0x3cf6           	BNZ	_00961_DS_
003cf0   6a07     clrf    0x7, 0           	CLRF	r0x07
003cf2   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003cf4   d001     bra     0x3cf8           	BRA	_00962_DS_
                                           _00961_DS_:
003cf6   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00962_DS_:
003cf8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003cfa   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003cfc   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003cfe   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003d00   6a07     clrf    0x7, 0           	CLRF	r0x07
003d02   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003d04   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003d06   6e08     movwf   0x8, 0           	MOVWF	r0x08
003d08   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003d0a   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003d0c   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1197; meter_logger.c	for (i = 0; i < 8; i++) {
003d0e   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003d10   0e08     movlw   0x8              	MOVLW	0x08
003d12   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003d14   e3d9     bnc     0x3cc8           	BNC	_00896_DS_
                                           ;	.line	1200; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003d16   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003d18   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1211; meter_logger.c	if ((c >> 8) == calculated_err_corr) {
003d1a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003d1c   6e00     movwf   0, 0             	MOVWF	r0x00
003d1e   6a01     clrf    0x1, 0           	CLRF	r0x01
003d20   6a02     clrf    0x2, 0           	CLRF	r0x02
003d22   5000     movf    0, 0, 0          	MOVF	r0x00, W
003d24   1803     xorwf   0x3, 0, 0        	XORWF	r0x03, W
003d26   e103     bnz     0x3d2e           	BNZ	_00966_DS_
003d28   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003d2a   1802     xorwf   0x2, 0, 0        	XORWF	r0x02, W
003d2c   e001     bz      0x3d30           	BZ	_00967_DS_
                                           _00966_DS_:
003d2e   d002     bra     0x3d34           	BRA	_00888_DS_
                                           _00967_DS_:
                                           ;	.line	1212; meter_logger.c	return 1;
003d30   0e01     movlw   0x1              	MOVLW	0x01
003d32   d001     bra     0x3d36           	BRA	_00898_DS_
                                           _00888_DS_:
                                           ;	.line	1215; meter_logger.c	return 0;
003d34   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00898_DS_:
003d36   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
003d38   f008
003d3a   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003d3c   f007
003d3e   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003d40   f006
003d42   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003d44   f005
003d46   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003d48   f004
003d4a   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003d4c   f003
003d4e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003d50   f002
003d52   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003d54   f001
003d56   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003d58   f000
003d5a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003d5c   ffd9
003d5e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__reverse	code
                                           _reverse:
                                           ;	.line	1157; meter_logger.c	unsigned char reverse(unsigned char b) {
004b88   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004b8a   ffe5
004b8c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004b8e   ffd9
004b90   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004b92   ffe5
004b94   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004b96   ffe5
004b98   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004b9a   ffe5
004b9c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004b9e   ffe5
004ba0   0e02     movlw   0x2              	MOVLW	0x02
004ba2   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004ba4   f000
                                           ;	.line	1159; meter_logger.c	c  = ((b >>  1) & 0x55) | ((b <<  1) & 0xaa);
004ba6   4000     rrncf   0, 0, 0          	RRNCF	r0x00, W
004ba8   0b7f     andlw   0x7f             	ANDLW	0x7f
004baa   6e01     movwf   0x1, 0           	MOVWF	r0x01
004bac   0e55     movlw   0x55             	MOVLW	0x55
004bae   1601     andwf   0x1, 0x1, 0      	ANDWF	r0x01, F
004bb0   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
004bb2   0bfe     andlw   0xfe             	ANDLW	0xfe
004bb4   6e02     movwf   0x2, 0           	MOVWF	r0x02
004bb6   0eaa     movlw   0xaa             	MOVLW	0xaa
004bb8   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004bba   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004bbc   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1160; meter_logger.c	c |= ((b >>  2) & 0x33) | ((b <<  2) & 0xcc);
004bbe   4000     rrncf   0, 0, 0          	RRNCF	r0x00, W
004bc0   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
004bc2   0b3f     andlw   0x3f             	ANDLW	0x3f
004bc4   6e02     movwf   0x2, 0           	MOVWF	r0x02
004bc6   0e33     movlw   0x33             	MOVLW	0x33
004bc8   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004bca   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
004bcc   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
004bce   0bfc     andlw   0xfc             	ANDLW	0xfc
004bd0   6e03     movwf   0x3, 0           	MOVWF	r0x03
004bd2   0ecc     movlw   0xcc             	MOVLW	0xcc
004bd4   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
004bd6   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004bd8   1202     iorwf   0x2, 0x1, 0      	IORWF	r0x02, F
004bda   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004bdc   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1161; meter_logger.c	c |= ((b >>  4) & 0x0f) | ((b <<  4) & 0xf0);
004bde   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
004be0   0b0f     andlw   0xf              	ANDLW	0x0f
004be2   6e02     movwf   0x2, 0           	MOVWF	r0x02
004be4   0e0f     movlw   0xf              	MOVLW	0x0f
004be6   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004be8   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
004bea   0bf0     andlw   0xf0             	ANDLW	0xf0
004bec   6e03     movwf   0x3, 0           	MOVWF	r0x03
004bee   0ef0     movlw   0xf0             	MOVLW	0xf0
004bf0   1403     andwf   0x3, 0, 0        	ANDWF	r0x03, W
004bf2   6e00     movwf   0, 0             	MOVWF	r0x00
004bf4   5000     movf    0, 0, 0          	MOVF	r0x00, W
004bf6   1202     iorwf   0x2, 0x1, 0      	IORWF	r0x02, F
004bf8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004bfa   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1162; meter_logger.c	return(c);
004bfc   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004bfe   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004c00   f003
004c02   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004c04   f002
004c06   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004c08   f001
004c0a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004c0c   f000
004c0e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004c10   ffd9
004c12   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__my_usart_open	code
                                           _my_usart_open:
                                           ;	.line	1127; meter_logger.c	void my_usart_open() {
0051c6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0051c8   ffe5
0051ca   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0051cc   ffd9
                                           ;	.line	1128; meter_logger.c	SPBRG = 103;					// 8MHz => 19230 baud
0051ce   0e67     movlw   0x67             	MOVLW	0x67
0051d0   6eaf     movwf   0xaf, 0          	MOVWF	_SPBRG
                                           ;	.line	1129; meter_logger.c	TXSTAbits.BRGH = 1;	// (0 = low speed)
0051d2   84ac     bsf     0xac, 0x2, 0     	BSF	_TXSTAbits, 2
                                           ;	.line	1130; meter_logger.c	TXSTAbits.SYNC = 0;	// (0 = asynchronous)
0051d4   98ac     bcf     0xac, 0x4, 0     	BCF	_TXSTAbits, 4
                                           ;	.line	1131; meter_logger.c	BAUDCONbits.BRG16 = 1;
0051d6   86b8     bsf     0xb8, 0x3, 0     	BSF	_BAUDCONbits, 3
                                           ;	.line	1134; meter_logger.c	RCSTAbits.SPEN = 1; // (1 = serial port enabled)
0051d8   8eab     bsf     0xab, 0x7, 0     	BSF	_RCSTAbits, 7
                                           ;	.line	1137; meter_logger.c	PIE1bits.TXIE = 0; // (1 = enabled)
0051da   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
                                           ;	.line	1138; meter_logger.c	IPR1bits.TXIP = 0; // USART Tx on low priority interrupt
0051dc   989f     bcf     0x9f, 0x4, 0     	BCF	_IPR1bits, 4
                                           ;	.line	1141; meter_logger.c	PIE1bits.RCIE = 1; // (1 = enabled)
0051de   8a9d     bsf     0x9d, 0x5, 0     	BSF	_PIE1bits, 5
                                           ;	.line	1142; meter_logger.c	IPR1bits.RCIP = 0; // USART Rx on low priority interrupt
0051e0   9a9f     bcf     0x9f, 0x5, 0     	BCF	_IPR1bits, 5
                                           ;	.line	1145; meter_logger.c	TXSTAbits.TX9 = 0; // (0 = 8-bit transmit)
0051e2   9cac     bcf     0xac, 0x6, 0     	BCF	_TXSTAbits, 6
                                           ;	.line	1148; meter_logger.c	RCSTAbits.RX9 = 0; // (0 = 8-bit reception)
0051e4   9cab     bcf     0xab, 0x6, 0     	BCF	_RCSTAbits, 6
                                           ;	.line	1151; meter_logger.c	RCSTAbits.CREN = 1; // (1 = Enables receiver)
0051e6   88ab     bsf     0xab, 0x4, 0     	BSF	_RCSTAbits, 4
                                           ;	.line	1154; meter_logger.c	TXSTAbits.TXEN = 1; // (1 = transmit enabled)
0051e8   8aac     bsf     0xac, 0x5, 0     	BSF	_TXSTAbits, 5
0051ea   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0051ec   ffd9
0051ee   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__get_dev_id	code
                                           _get_dev_id:
                                           ;	.line	1110; meter_logger.c	unsigned int get_dev_id() {
004d08   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004d0a   ffe5
004d0c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004d0e   ffd9
004d10   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004d12   ffe5
004d14   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004d16   ffe5
004d18   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004d1a   ffe5
004d1c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004d1e   ffe5
004d20   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004d22   ffe5
004d24   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004d26   ffe5
                                           ;	.line	1113; meter_logger.c	TBLPTRU = __DEVID1 >> 16;
004d28   0e3f     movlw   0x3f             	MOVLW	0x3f
004d2a   6ef8     movwf   0xf8, 0          	MOVWF	_TBLPTRU
                                           ;	.line	1114; meter_logger.c	TBLPTRH = __DEVID1 >> 8;
004d2c   0eff     movlw   0xff             	MOVLW	0xff
004d2e   6ef7     movwf   0xf7, 0          	MOVWF	_TBLPTRH
                                           ;	.line	1115; meter_logger.c	TBLPTRL = __DEVID1;
004d30   0efe     movlw   0xfe             	MOVLW	0xfe
004d32   6ef6     movwf   0xf6, 0          	MOVWF	_TBLPTRL
004d34   0009     tblrd   *+               	tblrd*+
                                           	
                                           ;	.line	1119; meter_logger.c	dev_id_low = TABLAT;
004d36   cff5     movff   0xff5, 0         	MOVFF	_TABLAT, r0x00
004d38   f000
004d3a   0009     tblrd   *+               	tblrd*+
                                           	
                                           ;	.line	1123; meter_logger.c	dev_id_high = TABLAT;
004d3c   cff5     movff   0xff5, 0x1       	MOVFF	_TABLAT, r0x01
004d3e   f001
                                           ;	.line	1124; meter_logger.c	return ((dev_id_high << 8) + dev_id_low) & 0xffe0;	// dont return revision
004d40   6a02     clrf    0x2, 0           	CLRF	r0x02
004d42   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004d44   6e04     movwf   0x4, 0           	MOVWF	r0x04
004d46   6a03     clrf    0x3, 0           	CLRF	r0x03
004d48   6a05     clrf    0x5, 0           	CLRF	r0x05
004d4a   5000     movf    0, 0, 0          	MOVF	r0x00, W
004d4c   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
004d4e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
004d50   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
004d52   0ee0     movlw   0xe0             	MOVLW	0xe0
004d54   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
004d56   c004     movff   0x4, 0xff3       	MOVFF	r0x04, PRODL
004d58   fff3
004d5a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004d5c   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
004d5e   f005
004d60   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004d62   f004
004d64   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004d66   f003
004d68   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004d6a   f002
004d6c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004d6e   f001
004d70   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004d72   f000
004d74   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004d76   ffd9
004d78   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__init_system	code
                                           _init_system:
                                           ;	.line	1009; meter_logger.c	void init_system() {
004dd6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004dd8   ffe5
004dda   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004ddc   ffd9
                                           ;	.line	1011; meter_logger.c	TRIS_COMP1 = INPUT_STATE;		// as input
004dde   8092     bsf     0x92, 0, 0       	BSF	_TRISAbits, 0
                                           ;	.line	1012; meter_logger.c	TRIS_COMP2 = INPUT_STATE;		// as input
004de0   8292     bsf     0x92, 0x1, 0     	BSF	_TRISAbits, 1
                                           ;	.line	1014; meter_logger.c	TRIS_IR_PIN = INPUT_STATE;		// as input
004de2   8093     bsf     0x93, 0, 0       	BSF	_TRISBbits, 0
                                           ;	.line	1016; meter_logger.c	TRIS_LED_PIN = OUTPUT_STATE;	// as output
004de4   9893     bcf     0x93, 0x4, 0     	BCF	_TRISBbits, 4
                                           ;	.line	1017; meter_logger.c	LED_PIN = 0;					// and clear
004de6   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	1019; meter_logger.c	TRIS_IR_LED_PIN = OUTPUT_STATE;	// as output
004de8   9293     bcf     0x93, 0x1, 0     	BCF	_TRISBbits, 1
                                           ;	.line	1020; meter_logger.c	IR_LED_PIN = 0;					// and clear
004dea   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1022; meter_logger.c	TRIS_V_SENSE = INPUT_STATE;		// as input
004dec   8a92     bsf     0x92, 0x5, 0     	BSF	_TRISAbits, 5
                                           ;	.line	1024; meter_logger.c	TRIS_DEBUG_PIN = OUTPUT_STATE;	// as output
004dee   9493     bcf     0x93, 0x2, 0     	BCF	_TRISBbits, 2
                                           ;	.line	1025; meter_logger.c	DEBUG_PIN = 0;					// and clear
004df0   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	1027; meter_logger.c	TRIS_DEBUG2_PIN = OUTPUT_STATE;	// as output
004df2   9693     bcf     0x93, 0x3, 0     	BCF	_TRISBbits, 3
                                           ;	.line	1028; meter_logger.c	DEBUG2_PIN = 0;					// and clear
004df4   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	1030; meter_logger.c	TRIS_DEBUG3_PIN = OUTPUT_STATE;	// as output
004df6   9893     bcf     0x93, 0x4, 0     	BCF	_TRISBbits, 4
                                           ;	.line	1031; meter_logger.c	DEBUG3_PIN = 0;					// and clear
004df8   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	1035; meter_logger.c	TRIS_PWM_PIN = OUTPUT_STATE;	// enable output from pwm module at init
004dfa   9294     bcf     0x94, 0x1, 0     	BCF	_TRISCbits, 1
                                           ;	.line	1036; meter_logger.c	PWM_PIN = 0;					// and clear
004dfc   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
                                           ;	.line	1039; meter_logger.c	TRIS_RX_PIN = INPUT_STATE;		// as input
004dfe   8e94     bsf     0x94, 0x7, 0     	BSF	_TRISCbits, 7
                                           ;	.line	1040; meter_logger.c	TRIS_TX_PIN = OUTPUT_STATE;		// as input
004e00   9c94     bcf     0x94, 0x6, 0     	BCF	_TRISCbits, 6
                                           ;	.line	1045; meter_logger.c	T1CONbits.TMR1ON = 1;
004e02   80cd     bsf     0xcd, 0, 0       	BSF	_T1CONbits, 0
                                           ;	.line	1046; meter_logger.c	T1CONbits.RD16 = 1;
004e04   8ecd     bsf     0xcd, 0x7, 0     	BSF	_T1CONbits, 7
                                           ;	.line	1047; meter_logger.c	T1CONbits.TMR1CS = 0;   // internal clock source
004e06   92cd     bcf     0xcd, 0x1, 0     	BCF	_T1CONbits, 1
                                           ;	.line	1048; meter_logger.c	T1CONbits.T1OSCEN = 0;  // dont put t1 on pin
004e08   96cd     bcf     0xcd, 0x3, 0     	BCF	_T1CONbits, 3
                                           ;	.line	1049; meter_logger.c	T1CONbits.T1CKPS0 = 0;
004e0a   98cd     bcf     0xcd, 0x4, 0     	BCF	_T1CONbits, 4
                                           ;	.line	1050; meter_logger.c	T1CONbits.T1CKPS1 = 0;
004e0c   9acd     bcf     0xcd, 0x5, 0     	BCF	_T1CONbits, 5
                                           ;	.line	1051; meter_logger.c	IPR1bits.TMR1IP = 0;	// low priority
004e0e   909f     bcf     0x9f, 0, 0       	BCF	_IPR1bits, 0
                                           ;	.line	1052; meter_logger.c	PIE1bits.TMR1IE = 1;	// Ensure that TMR1 Interrupt is enabled
004e10   809d     bsf     0x9d, 0, 0       	BSF	_PIE1bits, 0
                                           ;	.line	1053; meter_logger.c	PIR1bits.TMR1IF = 1;	// Force Instant entry to Timer 1 Interrupt
004e12   809e     bsf     0x9e, 0, 0       	BSF	_PIR1bits, 0
                                           ;	.line	1084; meter_logger.c	RCONbits.IPEN = 1;
004e14   8ed0     bsf     0xd0, 0x7, 0     	BSF	_RCONbits, 7
                                           ;	.line	1086; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int, enabled when ir demodulator is started
004e16   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	1087; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004e18   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
                                           ;	.line	1089; meter_logger.c	INTCONbits.PEIE = 1;
004e1a   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	1090; meter_logger.c	INTCONbits.GIE = 1;	/* Enable Global interrupts   */	
004e1c   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           ;	.line	1095; meter_logger.c	IPR1bits.RCIP = 0;
004e1e   9a9f     bcf     0x9f, 0x5, 0     	BCF	_IPR1bits, 5
                                           ;	.line	1096; meter_logger.c	IPR1bits.TXIP = 0;
004e20   989f     bcf     0x9f, 0x4, 0     	BCF	_IPR1bits, 4
                                           ;	.line	1107; meter_logger.c	my_usart_open();
004e22   ece3     call    0x51c6, 0        	CALL	_my_usart_open
004e24   f028
004e26   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004e28   ffd9
004e2a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__sleep_ms	code
                                           _sleep_ms:
                                           ;	.line	989; meter_logger.c	void sleep_ms(unsigned int ms) {
004ae2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004ae4   ffe5
004ae6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004ae8   ffd9
004aea   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004aec   ffe5
004aee   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004af0   ffe5
004af2   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004af4   ffe5
004af6   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004af8   ffe5
004afa   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004afc   ffe5
004afe   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004b00   ffe5
004b02   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
004b04   ffe5
004b06   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
004b08   ffe5
004b0a   0e02     movlw   0x2              	MOVLW	0x02
004b0c   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004b0e   f000
004b10   0e03     movlw   0x3              	MOVLW	0x03
004b12   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004b14   f001
                                           ;	.line	992; meter_logger.c	start_timer_1_ms = timer_1_ms;	
004b16   c540     movff   0x540, 0x2       	MOVFF	_timer_1_ms, r0x02
004b18   f002
004b1a   c541     movff   0x541, 0x3       	MOVFF	(_timer_1_ms + 1), r0x03
004b1c   f003
                                           ;	.line	995; meter_logger.c	do {
004b1e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004b20   08ff     sublw   0xff             	SUBLW	0xff
004b22   6e04     movwf   0x4, 0           	MOVWF	r0x04
004b24   0eff     movlw   0xff             	MOVLW	0xff
004b26   5403     subfwb  0x3, 0, 0        	SUBFWB	r0x03, W
004b28   6e05     movwf   0x5, 0           	MOVWF	r0x05
                                           _00846_DS_:
                                           ;	.line	996; meter_logger.c	if (start_timer_1_ms <= timer_1_ms) {
004b2a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004b2c   0105     movlb   0x5              	BANKSEL	(_timer_1_ms + 1)
004b2e   5d41     subwf   0x41, 0, 0x1     	SUBWF	(_timer_1_ms + 1), W, B
004b30   e102     bnz     0x4b36           	BNZ	_00857_DS_
004b32   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
004b34   5d40     subwf   0x40, 0, 0x1     	SUBWF	_timer_1_ms, W, B
                                           _00857_DS_:
004b36   e308     bnc     0x4b48           	BNC	_00844_DS_
                                           ;	.line	997; meter_logger.c	diff = timer_1_ms - start_timer_1_ms;
004b38   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004b3a   0105     movlb   0x5              	BANKSEL	_timer_1_ms
004b3c   5d40     subwf   0x40, 0, 0x1     	SUBWF	_timer_1_ms, W, B
004b3e   6e06     movwf   0x6, 0           	MOVWF	r0x06
004b40   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
004b42   5941     subwfb  0x41, 0, 0x1     	SUBWFB	(_timer_1_ms + 1), W, B
004b44   6e07     movwf   0x7, 0           	MOVWF	r0x07
004b46   d007     bra     0x4b56           	BRA	_00847_DS_
                                           _00844_DS_:
004b48   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	1001; meter_logger.c	diff = 0xffff - start_timer_1_ms + timer_1_ms;
004b4a   5140     movf    0x40, 0, 0x1     	MOVF	_timer_1_ms, W, B
004b4c   2404     addwf   0x4, 0, 0        	ADDWF	r0x04, W
004b4e   6e06     movwf   0x6, 0           	MOVWF	r0x06
                                           ; removed redundant BANKSEL
004b50   5141     movf    0x41, 0, 0x1     	MOVF	(_timer_1_ms + 1), W, B
004b52   2005     addwfc  0x5, 0, 0        	ADDWFC	r0x05, W
004b54   6e07     movwf   0x7, 0           	MOVWF	r0x07
                                           _00847_DS_:
                                           ;	.line	1003; meter_logger.c	} while (diff < ms);
004b56   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004b58   5c07     subwf   0x7, 0, 0        	SUBWF	r0x07, W
004b5a   e102     bnz     0x4b60           	BNZ	_00858_DS_
004b5c   5000     movf    0, 0, 0          	MOVF	r0x00, W
004b5e   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
                                           _00858_DS_:
004b60   e3e4     bnc     0x4b2a           	BNC	_00846_DS_
004b62   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
004b64   f007
004b66   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
004b68   f006
004b6a   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
004b6c   f005
004b6e   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004b70   f004
004b72   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004b74   f003
004b76   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004b78   f002
004b7a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004b7c   f001
004b7e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004b80   f000
004b82   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004b84   ffd9
004b86   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__isr_low_prio	code
                                           _isr_low_prio:
                                           ;	.line	957; meter_logger.c	static void isr_low_prio(void) __interrupt 2 {
004a1e   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
004a20   ffe5
004a22   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
004a24   ffe5
004a26   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004a28   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
004a2a   ffe5
004a2c   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
004a2e   ffe5
004a30   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
004a32   ffe5
004a34   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
004a36   ffe5
004a38   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
004a3a   ffe5
004a3c   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
004a3e   ffe5
004a40   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004a42   ffe5
004a44   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004a46   ffd9
004a48   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004a4a   ffe5
004a4c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004a4e   ffe5
                                           ;	.line	960; meter_logger.c	if (PIR1bits.TMR1IF) {
004a50   a09e     btfss   0x9e, 0, 0       	BTFSS	_PIR1bits, 0
004a52   d024     bra     0x4a9c           	BRA	_00815_DS_
                                           ;	.line	961; meter_logger.c	TMR1H = (unsigned char)(TIMER1_RELOAD >> 8);    // 262,158ms @ 8MHz
004a54   0ef8     movlw   0xf8             	MOVLW	0xf8
004a56   6ecf     movwf   0xcf, 0          	MOVWF	_TMR1H
                                           ;	.line	962; meter_logger.c	TMR1L = (unsigned char)TIMER1_RELOAD;
004a58   0e53     movlw   0x53             	MOVLW	0x53
004a5a   6ece     movwf   0xce, 0          	MOVWF	_TMR1L
                                           ;	.line	964; meter_logger.c	switch (led_flash.state) {
004a5c   c54c     movff   0x54c, 0         	MOVFF	_led_flash, r0x00
004a5e   f000
004a60   5000     movf    0, 0, 0          	MOVF	r0x00, W
004a62   6e01     movwf   0x1, 0           	MOVWF	r0x01
004a64   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004a66   e004     bz      0x4a70           	BZ	_00809_DS_
004a68   5000     movf    0, 0, 0          	MOVF	r0x00, W
004a6a   0a01     xorlw   0x1              	XORLW	0x01
004a6c   e006     bz      0x4a7a           	BZ	_00810_DS_
004a6e   d011     bra     0x4a92           	BRA	_00813_DS_
                                           _00809_DS_:
                                           ;	.line	966; meter_logger.c	LED_PIN = 1;
004a70   8881     bsf     0x81, 0x4, 0     	BSF	_PORTBbits, 4
                                           ;	.line	967; meter_logger.c	led_flash.state = LED_FLASH_RUNNING;
004a72   0e01     movlw   0x1              	MOVLW	0x01
004a74   0105     movlb   0x5              	BANKSEL	_led_flash
004a76   6f4c     movwf   0x4c, 0x1        	MOVWF	_led_flash, B
                                           ;	.line	968; meter_logger.c	break;
004a78   d00c     bra     0x4a92           	BRA	_00813_DS_
                                           _00810_DS_:
                                           ;	.line	970; meter_logger.c	if (led_flash.timer-- == 0) {
004a7a   c54d     movff   0x54d, 0         	MOVFF	(_led_flash + 1), r0x00
004a7c   f000
004a7e   0400     decf    0, 0, 0          	DECF	r0x00, W
004a80   6e01     movwf   0x1, 0           	MOVWF	r0x01
004a82   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004a84   0105     movlb   0x5              	BANKSEL	(_led_flash + 1)
004a86   6f4d     movwf   0x4d, 0x1        	MOVWF	(_led_flash + 1), B
004a88   5000     movf    0, 0, 0          	MOVF	r0x00, W
004a8a   e103     bnz     0x4a92           	BNZ	_00813_DS_
                                           ;	.line	971; meter_logger.c	LED_PIN = 0;
004a8c   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	972; meter_logger.c	led_flash.state = LED_FLASH_STOPPED;
004a8e   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
004a90   6f4c     movwf   0x4c, 0x1        	MOVWF	_led_flash, B
                                           _00813_DS_:
004a92   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	976; meter_logger.c	timer_1_ms++;
004a94   3f40     incfsz  0x40, 0x1, 0x1   	INCFSZ	_timer_1_ms, F, B
004a96   d001     bra     0x4a9a           	BRA	_31215_DS_
                                           ; removed redundant BANKSEL
004a98   2b41     incf    0x41, 0x1, 0x1   	INCF	(_timer_1_ms + 1), F, B
                                           _31215_DS_:
                                           ;	.line	977; meter_logger.c	PIR1bits.TMR1IF = 0;    /* Clear the Timer Flag  */
004a9a   909e     bcf     0x9e, 0, 0       	BCF	_PIR1bits, 0
                                           _00815_DS_:
                                           ;	.line	981; meter_logger.c	if (usart_drdy()) {
004a9c   ecfa     call    0x53f4, 0        	CALL	_usart_drdy
004a9e   f029
004aa0   6e00     movwf   0, 0             	MOVWF	r0x00
004aa2   5000     movf    0, 0, 0          	MOVF	r0x00, W
004aa4   e006     bz      0x4ab2           	BZ	_00818_DS_
                                           ;	.line	983; meter_logger.c	c = usart_getc();
004aa6   ecf8     call    0x51f0, 0        	CALL	_usart_getc
004aa8   f028
004aaa   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	984; meter_logger.c	usart_putc(c);
004aac   5000     movf    0, 0, 0          	MOVF	r0x00, W
004aae   ecde     call    0x53bc, 0        	CALL	_usart_putc
004ab0   f029
                                           _00818_DS_:
004ab2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004ab4   f001
004ab6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004ab8   f000
004aba   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004abc   ffd9
004abe   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
004ac0   fffb
004ac2   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
004ac4   fffa
004ac6   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
004ac8   ffea
004aca   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
004acc   ffe9
004ace   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
004ad0   fff4
004ad2   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
004ad4   fff3
004ad6   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
004ad8   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
004ada   ffe0
004adc   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
004ade   ffd8
004ae0   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__isr_high_prio	code
                                           _isr_high_prio:
                                           ;	.line	491; meter_logger.c	static void isr_high_prio(void) __interrupt 1 {
002440   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
002442   ffe5
002444   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
002446   ffe5
002448   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00244a   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
00244c   ffe5
00244e   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
002450   ffe5
002452   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
002454   ffe5
002456   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
002458   ffe5
00245a   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
00245c   ffe5
00245e   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
002460   ffe5
002462   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002464   ffe5
002466   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002468   ffd9
00246a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00246c   ffe5
00246e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002470   ffe5
002472   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002474   ffe5
002476   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002478   ffe5
00247a   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00247c   ffe5
00247e   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002480   ffe5
                                           ;	.line	493; meter_logger.c	if (INTCONbits.INT0IF && INTCONbits.INT0IE) {
002482   a2f2     btfss   0xf2, 0x1, 0     	BTFSS	_INTCONbits, 1
002484   d1a0     bra     0x27c6           	BRA	_00389_DS_
002486   a8f2     btfss   0xf2, 0x4, 0     	BTFSS	_INTCONbits, 4
002488   d19e     bra     0x27c6           	BRA	_00389_DS_
                                           ;	.line	494; meter_logger.c	timer_0 = (unsigned int)(TMR0L) | ((unsigned int)(TMR0H) << 8);
00248a   cfd6     movff   0xfd6, 0         	MOVFF	_TMR0L, r0x00
00248c   f000
00248e   6a01     clrf    0x1, 0           	CLRF	r0x01
002490   cfd7     movff   0xfd7, 0x2       	MOVFF	_TMR0H, r0x02
002492   f002
002494   6a03     clrf    0x3, 0           	CLRF	r0x03
002496   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002498   6e05     movwf   0x5, 0           	MOVWF	r0x05
00249a   6a04     clrf    0x4, 0           	CLRF	r0x04
00249c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00249e   1000     iorwf   0, 0, 0          	IORWF	r0x00, W
0024a0   0105     movlb   0x5              	BANKSEL	_timer_0
0024a2   6f46     movwf   0x46, 0x1        	MOVWF	_timer_0, B
0024a4   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0024a6   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
                                           ; removed redundant BANKSEL
0024a8   6f47     movwf   0x47, 0x1        	MOVWF	(_timer_0 + 1), B
0024aa   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	495; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
0024ac   5149     movf    0x49, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
0024ae   6e00     movwf   0, 0             	MOVWF	r0x00
0024b0   6a01     clrf    0x1, 0           	CLRF	r0x01
0024b2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0024b4   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	496; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
0024b6   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0024b8   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
0024ba   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	498; meter_logger.c	switch (codec_type) {
0024bc   5151     movf    0x51, 0, 0x1     	MOVF	_codec_type, W, B
0024be   0a01     xorlw   0x1              	XORLW	0x01
0024c0   e00b     bz      0x24d8           	BZ	_00347_DS_
                                           _00696_DS_:
0024c2   0105     movlb   0x5              	BANKSEL	_codec_type
0024c4   5151     movf    0x51, 0, 0x1     	MOVF	_codec_type, W, B
0024c6   0a02     xorlw   0x2              	XORLW	0x02
0024c8   e101     bnz     0x24cc           	BNZ	_00698_DS_
0024ca   d11d     bra     0x2706           	BRA	_00381_DS_
                                           _00698_DS_:
0024cc   0105     movlb   0x5              	BANKSEL	_codec_type
0024ce   5151     movf    0x51, 0, 0x1     	MOVF	_codec_type, W, B
0024d0   0a04     xorlw   0x4              	XORLW	0x04
0024d2   e101     bnz     0x24d6           	BNZ	_00700_DS_
0024d4   d146     bra     0x2762           	BRA	_00384_DS_
                                           _00700_DS_:
0024d6   d176     bra     0x27c4           	BRA	_00387_DS_
                                           _00347_DS_:
                                           ;	.line	500; meter_logger.c	flash_led(100);
0024d8   0e64     movlw   0x64             	MOVLW	0x64
0024da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0024dc   ec20     call    0x5240, 0        	CALL	_flash_led
0024de   f029
0024e0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	501; meter_logger.c	switch (testo_ir_proto.state) {
0024e2   c51d     movff   0x51d, 0         	MOVFF	_testo_ir_proto, r0x00
0024e4   f000
0024e6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0024e8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0024ea   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0024ec   e008     bz      0x24fe           	BZ	_00348_DS_
0024ee   5000     movf    0, 0, 0          	MOVF	r0x00, W
0024f0   0a02     xorlw   0x2              	XORLW	0x02
0024f2   e00c     bz      0x250c           	BZ	_00349_DS_
0024f4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0024f6   0a04     xorlw   0x4              	XORLW	0x04
0024f8   e101     bnz     0x24fc           	BNZ	_00706_DS_
0024fa   d03b     bra     0x2572           	BRA	_00357_DS_
                                           _00706_DS_:
0024fc   d163     bra     0x27c4           	BRA	_00387_DS_
                                           _00348_DS_:
                                           ;	.line	503; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
0024fe   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	504; meter_logger.c	testo_ir_proto.start_bit_len = 1;
002500   0e01     movlw   0x1              	MOVLW	0x01
002502   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
002504   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	505; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
002506   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002508   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
                                           ;	.line	506; meter_logger.c	break;
00250a   d15c     bra     0x27c4           	BRA	_00387_DS_
                                           _00349_DS_:
00250c   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	508; meter_logger.c	if ((TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < TICK + timer0_reload + TICK_ADJ)) {
00250e   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002510   0f8f     addlw   0x8f             	ADDLW	0x8f
002512   6e00     movwf   0, 0             	MOVWF	r0x00
002514   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002516   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002518   6e01     movwf   0x1, 0           	MOVWF	r0x01
00251a   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
00251c   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
00251e   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002520   e102     bnz     0x2526           	BNZ	_00707_DS_
                                           ; removed redundant BANKSEL
002522   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
002524   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00707_DS_:
002526   e21f     bc      0x2566           	BC	_00354_DS_
002528   0105     movlb   0x5              	BANKSEL	_timer0_reload
00252a   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00252c   0f1f     addlw   0x1f             	ADDLW	0x1f
00252e   6e00     movwf   0, 0             	MOVWF	r0x00
002530   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
002532   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002534   6e01     movwf   0x1, 0           	MOVWF	r0x01
002536   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002538   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
00253a   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
00253c   e102     bnz     0x2542           	BNZ	_00708_DS_
00253e   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002540   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00708_DS_:
002542   e211     bc      0x2566           	BC	_00354_DS_
                                           ;	.line	509; meter_logger.c	if (testo_ir_proto.start_bit_len < 2) {
002544   0e02     movlw   0x2              	MOVLW	0x02
002546   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
002548   5d1f     subwf   0x1f, 0, 0x1     	SUBWF	(_testo_ir_proto + 2), W, B
00254a   e206     bc      0x2558           	BC	_00351_DS_
                                           ;	.line	510; meter_logger.c	testo_ir_proto.start_bit_len++;
00254c   c51f     movff   0x51f, 0         	MOVFF	(_testo_ir_proto + 2), r0x00
00254e   f000
002550   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002552   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002554   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
002556   d136     bra     0x27c4           	BRA	_00387_DS_
                                           _00351_DS_:
002558   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	514; meter_logger.c	testo_ir_proto.data = 0;
00255a   6b20     clrf    0x20, 0x1        	CLRF	(_testo_ir_proto + 3), B
                                           ; removed redundant BANKSEL
00255c   6b21     clrf    0x21, 0x1        	CLRF	(_testo_ir_proto + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	515; meter_logger.c	testo_ir_proto.data_len = 0;
00255e   6b22     clrf    0x22, 0x1        	CLRF	(_testo_ir_proto + 5), B
                                           ;	.line	516; meter_logger.c	testo_ir_proto.state = DATA_WAIT;
002560   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
002562   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
002564   d12f     bra     0x27c4           	BRA	_00387_DS_
                                           _00354_DS_:
                                           ;	.line	521; meter_logger.c	testo_ir_proto.start_bit_len = 1;
002566   0e01     movlw   0x1              	MOVLW	0x01
002568   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
00256a   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	522; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
00256c   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
00256e   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
                                           ;	.line	524; meter_logger.c	break;
002570   d129     bra     0x27c4           	BRA	_00387_DS_
                                           _00357_DS_:
                                           ;	.line	526; meter_logger.c	if (testo_ir_proto.data_len <= 12) {
002572   0e0d     movlw   0xd              	MOVLW	0x0d
002574   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
002576   5d22     subwf   0x22, 0, 0x1     	SUBWF	(_testo_ir_proto + 5), W, B
002578   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00257a   d124     bra     0x27c4           	BRA	_00387_DS_
00257c   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	527; meter_logger.c	if (((TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < TICK + timer0_reload + TICK_ADJ)) || ((3 * TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < 3 * TICK + timer0_reload + TICK_ADJ))) {
00257e   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002580   0f8f     addlw   0x8f             	ADDLW	0x8f
002582   6e00     movwf   0, 0             	MOVWF	r0x00
002584   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002586   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002588   6e01     movwf   0x1, 0           	MOVWF	r0x01
00258a   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
00258c   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
00258e   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002590   e102     bnz     0x2596           	BNZ	_00711_DS_
                                           ; removed redundant BANKSEL
002592   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
002594   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00711_DS_:
002596   e20e     bc      0x25b4           	BC	_00373_DS_
002598   0105     movlb   0x5              	BANKSEL	_timer0_reload
00259a   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00259c   0f1f     addlw   0x1f             	ADDLW	0x1f
00259e   6e00     movwf   0, 0             	MOVWF	r0x00
0025a0   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
0025a2   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0025a4   6e01     movwf   0x1, 0           	MOVWF	r0x01
0025a6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0025a8   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0025aa   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
0025ac   e102     bnz     0x25b2           	BNZ	_00712_DS_
0025ae   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0025b0   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00712_DS_:
0025b2   e31c     bnc     0x25ec           	BNC	_00368_DS_
                                           _00373_DS_:
0025b4   0105     movlb   0x5              	BANKSEL	_timer0_reload
0025b6   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0025b8   0f3d     addlw   0x3d             	ADDLW	0x3d
0025ba   6e00     movwf   0, 0             	MOVWF	r0x00
0025bc   0e09     movlw   0x9              	MOVLW	0x09
                                           ; removed redundant BANKSEL
0025be   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0025c0   6e01     movwf   0x1, 0           	MOVWF	r0x01
0025c2   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0025c4   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
0025c6   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0025c8   e102     bnz     0x25ce           	BNZ	_00713_DS_
                                           ; removed redundant BANKSEL
0025ca   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
0025cc   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00713_DS_:
0025ce   e235     bc      0x263a           	BC	_00369_DS_
0025d0   0105     movlb   0x5              	BANKSEL	_timer0_reload
0025d2   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0025d4   0fcd     addlw   0xcd             	ADDLW	0xcd
0025d6   6e00     movwf   0, 0             	MOVWF	r0x00
0025d8   0e0a     movlw   0xa              	MOVLW	0x0a
                                           ; removed redundant BANKSEL
0025da   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0025dc   6e01     movwf   0x1, 0           	MOVWF	r0x01
0025de   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0025e0   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0025e2   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
0025e4   e102     bnz     0x25ea           	BNZ	_00714_DS_
0025e6   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0025e8   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00714_DS_:
0025ea   e227     bc      0x263a           	BC	_00369_DS_
                                           _00368_DS_:
0025ec   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	529; meter_logger.c	if ((testo_ir_proto.data & 1) != 0) {
0025ee   a120     btfss   0x20, 0, 0x1     	BTFSS	(_testo_ir_proto + 3), 0
0025f0   d00a     bra     0x2606           	BRA	_00359_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	531; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
0025f2   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0025f4   6e00     movwf   0, 0             	MOVWF	r0x00
0025f6   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
0025f8   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
0025fa   6e01     movwf   0x1, 0           	MOVWF	r0x01
0025fc   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0025fe   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002600   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002602   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
002604   d013     bra     0x262c           	BRA	_00360_DS_
                                           _00359_DS_:
002606   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	535; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
002608   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
00260a   6e00     movwf   0, 0             	MOVWF	r0x00
00260c   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
00260e   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
002610   6e01     movwf   0x1, 0           	MOVWF	r0x01
002612   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002614   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002616   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002618   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           ;	.line	536; meter_logger.c	testo_ir_proto.data |= 1;	// and set bit 0
00261a   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
00261c   1120     iorwf   0x20, 0, 0x1     	IORWF	(_testo_ir_proto + 3), W, B
00261e   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002620   5121     movf    0x21, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
002622   6e01     movwf   0x1, 0           	MOVWF	r0x01
002624   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002626   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002628   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00262a   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           _00360_DS_:
                                           ;	.line	538; meter_logger.c	testo_ir_proto.data_len++;
00262c   c522     movff   0x522, 0         	MOVFF	(_testo_ir_proto + 5), r0x00
00262e   f000
002630   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002632   5000     movf    0, 0, 0          	MOVF	r0x00, W
002634   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
002636   6f22     movwf   0x22, 0x1        	MOVWF	(_testo_ir_proto + 5), B
002638   d048     bra     0x26ca           	BRA	_00370_DS_
                                           _00369_DS_:
00263a   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	540; meter_logger.c	else if ((2 * TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < 2 * TICK + timer0_reload + TICK_ADJ)) {
00263c   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00263e   0fe6     addlw   0xe6             	ADDLW	0xe6
002640   6e00     movwf   0, 0             	MOVWF	r0x00
002642   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
002644   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002646   6e01     movwf   0x1, 0           	MOVWF	r0x01
002648   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
00264a   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
00264c   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00264e   e102     bnz     0x2654           	BNZ	_00717_DS_
                                           ; removed redundant BANKSEL
002650   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
002652   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00717_DS_:
002654   e235     bc      0x26c0           	BC	_00365_DS_
002656   0105     movlb   0x5              	BANKSEL	_timer0_reload
002658   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00265a   0f76     addlw   0x76             	ADDLW	0x76
00265c   6e00     movwf   0, 0             	MOVWF	r0x00
00265e   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
002660   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002662   6e01     movwf   0x1, 0           	MOVWF	r0x01
002664   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002666   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002668   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
00266a   e102     bnz     0x2670           	BNZ	_00718_DS_
00266c   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00266e   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00718_DS_:
002670   e227     bc      0x26c0           	BC	_00365_DS_
002672   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	542; meter_logger.c	if ((testo_ir_proto.data & 1) != 0) {
002674   a120     btfss   0x20, 0, 0x1     	BTFSS	(_testo_ir_proto + 3), 0
002676   d013     bra     0x269e           	BRA	_00362_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	544; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
002678   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
00267a   6e00     movwf   0, 0             	MOVWF	r0x00
00267c   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
00267e   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
002680   6e01     movwf   0x1, 0           	MOVWF	r0x01
002682   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002684   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002686   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002688   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           ;	.line	545; meter_logger.c	testo_ir_proto.data |= 1;	// and set bit 0
00268a   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
00268c   1120     iorwf   0x20, 0, 0x1     	IORWF	(_testo_ir_proto + 3), W, B
00268e   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002690   5121     movf    0x21, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
002692   6e01     movwf   0x1, 0           	MOVWF	r0x01
002694   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002696   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002698   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00269a   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
00269c   d00a     bra     0x26b2           	BRA	_00363_DS_
                                           _00362_DS_:
00269e   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	549; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
0026a0   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0026a2   6e00     movwf   0, 0             	MOVWF	r0x00
0026a4   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
0026a6   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
0026a8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0026aa   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0026ac   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
0026ae   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0026b0   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           _00363_DS_:
                                           ;	.line	551; meter_logger.c	testo_ir_proto.data_len++;
0026b2   c522     movff   0x522, 0         	MOVFF	(_testo_ir_proto + 5), r0x00
0026b4   f000
0026b6   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0026b8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0026ba   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
0026bc   6f22     movwf   0x22, 0x1        	MOVWF	(_testo_ir_proto + 5), B
0026be   d005     bra     0x26ca           	BRA	_00370_DS_
                                           _00365_DS_:
                                           ;	.line	556; meter_logger.c	testo_ir_proto.start_bit_len = 1;
0026c0   0e01     movlw   0x1              	MOVLW	0x01
0026c2   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
0026c4   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	557; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
0026c6   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
0026c8   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
                                           _00370_DS_:
0026ca   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
                                           ;	.line	559; meter_logger.c	if (testo_ir_proto.data_len == 12) {
0026cc   5122     movf    0x22, 0, 0x1     	MOVF	(_testo_ir_proto + 5), W, B
0026ce   0a0c     xorlw   0xc              	XORLW	0x0c
0026d0   e001     bz      0x26d4           	BZ	_00722_DS_
0026d2   d078     bra     0x27c4           	BRA	_00387_DS_
                                           _00722_DS_:
0026d4   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 4)
                                           ;	.line	562; meter_logger.c	if (testo_valid_err_corr(testo_ir_proto.data & 0xffff)) {
0026d6   5121     movf    0x21, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
0026d8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0026da   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0026dc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0026de   ecb0     call    0x3b60, 0        	CALL	_testo_valid_err_corr
0026e0   f01d
0026e2   6e00     movwf   0, 0             	MOVWF	r0x00
0026e4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0026e6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0026e8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0026ea   e00a     bz      0x2700           	BZ	_00375_DS_
0026ec   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	564; meter_logger.c	fifo_put(testo_ir_proto.data & 0xff);
0026ee   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0026f0   6e00     movwf   0, 0             	MOVWF	r0x00
0026f2   6a01     clrf    0x1, 0           	CLRF	r0x01
0026f4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0026f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0026f8   ecb8     call    0x4370, 0        	CALL	_fifo_put
0026fa   f021
0026fc   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	565; meter_logger.c	LED_PIN = 1;
0026fe   8881     bsf     0x81, 0x4, 0     	BSF	_PORTBbits, 4
                                           _00375_DS_:
002700   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	567; meter_logger.c	testo_ir_proto.state = INIT_STATE;
002702   6b1d     clrf    0x1d, 0x1        	CLRF	_testo_ir_proto, B
                                           ;	.line	572; meter_logger.c	break;
002704   d05f     bra     0x27c4           	BRA	_00387_DS_
                                           _00381_DS_:
002706   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	574; meter_logger.c	switch (rs232_proto.state) {
002708   5123     movf    0x23, 0, 0x1     	MOVF	_rs232_proto, W, B
00270a   0a02     xorlw   0x2              	XORLW	0x02
00270c   e001     bz      0x2710           	BZ	_00725_DS_
00270e   d05a     bra     0x27c4           	BRA	_00387_DS_
                                           _00725_DS_:
002710   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	585; meter_logger.c	TMR0H = (unsigned char)((timer0_reload - ((0xffff - timer0_reload) >> 1)) >> 8);
002712   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002714   08ff     sublw   0xff             	SUBLW	0xff
002716   6e00     movwf   0, 0             	MOVWF	r0x00
002718   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
00271a   5549     subfwb  0x49, 0, 0x1     	SUBFWB	(_timer0_reload + 1), W, B
00271c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00271e   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002720   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
002722   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
002724   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002726   5d48     subwf   0x48, 0, 0x1     	SUBWF	_timer0_reload, W, B
002728   6e00     movwf   0, 0             	MOVWF	r0x00
00272a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00272c   5949     subwfb  0x49, 0, 0x1     	SUBWFB	(_timer0_reload + 1), W, B
00272e   6e01     movwf   0x1, 0           	MOVWF	r0x01
002730   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002732   6e00     movwf   0, 0             	MOVWF	r0x00
002734   6a01     clrf    0x1, 0           	CLRF	r0x01
002736   5000     movf    0, 0, 0          	MOVF	r0x00, W
002738   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	586; meter_logger.c	TMR0L = (unsigned char)timer0_reload - ((0xffff - timer0_reload) >> 1);
00273a   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00273c   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
00273e   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002740   08ff     sublw   0xff             	SUBLW	0xff
002742   6e01     movwf   0x1, 0           	MOVWF	r0x01
002744   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
002746   5549     subfwb  0x49, 0, 0x1     	SUBFWB	(_timer0_reload + 1), W, B
002748   6e02     movwf   0x2, 0           	MOVWF	r0x02
00274a   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
00274c   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
00274e   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
002750   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002752   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002754   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
                                           ;	.line	587; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int while we are using timer to receive data bits
002756   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	588; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
002758   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	589; meter_logger.c	rs232_proto.state = DATA_WAIT;
00275a   0e04     movlw   0x4              	MOVLW	0x04
00275c   0105     movlb   0x5              	BANKSEL	_rs232_proto
00275e   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	592; meter_logger.c	break;
002760   d031     bra     0x27c4           	BRA	_00387_DS_
                                           _00384_DS_:
002762   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	594; meter_logger.c	switch (rs232_proto.state) {
002764   5123     movf    0x23, 0, 0x1     	MOVF	_rs232_proto, W, B
002766   0a02     xorlw   0x2              	XORLW	0x02
002768   e12d     bnz     0x27c4           	BNZ	_00387_DS_
                                           _00727_DS_:
00276a   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	605; meter_logger.c	TMR0H = (unsigned char)((timer0_reload - ((0xffff - timer0_reload) >> 1)) >> 8);
00276c   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00276e   08ff     sublw   0xff             	SUBLW	0xff
002770   6e00     movwf   0, 0             	MOVWF	r0x00
002772   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
002774   5549     subfwb  0x49, 0, 0x1     	SUBFWB	(_timer0_reload + 1), W, B
002776   6e01     movwf   0x1, 0           	MOVWF	r0x01
002778   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
00277a   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
00277c   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
00277e   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002780   5d48     subwf   0x48, 0, 0x1     	SUBWF	_timer0_reload, W, B
002782   6e00     movwf   0, 0             	MOVWF	r0x00
002784   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002786   5949     subwfb  0x49, 0, 0x1     	SUBWFB	(_timer0_reload + 1), W, B
002788   6e01     movwf   0x1, 0           	MOVWF	r0x01
00278a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00278c   6e00     movwf   0, 0             	MOVWF	r0x00
00278e   6a01     clrf    0x1, 0           	CLRF	r0x01
002790   5000     movf    0, 0, 0          	MOVF	r0x00, W
002792   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	606; meter_logger.c	TMR0L = (unsigned char)timer0_reload - ((0xffff - timer0_reload) >> 1);
002794   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002796   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002798   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00279a   08ff     sublw   0xff             	SUBLW	0xff
00279c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00279e   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
0027a0   5549     subfwb  0x49, 0, 0x1     	SUBFWB	(_timer0_reload + 1), W, B
0027a2   6e02     movwf   0x2, 0           	MOVWF	r0x02
0027a4   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0027a6   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
0027a8   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
0027aa   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0027ac   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0027ae   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
                                           ;	.line	607; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int while we are using timer to receive data bits
0027b0   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	608; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
0027b2   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	609; meter_logger.c	rs232_proto.data &= 0x7f;	// 7-bit data
0027b4   0e7f     movlw   0x7f             	MOVLW	0x7f
0027b6   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
0027b8   1525     andwf   0x25, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
0027ba   6e00     movwf   0, 0             	MOVWF	r0x00
0027bc   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0027be   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	610; meter_logger.c	rs232_proto.state = DATA_WAIT;
0027c0   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
0027c2   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           _00387_DS_:
                                           ;	.line	615; meter_logger.c	INTCONbits.INT0IF = 0;	/* Clear Interrupt Flag */
0027c4   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           _00389_DS_:
                                           ;	.line	619; meter_logger.c	if (INTCONbits.TMR0IF && INTCONbits.TMR0IE) {
0027c6   a4f2     btfss   0xf2, 0x2, 0     	BTFSS	_INTCONbits, 2
0027c8   efeb     goto    0x2bd6           	GOTO	_00463_DS_
0027ca   f015
0027cc   aaf2     btfss   0xf2, 0x5, 0     	BTFSS	_INTCONbits, 5
0027ce   efeb     goto    0x2bd6           	GOTO	_00463_DS_
0027d0   f015
0027d2   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	621; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
0027d4   5149     movf    0x49, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
0027d6   6e00     movwf   0, 0             	MOVWF	r0x00
0027d8   6a01     clrf    0x1, 0           	CLRF	r0x01
0027da   5000     movf    0, 0, 0          	MOVF	r0x00, W
0027dc   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	622; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
0027de   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0027e0   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
                                           ;	.line	624; meter_logger.c	switch (codec_type) {
0027e2   0e01     movlw   0x1              	MOVLW	0x01
0027e4   0105     movlb   0x5              	BANKSEL	_codec_type
0027e6   5d51     subwf   0x51, 0, 0x1     	SUBWF	_codec_type, W, B
0027e8   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
0027ea   efea     goto    0x2bd4           	GOTO	_00461_DS_
0027ec   f015
0027ee   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
0027f0   5d51     subwf   0x51, 0, 0x1     	SUBWF	_codec_type, W, B
0027f2   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0027f4   efea     goto    0x2bd4           	GOTO	_00461_DS_
0027f6   f015
                                           ; removed redundant BANKSEL
0027f8   0551     decf    0x51, 0, 0x1     	DECF	_codec_type, W, B
0027fa   6e00     movwf   0, 0             	MOVWF	r0x00
0027fc   6afa     clrf    0xfa, 0          	CLRF	PCLATH
0027fe   6afb     clrf    0xfb, 0          	CLRF	PCLATU
002800   3400     rlcf    0, 0, 0          	RLCF	r0x00, W
002802   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
002804   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
002806   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
002808   0bfc     andlw   0xfc             	ANDLW	0xfc
00280a   0f1a     addlw   0x1a             	ADDLW	LOW(_00731_DS_)
00280c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00280e   0e28     movlw   0x28             	MOVLW	HIGH(_00731_DS_)
002810   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
002812   0e00     movlw   0                	MOVLW	UPPER(_00731_DS_)
002814   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
002816   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002818   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00731_DS_:
00281a   ef1b     goto    0x2836           	GOTO	_00391_DS_
00281c   f014
00281e   ef69     goto    0x28d2           	GOTO	_00403_DS_
002820   f014
002822   ef20     goto    0x2840           	GOTO	_00392_DS_
002824   f014
002826   ef13     goto    0x2a26           	GOTO	_00424_DS_
002828   f015
00282a   efa9     goto    0x2952           	GOTO	_00413_DS_
00282c   f014
00282e   ef53     goto    0x2aa6           	GOTO	_00434_DS_
002830   f015
002832   ef95     goto    0x2b2a           	GOTO	_00445_DS_
002834   f015
                                           _00391_DS_:
                                           ;	.line	626; meter_logger.c	T0CONbits.TMR0ON = 0;			// Stop TMR0
002836   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
002838   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	627; meter_logger.c	testo_ir_proto.state = INIT_STATE;
00283a   6b1d     clrf    0x1d, 0x1        	CLRF	_testo_ir_proto, B
00283c   0003     sleep                    	sleep 
                                           ;	.line	629; meter_logger.c	break;
00283e   d1ca     bra     0x2bd4           	BRA	_00461_DS_
                                           _00392_DS_:
                                           ;	.line	631; meter_logger.c	switch (rs232_proto.state) {
002840   c523     movff   0x523, 0         	MOVFF	_rs232_proto, r0x00
002842   f000
002844   5000     movf    0, 0, 0          	MOVF	r0x00, W
002846   6e01     movwf   0x1, 0           	MOVWF	r0x01
002848   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00284a   e00a     bz      0x2860           	BZ	_00393_DS_
00284c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00284e   0a03     xorlw   0x3              	XORLW	0x03
002850   e011     bz      0x2874           	BZ	_00396_DS_
002852   5000     movf    0, 0, 0          	MOVF	r0x00, W
002854   0a0a     xorlw   0xa              	XORLW	0x0a
002856   e033     bz      0x28be           	BZ	_00400_DS_
002858   5000     movf    0, 0, 0          	MOVF	r0x00, W
00285a   0a0b     xorlw   0xb              	XORLW	0x0b
00285c   e035     bz      0x28c8           	BZ	_00401_DS_
00285e   d1ba     bra     0x2bd4           	BRA	_00461_DS_
                                           _00393_DS_:
002860   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	633; meter_logger.c	if (rs232_proto.data_len == 8) {
002862   5126     movf    0x26, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
002864   0a08     xorlw   0x8              	XORLW	0x08
002866   e001     bz      0x286a           	BZ	_00741_DS_
002868   d1b5     bra     0x2bd4           	BRA	_00461_DS_
                                           _00741_DS_:
                                           ;	.line	634; meter_logger.c	IR_LED_PIN = 1;		// inverted rs232 output on ir, start bit = ir light
00286a   8281     bsf     0x81, 0x1, 0     	BSF	_PORTBbits, 1
                                           ;	.line	635; meter_logger.c	rs232_proto.state = START_BIT_SENT;
00286c   0e03     movlw   0x3              	MOVLW	0x03
00286e   0105     movlb   0x5              	BANKSEL	_rs232_proto
002870   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	637; meter_logger.c	break;
002872   d1b0     bra     0x2bd4           	BRA	_00461_DS_
                                           _00396_DS_:
                                           ;	.line	639; meter_logger.c	if (rs232_proto.data_len >= 1) {
002874   0e01     movlw   0x1              	MOVLW	0x01
002876   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002878   5d26     subwf   0x26, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
00287a   e31c     bnc     0x28b4           	BNC	_00398_DS_
                                           ;	.line	640; meter_logger.c	IR_LED_PIN = (rs232_proto.data & 1) == 0;	// inverted rs232 output on ir
00287c   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
00287e   1525     andwf   0x25, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
002880   6e00     movwf   0, 0             	MOVWF	r0x00
002882   5000     movf    0, 0, 0          	MOVF	r0x00, W
002884   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
002886   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
002888   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
00288a   6a00     clrf    0, 0             	CLRF	r0x00
00288c   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
00288e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002890   0b01     andlw   0x1              	ANDLW	0x01
002892   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
002894   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
002896   5081     movf    0x81, 0, 0       	MOVF	_PORTBbits, W
002898   0bfd     andlw   0xfd             	ANDLW	0xfd
00289a   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
00289c   6e81     movwf   0x81, 0          	MOVWF	_PORTBbits
                                           ; removed redundant BANKSEL
                                           ;	.line	641; meter_logger.c	rs232_proto.data = rs232_proto.data >> 1;
00289e   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
0028a0   0b7f     andlw   0x7f             	ANDLW	0x7f
0028a2   6e00     movwf   0, 0             	MOVWF	r0x00
0028a4   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0028a6   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	642; meter_logger.c	rs232_proto.data_len--;
0028a8   c526     movff   0x526, 0         	MOVFF	(_rs232_proto + 3), r0x00
0028aa   f000
0028ac   0600     decf    0, 0x1, 0        	DECF	r0x00, F
0028ae   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0028b0   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
0028b2   d190     bra     0x2bd4           	BRA	_00461_DS_
                                           _00398_DS_:
                                           ;	.line	645; meter_logger.c	IR_LED_PIN = 0;								// inverted rs232 output on ir					
0028b4   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	646; meter_logger.c	rs232_proto.state = STOP_BIT_SENT;
0028b6   0e0a     movlw   0xa              	MOVLW	0x0a
0028b8   0105     movlb   0x5              	BANKSEL	_rs232_proto
0028ba   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	648; meter_logger.c	break;
0028bc   d18b     bra     0x2bd4           	BRA	_00461_DS_
                                           _00400_DS_:
                                           ;	.line	650; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
0028be   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	651; meter_logger.c	rs232_proto.state = STOP_BIT2_SENT;
0028c0   0e0b     movlw   0xb              	MOVLW	0x0b
0028c2   0105     movlb   0x5              	BANKSEL	_rs232_proto
0028c4   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	652; meter_logger.c	break;
0028c6   d186     bra     0x2bd4           	BRA	_00461_DS_
                                           _00401_DS_:
                                           ;	.line	654; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
0028c8   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
0028ca   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	655; meter_logger.c	rs232_proto.state = INIT_STATE;
0028cc   6b23     clrf    0x23, 0x1        	CLRF	_rs232_proto, B
                                           ;	.line	656; meter_logger.c	T0CONbits.TMR0ON = 0;							// stop timer 0
0028ce   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	659; meter_logger.c	break;
0028d0   d181     bra     0x2bd4           	BRA	_00461_DS_
                                           _00403_DS_:
                                           ;	.line	661; meter_logger.c	switch (rs232_proto.state) {
0028d2   c523     movff   0x523, 0         	MOVFF	_rs232_proto, r0x00
0028d4   f000
0028d6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0028d8   0a04     xorlw   0x4              	XORLW	0x04
0028da   e007     bz      0x28ea           	BZ	_00404_DS_
0028dc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0028de   0a08     xorlw   0x8              	XORLW	0x08
0028e0   e025     bz      0x292c           	BZ	_00410_DS_
0028e2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0028e4   0a09     xorlw   0x9              	XORLW	0x09
0028e6   e026     bz      0x2934           	BZ	_00411_DS_
0028e8   d175     bra     0x2bd4           	BRA	_00461_DS_
                                           _00404_DS_:
                                           ;	.line	663; meter_logger.c	rs232_proto.data_len++;
0028ea   c526     movff   0x526, 0         	MOVFF	(_rs232_proto + 3), r0x00
0028ec   f000
0028ee   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0028f0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0028f2   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
0028f4   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	664; meter_logger.c	if (IR_PIN) {		
0028f6   a081     btfss   0x81, 0, 0       	BTFSS	_PORTBbits, 0
0028f8   d006     bra     0x2906           	BRA	_00406_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	666; meter_logger.c	rs232_proto.data >>= 1;
0028fa   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
0028fc   0b7f     andlw   0x7f             	ANDLW	0x7f
0028fe   6e00     movwf   0, 0             	MOVWF	r0x00
002900   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002902   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
002904   d00b     bra     0x291c           	BRA	_00407_DS_
                                           _00406_DS_:
002906   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	678; meter_logger.c	rs232_proto.data >>= 1;
002908   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
00290a   0b7f     andlw   0x7f             	ANDLW	0x7f
00290c   6e00     movwf   0, 0             	MOVWF	r0x00
00290e   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002910   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	679; meter_logger.c	rs232_proto.data |= 0x80;
002912   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
002914   1125     iorwf   0x25, 0, 0x1     	IORWF	(_rs232_proto + 2), W, B
002916   6e00     movwf   0, 0             	MOVWF	r0x00
002918   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00291a   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           _00407_DS_:
                                           ;	.line	699; meter_logger.c	if (rs232_proto.data_len >= 8) {
00291c   0e08     movlw   0x8              	MOVLW	0x08
00291e   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002920   5d26     subwf   0x26, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002922   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
002924   d157     bra     0x2bd4           	BRA	_00461_DS_
                                           ;	.line	701; meter_logger.c	rs232_proto.state = STOP_BIT_WAIT;
002926   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
002928   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	703; meter_logger.c	break;
00292a   d154     bra     0x2bd4           	BRA	_00461_DS_
                                           _00410_DS_:
                                           ;	.line	705; meter_logger.c	rs232_proto.state = STOP_BIT2_WAIT;
00292c   0e09     movlw   0x9              	MOVLW	0x09
00292e   0105     movlb   0x5              	BANKSEL	_rs232_proto
002930   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	706; meter_logger.c	break;
002932   d150     bra     0x2bd4           	BRA	_00461_DS_
                                           _00411_DS_:
002934   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	708; meter_logger.c	fifo_put(rs232_proto.data);
002936   5125     movf    0x25, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
002938   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00293a   ecb8     call    0x4370, 0        	CALL	_fifo_put
00293c   f021
00293e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002940   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	709; meter_logger.c	rs232_proto.data = 0;
002942   6b25     clrf    0x25, 0x1        	CLRF	(_rs232_proto + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	710; meter_logger.c	rs232_proto.data_len = 0;
002944   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	711; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
002946   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002948   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	712; meter_logger.c	T0CONbits.TMR0ON = 0;
00294a   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	713; meter_logger.c	INTCONbits.INT0IF = 0;		// dont enter ext int now
00294c   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           ;	.line	714; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int again
00294e   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	717; meter_logger.c	break;
002950   d141     bra     0x2bd4           	BRA	_00461_DS_
                                           _00413_DS_:
                                           ;	.line	719; meter_logger.c	switch (rs232_proto.state) {
002952   c523     movff   0x523, 0         	MOVFF	_rs232_proto, r0x00
002954   f000
002956   5000     movf    0, 0, 0          	MOVF	r0x00, W
002958   6e01     movwf   0x1, 0           	MOVWF	r0x01
00295a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00295c   e00c     bz      0x2976           	BZ	_00414_DS_
00295e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002960   0a03     xorlw   0x3              	XORLW	0x03
002962   e018     bz      0x2994           	BZ	_00417_DS_
002964   5000     movf    0, 0, 0          	MOVF	r0x00, W
002966   0a06     xorlw   0x6              	XORLW	0x06
002968   e101     bnz     0x296c           	BNZ	_00757_DS_
00296a   d053     bra     0x2a12           	BRA	_00421_DS_
                                           _00757_DS_:
00296c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00296e   0a0a     xorlw   0xa              	XORLW	0x0a
002970   e101     bnz     0x2974           	BNZ	_00759_DS_
002972   d054     bra     0x2a1c           	BRA	_00422_DS_
                                           _00759_DS_:
002974   d12f     bra     0x2bd4           	BRA	_00461_DS_
                                           _00414_DS_:
002976   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	721; meter_logger.c	if (rs232_proto.data_len == 7) {
002978   5126     movf    0x26, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
00297a   0a07     xorlw   0x7              	XORLW	0x07
00297c   e001     bz      0x2980           	BZ	_00761_DS_
00297e   d12a     bra     0x2bd4           	BRA	_00461_DS_
                                           _00761_DS_:
                                           ;	.line	722; meter_logger.c	IR_LED_PIN = 1;		// inverted rs232 output on ir, start bit = ir light
002980   8281     bsf     0x81, 0x1, 0     	BSF	_PORTBbits, 1
                                           ;	.line	723; meter_logger.c	rs232_proto.parity = rs232_proto.data & 1;
002982   0e01     movlw   0x1              	MOVLW	0x01
002984   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
002986   1525     andwf   0x25, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
002988   6e00     movwf   0, 0             	MOVWF	r0x00
00298a   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00298c   6f27     movwf   0x27, 0x1        	MOVWF	(_rs232_proto + 4), B
                                           ;	.line	724; meter_logger.c	rs232_proto.state = START_BIT_SENT;
00298e   0e03     movlw   0x3              	MOVLW	0x03
                                           ; removed redundant BANKSEL
002990   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	726; meter_logger.c	break;
002992   d120     bra     0x2bd4           	BRA	_00461_DS_
                                           _00417_DS_:
                                           ;	.line	728; meter_logger.c	if (rs232_proto.data_len >= 1) {
002994   0e01     movlw   0x1              	MOVLW	0x01
002996   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002998   5d26     subwf   0x26, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
00299a   e326     bnc     0x29e8           	BNC	_00419_DS_
                                           ;	.line	729; meter_logger.c	IR_LED_PIN = (rs232_proto.data & 1) == 0;	// inverted rs232 output on ir
00299c   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
00299e   1525     andwf   0x25, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
0029a0   6e00     movwf   0, 0             	MOVWF	r0x00
0029a2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0029a4   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
0029a6   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
0029a8   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0029aa   6a00     clrf    0, 0             	CLRF	r0x00
0029ac   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
0029ae   5000     movf    0, 0, 0          	MOVF	r0x00, W
0029b0   0b01     andlw   0x1              	ANDLW	0x01
0029b2   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
0029b4   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
0029b6   5081     movf    0x81, 0, 0       	MOVF	_PORTBbits, W
0029b8   0bfd     andlw   0xfd             	ANDLW	0xfd
0029ba   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
0029bc   6e81     movwf   0x81, 0          	MOVWF	_PORTBbits
                                           ; removed redundant BANKSEL
                                           ;	.line	730; meter_logger.c	rs232_proto.parity ^= ((rs232_proto.data >> 1) & 1);
0029be   5125     movf    0x25, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
0029c0   0b02     andlw   0x2              	ANDLW	0x02
0029c2   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
0029c4   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
0029c6   5127     movf    0x27, 0, 0x1     	MOVF	(_rs232_proto + 4), W, B
0029c8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0029ca   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0029cc   1a00     xorwf   0, 0x1, 0        	XORWF	r0x00, F
0029ce   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0029d0   6f27     movwf   0x27, 0x1        	MOVWF	(_rs232_proto + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	731; meter_logger.c	rs232_proto.data = rs232_proto.data >> 1;
0029d2   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
0029d4   0b7f     andlw   0x7f             	ANDLW	0x7f
0029d6   6e00     movwf   0, 0             	MOVWF	r0x00
0029d8   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0029da   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	732; meter_logger.c	rs232_proto.data_len--;
0029dc   c526     movff   0x526, 0         	MOVFF	(_rs232_proto + 3), r0x00
0029de   f000
0029e0   0600     decf    0, 0x1, 0        	DECF	r0x00, F
0029e2   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0029e4   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
0029e6   d0f6     bra     0x2bd4           	BRA	_00461_DS_
                                           _00419_DS_:
                                           ;	.line	735; meter_logger.c	IR_LED_PIN = (rs232_proto.parity & 1) == 0;		// inverted rs232 output on ir					
0029e8   0e01     movlw   0x1              	MOVLW	0x01
0029ea   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 4)
0029ec   1527     andwf   0x27, 0, 0x1     	ANDWF	(_rs232_proto + 4), W, B
0029ee   6e00     movwf   0, 0             	MOVWF	r0x00
0029f0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0029f2   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
0029f4   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
0029f6   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0029f8   6a00     clrf    0, 0             	CLRF	r0x00
0029fa   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
0029fc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0029fe   0b01     andlw   0x1              	ANDLW	0x01
002a00   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
002a02   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
002a04   5081     movf    0x81, 0, 0       	MOVF	_PORTBbits, W
002a06   0bfd     andlw   0xfd             	ANDLW	0xfd
002a08   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
002a0a   6e81     movwf   0x81, 0          	MOVWF	_PORTBbits
                                           ;	.line	736; meter_logger.c	rs232_proto.state = PARITY_BIT_SENT;
002a0c   0e06     movlw   0x6              	MOVLW	0x06
                                           ; removed redundant BANKSEL
002a0e   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	738; meter_logger.c	break;
002a10   d0e1     bra     0x2bd4           	BRA	_00461_DS_
                                           _00421_DS_:
                                           ;	.line	740; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002a12   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	741; meter_logger.c	rs232_proto.state = STOP_BIT_SENT;
002a14   0e0a     movlw   0xa              	MOVLW	0x0a
002a16   0105     movlb   0x5              	BANKSEL	_rs232_proto
002a18   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	742; meter_logger.c	break;
002a1a   d0dc     bra     0x2bd4           	BRA	_00461_DS_
                                           _00422_DS_:
                                           ;	.line	744; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002a1c   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
002a1e   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	745; meter_logger.c	rs232_proto.state = INIT_STATE;
002a20   6b23     clrf    0x23, 0x1        	CLRF	_rs232_proto, B
                                           ;	.line	746; meter_logger.c	T0CONbits.TMR0ON = 0;							// stop timer 0
002a22   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	749; meter_logger.c	break;
002a24   d0d7     bra     0x2bd4           	BRA	_00461_DS_
                                           _00424_DS_:
                                           ;	.line	751; meter_logger.c	switch (rs232_proto.state) {
002a26   c523     movff   0x523, 0         	MOVFF	_rs232_proto, r0x00
002a28   f000
002a2a   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a2c   0a04     xorlw   0x4              	XORLW	0x04
002a2e   e007     bz      0x2a3e           	BZ	_00425_DS_
002a30   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a32   0a07     xorlw   0x7              	XORLW	0x07
002a34   e025     bz      0x2a80           	BZ	_00431_DS_
002a36   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a38   0a08     xorlw   0x8              	XORLW	0x08
002a3a   e026     bz      0x2a88           	BZ	_00432_DS_
002a3c   d0cb     bra     0x2bd4           	BRA	_00461_DS_
                                           _00425_DS_:
                                           ;	.line	753; meter_logger.c	rs232_proto.data_len++;
002a3e   c526     movff   0x526, 0         	MOVFF	(_rs232_proto + 3), r0x00
002a40   f000
002a42   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002a44   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a46   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002a48   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	754; meter_logger.c	if (IR_PIN) {
002a4a   a081     btfss   0x81, 0, 0       	BTFSS	_PORTBbits, 0
002a4c   d006     bra     0x2a5a           	BRA	_00427_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	756; meter_logger.c	rs232_proto.data >>= 1;
002a4e   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002a50   0b7f     andlw   0x7f             	ANDLW	0x7f
002a52   6e00     movwf   0, 0             	MOVWF	r0x00
002a54   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002a56   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
002a58   d00b     bra     0x2a70           	BRA	_00428_DS_
                                           _00427_DS_:
002a5a   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	768; meter_logger.c	rs232_proto.data >>= 1;
002a5c   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002a5e   0b7f     andlw   0x7f             	ANDLW	0x7f
002a60   6e00     movwf   0, 0             	MOVWF	r0x00
002a62   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002a64   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	769; meter_logger.c	rs232_proto.data |= 0x40;
002a66   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
002a68   1125     iorwf   0x25, 0, 0x1     	IORWF	(_rs232_proto + 2), W, B
002a6a   6e00     movwf   0, 0             	MOVWF	r0x00
002a6c   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002a6e   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           _00428_DS_:
                                           ;	.line	789; meter_logger.c	if (rs232_proto.data_len >= 7) {
002a70   0e07     movlw   0x7              	MOVLW	0x07
002a72   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002a74   5d26     subwf   0x26, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002a76   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
002a78   d0ad     bra     0x2bd4           	BRA	_00461_DS_
                                           ;	.line	791; meter_logger.c	rs232_proto.state = PARITY_BIT_WAIT;
002a7a   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
002a7c   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	793; meter_logger.c	break;
002a7e   d0aa     bra     0x2bd4           	BRA	_00461_DS_
                                           _00431_DS_:
                                           ;	.line	795; meter_logger.c	rs232_proto.state = STOP_BIT_WAIT;
002a80   0e08     movlw   0x8              	MOVLW	0x08
002a82   0105     movlb   0x5              	BANKSEL	_rs232_proto
002a84   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	796; meter_logger.c	break;
002a86   d0a6     bra     0x2bd4           	BRA	_00461_DS_
                                           _00432_DS_:
002a88   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	798; meter_logger.c	fifo_put(rs232_proto.data);
002a8a   5125     movf    0x25, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
002a8c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002a8e   ecb8     call    0x4370, 0        	CALL	_fifo_put
002a90   f021
002a92   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002a94   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	799; meter_logger.c	rs232_proto.data = 0;
002a96   6b25     clrf    0x25, 0x1        	CLRF	(_rs232_proto + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	800; meter_logger.c	rs232_proto.data_len = 0;
002a98   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	801; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
002a9a   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002a9c   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	802; meter_logger.c	T0CONbits.TMR0ON = 0;
002a9e   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	803; meter_logger.c	INTCONbits.INT0IF = 0;		// dont enter ext int now
002aa0   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           ;	.line	804; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int again
002aa2   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	807; meter_logger.c	break;
002aa4   d097     bra     0x2bd4           	BRA	_00461_DS_
                                           _00434_DS_:
                                           ;	.line	809; meter_logger.c	switch (fsk_proto.state) {
002aa6   c500     movff   0x500, 0         	MOVFF	_fsk_proto, r0x00
002aa8   f000
002aaa   5000     movf    0, 0, 0          	MOVF	r0x00, W
002aac   0a04     xorlw   0x4              	XORLW	0x04
002aae   e004     bz      0x2ab8           	BZ	_00435_DS_
002ab0   5000     movf    0, 0, 0          	MOVF	r0x00, W
002ab2   0a08     xorlw   0x8              	XORLW	0x08
002ab4   e02e     bz      0x2b12           	BZ	_00443_DS_
002ab6   d08e     bra     0x2bd4           	BRA	_00461_DS_
                                           _00435_DS_:
                                           ;	.line	811; meter_logger.c	fsk_proto.data_len++;						
002ab8   c50d     movff   0x50d, 0         	MOVFF	(_fsk_proto + 13), r0x00
002aba   f000
002abc   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002abe   5000     movf    0, 0, 0          	MOVF	r0x00, W
002ac0   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
002ac2   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
                                           ;	.line	812; meter_logger.c	if (fsk_proto.data_len <= 8) {
002ac4   0e09     movlw   0x9              	MOVLW	0x09
                                           ; removed redundant BANKSEL
002ac6   5d0d     subwf   0xd, 0, 0x1      	SUBWF	(_fsk_proto + 13), W, B
002ac8   e220     bc      0x2b0a           	BC	_00441_DS_
                                           ;	.line	813; meter_logger.c	if ((fsk_proto.diff > 340) && (fsk_proto.diff < 476)) {
002aca   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002acc   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
002ace   e102     bnz     0x2ad4           	BNZ	_00780_DS_
002ad0   0e55     movlw   0x55             	MOVLW	0x55
                                           ; removed redundant BANKSEL
002ad2   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00780_DS_:
002ad4   e30e     bnc     0x2af2           	BNC	_00437_DS_
002ad6   0e01     movlw   0x1              	MOVLW	0x01
002ad8   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 2)
002ada   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
002adc   e102     bnz     0x2ae2           	BNZ	_00781_DS_
002ade   0edc     movlw   0xdc             	MOVLW	0xdc
                                           ; removed redundant BANKSEL
002ae0   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00781_DS_:
002ae2   e207     bc      0x2af2           	BC	_00437_DS_
002ae4   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	816; meter_logger.c	fsk_proto.data >>= 1;
002ae6   410c     rrncf   0xc, 0, 0x1      	RRNCF	(_fsk_proto + 12), W, B
002ae8   0b7f     andlw   0x7f             	ANDLW	0x7f
002aea   6e00     movwf   0, 0             	MOVWF	r0x00
002aec   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002aee   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
002af0   d071     bra     0x2bd4           	BRA	_00461_DS_
                                           _00437_DS_:
002af2   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	821; meter_logger.c	fsk_proto.data >>= 1;
002af4   410c     rrncf   0xc, 0, 0x1      	RRNCF	(_fsk_proto + 12), W, B
002af6   0b7f     andlw   0x7f             	ANDLW	0x7f
002af8   6e00     movwf   0, 0             	MOVWF	r0x00
002afa   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002afc   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
                                           ;	.line	822; meter_logger.c	fsk_proto.data |= 0x80;
002afe   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
002b00   110c     iorwf   0xc, 0, 0x1      	IORWF	(_fsk_proto + 12), W, B
002b02   6e00     movwf   0, 0             	MOVWF	r0x00
002b04   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002b06   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
002b08   d065     bra     0x2bd4           	BRA	_00461_DS_
                                           _00441_DS_:
                                           ;	.line	830; meter_logger.c	fsk_proto.state = STOP_BIT_WAIT;
002b0a   0e08     movlw   0x8              	MOVLW	0x08
002b0c   0105     movlb   0x5              	BANKSEL	_fsk_proto
002b0e   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	832; meter_logger.c	break;
002b10   d061     bra     0x2bd4           	BRA	_00461_DS_
                                           _00443_DS_:
002b12   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	835; meter_logger.c	fifo_put(fsk_proto.data);
002b14   510c     movf    0xc, 0, 0x1      	MOVF	(_fsk_proto + 12), W, B
002b16   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002b18   ecb8     call    0x4370, 0        	CALL	_fifo_put
002b1a   f021
002b1c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002b1e   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	836; meter_logger.c	fsk_proto.data = 0;
002b20   6b0c     clrf    0xc, 0x1         	CLRF	(_fsk_proto + 12), B
                                           ;	.line	837; meter_logger.c	fsk_proto.state = START_BIT_WAIT;
002b22   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002b24   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	839; meter_logger.c	INTCONbits.TMR0IE = 0;						
002b26   9af2     bcf     0xf2, 0x5, 0     	BCF	_INTCONbits, 5
                                           ;	.line	842; meter_logger.c	break;
002b28   d055     bra     0x2bd4           	BRA	_00461_DS_
                                           _00445_DS_:
                                           ;	.line	844; meter_logger.c	switch (fsk_proto.state) {
002b2a   c500     movff   0x500, 0         	MOVFF	_fsk_proto, r0x00
002b2c   f000
002b2e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b30   6e01     movwf   0x1, 0           	MOVWF	r0x01
002b32   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002b34   e00f     bz      0x2b54           	BZ	_00446_DS_
002b36   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b38   0a01     xorlw   0x1              	XORLW	0x01
002b3a   e015     bz      0x2b66           	BZ	_00449_DS_
002b3c   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b3e   0a03     xorlw   0x3              	XORLW	0x03
002b40   e019     bz      0x2b74           	BZ	_00450_DS_
002b42   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b44   0a05     xorlw   0x5              	XORLW	0x05
002b46   e101     bnz     0x2b4a           	BNZ	_00790_DS_
002b48   d039     bra     0x2bbc           	BRA	_00458_DS_
                                           _00790_DS_:
002b4a   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b4c   0a0a     xorlw   0xa              	XORLW	0x0a
002b4e   e101     bnz     0x2b52           	BNZ	_00792_DS_
002b50   d03c     bra     0x2bca           	BRA	_00459_DS_
                                           _00792_DS_:
002b52   d040     bra     0x2bd4           	BRA	_00461_DS_
                                           _00446_DS_:
002b54   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	847; meter_logger.c	if (fsk_proto.data_len == 8) {
002b56   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002b58   0a08     xorlw   0x8              	XORLW	0x08
002b5a   e103     bnz     0x2b62           	BNZ	_00448_DS_
                                           ;	.line	848; meter_logger.c	fsk_proto.state = IDLE;
002b5c   0e01     movlw   0x1              	MOVLW	0x01
002b5e   0105     movlb   0x5              	BANKSEL	_fsk_proto
002b60   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           _00448_DS_:
                                           ;	.line	851; meter_logger.c	DEBUG_PIN = 0;
002b62   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	853; meter_logger.c	break;
002b64   d037     bra     0x2bd4           	BRA	_00461_DS_
                                           _00449_DS_:
                                           ;	.line	855; meter_logger.c	send_fsk_low();
002b66   ec7d     call    0x18fa, 0        	CALL	_send_fsk_low
002b68   f00c
                                           ;	.line	856; meter_logger.c	fsk_proto.state = START_BIT_SENT;
002b6a   0e03     movlw   0x3              	MOVLW	0x03
002b6c   0105     movlb   0x5              	BANKSEL	_fsk_proto
002b6e   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	858; meter_logger.c	DEBUG_PIN = 1;
002b70   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
                                           ;	.line	860; meter_logger.c	break;
002b72   d030     bra     0x2bd4           	BRA	_00461_DS_
                                           _00450_DS_:
                                           ;	.line	862; meter_logger.c	if (fsk_proto.data_len--) {
002b74   c50d     movff   0x50d, 0         	MOVFF	(_fsk_proto + 13), r0x00
002b76   f000
002b78   0400     decf    0, 0, 0          	DECF	r0x00, W
002b7a   6e01     movwf   0x1, 0           	MOVWF	r0x01
002b7c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002b7e   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
002b80   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
002b82   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b84   e015     bz      0x2bb0           	BZ	_00455_DS_
                                           ;	.line	863; meter_logger.c	if (fsk_proto.data & (0x80 >> fsk_proto.data_len)) {
002b86   0e80     movlw   0x80             	MOVLW	0x80
002b88   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002b8a   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002b8c   e005     bz      0x2b98           	BZ	_00795_DS_
002b8e   6ce8     negf    0xe8, 0          	NEGF	WREG
002b90   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00796_DS_:
002b92   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
002b94   0f01     addlw   0x1              	ADDLW	0x01
002b96   e3fd     bnc     0x2b92           	BNC	_00796_DS_
                                           _00795_DS_:
002b98   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
002b9a   510c     movf    0xc, 0, 0x1      	MOVF	(_fsk_proto + 12), W, B
002b9c   1600     andwf   0, 0x1, 0        	ANDWF	r0x00, F
002b9e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002ba0   e004     bz      0x2baa           	BZ	_00452_DS_
                                           ;	.line	864; meter_logger.c	send_fsk_high();
002ba2   ec9d     call    0xd3a, 0         	CALL	_send_fsk_high
002ba4   f006
                                           ;	.line	866; meter_logger.c	DEBUG_PIN = 0;
002ba6   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
002ba8   d003     bra     0x2bb0           	BRA	_00455_DS_
                                           _00452_DS_:
                                           ;	.line	870; meter_logger.c	send_fsk_low();
002baa   ec7d     call    0x18fa, 0        	CALL	_send_fsk_low
002bac   f00c
                                           ;	.line	872; meter_logger.c	DEBUG_PIN = 1;
002bae   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
                                           _00455_DS_:
002bb0   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	876; meter_logger.c	if (fsk_proto.data_len == 0) {
002bb2   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002bb4   e10f     bnz     0x2bd4           	BNZ	_00461_DS_
                                           ;	.line	877; meter_logger.c	fsk_proto.state = DATA_SENT;
002bb6   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
002bb8   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	879; meter_logger.c	break;
002bba   d00c     bra     0x2bd4           	BRA	_00461_DS_
                                           _00458_DS_:
                                           ;	.line	881; meter_logger.c	send_fsk_high();
002bbc   ec9d     call    0xd3a, 0         	CALL	_send_fsk_high
002bbe   f006
                                           ;	.line	882; meter_logger.c	fsk_proto.state = STOP_BIT_SENT;
002bc0   0e0a     movlw   0xa              	MOVLW	0x0a
002bc2   0105     movlb   0x5              	BANKSEL	_fsk_proto
002bc4   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	884; meter_logger.c	DEBUG_PIN = 0;
002bc6   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	886; meter_logger.c	break;
002bc8   d005     bra     0x2bd4           	BRA	_00461_DS_
                                           _00459_DS_:
                                           ;	.line	888; meter_logger.c	send_fsk_high();
002bca   ec9d     call    0xd3a, 0         	CALL	_send_fsk_high
002bcc   f006
002bce   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	889; meter_logger.c	fsk_proto.state = INIT_STATE;
002bd0   6b00     clrf    0, 0x1           	CLRF	_fsk_proto, B
                                           ;	.line	891; meter_logger.c	DEBUG_PIN = 0;
002bd2   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           _00461_DS_:
                                           ;	.line	898; meter_logger.c	INTCONbits.TMR0IF = 0;
002bd4   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           _00463_DS_:
                                           ;	.line	901; meter_logger.c	if (PIR2bits.CMIF && PIE2bits.CMIE) {
002bd6   aca1     btfss   0xa1, 0x6, 0     	BTFSS	_PIR2bits, 6
002bd8   d076     bra     0x2cc6           	BRA	_00482_DS_
002bda   aca0     btfss   0xa0, 0x6, 0     	BTFSS	_PIE2bits, 6
002bdc   d074     bra     0x2cc6           	BRA	_00482_DS_
                                           ;	.line	903; meter_logger.c	if (CMCONbits.C1OUT) {		// rising edge
002bde   acb4     btfss   0xb4, 0x6, 0     	BTFSS	_CMCONbits, 6
002be0   d070     bra     0x2cc2           	BRA	_00477_DS_
                                           ;	.line	904; meter_logger.c	timer_0 = (unsigned int)(TMR0L) | ((unsigned int)(TMR0H) << 8);
002be2   cfd6     movff   0xfd6, 0         	MOVFF	_TMR0L, r0x00
002be4   f000
002be6   6a01     clrf    0x1, 0           	CLRF	r0x01
002be8   cfd7     movff   0xfd7, 0x2       	MOVFF	_TMR0H, r0x02
002bea   f002
002bec   6a03     clrf    0x3, 0           	CLRF	r0x03
002bee   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002bf0   6e05     movwf   0x5, 0           	MOVWF	r0x05
002bf2   6a04     clrf    0x4, 0           	CLRF	r0x04
002bf4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002bf6   1000     iorwf   0, 0, 0          	IORWF	r0x00, W
002bf8   0105     movlb   0x5              	BANKSEL	_timer_0
002bfa   6f46     movwf   0x46, 0x1        	MOVWF	_timer_0, B
002bfc   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002bfe   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
                                           ; removed redundant BANKSEL
002c00   6f47     movwf   0x47, 0x1        	MOVWF	(_timer_0 + 1), B
                                           ;	.line	909; meter_logger.c	DEBUG_PIN = 1;
002c02   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
002c04   0105     movlb   0x5              	BANKSEL	_last_timer_0
                                           ;	.line	911; meter_logger.c	fsk_proto.diff = timer_0 - last_timer_0;
002c06   514a     movf    0x4a, 0, 0x1     	MOVF	_last_timer_0, W, B
002c08   0105     movlb   0x5              	BANKSEL	_timer_0
002c0a   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
002c0c   6e00     movwf   0, 0             	MOVWF	r0x00
002c0e   0105     movlb   0x5              	BANKSEL	(_last_timer_0 + 1)
002c10   514b     movf    0x4b, 0, 0x1     	MOVF	(_last_timer_0 + 1), W, B
002c12   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002c14   5947     subwfb  0x47, 0, 0x1     	SUBWFB	(_timer_0 + 1), W, B
002c16   6e01     movwf   0x1, 0           	MOVWF	r0x01
002c18   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c1a   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
002c1c   6f01     movwf   0x1, 0x1         	MOVWF	(_fsk_proto + 1), B
002c1e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002c20   6f02     movwf   0x2, 0x1         	MOVWF	(_fsk_proto + 2), B
                                           ;	.line	912; meter_logger.c	last_timer_0 = timer_0;
002c22   c546     movff   0x546, 0x54a     	MOVFF	_timer_0, _last_timer_0
002c24   f54a
002c26   c547     movff   0x547, 0x54b     	MOVFF	(_timer_0 + 1), (_last_timer_0 + 1)
002c28   f54b
                                           ;	.line	914; meter_logger.c	if ((fsk_proto.diff > 340) && (fsk_proto.diff < 476)) {
002c2a   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002c2c   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
002c2e   e102     bnz     0x2c34           	BNZ	_00798_DS_
002c30   0e55     movlw   0x55             	MOVLW	0x55
                                           ; removed redundant BANKSEL
002c32   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00798_DS_:
002c34   e330     bnc     0x2c96           	BNC	_00473_DS_
002c36   0e01     movlw   0x1              	MOVLW	0x01
002c38   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 2)
002c3a   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
002c3c   e102     bnz     0x2c42           	BNZ	_00799_DS_
002c3e   0edc     movlw   0xdc             	MOVLW	0xdc
                                           ; removed redundant BANKSEL
002c40   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00799_DS_:
002c42   e229     bc      0x2c96           	BC	_00473_DS_
002c44   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
                                           ;	.line	915; meter_logger.c	fsk_proto.low_count += fsk_proto.diff;
002c46   5101     movf    0x1, 0, 0x1      	MOVF	(_fsk_proto + 1), W, B
                                           ; removed redundant BANKSEL
002c48   2505     addwf   0x5, 0, 0x1      	ADDWF	(_fsk_proto + 5), W, B
002c4a   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002c4c   5102     movf    0x2, 0, 0x1      	MOVF	(_fsk_proto + 2), W, B
                                           ; removed redundant BANKSEL
002c4e   2106     addwfc  0x6, 0, 0x1      	ADDWFC	(_fsk_proto + 6), W, B
002c50   6e01     movwf   0x1, 0           	MOVWF	r0x01
002c52   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002c54   6f05     movwf   0x5, 0x1         	MOVWF	(_fsk_proto + 5), B
002c56   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002c58   6f06     movwf   0x6, 0x1         	MOVWF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	916; meter_logger.c	if (fsk_proto.state == START_BIT_WAIT) {
002c5a   5100     movf    0, 0, 0x1        	MOVF	_fsk_proto, W, B
002c5c   0a02     xorlw   0x2              	XORLW	0x02
002c5e   e132     bnz     0x2cc4           	BNZ	_00478_DS_
                                           ;	.line	917; meter_logger.c	if (fsk_proto.low_count >= 800) {								// start bit received
002c60   0e03     movlw   0x3              	MOVLW	0x03
002c62   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 6)
002c64   5d06     subwf   0x6, 0, 0x1      	SUBWF	(_fsk_proto + 6), W, B
002c66   e102     bnz     0x2c6c           	BNZ	_00802_DS_
002c68   0e20     movlw   0x20             	MOVLW	0x20
                                           ; removed redundant BANKSEL
002c6a   5d05     subwf   0x5, 0, 0x1      	SUBWF	(_fsk_proto + 5), W, B
                                           _00802_DS_:
002c6c   e32b     bnc     0x2cc4           	BNC	_00478_DS_
002c6e   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	919; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
002c70   5149     movf    0x49, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
002c72   6e00     movwf   0, 0             	MOVWF	r0x00
002c74   6a01     clrf    0x1, 0           	CLRF	r0x01
002c76   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c78   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	920; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
002c7a   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002c7c   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
002c7e   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 5)
                                           ;	.line	921; meter_logger.c	fsk_proto.low_count = 0;
002c80   6b05     clrf    0x5, 0x1         	CLRF	(_fsk_proto + 5), B
                                           ; removed redundant BANKSEL
002c82   6b06     clrf    0x6, 0x1         	CLRF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	922; meter_logger.c	fsk_proto.high_count = 0;
002c84   6b07     clrf    0x7, 0x1         	CLRF	(_fsk_proto + 7), B
                                           ; removed redundant BANKSEL
002c86   6b08     clrf    0x8, 0x1         	CLRF	(_fsk_proto + 8), B
                                           ; removed redundant BANKSEL
                                           ;	.line	924; meter_logger.c	fsk_proto.data_len = 0;
002c88   6b0d     clrf    0xd, 0x1         	CLRF	(_fsk_proto + 13), B
                                           ; removed redundant BANKSEL
                                           ;	.line	925; meter_logger.c	fsk_proto.data = 0;
002c8a   6b0c     clrf    0xc, 0x1         	CLRF	(_fsk_proto + 12), B
                                           ;	.line	926; meter_logger.c	fsk_proto.state = DATA_WAIT;
002c8c   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
002c8e   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	927; meter_logger.c	INTCONbits.TMR0IF = 0;		// clear flag so it dont enter isr now
002c90   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	928; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
002c92   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
002c94   d017     bra     0x2cc4           	BRA	_00478_DS_
                                           _00473_DS_:
002c96   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	934; meter_logger.c	if (fsk_proto.state == START_BIT_WAIT) {
002c98   5100     movf    0, 0, 0x1        	MOVF	_fsk_proto, W, B
002c9a   0a02     xorlw   0x2              	XORLW	0x02
002c9c   e106     bnz     0x2caa           	BNZ	_00470_DS_
                                           _00804_DS_:
002c9e   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 5)
                                           ;	.line	935; meter_logger.c	fsk_proto.low_count = 0;
002ca0   6b05     clrf    0x5, 0x1         	CLRF	(_fsk_proto + 5), B
                                           ; removed redundant BANKSEL
002ca2   6b06     clrf    0x6, 0x1         	CLRF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	936; meter_logger.c	fsk_proto.high_count = 0;
002ca4   6b07     clrf    0x7, 0x1         	CLRF	(_fsk_proto + 7), B
                                           ; removed redundant BANKSEL
002ca6   6b08     clrf    0x8, 0x1         	CLRF	(_fsk_proto + 8), B
002ca8   d00d     bra     0x2cc4           	BRA	_00478_DS_
                                           _00470_DS_:
002caa   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
                                           ;	.line	939; meter_logger.c	fsk_proto.high_count += fsk_proto.diff;
002cac   5101     movf    0x1, 0, 0x1      	MOVF	(_fsk_proto + 1), W, B
                                           ; removed redundant BANKSEL
002cae   2507     addwf   0x7, 0, 0x1      	ADDWF	(_fsk_proto + 7), W, B
002cb0   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002cb2   5102     movf    0x2, 0, 0x1      	MOVF	(_fsk_proto + 2), W, B
                                           ; removed redundant BANKSEL
002cb4   2108     addwfc  0x8, 0, 0x1      	ADDWFC	(_fsk_proto + 8), W, B
002cb6   6e01     movwf   0x1, 0           	MOVWF	r0x01
002cb8   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002cba   6f07     movwf   0x7, 0x1         	MOVWF	(_fsk_proto + 7), B
002cbc   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002cbe   6f08     movwf   0x8, 0x1         	MOVWF	(_fsk_proto + 8), B
002cc0   d001     bra     0x2cc4           	BRA	_00478_DS_
                                           _00477_DS_:
                                           ;	.line	945; meter_logger.c	DEBUG_PIN = 0;
002cc2   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           _00478_DS_:
                                           ;	.line	949; meter_logger.c	PIR2bits.CMIF = 0;
002cc4   9ca1     bcf     0xa1, 0x6, 0     	BCF	_PIR2bits, 6
                                           _00482_DS_:
002cc6   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002cc8   f005
002cca   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002ccc   f004
002cce   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002cd0   f003
002cd2   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002cd4   f002
002cd6   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002cd8   f001
002cda   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002cdc   f000
002cde   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002ce0   ffd9
002ce2   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
002ce4   fffb
002ce6   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
002ce8   fffa
002cea   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
002cec   ffea
002cee   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
002cf0   ffe9
002cf2   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
002cf4   fff4
002cf6   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
002cf8   fff3
002cfa   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002cfc   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
002cfe   ffe0
002d00   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
002d02   ffd8
002d04   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           ___str_0:
002d06   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x67, 0x65
002d08   654d     cpfsgt  0x4d, 0x1        
002d0a   6574     cpfsgt  0x74, 0x1        
002d0c   4c72     dcfsnz  0x72, 0, 0       
002d0e   676f     tstfsz  0x6f, 0x1        
002d10   6567     cpfsgt  0x67, 0x1        
002d12   2e72     decfsz  0x72, 0x1, 0     	DB	0x72, 0x2e, 0x2e, 0x2e, 0x20, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x20
002d14   2e2e     decfsz  0x2e, 0x1, 0     
002d16   7320     btg     0x20, 0x1, 0x1   
002d18   7265     btg     0x65, 0x1, 0     
002d1a   6169     cpfslt  0x69, 0x1        
002d1c   206c     addwfc  0x6c, 0, 0       
002d1e   6f77     movwf   0x77, 0x1        	DB	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x0a, 0x0d, 0x00
002d20   6b72     clrf    0x72, 0x1        
002d22   6e69     movwf   0x69, 0          
002d24   0a67     xorlw   0x67             
002d26   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_1:
002d28   7250     btg     0x50, 0x1, 0     	DB	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x3a, 0x20, 0x70
002d2a   636f     cpfseq  0x6f, 0x1        
002d2c   7365     btg     0x65, 0x1, 0x1   
002d2e   6f73     movwf   0x73, 0x1        
002d30   3a72     swapf   0x72, 0x1, 0     
002d32   7020     btg     0x20, 0, 0       
002d34   6369     cpfseq  0x69, 0x1        	DB	0x69, 0x63, 0x31, 0x38, 0x66, 0x32, 0x35, 0x35, 0x30, 0x0a, 0x0d, 0x00
002d36   3831     swapf   0x31, 0, 0       
002d38   3266     rrcf    0x66, 0x1, 0     
002d3a   3535     rlcf    0x35, 0, 0x1     
002d3c   0a30     xorlw   0x30             
002d3e   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_2:
002d40   7250     btg     0x50, 0x1, 0     	DB	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x3a, 0x20, 0x70
002d42   636f     cpfseq  0x6f, 0x1        
002d44   7365     btg     0x65, 0x1, 0x1   
002d46   6f73     movwf   0x73, 0x1        
002d48   3a72     swapf   0x72, 0x1, 0     
002d4a   7020     btg     0x20, 0, 0       
002d4c   6369     cpfseq  0x69, 0x1        	DB	0x69, 0x63, 0x31, 0x38, 0x66, 0x32, 0x35, 0x35, 0x33, 0x0a, 0x0d, 0x00
002d4e   3831     swapf   0x31, 0, 0       
002d50   3266     rrcf    0x66, 0x1, 0     
002d52   3535     rlcf    0x35, 0, 0x1     
002d54   0a33     xorlw   0x33             
002d56   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_3:
002d58   7250     btg     0x50, 0x1, 0     	DB	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x3a, 0x20, 0x75
002d5a   636f     cpfseq  0x6f, 0x1        
002d5c   7365     btg     0x65, 0x1, 0x1   
002d5e   6f73     movwf   0x73, 0x1        
002d60   3a72     swapf   0x72, 0x1, 0     
002d62   7520     btg     0x20, 0x2, 0x1   
002d64   736e     btg     0x6e, 0x1, 0x1   	DB	0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x2c, 0x20
002d66   7075     btg     0x75, 0, 0       
002d68   6f70     movwf   0x70, 0x1        
002d6a   7472     btg     0x72, 0x2, 0     
002d6c   6465     cpfsgt  0x65, 0          
002d6e   202c     addwfc  0x2c, 0, 0       
002d70   6564     cpfsgt  0x64, 0x1        	DB	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x69, 0x64, 0x3a, 0x20, 0x30
002d72   6976     setf    0x76, 0x1        
002d74   6563     cpfsgt  0x63, 0x1        
002d76   6920     setf    0x20, 0x1        
002d78   3a64     swapf   0x64, 0x1, 0     
002d7a   3020     rrcf    0x20, 0, 0       
002d7c   2578     addwf   0x78, 0, 0x1     	DB	0x78, 0x25, 0x30, 0x34, 0x78, 0x0a, 0x0d, 0x00
002d7e   3430     rlcf    0x30, 0, 0       
002d80   0a78     xorlw   0x78             
002d82   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_4:
002d84   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x70, 0x72, 0x69, 0x6e
002d86   7270     btg     0x70, 0x1, 0     
002d88   7365     btg     0x65, 0x1, 0x1   
002d8a   2073     addwfc  0x73, 0, 0       
002d8c   7270     btg     0x70, 0x1, 0     
002d8e   6e69     movwf   0x69, 0          
002d90   2074     addwfc  0x74, 0, 0       	DB	0x74, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x0a, 0x0d
002d92   6e6f     movwf   0x6f, 0          
002d94   7420     btg     0x20, 0x2, 0     
002d96   7365     btg     0x65, 0x1, 0x1   
002d98   6f74     movwf   0x74, 0x1        
002d9a   0d0a     mullw   0xa              
002d9c   0000     nop                      	DB	0x00
                                           ; ; Starting pCode block
                                           ___str_5:
002d9e   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x64, 0x6f, 0x6e, 0x65, 0x20, 0x72, 0x65, 0x63, 0x65, 0x69
002da0   6f64     movwf   0x64, 0x1        
002da2   656e     cpfsgt  0x6e, 0x1        
002da4   7220     btg     0x20, 0x1, 0     
002da6   6365     cpfseq  0x65, 0x1        
002da8   6965     setf    0x65, 0x1        
002daa   6976     setf    0x76, 0x1        	DB	0x76, 0x69, 0x6e, 0x67, 0x20, 0x2d, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x69
002dac   676e     tstfsz  0x6e, 0x1        
002dae   2d20     decfsz  0x20, 0, 0x1     
002db0   7320     btg     0x20, 0x1, 0x1   
002db2   6e65     movwf   0x65, 0          
002db4   6964     setf    0x64, 0x1        
002db6   676e     tstfsz  0x6e, 0x1        	DB	0x6e, 0x67, 0x20, 0x76, 0x69, 0x61, 0x20, 0x73, 0x65, 0x72, 0x69, 0x61
002db8   7620     btg     0x20, 0x3, 0     
002dba   6169     cpfslt  0x69, 0x1        
002dbc   7320     btg     0x20, 0x1, 0x1   
002dbe   7265     btg     0x65, 0x1, 0     
002dc0   6169     cpfslt  0x69, 0x1        
002dc2   2f6c     decfsz  0x6c, 0x1, 0x1   	DB	0x6c, 0x2f, 0x66, 0x73, 0x6b, 0x0a, 0x0d, 0x00
002dc4   7366     btg     0x66, 0x1, 0x1   
002dc6   0a6b     xorlw   0x6b             
002dc8   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_6:
002dca   6425     cpfsgt  0x25, 0          	DB	0x25, 0x64, 0x20, 0x00
002dcc   0020     dw      0x20             
                                           ; ; Starting pCode block
                                           ___str_7:
002dce   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6f
002dd0   6177     cpfslt  0x77, 0x1        
002dd2   7469     btg     0x69, 0x2, 0     
002dd4   6e69     movwf   0x69, 0          
002dd6   2067     addwfc  0x67, 0, 0       
002dd8   6f66     movwf   0x66, 0x1        
002dda   2072     addwfc  0x72, 0, 0       	DB	0x72, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e
002ddc   656e     cpfsgt  0x6e, 0x1        
002dde   2077     addwfc  0x77, 0, 0       
002de0   6f63     movwf   0x63, 0x1        
002de2   6d6d     negf    0x6d, 0x1        
002de4   6e61     movwf   0x61, 0          
002de6   0a64     xorlw   0x64             	DB	0x64, 0x0a, 0x0d, 0x00
002de8   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_8:
002dea   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x74, 0x65, 0x73, 0x74, 0x20
002dec   6365     cpfseq  0x65, 0x1        
002dee   6f68     movwf   0x68, 0x1        
002df0   7420     btg     0x20, 0x2, 0     
002df2   7365     btg     0x65, 0x1, 0x1   
002df4   2074     addwfc  0x74, 0, 0       
002df6   202d     addwfc  0x2d, 0, 0       	DB	0x2d, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x20, 0x73, 0x6f, 0x6d, 0x65, 0x20
002df8   6573     cpfsgt  0x73, 0x1        
002dfa   646e     cpfsgt  0x6e, 0          
002dfc   7320     btg     0x20, 0x1, 0x1   
002dfe   6d6f     negf    0x6f, 0x1        
002e00   2065     addwfc  0x65, 0, 0       
002e02   6164     cpfslt  0x64, 0x1        	DB	0x64, 0x61, 0x74, 0x61, 0x0a, 0x0d, 0x00
002e04   6174     cpfslt  0x74, 0x1        
002e06   0d0a     mullw   0xa              
002e08   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_9:
002e0a   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002e0c   616b     cpfslt  0x6b, 0x1        
002e0e   736d     btg     0x6d, 0x1, 0x1   
002e10   7274     btg     0x74, 0x1, 0     
002e12   7075     btg     0x75, 0, 0       
002e14   2d20     decfsz  0x20, 0, 0x1     
002e16   7320     btg     0x20, 0x1, 0x1   	DB	0x20, 0x73, 0x65, 0x6e, 0x64, 0x20, 0x6b, 0x6d, 0x70, 0x20, 0x66, 0x72
002e18   6e65     movwf   0x65, 0          
002e1a   2064     addwfc  0x64, 0, 0       
002e1c   6d6b     negf    0x6b, 0x1        
002e1e   2070     addwfc  0x70, 0, 0       
002e20   7266     btg     0x66, 0x1, 0     
002e22   6d61     negf    0x61, 0x1        	DB	0x61, 0x6d, 0x65, 0x20, 0x64, 0x61, 0x74, 0x61, 0x0a, 0x0d, 0x00
002e24   2065     addwfc  0x65, 0, 0       
002e26   6164     cpfslt  0x64, 0x1        
002e28   6174     cpfslt  0x74, 0x1        
002e2a   0d0a     mullw   0xa              
002e2c   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_10:
002e2e   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002e30   616b     cpfslt  0x6b, 0x1        
002e32   736d     btg     0x6d, 0x1, 0x1   
002e34   7274     btg     0x74, 0x1, 0     
002e36   7075     btg     0x75, 0, 0       
002e38   2d20     decfsz  0x20, 0, 0x1     
002e3a   6b20     clrf    0x20, 0x1        	DB	0x20, 0x6b, 0x6d, 0x70, 0x20, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x20, 0x72
002e3c   706d     btg     0x6d, 0, 0       
002e3e   6620     tstfsz  0x20, 0          
002e40   6172     cpfslt  0x72, 0x1        
002e42   656d     cpfsgt  0x6d, 0x1        
002e44   7220     btg     0x20, 0x1, 0     
002e46   6365     cpfseq  0x65, 0x1        	DB	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x3a, 0x0a, 0x0d, 0x00
002e48   6965     setf    0x65, 0x1        
002e4a   6576     cpfsgt  0x76, 0x1        
002e4c   3a64     swapf   0x64, 0x1, 0     
002e4e   0d0a     mullw   0xa              
002e50   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_11:
002e52   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002e54   616b     cpfslt  0x6b, 0x1        
002e56   736d     btg     0x6d, 0x1, 0x1   
002e58   7274     btg     0x74, 0x1, 0     
002e5a   7075     btg     0x75, 0, 0       
002e5c   2d20     decfsz  0x20, 0, 0x1     
002e5e   6b20     clrf    0x20, 0x1        	DB	0x20, 0x6b, 0x6d, 0x70, 0x20, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x20, 0x72
002e60   706d     btg     0x6d, 0, 0       
002e62   7220     btg     0x20, 0x1, 0     
002e64   7065     btg     0x65, 0, 0       
002e66   796c     btg     0x6c, 0x4, 0x1   
002e68   7220     btg     0x20, 0x1, 0     
002e6a   6365     cpfseq  0x65, 0x1        	DB	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x3a, 0x0a, 0x0d, 0x00
002e6c   6965     setf    0x65, 0x1        
002e6e   6576     cpfsgt  0x76, 0x1        
002e70   3a64     swapf   0x64, 0x1, 0     
002e72   0d0a     mullw   0xa              
002e74   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_12:
002e76   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6e, 0x6f, 0x20, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x20, 0x66
002e78   6f6e     movwf   0x6e, 0x1        
002e7a   7220     btg     0x20, 0x1, 0     
002e7c   7065     btg     0x65, 0, 0       
002e7e   796c     btg     0x6c, 0x4, 0x1   
002e80   6620     tstfsz  0x20, 0          
002e82   6f72     movwf   0x72, 0x1        	DB	0x72, 0x6f, 0x6d, 0x20, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x0a, 0x0d, 0x00
002e84   206d     addwfc  0x6d, 0, 0       
002e86   656d     cpfsgt  0x6d, 0x1        
002e88   6574     cpfsgt  0x74, 0x1        
002e8a   0a72     xorlw   0x72             
002e8c   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_13:
002e8e   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002e90   616b     cpfslt  0x6b, 0x1        
002e92   736d     btg     0x6d, 0x1, 0x1   
002e94   7274     btg     0x74, 0x1, 0     
002e96   7075     btg     0x75, 0, 0       
002e98   2d20     decfsz  0x20, 0, 0x1     
002e9a   7320     btg     0x20, 0x1, 0x1   	DB	0x20, 0x73, 0x65, 0x6e, 0x64, 0x20, 0x49, 0x45, 0x43, 0x36, 0x31, 0x31
002e9c   6e65     movwf   0x65, 0          
002e9e   2064     addwfc  0x64, 0, 0       
002ea0   4549     rlncf   0x49, 0, 0x1     
002ea2   3643     rlcf    0x43, 0x1, 0     
002ea4   3131     rrcf    0x31, 0, 0x1     
002ea6   3730     rlcf    0x30, 0x1, 0x1   	DB	0x30, 0x37, 0x20, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x20, 0x64, 0x61, 0x74
002ea8   6620     tstfsz  0x20, 0          
002eaa   6172     cpfslt  0x72, 0x1        
002eac   656d     cpfsgt  0x6d, 0x1        
002eae   6420     cpfsgt  0x20, 0          
002eb0   7461     btg     0x61, 0x2, 0     
002eb2   0a61     xorlw   0x61             	DB	0x61, 0x0a, 0x0d, 0x00
002eb4   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_14:
002eb6   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002eb8   616b     cpfslt  0x6b, 0x1        
002eba   736d     btg     0x6d, 0x1, 0x1   
002ebc   7274     btg     0x74, 0x1, 0     
002ebe   7075     btg     0x75, 0, 0       
002ec0   2d20     decfsz  0x20, 0, 0x1     
002ec2   4920     infsnz  0x20, 0, 0x1     	DB	0x20, 0x49, 0x45, 0x43, 0x36, 0x31, 0x31, 0x30, 0x37, 0x20, 0x66, 0x72
002ec4   4345     rrncf   0x45, 0x1, 0x1   
002ec6   3136     rrcf    0x36, 0, 0x1     
002ec8   3031     rrcf    0x31, 0, 0       
002eca   2037     addwfc  0x37, 0, 0       
002ecc   7266     btg     0x66, 0x1, 0     
002ece   6d61     negf    0x61, 0x1        	DB	0x61, 0x6d, 0x65, 0x20, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64
002ed0   2065     addwfc  0x65, 0, 0       
002ed2   6572     cpfsgt  0x72, 0x1        
002ed4   6563     cpfsgt  0x63, 0x1        
002ed6   7669     btg     0x69, 0x3, 0     
002ed8   6465     cpfsgt  0x65, 0          
002eda   0a3a     xorlw   0x3a             	DB	0x3a, 0x0a, 0x0d, 0x00
002edc   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_15:
002ede   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002ee0   616b     cpfslt  0x6b, 0x1        
002ee2   736d     btg     0x6d, 0x1, 0x1   
002ee4   7274     btg     0x74, 0x1, 0     
002ee6   7075     btg     0x75, 0, 0       
002ee8   2d20     decfsz  0x20, 0, 0x1     
002eea   4920     infsnz  0x20, 0, 0x1     	DB	0x20, 0x49, 0x45, 0x43, 0x36, 0x31, 0x31, 0x30, 0x37, 0x20, 0x72, 0x65
002eec   4345     rrncf   0x45, 0x1, 0x1   
002eee   3136     rrcf    0x36, 0, 0x1     
002ef0   3031     rrcf    0x31, 0, 0       
002ef2   2037     addwfc  0x37, 0, 0       
002ef4   6572     cpfsgt  0x72, 0x1        
002ef6   6c70     negf    0x70, 0          	DB	0x70, 0x6c, 0x79, 0x20, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64
002ef8   2079     addwfc  0x79, 0, 0       
002efa   6572     cpfsgt  0x72, 0x1        
002efc   6563     cpfsgt  0x63, 0x1        
002efe   7669     btg     0x69, 0x3, 0     
002f00   6465     cpfsgt  0x65, 0          
002f02   0a3a     xorlw   0x3a             	DB	0x3a, 0x0a, 0x0d, 0x00
002f04   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_16:
002f06   6142     cpfslt  0x42, 0x1        	DB	0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x3a, 0x20, 0x25, 0x64, 0x6d
002f08   7474     btg     0x74, 0x2, 0     
002f0a   7265     btg     0x65, 0x1, 0     
002f0c   3a79     swapf   0x79, 0x1, 0     
002f0e   2520     addwf   0x20, 0, 0x1     
002f10   6d64     negf    0x64, 0x1        
002f12   0a56     xorlw   0x56             	DB	0x56, 0x0a, 0x0d, 0x00
002f14   000d     tblwt   *+               
                                           
                                           
                                           ; Statistics:
                                           ; code size:	15794 (0x3db2) bytes (12.05%)
                                           ;           	 7897 (0x1ed9) words
                                           ; udata size:	 1198 (0x04ae) bytes (66.85%)
                                           ; access size:	   14 (0x000e) bytes
                                           
                                           
                                           	end
