gplink-1.2.0 #980 (Jul 31 2013)
Copyright (c) 1998-2013 gputils project
Listing File Generated: 6-17-2014  03:01:14
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.4.0 #8981 (Jun  6 2014) (Mac OS X x86_64)
                                           ; This file was generated Tue Jun 17 03:01:14 2014
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f2550
                                           	radix	dec
                                           	CONFIG	PLLDIV=2
                                           	CONFIG	CPUDIV=OSC1_PLL2
                                           	CONFIG	USBDIV=1
                                           	CONFIG	FOSC=INTOSC_XT
                                           	CONFIG	FCMEN=OFF
                                           	CONFIG	IESO=OFF
                                           	CONFIG	PWRT=OFF
                                           	CONFIG	BOR=OFF
                                           	CONFIG	BORV=3
                                           	CONFIG	VREGEN=OFF
                                           	CONFIG	WDT=OFF
                                           	CONFIG	WDTPS=32768
                                           	CONFIG	CCP2MX=ON
                                           	CONFIG	PBADEN=OFF
                                           	CONFIG	LPT1OSC=OFF
                                           	CONFIG	MCLRE=ON
                                           	CONFIG	STVREN=ON
                                           	CONFIG	LVP=ON
                                           	CONFIG	XINST=OFF
                                           	CONFIG	CP0=OFF
                                           	CONFIG	CP1=OFF
                                           	CONFIG	CP2=OFF
                                           	CONFIG	CP3=OFF
                                           	CONFIG	CPB=OFF
                                           	CONFIG	CPD=OFF
                                           	CONFIG	WRT0=OFF
                                           	CONFIG	WRT1=OFF
                                           	CONFIG	WRT2=OFF
                                           	CONFIG	WRT3=OFF
                                           	CONFIG	WRTC=OFF
                                           	CONFIG	WRTB=OFF
                                           	CONFIG	WRTD=OFF
                                           	CONFIG	EBTR0=OFF
                                           	CONFIG	EBTR1=OFF
                                           	CONFIG	EBTR2=OFF
                                           	CONFIG	EBTR3=OFF
                                           	CONFIG	EBTRB=OFF
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_c
                                           	global	_sleep_ms
                                           	global	_init_system
                                           	global	_my_usart_open
                                           	global	_reverse
                                           	global	_testo_valid_err_corr
                                           	global	_testo_ir_enable
                                           	global	_testo_ir_disable
                                           	global	_rs232_tx_enable
                                           	global	_rs232_tx_disable
                                           	global	_rs232_rx_enable
                                           	global	_rs232_rx_disable
                                           	global	_rs232_tx_byte
                                           	global	_fsk_tx_enable
                                           	global	_fsk_tx_disable
                                           	global	_fsk_rx_enable
                                           	global	_fsk_rx_disable
                                           	global	_send_fsk_high
                                           	global	_send_fsk_low
                                           	global	_fsk_tx_byte
                                           	global	_fifo_in_use
                                           	global	_fifo_put
                                           	global	_fifo_get
                                           	global	_fifo_snoop
                                           	global	_battery_level
                                           	global	_flash_led
                                           	global	__debug
                                           	global	__debug2
                                           	global	_timer_0
                                           	global	_last_timer_0
                                           	global	_timer_1_ms
                                           	global	_timer0_reload
                                           	global	_debug_buffer
                                           	global	_fifo_head
                                           	global	_fifo_tail
                                           	global	_fifo_buffer_0
                                           	global	_fifo_buffer_1
                                           	global	_fifo_buffer_2
                                           	global	_fifo_buffer_3
                                           	global	_codec_type
                                           	global	_led_flash
                                           	global	_testo_ir_proto
                                           	global	_rs232_proto
                                           	global	_fsk_proto
                                           	global	_main
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrput1
                                           	extern	_UFRMLbits
                                           	extern	_UFRMHbits
                                           	extern	_UIRbits
                                           	extern	_UIEbits
                                           	extern	_UEIRbits
                                           	extern	_UEIEbits
                                           	extern	_USTATbits
                                           	extern	_UCONbits
                                           	extern	_UADDRbits
                                           	extern	_UCFGbits
                                           	extern	_UEP0bits
                                           	extern	_UEP1bits
                                           	extern	_UEP2bits
                                           	extern	_UEP3bits
                                           	extern	_UEP4bits
                                           	extern	_UEP5bits
                                           	extern	_UEP6bits
                                           	extern	_UEP7bits
                                           	extern	_UEP8bits
                                           	extern	_UEP9bits
                                           	extern	_UEP10bits
                                           	extern	_UEP11bits
                                           	extern	_UEP12bits
                                           	extern	_UEP13bits
                                           	extern	_UEP14bits
                                           	extern	_UEP15bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_EECON1bits
                                           	extern	_RCSTAbits
                                           	extern	_TXSTAbits
                                           	extern	_T3CONbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_CCP1ASbits
                                           	extern	_ECCP1ASbits
                                           	extern	_CCP1DELbits
                                           	extern	_ECCP1DELbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCTLbits
                                           	extern	_CCP2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_UFRM
                                           	extern	_UFRML
                                           	extern	_UFRMH
                                           	extern	_UIR
                                           	extern	_UIE
                                           	extern	_UEIR
                                           	extern	_UEIE
                                           	extern	_USTAT
                                           	extern	_UCON
                                           	extern	_UADDR
                                           	extern	_UCFG
                                           	extern	_UEP0
                                           	extern	_UEP1
                                           	extern	_UEP2
                                           	extern	_UEP3
                                           	extern	_UEP4
                                           	extern	_UEP5
                                           	extern	_UEP6
                                           	extern	_UEP7
                                           	extern	_UEP8
                                           	extern	_UEP9
                                           	extern	_UEP10
                                           	extern	_UEP11
                                           	extern	_UEP12
                                           	extern	_UEP13
                                           	extern	_UEP14
                                           	extern	_UEP15
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_OSCTUNE
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_RCSTA
                                           	extern	_TXSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_CCP1AS
                                           	extern	_ECCP1AS
                                           	extern	_CCP1DEL
                                           	extern	_ECCP1DEL
                                           	extern	_BAUDCON
                                           	extern	_BAUDCTL
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_sprintf
                                           	extern	_usart_drdy
                                           	extern	_usart_getc
                                           	extern	_usart_putc
                                           	extern	_usart_puts
                                           	extern	_adc_open
                                           	extern	_adc_close
                                           	extern	_adc_conv
                                           	extern	_adc_busy
                                           	extern	_adc_read
                                           	extern	_adc_setchannel
                                           	extern	__mullong
                                           	extern	__divulong
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           r0x0d	res	1
                                           
                                           udata_meter_logger_0	udata
                                           _c	res	1
                                           
                                           udata_meter_logger_1	udata
                                           _timer_1_ms	res	2
                                           
                                           udata_meter_logger_2	udata
                                           _fifo_head	res	2
                                           
                                           udata_meter_logger_3	udata
                                           _fifo_tail	res	2
                                           
                                           udata_meter_logger_4	udata
                                           _main_cmd_1_87	res	1
                                           
                                           udata_meter_logger_5	udata
                                           _debug_buffer	res	128
                                           
                                           udata_meter_logger_6	udata
                                           _main_sub_cmd_1_87	res	1
                                           
                                           udata_meter_logger_7	udata
                                           _timer_0	res	2
                                           
                                           udata_meter_logger_8	udata
                                           _timer0_reload	res	2
                                           
                                           udata_meter_logger_9	udata
                                           _testo_ir_proto	res	6
                                           
                                           udata_meter_logger_10	udata
                                           _rs232_proto	res	6
                                           
                                           udata_meter_logger_11	udata
                                           _fsk_proto	res	16
                                           
                                           udata_meter_logger_12	udata
                                           _last_timer_0	res	2
                                           
                                           udata_meter_logger_13	udata
                                           _codec_type	res	1
                                           
                                           udata_meter_logger_14	udata
                                           _led_flash	res	2
                                           
                                           udata_meter_logger_15	udata
                                           _fifo_buffer_0	res	256
                                           
                                           udata_meter_logger_16	udata
                                           _fifo_buffer_1	res	256
                                           
                                           udata_meter_logger_17	udata
                                           _fifo_buffer_2	res	256
                                           
                                           udata_meter_logger_18	udata
                                           _fifo_buffer_3	res	256
                                           
                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_meter_logger_ivec_0x1_isr_high_prio	code	0X000008
                                           ivec_0x1_isr_high_prio:
000008   ef9b     goto    0x2336           	GOTO	_isr_high_prio
00000a   f011
                                           
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_meter_logger_ivec_0x2_isr_low_prio	code	0X000018
                                           ivec_0x2_isr_low_prio:
000018   efe9     goto    0x45d2           	GOTO	_isr_low_prio
00001a   f022
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_meter_logger__main	code
                                           _main:
                                           ;	.line	111; meter_logger.c	OSCCONbits.SCS = 0x10;
00001c   50d3     movf    0xd3, 0, 0       	MOVF	_OSCCONbits, W
00001e   0bfc     andlw   0xfc             	ANDLW	0xfc
000020   6ed3     movwf   0xd3, 0          	MOVWF	_OSCCONbits
                                           ;	.line	113; meter_logger.c	OSCCONbits.IRCF = 0x7;	// 8 MHz
000022   50d3     movf    0xd3, 0, 0       	MOVF	_OSCCONbits, W
000024   0b8f     andlw   0x8f             	ANDLW	0x8f
000026   0970     iorlw   0x70             	IORLW	0x70
000028   6ed3     movwf   0xd3, 0          	MOVWF	_OSCCONbits
00002a   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	116; meter_logger.c	timer_1_ms = 0;
00002c   6b40     clrf    0x40, 0x1        	CLRF	_timer_1_ms, B
                                           ; removed redundant BANKSEL
00002e   6b41     clrf    0x41, 0x1        	CLRF	(_timer_1_ms + 1), B
000030   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	118; meter_logger.c	fifo_head = 0;
000032   6b42     clrf    0x42, 0x1        	CLRF	_fifo_head, B
                                           ; removed redundant BANKSEL
000034   6b43     clrf    0x43, 0x1        	CLRF	(_fifo_head + 1), B
000036   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	119; meter_logger.c	fifo_tail = 0;
000038   6b44     clrf    0x44, 0x1        	CLRF	_fifo_tail, B
                                           ; removed redundant BANKSEL
00003a   6b45     clrf    0x45, 0x1        	CLRF	(_fifo_tail + 1), B
                                           ;	.line	121; meter_logger.c	init_system();	
00003c   ec8c     call    0x4918, 0        	CALL	_init_system
00003e   f024
                                           ;	.line	122; meter_logger.c	sleep_ms(100);
000040   0e00     movlw   0                	MOVLW	0x00
000042   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000044   0e64     movlw   0x64             	MOVLW	0x64
000046   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000048   ec4b     call    0x4696, 0        	CALL	_sleep_ms
00004a   f023
00004c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00004e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	125; meter_logger.c	usart_puts("\n\rMeterLogger... serial working\n\r");
000050   0e00     movlw   0                	MOVLW	UPPER(___str_0)
000052   6e02     movwf   0x2, 0           	MOVWF	r0x02
000054   0e29     movlw   0x29             	MOVLW	HIGH(___str_0)
000056   6e01     movwf   0x1, 0           	MOVWF	r0x01
000058   0ed8     movlw   0xd8             	MOVLW	LOW(___str_0)
00005a   6e00     movwf   0, 0             	MOVWF	r0x00
00005c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00005e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000060   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000062   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000064   5000     movf    0, 0, 0          	MOVF	r0x00, W
000066   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000068   ec22     call    0x4844, 0        	CALL	_usart_puts
00006a   f024
00006c   0e03     movlw   0x3              	MOVLW	0x03
00006e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	129; meter_logger.c	battery_level();
000070   ec41     call    0x3c82, 0        	CALL	_battery_level
000072   f01e
                                           ;	.line	132; meter_logger.c	fsk_rx_enable();
000074   ec5e     call    0x48bc, 0        	CALL	_fsk_rx_enable
000076   f024
                                           _00162_DS_:
                                           ;	.line	134; meter_logger.c	if (fifo_get(&cmd)) {
000078   0e05     movlw   0x5              	MOVLW	HIGH(_main_cmd_1_87)
00007a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00007c   0e4f     movlw   0x4f             	MOVLW	LOW(_main_cmd_1_87)
00007e   6e00     movwf   0, 0             	MOVWF	r0x00
000080   0e80     movlw   0x80             	MOVLW	0x80
000082   6e02     movwf   0x2, 0           	MOVWF	r0x02
000084   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000086   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000088   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00008a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00008c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00008e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000090   ec82     call    0x3b04, 0        	CALL	_fifo_get
000092   f01d
000094   6e00     movwf   0, 0             	MOVWF	r0x00
000096   0e03     movlw   0x3              	MOVLW	0x03
000098   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00009a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00009c   e0ed     bz      0x78             	BZ	_00162_DS_
                                           ;	.line	135; meter_logger.c	switch (cmd) {
00009e   0efb     movlw   0xfb             	MOVLW	0xfb
0000a0   0105     movlb   0x5              	BANKSEL	_main_cmd_1_87
0000a2   5d4f     subwf   0x4f, 0, 0x1     	SUBWF	_main_cmd_1_87, W, B
0000a4   e3e9     bnc     0x78             	BNC	_00162_DS_
0000a6   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
0000a8   254f     addwf   0x4f, 0, 0x1     	ADDWF	_main_cmd_1_87, W, B
0000aa   6e00     movwf   0, 0             	MOVWF	r0x00
0000ac   6afa     clrf    0xfa, 0          	CLRF	PCLATH
0000ae   6afb     clrf    0xfb, 0          	CLRF	PCLATU
0000b0   3400     rlcf    0, 0, 0          	RLCF	r0x00, W
0000b2   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0000b4   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
0000b6   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0000b8   0bfc     andlw   0xfc             	ANDLW	0xfc
0000ba   0fca     addlw   0xca             	ADDLW	LOW(_00314_DS_)
0000bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000be   0e00     movlw   0                	MOVLW	HIGH(_00314_DS_)
0000c0   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
0000c2   0e00     movlw   0                	MOVLW	UPPER(_00314_DS_)
0000c4   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0000c6   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0000c8   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00314_DS_:
0000ca   ef0f     goto    0xc1e            	GOTO	_00157_DS_
0000cc   f006
0000ce   ef1b     goto    0x836            	GOTO	_00139_DS_
0000d0   f004
0000d2   ef1f     goto    0x43e            	GOTO	_00121_DS_
0000d4   f002
0000d6   ef6f     goto    0xde             	GOTO	_00105_DS_
0000d8   f000
0000da   ef4f     goto    0x29e            	GOTO	_00113_DS_
0000dc   f001
                                           _00105_DS_:
                                           ;	.line	137; meter_logger.c	fsk_rx_disable();
0000de   ecf4     call    0x4de8, 0        	CALL	_fsk_rx_disable
0000e0   f026
                                           ;	.line	138; meter_logger.c	usart_puts("\n\rpress print on testo\n\r");
0000e2   0e00     movlw   0                	MOVLW	UPPER(___str_1)
0000e4   6e02     movwf   0x2, 0           	MOVWF	r0x02
0000e6   0e29     movlw   0x29             	MOVLW	HIGH(___str_1)
0000e8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0000ea   0efa     movlw   0xfa             	MOVLW	LOW(___str_1)
0000ec   6e00     movwf   0, 0             	MOVWF	r0x00
0000ee   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0000f0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000f2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0000f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000f6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0000f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000fa   ec22     call    0x4844, 0        	CALL	_usart_puts
0000fc   f024
0000fe   0e03     movlw   0x3              	MOVLW	0x03
000100   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	139; meter_logger.c	testo_ir_enable();
000102   ec16     call    0x4a2c, 0        	CALL	_testo_ir_enable
000104   f025
                                           ;	.line	141; meter_logger.c	last_fifo_size = 0;
000106   6a00     clrf    0, 0             	CLRF	r0x00
000108   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	142; meter_logger.c	sleep_ms(10000);						// 10 seconds to start printing
00010a   0e27     movlw   0x27             	MOVLW	0x27
00010c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00010e   0e10     movlw   0x10             	MOVLW	0x10
000110   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000112   ec4b     call    0x4696, 0        	CALL	_sleep_ms
000114   f023
000116   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000118   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	143; meter_logger.c	fifo_size = fifo_in_use();
00011a   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
00011c   f025
00011e   6e02     movwf   0x2, 0           	MOVWF	r0x02
000120   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000122   f003
                                           _00106_DS_:
                                           ;	.line	144; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000124   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000126   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000128   e102     bnz     0x12e            	BNZ	_00315_DS_
00012a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00012c   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00315_DS_:
00012e   e212     bc      0x154            	BC	_00108_DS_
                                           ;	.line	145; meter_logger.c	last_fifo_size = fifo_size;
000130   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000132   f000
000134   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000136   f001
                                           ;	.line	146; meter_logger.c	sleep_ms(200);						// return data when no data for 200 ms
000138   0e00     movlw   0                	MOVLW	0x00
00013a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00013c   0ec8     movlw   0xc8             	MOVLW	0xc8
00013e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000140   ec4b     call    0x4696, 0        	CALL	_sleep_ms
000142   f023
000144   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000146   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	147; meter_logger.c	fifo_size = fifo_in_use();
000148   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
00014a   f025
00014c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00014e   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000150   f003
000152   d7e8     bra     0x124            	BRA	_00106_DS_
                                           _00108_DS_:
                                           ;	.line	149; meter_logger.c	testo_ir_disable();
000154   ecfe     call    0x4dfc, 0        	CALL	_testo_ir_disable
000156   f026
                                           ;	.line	152; meter_logger.c	usart_puts("\n\rdone receiving - sending via serial/fsk\n\r");
000158   0e00     movlw   0                	MOVLW	UPPER(___str_2)
00015a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00015c   0e2a     movlw   0x2a             	MOVLW	HIGH(___str_2)
00015e   6e05     movwf   0x5, 0           	MOVWF	r0x05
000160   0e14     movlw   0x14             	MOVLW	LOW(___str_2)
000162   6e04     movwf   0x4, 0           	MOVWF	r0x04
000164   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000166   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000168   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00016a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00016c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00016e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000170   ec22     call    0x4844, 0        	CALL	_usart_puts
000172   f024
000174   0e03     movlw   0x3              	MOVLW	0x03
000176   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	155; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000178   6a04     clrf    0x4, 0           	CLRF	r0x04
00017a   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00165_DS_:
00017c   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
00017e   f025
000180   6e06     movwf   0x6, 0           	MOVWF	r0x06
000182   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
000184   f007
000186   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000188   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
00018a   e102     bnz     0x190            	BNZ	_00316_DS_
00018c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00018e   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00316_DS_:
000190   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
000192   d04c     bra     0x22c            	BRA	_00109_DS_
                                           ;	.line	157; meter_logger.c	fifo_get(&sub_cmd);
000194   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_87)
000196   6e07     movwf   0x7, 0           	MOVWF	r0x07
000198   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_87)
00019a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00019c   0e80     movlw   0x80             	MOVLW	0x80
00019e   6e08     movwf   0x8, 0           	MOVWF	r0x08
0001a0   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0001a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001a4   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0001a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001a8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0001aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001ac   ec82     call    0x3b04, 0        	CALL	_fifo_get
0001ae   f01d
0001b0   0e03     movlw   0x3              	MOVLW	0x03
0001b2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	159; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
0001b4   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_87, r0x06
0001b6   f006
0001b8   6a07     clrf    0x7, 0           	CLRF	r0x07
0001ba   0e00     movlw   0                	MOVLW	UPPER(___str_3)
0001bc   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0001be   0e2a     movlw   0x2a             	MOVLW	HIGH(___str_3)
0001c0   6e09     movwf   0x9, 0           	MOVWF	r0x09
0001c2   0e40     movlw   0x40             	MOVLW	LOW(___str_3)
0001c4   6e08     movwf   0x8, 0           	MOVWF	r0x08
0001c6   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0001c8   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
0001ca   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0001cc   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0001ce   0e80     movlw   0x80             	MOVLW	0x80
0001d0   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
0001d2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0001d4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001d6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0001d8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001da   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
0001dc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001de   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0001e0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001e2   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0001e4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001e6   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
0001e8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001ea   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
0001ec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001ee   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
0001f0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001f2   ecad     call    0x415a, 0        	CALL	_sprintf
0001f4   f020
0001f6   0e08     movlw   0x8              	MOVLW	0x08
0001f8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	160; meter_logger.c	usart_puts(debug_buffer);
0001fa   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0001fc   6e07     movwf   0x7, 0           	MOVWF	r0x07
0001fe   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000200   6e06     movwf   0x6, 0           	MOVWF	r0x06
000202   0e80     movlw   0x80             	MOVLW	0x80
000204   6e08     movwf   0x8, 0           	MOVWF	r0x08
000206   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000208   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00020a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00020c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00020e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000210   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000212   ec22     call    0x4844, 0        	CALL	_usart_puts
000214   f024
000216   0e03     movlw   0x3              	MOVLW	0x03
000218   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00021a   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_87
                                           ;	.line	162; meter_logger.c	fifo_put(sub_cmd);
00021c   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_87, W, B
00021e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000220   ec92     call    0x3f24, 0        	CALL	_fifo_put
000222   f01f
000224   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	155; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000226   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000228   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
00022a   d7a8     bra     0x17c            	BRA	_00165_DS_
                                           _00109_DS_:
                                           ;	.line	165; meter_logger.c	fsk_tx_enable();
00022c   ec88     call    0x4b10, 0        	CALL	_fsk_tx_enable
00022e   f025
                                           _00110_DS_:
                                           ;	.line	166; meter_logger.c	while (fifo_get(&cmd)) {	// and print them to serial
000230   0e05     movlw   0x5              	MOVLW	HIGH(_main_cmd_1_87)
000232   6e05     movwf   0x5, 0           	MOVWF	r0x05
000234   0e4f     movlw   0x4f             	MOVLW	LOW(_main_cmd_1_87)
000236   6e04     movwf   0x4, 0           	MOVWF	r0x04
000238   0e80     movlw   0x80             	MOVLW	0x80
00023a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00023c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00023e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000240   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000242   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000244   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000246   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000248   ec82     call    0x3b04, 0        	CALL	_fifo_get
00024a   f01d
00024c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00024e   0e03     movlw   0x3              	MOVLW	0x03
000250   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000252   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000254   e00f     bz      0x274            	BZ	_00112_DS_
000256   0105     movlb   0x5              	BANKSEL	_main_cmd_1_87
                                           ;	.line	167; meter_logger.c	fsk_tx_byte(cmd);
000258   514f     movf    0x4f, 0, 0x1     	MOVF	_main_cmd_1_87, W, B
00025a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00025c   ec01     call    0x4c02, 0        	CALL	_fsk_tx_byte
00025e   f026
000260   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	168; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000262   0e00     movlw   0                	MOVLW	0x00
000264   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000266   0e02     movlw   0x2              	MOVLW	0x02
000268   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00026a   ec4b     call    0x4696, 0        	CALL	_sleep_ms
00026c   f023
00026e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000270   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000272   d7de     bra     0x230            	BRA	_00110_DS_
                                           _00112_DS_:
                                           ;	.line	170; meter_logger.c	fsk_tx_disable();
000274   ecc8     call    0x4d90, 0        	CALL	_fsk_tx_disable
000276   f026
                                           ;	.line	172; meter_logger.c	usart_puts("\n\rwaiting for new command\n\r");
000278   0e00     movlw   0                	MOVLW	UPPER(___str_4)
00027a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00027c   0e2a     movlw   0x2a             	MOVLW	HIGH(___str_4)
00027e   6e05     movwf   0x5, 0           	MOVWF	r0x05
000280   0e44     movlw   0x44             	MOVLW	LOW(___str_4)
000282   6e04     movwf   0x4, 0           	MOVWF	r0x04
000284   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000286   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000288   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00028a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00028c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00028e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000290   ec22     call    0x4844, 0        	CALL	_usart_puts
000292   f024
000294   0e03     movlw   0x3              	MOVLW	0x03
000296   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	174; meter_logger.c	fsk_rx_enable();
000298   ec5e     call    0x48bc, 0        	CALL	_fsk_rx_enable
00029a   f024
                                           ;	.line	175; meter_logger.c	break;
00029c   d6ed     bra     0x78             	BRA	_00162_DS_
                                           _00113_DS_:
                                           ;	.line	179; meter_logger.c	fsk_rx_disable();
00029e   ecf4     call    0x4de8, 0        	CALL	_fsk_rx_disable
0002a0   f026
                                           ;	.line	180; meter_logger.c	usart_puts("\n\recho test - send some data\n\r");
0002a2   0e00     movlw   0                	MOVLW	UPPER(___str_5)
0002a4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0002a6   0e2a     movlw   0x2a             	MOVLW	HIGH(___str_5)
0002a8   6e05     movwf   0x5, 0           	MOVWF	r0x05
0002aa   0e60     movlw   0x60             	MOVLW	LOW(___str_5)
0002ac   6e04     movwf   0x4, 0           	MOVWF	r0x04
0002ae   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0002b0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002b2   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0002b4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002b6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0002b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002ba   ec22     call    0x4844, 0        	CALL	_usart_puts
0002bc   f024
0002be   0e03     movlw   0x3              	MOVLW	0x03
0002c0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	181; meter_logger.c	fsk_rx_enable();
0002c2   ec5e     call    0x48bc, 0        	CALL	_fsk_rx_enable
0002c4   f024
                                           ;	.line	185; meter_logger.c	last_fifo_size = 0;
0002c6   6a00     clrf    0, 0             	CLRF	r0x00
0002c8   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	186; meter_logger.c	sleep_ms(1000);							// 1 second
0002ca   0e03     movlw   0x3              	MOVLW	0x03
0002cc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002ce   0ee8     movlw   0xe8             	MOVLW	0xe8
0002d0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002d2   ec4b     call    0x4696, 0        	CALL	_sleep_ms
0002d4   f023
0002d6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0002d8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	187; meter_logger.c	fifo_size = fifo_in_use();
0002da   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
0002dc   f025
0002de   6e02     movwf   0x2, 0           	MOVWF	r0x02
0002e0   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0002e2   f003
                                           _00114_DS_:
                                           ;	.line	188; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
0002e4   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0002e6   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0002e8   e102     bnz     0x2ee            	BNZ	_00317_DS_
0002ea   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0002ec   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00317_DS_:
0002ee   e212     bc      0x314            	BC	_00116_DS_
                                           ;	.line	189; meter_logger.c	last_fifo_size = fifo_size;
0002f0   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
0002f2   f000
0002f4   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
0002f6   f001
                                           ;	.line	190; meter_logger.c	sleep_ms(500);						// return data when no data for 500 ms
0002f8   0e01     movlw   0x1              	MOVLW	0x01
0002fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002fc   0ef4     movlw   0xf4             	MOVLW	0xf4
0002fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000300   ec4b     call    0x4696, 0        	CALL	_sleep_ms
000302   f023
000304   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000306   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	191; meter_logger.c	fifo_size = fifo_in_use();
000308   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
00030a   f025
00030c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00030e   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000310   f003
000312   d7e8     bra     0x2e4            	BRA	_00114_DS_
                                           _00116_DS_:
                                           ;	.line	193; meter_logger.c	fsk_rx_disable();
000314   ecf4     call    0x4de8, 0        	CALL	_fsk_rx_disable
000316   f026
                                           ;	.line	196; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000318   6a04     clrf    0x4, 0           	CLRF	r0x04
00031a   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00168_DS_:
00031c   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
00031e   f025
000320   6e06     movwf   0x6, 0           	MOVWF	r0x06
000322   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
000324   f007
000326   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000328   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
00032a   e102     bnz     0x330            	BNZ	_00318_DS_
00032c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00032e   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00318_DS_:
000330   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
000332   d04c     bra     0x3cc            	BRA	_00117_DS_
                                           ;	.line	198; meter_logger.c	fifo_get(&sub_cmd);
000334   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_87)
000336   6e07     movwf   0x7, 0           	MOVWF	r0x07
000338   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_87)
00033a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00033c   0e80     movlw   0x80             	MOVLW	0x80
00033e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000340   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000342   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000344   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000346   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000348   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00034a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00034c   ec82     call    0x3b04, 0        	CALL	_fifo_get
00034e   f01d
000350   0e03     movlw   0x3              	MOVLW	0x03
000352   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	200; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
000354   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_87, r0x06
000356   f006
000358   6a07     clrf    0x7, 0           	CLRF	r0x07
00035a   0e00     movlw   0                	MOVLW	UPPER(___str_3)
00035c   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
00035e   0e2a     movlw   0x2a             	MOVLW	HIGH(___str_3)
000360   6e09     movwf   0x9, 0           	MOVWF	r0x09
000362   0e40     movlw   0x40             	MOVLW	LOW(___str_3)
000364   6e08     movwf   0x8, 0           	MOVWF	r0x08
000366   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000368   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
00036a   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00036c   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
00036e   0e80     movlw   0x80             	MOVLW	0x80
000370   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
000372   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000374   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000376   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000378   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00037a   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
00037c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00037e   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000380   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000382   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000384   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000386   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000388   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00038a   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
00038c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00038e   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000390   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000392   ecad     call    0x415a, 0        	CALL	_sprintf
000394   f020
000396   0e08     movlw   0x8              	MOVLW	0x08
000398   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	201; meter_logger.c	usart_puts(debug_buffer);
00039a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00039c   6e07     movwf   0x7, 0           	MOVWF	r0x07
00039e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0003a0   6e06     movwf   0x6, 0           	MOVWF	r0x06
0003a2   0e80     movlw   0x80             	MOVLW	0x80
0003a4   6e08     movwf   0x8, 0           	MOVWF	r0x08
0003a6   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0003a8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003aa   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0003ac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003ae   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0003b0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003b2   ec22     call    0x4844, 0        	CALL	_usart_puts
0003b4   f024
0003b6   0e03     movlw   0x3              	MOVLW	0x03
0003b8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0003ba   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_87
                                           ;	.line	203; meter_logger.c	fifo_put(sub_cmd);
0003bc   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_87, W, B
0003be   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003c0   ec92     call    0x3f24, 0        	CALL	_fifo_put
0003c2   f01f
0003c4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	196; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
0003c6   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
0003c8   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
0003ca   d7a8     bra     0x31c            	BRA	_00168_DS_
                                           _00117_DS_:
                                           ;	.line	208; meter_logger.c	fsk_tx_enable();
0003cc   ec88     call    0x4b10, 0        	CALL	_fsk_tx_enable
0003ce   f025
                                           _00118_DS_:
                                           ;	.line	209; meter_logger.c	while (fifo_get(&sub_cmd)) {
0003d0   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_87)
0003d2   6e05     movwf   0x5, 0           	MOVWF	r0x05
0003d4   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_87)
0003d6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0003d8   0e80     movlw   0x80             	MOVLW	0x80
0003da   6e06     movwf   0x6, 0           	MOVWF	r0x06
0003dc   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0003de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003e0   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0003e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003e4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0003e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003e8   ec82     call    0x3b04, 0        	CALL	_fifo_get
0003ea   f01d
0003ec   6e04     movwf   0x4, 0           	MOVWF	r0x04
0003ee   0e03     movlw   0x3              	MOVLW	0x03
0003f0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0003f2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0003f4   e00f     bz      0x414            	BZ	_00120_DS_
0003f6   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_87
                                           ;	.line	210; meter_logger.c	fsk_tx_byte(sub_cmd);
0003f8   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_87, W, B
0003fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003fc   ec01     call    0x4c02, 0        	CALL	_fsk_tx_byte
0003fe   f026
000400   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	211; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000402   0e00     movlw   0                	MOVLW	0x00
000404   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000406   0e02     movlw   0x2              	MOVLW	0x02
000408   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00040a   ec4b     call    0x4696, 0        	CALL	_sleep_ms
00040c   f023
00040e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000410   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000412   d7de     bra     0x3d0            	BRA	_00118_DS_
                                           _00120_DS_:
                                           ;	.line	213; meter_logger.c	fsk_tx_disable();
000414   ecc8     call    0x4d90, 0        	CALL	_fsk_tx_disable
000416   f026
                                           ;	.line	216; meter_logger.c	usart_puts("\n\rwaiting for new command\n\r");
000418   0e00     movlw   0                	MOVLW	UPPER(___str_4)
00041a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00041c   0e2a     movlw   0x2a             	MOVLW	HIGH(___str_4)
00041e   6e05     movwf   0x5, 0           	MOVWF	r0x05
000420   0e44     movlw   0x44             	MOVLW	LOW(___str_4)
000422   6e04     movwf   0x4, 0           	MOVWF	r0x04
000424   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000426   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000428   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00042a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00042c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00042e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000430   ec22     call    0x4844, 0        	CALL	_usart_puts
000432   f024
000434   0e03     movlw   0x3              	MOVLW	0x03
000436   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	218; meter_logger.c	fsk_rx_enable();
000438   ec5e     call    0x48bc, 0        	CALL	_fsk_rx_enable
00043a   f024
                                           ;	.line	219; meter_logger.c	break;
00043c   d61d     bra     0x78             	BRA	_00162_DS_
                                           _00121_DS_:
                                           ;	.line	222; meter_logger.c	fsk_rx_disable();
00043e   ecf4     call    0x4de8, 0        	CALL	_fsk_rx_disable
000440   f026
                                           ;	.line	224; meter_logger.c	usart_puts("\n\rkamstrup - send kmp frame data\n\r");
000442   0e00     movlw   0                	MOVLW	UPPER(___str_6)
000444   6e06     movwf   0x6, 0           	MOVWF	r0x06
000446   0e2a     movlw   0x2a             	MOVLW	HIGH(___str_6)
000448   6e05     movwf   0x5, 0           	MOVWF	r0x05
00044a   0e80     movlw   0x80             	MOVLW	LOW(___str_6)
00044c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00044e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000450   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000452   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000454   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000456   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000458   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00045a   ec22     call    0x4844, 0        	CALL	_usart_puts
00045c   f024
00045e   0e03     movlw   0x3              	MOVLW	0x03
000460   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	228; meter_logger.c	fsk_rx_enable();
000462   ec5e     call    0x48bc, 0        	CALL	_fsk_rx_enable
000464   f024
                                           ;	.line	229; meter_logger.c	last_fifo_size = 0;
000466   6a00     clrf    0, 0             	CLRF	r0x00
000468   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	230; meter_logger.c	sleep_ms(400);							// sleep 400 ms to let some data come in
00046a   0e01     movlw   0x1              	MOVLW	0x01
00046c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00046e   0e90     movlw   0x90             	MOVLW	0x90
000470   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000472   ec4b     call    0x4696, 0        	CALL	_sleep_ms
000474   f023
000476   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000478   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	231; meter_logger.c	fifo_size = fifo_in_use();
00047a   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
00047c   f025
00047e   6e02     movwf   0x2, 0           	MOVWF	r0x02
000480   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000482   f003
                                           _00122_DS_:
                                           ;	.line	232; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000484   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000486   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000488   e102     bnz     0x48e            	BNZ	_00319_DS_
00048a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00048c   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00319_DS_:
00048e   e212     bc      0x4b4            	BC	_00124_DS_
                                           ;	.line	233; meter_logger.c	last_fifo_size = fifo_size;
000490   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000492   f000
000494   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000496   f001
                                           ;	.line	234; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
000498   0e00     movlw   0                	MOVLW	0x00
00049a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00049c   0ec8     movlw   0xc8             	MOVLW	0xc8
00049e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004a0   ec4b     call    0x4696, 0        	CALL	_sleep_ms
0004a2   f023
0004a4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0004a6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	235; meter_logger.c	fifo_size = fifo_in_use();
0004a8   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
0004aa   f025
0004ac   6e02     movwf   0x2, 0           	MOVWF	r0x02
0004ae   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0004b0   f003
0004b2   d7e8     bra     0x484            	BRA	_00122_DS_
                                           _00124_DS_:
                                           ;	.line	237; meter_logger.c	fsk_rx_disable();
0004b4   ecf4     call    0x4de8, 0        	CALL	_fsk_rx_disable
0004b6   f026
                                           ;	.line	240; meter_logger.c	usart_puts("\n\rkamstrup - kmp frame received:\n\r");
0004b8   0e00     movlw   0                	MOVLW	UPPER(___str_7)
0004ba   6e06     movwf   0x6, 0           	MOVWF	r0x06
0004bc   0e2a     movlw   0x2a             	MOVLW	HIGH(___str_7)
0004be   6e05     movwf   0x5, 0           	MOVWF	r0x05
0004c0   0ea4     movlw   0xa4             	MOVLW	LOW(___str_7)
0004c2   6e04     movwf   0x4, 0           	MOVWF	r0x04
0004c4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0004c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004c8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0004ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004cc   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0004ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004d0   ec22     call    0x4844, 0        	CALL	_usart_puts
0004d2   f024
0004d4   0e03     movlw   0x3              	MOVLW	0x03
0004d6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	243; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
0004d8   6a04     clrf    0x4, 0           	CLRF	r0x04
0004da   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00171_DS_:
0004dc   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
0004de   f025
0004e0   6e06     movwf   0x6, 0           	MOVWF	r0x06
0004e2   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
0004e4   f007
0004e6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0004e8   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0004ea   e102     bnz     0x4f0            	BNZ	_00320_DS_
0004ec   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0004ee   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00320_DS_:
0004f0   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0004f2   d04c     bra     0x58c            	BRA	_00125_DS_
                                           ;	.line	245; meter_logger.c	fifo_get(&sub_cmd);
0004f4   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_87)
0004f6   6e07     movwf   0x7, 0           	MOVWF	r0x07
0004f8   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_87)
0004fa   6e06     movwf   0x6, 0           	MOVWF	r0x06
0004fc   0e80     movlw   0x80             	MOVLW	0x80
0004fe   6e08     movwf   0x8, 0           	MOVWF	r0x08
000500   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000502   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000504   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000506   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000508   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00050a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00050c   ec82     call    0x3b04, 0        	CALL	_fifo_get
00050e   f01d
000510   0e03     movlw   0x3              	MOVLW	0x03
000512   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	247; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
000514   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_87, r0x06
000516   f006
000518   6a07     clrf    0x7, 0           	CLRF	r0x07
00051a   0e00     movlw   0                	MOVLW	UPPER(___str_3)
00051c   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
00051e   0e2a     movlw   0x2a             	MOVLW	HIGH(___str_3)
000520   6e09     movwf   0x9, 0           	MOVWF	r0x09
000522   0e40     movlw   0x40             	MOVLW	LOW(___str_3)
000524   6e08     movwf   0x8, 0           	MOVWF	r0x08
000526   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000528   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
00052a   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00052c   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
00052e   0e80     movlw   0x80             	MOVLW	0x80
000530   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
000532   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000534   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000536   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000538   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00053a   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
00053c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00053e   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000540   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000542   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000544   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000546   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000548   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00054a   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
00054c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00054e   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000550   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000552   ecad     call    0x415a, 0        	CALL	_sprintf
000554   f020
000556   0e08     movlw   0x8              	MOVLW	0x08
000558   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	248; meter_logger.c	usart_puts(debug_buffer);
00055a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00055c   6e07     movwf   0x7, 0           	MOVWF	r0x07
00055e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000560   6e06     movwf   0x6, 0           	MOVWF	r0x06
000562   0e80     movlw   0x80             	MOVLW	0x80
000564   6e08     movwf   0x8, 0           	MOVWF	r0x08
000566   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000568   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00056a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00056c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00056e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000570   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000572   ec22     call    0x4844, 0        	CALL	_usart_puts
000574   f024
000576   0e03     movlw   0x3              	MOVLW	0x03
000578   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00057a   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_87
                                           ;	.line	250; meter_logger.c	fifo_put(sub_cmd);
00057c   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_87, W, B
00057e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000580   ec92     call    0x3f24, 0        	CALL	_fifo_put
000582   f01f
000584   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	243; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000586   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000588   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
00058a   d7a8     bra     0x4dc            	BRA	_00171_DS_
                                           _00125_DS_:
                                           ;	.line	254; meter_logger.c	rs232_tx_enable(TIMER0_RS232_1200);
00058c   0ef9     movlw   0xf9             	MOVLW	0xf9
00058e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000590   0eae     movlw   0xae             	MOVLW	0xae
000592   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000594   ecf7     call    0x49ee, 0        	CALL	_rs232_tx_enable
000596   f024
000598   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00059a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00126_DS_:
                                           ;	.line	255; meter_logger.c	while (fifo_get(&sub_cmd)) {
00059c   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_87)
00059e   6e05     movwf   0x5, 0           	MOVWF	r0x05
0005a0   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_87)
0005a2   6e04     movwf   0x4, 0           	MOVWF	r0x04
0005a4   0e80     movlw   0x80             	MOVLW	0x80
0005a6   6e06     movwf   0x6, 0           	MOVWF	r0x06
0005a8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0005aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005ac   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0005ae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005b0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0005b2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005b4   ec82     call    0x3b04, 0        	CALL	_fifo_get
0005b6   f01d
0005b8   6e04     movwf   0x4, 0           	MOVWF	r0x04
0005ba   0e03     movlw   0x3              	MOVLW	0x03
0005bc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0005be   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0005c0   e00f     bz      0x5e0            	BZ	_00128_DS_
0005c2   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_87
                                           ;	.line	256; meter_logger.c	rs232_tx_byte(sub_cmd);
0005c4   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_87, W, B
0005c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005c8   eca2     call    0x4b44, 0        	CALL	_rs232_tx_byte
0005ca   f025
0005cc   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	257; meter_logger.c	sleep_ms(RS232_TX_SLEEP);
0005ce   0e00     movlw   0                	MOVLW	0x00
0005d0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005d2   0e0c     movlw   0xc              	MOVLW	0x0c
0005d4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005d6   ec4b     call    0x4696, 0        	CALL	_sleep_ms
0005d8   f023
0005da   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0005dc   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0005de   d7de     bra     0x59c            	BRA	_00126_DS_
                                           _00128_DS_:
                                           ;	.line	259; meter_logger.c	rs232_tx_disable();
0005e0   ecde     call    0x4dbc, 0        	CALL	_rs232_tx_disable
0005e2   f026
                                           ;	.line	265; meter_logger.c	rs232_rx_enable(TIMER0_RS232_1200);
0005e4   0ef9     movlw   0xf9             	MOVLW	0xf9
0005e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005e8   0eae     movlw   0xae             	MOVLW	0xae
0005ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005ec   ecb7     call    0x496e, 0        	CALL	_rs232_rx_enable
0005ee   f024
0005f0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0005f2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	266; meter_logger.c	last_fifo_size = 0;
0005f4   6a00     clrf    0, 0             	CLRF	r0x00
0005f6   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	267; meter_logger.c	sleep_ms(400);							// sleep 200 ms to let some data come in
0005f8   0e01     movlw   0x1              	MOVLW	0x01
0005fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005fc   0e90     movlw   0x90             	MOVLW	0x90
0005fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000600   ec4b     call    0x4696, 0        	CALL	_sleep_ms
000602   f023
000604   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000606   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	268; meter_logger.c	fifo_size = fifo_in_use();
000608   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
00060a   f025
00060c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00060e   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000610   f003
                                           _00129_DS_:
                                           ;	.line	270; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000612   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000614   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000616   e102     bnz     0x61c            	BNZ	_00321_DS_
000618   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00061a   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00321_DS_:
00061c   e212     bc      0x642            	BC	_00131_DS_
                                           ;	.line	271; meter_logger.c	last_fifo_size = fifo_size;
00061e   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000620   f000
000622   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000624   f001
                                           ;	.line	272; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
000626   0e00     movlw   0                	MOVLW	0x00
000628   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00062a   0ec8     movlw   0xc8             	MOVLW	0xc8
00062c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00062e   ec4b     call    0x4696, 0        	CALL	_sleep_ms
000630   f023
000632   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000634   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	273; meter_logger.c	fifo_size = fifo_in_use();
000636   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
000638   f025
00063a   6e02     movwf   0x2, 0           	MOVWF	r0x02
00063c   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00063e   f003
000640   d7e8     bra     0x612            	BRA	_00129_DS_
                                           _00131_DS_:
                                           ;	.line	276; meter_logger.c	rs232_rx_disable();
000642   ecd3     call    0x4da6, 0        	CALL	_rs232_rx_disable
000644   f026
                                           ;	.line	280; meter_logger.c	usart_puts("\n\rkamstrup - kmp reply received:\n\r");
000646   0e00     movlw   0                	MOVLW	UPPER(___str_8)
000648   6e06     movwf   0x6, 0           	MOVWF	r0x06
00064a   0e2a     movlw   0x2a             	MOVLW	HIGH(___str_8)
00064c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00064e   0ec8     movlw   0xc8             	MOVLW	LOW(___str_8)
000650   6e04     movwf   0x4, 0           	MOVWF	r0x04
000652   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000654   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000656   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000658   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00065a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00065c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00065e   ec22     call    0x4844, 0        	CALL	_usart_puts
000660   f024
000662   0e03     movlw   0x3              	MOVLW	0x03
000664   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	283; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000666   6a04     clrf    0x4, 0           	CLRF	r0x04
000668   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00174_DS_:
00066a   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
00066c   f025
00066e   6e06     movwf   0x6, 0           	MOVWF	r0x06
000670   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
000672   f007
000674   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000676   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000678   e102     bnz     0x67e            	BNZ	_00322_DS_
00067a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00067c   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00322_DS_:
00067e   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
000680   d04c     bra     0x71a            	BRA	_00132_DS_
                                           ;	.line	285; meter_logger.c	fifo_get(&sub_cmd);
000682   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_87)
000684   6e07     movwf   0x7, 0           	MOVWF	r0x07
000686   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_87)
000688   6e06     movwf   0x6, 0           	MOVWF	r0x06
00068a   0e80     movlw   0x80             	MOVLW	0x80
00068c   6e08     movwf   0x8, 0           	MOVWF	r0x08
00068e   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000690   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000692   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000694   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000696   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000698   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00069a   ec82     call    0x3b04, 0        	CALL	_fifo_get
00069c   f01d
00069e   0e03     movlw   0x3              	MOVLW	0x03
0006a0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	287; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
0006a2   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_87, r0x06
0006a4   f006
0006a6   6a07     clrf    0x7, 0           	CLRF	r0x07
0006a8   0e00     movlw   0                	MOVLW	UPPER(___str_3)
0006aa   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0006ac   0e2a     movlw   0x2a             	MOVLW	HIGH(___str_3)
0006ae   6e09     movwf   0x9, 0           	MOVWF	r0x09
0006b0   0e40     movlw   0x40             	MOVLW	LOW(___str_3)
0006b2   6e08     movwf   0x8, 0           	MOVWF	r0x08
0006b4   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0006b6   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
0006b8   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0006ba   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0006bc   0e80     movlw   0x80             	MOVLW	0x80
0006be   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
0006c0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0006c2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006c4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0006c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006c8   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
0006ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006cc   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0006ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006d0   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0006d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006d4   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
0006d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006d8   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
0006da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006dc   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
0006de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006e0   ecad     call    0x415a, 0        	CALL	_sprintf
0006e2   f020
0006e4   0e08     movlw   0x8              	MOVLW	0x08
0006e6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	288; meter_logger.c	usart_puts(debug_buffer);
0006e8   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0006ea   6e07     movwf   0x7, 0           	MOVWF	r0x07
0006ec   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0006ee   6e06     movwf   0x6, 0           	MOVWF	r0x06
0006f0   0e80     movlw   0x80             	MOVLW	0x80
0006f2   6e08     movwf   0x8, 0           	MOVWF	r0x08
0006f4   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0006f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006f8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0006fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006fc   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0006fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000700   ec22     call    0x4844, 0        	CALL	_usart_puts
000702   f024
000704   0e03     movlw   0x3              	MOVLW	0x03
000706   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000708   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_87
                                           ;	.line	290; meter_logger.c	fifo_put(sub_cmd);
00070a   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_87, W, B
00070c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00070e   ec92     call    0x3f24, 0        	CALL	_fifo_put
000710   f01f
000712   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	283; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000714   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000716   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000718   d7a8     bra     0x66a            	BRA	_00174_DS_
                                           _00132_DS_:
                                           ;	.line	293; meter_logger.c	if (fifo_in_use()) {
00071a   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
00071c   f025
00071e   6e04     movwf   0x4, 0           	MOVWF	r0x04
000720   cff3     movff   0xff3, 0x5       	MOVFF	PRODL, r0x05
000722   f005
000724   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000726   1005     iorwf   0x5, 0, 0        	IORWF	r0x05, W
000728   e02b     bz      0x780            	BZ	_00137_DS_
                                           ;	.line	295; meter_logger.c	DEBUG2_PIN = 1;
00072a   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
00072c   0000     nop                      	nop
00072e   0000     nop                      	nop
                                           	
                                           ;	.line	300; meter_logger.c	DEBUG2_PIN = 0;
000730   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	301; meter_logger.c	fsk_tx_enable();
000732   ec88     call    0x4b10, 0        	CALL	_fsk_tx_enable
000734   f025
                                           _00133_DS_:
                                           ;	.line	302; meter_logger.c	while (fifo_get(&sub_cmd)) {
000736   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_87)
000738   6e05     movwf   0x5, 0           	MOVWF	r0x05
00073a   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_87)
00073c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00073e   0e80     movlw   0x80             	MOVLW	0x80
000740   6e06     movwf   0x6, 0           	MOVWF	r0x06
000742   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000744   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000746   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000748   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00074a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00074c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00074e   ec82     call    0x3b04, 0        	CALL	_fifo_get
000750   f01d
000752   6e04     movwf   0x4, 0           	MOVWF	r0x04
000754   0e03     movlw   0x3              	MOVLW	0x03
000756   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000758   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00075a   e00f     bz      0x77a            	BZ	_00135_DS_
00075c   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_87
                                           ;	.line	303; meter_logger.c	fsk_tx_byte(sub_cmd);
00075e   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_87, W, B
000760   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000762   ec01     call    0x4c02, 0        	CALL	_fsk_tx_byte
000764   f026
000766   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	304; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000768   0e00     movlw   0                	MOVLW	0x00
00076a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00076c   0e02     movlw   0x2              	MOVLW	0x02
00076e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000770   ec4b     call    0x4696, 0        	CALL	_sleep_ms
000772   f023
000774   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000776   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000778   d7de     bra     0x736            	BRA	_00133_DS_
                                           _00135_DS_:
                                           ;	.line	306; meter_logger.c	fsk_tx_disable();
00077a   ecc8     call    0x4d90, 0        	CALL	_fsk_tx_disable
00077c   f026
00077e   d047     bra     0x80e            	BRA	_00138_DS_
                                           _00137_DS_:
                                           ;	.line	310; meter_logger.c	DEBUG2_PIN = 1;
000780   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000782   0000     nop                      	nop
000784   0000     nop                      	nop
                                           	
                                           ;	.line	315; meter_logger.c	DEBUG2_PIN = 0;
000786   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
000788   0000     nop                      	nop
00078a   0000     nop                      	nop
                                           	
                                           ;	.line	320; meter_logger.c	DEBUG2_PIN = 1;
00078c   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
00078e   0000     nop                      	nop
000790   0000     nop                      	nop
                                           	
                                           ;	.line	325; meter_logger.c	DEBUG2_PIN = 0;
000792   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	327; meter_logger.c	sprintf(debug_buffer, "\n\rno reply from meter\n\r");
000794   0e00     movlw   0                	MOVLW	UPPER(___str_9)
000796   6e06     movwf   0x6, 0           	MOVWF	r0x06
000798   0e2a     movlw   0x2a             	MOVLW	HIGH(___str_9)
00079a   6e05     movwf   0x5, 0           	MOVWF	r0x05
00079c   0eec     movlw   0xec             	MOVLW	LOW(___str_9)
00079e   6e04     movwf   0x4, 0           	MOVWF	r0x04
0007a0   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0007a2   6e08     movwf   0x8, 0           	MOVWF	r0x08
0007a4   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0007a6   6e07     movwf   0x7, 0           	MOVWF	r0x07
0007a8   0e80     movlw   0x80             	MOVLW	0x80
0007aa   6e09     movwf   0x9, 0           	MOVWF	r0x09
0007ac   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0007ae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007b0   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0007b2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007b4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0007b6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007b8   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0007ba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007bc   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0007be   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007c0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0007c2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007c4   ecad     call    0x415a, 0        	CALL	_sprintf
0007c6   f020
0007c8   0e06     movlw   0x6              	MOVLW	0x06
0007ca   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	328; meter_logger.c	usart_puts(debug_buffer);
0007cc   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0007ce   6e05     movwf   0x5, 0           	MOVWF	r0x05
0007d0   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0007d2   6e04     movwf   0x4, 0           	MOVWF	r0x04
0007d4   0e80     movlw   0x80             	MOVLW	0x80
0007d6   6e06     movwf   0x6, 0           	MOVWF	r0x06
0007d8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0007da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007dc   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0007de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007e0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0007e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007e4   ec22     call    0x4844, 0        	CALL	_usart_puts
0007e6   f024
0007e8   0e03     movlw   0x3              	MOVLW	0x03
0007ea   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	330; meter_logger.c	fsk_tx_enable();
0007ec   ec88     call    0x4b10, 0        	CALL	_fsk_tx_enable
0007ee   f025
                                           ;	.line	331; meter_logger.c	fsk_tx_byte(0x0d);
0007f0   0e0d     movlw   0xd              	MOVLW	0x0d
0007f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007f4   ec01     call    0x4c02, 0        	CALL	_fsk_tx_byte
0007f6   f026
0007f8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	332; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
0007fa   0e00     movlw   0                	MOVLW	0x00
0007fc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007fe   0e02     movlw   0x2              	MOVLW	0x02
000800   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000802   ec4b     call    0x4696, 0        	CALL	_sleep_ms
000804   f023
000806   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000808   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	333; meter_logger.c	fsk_tx_disable();
00080a   ecc8     call    0x4d90, 0        	CALL	_fsk_tx_disable
00080c   f026
                                           _00138_DS_:
                                           ;	.line	336; meter_logger.c	usart_puts("\n\rwaiting for new command\n\r");
00080e   0e00     movlw   0                	MOVLW	UPPER(___str_4)
000810   6e06     movwf   0x6, 0           	MOVWF	r0x06
000812   0e2a     movlw   0x2a             	MOVLW	HIGH(___str_4)
000814   6e05     movwf   0x5, 0           	MOVWF	r0x05
000816   0e44     movlw   0x44             	MOVLW	LOW(___str_4)
000818   6e04     movwf   0x4, 0           	MOVWF	r0x04
00081a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00081c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00081e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000820   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000822   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000824   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000826   ec22     call    0x4844, 0        	CALL	_usart_puts
000828   f024
00082a   0e03     movlw   0x3              	MOVLW	0x03
00082c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	338; meter_logger.c	fsk_rx_enable();
00082e   ec5e     call    0x48bc, 0        	CALL	_fsk_rx_enable
000830   f024
                                           ;	.line	339; meter_logger.c	break;
000832   ef3c     goto    0x78             	GOTO	_00162_DS_
000834   f000
                                           _00139_DS_:
                                           ;	.line	341; meter_logger.c	fsk_rx_disable();
000836   ecf4     call    0x4de8, 0        	CALL	_fsk_rx_disable
000838   f026
                                           ;	.line	343; meter_logger.c	usart_puts("\n\rkamstrup - send multical frame data\n\r");
00083a   0e00     movlw   0                	MOVLW	UPPER(___str_10)
00083c   6e06     movwf   0x6, 0           	MOVWF	r0x06
00083e   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_10)
000840   6e05     movwf   0x5, 0           	MOVWF	r0x05
000842   0e04     movlw   0x4              	MOVLW	LOW(___str_10)
000844   6e04     movwf   0x4, 0           	MOVWF	r0x04
000846   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000848   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00084a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00084c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00084e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000850   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000852   ec22     call    0x4844, 0        	CALL	_usart_puts
000854   f024
000856   0e03     movlw   0x3              	MOVLW	0x03
000858   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	347; meter_logger.c	fsk_rx_enable();
00085a   ec5e     call    0x48bc, 0        	CALL	_fsk_rx_enable
00085c   f024
                                           ;	.line	348; meter_logger.c	last_fifo_size = 0;
00085e   6a00     clrf    0, 0             	CLRF	r0x00
000860   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	349; meter_logger.c	sleep_ms(400);							// sleep 400 ms to let some data come in
000862   0e01     movlw   0x1              	MOVLW	0x01
000864   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000866   0e90     movlw   0x90             	MOVLW	0x90
000868   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00086a   ec4b     call    0x4696, 0        	CALL	_sleep_ms
00086c   f023
00086e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000870   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	350; meter_logger.c	fifo_size = fifo_in_use();
000872   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
000874   f025
000876   6e02     movwf   0x2, 0           	MOVWF	r0x02
000878   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00087a   f003
                                           _00140_DS_:
                                           ;	.line	351; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
00087c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00087e   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000880   e102     bnz     0x886            	BNZ	_00323_DS_
000882   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000884   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00323_DS_:
000886   e212     bc      0x8ac            	BC	_00142_DS_
                                           ;	.line	352; meter_logger.c	last_fifo_size = fifo_size;
000888   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
00088a   f000
00088c   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
00088e   f001
                                           ;	.line	353; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
000890   0e00     movlw   0                	MOVLW	0x00
000892   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000894   0ec8     movlw   0xc8             	MOVLW	0xc8
000896   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000898   ec4b     call    0x4696, 0        	CALL	_sleep_ms
00089a   f023
00089c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00089e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	354; meter_logger.c	fifo_size = fifo_in_use();
0008a0   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
0008a2   f025
0008a4   6e02     movwf   0x2, 0           	MOVWF	r0x02
0008a6   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0008a8   f003
0008aa   d7e8     bra     0x87c            	BRA	_00140_DS_
                                           _00142_DS_:
                                           ;	.line	356; meter_logger.c	fsk_rx_disable();
0008ac   ecf4     call    0x4de8, 0        	CALL	_fsk_rx_disable
0008ae   f026
                                           ;	.line	359; meter_logger.c	usart_puts("\n\rkamstrup - multical frame received:\n\r");
0008b0   0e00     movlw   0                	MOVLW	UPPER(___str_11)
0008b2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008b4   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_11)
0008b6   6e05     movwf   0x5, 0           	MOVWF	r0x05
0008b8   0e2c     movlw   0x2c             	MOVLW	LOW(___str_11)
0008ba   6e04     movwf   0x4, 0           	MOVWF	r0x04
0008bc   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0008be   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008c0   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0008c2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008c4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0008c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008c8   ec22     call    0x4844, 0        	CALL	_usart_puts
0008ca   f024
0008cc   0e03     movlw   0x3              	MOVLW	0x03
0008ce   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	362; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
0008d0   6a04     clrf    0x4, 0           	CLRF	r0x04
0008d2   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00177_DS_:
0008d4   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
0008d6   f025
0008d8   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008da   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
0008dc   f007
0008de   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0008e0   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0008e2   e102     bnz     0x8e8            	BNZ	_00324_DS_
0008e4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0008e6   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00324_DS_:
0008e8   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0008ea   d04c     bra     0x984            	BRA	_00144_DS_
                                           ;	.line	364; meter_logger.c	fifo_get(&sub_cmd);
0008ec   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_87)
0008ee   6e07     movwf   0x7, 0           	MOVWF	r0x07
0008f0   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_87)
0008f2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008f4   0e80     movlw   0x80             	MOVLW	0x80
0008f6   6e08     movwf   0x8, 0           	MOVWF	r0x08
0008f8   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0008fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008fc   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0008fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000900   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000902   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000904   ec82     call    0x3b04, 0        	CALL	_fifo_get
000906   f01d
000908   0e03     movlw   0x3              	MOVLW	0x03
00090a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	366; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
00090c   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_87, r0x06
00090e   f006
000910   6a07     clrf    0x7, 0           	CLRF	r0x07
000912   0e00     movlw   0                	MOVLW	UPPER(___str_3)
000914   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000916   0e2a     movlw   0x2a             	MOVLW	HIGH(___str_3)
000918   6e09     movwf   0x9, 0           	MOVWF	r0x09
00091a   0e40     movlw   0x40             	MOVLW	LOW(___str_3)
00091c   6e08     movwf   0x8, 0           	MOVWF	r0x08
00091e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000920   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
000922   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000924   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
000926   0e80     movlw   0x80             	MOVLW	0x80
000928   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
00092a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00092c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00092e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000930   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000932   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000934   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000936   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000938   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00093a   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00093c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00093e   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000940   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000942   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000944   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000946   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000948   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00094a   ecad     call    0x415a, 0        	CALL	_sprintf
00094c   f020
00094e   0e08     movlw   0x8              	MOVLW	0x08
000950   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	367; meter_logger.c	usart_puts(debug_buffer);
000952   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000954   6e07     movwf   0x7, 0           	MOVWF	r0x07
000956   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000958   6e06     movwf   0x6, 0           	MOVWF	r0x06
00095a   0e80     movlw   0x80             	MOVLW	0x80
00095c   6e08     movwf   0x8, 0           	MOVWF	r0x08
00095e   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000960   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000962   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000964   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000966   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000968   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00096a   ec22     call    0x4844, 0        	CALL	_usart_puts
00096c   f024
00096e   0e03     movlw   0x3              	MOVLW	0x03
000970   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000972   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_87
                                           ;	.line	369; meter_logger.c	fifo_put(sub_cmd);
000974   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_87, W, B
000976   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000978   ec92     call    0x3f24, 0        	CALL	_fifo_put
00097a   f01f
00097c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	362; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
00097e   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000980   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000982   d7a8     bra     0x8d4            	BRA	_00177_DS_
                                           _00144_DS_:
                                           ;	.line	373; meter_logger.c	while (fifo_get(&sub_cmd)) {
000984   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_87)
000986   6e05     movwf   0x5, 0           	MOVWF	r0x05
000988   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_87)
00098a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00098c   0e80     movlw   0x80             	MOVLW	0x80
00098e   6e06     movwf   0x6, 0           	MOVWF	r0x06
000990   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000992   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000994   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000996   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000998   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00099a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00099c   ec82     call    0x3b04, 0        	CALL	_fifo_get
00099e   f01d
0009a0   6e04     movwf   0x4, 0           	MOVWF	r0x04
0009a2   0e03     movlw   0x3              	MOVLW	0x03
0009a4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0009a6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0009a8   e00f     bz      0x9c8            	BZ	_00146_DS_
0009aa   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_87
                                           ;	.line	374; meter_logger.c	rs232_tx_byte(sub_cmd);
0009ac   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_87, W, B
0009ae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009b0   eca2     call    0x4b44, 0        	CALL	_rs232_tx_byte
0009b2   f025
0009b4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	375; meter_logger.c	sleep_ms(RS232_TX_SLEEP);
0009b6   0e00     movlw   0                	MOVLW	0x00
0009b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009ba   0e0c     movlw   0xc              	MOVLW	0x0c
0009bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009be   ec4b     call    0x4696, 0        	CALL	_sleep_ms
0009c0   f023
0009c2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0009c4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0009c6   d7de     bra     0x984            	BRA	_00144_DS_
                                           _00146_DS_:
                                           ;	.line	377; meter_logger.c	rs232_tx_disable();
0009c8   ecde     call    0x4dbc, 0        	CALL	_rs232_tx_disable
0009ca   f026
                                           ;	.line	383; meter_logger.c	rs232_rx_enable(TIMER0_RS232_300);
0009cc   0ee6     movlw   0xe6             	MOVLW	0xe6
0009ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009d0   0e1b     movlw   0x1b             	MOVLW	0x1b
0009d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009d4   ecb7     call    0x496e, 0        	CALL	_rs232_rx_enable
0009d6   f024
0009d8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0009da   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	384; meter_logger.c	last_fifo_size = 0;
0009dc   6a00     clrf    0, 0             	CLRF	r0x00
0009de   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	385; meter_logger.c	sleep_ms(400);							// sleep 200 ms to let some data come in
0009e0   0e01     movlw   0x1              	MOVLW	0x01
0009e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009e4   0e90     movlw   0x90             	MOVLW	0x90
0009e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009e8   ec4b     call    0x4696, 0        	CALL	_sleep_ms
0009ea   f023
0009ec   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0009ee   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	386; meter_logger.c	fifo_size = fifo_in_use();
0009f0   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
0009f2   f025
0009f4   6e02     movwf   0x2, 0           	MOVWF	r0x02
0009f6   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0009f8   f003
                                           _00147_DS_:
                                           ;	.line	388; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
0009fa   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0009fc   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0009fe   e102     bnz     0xa04            	BNZ	_00325_DS_
000a00   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000a02   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00325_DS_:
000a04   e212     bc      0xa2a            	BC	_00149_DS_
                                           ;	.line	389; meter_logger.c	last_fifo_size = fifo_size;
000a06   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000a08   f000
000a0a   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000a0c   f001
                                           ;	.line	390; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
000a0e   0e00     movlw   0                	MOVLW	0x00
000a10   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a12   0ec8     movlw   0xc8             	MOVLW	0xc8
000a14   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a16   ec4b     call    0x4696, 0        	CALL	_sleep_ms
000a18   f023
000a1a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000a1c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	391; meter_logger.c	fifo_size = fifo_in_use();
000a1e   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
000a20   f025
000a22   6e02     movwf   0x2, 0           	MOVWF	r0x02
000a24   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000a26   f003
000a28   d7e8     bra     0x9fa            	BRA	_00147_DS_
                                           _00149_DS_:
                                           ;	.line	394; meter_logger.c	rs232_rx_disable();
000a2a   ecd3     call    0x4da6, 0        	CALL	_rs232_rx_disable
000a2c   f026
                                           ;	.line	398; meter_logger.c	usart_puts("\n\rkamstrup - multical reply received:\n\r");
000a2e   0e00     movlw   0                	MOVLW	UPPER(___str_12)
000a30   6e02     movwf   0x2, 0           	MOVWF	r0x02
000a32   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_12)
000a34   6e01     movwf   0x1, 0           	MOVWF	r0x01
000a36   0e54     movlw   0x54             	MOVLW	LOW(___str_12)
000a38   6e00     movwf   0, 0             	MOVWF	r0x00
000a3a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000a3c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a3e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000a40   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a42   5000     movf    0, 0, 0          	MOVF	r0x00, W
000a44   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a46   ec22     call    0x4844, 0        	CALL	_usart_puts
000a48   f024
000a4a   0e03     movlw   0x3              	MOVLW	0x03
000a4c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	401; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000a4e   6a00     clrf    0, 0             	CLRF	r0x00
000a50   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00180_DS_:
000a52   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
000a54   f025
000a56   6e02     movwf   0x2, 0           	MOVWF	r0x02
000a58   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000a5a   f003
000a5c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000a5e   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000a60   e102     bnz     0xa66            	BNZ	_00326_DS_
000a62   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000a64   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00326_DS_:
000a66   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
000a68   d04c     bra     0xb02            	BRA	_00150_DS_
                                           ;	.line	403; meter_logger.c	fifo_get(&sub_cmd);
000a6a   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_87)
000a6c   6e03     movwf   0x3, 0           	MOVWF	r0x03
000a6e   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_87)
000a70   6e02     movwf   0x2, 0           	MOVWF	r0x02
000a72   0e80     movlw   0x80             	MOVLW	0x80
000a74   6e04     movwf   0x4, 0           	MOVWF	r0x04
000a76   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000a78   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a7a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000a7c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a7e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000a80   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a82   ec82     call    0x3b04, 0        	CALL	_fifo_get
000a84   f01d
000a86   0e03     movlw   0x3              	MOVLW	0x03
000a88   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	405; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
000a8a   c550     movff   0x550, 0x2       	MOVFF	_main_sub_cmd_1_87, r0x02
000a8c   f002
000a8e   6a03     clrf    0x3, 0           	CLRF	r0x03
000a90   0e00     movlw   0                	MOVLW	UPPER(___str_3)
000a92   6e06     movwf   0x6, 0           	MOVWF	r0x06
000a94   0e2a     movlw   0x2a             	MOVLW	HIGH(___str_3)
000a96   6e05     movwf   0x5, 0           	MOVWF	r0x05
000a98   0e40     movlw   0x40             	MOVLW	LOW(___str_3)
000a9a   6e04     movwf   0x4, 0           	MOVWF	r0x04
000a9c   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000a9e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000aa0   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000aa2   6e07     movwf   0x7, 0           	MOVWF	r0x07
000aa4   0e80     movlw   0x80             	MOVLW	0x80
000aa6   6e09     movwf   0x9, 0           	MOVWF	r0x09
000aa8   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000aaa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000aac   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000aae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ab0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000ab2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ab4   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000ab6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ab8   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000aba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000abc   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000abe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ac0   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000ac2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ac4   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000ac6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ac8   ecad     call    0x415a, 0        	CALL	_sprintf
000aca   f020
000acc   0e08     movlw   0x8              	MOVLW	0x08
000ace   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	406; meter_logger.c	usart_puts(debug_buffer);
000ad0   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000ad2   6e03     movwf   0x3, 0           	MOVWF	r0x03
000ad4   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000ad6   6e02     movwf   0x2, 0           	MOVWF	r0x02
000ad8   0e80     movlw   0x80             	MOVLW	0x80
000ada   6e04     movwf   0x4, 0           	MOVWF	r0x04
000adc   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000ade   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ae0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000ae2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ae4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000ae6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ae8   ec22     call    0x4844, 0        	CALL	_usart_puts
000aea   f024
000aec   0e03     movlw   0x3              	MOVLW	0x03
000aee   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000af0   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_87
                                           ;	.line	408; meter_logger.c	fifo_put(sub_cmd);
000af2   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_87, W, B
000af4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000af6   ec92     call    0x3f24, 0        	CALL	_fifo_put
000af8   f01f
000afa   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	401; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000afc   4a00     infsnz  0, 0x1, 0        	INFSNZ	r0x00, F
000afe   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
000b00   d7a8     bra     0xa52            	BRA	_00180_DS_
                                           _00150_DS_:
                                           ;	.line	411; meter_logger.c	if (fifo_in_use()) {
000b02   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
000b04   f025
000b06   6e00     movwf   0, 0             	MOVWF	r0x00
000b08   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
000b0a   f001
000b0c   5000     movf    0, 0, 0          	MOVF	r0x00, W
000b0e   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
000b10   e02b     bz      0xb68            	BZ	_00155_DS_
                                           ;	.line	413; meter_logger.c	DEBUG2_PIN = 1;
000b12   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000b14   0000     nop                      	nop
000b16   0000     nop                      	nop
                                           	
                                           ;	.line	418; meter_logger.c	DEBUG2_PIN = 0;
000b18   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	419; meter_logger.c	fsk_tx_enable();
000b1a   ec88     call    0x4b10, 0        	CALL	_fsk_tx_enable
000b1c   f025
                                           _00151_DS_:
                                           ;	.line	420; meter_logger.c	while (fifo_get(&sub_cmd)) {
000b1e   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_87)
000b20   6e01     movwf   0x1, 0           	MOVWF	r0x01
000b22   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_87)
000b24   6e00     movwf   0, 0             	MOVWF	r0x00
000b26   0e80     movlw   0x80             	MOVLW	0x80
000b28   6e02     movwf   0x2, 0           	MOVWF	r0x02
000b2a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000b2c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b2e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000b30   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b32   5000     movf    0, 0, 0          	MOVF	r0x00, W
000b34   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b36   ec82     call    0x3b04, 0        	CALL	_fifo_get
000b38   f01d
000b3a   6e00     movwf   0, 0             	MOVWF	r0x00
000b3c   0e03     movlw   0x3              	MOVLW	0x03
000b3e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000b40   5000     movf    0, 0, 0          	MOVF	r0x00, W
000b42   e00f     bz      0xb62            	BZ	_00153_DS_
000b44   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_87
                                           ;	.line	421; meter_logger.c	fsk_tx_byte(sub_cmd);
000b46   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_87, W, B
000b48   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b4a   ec01     call    0x4c02, 0        	CALL	_fsk_tx_byte
000b4c   f026
000b4e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	422; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000b50   0e00     movlw   0                	MOVLW	0x00
000b52   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b54   0e02     movlw   0x2              	MOVLW	0x02
000b56   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b58   ec4b     call    0x4696, 0        	CALL	_sleep_ms
000b5a   f023
000b5c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000b5e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000b60   d7de     bra     0xb1e            	BRA	_00151_DS_
                                           _00153_DS_:
                                           ;	.line	424; meter_logger.c	fsk_tx_disable();
000b62   ecc8     call    0x4d90, 0        	CALL	_fsk_tx_disable
000b64   f026
000b66   d047     bra     0xbf6            	BRA	_00156_DS_
                                           _00155_DS_:
                                           ;	.line	428; meter_logger.c	DEBUG2_PIN = 1;
000b68   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000b6a   0000     nop                      	nop
000b6c   0000     nop                      	nop
                                           	
                                           ;	.line	433; meter_logger.c	DEBUG2_PIN = 0;
000b6e   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
000b70   0000     nop                      	nop
000b72   0000     nop                      	nop
                                           	
                                           ;	.line	438; meter_logger.c	DEBUG2_PIN = 1;
000b74   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000b76   0000     nop                      	nop
000b78   0000     nop                      	nop
                                           	
                                           ;	.line	443; meter_logger.c	DEBUG2_PIN = 0;
000b7a   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	445; meter_logger.c	sprintf(debug_buffer, "\n\rno reply from meter\n\r");
000b7c   0e00     movlw   0                	MOVLW	UPPER(___str_9)
000b7e   6e02     movwf   0x2, 0           	MOVWF	r0x02
000b80   0e2a     movlw   0x2a             	MOVLW	HIGH(___str_9)
000b82   6e01     movwf   0x1, 0           	MOVWF	r0x01
000b84   0eec     movlw   0xec             	MOVLW	LOW(___str_9)
000b86   6e00     movwf   0, 0             	MOVWF	r0x00
000b88   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000b8a   6e04     movwf   0x4, 0           	MOVWF	r0x04
000b8c   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000b8e   6e03     movwf   0x3, 0           	MOVWF	r0x03
000b90   0e80     movlw   0x80             	MOVLW	0x80
000b92   6e05     movwf   0x5, 0           	MOVWF	r0x05
000b94   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000b96   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b98   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000b9a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b9c   5000     movf    0, 0, 0          	MOVF	r0x00, W
000b9e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ba0   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000ba2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ba4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000ba6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ba8   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000baa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bac   ecad     call    0x415a, 0        	CALL	_sprintf
000bae   f020
000bb0   0e06     movlw   0x6              	MOVLW	0x06
000bb2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	446; meter_logger.c	usart_puts(debug_buffer);
000bb4   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000bb6   6e01     movwf   0x1, 0           	MOVWF	r0x01
000bb8   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000bba   6e00     movwf   0, 0             	MOVWF	r0x00
000bbc   0e80     movlw   0x80             	MOVLW	0x80
000bbe   6e02     movwf   0x2, 0           	MOVWF	r0x02
000bc0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000bc2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bc4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000bc6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bc8   5000     movf    0, 0, 0          	MOVF	r0x00, W
000bca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bcc   ec22     call    0x4844, 0        	CALL	_usart_puts
000bce   f024
000bd0   0e03     movlw   0x3              	MOVLW	0x03
000bd2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	448; meter_logger.c	fsk_tx_enable();
000bd4   ec88     call    0x4b10, 0        	CALL	_fsk_tx_enable
000bd6   f025
                                           ;	.line	449; meter_logger.c	fsk_tx_byte(0x0d);
000bd8   0e0d     movlw   0xd              	MOVLW	0x0d
000bda   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bdc   ec01     call    0x4c02, 0        	CALL	_fsk_tx_byte
000bde   f026
000be0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	450; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000be2   0e00     movlw   0                	MOVLW	0x00
000be4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000be6   0e02     movlw   0x2              	MOVLW	0x02
000be8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bea   ec4b     call    0x4696, 0        	CALL	_sleep_ms
000bec   f023
000bee   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000bf0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	451; meter_logger.c	fsk_tx_disable();
000bf2   ecc8     call    0x4d90, 0        	CALL	_fsk_tx_disable
000bf4   f026
                                           _00156_DS_:
                                           ;	.line	454; meter_logger.c	usart_puts("\n\rwaiting for new command\n\r");
000bf6   0e00     movlw   0                	MOVLW	UPPER(___str_4)
000bf8   6e02     movwf   0x2, 0           	MOVWF	r0x02
000bfa   0e2a     movlw   0x2a             	MOVLW	HIGH(___str_4)
000bfc   6e01     movwf   0x1, 0           	MOVWF	r0x01
000bfe   0e44     movlw   0x44             	MOVLW	LOW(___str_4)
000c00   6e00     movwf   0, 0             	MOVWF	r0x00
000c02   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000c04   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c06   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000c08   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c0a   5000     movf    0, 0, 0          	MOVF	r0x00, W
000c0c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c0e   ec22     call    0x4844, 0        	CALL	_usart_puts
000c10   f024
000c12   0e03     movlw   0x3              	MOVLW	0x03
000c14   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	456; meter_logger.c	fsk_rx_enable();
000c16   ec5e     call    0x48bc, 0        	CALL	_fsk_rx_enable
000c18   f024
                                           ;	.line	457; meter_logger.c	break;
000c1a   ef3c     goto    0x78             	GOTO	_00162_DS_
000c1c   f000
                                           _00157_DS_:
                                           ;	.line	459; meter_logger.c	fsk_rx_disable();
000c1e   ecf4     call    0x4de8, 0        	CALL	_fsk_rx_disable
000c20   f026
                                           ;	.line	460; meter_logger.c	battery_level();
000c22   ec41     call    0x3c82, 0        	CALL	_battery_level
000c24   f01e
                                           ;	.line	461; meter_logger.c	fsk_rx_enable();
000c26   ec5e     call    0x48bc, 0        	CALL	_fsk_rx_enable
000c28   f024
                                           ;	.line	463; meter_logger.c	}
000c2a   ef3c     goto    0x78             	GOTO	_00162_DS_
000c2c   f000
000c2e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger___debug2	code
                                           __debug2:
                                           ;	.line	4428; meter_logger.c	void _debug2() {
004380   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004382   ffe5
004384   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004386   ffd9
                                           ;	.line	4429; meter_logger.c	DEBUG2_PIN = 0x1;
004388   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
00438a   0000     nop                      	nop
00438c   0000     nop                      	nop
00438e   0000     nop                      	nop
004390   0000     nop                      	nop
004392   0000     nop                      	nop
004394   0000     nop                      	nop
004396   0000     nop                      	nop
004398   0000     nop                      	nop
00439a   0000     nop                      	nop
00439c   0000     nop                      	nop
00439e   0000     nop                      	nop
0043a0   0000     nop                      	nop
0043a2   0000     nop                      	nop
0043a4   0000     nop                      	nop
0043a6   0000     nop                      	nop
0043a8   0000     nop                      	nop
0043aa   0000     nop                      	nop
0043ac   0000     nop                      	nop
0043ae   0000     nop                      	nop
0043b0   0000     nop                      	nop
0043b2   0000     nop                      	nop
0043b4   0000     nop                      	nop
0043b6   0000     nop                      	nop
0043b8   0000     nop                      	nop
0043ba   0000     nop                      	nop
0043bc   0000     nop                      	nop
0043be   0000     nop                      	nop
0043c0   0000     nop                      	nop
0043c2   0000     nop                      	nop
0043c4   0000     nop                      	nop
0043c6   0000     nop                      	nop
0043c8   0000     nop                      	nop
0043ca   0000     nop                      	nop
0043cc   0000     nop                      	nop
0043ce   0000     nop                      	nop
0043d0   0000     nop                      	nop
0043d2   0000     nop                      	nop
0043d4   0000     nop                      	nop
0043d6   0000     nop                      	nop
0043d8   0000     nop                      	nop
0043da   0000     nop                      	nop
0043dc   0000     nop                      	nop
0043de   0000     nop                      	nop
0043e0   0000     nop                      	nop
0043e2   0000     nop                      	nop
                                           	
                                           ;	.line	4477; meter_logger.c	DEBUG2_PIN = 0x0;
0043e4   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
0043e6   0000     nop                      	nop
0043e8   0000     nop                      	nop
0043ea   0000     nop                      	nop
0043ec   0000     nop                      	nop
0043ee   0000     nop                      	nop
0043f0   0000     nop                      	nop
0043f2   0000     nop                      	nop
0043f4   0000     nop                      	nop
0043f6   0000     nop                      	nop
0043f8   0000     nop                      	nop
0043fa   0000     nop                      	nop
0043fc   0000     nop                      	nop
0043fe   0000     nop                      	nop
004400   0000     nop                      	nop
004402   0000     nop                      	nop
004404   0000     nop                      	nop
004406   0000     nop                      	nop
004408   0000     nop                      	nop
00440a   0000     nop                      	nop
00440c   0000     nop                      	nop
00440e   0000     nop                      	nop
004410   0000     nop                      	nop
004412   0000     nop                      	nop
004414   0000     nop                      	nop
004416   0000     nop                      	nop
004418   0000     nop                      	nop
00441a   0000     nop                      	nop
00441c   0000     nop                      	nop
00441e   0000     nop                      	nop
004420   0000     nop                      	nop
004422   0000     nop                      	nop
004424   0000     nop                      	nop
004426   0000     nop                      	nop
004428   0000     nop                      	nop
00442a   0000     nop                      	nop
00442c   0000     nop                      	nop
00442e   0000     nop                      	nop
004430   0000     nop                      	nop
004432   0000     nop                      	nop
004434   0000     nop                      	nop
004436   0000     nop                      	nop
004438   0000     nop                      	nop
00443a   0000     nop                      	nop
00443c   0000     nop                      	nop
00443e   0000     nop                      	nop
                                           	
004440   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004442   ffd9
004444   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger___debug	code
                                           __debug:
                                           ;	.line	4328; meter_logger.c	void _debug() {
004446   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004448   ffe5
00444a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00444c   ffd9
                                           ;	.line	4329; meter_logger.c	DEBUG_PIN = 0x1;
00444e   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
004450   0000     nop                      	nop
004452   0000     nop                      	nop
004454   0000     nop                      	nop
004456   0000     nop                      	nop
004458   0000     nop                      	nop
00445a   0000     nop                      	nop
00445c   0000     nop                      	nop
00445e   0000     nop                      	nop
004460   0000     nop                      	nop
004462   0000     nop                      	nop
004464   0000     nop                      	nop
004466   0000     nop                      	nop
004468   0000     nop                      	nop
00446a   0000     nop                      	nop
00446c   0000     nop                      	nop
00446e   0000     nop                      	nop
004470   0000     nop                      	nop
004472   0000     nop                      	nop
004474   0000     nop                      	nop
004476   0000     nop                      	nop
004478   0000     nop                      	nop
00447a   0000     nop                      	nop
00447c   0000     nop                      	nop
00447e   0000     nop                      	nop
004480   0000     nop                      	nop
004482   0000     nop                      	nop
004484   0000     nop                      	nop
004486   0000     nop                      	nop
004488   0000     nop                      	nop
00448a   0000     nop                      	nop
00448c   0000     nop                      	nop
00448e   0000     nop                      	nop
004490   0000     nop                      	nop
004492   0000     nop                      	nop
004494   0000     nop                      	nop
004496   0000     nop                      	nop
004498   0000     nop                      	nop
00449a   0000     nop                      	nop
00449c   0000     nop                      	nop
00449e   0000     nop                      	nop
0044a0   0000     nop                      	nop
0044a2   0000     nop                      	nop
0044a4   0000     nop                      	nop
0044a6   0000     nop                      	nop
0044a8   0000     nop                      	nop
                                           	
                                           ;	.line	4377; meter_logger.c	DEBUG_PIN = 0x0;
0044aa   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
0044ac   0000     nop                      	nop
0044ae   0000     nop                      	nop
0044b0   0000     nop                      	nop
0044b2   0000     nop                      	nop
0044b4   0000     nop                      	nop
0044b6   0000     nop                      	nop
0044b8   0000     nop                      	nop
0044ba   0000     nop                      	nop
0044bc   0000     nop                      	nop
0044be   0000     nop                      	nop
0044c0   0000     nop                      	nop
0044c2   0000     nop                      	nop
0044c4   0000     nop                      	nop
0044c6   0000     nop                      	nop
0044c8   0000     nop                      	nop
0044ca   0000     nop                      	nop
0044cc   0000     nop                      	nop
0044ce   0000     nop                      	nop
0044d0   0000     nop                      	nop
0044d2   0000     nop                      	nop
0044d4   0000     nop                      	nop
0044d6   0000     nop                      	nop
0044d8   0000     nop                      	nop
0044da   0000     nop                      	nop
0044dc   0000     nop                      	nop
0044de   0000     nop                      	nop
0044e0   0000     nop                      	nop
0044e2   0000     nop                      	nop
0044e4   0000     nop                      	nop
0044e6   0000     nop                      	nop
0044e8   0000     nop                      	nop
0044ea   0000     nop                      	nop
0044ec   0000     nop                      	nop
0044ee   0000     nop                      	nop
0044f0   0000     nop                      	nop
0044f2   0000     nop                      	nop
0044f4   0000     nop                      	nop
0044f6   0000     nop                      	nop
0044f8   0000     nop                      	nop
0044fa   0000     nop                      	nop
0044fc   0000     nop                      	nop
0044fe   0000     nop                      	nop
004500   0000     nop                      	nop
004502   0000     nop                      	nop
004504   0000     nop                      	nop
                                           	
004506   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004508   ffd9
00450a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__flash_led	code
                                           _flash_led:
                                           ;	.line	4323; meter_logger.c	void flash_led(unsigned char ms) {
004cd4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004cd6   ffe5
004cd8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004cda   ffd9
004cdc   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004cde   ffe5
004ce0   0e02     movlw   0x2              	MOVLW	0x02
004ce2   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004ce4   f000
                                           ;	.line	4324; meter_logger.c	led_flash.timer = ms;
004ce6   5000     movf    0, 0, 0          	MOVF	r0x00, W
004ce8   0105     movlb   0x5              	BANKSEL	(_led_flash + 1)
004cea   6f4d     movwf   0x4d, 0x1        	MOVWF	(_led_flash + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	4325; meter_logger.c	led_flash.state = LED_FLASH_RUN;
004cec   6b4c     clrf    0x4c, 0x1        	CLRF	_led_flash, B
004cee   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004cf0   f000
004cf2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004cf4   ffd9
004cf6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__battery_level	code
                                           _battery_level:
                                           ;	.line	4305; meter_logger.c	unsigned int battery_level() {
003c82   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003c84   ffe5
003c86   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003c88   ffd9
003c8a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003c8c   ffe5
003c8e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003c90   ffe5
003c92   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003c94   ffe5
003c96   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003c98   ffe5
003c9a   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003c9c   ffe5
003c9e   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003ca0   ffe5
003ca2   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003ca4   ffe5
003ca6   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
003ca8   ffe5
                                           ;	.line	4308; meter_logger.c	adc_open(ADC_CHN_4 , ADC_FOSC_64, ADC_CFG_5A, ADC_FRM_RJUST | ADC_INT_OFF | ADC_VCFG_VDD_VSS);
003caa   0e80     movlw   0x80             	MOVLW	0x80
003cac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003cae   0e0a     movlw   0xa              	MOVLW	0x0a
003cb0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003cb2   0e06     movlw   0x6              	MOVLW	0x06
003cb4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003cb6   0e04     movlw   0x4              	MOVLW	0x04
003cb8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003cba   ece4     call    0x47c8, 0        	CALL	_adc_open
003cbc   f023
003cbe   0e04     movlw   0x4              	MOVLW	0x04
003cc0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4310; meter_logger.c	adc_setchannel(ADC_CHN_4);
003cc2   0e04     movlw   0x4              	MOVLW	0x04
003cc4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003cc6   ec34     call    0x4a68, 0        	CALL	_adc_setchannel
003cc8   f025
003cca   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	4311; meter_logger.c	adc_conv();
003ccc   ec0a     call    0x14, 0          	CALL	_adc_conv
003cce   f000
                                           _01027_DS_:
                                           ;	.line	4312; meter_logger.c	while(adc_busy()) {
003cd0   ec2a     call    0x4e54, 0        	CALL	_adc_busy
003cd2   f027
003cd4   6e00     movwf   0, 0             	MOVWF	r0x00
003cd6   5000     movf    0, 0, 0          	MOVF	r0x00, W
003cd8   e1fb     bnz     0x3cd0           	BNZ	_01027_DS_
                                           ;	.line	4315; meter_logger.c	v_level = (unsigned long)1000 * (unsigned long)adc_read() * (unsigned long)833/(unsigned long)93600;
003cda   ec22     call    0x4e44, 0        	CALL	_adc_read
003cdc   f027
003cde   6e00     movwf   0, 0             	MOVWF	r0x00
003ce0   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003ce2   f001
003ce4   6ae8     clrf    0xe8, 0          	CLRF	WREG
003ce6   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
003ce8   0eff     movlw   0xff             	MOVLW	0xff
003cea   6e02     movwf   0x2, 0           	MOVWF	r0x02
003cec   6e03     movwf   0x3, 0           	MOVWF	r0x03
003cee   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003cf0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003cf2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003cf4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003cf6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003cf8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003cfa   5000     movf    0, 0, 0          	MOVF	r0x00, W
003cfc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003cfe   0e00     movlw   0                	MOVLW	0x00
003d00   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d02   0e0c     movlw   0xc              	MOVLW	0x0c
003d04   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d06   0eb5     movlw   0xb5             	MOVLW	0xb5
003d08   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d0a   0ee8     movlw   0xe8             	MOVLW	0xe8
003d0c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d0e   eccc     call    0x3398, 0        	CALL	__mullong
003d10   f019
003d12   6e00     movwf   0, 0             	MOVWF	r0x00
003d14   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003d16   f001
003d18   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
003d1a   f002
003d1c   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
003d1e   f003
003d20   0e08     movlw   0x8              	MOVLW	0x08
003d22   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003d24   0e00     movlw   0                	MOVLW	0x00
003d26   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d28   0e01     movlw   0x1              	MOVLW	0x01
003d2a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d2c   0e6d     movlw   0x6d             	MOVLW	0x6d
003d2e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d30   0ea0     movlw   0xa0             	MOVLW	0xa0
003d32   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d34   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003d36   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d38   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003d3a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d3c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003d3e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d40   5000     movf    0, 0, 0          	MOVF	r0x00, W
003d42   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d44   ec21     call    0x4042, 0        	CALL	__divulong
003d46   f020
003d48   6e00     movwf   0, 0             	MOVWF	r0x00
003d4a   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003d4c   f001
003d4e   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
003d50   f002
003d52   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
003d54   f003
003d56   0e08     movlw   0x8              	MOVLW	0x08
003d58   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4316; meter_logger.c	sprintf(debug_buffer, "Battery: %dmV\n\r", v_level);
003d5a   0e00     movlw   0                	MOVLW	UPPER(___str_13)
003d5c   6e04     movwf   0x4, 0           	MOVWF	r0x04
003d5e   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_13)
003d60   6e03     movwf   0x3, 0           	MOVWF	r0x03
003d62   0e7c     movlw   0x7c             	MOVLW	LOW(___str_13)
003d64   6e02     movwf   0x2, 0           	MOVWF	r0x02
003d66   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
003d68   6e06     movwf   0x6, 0           	MOVWF	r0x06
003d6a   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
003d6c   6e05     movwf   0x5, 0           	MOVWF	r0x05
003d6e   0e80     movlw   0x80             	MOVLW	0x80
003d70   6e07     movwf   0x7, 0           	MOVWF	r0x07
003d72   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003d74   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d76   5000     movf    0, 0, 0          	MOVF	r0x00, W
003d78   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d7a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003d7c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d7e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003d80   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d82   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003d84   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d86   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003d88   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d8a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003d8c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d8e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003d90   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d92   ecad     call    0x415a, 0        	CALL	_sprintf
003d94   f020
003d96   0e08     movlw   0x8              	MOVLW	0x08
003d98   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4317; meter_logger.c	usart_puts(debug_buffer);	
003d9a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
003d9c   6e03     movwf   0x3, 0           	MOVWF	r0x03
003d9e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
003da0   6e02     movwf   0x2, 0           	MOVWF	r0x02
003da2   0e80     movlw   0x80             	MOVLW	0x80
003da4   6e04     movwf   0x4, 0           	MOVWF	r0x04
003da6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003da8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003daa   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003dac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003dae   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003db0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003db2   ec22     call    0x4844, 0        	CALL	_usart_puts
003db4   f024
003db6   0e03     movlw   0x3              	MOVLW	0x03
003db8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4319; meter_logger.c	adc_close();
003dba   ec35     call    0x4e6a, 0        	CALL	_adc_close
003dbc   f027
                                           ;	.line	4320; meter_logger.c	return v_level;
003dbe   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003dc0   fff3
003dc2   5000     movf    0, 0, 0          	MOVF	r0x00, W
003dc4   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003dc6   f007
003dc8   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003dca   f006
003dcc   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003dce   f005
003dd0   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003dd2   f004
003dd4   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003dd6   f003
003dd8   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003dda   f002
003ddc   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003dde   f001
003de0   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003de2   f000
003de4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003de6   ffd9
003de8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_snoop	code
                                           _fifo_snoop:
                                           ;	.line	4282; meter_logger.c	unsigned char fifo_snoop(unsigned char *c, unsigned int pos) {
003964   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003966   ffe5
003968   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00396a   ffd9
00396c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00396e   ffe5
003970   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003972   ffe5
003974   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003976   ffe5
003978   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00397a   ffe5
00397c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00397e   ffe5
003980   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003982   ffe5
003984   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003986   ffe5
003988   0e02     movlw   0x2              	MOVLW	0x02
00398a   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00398c   f000
00398e   0e03     movlw   0x3              	MOVLW	0x03
003990   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003992   f001
003994   0e04     movlw   0x4              	MOVLW	0x04
003996   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
003998   f002
00399a   0e05     movlw   0x5              	MOVLW	0x05
00399c   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
00399e   f003
0039a0   0e06     movlw   0x6              	MOVLW	0x06
0039a2   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
0039a4   f004
                                           ;	.line	4283; meter_logger.c	if (fifo_in_use() > (pos)) {
0039a6   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
0039a8   f025
0039aa   6e05     movwf   0x5, 0           	MOVWF	r0x05
0039ac   cff3     movff   0xff3, 0x6       	MOVFF	PRODL, r0x06
0039ae   f006
0039b0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0039b2   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
0039b4   e102     bnz     0x39ba           	BNZ	_01020_DS_
0039b6   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0039b8   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _01020_DS_:
0039ba   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0039bc   d091     bra     0x3ae0           	BRA	_01010_DS_
0039be   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
                                           ;	.line	4284; meter_logger.c	switch (fifo_tail/QUEUE_SIZE) {
0039c0   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
0039c2   6e05     movwf   0x5, 0           	MOVWF	r0x05
0039c4   6a06     clrf    0x6, 0           	CLRF	r0x06
0039c6   0e00     movlw   0                	MOVLW	0x00
0039c8   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
0039ca   e102     bnz     0x39d0           	BNZ	_01021_DS_
0039cc   0e04     movlw   0x4              	MOVLW	0x04
0039ce   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
                                           _01021_DS_:
0039d0   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0039d2   d084     bra     0x3adc           	BRA	_01008_DS_
0039d4   6afa     clrf    0xfa, 0          	CLRF	PCLATH
0039d6   6afb     clrf    0xfb, 0          	CLRF	PCLATU
0039d8   3405     rlcf    0x5, 0, 0        	RLCF	r0x05, W
0039da   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0039dc   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
0039de   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0039e0   0bfc     andlw   0xfc             	ANDLW	0xfc
0039e2   0ff2     addlw   0xf2             	ADDLW	LOW(_01022_DS_)
0039e4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0039e6   0e39     movlw   0x39             	MOVLW	HIGH(_01022_DS_)
0039e8   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
0039ea   0e00     movlw   0                	MOVLW	UPPER(_01022_DS_)
0039ec   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0039ee   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0039f0   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01022_DS_:
0039f2   ef01     goto    0x3a02           	GOTO	_01004_DS_
0039f4   f01d
0039f6   ef1d     goto    0x3a3a           	GOTO	_01005_DS_
0039f8   f01d
0039fa   ef39     goto    0x3a72           	GOTO	_01006_DS_
0039fc   f01d
0039fe   ef55     goto    0x3aaa           	GOTO	_01007_DS_
003a00   f01d
                                           _01004_DS_:
                                           ;	.line	4286; meter_logger.c	*c = fifo_buffer_0[(fifo_tail + pos) % QUEUE_SIZE];
003a02   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003a04   0105     movlb   0x5              	BANKSEL	_fifo_tail
003a06   2544     addwf   0x44, 0, 0x1     	ADDWF	_fifo_tail, W, B
003a08   6e05     movwf   0x5, 0           	MOVWF	r0x05
003a0a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
003a0c   2145     addwfc  0x45, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
003a0e   6e06     movwf   0x6, 0           	MOVWF	r0x06
003a10   6a06     clrf    0x6, 0           	CLRF	r0x06
003a12   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
003a14   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
003a16   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
003a18   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
003a1a   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
003a1c   ffe9
003a1e   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
003a20   ffea
003a22   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
003a24   f005
003a26   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003a28   ffe5
003a2a   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003a2c   ffe9
003a2e   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003a30   fff3
003a32   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003a34   ece9     call    0x4dd2, 0        	CALL	__gptrput1
003a36   f026
                                           ;	.line	4287; meter_logger.c	break;
003a38   d051     bra     0x3adc           	BRA	_01008_DS_
                                           _01005_DS_:
                                           ;	.line	4289; meter_logger.c	*c = fifo_buffer_1[(fifo_tail + pos) % QUEUE_SIZE];
003a3a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003a3c   0105     movlb   0x5              	BANKSEL	_fifo_tail
003a3e   2544     addwf   0x44, 0, 0x1     	ADDWF	_fifo_tail, W, B
003a40   6e05     movwf   0x5, 0           	MOVWF	r0x05
003a42   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
003a44   2145     addwfc  0x45, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
003a46   6e06     movwf   0x6, 0           	MOVWF	r0x06
003a48   6a06     clrf    0x6, 0           	CLRF	r0x06
003a4a   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
003a4c   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
003a4e   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
003a50   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
003a52   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
003a54   ffe9
003a56   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
003a58   ffea
003a5a   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
003a5c   f005
003a5e   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003a60   ffe5
003a62   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003a64   ffe9
003a66   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003a68   fff3
003a6a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003a6c   ece9     call    0x4dd2, 0        	CALL	__gptrput1
003a6e   f026
                                           ;	.line	4290; meter_logger.c	break;
003a70   d035     bra     0x3adc           	BRA	_01008_DS_
                                           _01006_DS_:
                                           ;	.line	4292; meter_logger.c	*c = fifo_buffer_2[(fifo_tail + pos) % QUEUE_SIZE];
003a72   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003a74   0105     movlb   0x5              	BANKSEL	_fifo_tail
003a76   2544     addwf   0x44, 0, 0x1     	ADDWF	_fifo_tail, W, B
003a78   6e05     movwf   0x5, 0           	MOVWF	r0x05
003a7a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
003a7c   2145     addwfc  0x45, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
003a7e   6e06     movwf   0x6, 0           	MOVWF	r0x06
003a80   6a06     clrf    0x6, 0           	CLRF	r0x06
003a82   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
003a84   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
003a86   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
003a88   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
003a8a   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
003a8c   ffe9
003a8e   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
003a90   ffea
003a92   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
003a94   f005
003a96   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003a98   ffe5
003a9a   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003a9c   ffe9
003a9e   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003aa0   fff3
003aa2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003aa4   ece9     call    0x4dd2, 0        	CALL	__gptrput1
003aa6   f026
                                           ;	.line	4293; meter_logger.c	break;
003aa8   d019     bra     0x3adc           	BRA	_01008_DS_
                                           _01007_DS_:
003aaa   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4295; meter_logger.c	*c = fifo_buffer_3[(fifo_tail + pos) % QUEUE_SIZE];
003aac   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
003aae   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
                                           ; removed redundant BANKSEL
003ab0   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
003ab2   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
003ab4   6a04     clrf    0x4, 0           	CLRF	r0x04
003ab6   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
003ab8   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
003aba   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
003abc   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
003abe   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
003ac0   ffe9
003ac2   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
003ac4   ffea
003ac6   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
003ac8   f003
003aca   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003acc   ffe5
003ace   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003ad0   ffe9
003ad2   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003ad4   fff3
003ad6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003ad8   ece9     call    0x4dd2, 0        	CALL	__gptrput1
003ada   f026
                                           _01008_DS_:
                                           ;	.line	4298; meter_logger.c	return 1;
003adc   0e01     movlw   0x1              	MOVLW	0x01
003ade   d001     bra     0x3ae2           	BRA	_01012_DS_
                                           _01010_DS_:
                                           ;	.line	4301; meter_logger.c	return 0;
003ae0   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _01012_DS_:
003ae2   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003ae4   f006
003ae6   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003ae8   f005
003aea   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003aec   f004
003aee   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003af0   f003
003af2   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003af4   f002
003af6   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003af8   f001
003afa   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003afc   f000
003afe   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003b00   ffd9
003b02   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_get	code
                                           _fifo_get:
                                           ;	.line	4254; meter_logger.c	unsigned char fifo_get(unsigned char *c) {
003b04   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003b06   ffe5
003b08   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003b0a   ffd9
003b0c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003b0e   ffe5
003b10   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003b12   ffe5
003b14   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003b16   ffe5
003b18   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003b1a   ffe5
003b1c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003b1e   ffe5
003b20   0e02     movlw   0x2              	MOVLW	0x02
003b22   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003b24   f000
003b26   0e03     movlw   0x3              	MOVLW	0x03
003b28   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003b2a   f001
003b2c   0e04     movlw   0x4              	MOVLW	0x04
003b2e   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
003b30   f002
                                           ;	.line	4255; meter_logger.c	if (fifo_in_use() != 0) {
003b32   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
003b34   f025
003b36   6e03     movwf   0x3, 0           	MOVWF	r0x03
003b38   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
003b3a   f004
003b3c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003b3e   1004     iorwf   0x4, 0, 0        	IORWF	r0x04, W
003b40   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
003b42   d091     bra     0x3c66           	BRA	_00979_DS_
003b44   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
                                           ;	.line	4256; meter_logger.c	switch (fifo_tail/QUEUE_SIZE) {
003b46   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
003b48   6e03     movwf   0x3, 0           	MOVWF	r0x03
003b4a   6a04     clrf    0x4, 0           	CLRF	r0x04
003b4c   0e00     movlw   0                	MOVLW	0x00
003b4e   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
003b50   e102     bnz     0x3b56           	BNZ	_00992_DS_
003b52   0e04     movlw   0x4              	MOVLW	0x04
003b54   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _00992_DS_:
003b56   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003b58   d076     bra     0x3c46           	BRA	_00975_DS_
003b5a   6afa     clrf    0xfa, 0          	CLRF	PCLATH
003b5c   6afb     clrf    0xfb, 0          	CLRF	PCLATU
003b5e   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
003b60   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
003b62   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
003b64   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
003b66   0bfc     andlw   0xfc             	ANDLW	0xfc
003b68   0f78     addlw   0x78             	ADDLW	LOW(_00993_DS_)
003b6a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003b6c   0e3b     movlw   0x3b             	MOVLW	HIGH(_00993_DS_)
003b6e   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
003b70   0e00     movlw   0                	MOVLW	UPPER(_00993_DS_)
003b72   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
003b74   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
003b76   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00993_DS_:
003b78   efc4     goto    0x3b88           	GOTO	_00971_DS_
003b7a   f01d
003b7c   efdc     goto    0x3bb8           	GOTO	_00972_DS_
003b7e   f01d
003b80   eff4     goto    0x3be8           	GOTO	_00973_DS_
003b82   f01d
003b84   ef0c     goto    0x3c18           	GOTO	_00974_DS_
003b86   f01e
                                           _00971_DS_:
003b88   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4258; meter_logger.c	*c = fifo_buffer_0[fifo_tail % QUEUE_SIZE];
003b8a   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
003b8c   6e03     movwf   0x3, 0           	MOVWF	r0x03
003b8e   6a04     clrf    0x4, 0           	CLRF	r0x04
003b90   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
003b92   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
003b94   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
003b96   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
003b98   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
003b9a   ffe9
003b9c   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
003b9e   ffea
003ba0   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
003ba2   f003
003ba4   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003ba6   ffe5
003ba8   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003baa   ffe9
003bac   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003bae   fff3
003bb0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003bb2   ece9     call    0x4dd2, 0        	CALL	__gptrput1
003bb4   f026
                                           ;	.line	4259; meter_logger.c	break;
003bb6   d047     bra     0x3c46           	BRA	_00975_DS_
                                           _00972_DS_:
003bb8   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4261; meter_logger.c	*c = fifo_buffer_1[fifo_tail % QUEUE_SIZE];
003bba   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
003bbc   6e03     movwf   0x3, 0           	MOVWF	r0x03
003bbe   6a04     clrf    0x4, 0           	CLRF	r0x04
003bc0   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
003bc2   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
003bc4   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
003bc6   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
003bc8   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
003bca   ffe9
003bcc   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
003bce   ffea
003bd0   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
003bd2   f003
003bd4   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003bd6   ffe5
003bd8   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003bda   ffe9
003bdc   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003bde   fff3
003be0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003be2   ece9     call    0x4dd2, 0        	CALL	__gptrput1
003be4   f026
                                           ;	.line	4262; meter_logger.c	break;
003be6   d02f     bra     0x3c46           	BRA	_00975_DS_
                                           _00973_DS_:
003be8   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4264; meter_logger.c	*c = fifo_buffer_2[fifo_tail % QUEUE_SIZE];
003bea   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
003bec   6e03     movwf   0x3, 0           	MOVWF	r0x03
003bee   6a04     clrf    0x4, 0           	CLRF	r0x04
003bf0   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
003bf2   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
003bf4   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
003bf6   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
003bf8   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
003bfa   ffe9
003bfc   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
003bfe   ffea
003c00   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
003c02   f003
003c04   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003c06   ffe5
003c08   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003c0a   ffe9
003c0c   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003c0e   fff3
003c10   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003c12   ece9     call    0x4dd2, 0        	CALL	__gptrput1
003c14   f026
                                           ;	.line	4265; meter_logger.c	break;
003c16   d017     bra     0x3c46           	BRA	_00975_DS_
                                           _00974_DS_:
003c18   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4267; meter_logger.c	*c = fifo_buffer_3[fifo_tail % QUEUE_SIZE];
003c1a   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
003c1c   6e03     movwf   0x3, 0           	MOVWF	r0x03
003c1e   6a04     clrf    0x4, 0           	CLRF	r0x04
003c20   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
003c22   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
003c24   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
003c26   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
003c28   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
003c2a   ffe9
003c2c   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
003c2e   ffea
003c30   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
003c32   f003
003c34   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003c36   ffe5
003c38   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003c3a   ffe9
003c3c   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003c3e   fff3
003c40   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003c42   ece9     call    0x4dd2, 0        	CALL	__gptrput1
003c44   f026
                                           _00975_DS_:
003c46   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4270; meter_logger.c	fifo_tail++;
003c48   3f44     incfsz  0x44, 0x1, 0x1   	INCFSZ	_fifo_tail, F, B
003c4a   d001     bra     0x3c4e           	BRA	_11045_DS_
                                           ; removed redundant BANKSEL
003c4c   2b45     incf    0x45, 0x1, 0x1   	INCF	(_fifo_tail + 1), F, B
                                           _11045_DS_:
003c4e   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4272; meter_logger.c	if (fifo_tail == QUEUE_SIZE_COMBINED) {
003c50   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
003c52   e103     bnz     0x3c5a           	BNZ	_00998_DS_
                                           ; removed redundant BANKSEL
003c54   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
003c56   0a04     xorlw   0x4              	XORLW	0x04
003c58   e001     bz      0x3c5c           	BZ	_00999_DS_
                                           _00998_DS_:
003c5a   d003     bra     0x3c62           	BRA	_00977_DS_
                                           _00999_DS_:
003c5c   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4273; meter_logger.c	fifo_tail = 0;
003c5e   6b44     clrf    0x44, 0x1        	CLRF	_fifo_tail, B
                                           ; removed redundant BANKSEL
003c60   6b45     clrf    0x45, 0x1        	CLRF	(_fifo_tail + 1), B
                                           _00977_DS_:
                                           ;	.line	4275; meter_logger.c	return 1;
003c62   0e01     movlw   0x1              	MOVLW	0x01
003c64   d001     bra     0x3c68           	BRA	_00981_DS_
                                           _00979_DS_:
                                           ;	.line	4278; meter_logger.c	return 0;
003c66   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00981_DS_:
003c68   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003c6a   f004
003c6c   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003c6e   f003
003c70   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003c72   f002
003c74   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003c76   f001
003c78   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003c7a   f000
003c7c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003c7e   ffd9
003c80   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_put	code
                                           _fifo_put:
                                           ;	.line	4226; meter_logger.c	unsigned char fifo_put(unsigned char c) {
003f24   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003f26   ffe5
003f28   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003f2a   ffd9
003f2c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003f2e   ffe5
003f30   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003f32   ffe5
003f34   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003f36   ffe5
003f38   0e02     movlw   0x2              	MOVLW	0x02
003f3a   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003f3c   f000
                                           ;	.line	4227; meter_logger.c	if (fifo_in_use() != QUEUE_SIZE_COMBINED) {
003f3e   ec51     call    0x4aa2, 0        	CALL	_fifo_in_use
003f40   f025
003f42   6e01     movwf   0x1, 0           	MOVWF	r0x01
003f44   cff3     movff   0xff3, 0x2       	MOVFF	PRODL, r0x02
003f46   f002
003f48   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003f4a   e104     bnz     0x3f54           	BNZ	_00958_DS_
003f4c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003f4e   0a04     xorlw   0x4              	XORLW	0x04
003f50   e101     bnz     0x3f54           	BNZ	_00958_DS_
003f52   d06d     bra     0x402e           	BRA	_00944_DS_
                                           _00958_DS_:
003f54   0105     movlb   0x5              	BANKSEL	(_fifo_head + 1)
                                           ;	.line	4228; meter_logger.c	switch (fifo_head/QUEUE_SIZE) {
003f56   5143     movf    0x43, 0, 0x1     	MOVF	(_fifo_head + 1), W, B
003f58   6e01     movwf   0x1, 0           	MOVWF	r0x01
003f5a   6a02     clrf    0x2, 0           	CLRF	r0x02
003f5c   0e00     movlw   0                	MOVLW	0x00
003f5e   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
003f60   e102     bnz     0x3f66           	BNZ	_00959_DS_
003f62   0e04     movlw   0x4              	MOVLW	0x04
003f64   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
                                           _00959_DS_:
003f66   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003f68   d052     bra     0x400e           	BRA	_00940_DS_
003f6a   6afa     clrf    0xfa, 0          	CLRF	PCLATH
003f6c   6afb     clrf    0xfb, 0          	CLRF	PCLATU
003f6e   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
003f70   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
003f72   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
003f74   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
003f76   0bfc     andlw   0xfc             	ANDLW	0xfc
003f78   0f88     addlw   0x88             	ADDLW	LOW(_00960_DS_)
003f7a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003f7c   0e3f     movlw   0x3f             	MOVLW	HIGH(_00960_DS_)
003f7e   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
003f80   0e00     movlw   0                	MOVLW	UPPER(_00960_DS_)
003f82   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
003f84   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
003f86   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00960_DS_:
003f88   efcc     goto    0x3f98           	GOTO	_00936_DS_
003f8a   f01f
003f8c   efdb     goto    0x3fb6           	GOTO	_00937_DS_
003f8e   f01f
003f90   efea     goto    0x3fd4           	GOTO	_00938_DS_
003f92   f01f
003f94   eff9     goto    0x3ff2           	GOTO	_00939_DS_
003f96   f01f
                                           _00936_DS_:
003f98   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4230; meter_logger.c	fifo_buffer_0[fifo_head % QUEUE_SIZE] = c;
003f9a   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
003f9c   6e01     movwf   0x1, 0           	MOVWF	r0x01
003f9e   6a02     clrf    0x2, 0           	CLRF	r0x02
003fa0   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
003fa2   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
003fa4   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
003fa6   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003fa8   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
003faa   ffe9
003fac   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
003fae   ffea
003fb0   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
003fb2   ffef
                                           ;	.line	4231; meter_logger.c	break;
003fb4   d02c     bra     0x400e           	BRA	_00940_DS_
                                           _00937_DS_:
003fb6   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4233; meter_logger.c	fifo_buffer_1[fifo_head % QUEUE_SIZE] = c;
003fb8   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
003fba   6e01     movwf   0x1, 0           	MOVWF	r0x01
003fbc   6a02     clrf    0x2, 0           	CLRF	r0x02
003fbe   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
003fc0   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
003fc2   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
003fc4   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003fc6   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
003fc8   ffe9
003fca   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
003fcc   ffea
003fce   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
003fd0   ffef
                                           ;	.line	4234; meter_logger.c	break;
003fd2   d01d     bra     0x400e           	BRA	_00940_DS_
                                           _00938_DS_:
003fd4   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4236; meter_logger.c	fifo_buffer_2[fifo_head % QUEUE_SIZE] = c;
003fd6   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
003fd8   6e01     movwf   0x1, 0           	MOVWF	r0x01
003fda   6a02     clrf    0x2, 0           	CLRF	r0x02
003fdc   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
003fde   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
003fe0   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
003fe2   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003fe4   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
003fe6   ffe9
003fe8   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
003fea   ffea
003fec   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
003fee   ffef
                                           ;	.line	4237; meter_logger.c	break;
003ff0   d00e     bra     0x400e           	BRA	_00940_DS_
                                           _00939_DS_:
003ff2   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4239; meter_logger.c	fifo_buffer_3[fifo_head % QUEUE_SIZE] = c;
003ff4   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
003ff6   6e01     movwf   0x1, 0           	MOVWF	r0x01
003ff8   6a02     clrf    0x2, 0           	CLRF	r0x02
003ffa   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
003ffc   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
003ffe   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
004000   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
004002   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
004004   ffe9
004006   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
004008   ffea
00400a   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
00400c   ffef
                                           _00940_DS_:
00400e   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4242; meter_logger.c	fifo_head++;
004010   3f42     incfsz  0x42, 0x1, 0x1   	INCFSZ	_fifo_head, F, B
004012   d001     bra     0x4016           	BRA	_21046_DS_
                                           ; removed redundant BANKSEL
004014   2b43     incf    0x43, 0x1, 0x1   	INCF	(_fifo_head + 1), F, B
                                           _21046_DS_:
004016   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4244; meter_logger.c	if (fifo_head == QUEUE_SIZE_COMBINED) {
004018   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
00401a   e103     bnz     0x4022           	BNZ	_00965_DS_
                                           ; removed redundant BANKSEL
00401c   5143     movf    0x43, 0, 0x1     	MOVF	(_fifo_head + 1), W, B
00401e   0a04     xorlw   0x4              	XORLW	0x04
004020   e001     bz      0x4024           	BZ	_00966_DS_
                                           _00965_DS_:
004022   d003     bra     0x402a           	BRA	_00942_DS_
                                           _00966_DS_:
004024   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4245; meter_logger.c	fifo_head = 0;
004026   6b42     clrf    0x42, 0x1        	CLRF	_fifo_head, B
                                           ; removed redundant BANKSEL
004028   6b43     clrf    0x43, 0x1        	CLRF	(_fifo_head + 1), B
                                           _00942_DS_:
                                           ;	.line	4247; meter_logger.c	return 1;
00402a   0e01     movlw   0x1              	MOVLW	0x01
00402c   d001     bra     0x4030           	BRA	_00946_DS_
                                           _00944_DS_:
                                           ;	.line	4250; meter_logger.c	return 0;
00402e   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00946_DS_:
004030   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004032   f002
004034   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004036   f001
004038   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00403a   f000
00403c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00403e   ffd9
004040   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_in_use	code
                                           _fifo_in_use:
                                           ;	.line	4222; meter_logger.c	unsigned int fifo_in_use() {
004aa2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004aa4   ffe5
004aa6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004aa8   ffd9
004aaa   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004aac   ffe5
004aae   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004ab0   ffe5
004ab2   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4223; meter_logger.c	return fifo_head - fifo_tail;
004ab4   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
004ab6   0105     movlb   0x5              	BANKSEL	_fifo_head
004ab8   5d42     subwf   0x42, 0, 0x1     	SUBWF	_fifo_head, W, B
004aba   6e00     movwf   0, 0             	MOVWF	r0x00
004abc   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
004abe   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
004ac0   0105     movlb   0x5              	BANKSEL	(_fifo_head + 1)
004ac2   5943     subwfb  0x43, 0, 0x1     	SUBWFB	(_fifo_head + 1), W, B
004ac4   6e01     movwf   0x1, 0           	MOVWF	r0x01
004ac6   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
004ac8   fff3
004aca   5000     movf    0, 0, 0          	MOVF	r0x00, W
004acc   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004ace   f001
004ad0   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004ad2   f000
004ad4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004ad6   ffd9
004ad8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_byte	code
                                           _fsk_tx_byte:
                                           ;	.line	4214; meter_logger.c	void fsk_tx_byte(unsigned char c) {
004c02   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004c04   ffe5
004c06   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004c08   ffd9
004c0a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004c0c   ffe5
004c0e   0e02     movlw   0x2              	MOVLW	0x02
004c10   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004c12   f000
                                           ;	.line	4215; meter_logger.c	fsk_proto.data = c;
004c14   5000     movf    0, 0, 0          	MOVF	r0x00, W
004c16   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
004c18   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
                                           ;	.line	4216; meter_logger.c	fsk_proto.data_len = 8;
004c1a   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
004c1c   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
                                           _00923_DS_:
004c1e   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	4217; meter_logger.c	while (fsk_proto.data_len) {
004c20   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
004c22   e1fd     bnz     0x4c1e           	BNZ	_00923_DS_
004c24   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004c26   f000
004c28   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004c2a   ffd9
004c2c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__send_fsk_low	code
                                           _send_fsk_low:
                                           ;	.line	2761; meter_logger.c	void send_fsk_low(void) {
0017f0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0017f2   ffe5
0017f4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0017f6   ffd9
                                           ;	.line	2762; meter_logger.c	PWM_PIN = 1;
0017f8   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
0017fa   0000     nop                      	nop
0017fc   0000     nop                      	nop
0017fe   0000     nop                      	nop
001800   0000     nop                      	nop
001802   0000     nop                      	nop
001804   0000     nop                      	nop
001806   0000     nop                      	nop
001808   0000     nop                      	nop
00180a   0000     nop                      	nop
00180c   0000     nop                      	nop
00180e   0000     nop                      	nop
001810   0000     nop                      	nop
001812   0000     nop                      	nop
001814   0000     nop                      	nop
001816   0000     nop                      	nop
001818   0000     nop                      	nop
00181a   0000     nop                      	nop
00181c   0000     nop                      	nop
00181e   0000     nop                      	nop
001820   0000     nop                      	nop
001822   0000     nop                      	nop
001824   0000     nop                      	nop
001826   0000     nop                      	nop
001828   0000     nop                      	nop
00182a   0000     nop                      	nop
00182c   0000     nop                      	nop
00182e   0000     nop                      	nop
001830   0000     nop                      	nop
001832   0000     nop                      	nop
001834   0000     nop                      	nop
001836   0000     nop                      	nop
001838   0000     nop                      	nop
00183a   0000     nop                      	nop
00183c   0000     nop                      	nop
00183e   0000     nop                      	nop
001840   0000     nop                      	nop
001842   0000     nop                      	nop
001844   0000     nop                      	nop
001846   0000     nop                      	nop
001848   0000     nop                      	nop
00184a   0000     nop                      	nop
00184c   0000     nop                      	nop
00184e   0000     nop                      	nop
001850   0000     nop                      	nop
001852   0000     nop                      	nop
001854   0000     nop                      	nop
001856   0000     nop                      	nop
001858   0000     nop                      	nop
00185a   0000     nop                      	nop
00185c   0000     nop                      	nop
00185e   0000     nop                      	nop
001860   0000     nop                      	nop
001862   0000     nop                      	nop
001864   0000     nop                      	nop
001866   0000     nop                      	nop
001868   0000     nop                      	nop
00186a   0000     nop                      	nop
00186c   0000     nop                      	nop
00186e   0000     nop                      	nop
001870   0000     nop                      	nop
001872   0000     nop                      	nop
001874   0000     nop                      	nop
001876   0000     nop                      	nop
001878   0000     nop                      	nop
00187a   0000     nop                      	nop
00187c   0000     nop                      	nop
00187e   0000     nop                      	nop
001880   0000     nop                      	nop
001882   0000     nop                      	nop
001884   0000     nop                      	nop
001886   0000     nop                      	nop
001888   0000     nop                      	nop
00188a   0000     nop                      	nop
00188c   0000     nop                      	nop
00188e   0000     nop                      	nop
001890   0000     nop                      	nop
001892   0000     nop                      	nop
001894   0000     nop                      	nop
001896   0000     nop                      	nop
001898   0000     nop                      	nop
00189a   0000     nop                      	nop
00189c   0000     nop                      	nop
00189e   0000     nop                      	nop
0018a0   0000     nop                      	nop
0018a2   0000     nop                      	nop
0018a4   0000     nop                      	nop
0018a6   0000     nop                      	nop
0018a8   0000     nop                      	nop
0018aa   0000     nop                      	nop
0018ac   0000     nop                      	nop
0018ae   0000     nop                      	nop
0018b0   0000     nop                      	nop
0018b2   0000     nop                      	nop
0018b4   0000     nop                      	nop
0018b6   0000     nop                      	nop
0018b8   0000     nop                      	nop
0018ba   0000     nop                      	nop
0018bc   0000     nop                      	nop
0018be   0000     nop                      	nop
0018c0   0000     nop                      	nop
0018c2   0000     nop                      	nop
0018c4   0000     nop                      	nop
0018c6   0000     nop                      	nop
0018c8   0000     nop                      	nop
0018ca   0000     nop                      	nop
0018cc   0000     nop                      	nop
0018ce   0000     nop                      	nop
0018d0   0000     nop                      	nop
0018d2   0000     nop                      	nop
0018d4   0000     nop                      	nop
0018d6   0000     nop                      	nop
0018d8   0000     nop                      	nop
0018da   0000     nop                      	nop
0018dc   0000     nop                      	nop
0018de   0000     nop                      	nop
0018e0   0000     nop                      	nop
0018e2   0000     nop                      	nop
0018e4   0000     nop                      	nop
0018e6   0000     nop                      	nop
0018e8   0000     nop                      	nop
0018ea   0000     nop                      	nop
0018ec   0000     nop                      	nop
0018ee   0000     nop                      	nop
0018f0   0000     nop                      	nop
0018f2   0000     nop                      	nop
0018f4   0000     nop                      	nop
0018f6   0000     nop                      	nop
0018f8   0000     nop                      	nop
0018fa   0000     nop                      	nop
0018fc   0000     nop                      	nop
0018fe   0000     nop                      	nop
001900   0000     nop                      	nop
001902   0000     nop                      	nop
001904   0000     nop                      	nop
001906   0000     nop                      	nop
001908   0000     nop                      	nop
00190a   0000     nop                      	nop
00190c   0000     nop                      	nop
00190e   0000     nop                      	nop
001910   0000     nop                      	nop
001912   0000     nop                      	nop
001914   0000     nop                      	nop
001916   0000     nop                      	nop
001918   0000     nop                      	nop
00191a   0000     nop                      	nop
00191c   0000     nop                      	nop
00191e   0000     nop                      	nop
001920   0000     nop                      	nop
001922   0000     nop                      	nop
001924   0000     nop                      	nop
001926   0000     nop                      	nop
001928   0000     nop                      	nop
00192a   0000     nop                      	nop
00192c   0000     nop                      	nop
00192e   0000     nop                      	nop
001930   0000     nop                      	nop
001932   0000     nop                      	nop
001934   0000     nop                      	nop
001936   0000     nop                      	nop
001938   0000     nop                      	nop
00193a   0000     nop                      	nop
00193c   0000     nop                      	nop
00193e   0000     nop                      	nop
001940   0000     nop                      	nop
001942   0000     nop                      	nop
001944   0000     nop                      	nop
001946   0000     nop                      	nop
001948   0000     nop                      	nop
00194a   0000     nop                      	nop
00194c   0000     nop                      	nop
00194e   0000     nop                      	nop
001950   0000     nop                      	nop
001952   0000     nop                      	nop
001954   0000     nop                      	nop
001956   0000     nop                      	nop
001958   0000     nop                      	nop
00195a   0000     nop                      	nop
00195c   0000     nop                      	nop
00195e   0000     nop                      	nop
001960   0000     nop                      	nop
001962   0000     nop                      	nop
001964   0000     nop                      	nop
001966   0000     nop                      	nop
001968   0000     nop                      	nop
00196a   0000     nop                      	nop
00196c   0000     nop                      	nop
00196e   0000     nop                      	nop
001970   0000     nop                      	nop
001972   0000     nop                      	nop
001974   0000     nop                      	nop
001976   0000     nop                      	nop
001978   0000     nop                      	nop
00197a   0000     nop                      	nop
00197c   0000     nop                      	nop
00197e   0000     nop                      	nop
001980   0000     nop                      	nop
001982   0000     nop                      	nop
001984   0000     nop                      	nop
001986   0000     nop                      	nop
001988   0000     nop                      	nop
00198a   0000     nop                      	nop
00198c   0000     nop                      	nop
00198e   0000     nop                      	nop
001990   0000     nop                      	nop
                                           	
                                           ;	.line	2969; meter_logger.c	PWM_PIN = 0;
001992   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001994   0000     nop                      	nop
001996   0000     nop                      	nop
001998   0000     nop                      	nop
00199a   0000     nop                      	nop
00199c   0000     nop                      	nop
00199e   0000     nop                      	nop
0019a0   0000     nop                      	nop
0019a2   0000     nop                      	nop
0019a4   0000     nop                      	nop
0019a6   0000     nop                      	nop
0019a8   0000     nop                      	nop
0019aa   0000     nop                      	nop
0019ac   0000     nop                      	nop
0019ae   0000     nop                      	nop
0019b0   0000     nop                      	nop
0019b2   0000     nop                      	nop
0019b4   0000     nop                      	nop
0019b6   0000     nop                      	nop
0019b8   0000     nop                      	nop
0019ba   0000     nop                      	nop
0019bc   0000     nop                      	nop
0019be   0000     nop                      	nop
0019c0   0000     nop                      	nop
0019c2   0000     nop                      	nop
0019c4   0000     nop                      	nop
0019c6   0000     nop                      	nop
0019c8   0000     nop                      	nop
0019ca   0000     nop                      	nop
0019cc   0000     nop                      	nop
0019ce   0000     nop                      	nop
0019d0   0000     nop                      	nop
0019d2   0000     nop                      	nop
0019d4   0000     nop                      	nop
0019d6   0000     nop                      	nop
0019d8   0000     nop                      	nop
0019da   0000     nop                      	nop
0019dc   0000     nop                      	nop
0019de   0000     nop                      	nop
0019e0   0000     nop                      	nop
0019e2   0000     nop                      	nop
0019e4   0000     nop                      	nop
0019e6   0000     nop                      	nop
0019e8   0000     nop                      	nop
0019ea   0000     nop                      	nop
0019ec   0000     nop                      	nop
0019ee   0000     nop                      	nop
0019f0   0000     nop                      	nop
0019f2   0000     nop                      	nop
0019f4   0000     nop                      	nop
0019f6   0000     nop                      	nop
0019f8   0000     nop                      	nop
0019fa   0000     nop                      	nop
0019fc   0000     nop                      	nop
0019fe   0000     nop                      	nop
001a00   0000     nop                      	nop
001a02   0000     nop                      	nop
001a04   0000     nop                      	nop
001a06   0000     nop                      	nop
001a08   0000     nop                      	nop
001a0a   0000     nop                      	nop
001a0c   0000     nop                      	nop
001a0e   0000     nop                      	nop
001a10   0000     nop                      	nop
001a12   0000     nop                      	nop
001a14   0000     nop                      	nop
001a16   0000     nop                      	nop
001a18   0000     nop                      	nop
001a1a   0000     nop                      	nop
001a1c   0000     nop                      	nop
001a1e   0000     nop                      	nop
001a20   0000     nop                      	nop
001a22   0000     nop                      	nop
001a24   0000     nop                      	nop
001a26   0000     nop                      	nop
001a28   0000     nop                      	nop
001a2a   0000     nop                      	nop
001a2c   0000     nop                      	nop
001a2e   0000     nop                      	nop
001a30   0000     nop                      	nop
001a32   0000     nop                      	nop
001a34   0000     nop                      	nop
001a36   0000     nop                      	nop
001a38   0000     nop                      	nop
001a3a   0000     nop                      	nop
001a3c   0000     nop                      	nop
001a3e   0000     nop                      	nop
001a40   0000     nop                      	nop
001a42   0000     nop                      	nop
001a44   0000     nop                      	nop
001a46   0000     nop                      	nop
001a48   0000     nop                      	nop
001a4a   0000     nop                      	nop
001a4c   0000     nop                      	nop
001a4e   0000     nop                      	nop
001a50   0000     nop                      	nop
001a52   0000     nop                      	nop
001a54   0000     nop                      	nop
001a56   0000     nop                      	nop
001a58   0000     nop                      	nop
001a5a   0000     nop                      	nop
001a5c   0000     nop                      	nop
001a5e   0000     nop                      	nop
001a60   0000     nop                      	nop
001a62   0000     nop                      	nop
001a64   0000     nop                      	nop
001a66   0000     nop                      	nop
001a68   0000     nop                      	nop
001a6a   0000     nop                      	nop
001a6c   0000     nop                      	nop
001a6e   0000     nop                      	nop
001a70   0000     nop                      	nop
001a72   0000     nop                      	nop
001a74   0000     nop                      	nop
001a76   0000     nop                      	nop
001a78   0000     nop                      	nop
001a7a   0000     nop                      	nop
001a7c   0000     nop                      	nop
001a7e   0000     nop                      	nop
001a80   0000     nop                      	nop
001a82   0000     nop                      	nop
001a84   0000     nop                      	nop
001a86   0000     nop                      	nop
001a88   0000     nop                      	nop
001a8a   0000     nop                      	nop
001a8c   0000     nop                      	nop
001a8e   0000     nop                      	nop
001a90   0000     nop                      	nop
001a92   0000     nop                      	nop
001a94   0000     nop                      	nop
001a96   0000     nop                      	nop
001a98   0000     nop                      	nop
001a9a   0000     nop                      	nop
001a9c   0000     nop                      	nop
001a9e   0000     nop                      	nop
001aa0   0000     nop                      	nop
001aa2   0000     nop                      	nop
001aa4   0000     nop                      	nop
001aa6   0000     nop                      	nop
001aa8   0000     nop                      	nop
001aaa   0000     nop                      	nop
001aac   0000     nop                      	nop
001aae   0000     nop                      	nop
001ab0   0000     nop                      	nop
001ab2   0000     nop                      	nop
001ab4   0000     nop                      	nop
001ab6   0000     nop                      	nop
001ab8   0000     nop                      	nop
001aba   0000     nop                      	nop
001abc   0000     nop                      	nop
001abe   0000     nop                      	nop
001ac0   0000     nop                      	nop
001ac2   0000     nop                      	nop
001ac4   0000     nop                      	nop
001ac6   0000     nop                      	nop
001ac8   0000     nop                      	nop
001aca   0000     nop                      	nop
001acc   0000     nop                      	nop
001ace   0000     nop                      	nop
001ad0   0000     nop                      	nop
001ad2   0000     nop                      	nop
001ad4   0000     nop                      	nop
001ad6   0000     nop                      	nop
001ad8   0000     nop                      	nop
001ada   0000     nop                      	nop
001adc   0000     nop                      	nop
001ade   0000     nop                      	nop
001ae0   0000     nop                      	nop
001ae2   0000     nop                      	nop
001ae4   0000     nop                      	nop
001ae6   0000     nop                      	nop
001ae8   0000     nop                      	nop
001aea   0000     nop                      	nop
001aec   0000     nop                      	nop
001aee   0000     nop                      	nop
001af0   0000     nop                      	nop
001af2   0000     nop                      	nop
001af4   0000     nop                      	nop
001af6   0000     nop                      	nop
001af8   0000     nop                      	nop
001afa   0000     nop                      	nop
001afc   0000     nop                      	nop
001afe   0000     nop                      	nop
001b00   0000     nop                      	nop
001b02   0000     nop                      	nop
001b04   0000     nop                      	nop
001b06   0000     nop                      	nop
001b08   0000     nop                      	nop
001b0a   0000     nop                      	nop
001b0c   0000     nop                      	nop
001b0e   0000     nop                      	nop
001b10   0000     nop                      	nop
001b12   0000     nop                      	nop
001b14   0000     nop                      	nop
001b16   0000     nop                      	nop
001b18   0000     nop                      	nop
001b1a   0000     nop                      	nop
001b1c   0000     nop                      	nop
001b1e   0000     nop                      	nop
001b20   0000     nop                      	nop
001b22   0000     nop                      	nop
001b24   0000     nop                      	nop
001b26   0000     nop                      	nop
001b28   0000     nop                      	nop
001b2a   0000     nop                      	nop
                                           	
                                           ;	.line	3176; meter_logger.c	PWM_PIN = 1;
001b2c   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001b2e   0000     nop                      	nop
001b30   0000     nop                      	nop
001b32   0000     nop                      	nop
001b34   0000     nop                      	nop
001b36   0000     nop                      	nop
001b38   0000     nop                      	nop
001b3a   0000     nop                      	nop
001b3c   0000     nop                      	nop
001b3e   0000     nop                      	nop
001b40   0000     nop                      	nop
001b42   0000     nop                      	nop
001b44   0000     nop                      	nop
001b46   0000     nop                      	nop
001b48   0000     nop                      	nop
001b4a   0000     nop                      	nop
001b4c   0000     nop                      	nop
001b4e   0000     nop                      	nop
001b50   0000     nop                      	nop
001b52   0000     nop                      	nop
001b54   0000     nop                      	nop
001b56   0000     nop                      	nop
001b58   0000     nop                      	nop
001b5a   0000     nop                      	nop
001b5c   0000     nop                      	nop
001b5e   0000     nop                      	nop
001b60   0000     nop                      	nop
001b62   0000     nop                      	nop
001b64   0000     nop                      	nop
001b66   0000     nop                      	nop
001b68   0000     nop                      	nop
001b6a   0000     nop                      	nop
001b6c   0000     nop                      	nop
001b6e   0000     nop                      	nop
001b70   0000     nop                      	nop
001b72   0000     nop                      	nop
001b74   0000     nop                      	nop
001b76   0000     nop                      	nop
001b78   0000     nop                      	nop
001b7a   0000     nop                      	nop
001b7c   0000     nop                      	nop
001b7e   0000     nop                      	nop
001b80   0000     nop                      	nop
001b82   0000     nop                      	nop
001b84   0000     nop                      	nop
001b86   0000     nop                      	nop
001b88   0000     nop                      	nop
001b8a   0000     nop                      	nop
001b8c   0000     nop                      	nop
001b8e   0000     nop                      	nop
001b90   0000     nop                      	nop
001b92   0000     nop                      	nop
001b94   0000     nop                      	nop
001b96   0000     nop                      	nop
001b98   0000     nop                      	nop
001b9a   0000     nop                      	nop
001b9c   0000     nop                      	nop
001b9e   0000     nop                      	nop
001ba0   0000     nop                      	nop
001ba2   0000     nop                      	nop
001ba4   0000     nop                      	nop
001ba6   0000     nop                      	nop
001ba8   0000     nop                      	nop
001baa   0000     nop                      	nop
001bac   0000     nop                      	nop
001bae   0000     nop                      	nop
001bb0   0000     nop                      	nop
001bb2   0000     nop                      	nop
001bb4   0000     nop                      	nop
001bb6   0000     nop                      	nop
001bb8   0000     nop                      	nop
001bba   0000     nop                      	nop
001bbc   0000     nop                      	nop
001bbe   0000     nop                      	nop
001bc0   0000     nop                      	nop
001bc2   0000     nop                      	nop
001bc4   0000     nop                      	nop
001bc6   0000     nop                      	nop
001bc8   0000     nop                      	nop
001bca   0000     nop                      	nop
001bcc   0000     nop                      	nop
001bce   0000     nop                      	nop
001bd0   0000     nop                      	nop
001bd2   0000     nop                      	nop
001bd4   0000     nop                      	nop
001bd6   0000     nop                      	nop
001bd8   0000     nop                      	nop
001bda   0000     nop                      	nop
001bdc   0000     nop                      	nop
001bde   0000     nop                      	nop
001be0   0000     nop                      	nop
001be2   0000     nop                      	nop
001be4   0000     nop                      	nop
001be6   0000     nop                      	nop
001be8   0000     nop                      	nop
001bea   0000     nop                      	nop
001bec   0000     nop                      	nop
001bee   0000     nop                      	nop
001bf0   0000     nop                      	nop
001bf2   0000     nop                      	nop
001bf4   0000     nop                      	nop
001bf6   0000     nop                      	nop
001bf8   0000     nop                      	nop
001bfa   0000     nop                      	nop
001bfc   0000     nop                      	nop
001bfe   0000     nop                      	nop
001c00   0000     nop                      	nop
001c02   0000     nop                      	nop
001c04   0000     nop                      	nop
001c06   0000     nop                      	nop
001c08   0000     nop                      	nop
001c0a   0000     nop                      	nop
001c0c   0000     nop                      	nop
001c0e   0000     nop                      	nop
001c10   0000     nop                      	nop
001c12   0000     nop                      	nop
001c14   0000     nop                      	nop
001c16   0000     nop                      	nop
001c18   0000     nop                      	nop
001c1a   0000     nop                      	nop
001c1c   0000     nop                      	nop
001c1e   0000     nop                      	nop
001c20   0000     nop                      	nop
001c22   0000     nop                      	nop
001c24   0000     nop                      	nop
001c26   0000     nop                      	nop
001c28   0000     nop                      	nop
001c2a   0000     nop                      	nop
001c2c   0000     nop                      	nop
001c2e   0000     nop                      	nop
001c30   0000     nop                      	nop
001c32   0000     nop                      	nop
001c34   0000     nop                      	nop
001c36   0000     nop                      	nop
001c38   0000     nop                      	nop
001c3a   0000     nop                      	nop
001c3c   0000     nop                      	nop
001c3e   0000     nop                      	nop
001c40   0000     nop                      	nop
001c42   0000     nop                      	nop
001c44   0000     nop                      	nop
001c46   0000     nop                      	nop
001c48   0000     nop                      	nop
001c4a   0000     nop                      	nop
001c4c   0000     nop                      	nop
001c4e   0000     nop                      	nop
001c50   0000     nop                      	nop
001c52   0000     nop                      	nop
001c54   0000     nop                      	nop
001c56   0000     nop                      	nop
001c58   0000     nop                      	nop
001c5a   0000     nop                      	nop
001c5c   0000     nop                      	nop
001c5e   0000     nop                      	nop
001c60   0000     nop                      	nop
001c62   0000     nop                      	nop
001c64   0000     nop                      	nop
001c66   0000     nop                      	nop
001c68   0000     nop                      	nop
001c6a   0000     nop                      	nop
001c6c   0000     nop                      	nop
001c6e   0000     nop                      	nop
001c70   0000     nop                      	nop
001c72   0000     nop                      	nop
001c74   0000     nop                      	nop
001c76   0000     nop                      	nop
001c78   0000     nop                      	nop
001c7a   0000     nop                      	nop
001c7c   0000     nop                      	nop
001c7e   0000     nop                      	nop
001c80   0000     nop                      	nop
001c82   0000     nop                      	nop
001c84   0000     nop                      	nop
001c86   0000     nop                      	nop
001c88   0000     nop                      	nop
001c8a   0000     nop                      	nop
001c8c   0000     nop                      	nop
001c8e   0000     nop                      	nop
001c90   0000     nop                      	nop
001c92   0000     nop                      	nop
001c94   0000     nop                      	nop
001c96   0000     nop                      	nop
001c98   0000     nop                      	nop
001c9a   0000     nop                      	nop
001c9c   0000     nop                      	nop
001c9e   0000     nop                      	nop
001ca0   0000     nop                      	nop
001ca2   0000     nop                      	nop
001ca4   0000     nop                      	nop
001ca6   0000     nop                      	nop
001ca8   0000     nop                      	nop
001caa   0000     nop                      	nop
001cac   0000     nop                      	nop
001cae   0000     nop                      	nop
001cb0   0000     nop                      	nop
001cb2   0000     nop                      	nop
001cb4   0000     nop                      	nop
001cb6   0000     nop                      	nop
001cb8   0000     nop                      	nop
001cba   0000     nop                      	nop
001cbc   0000     nop                      	nop
001cbe   0000     nop                      	nop
001cc0   0000     nop                      	nop
001cc2   0000     nop                      	nop
001cc4   0000     nop                      	nop
                                           	
                                           ;	.line	3383; meter_logger.c	PWM_PIN = 0;
001cc6   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001cc8   0000     nop                      	nop
001cca   0000     nop                      	nop
001ccc   0000     nop                      	nop
001cce   0000     nop                      	nop
001cd0   0000     nop                      	nop
001cd2   0000     nop                      	nop
001cd4   0000     nop                      	nop
001cd6   0000     nop                      	nop
001cd8   0000     nop                      	nop
001cda   0000     nop                      	nop
001cdc   0000     nop                      	nop
001cde   0000     nop                      	nop
001ce0   0000     nop                      	nop
001ce2   0000     nop                      	nop
001ce4   0000     nop                      	nop
001ce6   0000     nop                      	nop
001ce8   0000     nop                      	nop
001cea   0000     nop                      	nop
001cec   0000     nop                      	nop
001cee   0000     nop                      	nop
001cf0   0000     nop                      	nop
001cf2   0000     nop                      	nop
001cf4   0000     nop                      	nop
001cf6   0000     nop                      	nop
001cf8   0000     nop                      	nop
001cfa   0000     nop                      	nop
001cfc   0000     nop                      	nop
001cfe   0000     nop                      	nop
001d00   0000     nop                      	nop
001d02   0000     nop                      	nop
001d04   0000     nop                      	nop
001d06   0000     nop                      	nop
001d08   0000     nop                      	nop
001d0a   0000     nop                      	nop
001d0c   0000     nop                      	nop
001d0e   0000     nop                      	nop
001d10   0000     nop                      	nop
001d12   0000     nop                      	nop
001d14   0000     nop                      	nop
001d16   0000     nop                      	nop
001d18   0000     nop                      	nop
001d1a   0000     nop                      	nop
001d1c   0000     nop                      	nop
001d1e   0000     nop                      	nop
001d20   0000     nop                      	nop
001d22   0000     nop                      	nop
001d24   0000     nop                      	nop
001d26   0000     nop                      	nop
001d28   0000     nop                      	nop
001d2a   0000     nop                      	nop
001d2c   0000     nop                      	nop
001d2e   0000     nop                      	nop
001d30   0000     nop                      	nop
001d32   0000     nop                      	nop
001d34   0000     nop                      	nop
001d36   0000     nop                      	nop
001d38   0000     nop                      	nop
001d3a   0000     nop                      	nop
001d3c   0000     nop                      	nop
001d3e   0000     nop                      	nop
001d40   0000     nop                      	nop
001d42   0000     nop                      	nop
001d44   0000     nop                      	nop
001d46   0000     nop                      	nop
001d48   0000     nop                      	nop
001d4a   0000     nop                      	nop
001d4c   0000     nop                      	nop
001d4e   0000     nop                      	nop
001d50   0000     nop                      	nop
001d52   0000     nop                      	nop
001d54   0000     nop                      	nop
001d56   0000     nop                      	nop
001d58   0000     nop                      	nop
001d5a   0000     nop                      	nop
001d5c   0000     nop                      	nop
001d5e   0000     nop                      	nop
001d60   0000     nop                      	nop
001d62   0000     nop                      	nop
001d64   0000     nop                      	nop
001d66   0000     nop                      	nop
001d68   0000     nop                      	nop
001d6a   0000     nop                      	nop
001d6c   0000     nop                      	nop
001d6e   0000     nop                      	nop
001d70   0000     nop                      	nop
001d72   0000     nop                      	nop
001d74   0000     nop                      	nop
001d76   0000     nop                      	nop
001d78   0000     nop                      	nop
001d7a   0000     nop                      	nop
001d7c   0000     nop                      	nop
001d7e   0000     nop                      	nop
001d80   0000     nop                      	nop
001d82   0000     nop                      	nop
001d84   0000     nop                      	nop
001d86   0000     nop                      	nop
001d88   0000     nop                      	nop
001d8a   0000     nop                      	nop
001d8c   0000     nop                      	nop
001d8e   0000     nop                      	nop
001d90   0000     nop                      	nop
001d92   0000     nop                      	nop
001d94   0000     nop                      	nop
001d96   0000     nop                      	nop
001d98   0000     nop                      	nop
001d9a   0000     nop                      	nop
001d9c   0000     nop                      	nop
001d9e   0000     nop                      	nop
001da0   0000     nop                      	nop
001da2   0000     nop                      	nop
001da4   0000     nop                      	nop
001da6   0000     nop                      	nop
001da8   0000     nop                      	nop
001daa   0000     nop                      	nop
001dac   0000     nop                      	nop
001dae   0000     nop                      	nop
001db0   0000     nop                      	nop
001db2   0000     nop                      	nop
001db4   0000     nop                      	nop
001db6   0000     nop                      	nop
001db8   0000     nop                      	nop
001dba   0000     nop                      	nop
001dbc   0000     nop                      	nop
001dbe   0000     nop                      	nop
001dc0   0000     nop                      	nop
001dc2   0000     nop                      	nop
001dc4   0000     nop                      	nop
001dc6   0000     nop                      	nop
001dc8   0000     nop                      	nop
001dca   0000     nop                      	nop
001dcc   0000     nop                      	nop
001dce   0000     nop                      	nop
001dd0   0000     nop                      	nop
001dd2   0000     nop                      	nop
001dd4   0000     nop                      	nop
001dd6   0000     nop                      	nop
001dd8   0000     nop                      	nop
001dda   0000     nop                      	nop
001ddc   0000     nop                      	nop
001dde   0000     nop                      	nop
001de0   0000     nop                      	nop
001de2   0000     nop                      	nop
001de4   0000     nop                      	nop
001de6   0000     nop                      	nop
001de8   0000     nop                      	nop
001dea   0000     nop                      	nop
001dec   0000     nop                      	nop
001dee   0000     nop                      	nop
001df0   0000     nop                      	nop
001df2   0000     nop                      	nop
001df4   0000     nop                      	nop
001df6   0000     nop                      	nop
001df8   0000     nop                      	nop
001dfa   0000     nop                      	nop
001dfc   0000     nop                      	nop
001dfe   0000     nop                      	nop
001e00   0000     nop                      	nop
001e02   0000     nop                      	nop
001e04   0000     nop                      	nop
001e06   0000     nop                      	nop
001e08   0000     nop                      	nop
001e0a   0000     nop                      	nop
001e0c   0000     nop                      	nop
001e0e   0000     nop                      	nop
001e10   0000     nop                      	nop
001e12   0000     nop                      	nop
001e14   0000     nop                      	nop
001e16   0000     nop                      	nop
001e18   0000     nop                      	nop
001e1a   0000     nop                      	nop
001e1c   0000     nop                      	nop
001e1e   0000     nop                      	nop
001e20   0000     nop                      	nop
001e22   0000     nop                      	nop
001e24   0000     nop                      	nop
001e26   0000     nop                      	nop
001e28   0000     nop                      	nop
001e2a   0000     nop                      	nop
001e2c   0000     nop                      	nop
001e2e   0000     nop                      	nop
001e30   0000     nop                      	nop
001e32   0000     nop                      	nop
001e34   0000     nop                      	nop
001e36   0000     nop                      	nop
001e38   0000     nop                      	nop
001e3a   0000     nop                      	nop
001e3c   0000     nop                      	nop
001e3e   0000     nop                      	nop
001e40   0000     nop                      	nop
001e42   0000     nop                      	nop
001e44   0000     nop                      	nop
001e46   0000     nop                      	nop
001e48   0000     nop                      	nop
001e4a   0000     nop                      	nop
001e4c   0000     nop                      	nop
001e4e   0000     nop                      	nop
001e50   0000     nop                      	nop
001e52   0000     nop                      	nop
001e54   0000     nop                      	nop
001e56   0000     nop                      	nop
001e58   0000     nop                      	nop
001e5a   0000     nop                      	nop
001e5c   0000     nop                      	nop
001e5e   0000     nop                      	nop
                                           	
                                           ;	.line	3590; meter_logger.c	PWM_PIN = 1;
001e60   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001e62   0000     nop                      	nop
001e64   0000     nop                      	nop
001e66   0000     nop                      	nop
001e68   0000     nop                      	nop
001e6a   0000     nop                      	nop
001e6c   0000     nop                      	nop
001e6e   0000     nop                      	nop
001e70   0000     nop                      	nop
001e72   0000     nop                      	nop
001e74   0000     nop                      	nop
001e76   0000     nop                      	nop
001e78   0000     nop                      	nop
001e7a   0000     nop                      	nop
001e7c   0000     nop                      	nop
001e7e   0000     nop                      	nop
001e80   0000     nop                      	nop
001e82   0000     nop                      	nop
001e84   0000     nop                      	nop
001e86   0000     nop                      	nop
001e88   0000     nop                      	nop
001e8a   0000     nop                      	nop
001e8c   0000     nop                      	nop
001e8e   0000     nop                      	nop
001e90   0000     nop                      	nop
001e92   0000     nop                      	nop
001e94   0000     nop                      	nop
001e96   0000     nop                      	nop
001e98   0000     nop                      	nop
001e9a   0000     nop                      	nop
001e9c   0000     nop                      	nop
001e9e   0000     nop                      	nop
001ea0   0000     nop                      	nop
001ea2   0000     nop                      	nop
001ea4   0000     nop                      	nop
001ea6   0000     nop                      	nop
001ea8   0000     nop                      	nop
001eaa   0000     nop                      	nop
001eac   0000     nop                      	nop
001eae   0000     nop                      	nop
001eb0   0000     nop                      	nop
001eb2   0000     nop                      	nop
001eb4   0000     nop                      	nop
001eb6   0000     nop                      	nop
001eb8   0000     nop                      	nop
001eba   0000     nop                      	nop
001ebc   0000     nop                      	nop
001ebe   0000     nop                      	nop
001ec0   0000     nop                      	nop
001ec2   0000     nop                      	nop
001ec4   0000     nop                      	nop
001ec6   0000     nop                      	nop
001ec8   0000     nop                      	nop
001eca   0000     nop                      	nop
001ecc   0000     nop                      	nop
001ece   0000     nop                      	nop
001ed0   0000     nop                      	nop
001ed2   0000     nop                      	nop
001ed4   0000     nop                      	nop
001ed6   0000     nop                      	nop
001ed8   0000     nop                      	nop
001eda   0000     nop                      	nop
001edc   0000     nop                      	nop
001ede   0000     nop                      	nop
001ee0   0000     nop                      	nop
001ee2   0000     nop                      	nop
001ee4   0000     nop                      	nop
001ee6   0000     nop                      	nop
001ee8   0000     nop                      	nop
001eea   0000     nop                      	nop
001eec   0000     nop                      	nop
001eee   0000     nop                      	nop
001ef0   0000     nop                      	nop
001ef2   0000     nop                      	nop
001ef4   0000     nop                      	nop
001ef6   0000     nop                      	nop
001ef8   0000     nop                      	nop
001efa   0000     nop                      	nop
001efc   0000     nop                      	nop
001efe   0000     nop                      	nop
001f00   0000     nop                      	nop
001f02   0000     nop                      	nop
001f04   0000     nop                      	nop
001f06   0000     nop                      	nop
001f08   0000     nop                      	nop
001f0a   0000     nop                      	nop
001f0c   0000     nop                      	nop
001f0e   0000     nop                      	nop
001f10   0000     nop                      	nop
001f12   0000     nop                      	nop
001f14   0000     nop                      	nop
001f16   0000     nop                      	nop
001f18   0000     nop                      	nop
001f1a   0000     nop                      	nop
001f1c   0000     nop                      	nop
001f1e   0000     nop                      	nop
001f20   0000     nop                      	nop
001f22   0000     nop                      	nop
001f24   0000     nop                      	nop
001f26   0000     nop                      	nop
001f28   0000     nop                      	nop
001f2a   0000     nop                      	nop
001f2c   0000     nop                      	nop
001f2e   0000     nop                      	nop
001f30   0000     nop                      	nop
001f32   0000     nop                      	nop
001f34   0000     nop                      	nop
001f36   0000     nop                      	nop
001f38   0000     nop                      	nop
001f3a   0000     nop                      	nop
001f3c   0000     nop                      	nop
001f3e   0000     nop                      	nop
001f40   0000     nop                      	nop
001f42   0000     nop                      	nop
001f44   0000     nop                      	nop
001f46   0000     nop                      	nop
001f48   0000     nop                      	nop
001f4a   0000     nop                      	nop
001f4c   0000     nop                      	nop
001f4e   0000     nop                      	nop
001f50   0000     nop                      	nop
001f52   0000     nop                      	nop
001f54   0000     nop                      	nop
001f56   0000     nop                      	nop
001f58   0000     nop                      	nop
001f5a   0000     nop                      	nop
001f5c   0000     nop                      	nop
001f5e   0000     nop                      	nop
001f60   0000     nop                      	nop
001f62   0000     nop                      	nop
001f64   0000     nop                      	nop
001f66   0000     nop                      	nop
001f68   0000     nop                      	nop
001f6a   0000     nop                      	nop
001f6c   0000     nop                      	nop
001f6e   0000     nop                      	nop
001f70   0000     nop                      	nop
001f72   0000     nop                      	nop
001f74   0000     nop                      	nop
001f76   0000     nop                      	nop
001f78   0000     nop                      	nop
001f7a   0000     nop                      	nop
001f7c   0000     nop                      	nop
001f7e   0000     nop                      	nop
001f80   0000     nop                      	nop
001f82   0000     nop                      	nop
001f84   0000     nop                      	nop
001f86   0000     nop                      	nop
001f88   0000     nop                      	nop
001f8a   0000     nop                      	nop
001f8c   0000     nop                      	nop
001f8e   0000     nop                      	nop
001f90   0000     nop                      	nop
001f92   0000     nop                      	nop
001f94   0000     nop                      	nop
001f96   0000     nop                      	nop
001f98   0000     nop                      	nop
001f9a   0000     nop                      	nop
001f9c   0000     nop                      	nop
001f9e   0000     nop                      	nop
001fa0   0000     nop                      	nop
001fa2   0000     nop                      	nop
001fa4   0000     nop                      	nop
001fa6   0000     nop                      	nop
001fa8   0000     nop                      	nop
001faa   0000     nop                      	nop
001fac   0000     nop                      	nop
001fae   0000     nop                      	nop
001fb0   0000     nop                      	nop
001fb2   0000     nop                      	nop
001fb4   0000     nop                      	nop
001fb6   0000     nop                      	nop
001fb8   0000     nop                      	nop
001fba   0000     nop                      	nop
001fbc   0000     nop                      	nop
001fbe   0000     nop                      	nop
001fc0   0000     nop                      	nop
001fc2   0000     nop                      	nop
001fc4   0000     nop                      	nop
001fc6   0000     nop                      	nop
001fc8   0000     nop                      	nop
001fca   0000     nop                      	nop
001fcc   0000     nop                      	nop
001fce   0000     nop                      	nop
001fd0   0000     nop                      	nop
001fd2   0000     nop                      	nop
001fd4   0000     nop                      	nop
001fd6   0000     nop                      	nop
001fd8   0000     nop                      	nop
001fda   0000     nop                      	nop
001fdc   0000     nop                      	nop
001fde   0000     nop                      	nop
001fe0   0000     nop                      	nop
001fe2   0000     nop                      	nop
001fe4   0000     nop                      	nop
001fe6   0000     nop                      	nop
001fe8   0000     nop                      	nop
001fea   0000     nop                      	nop
001fec   0000     nop                      	nop
001fee   0000     nop                      	nop
001ff0   0000     nop                      	nop
001ff2   0000     nop                      	nop
001ff4   0000     nop                      	nop
001ff6   0000     nop                      	nop
001ff8   0000     nop                      	nop
                                           	
                                           ;	.line	3797; meter_logger.c	PWM_PIN = 0;
001ffa   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001ffc   0000     nop                      	nop
001ffe   0000     nop                      	nop
002000   0000     nop                      	nop
002002   0000     nop                      	nop
002004   0000     nop                      	nop
002006   0000     nop                      	nop
002008   0000     nop                      	nop
00200a   0000     nop                      	nop
00200c   0000     nop                      	nop
00200e   0000     nop                      	nop
002010   0000     nop                      	nop
002012   0000     nop                      	nop
002014   0000     nop                      	nop
002016   0000     nop                      	nop
002018   0000     nop                      	nop
00201a   0000     nop                      	nop
00201c   0000     nop                      	nop
00201e   0000     nop                      	nop
002020   0000     nop                      	nop
002022   0000     nop                      	nop
002024   0000     nop                      	nop
002026   0000     nop                      	nop
002028   0000     nop                      	nop
00202a   0000     nop                      	nop
00202c   0000     nop                      	nop
00202e   0000     nop                      	nop
002030   0000     nop                      	nop
002032   0000     nop                      	nop
002034   0000     nop                      	nop
002036   0000     nop                      	nop
002038   0000     nop                      	nop
00203a   0000     nop                      	nop
00203c   0000     nop                      	nop
00203e   0000     nop                      	nop
002040   0000     nop                      	nop
002042   0000     nop                      	nop
002044   0000     nop                      	nop
002046   0000     nop                      	nop
002048   0000     nop                      	nop
00204a   0000     nop                      	nop
00204c   0000     nop                      	nop
00204e   0000     nop                      	nop
002050   0000     nop                      	nop
002052   0000     nop                      	nop
002054   0000     nop                      	nop
002056   0000     nop                      	nop
002058   0000     nop                      	nop
00205a   0000     nop                      	nop
00205c   0000     nop                      	nop
00205e   0000     nop                      	nop
002060   0000     nop                      	nop
002062   0000     nop                      	nop
002064   0000     nop                      	nop
002066   0000     nop                      	nop
002068   0000     nop                      	nop
00206a   0000     nop                      	nop
00206c   0000     nop                      	nop
00206e   0000     nop                      	nop
002070   0000     nop                      	nop
002072   0000     nop                      	nop
002074   0000     nop                      	nop
002076   0000     nop                      	nop
002078   0000     nop                      	nop
00207a   0000     nop                      	nop
00207c   0000     nop                      	nop
00207e   0000     nop                      	nop
002080   0000     nop                      	nop
002082   0000     nop                      	nop
002084   0000     nop                      	nop
002086   0000     nop                      	nop
002088   0000     nop                      	nop
00208a   0000     nop                      	nop
00208c   0000     nop                      	nop
00208e   0000     nop                      	nop
002090   0000     nop                      	nop
002092   0000     nop                      	nop
002094   0000     nop                      	nop
002096   0000     nop                      	nop
002098   0000     nop                      	nop
00209a   0000     nop                      	nop
00209c   0000     nop                      	nop
00209e   0000     nop                      	nop
0020a0   0000     nop                      	nop
0020a2   0000     nop                      	nop
0020a4   0000     nop                      	nop
0020a6   0000     nop                      	nop
0020a8   0000     nop                      	nop
0020aa   0000     nop                      	nop
0020ac   0000     nop                      	nop
0020ae   0000     nop                      	nop
0020b0   0000     nop                      	nop
0020b2   0000     nop                      	nop
0020b4   0000     nop                      	nop
0020b6   0000     nop                      	nop
0020b8   0000     nop                      	nop
0020ba   0000     nop                      	nop
0020bc   0000     nop                      	nop
0020be   0000     nop                      	nop
0020c0   0000     nop                      	nop
0020c2   0000     nop                      	nop
0020c4   0000     nop                      	nop
0020c6   0000     nop                      	nop
0020c8   0000     nop                      	nop
0020ca   0000     nop                      	nop
0020cc   0000     nop                      	nop
0020ce   0000     nop                      	nop
0020d0   0000     nop                      	nop
0020d2   0000     nop                      	nop
0020d4   0000     nop                      	nop
0020d6   0000     nop                      	nop
0020d8   0000     nop                      	nop
0020da   0000     nop                      	nop
0020dc   0000     nop                      	nop
0020de   0000     nop                      	nop
0020e0   0000     nop                      	nop
0020e2   0000     nop                      	nop
0020e4   0000     nop                      	nop
0020e6   0000     nop                      	nop
0020e8   0000     nop                      	nop
0020ea   0000     nop                      	nop
0020ec   0000     nop                      	nop
0020ee   0000     nop                      	nop
0020f0   0000     nop                      	nop
0020f2   0000     nop                      	nop
0020f4   0000     nop                      	nop
0020f6   0000     nop                      	nop
0020f8   0000     nop                      	nop
0020fa   0000     nop                      	nop
0020fc   0000     nop                      	nop
0020fe   0000     nop                      	nop
002100   0000     nop                      	nop
002102   0000     nop                      	nop
002104   0000     nop                      	nop
002106   0000     nop                      	nop
002108   0000     nop                      	nop
00210a   0000     nop                      	nop
00210c   0000     nop                      	nop
00210e   0000     nop                      	nop
002110   0000     nop                      	nop
002112   0000     nop                      	nop
002114   0000     nop                      	nop
002116   0000     nop                      	nop
002118   0000     nop                      	nop
00211a   0000     nop                      	nop
00211c   0000     nop                      	nop
00211e   0000     nop                      	nop
002120   0000     nop                      	nop
002122   0000     nop                      	nop
002124   0000     nop                      	nop
002126   0000     nop                      	nop
002128   0000     nop                      	nop
00212a   0000     nop                      	nop
00212c   0000     nop                      	nop
00212e   0000     nop                      	nop
002130   0000     nop                      	nop
002132   0000     nop                      	nop
002134   0000     nop                      	nop
002136   0000     nop                      	nop
002138   0000     nop                      	nop
00213a   0000     nop                      	nop
00213c   0000     nop                      	nop
00213e   0000     nop                      	nop
002140   0000     nop                      	nop
002142   0000     nop                      	nop
002144   0000     nop                      	nop
002146   0000     nop                      	nop
002148   0000     nop                      	nop
00214a   0000     nop                      	nop
00214c   0000     nop                      	nop
00214e   0000     nop                      	nop
002150   0000     nop                      	nop
002152   0000     nop                      	nop
002154   0000     nop                      	nop
002156   0000     nop                      	nop
002158   0000     nop                      	nop
00215a   0000     nop                      	nop
00215c   0000     nop                      	nop
00215e   0000     nop                      	nop
002160   0000     nop                      	nop
002162   0000     nop                      	nop
002164   0000     nop                      	nop
002166   0000     nop                      	nop
002168   0000     nop                      	nop
00216a   0000     nop                      	nop
00216c   0000     nop                      	nop
00216e   0000     nop                      	nop
002170   0000     nop                      	nop
002172   0000     nop                      	nop
002174   0000     nop                      	nop
002176   0000     nop                      	nop
002178   0000     nop                      	nop
00217a   0000     nop                      	nop
00217c   0000     nop                      	nop
00217e   0000     nop                      	nop
002180   0000     nop                      	nop
002182   0000     nop                      	nop
002184   0000     nop                      	nop
002186   0000     nop                      	nop
002188   0000     nop                      	nop
00218a   0000     nop                      	nop
00218c   0000     nop                      	nop
00218e   0000     nop                      	nop
002190   0000     nop                      	nop
002192   0000     nop                      	nop
                                           	
                                           ;	.line	4004; meter_logger.c	PWM_PIN = 1;
002194   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
002196   0000     nop                      	nop
002198   0000     nop                      	nop
00219a   0000     nop                      	nop
00219c   0000     nop                      	nop
00219e   0000     nop                      	nop
0021a0   0000     nop                      	nop
0021a2   0000     nop                      	nop
0021a4   0000     nop                      	nop
0021a6   0000     nop                      	nop
0021a8   0000     nop                      	nop
0021aa   0000     nop                      	nop
0021ac   0000     nop                      	nop
0021ae   0000     nop                      	nop
0021b0   0000     nop                      	nop
0021b2   0000     nop                      	nop
0021b4   0000     nop                      	nop
0021b6   0000     nop                      	nop
0021b8   0000     nop                      	nop
0021ba   0000     nop                      	nop
0021bc   0000     nop                      	nop
0021be   0000     nop                      	nop
0021c0   0000     nop                      	nop
0021c2   0000     nop                      	nop
0021c4   0000     nop                      	nop
0021c6   0000     nop                      	nop
0021c8   0000     nop                      	nop
0021ca   0000     nop                      	nop
0021cc   0000     nop                      	nop
0021ce   0000     nop                      	nop
0021d0   0000     nop                      	nop
0021d2   0000     nop                      	nop
0021d4   0000     nop                      	nop
0021d6   0000     nop                      	nop
0021d8   0000     nop                      	nop
0021da   0000     nop                      	nop
0021dc   0000     nop                      	nop
0021de   0000     nop                      	nop
0021e0   0000     nop                      	nop
0021e2   0000     nop                      	nop
0021e4   0000     nop                      	nop
0021e6   0000     nop                      	nop
0021e8   0000     nop                      	nop
0021ea   0000     nop                      	nop
0021ec   0000     nop                      	nop
0021ee   0000     nop                      	nop
0021f0   0000     nop                      	nop
0021f2   0000     nop                      	nop
0021f4   0000     nop                      	nop
0021f6   0000     nop                      	nop
0021f8   0000     nop                      	nop
0021fa   0000     nop                      	nop
0021fc   0000     nop                      	nop
0021fe   0000     nop                      	nop
002200   0000     nop                      	nop
002202   0000     nop                      	nop
002204   0000     nop                      	nop
002206   0000     nop                      	nop
002208   0000     nop                      	nop
00220a   0000     nop                      	nop
00220c   0000     nop                      	nop
00220e   0000     nop                      	nop
002210   0000     nop                      	nop
002212   0000     nop                      	nop
002214   0000     nop                      	nop
002216   0000     nop                      	nop
002218   0000     nop                      	nop
00221a   0000     nop                      	nop
00221c   0000     nop                      	nop
00221e   0000     nop                      	nop
002220   0000     nop                      	nop
002222   0000     nop                      	nop
002224   0000     nop                      	nop
002226   0000     nop                      	nop
002228   0000     nop                      	nop
00222a   0000     nop                      	nop
00222c   0000     nop                      	nop
00222e   0000     nop                      	nop
002230   0000     nop                      	nop
002232   0000     nop                      	nop
002234   0000     nop                      	nop
002236   0000     nop                      	nop
002238   0000     nop                      	nop
00223a   0000     nop                      	nop
00223c   0000     nop                      	nop
00223e   0000     nop                      	nop
002240   0000     nop                      	nop
002242   0000     nop                      	nop
002244   0000     nop                      	nop
002246   0000     nop                      	nop
002248   0000     nop                      	nop
00224a   0000     nop                      	nop
00224c   0000     nop                      	nop
00224e   0000     nop                      	nop
002250   0000     nop                      	nop
002252   0000     nop                      	nop
002254   0000     nop                      	nop
002256   0000     nop                      	nop
002258   0000     nop                      	nop
00225a   0000     nop                      	nop
00225c   0000     nop                      	nop
00225e   0000     nop                      	nop
002260   0000     nop                      	nop
002262   0000     nop                      	nop
002264   0000     nop                      	nop
002266   0000     nop                      	nop
002268   0000     nop                      	nop
00226a   0000     nop                      	nop
00226c   0000     nop                      	nop
00226e   0000     nop                      	nop
002270   0000     nop                      	nop
002272   0000     nop                      	nop
002274   0000     nop                      	nop
002276   0000     nop                      	nop
002278   0000     nop                      	nop
00227a   0000     nop                      	nop
00227c   0000     nop                      	nop
00227e   0000     nop                      	nop
002280   0000     nop                      	nop
002282   0000     nop                      	nop
002284   0000     nop                      	nop
002286   0000     nop                      	nop
002288   0000     nop                      	nop
00228a   0000     nop                      	nop
00228c   0000     nop                      	nop
00228e   0000     nop                      	nop
002290   0000     nop                      	nop
002292   0000     nop                      	nop
002294   0000     nop                      	nop
002296   0000     nop                      	nop
002298   0000     nop                      	nop
00229a   0000     nop                      	nop
00229c   0000     nop                      	nop
00229e   0000     nop                      	nop
0022a0   0000     nop                      	nop
0022a2   0000     nop                      	nop
0022a4   0000     nop                      	nop
0022a6   0000     nop                      	nop
0022a8   0000     nop                      	nop
0022aa   0000     nop                      	nop
0022ac   0000     nop                      	nop
0022ae   0000     nop                      	nop
0022b0   0000     nop                      	nop
0022b2   0000     nop                      	nop
0022b4   0000     nop                      	nop
0022b6   0000     nop                      	nop
0022b8   0000     nop                      	nop
0022ba   0000     nop                      	nop
0022bc   0000     nop                      	nop
0022be   0000     nop                      	nop
0022c0   0000     nop                      	nop
0022c2   0000     nop                      	nop
0022c4   0000     nop                      	nop
0022c6   0000     nop                      	nop
0022c8   0000     nop                      	nop
0022ca   0000     nop                      	nop
0022cc   0000     nop                      	nop
0022ce   0000     nop                      	nop
0022d0   0000     nop                      	nop
0022d2   0000     nop                      	nop
0022d4   0000     nop                      	nop
0022d6   0000     nop                      	nop
0022d8   0000     nop                      	nop
0022da   0000     nop                      	nop
0022dc   0000     nop                      	nop
0022de   0000     nop                      	nop
0022e0   0000     nop                      	nop
0022e2   0000     nop                      	nop
0022e4   0000     nop                      	nop
0022e6   0000     nop                      	nop
0022e8   0000     nop                      	nop
0022ea   0000     nop                      	nop
0022ec   0000     nop                      	nop
0022ee   0000     nop                      	nop
0022f0   0000     nop                      	nop
0022f2   0000     nop                      	nop
0022f4   0000     nop                      	nop
0022f6   0000     nop                      	nop
0022f8   0000     nop                      	nop
0022fa   0000     nop                      	nop
0022fc   0000     nop                      	nop
0022fe   0000     nop                      	nop
002300   0000     nop                      	nop
002302   0000     nop                      	nop
002304   0000     nop                      	nop
002306   0000     nop                      	nop
002308   0000     nop                      	nop
00230a   0000     nop                      	nop
00230c   0000     nop                      	nop
00230e   0000     nop                      	nop
002310   0000     nop                      	nop
002312   0000     nop                      	nop
002314   0000     nop                      	nop
002316   0000     nop                      	nop
002318   0000     nop                      	nop
00231a   0000     nop                      	nop
00231c   0000     nop                      	nop
00231e   0000     nop                      	nop
002320   0000     nop                      	nop
002322   0000     nop                      	nop
002324   0000     nop                      	nop
002326   0000     nop                      	nop
002328   0000     nop                      	nop
00232a   0000     nop                      	nop
00232c   0000     nop                      	nop
                                           	
                                           ;	.line	4211; meter_logger.c	PWM_PIN = 0;
00232e   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
002330   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002332   ffd9
002334   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__send_fsk_high	code
                                           _send_fsk_high:
                                           ;	.line	1239; meter_logger.c	void send_fsk_high(void) {
000c30   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000c32   ffe5
000c34   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000c36   ffd9
                                           ;	.line	1240; meter_logger.c	PWM_PIN = 1;
000c38   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
000c3a   0000     nop                      	nop
000c3c   0000     nop                      	nop
000c3e   0000     nop                      	nop
000c40   0000     nop                      	nop
000c42   0000     nop                      	nop
000c44   0000     nop                      	nop
000c46   0000     nop                      	nop
000c48   0000     nop                      	nop
000c4a   0000     nop                      	nop
000c4c   0000     nop                      	nop
000c4e   0000     nop                      	nop
000c50   0000     nop                      	nop
000c52   0000     nop                      	nop
000c54   0000     nop                      	nop
000c56   0000     nop                      	nop
000c58   0000     nop                      	nop
000c5a   0000     nop                      	nop
000c5c   0000     nop                      	nop
000c5e   0000     nop                      	nop
000c60   0000     nop                      	nop
000c62   0000     nop                      	nop
000c64   0000     nop                      	nop
000c66   0000     nop                      	nop
000c68   0000     nop                      	nop
000c6a   0000     nop                      	nop
000c6c   0000     nop                      	nop
000c6e   0000     nop                      	nop
000c70   0000     nop                      	nop
000c72   0000     nop                      	nop
000c74   0000     nop                      	nop
000c76   0000     nop                      	nop
000c78   0000     nop                      	nop
000c7a   0000     nop                      	nop
000c7c   0000     nop                      	nop
000c7e   0000     nop                      	nop
000c80   0000     nop                      	nop
000c82   0000     nop                      	nop
000c84   0000     nop                      	nop
000c86   0000     nop                      	nop
000c88   0000     nop                      	nop
000c8a   0000     nop                      	nop
000c8c   0000     nop                      	nop
000c8e   0000     nop                      	nop
000c90   0000     nop                      	nop
000c92   0000     nop                      	nop
000c94   0000     nop                      	nop
000c96   0000     nop                      	nop
000c98   0000     nop                      	nop
000c9a   0000     nop                      	nop
000c9c   0000     nop                      	nop
000c9e   0000     nop                      	nop
000ca0   0000     nop                      	nop
000ca2   0000     nop                      	nop
000ca4   0000     nop                      	nop
000ca6   0000     nop                      	nop
000ca8   0000     nop                      	nop
000caa   0000     nop                      	nop
000cac   0000     nop                      	nop
000cae   0000     nop                      	nop
000cb0   0000     nop                      	nop
000cb2   0000     nop                      	nop
000cb4   0000     nop                      	nop
000cb6   0000     nop                      	nop
000cb8   0000     nop                      	nop
000cba   0000     nop                      	nop
000cbc   0000     nop                      	nop
000cbe   0000     nop                      	nop
000cc0   0000     nop                      	nop
000cc2   0000     nop                      	nop
000cc4   0000     nop                      	nop
000cc6   0000     nop                      	nop
000cc8   0000     nop                      	nop
000cca   0000     nop                      	nop
000ccc   0000     nop                      	nop
000cce   0000     nop                      	nop
000cd0   0000     nop                      	nop
000cd2   0000     nop                      	nop
000cd4   0000     nop                      	nop
000cd6   0000     nop                      	nop
000cd8   0000     nop                      	nop
000cda   0000     nop                      	nop
000cdc   0000     nop                      	nop
000cde   0000     nop                      	nop
000ce0   0000     nop                      	nop
000ce2   0000     nop                      	nop
000ce4   0000     nop                      	nop
000ce6   0000     nop                      	nop
000ce8   0000     nop                      	nop
000cea   0000     nop                      	nop
000cec   0000     nop                      	nop
000cee   0000     nop                      	nop
000cf0   0000     nop                      	nop
000cf2   0000     nop                      	nop
000cf4   0000     nop                      	nop
000cf6   0000     nop                      	nop
000cf8   0000     nop                      	nop
000cfa   0000     nop                      	nop
000cfc   0000     nop                      	nop
000cfe   0000     nop                      	nop
000d00   0000     nop                      	nop
000d02   0000     nop                      	nop
000d04   0000     nop                      	nop
000d06   0000     nop                      	nop
000d08   0000     nop                      	nop
000d0a   0000     nop                      	nop
000d0c   0000     nop                      	nop
000d0e   0000     nop                      	nop
000d10   0000     nop                      	nop
000d12   0000     nop                      	nop
000d14   0000     nop                      	nop
000d16   0000     nop                      	nop
000d18   0000     nop                      	nop
000d1a   0000     nop                      	nop
000d1c   0000     nop                      	nop
000d1e   0000     nop                      	nop
000d20   0000     nop                      	nop
000d22   0000     nop                      	nop
000d24   0000     nop                      	nop
000d26   0000     nop                      	nop
000d28   0000     nop                      	nop
000d2a   0000     nop                      	nop
000d2c   0000     nop                      	nop
000d2e   0000     nop                      	nop
000d30   0000     nop                      	nop
000d32   0000     nop                      	nop
000d34   0000     nop                      	nop
000d36   0000     nop                      	nop
000d38   0000     nop                      	nop
000d3a   0000     nop                      	nop
000d3c   0000     nop                      	nop
000d3e   0000     nop                      	nop
000d40   0000     nop                      	nop
000d42   0000     nop                      	nop
000d44   0000     nop                      	nop
000d46   0000     nop                      	nop
                                           	
                                           ;	.line	1378; meter_logger.c	PWM_PIN = 0;
000d48   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
000d4a   0000     nop                      	nop
000d4c   0000     nop                      	nop
000d4e   0000     nop                      	nop
000d50   0000     nop                      	nop
000d52   0000     nop                      	nop
000d54   0000     nop                      	nop
000d56   0000     nop                      	nop
000d58   0000     nop                      	nop
000d5a   0000     nop                      	nop
000d5c   0000     nop                      	nop
000d5e   0000     nop                      	nop
000d60   0000     nop                      	nop
000d62   0000     nop                      	nop
000d64   0000     nop                      	nop
000d66   0000     nop                      	nop
000d68   0000     nop                      	nop
000d6a   0000     nop                      	nop
000d6c   0000     nop                      	nop
000d6e   0000     nop                      	nop
000d70   0000     nop                      	nop
000d72   0000     nop                      	nop
000d74   0000     nop                      	nop
000d76   0000     nop                      	nop
000d78   0000     nop                      	nop
000d7a   0000     nop                      	nop
000d7c   0000     nop                      	nop
000d7e   0000     nop                      	nop
000d80   0000     nop                      	nop
000d82   0000     nop                      	nop
000d84   0000     nop                      	nop
000d86   0000     nop                      	nop
000d88   0000     nop                      	nop
000d8a   0000     nop                      	nop
000d8c   0000     nop                      	nop
000d8e   0000     nop                      	nop
000d90   0000     nop                      	nop
000d92   0000     nop                      	nop
000d94   0000     nop                      	nop
000d96   0000     nop                      	nop
000d98   0000     nop                      	nop
000d9a   0000     nop                      	nop
000d9c   0000     nop                      	nop
000d9e   0000     nop                      	nop
000da0   0000     nop                      	nop
000da2   0000     nop                      	nop
000da4   0000     nop                      	nop
000da6   0000     nop                      	nop
000da8   0000     nop                      	nop
000daa   0000     nop                      	nop
000dac   0000     nop                      	nop
000dae   0000     nop                      	nop
000db0   0000     nop                      	nop
000db2   0000     nop                      	nop
000db4   0000     nop                      	nop
000db6   0000     nop                      	nop
000db8   0000     nop                      	nop
000dba   0000     nop                      	nop
000dbc   0000     nop                      	nop
000dbe   0000     nop                      	nop
000dc0   0000     nop                      	nop
000dc2   0000     nop                      	nop
000dc4   0000     nop                      	nop
000dc6   0000     nop                      	nop
000dc8   0000     nop                      	nop
000dca   0000     nop                      	nop
000dcc   0000     nop                      	nop
000dce   0000     nop                      	nop
000dd0   0000     nop                      	nop
000dd2   0000     nop                      	nop
000dd4   0000     nop                      	nop
000dd6   0000     nop                      	nop
000dd8   0000     nop                      	nop
000dda   0000     nop                      	nop
000ddc   0000     nop                      	nop
000dde   0000     nop                      	nop
000de0   0000     nop                      	nop
000de2   0000     nop                      	nop
000de4   0000     nop                      	nop
000de6   0000     nop                      	nop
000de8   0000     nop                      	nop
000dea   0000     nop                      	nop
000dec   0000     nop                      	nop
000dee   0000     nop                      	nop
000df0   0000     nop                      	nop
000df2   0000     nop                      	nop
000df4   0000     nop                      	nop
000df6   0000     nop                      	nop
000df8   0000     nop                      	nop
000dfa   0000     nop                      	nop
000dfc   0000     nop                      	nop
000dfe   0000     nop                      	nop
000e00   0000     nop                      	nop
000e02   0000     nop                      	nop
000e04   0000     nop                      	nop
000e06   0000     nop                      	nop
000e08   0000     nop                      	nop
000e0a   0000     nop                      	nop
000e0c   0000     nop                      	nop
000e0e   0000     nop                      	nop
000e10   0000     nop                      	nop
000e12   0000     nop                      	nop
000e14   0000     nop                      	nop
000e16   0000     nop                      	nop
000e18   0000     nop                      	nop
000e1a   0000     nop                      	nop
000e1c   0000     nop                      	nop
000e1e   0000     nop                      	nop
000e20   0000     nop                      	nop
000e22   0000     nop                      	nop
000e24   0000     nop                      	nop
000e26   0000     nop                      	nop
000e28   0000     nop                      	nop
000e2a   0000     nop                      	nop
000e2c   0000     nop                      	nop
000e2e   0000     nop                      	nop
000e30   0000     nop                      	nop
000e32   0000     nop                      	nop
000e34   0000     nop                      	nop
000e36   0000     nop                      	nop
000e38   0000     nop                      	nop
000e3a   0000     nop                      	nop
000e3c   0000     nop                      	nop
000e3e   0000     nop                      	nop
000e40   0000     nop                      	nop
000e42   0000     nop                      	nop
000e44   0000     nop                      	nop
000e46   0000     nop                      	nop
000e48   0000     nop                      	nop
000e4a   0000     nop                      	nop
000e4c   0000     nop                      	nop
000e4e   0000     nop                      	nop
000e50   0000     nop                      	nop
000e52   0000     nop                      	nop
000e54   0000     nop                      	nop
000e56   0000     nop                      	nop
                                           	
                                           ;	.line	1516; meter_logger.c	PWM_PIN = 1;
000e58   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
000e5a   0000     nop                      	nop
000e5c   0000     nop                      	nop
000e5e   0000     nop                      	nop
000e60   0000     nop                      	nop
000e62   0000     nop                      	nop
000e64   0000     nop                      	nop
000e66   0000     nop                      	nop
000e68   0000     nop                      	nop
000e6a   0000     nop                      	nop
000e6c   0000     nop                      	nop
000e6e   0000     nop                      	nop
000e70   0000     nop                      	nop
000e72   0000     nop                      	nop
000e74   0000     nop                      	nop
000e76   0000     nop                      	nop
000e78   0000     nop                      	nop
000e7a   0000     nop                      	nop
000e7c   0000     nop                      	nop
000e7e   0000     nop                      	nop
000e80   0000     nop                      	nop
000e82   0000     nop                      	nop
000e84   0000     nop                      	nop
000e86   0000     nop                      	nop
000e88   0000     nop                      	nop
000e8a   0000     nop                      	nop
000e8c   0000     nop                      	nop
000e8e   0000     nop                      	nop
000e90   0000     nop                      	nop
000e92   0000     nop                      	nop
000e94   0000     nop                      	nop
000e96   0000     nop                      	nop
000e98   0000     nop                      	nop
000e9a   0000     nop                      	nop
000e9c   0000     nop                      	nop
000e9e   0000     nop                      	nop
000ea0   0000     nop                      	nop
000ea2   0000     nop                      	nop
000ea4   0000     nop                      	nop
000ea6   0000     nop                      	nop
000ea8   0000     nop                      	nop
000eaa   0000     nop                      	nop
000eac   0000     nop                      	nop
000eae   0000     nop                      	nop
000eb0   0000     nop                      	nop
000eb2   0000     nop                      	nop
000eb4   0000     nop                      	nop
000eb6   0000     nop                      	nop
000eb8   0000     nop                      	nop
000eba   0000     nop                      	nop
000ebc   0000     nop                      	nop
000ebe   0000     nop                      	nop
000ec0   0000     nop                      	nop
000ec2   0000     nop                      	nop
000ec4   0000     nop                      	nop
000ec6   0000     nop                      	nop
000ec8   0000     nop                      	nop
000eca   0000     nop                      	nop
000ecc   0000     nop                      	nop
000ece   0000     nop                      	nop
000ed0   0000     nop                      	nop
000ed2   0000     nop                      	nop
000ed4   0000     nop                      	nop
000ed6   0000     nop                      	nop
000ed8   0000     nop                      	nop
000eda   0000     nop                      	nop
000edc   0000     nop                      	nop
000ede   0000     nop                      	nop
000ee0   0000     nop                      	nop
000ee2   0000     nop                      	nop
000ee4   0000     nop                      	nop
000ee6   0000     nop                      	nop
000ee8   0000     nop                      	nop
000eea   0000     nop                      	nop
000eec   0000     nop                      	nop
000eee   0000     nop                      	nop
000ef0   0000     nop                      	nop
000ef2   0000     nop                      	nop
000ef4   0000     nop                      	nop
000ef6   0000     nop                      	nop
000ef8   0000     nop                      	nop
000efa   0000     nop                      	nop
000efc   0000     nop                      	nop
000efe   0000     nop                      	nop
000f00   0000     nop                      	nop
000f02   0000     nop                      	nop
000f04   0000     nop                      	nop
000f06   0000     nop                      	nop
000f08   0000     nop                      	nop
000f0a   0000     nop                      	nop
000f0c   0000     nop                      	nop
000f0e   0000     nop                      	nop
000f10   0000     nop                      	nop
000f12   0000     nop                      	nop
000f14   0000     nop                      	nop
000f16   0000     nop                      	nop
000f18   0000     nop                      	nop
000f1a   0000     nop                      	nop
000f1c   0000     nop                      	nop
000f1e   0000     nop                      	nop
000f20   0000     nop                      	nop
000f22   0000     nop                      	nop
000f24   0000     nop                      	nop
000f26   0000     nop                      	nop
000f28   0000     nop                      	nop
000f2a   0000     nop                      	nop
000f2c   0000     nop                      	nop
000f2e   0000     nop                      	nop
000f30   0000     nop                      	nop
000f32   0000     nop                      	nop
000f34   0000     nop                      	nop
000f36   0000     nop                      	nop
000f38   0000     nop                      	nop
000f3a   0000     nop                      	nop
000f3c   0000     nop                      	nop
000f3e   0000     nop                      	nop
000f40   0000     nop                      	nop
000f42   0000     nop                      	nop
000f44   0000     nop                      	nop
000f46   0000     nop                      	nop
000f48   0000     nop                      	nop
000f4a   0000     nop                      	nop
000f4c   0000     nop                      	nop
000f4e   0000     nop                      	nop
000f50   0000     nop                      	nop
000f52   0000     nop                      	nop
000f54   0000     nop                      	nop
000f56   0000     nop                      	nop
000f58   0000     nop                      	nop
000f5a   0000     nop                      	nop
000f5c   0000     nop                      	nop
000f5e   0000     nop                      	nop
000f60   0000     nop                      	nop
000f62   0000     nop                      	nop
000f64   0000     nop                      	nop
000f66   0000     nop                      	nop
                                           	
                                           ;	.line	1654; meter_logger.c	PWM_PIN = 0;
000f68   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
000f6a   0000     nop                      	nop
000f6c   0000     nop                      	nop
000f6e   0000     nop                      	nop
000f70   0000     nop                      	nop
000f72   0000     nop                      	nop
000f74   0000     nop                      	nop
000f76   0000     nop                      	nop
000f78   0000     nop                      	nop
000f7a   0000     nop                      	nop
000f7c   0000     nop                      	nop
000f7e   0000     nop                      	nop
000f80   0000     nop                      	nop
000f82   0000     nop                      	nop
000f84   0000     nop                      	nop
000f86   0000     nop                      	nop
000f88   0000     nop                      	nop
000f8a   0000     nop                      	nop
000f8c   0000     nop                      	nop
000f8e   0000     nop                      	nop
000f90   0000     nop                      	nop
000f92   0000     nop                      	nop
000f94   0000     nop                      	nop
000f96   0000     nop                      	nop
000f98   0000     nop                      	nop
000f9a   0000     nop                      	nop
000f9c   0000     nop                      	nop
000f9e   0000     nop                      	nop
000fa0   0000     nop                      	nop
000fa2   0000     nop                      	nop
000fa4   0000     nop                      	nop
000fa6   0000     nop                      	nop
000fa8   0000     nop                      	nop
000faa   0000     nop                      	nop
000fac   0000     nop                      	nop
000fae   0000     nop                      	nop
000fb0   0000     nop                      	nop
000fb2   0000     nop                      	nop
000fb4   0000     nop                      	nop
000fb6   0000     nop                      	nop
000fb8   0000     nop                      	nop
000fba   0000     nop                      	nop
000fbc   0000     nop                      	nop
000fbe   0000     nop                      	nop
000fc0   0000     nop                      	nop
000fc2   0000     nop                      	nop
000fc4   0000     nop                      	nop
000fc6   0000     nop                      	nop
000fc8   0000     nop                      	nop
000fca   0000     nop                      	nop
000fcc   0000     nop                      	nop
000fce   0000     nop                      	nop
000fd0   0000     nop                      	nop
000fd2   0000     nop                      	nop
000fd4   0000     nop                      	nop
000fd6   0000     nop                      	nop
000fd8   0000     nop                      	nop
000fda   0000     nop                      	nop
000fdc   0000     nop                      	nop
000fde   0000     nop                      	nop
000fe0   0000     nop                      	nop
000fe2   0000     nop                      	nop
000fe4   0000     nop                      	nop
000fe6   0000     nop                      	nop
000fe8   0000     nop                      	nop
000fea   0000     nop                      	nop
000fec   0000     nop                      	nop
000fee   0000     nop                      	nop
000ff0   0000     nop                      	nop
000ff2   0000     nop                      	nop
000ff4   0000     nop                      	nop
000ff6   0000     nop                      	nop
000ff8   0000     nop                      	nop
000ffa   0000     nop                      	nop
000ffc   0000     nop                      	nop
000ffe   0000     nop                      	nop
001000   0000     nop                      	nop
001002   0000     nop                      	nop
001004   0000     nop                      	nop
001006   0000     nop                      	nop
001008   0000     nop                      	nop
00100a   0000     nop                      	nop
00100c   0000     nop                      	nop
00100e   0000     nop                      	nop
001010   0000     nop                      	nop
001012   0000     nop                      	nop
001014   0000     nop                      	nop
001016   0000     nop                      	nop
001018   0000     nop                      	nop
00101a   0000     nop                      	nop
00101c   0000     nop                      	nop
00101e   0000     nop                      	nop
001020   0000     nop                      	nop
001022   0000     nop                      	nop
001024   0000     nop                      	nop
001026   0000     nop                      	nop
001028   0000     nop                      	nop
00102a   0000     nop                      	nop
00102c   0000     nop                      	nop
00102e   0000     nop                      	nop
001030   0000     nop                      	nop
001032   0000     nop                      	nop
001034   0000     nop                      	nop
001036   0000     nop                      	nop
001038   0000     nop                      	nop
00103a   0000     nop                      	nop
00103c   0000     nop                      	nop
00103e   0000     nop                      	nop
001040   0000     nop                      	nop
001042   0000     nop                      	nop
001044   0000     nop                      	nop
001046   0000     nop                      	nop
001048   0000     nop                      	nop
00104a   0000     nop                      	nop
00104c   0000     nop                      	nop
00104e   0000     nop                      	nop
001050   0000     nop                      	nop
001052   0000     nop                      	nop
001054   0000     nop                      	nop
001056   0000     nop                      	nop
001058   0000     nop                      	nop
00105a   0000     nop                      	nop
00105c   0000     nop                      	nop
00105e   0000     nop                      	nop
001060   0000     nop                      	nop
001062   0000     nop                      	nop
001064   0000     nop                      	nop
001066   0000     nop                      	nop
001068   0000     nop                      	nop
00106a   0000     nop                      	nop
00106c   0000     nop                      	nop
00106e   0000     nop                      	nop
001070   0000     nop                      	nop
001072   0000     nop                      	nop
001074   0000     nop                      	nop
001076   0000     nop                      	nop
                                           	
                                           ;	.line	1792; meter_logger.c	PWM_PIN = 1;
001078   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
00107a   0000     nop                      	nop
00107c   0000     nop                      	nop
00107e   0000     nop                      	nop
001080   0000     nop                      	nop
001082   0000     nop                      	nop
001084   0000     nop                      	nop
001086   0000     nop                      	nop
001088   0000     nop                      	nop
00108a   0000     nop                      	nop
00108c   0000     nop                      	nop
00108e   0000     nop                      	nop
001090   0000     nop                      	nop
001092   0000     nop                      	nop
001094   0000     nop                      	nop
001096   0000     nop                      	nop
001098   0000     nop                      	nop
00109a   0000     nop                      	nop
00109c   0000     nop                      	nop
00109e   0000     nop                      	nop
0010a0   0000     nop                      	nop
0010a2   0000     nop                      	nop
0010a4   0000     nop                      	nop
0010a6   0000     nop                      	nop
0010a8   0000     nop                      	nop
0010aa   0000     nop                      	nop
0010ac   0000     nop                      	nop
0010ae   0000     nop                      	nop
0010b0   0000     nop                      	nop
0010b2   0000     nop                      	nop
0010b4   0000     nop                      	nop
0010b6   0000     nop                      	nop
0010b8   0000     nop                      	nop
0010ba   0000     nop                      	nop
0010bc   0000     nop                      	nop
0010be   0000     nop                      	nop
0010c0   0000     nop                      	nop
0010c2   0000     nop                      	nop
0010c4   0000     nop                      	nop
0010c6   0000     nop                      	nop
0010c8   0000     nop                      	nop
0010ca   0000     nop                      	nop
0010cc   0000     nop                      	nop
0010ce   0000     nop                      	nop
0010d0   0000     nop                      	nop
0010d2   0000     nop                      	nop
0010d4   0000     nop                      	nop
0010d6   0000     nop                      	nop
0010d8   0000     nop                      	nop
0010da   0000     nop                      	nop
0010dc   0000     nop                      	nop
0010de   0000     nop                      	nop
0010e0   0000     nop                      	nop
0010e2   0000     nop                      	nop
0010e4   0000     nop                      	nop
0010e6   0000     nop                      	nop
0010e8   0000     nop                      	nop
0010ea   0000     nop                      	nop
0010ec   0000     nop                      	nop
0010ee   0000     nop                      	nop
0010f0   0000     nop                      	nop
0010f2   0000     nop                      	nop
0010f4   0000     nop                      	nop
0010f6   0000     nop                      	nop
0010f8   0000     nop                      	nop
0010fa   0000     nop                      	nop
0010fc   0000     nop                      	nop
0010fe   0000     nop                      	nop
001100   0000     nop                      	nop
001102   0000     nop                      	nop
001104   0000     nop                      	nop
001106   0000     nop                      	nop
001108   0000     nop                      	nop
00110a   0000     nop                      	nop
00110c   0000     nop                      	nop
00110e   0000     nop                      	nop
001110   0000     nop                      	nop
001112   0000     nop                      	nop
001114   0000     nop                      	nop
001116   0000     nop                      	nop
001118   0000     nop                      	nop
00111a   0000     nop                      	nop
00111c   0000     nop                      	nop
00111e   0000     nop                      	nop
001120   0000     nop                      	nop
001122   0000     nop                      	nop
001124   0000     nop                      	nop
001126   0000     nop                      	nop
001128   0000     nop                      	nop
00112a   0000     nop                      	nop
00112c   0000     nop                      	nop
00112e   0000     nop                      	nop
001130   0000     nop                      	nop
001132   0000     nop                      	nop
001134   0000     nop                      	nop
001136   0000     nop                      	nop
001138   0000     nop                      	nop
00113a   0000     nop                      	nop
00113c   0000     nop                      	nop
00113e   0000     nop                      	nop
001140   0000     nop                      	nop
001142   0000     nop                      	nop
001144   0000     nop                      	nop
001146   0000     nop                      	nop
001148   0000     nop                      	nop
00114a   0000     nop                      	nop
00114c   0000     nop                      	nop
00114e   0000     nop                      	nop
001150   0000     nop                      	nop
001152   0000     nop                      	nop
001154   0000     nop                      	nop
001156   0000     nop                      	nop
001158   0000     nop                      	nop
00115a   0000     nop                      	nop
00115c   0000     nop                      	nop
00115e   0000     nop                      	nop
001160   0000     nop                      	nop
001162   0000     nop                      	nop
001164   0000     nop                      	nop
001166   0000     nop                      	nop
001168   0000     nop                      	nop
00116a   0000     nop                      	nop
00116c   0000     nop                      	nop
00116e   0000     nop                      	nop
001170   0000     nop                      	nop
001172   0000     nop                      	nop
001174   0000     nop                      	nop
001176   0000     nop                      	nop
001178   0000     nop                      	nop
00117a   0000     nop                      	nop
00117c   0000     nop                      	nop
00117e   0000     nop                      	nop
001180   0000     nop                      	nop
001182   0000     nop                      	nop
001184   0000     nop                      	nop
001186   0000     nop                      	nop
                                           	
                                           ;	.line	1930; meter_logger.c	PWM_PIN = 0;
001188   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
00118a   0000     nop                      	nop
00118c   0000     nop                      	nop
00118e   0000     nop                      	nop
001190   0000     nop                      	nop
001192   0000     nop                      	nop
001194   0000     nop                      	nop
001196   0000     nop                      	nop
001198   0000     nop                      	nop
00119a   0000     nop                      	nop
00119c   0000     nop                      	nop
00119e   0000     nop                      	nop
0011a0   0000     nop                      	nop
0011a2   0000     nop                      	nop
0011a4   0000     nop                      	nop
0011a6   0000     nop                      	nop
0011a8   0000     nop                      	nop
0011aa   0000     nop                      	nop
0011ac   0000     nop                      	nop
0011ae   0000     nop                      	nop
0011b0   0000     nop                      	nop
0011b2   0000     nop                      	nop
0011b4   0000     nop                      	nop
0011b6   0000     nop                      	nop
0011b8   0000     nop                      	nop
0011ba   0000     nop                      	nop
0011bc   0000     nop                      	nop
0011be   0000     nop                      	nop
0011c0   0000     nop                      	nop
0011c2   0000     nop                      	nop
0011c4   0000     nop                      	nop
0011c6   0000     nop                      	nop
0011c8   0000     nop                      	nop
0011ca   0000     nop                      	nop
0011cc   0000     nop                      	nop
0011ce   0000     nop                      	nop
0011d0   0000     nop                      	nop
0011d2   0000     nop                      	nop
0011d4   0000     nop                      	nop
0011d6   0000     nop                      	nop
0011d8   0000     nop                      	nop
0011da   0000     nop                      	nop
0011dc   0000     nop                      	nop
0011de   0000     nop                      	nop
0011e0   0000     nop                      	nop
0011e2   0000     nop                      	nop
0011e4   0000     nop                      	nop
0011e6   0000     nop                      	nop
0011e8   0000     nop                      	nop
0011ea   0000     nop                      	nop
0011ec   0000     nop                      	nop
0011ee   0000     nop                      	nop
0011f0   0000     nop                      	nop
0011f2   0000     nop                      	nop
0011f4   0000     nop                      	nop
0011f6   0000     nop                      	nop
0011f8   0000     nop                      	nop
0011fa   0000     nop                      	nop
0011fc   0000     nop                      	nop
0011fe   0000     nop                      	nop
001200   0000     nop                      	nop
001202   0000     nop                      	nop
001204   0000     nop                      	nop
001206   0000     nop                      	nop
001208   0000     nop                      	nop
00120a   0000     nop                      	nop
00120c   0000     nop                      	nop
00120e   0000     nop                      	nop
001210   0000     nop                      	nop
001212   0000     nop                      	nop
001214   0000     nop                      	nop
001216   0000     nop                      	nop
001218   0000     nop                      	nop
00121a   0000     nop                      	nop
00121c   0000     nop                      	nop
00121e   0000     nop                      	nop
001220   0000     nop                      	nop
001222   0000     nop                      	nop
001224   0000     nop                      	nop
001226   0000     nop                      	nop
001228   0000     nop                      	nop
00122a   0000     nop                      	nop
00122c   0000     nop                      	nop
00122e   0000     nop                      	nop
001230   0000     nop                      	nop
001232   0000     nop                      	nop
001234   0000     nop                      	nop
001236   0000     nop                      	nop
001238   0000     nop                      	nop
00123a   0000     nop                      	nop
00123c   0000     nop                      	nop
00123e   0000     nop                      	nop
001240   0000     nop                      	nop
001242   0000     nop                      	nop
001244   0000     nop                      	nop
001246   0000     nop                      	nop
001248   0000     nop                      	nop
00124a   0000     nop                      	nop
00124c   0000     nop                      	nop
00124e   0000     nop                      	nop
001250   0000     nop                      	nop
001252   0000     nop                      	nop
001254   0000     nop                      	nop
001256   0000     nop                      	nop
001258   0000     nop                      	nop
00125a   0000     nop                      	nop
00125c   0000     nop                      	nop
00125e   0000     nop                      	nop
001260   0000     nop                      	nop
001262   0000     nop                      	nop
001264   0000     nop                      	nop
001266   0000     nop                      	nop
001268   0000     nop                      	nop
00126a   0000     nop                      	nop
00126c   0000     nop                      	nop
00126e   0000     nop                      	nop
001270   0000     nop                      	nop
001272   0000     nop                      	nop
001274   0000     nop                      	nop
001276   0000     nop                      	nop
001278   0000     nop                      	nop
00127a   0000     nop                      	nop
00127c   0000     nop                      	nop
00127e   0000     nop                      	nop
001280   0000     nop                      	nop
001282   0000     nop                      	nop
001284   0000     nop                      	nop
001286   0000     nop                      	nop
001288   0000     nop                      	nop
00128a   0000     nop                      	nop
00128c   0000     nop                      	nop
00128e   0000     nop                      	nop
001290   0000     nop                      	nop
001292   0000     nop                      	nop
001294   0000     nop                      	nop
001296   0000     nop                      	nop
                                           	
                                           ;	.line	2068; meter_logger.c	PWM_PIN = 1;
001298   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
00129a   0000     nop                      	nop
00129c   0000     nop                      	nop
00129e   0000     nop                      	nop
0012a0   0000     nop                      	nop
0012a2   0000     nop                      	nop
0012a4   0000     nop                      	nop
0012a6   0000     nop                      	nop
0012a8   0000     nop                      	nop
0012aa   0000     nop                      	nop
0012ac   0000     nop                      	nop
0012ae   0000     nop                      	nop
0012b0   0000     nop                      	nop
0012b2   0000     nop                      	nop
0012b4   0000     nop                      	nop
0012b6   0000     nop                      	nop
0012b8   0000     nop                      	nop
0012ba   0000     nop                      	nop
0012bc   0000     nop                      	nop
0012be   0000     nop                      	nop
0012c0   0000     nop                      	nop
0012c2   0000     nop                      	nop
0012c4   0000     nop                      	nop
0012c6   0000     nop                      	nop
0012c8   0000     nop                      	nop
0012ca   0000     nop                      	nop
0012cc   0000     nop                      	nop
0012ce   0000     nop                      	nop
0012d0   0000     nop                      	nop
0012d2   0000     nop                      	nop
0012d4   0000     nop                      	nop
0012d6   0000     nop                      	nop
0012d8   0000     nop                      	nop
0012da   0000     nop                      	nop
0012dc   0000     nop                      	nop
0012de   0000     nop                      	nop
0012e0   0000     nop                      	nop
0012e2   0000     nop                      	nop
0012e4   0000     nop                      	nop
0012e6   0000     nop                      	nop
0012e8   0000     nop                      	nop
0012ea   0000     nop                      	nop
0012ec   0000     nop                      	nop
0012ee   0000     nop                      	nop
0012f0   0000     nop                      	nop
0012f2   0000     nop                      	nop
0012f4   0000     nop                      	nop
0012f6   0000     nop                      	nop
0012f8   0000     nop                      	nop
0012fa   0000     nop                      	nop
0012fc   0000     nop                      	nop
0012fe   0000     nop                      	nop
001300   0000     nop                      	nop
001302   0000     nop                      	nop
001304   0000     nop                      	nop
001306   0000     nop                      	nop
001308   0000     nop                      	nop
00130a   0000     nop                      	nop
00130c   0000     nop                      	nop
00130e   0000     nop                      	nop
001310   0000     nop                      	nop
001312   0000     nop                      	nop
001314   0000     nop                      	nop
001316   0000     nop                      	nop
001318   0000     nop                      	nop
00131a   0000     nop                      	nop
00131c   0000     nop                      	nop
00131e   0000     nop                      	nop
001320   0000     nop                      	nop
001322   0000     nop                      	nop
001324   0000     nop                      	nop
001326   0000     nop                      	nop
001328   0000     nop                      	nop
00132a   0000     nop                      	nop
00132c   0000     nop                      	nop
00132e   0000     nop                      	nop
001330   0000     nop                      	nop
001332   0000     nop                      	nop
001334   0000     nop                      	nop
001336   0000     nop                      	nop
001338   0000     nop                      	nop
00133a   0000     nop                      	nop
00133c   0000     nop                      	nop
00133e   0000     nop                      	nop
001340   0000     nop                      	nop
001342   0000     nop                      	nop
001344   0000     nop                      	nop
001346   0000     nop                      	nop
001348   0000     nop                      	nop
00134a   0000     nop                      	nop
00134c   0000     nop                      	nop
00134e   0000     nop                      	nop
001350   0000     nop                      	nop
001352   0000     nop                      	nop
001354   0000     nop                      	nop
001356   0000     nop                      	nop
001358   0000     nop                      	nop
00135a   0000     nop                      	nop
00135c   0000     nop                      	nop
00135e   0000     nop                      	nop
001360   0000     nop                      	nop
001362   0000     nop                      	nop
001364   0000     nop                      	nop
001366   0000     nop                      	nop
001368   0000     nop                      	nop
00136a   0000     nop                      	nop
00136c   0000     nop                      	nop
00136e   0000     nop                      	nop
001370   0000     nop                      	nop
001372   0000     nop                      	nop
001374   0000     nop                      	nop
001376   0000     nop                      	nop
001378   0000     nop                      	nop
00137a   0000     nop                      	nop
00137c   0000     nop                      	nop
00137e   0000     nop                      	nop
001380   0000     nop                      	nop
001382   0000     nop                      	nop
001384   0000     nop                      	nop
001386   0000     nop                      	nop
001388   0000     nop                      	nop
00138a   0000     nop                      	nop
00138c   0000     nop                      	nop
00138e   0000     nop                      	nop
001390   0000     nop                      	nop
001392   0000     nop                      	nop
001394   0000     nop                      	nop
001396   0000     nop                      	nop
001398   0000     nop                      	nop
00139a   0000     nop                      	nop
00139c   0000     nop                      	nop
00139e   0000     nop                      	nop
0013a0   0000     nop                      	nop
0013a2   0000     nop                      	nop
0013a4   0000     nop                      	nop
0013a6   0000     nop                      	nop
                                           	
                                           ;	.line	2206; meter_logger.c	PWM_PIN = 0;
0013a8   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
0013aa   0000     nop                      	nop
0013ac   0000     nop                      	nop
0013ae   0000     nop                      	nop
0013b0   0000     nop                      	nop
0013b2   0000     nop                      	nop
0013b4   0000     nop                      	nop
0013b6   0000     nop                      	nop
0013b8   0000     nop                      	nop
0013ba   0000     nop                      	nop
0013bc   0000     nop                      	nop
0013be   0000     nop                      	nop
0013c0   0000     nop                      	nop
0013c2   0000     nop                      	nop
0013c4   0000     nop                      	nop
0013c6   0000     nop                      	nop
0013c8   0000     nop                      	nop
0013ca   0000     nop                      	nop
0013cc   0000     nop                      	nop
0013ce   0000     nop                      	nop
0013d0   0000     nop                      	nop
0013d2   0000     nop                      	nop
0013d4   0000     nop                      	nop
0013d6   0000     nop                      	nop
0013d8   0000     nop                      	nop
0013da   0000     nop                      	nop
0013dc   0000     nop                      	nop
0013de   0000     nop                      	nop
0013e0   0000     nop                      	nop
0013e2   0000     nop                      	nop
0013e4   0000     nop                      	nop
0013e6   0000     nop                      	nop
0013e8   0000     nop                      	nop
0013ea   0000     nop                      	nop
0013ec   0000     nop                      	nop
0013ee   0000     nop                      	nop
0013f0   0000     nop                      	nop
0013f2   0000     nop                      	nop
0013f4   0000     nop                      	nop
0013f6   0000     nop                      	nop
0013f8   0000     nop                      	nop
0013fa   0000     nop                      	nop
0013fc   0000     nop                      	nop
0013fe   0000     nop                      	nop
001400   0000     nop                      	nop
001402   0000     nop                      	nop
001404   0000     nop                      	nop
001406   0000     nop                      	nop
001408   0000     nop                      	nop
00140a   0000     nop                      	nop
00140c   0000     nop                      	nop
00140e   0000     nop                      	nop
001410   0000     nop                      	nop
001412   0000     nop                      	nop
001414   0000     nop                      	nop
001416   0000     nop                      	nop
001418   0000     nop                      	nop
00141a   0000     nop                      	nop
00141c   0000     nop                      	nop
00141e   0000     nop                      	nop
001420   0000     nop                      	nop
001422   0000     nop                      	nop
001424   0000     nop                      	nop
001426   0000     nop                      	nop
001428   0000     nop                      	nop
00142a   0000     nop                      	nop
00142c   0000     nop                      	nop
00142e   0000     nop                      	nop
001430   0000     nop                      	nop
001432   0000     nop                      	nop
001434   0000     nop                      	nop
001436   0000     nop                      	nop
001438   0000     nop                      	nop
00143a   0000     nop                      	nop
00143c   0000     nop                      	nop
00143e   0000     nop                      	nop
001440   0000     nop                      	nop
001442   0000     nop                      	nop
001444   0000     nop                      	nop
001446   0000     nop                      	nop
001448   0000     nop                      	nop
00144a   0000     nop                      	nop
00144c   0000     nop                      	nop
00144e   0000     nop                      	nop
001450   0000     nop                      	nop
001452   0000     nop                      	nop
001454   0000     nop                      	nop
001456   0000     nop                      	nop
001458   0000     nop                      	nop
00145a   0000     nop                      	nop
00145c   0000     nop                      	nop
00145e   0000     nop                      	nop
001460   0000     nop                      	nop
001462   0000     nop                      	nop
001464   0000     nop                      	nop
001466   0000     nop                      	nop
001468   0000     nop                      	nop
00146a   0000     nop                      	nop
00146c   0000     nop                      	nop
00146e   0000     nop                      	nop
001470   0000     nop                      	nop
001472   0000     nop                      	nop
001474   0000     nop                      	nop
001476   0000     nop                      	nop
001478   0000     nop                      	nop
00147a   0000     nop                      	nop
00147c   0000     nop                      	nop
00147e   0000     nop                      	nop
001480   0000     nop                      	nop
001482   0000     nop                      	nop
001484   0000     nop                      	nop
001486   0000     nop                      	nop
001488   0000     nop                      	nop
00148a   0000     nop                      	nop
00148c   0000     nop                      	nop
00148e   0000     nop                      	nop
001490   0000     nop                      	nop
001492   0000     nop                      	nop
001494   0000     nop                      	nop
001496   0000     nop                      	nop
001498   0000     nop                      	nop
00149a   0000     nop                      	nop
00149c   0000     nop                      	nop
00149e   0000     nop                      	nop
0014a0   0000     nop                      	nop
0014a2   0000     nop                      	nop
0014a4   0000     nop                      	nop
0014a6   0000     nop                      	nop
0014a8   0000     nop                      	nop
0014aa   0000     nop                      	nop
0014ac   0000     nop                      	nop
0014ae   0000     nop                      	nop
0014b0   0000     nop                      	nop
0014b2   0000     nop                      	nop
0014b4   0000     nop                      	nop
0014b6   0000     nop                      	nop
                                           	
                                           ;	.line	2344; meter_logger.c	PWM_PIN = 1;
0014b8   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
0014ba   0000     nop                      	nop
0014bc   0000     nop                      	nop
0014be   0000     nop                      	nop
0014c0   0000     nop                      	nop
0014c2   0000     nop                      	nop
0014c4   0000     nop                      	nop
0014c6   0000     nop                      	nop
0014c8   0000     nop                      	nop
0014ca   0000     nop                      	nop
0014cc   0000     nop                      	nop
0014ce   0000     nop                      	nop
0014d0   0000     nop                      	nop
0014d2   0000     nop                      	nop
0014d4   0000     nop                      	nop
0014d6   0000     nop                      	nop
0014d8   0000     nop                      	nop
0014da   0000     nop                      	nop
0014dc   0000     nop                      	nop
0014de   0000     nop                      	nop
0014e0   0000     nop                      	nop
0014e2   0000     nop                      	nop
0014e4   0000     nop                      	nop
0014e6   0000     nop                      	nop
0014e8   0000     nop                      	nop
0014ea   0000     nop                      	nop
0014ec   0000     nop                      	nop
0014ee   0000     nop                      	nop
0014f0   0000     nop                      	nop
0014f2   0000     nop                      	nop
0014f4   0000     nop                      	nop
0014f6   0000     nop                      	nop
0014f8   0000     nop                      	nop
0014fa   0000     nop                      	nop
0014fc   0000     nop                      	nop
0014fe   0000     nop                      	nop
001500   0000     nop                      	nop
001502   0000     nop                      	nop
001504   0000     nop                      	nop
001506   0000     nop                      	nop
001508   0000     nop                      	nop
00150a   0000     nop                      	nop
00150c   0000     nop                      	nop
00150e   0000     nop                      	nop
001510   0000     nop                      	nop
001512   0000     nop                      	nop
001514   0000     nop                      	nop
001516   0000     nop                      	nop
001518   0000     nop                      	nop
00151a   0000     nop                      	nop
00151c   0000     nop                      	nop
00151e   0000     nop                      	nop
001520   0000     nop                      	nop
001522   0000     nop                      	nop
001524   0000     nop                      	nop
001526   0000     nop                      	nop
001528   0000     nop                      	nop
00152a   0000     nop                      	nop
00152c   0000     nop                      	nop
00152e   0000     nop                      	nop
001530   0000     nop                      	nop
001532   0000     nop                      	nop
001534   0000     nop                      	nop
001536   0000     nop                      	nop
001538   0000     nop                      	nop
00153a   0000     nop                      	nop
00153c   0000     nop                      	nop
00153e   0000     nop                      	nop
001540   0000     nop                      	nop
001542   0000     nop                      	nop
001544   0000     nop                      	nop
001546   0000     nop                      	nop
001548   0000     nop                      	nop
00154a   0000     nop                      	nop
00154c   0000     nop                      	nop
00154e   0000     nop                      	nop
001550   0000     nop                      	nop
001552   0000     nop                      	nop
001554   0000     nop                      	nop
001556   0000     nop                      	nop
001558   0000     nop                      	nop
00155a   0000     nop                      	nop
00155c   0000     nop                      	nop
00155e   0000     nop                      	nop
001560   0000     nop                      	nop
001562   0000     nop                      	nop
001564   0000     nop                      	nop
001566   0000     nop                      	nop
001568   0000     nop                      	nop
00156a   0000     nop                      	nop
00156c   0000     nop                      	nop
00156e   0000     nop                      	nop
001570   0000     nop                      	nop
001572   0000     nop                      	nop
001574   0000     nop                      	nop
001576   0000     nop                      	nop
001578   0000     nop                      	nop
00157a   0000     nop                      	nop
00157c   0000     nop                      	nop
00157e   0000     nop                      	nop
001580   0000     nop                      	nop
001582   0000     nop                      	nop
001584   0000     nop                      	nop
001586   0000     nop                      	nop
001588   0000     nop                      	nop
00158a   0000     nop                      	nop
00158c   0000     nop                      	nop
00158e   0000     nop                      	nop
001590   0000     nop                      	nop
001592   0000     nop                      	nop
001594   0000     nop                      	nop
001596   0000     nop                      	nop
001598   0000     nop                      	nop
00159a   0000     nop                      	nop
00159c   0000     nop                      	nop
00159e   0000     nop                      	nop
0015a0   0000     nop                      	nop
0015a2   0000     nop                      	nop
0015a4   0000     nop                      	nop
0015a6   0000     nop                      	nop
0015a8   0000     nop                      	nop
0015aa   0000     nop                      	nop
0015ac   0000     nop                      	nop
0015ae   0000     nop                      	nop
0015b0   0000     nop                      	nop
0015b2   0000     nop                      	nop
0015b4   0000     nop                      	nop
0015b6   0000     nop                      	nop
0015b8   0000     nop                      	nop
0015ba   0000     nop                      	nop
0015bc   0000     nop                      	nop
0015be   0000     nop                      	nop
0015c0   0000     nop                      	nop
0015c2   0000     nop                      	nop
0015c4   0000     nop                      	nop
0015c6   0000     nop                      	nop
                                           	
                                           ;	.line	2482; meter_logger.c	PWM_PIN = 0;
0015c8   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
0015ca   0000     nop                      	nop
0015cc   0000     nop                      	nop
0015ce   0000     nop                      	nop
0015d0   0000     nop                      	nop
0015d2   0000     nop                      	nop
0015d4   0000     nop                      	nop
0015d6   0000     nop                      	nop
0015d8   0000     nop                      	nop
0015da   0000     nop                      	nop
0015dc   0000     nop                      	nop
0015de   0000     nop                      	nop
0015e0   0000     nop                      	nop
0015e2   0000     nop                      	nop
0015e4   0000     nop                      	nop
0015e6   0000     nop                      	nop
0015e8   0000     nop                      	nop
0015ea   0000     nop                      	nop
0015ec   0000     nop                      	nop
0015ee   0000     nop                      	nop
0015f0   0000     nop                      	nop
0015f2   0000     nop                      	nop
0015f4   0000     nop                      	nop
0015f6   0000     nop                      	nop
0015f8   0000     nop                      	nop
0015fa   0000     nop                      	nop
0015fc   0000     nop                      	nop
0015fe   0000     nop                      	nop
001600   0000     nop                      	nop
001602   0000     nop                      	nop
001604   0000     nop                      	nop
001606   0000     nop                      	nop
001608   0000     nop                      	nop
00160a   0000     nop                      	nop
00160c   0000     nop                      	nop
00160e   0000     nop                      	nop
001610   0000     nop                      	nop
001612   0000     nop                      	nop
001614   0000     nop                      	nop
001616   0000     nop                      	nop
001618   0000     nop                      	nop
00161a   0000     nop                      	nop
00161c   0000     nop                      	nop
00161e   0000     nop                      	nop
001620   0000     nop                      	nop
001622   0000     nop                      	nop
001624   0000     nop                      	nop
001626   0000     nop                      	nop
001628   0000     nop                      	nop
00162a   0000     nop                      	nop
00162c   0000     nop                      	nop
00162e   0000     nop                      	nop
001630   0000     nop                      	nop
001632   0000     nop                      	nop
001634   0000     nop                      	nop
001636   0000     nop                      	nop
001638   0000     nop                      	nop
00163a   0000     nop                      	nop
00163c   0000     nop                      	nop
00163e   0000     nop                      	nop
001640   0000     nop                      	nop
001642   0000     nop                      	nop
001644   0000     nop                      	nop
001646   0000     nop                      	nop
001648   0000     nop                      	nop
00164a   0000     nop                      	nop
00164c   0000     nop                      	nop
00164e   0000     nop                      	nop
001650   0000     nop                      	nop
001652   0000     nop                      	nop
001654   0000     nop                      	nop
001656   0000     nop                      	nop
001658   0000     nop                      	nop
00165a   0000     nop                      	nop
00165c   0000     nop                      	nop
00165e   0000     nop                      	nop
001660   0000     nop                      	nop
001662   0000     nop                      	nop
001664   0000     nop                      	nop
001666   0000     nop                      	nop
001668   0000     nop                      	nop
00166a   0000     nop                      	nop
00166c   0000     nop                      	nop
00166e   0000     nop                      	nop
001670   0000     nop                      	nop
001672   0000     nop                      	nop
001674   0000     nop                      	nop
001676   0000     nop                      	nop
001678   0000     nop                      	nop
00167a   0000     nop                      	nop
00167c   0000     nop                      	nop
00167e   0000     nop                      	nop
001680   0000     nop                      	nop
001682   0000     nop                      	nop
001684   0000     nop                      	nop
001686   0000     nop                      	nop
001688   0000     nop                      	nop
00168a   0000     nop                      	nop
00168c   0000     nop                      	nop
00168e   0000     nop                      	nop
001690   0000     nop                      	nop
001692   0000     nop                      	nop
001694   0000     nop                      	nop
001696   0000     nop                      	nop
001698   0000     nop                      	nop
00169a   0000     nop                      	nop
00169c   0000     nop                      	nop
00169e   0000     nop                      	nop
0016a0   0000     nop                      	nop
0016a2   0000     nop                      	nop
0016a4   0000     nop                      	nop
0016a6   0000     nop                      	nop
0016a8   0000     nop                      	nop
0016aa   0000     nop                      	nop
0016ac   0000     nop                      	nop
0016ae   0000     nop                      	nop
0016b0   0000     nop                      	nop
0016b2   0000     nop                      	nop
0016b4   0000     nop                      	nop
0016b6   0000     nop                      	nop
0016b8   0000     nop                      	nop
0016ba   0000     nop                      	nop
0016bc   0000     nop                      	nop
0016be   0000     nop                      	nop
0016c0   0000     nop                      	nop
0016c2   0000     nop                      	nop
0016c4   0000     nop                      	nop
0016c6   0000     nop                      	nop
0016c8   0000     nop                      	nop
0016ca   0000     nop                      	nop
0016cc   0000     nop                      	nop
0016ce   0000     nop                      	nop
0016d0   0000     nop                      	nop
0016d2   0000     nop                      	nop
0016d4   0000     nop                      	nop
0016d6   0000     nop                      	nop
                                           	
                                           ;	.line	2620; meter_logger.c	PWM_PIN = 1;
0016d8   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
0016da   0000     nop                      	nop
0016dc   0000     nop                      	nop
0016de   0000     nop                      	nop
0016e0   0000     nop                      	nop
0016e2   0000     nop                      	nop
0016e4   0000     nop                      	nop
0016e6   0000     nop                      	nop
0016e8   0000     nop                      	nop
0016ea   0000     nop                      	nop
0016ec   0000     nop                      	nop
0016ee   0000     nop                      	nop
0016f0   0000     nop                      	nop
0016f2   0000     nop                      	nop
0016f4   0000     nop                      	nop
0016f6   0000     nop                      	nop
0016f8   0000     nop                      	nop
0016fa   0000     nop                      	nop
0016fc   0000     nop                      	nop
0016fe   0000     nop                      	nop
001700   0000     nop                      	nop
001702   0000     nop                      	nop
001704   0000     nop                      	nop
001706   0000     nop                      	nop
001708   0000     nop                      	nop
00170a   0000     nop                      	nop
00170c   0000     nop                      	nop
00170e   0000     nop                      	nop
001710   0000     nop                      	nop
001712   0000     nop                      	nop
001714   0000     nop                      	nop
001716   0000     nop                      	nop
001718   0000     nop                      	nop
00171a   0000     nop                      	nop
00171c   0000     nop                      	nop
00171e   0000     nop                      	nop
001720   0000     nop                      	nop
001722   0000     nop                      	nop
001724   0000     nop                      	nop
001726   0000     nop                      	nop
001728   0000     nop                      	nop
00172a   0000     nop                      	nop
00172c   0000     nop                      	nop
00172e   0000     nop                      	nop
001730   0000     nop                      	nop
001732   0000     nop                      	nop
001734   0000     nop                      	nop
001736   0000     nop                      	nop
001738   0000     nop                      	nop
00173a   0000     nop                      	nop
00173c   0000     nop                      	nop
00173e   0000     nop                      	nop
001740   0000     nop                      	nop
001742   0000     nop                      	nop
001744   0000     nop                      	nop
001746   0000     nop                      	nop
001748   0000     nop                      	nop
00174a   0000     nop                      	nop
00174c   0000     nop                      	nop
00174e   0000     nop                      	nop
001750   0000     nop                      	nop
001752   0000     nop                      	nop
001754   0000     nop                      	nop
001756   0000     nop                      	nop
001758   0000     nop                      	nop
00175a   0000     nop                      	nop
00175c   0000     nop                      	nop
00175e   0000     nop                      	nop
001760   0000     nop                      	nop
001762   0000     nop                      	nop
001764   0000     nop                      	nop
001766   0000     nop                      	nop
001768   0000     nop                      	nop
00176a   0000     nop                      	nop
00176c   0000     nop                      	nop
00176e   0000     nop                      	nop
001770   0000     nop                      	nop
001772   0000     nop                      	nop
001774   0000     nop                      	nop
001776   0000     nop                      	nop
001778   0000     nop                      	nop
00177a   0000     nop                      	nop
00177c   0000     nop                      	nop
00177e   0000     nop                      	nop
001780   0000     nop                      	nop
001782   0000     nop                      	nop
001784   0000     nop                      	nop
001786   0000     nop                      	nop
001788   0000     nop                      	nop
00178a   0000     nop                      	nop
00178c   0000     nop                      	nop
00178e   0000     nop                      	nop
001790   0000     nop                      	nop
001792   0000     nop                      	nop
001794   0000     nop                      	nop
001796   0000     nop                      	nop
001798   0000     nop                      	nop
00179a   0000     nop                      	nop
00179c   0000     nop                      	nop
00179e   0000     nop                      	nop
0017a0   0000     nop                      	nop
0017a2   0000     nop                      	nop
0017a4   0000     nop                      	nop
0017a6   0000     nop                      	nop
0017a8   0000     nop                      	nop
0017aa   0000     nop                      	nop
0017ac   0000     nop                      	nop
0017ae   0000     nop                      	nop
0017b0   0000     nop                      	nop
0017b2   0000     nop                      	nop
0017b4   0000     nop                      	nop
0017b6   0000     nop                      	nop
0017b8   0000     nop                      	nop
0017ba   0000     nop                      	nop
0017bc   0000     nop                      	nop
0017be   0000     nop                      	nop
0017c0   0000     nop                      	nop
0017c2   0000     nop                      	nop
0017c4   0000     nop                      	nop
0017c6   0000     nop                      	nop
0017c8   0000     nop                      	nop
0017ca   0000     nop                      	nop
0017cc   0000     nop                      	nop
0017ce   0000     nop                      	nop
0017d0   0000     nop                      	nop
0017d2   0000     nop                      	nop
0017d4   0000     nop                      	nop
0017d6   0000     nop                      	nop
0017d8   0000     nop                      	nop
0017da   0000     nop                      	nop
0017dc   0000     nop                      	nop
0017de   0000     nop                      	nop
0017e0   0000     nop                      	nop
0017e2   0000     nop                      	nop
0017e4   0000     nop                      	nop
0017e6   0000     nop                      	nop
                                           	
                                           ;	.line	2758; meter_logger.c	PWM_PIN = 0;
0017e8   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
0017ea   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0017ec   ffd9
0017ee   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_rx_disable	code
                                           _fsk_rx_disable:
                                           ;	.line	1234; meter_logger.c	void fsk_rx_disable() {
004de8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004dea   ffe5
004dec   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004dee   ffd9
                                           ;	.line	1235; meter_logger.c	PIE2bits.CMIE = 0;		// Disable comparator interrupt
004df0   9ca0     bcf     0xa0, 0x6, 0     	BCF	_PIE2bits, 6
004df2   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1236; meter_logger.c	codec_type = NONE;
004df4   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
004df6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004df8   ffd9
004dfa   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_rx_enable	code
                                           _fsk_rx_enable:
                                           ;	.line	1198; meter_logger.c	void fsk_rx_enable() {
0048bc   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0048be   ffe5
0048c0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0048c2   ffd9
                                           ;	.line	1199; meter_logger.c	fsk_proto.state = START_BIT_WAIT;
0048c4   0e02     movlw   0x2              	MOVLW	0x02
0048c6   0105     movlb   0x5              	BANKSEL	_fsk_proto
0048c8   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1200; meter_logger.c	fsk_proto.start_bit_time = 0;
0048ca   6b0a     clrf    0xa, 0x1         	CLRF	(_fsk_proto + 10), B
                                           ; removed redundant BANKSEL
0048cc   6b0b     clrf    0xb, 0x1         	CLRF	(_fsk_proto + 11), B
                                           ;	.line	1202; meter_logger.c	timer0_reload = TIMER0_FSK;
0048ce   0e9f     movlw   0x9f             	MOVLW	0x9f
0048d0   0105     movlb   0x5              	BANKSEL	_timer0_reload
0048d2   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
0048d4   0ef9     movlw   0xf9             	MOVLW	0xf9
                                           ; removed redundant BANKSEL
0048d6   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
                                           ;	.line	1204; meter_logger.c	codec_type = FSK_RX;
0048d8   0e04     movlw   0x4              	MOVLW	0x04
0048da   0105     movlb   0x5              	BANKSEL	_codec_type
0048dc   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1207; meter_logger.c	T0CONbits.TMR0ON = 1;
0048de   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1208; meter_logger.c	T0CONbits.T0PS0 = 0;
0048e0   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1209; meter_logger.c	T0CONbits.T0PS1 = 0;
0048e2   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1210; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
0048e4   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1211; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
0048e6   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1212; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
0048e8   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1213; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
0048ea   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1214; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
0048ec   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1215; meter_logger.c	INTCONbits.TMR0IE = 0;		// Dont enable TMR0 Interrupt
0048ee   9af2     bcf     0xf2, 0x5, 0     	BCF	_INTCONbits, 5
                                           ;	.line	1218; meter_logger.c	CVRCONbits.CVREF = 0xf;	// 0V
0048f0   88b5     bsf     0xb5, 0x4, 0     	BSF	_CVRCONbits, 4
                                           ;	.line	1220; meter_logger.c	CVRCONbits.CVRSS = 0;	// VDD – VSS
0048f2   98b5     bcf     0xb5, 0x4, 0     	BCF	_CVRCONbits, 4
                                           ;	.line	1221; meter_logger.c	CVRCONbits.CVRR = 0;	// high range, 0.25 CVRSRC to 0.75 CVRSRC, with CVRSRC/32 step size
0048f4   9ab5     bcf     0xb5, 0x5, 0     	BCF	_CVRCONbits, 5
                                           ;	.line	1222; meter_logger.c	CVRCONbits.CVR = 9;		// 2,65625 V
0048f6   50b5     movf    0xb5, 0, 0       	MOVF	_CVRCONbits, W
0048f8   0bf0     andlw   0xf0             	ANDLW	0xf0
0048fa   0909     iorlw   0x9              	IORLW	0x09
0048fc   6eb5     movwf   0xb5, 0          	MOVWF	_CVRCONbits
                                           ;	.line	1223; meter_logger.c	CVRCONbits.CVROE = 0;	// Comparator VREF Output disabled, CVREF voltage is disconnected from the RA2/AN2/VREF-/CVREF pin
0048fe   9cb5     bcf     0xb5, 0x6, 0     	BCF	_CVRCONbits, 6
                                           ;	.line	1224; meter_logger.c	CVRCONbits.CVREN = 1;	// Comparator Voltage Reference Enable bit
004900   8eb5     bsf     0xb5, 0x7, 0     	BSF	_CVRCONbits, 7
                                           ;	.line	1226; meter_logger.c	CMCONbits.CM = 0x6;		// four inputs multiplexed to two comparators
004902   50b4     movf    0xb4, 0, 0       	MOVF	_CMCONbits, W
004904   0bf8     andlw   0xf8             	ANDLW	0xf8
004906   0906     iorlw   0x6              	IORLW	0x06
004908   6eb4     movwf   0xb4, 0          	MOVWF	_CMCONbits
                                           ;	.line	1227; meter_logger.c	CMCONbits.CIS = 0;		// multiplexed to RA0/AN0 and RA1/AN1
00490a   96b4     bcf     0xb4, 0x3, 0     	BCF	_CMCONbits, 3
                                           ;	.line	1228; meter_logger.c	CMCONbits.C1INV = 1;	// inverted output, C1 VIN+ < C1 VIN-
00490c   88b4     bsf     0xb4, 0x4, 0     	BSF	_CMCONbits, 4
                                           ;	.line	1230; meter_logger.c	IPR2bits.CMIP = 1;		// high priority
00490e   8ca2     bsf     0xa2, 0x6, 0     	BSF	_IPR2bits, 6
                                           ;	.line	1231; meter_logger.c	PIE2bits.CMIE = 1;		// Enable comparator interrupt
004910   8ca0     bsf     0xa0, 0x6, 0     	BSF	_PIE2bits, 6
004912   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004914   ffd9
004916   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_disable	code
                                           _fsk_tx_disable:
                                           ;	.line	1192; meter_logger.c	void fsk_tx_disable() {
004d90   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004d92   ffe5
004d94   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004d96   ffd9
004d98   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1193; meter_logger.c	codec_type = NONE;
004d9a   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1194; meter_logger.c	T0CONbits.TMR0ON = 0;	// Disable TMR0 
004d9c   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1195; meter_logger.c	PIE2bits.CMIE = 1;		// Disable comparator interrupt
004d9e   8ca0     bsf     0xa0, 0x6, 0     	BSF	_PIE2bits, 6
004da0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004da2   ffd9
004da4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_enable	code
                                           _fsk_tx_enable:
                                           ;	.line	1174; meter_logger.c	void fsk_tx_enable() {
004b10   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004b12   ffe5
004b14   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004b16   ffd9
                                           ;	.line	1175; meter_logger.c	timer0_reload = TIMER0_FSK;
004b18   0e9f     movlw   0x9f             	MOVLW	0x9f
004b1a   0105     movlb   0x5              	BANKSEL	_timer0_reload
004b1c   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
004b1e   0ef9     movlw   0xf9             	MOVLW	0xf9
                                           ; removed redundant BANKSEL
004b20   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
004b22   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	1177; meter_logger.c	fsk_proto.state = INIT_STATE;
004b24   6b00     clrf    0, 0x1           	CLRF	_fsk_proto, B
                                           ;	.line	1178; meter_logger.c	codec_type = FSK_TX;
004b26   0e05     movlw   0x5              	MOVLW	0x05
004b28   0105     movlb   0x5              	BANKSEL	_codec_type
004b2a   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1181; meter_logger.c	T0CONbits.TMR0ON = 1;
004b2c   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1182; meter_logger.c	T0CONbits.T0PS0 = 0;
004b2e   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1183; meter_logger.c	T0CONbits.T0PS1 = 0;
004b30   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1184; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004b32   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1185; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004b34   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1186; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004b36   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1187; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004b38   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1188; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004b3a   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1189; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004b3c   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
004b3e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004b40   ffd9
004b42   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_tx_byte	code
                                           _rs232_tx_byte:
                                           ;	.line	1164; meter_logger.c	void rs232_tx_byte(unsigned char c) {
004b44   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004b46   ffe5
004b48   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004b4a   ffd9
004b4c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004b4e   ffe5
004b50   0e02     movlw   0x2              	MOVLW	0x02
004b52   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004b54   f000
                                           ;	.line	1165; meter_logger.c	rs232_proto.data = c;
004b56   5000     movf    0, 0, 0          	MOVF	r0x00, W
004b58   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
004b5a   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	1166; meter_logger.c	rs232_proto.data_len = 8;
004b5c   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
004b5e   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	1167; meter_logger.c	T0CONbits.TMR0ON = 1;		// start timer 0
004b60   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1168; meter_logger.c	INTCONbits.TMR0IF = 1;		// enter timer interrupt handler now
004b62   84f2     bsf     0xf2, 0x2, 0     	BSF	_INTCONbits, 2
                                           _00885_DS_:
004b64   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	1169; meter_logger.c	while (rs232_proto.data_len) {
004b66   5126     movf    0x26, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
004b68   e1fd     bnz     0x4b64           	BNZ	_00885_DS_
004b6a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004b6c   f000
004b6e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004b70   ffd9
004b72   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_rx_disable	code
                                           _rs232_rx_disable:
                                           ;	.line	1158; meter_logger.c	void rs232_rx_disable() {
004da6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004da8   ffe5
004daa   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004dac   ffd9
                                           ;	.line	1159; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
004dae   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
004db0   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1160; meter_logger.c	codec_type = NONE;
004db2   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1161; meter_logger.c	T0CONbits.TMR0ON = 0;
004db4   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
004db6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004db8   ffd9
004dba   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_rx_enable	code
                                           _rs232_rx_enable:
                                           ;	.line	1134; meter_logger.c	void rs232_rx_enable(unsigned int t) {
00496e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004970   ffe5
004972   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004974   ffd9
004976   0e02     movlw   0x2              	MOVLW	0x02
004978   cfdb     movff   0xfdb, 0x548     	MOVFF	PLUSW2, _timer0_reload
00497a   f548
00497c   0e03     movlw   0x3              	MOVLW	0x03
00497e   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, (_timer0_reload + 1)
004980   f549
                                           ;	.line	1135; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
004982   0e02     movlw   0x2              	MOVLW	0x02
004984   0105     movlb   0x5              	BANKSEL	_rs232_proto
004986   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1136; meter_logger.c	rs232_proto.data_len = 0;
004988   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1140; meter_logger.c	codec_type = RS232_RX;
00498a   0e02     movlw   0x2              	MOVLW	0x02
00498c   0105     movlb   0x5              	BANKSEL	_codec_type
00498e   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1143; meter_logger.c	T0CONbits.TMR0ON = 0;
004990   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1144; meter_logger.c	T0CONbits.T0PS0 = 0;
004992   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1145; meter_logger.c	T0CONbits.T0PS1 = 0;
004994   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1146; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004996   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1147; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004998   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1148; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
00499a   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1149; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
00499c   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1150; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
00499e   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1151; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
0049a0   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1152; meter_logger.c	INTCONbits.TMR0IF = 0;
0049a2   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1154; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
0049a4   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1155; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
0049a6   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
0049a8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0049aa   ffd9
0049ac   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_tx_disable	code
                                           _rs232_tx_disable:
                                           ;	.line	1128; meter_logger.c	void rs232_tx_disable() {
004dbc   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004dbe   ffe5
004dc0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004dc2   ffd9
004dc4   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1129; meter_logger.c	codec_type = NONE;
004dc6   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1130; meter_logger.c	IR_LED_PIN = 0;				// no need to set it to inverted idle
004dc8   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1131; meter_logger.c	T0CONbits.TMR0ON = 0;
004dca   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
004dcc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004dce   ffd9
004dd0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_tx_enable	code
                                           _rs232_tx_enable:
                                           ;	.line	1102; meter_logger.c	void rs232_tx_enable(unsigned int t) {
0049ee   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0049f0   ffe5
0049f2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0049f4   ffd9
0049f6   0e02     movlw   0x2              	MOVLW	0x02
0049f8   cfdb     movff   0xfdb, 0x548     	MOVFF	PLUSW2, _timer0_reload
0049fa   f548
0049fc   0e03     movlw   0x3              	MOVLW	0x03
0049fe   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, (_timer0_reload + 1)
004a00   f549
004a02   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	1105; meter_logger.c	rs232_proto.state = INIT_STATE;
004a04   6b23     clrf    0x23, 0x1        	CLRF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1106; meter_logger.c	rs232_proto.data_len = 0;
004a06   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1108; meter_logger.c	IR_LED_PIN = 0;				// inverted rs232 output on ir, idle = no ir light
004a08   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1110; meter_logger.c	codec_type = RS232_TX;
004a0a   0e03     movlw   0x3              	MOVLW	0x03
004a0c   0105     movlb   0x5              	BANKSEL	_codec_type
004a0e   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1113; meter_logger.c	T0CONbits.TMR0ON = 0;
004a10   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1114; meter_logger.c	T0CONbits.T0PS0 = 0;
004a12   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1115; meter_logger.c	T0CONbits.T0PS1 = 0;
004a14   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1116; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004a16   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1117; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004a18   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1118; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004a1a   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1119; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004a1c   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1120; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004a1e   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1121; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004a20   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1122; meter_logger.c	INTCONbits.TMR0IF = 0;
004a22   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1125; meter_logger.c	T0CONbits.TMR0ON = 0;		// timer 0 started in rs232_tx_byte()
004a24   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
004a26   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004a28   ffd9
004a2a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_ir_disable	code
                                           _testo_ir_disable:
                                           ;	.line	1097; meter_logger.c	void testo_ir_disable() {
004dfc   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004dfe   ffe5
004e00   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004e02   ffd9
004e04   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1098; meter_logger.c	codec_type = NONE;
004e06   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1099; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
004e08   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
004e0a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004e0c   ffd9
004e0e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_ir_enable	code
                                           _testo_ir_enable:
                                           ;	.line	1073; meter_logger.c	void testo_ir_enable() {
004a2c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004a2e   ffe5
004a30   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004a32   ffd9
004a34   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	1074; meter_logger.c	testo_ir_proto.state = INIT_STATE;
004a36   6b1d     clrf    0x1d, 0x1        	CLRF	_testo_ir_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1075; meter_logger.c	testo_ir_proto.start_bit_len = 0;
004a38   6b1f     clrf    0x1f, 0x1        	CLRF	(_testo_ir_proto + 2), B
                                           ;	.line	1077; meter_logger.c	timer0_reload = TIMER0_TESTO;
004a3a   0e23     movlw   0x23             	MOVLW	0x23
004a3c   0105     movlb   0x5              	BANKSEL	_timer0_reload
004a3e   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
004a40   0ef3     movlw   0xf3             	MOVLW	0xf3
                                           ; removed redundant BANKSEL
004a42   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
                                           ;	.line	1079; meter_logger.c	codec_type = TESTO;
004a44   0e01     movlw   0x1              	MOVLW	0x01
004a46   0105     movlb   0x5              	BANKSEL	_codec_type
004a48   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1082; meter_logger.c	T0CONbits.TMR0ON = 0;
004a4a   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1083; meter_logger.c	T0CONbits.T0PS0 = 0;
004a4c   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1084; meter_logger.c	T0CONbits.T0PS1 = 0;
004a4e   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1085; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004a50   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1086; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004a52   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1087; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004a54   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1088; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004a56   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1089; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004a58   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1090; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004a5a   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1091; meter_logger.c	INTCONbits.TMR0IF = 0;
004a5c   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1093; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
004a5e   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1094; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004a60   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
004a62   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004a64   ffd9
004a66   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_valid_err_corr	code
                                           _testo_valid_err_corr:
                                           ;	.line	1018; meter_logger.c	unsigned char testo_valid_err_corr(unsigned int c) {
0035ac   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0035ae   ffe5
0035b0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0035b2   ffd9
0035b4   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0035b6   ffe5
0035b8   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0035ba   ffe5
0035bc   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0035be   ffe5
0035c0   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0035c2   ffe5
0035c4   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0035c6   ffe5
0035c8   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0035ca   ffe5
0035cc   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0035ce   ffe5
0035d0   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
0035d2   ffe5
0035d4   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
0035d6   ffe5
0035d8   0e02     movlw   0x2              	MOVLW	0x02
0035da   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0035dc   f000
0035de   0e03     movlw   0x3              	MOVLW	0x03
0035e0   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0035e2   f001
                                           ;	.line	1025; meter_logger.c	calculated_err_corr_bit = 0;
0035e4   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1026; meter_logger.c	for (i = 0; i < 8; i++) {
0035e6   0e78     movlw   0x78             	MOVLW	0x78
0035e8   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
0035ea   6e03     movwf   0x3, 0           	MOVWF	r0x03
0035ec   6a04     clrf    0x4, 0           	CLRF	r0x04
0035ee   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00773_DS_:
                                           ;	.line	1027; meter_logger.c	calculated_err_corr_bit ^= (((c & 0x78) & (1 << i)) != 0);   // 0b01111000
0035f0   0e01     movlw   0x1              	MOVLW	0x01
0035f2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0035f4   0e00     movlw   0                	MOVLW	0x00
0035f6   6e07     movwf   0x7, 0           	MOVWF	r0x07
0035f8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0035fa   e006     bz      0x3608           	BZ	_00815_DS_
0035fc   6ce8     negf    0xe8, 0          	NEGF	WREG
0035fe   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00816_DS_:
003600   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
003602   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003604   0f01     addlw   0x1              	ADDLW	0x01
003606   e3fc     bnc     0x3600           	BNC	_00816_DS_
                                           _00815_DS_:
003608   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00360a   1606     andwf   0x6, 0x1, 0      	ANDWF	r0x06, F
00360c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00360e   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003610   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003612   e105     bnz     0x361e           	BNZ	_00818_DS_
003614   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003616   e103     bnz     0x361e           	BNZ	_00818_DS_
003618   6a06     clrf    0x6, 0           	CLRF	r0x06
00361a   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
00361c   d001     bra     0x3620           	BRA	_00819_DS_
                                           _00818_DS_:
00361e   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00819_DS_:
003620   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003622   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003624   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003626   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003628   6a06     clrf    0x6, 0           	CLRF	r0x06
00362a   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
00362c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00362e   6e07     movwf   0x7, 0           	MOVWF	r0x07
003630   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003632   1807     xorwf   0x7, 0, 0        	XORWF	r0x07, W
003634   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1026; meter_logger.c	for (i = 0; i < 8; i++) {
003636   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
003638   0e08     movlw   0x8              	MOVLW	0x08
00363a   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
00363c   e3d9     bnc     0x35f0           	BNC	_00773_DS_
                                           ;	.line	1030; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
00363e   4402     rlncf   0x2, 0, 0        	RLNCF	r0x02, W
003640   0bfe     andlw   0xfe             	ANDLW	0xfe
003642   6e03     movwf   0x3, 0           	MOVWF	r0x03
                                           ;	.line	1033; meter_logger.c	calculated_err_corr_bit = 0;
003644   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1034; meter_logger.c	for (i = 0; i < 8; i++) {
003646   0ee6     movlw   0xe6             	MOVLW	0xe6
003648   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
00364a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00364c   6a05     clrf    0x5, 0           	CLRF	r0x05
00364e   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00775_DS_:
                                           ;	.line	1035; meter_logger.c	calculated_err_corr_bit ^= (((c & 0xe6) & (1 << i)) != 0);   // 0b11100110
003650   0e01     movlw   0x1              	MOVLW	0x01
003652   6e07     movwf   0x7, 0           	MOVWF	r0x07
003654   0e00     movlw   0                	MOVLW	0x00
003656   6e08     movwf   0x8, 0           	MOVWF	r0x08
003658   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00365a   e006     bz      0x3668           	BZ	_00823_DS_
00365c   6ce8     negf    0xe8, 0          	NEGF	WREG
00365e   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00824_DS_:
003660   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003662   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003664   0f01     addlw   0x1              	ADDLW	0x01
003666   e3fc     bnc     0x3660           	BNC	_00824_DS_
                                           _00823_DS_:
003668   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00366a   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
00366c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00366e   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003670   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003672   e105     bnz     0x367e           	BNZ	_00826_DS_
003674   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003676   e103     bnz     0x367e           	BNZ	_00826_DS_
003678   6a07     clrf    0x7, 0           	CLRF	r0x07
00367a   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
00367c   d001     bra     0x3680           	BRA	_00827_DS_
                                           _00826_DS_:
00367e   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00827_DS_:
003680   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003682   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003684   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003686   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003688   6a07     clrf    0x7, 0           	CLRF	r0x07
00368a   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
00368c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00368e   6e08     movwf   0x8, 0           	MOVWF	r0x08
003690   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003692   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003694   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1034; meter_logger.c	for (i = 0; i < 8; i++) {
003696   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003698   0e08     movlw   0x8              	MOVLW	0x08
00369a   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
00369c   e3d9     bnc     0x3650           	BNC	_00775_DS_
                                           ;	.line	1037; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
00369e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0036a0   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1038; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
0036a2   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0036a4   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
                                           ;	.line	1041; meter_logger.c	calculated_err_corr_bit = 0;
0036a6   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1042; meter_logger.c	for (i = 0; i < 8; i++) {
0036a8   0ed5     movlw   0xd5             	MOVLW	0xd5
0036aa   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
0036ac   6e04     movwf   0x4, 0           	MOVWF	r0x04
0036ae   6a05     clrf    0x5, 0           	CLRF	r0x05
0036b0   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00777_DS_:
                                           ;	.line	1043; meter_logger.c	calculated_err_corr_bit ^= (((c & 0xd5) & (1 << i)) != 0);   // 0b11010101
0036b2   0e01     movlw   0x1              	MOVLW	0x01
0036b4   6e07     movwf   0x7, 0           	MOVWF	r0x07
0036b6   0e00     movlw   0                	MOVLW	0x00
0036b8   6e08     movwf   0x8, 0           	MOVWF	r0x08
0036ba   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0036bc   e006     bz      0x36ca           	BZ	_00832_DS_
0036be   6ce8     negf    0xe8, 0          	NEGF	WREG
0036c0   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00833_DS_:
0036c2   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
0036c4   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
0036c6   0f01     addlw   0x1              	ADDLW	0x01
0036c8   e3fc     bnc     0x36c2           	BNC	_00833_DS_
                                           _00832_DS_:
0036ca   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0036cc   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
0036ce   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0036d0   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
0036d2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0036d4   e105     bnz     0x36e0           	BNZ	_00835_DS_
0036d6   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0036d8   e103     bnz     0x36e0           	BNZ	_00835_DS_
0036da   6a07     clrf    0x7, 0           	CLRF	r0x07
0036dc   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
0036de   d001     bra     0x36e2           	BRA	_00836_DS_
                                           _00835_DS_:
0036e0   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00836_DS_:
0036e2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0036e4   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
0036e6   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
0036e8   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0036ea   6a07     clrf    0x7, 0           	CLRF	r0x07
0036ec   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
0036ee   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0036f0   6e08     movwf   0x8, 0           	MOVWF	r0x08
0036f2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0036f4   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
0036f6   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1042; meter_logger.c	for (i = 0; i < 8; i++) {
0036f8   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
0036fa   0e08     movlw   0x8              	MOVLW	0x08
0036fc   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
0036fe   e3d9     bnc     0x36b2           	BNC	_00777_DS_
                                           ;	.line	1045; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003700   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003702   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1046; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003704   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003706   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
                                           ;	.line	1049; meter_logger.c	calculated_err_corr_bit = 0;
003708   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1050; meter_logger.c	for (i = 0; i < 8; i++) {
00370a   0e8b     movlw   0x8b             	MOVLW	0x8b
00370c   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
00370e   6e04     movwf   0x4, 0           	MOVWF	r0x04
003710   6a05     clrf    0x5, 0           	CLRF	r0x05
003712   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00779_DS_:
                                           ;	.line	1051; meter_logger.c	calculated_err_corr_bit ^= (((c & 0x8b) & (1 << i)) != 0);   // 0b10001011
003714   0e01     movlw   0x1              	MOVLW	0x01
003716   6e07     movwf   0x7, 0           	MOVWF	r0x07
003718   0e00     movlw   0                	MOVLW	0x00
00371a   6e08     movwf   0x8, 0           	MOVWF	r0x08
00371c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00371e   e006     bz      0x372c           	BZ	_00841_DS_
003720   6ce8     negf    0xe8, 0          	NEGF	WREG
003722   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00842_DS_:
003724   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003726   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003728   0f01     addlw   0x1              	ADDLW	0x01
00372a   e3fc     bnc     0x3724           	BNC	_00842_DS_
                                           _00841_DS_:
00372c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00372e   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003730   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003732   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003734   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003736   e105     bnz     0x3742           	BNZ	_00844_DS_
003738   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00373a   e103     bnz     0x3742           	BNZ	_00844_DS_
00373c   6a07     clrf    0x7, 0           	CLRF	r0x07
00373e   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003740   d001     bra     0x3744           	BRA	_00845_DS_
                                           _00844_DS_:
003742   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00845_DS_:
003744   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003746   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003748   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
00374a   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
00374c   6a07     clrf    0x7, 0           	CLRF	r0x07
00374e   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003750   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003752   6e08     movwf   0x8, 0           	MOVWF	r0x08
003754   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003756   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003758   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1050; meter_logger.c	for (i = 0; i < 8; i++) {
00375a   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
00375c   0e08     movlw   0x8              	MOVLW	0x08
00375e   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003760   e3d9     bnc     0x3714           	BNC	_00779_DS_
                                           ;	.line	1053; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003762   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003764   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1064; meter_logger.c	if ((c >> 8) == calculated_err_corr) {
003766   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003768   6e00     movwf   0, 0             	MOVWF	r0x00
00376a   6a01     clrf    0x1, 0           	CLRF	r0x01
00376c   6a02     clrf    0x2, 0           	CLRF	r0x02
00376e   5000     movf    0, 0, 0          	MOVF	r0x00, W
003770   1803     xorwf   0x3, 0, 0        	XORWF	r0x03, W
003772   e103     bnz     0x377a           	BNZ	_00849_DS_
003774   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003776   1802     xorwf   0x2, 0, 0        	XORWF	r0x02, W
003778   e001     bz      0x377c           	BZ	_00850_DS_
                                           _00849_DS_:
00377a   d002     bra     0x3780           	BRA	_00771_DS_
                                           _00850_DS_:
                                           ;	.line	1065; meter_logger.c	return 1;
00377c   0e01     movlw   0x1              	MOVLW	0x01
00377e   d001     bra     0x3782           	BRA	_00781_DS_
                                           _00771_DS_:
                                           ;	.line	1068; meter_logger.c	return 0;
003780   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00781_DS_:
003782   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
003784   f008
003786   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003788   f007
00378a   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
00378c   f006
00378e   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003790   f005
003792   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003794   f004
003796   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003798   f003
00379a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00379c   f002
00379e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0037a0   f001
0037a2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0037a4   f000
0037a6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0037a8   ffd9
0037aa   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__reverse	code
                                           _reverse:
                                           ;	.line	1010; meter_logger.c	unsigned char reverse(unsigned char b) {
00473c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00473e   ffe5
004740   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004742   ffd9
004744   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004746   ffe5
004748   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00474a   ffe5
00474c   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00474e   ffe5
004750   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004752   ffe5
004754   0e02     movlw   0x2              	MOVLW	0x02
004756   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004758   f000
                                           ;	.line	1012; meter_logger.c	c  = ((b >>  1) & 0x55) | ((b <<  1) & 0xaa);
00475a   4000     rrncf   0, 0, 0          	RRNCF	r0x00, W
00475c   0b7f     andlw   0x7f             	ANDLW	0x7f
00475e   6e01     movwf   0x1, 0           	MOVWF	r0x01
004760   0e55     movlw   0x55             	MOVLW	0x55
004762   1601     andwf   0x1, 0x1, 0      	ANDWF	r0x01, F
004764   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
004766   0bfe     andlw   0xfe             	ANDLW	0xfe
004768   6e02     movwf   0x2, 0           	MOVWF	r0x02
00476a   0eaa     movlw   0xaa             	MOVLW	0xaa
00476c   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
00476e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004770   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1013; meter_logger.c	c |= ((b >>  2) & 0x33) | ((b <<  2) & 0xcc);
004772   4000     rrncf   0, 0, 0          	RRNCF	r0x00, W
004774   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
004776   0b3f     andlw   0x3f             	ANDLW	0x3f
004778   6e02     movwf   0x2, 0           	MOVWF	r0x02
00477a   0e33     movlw   0x33             	MOVLW	0x33
00477c   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
00477e   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
004780   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
004782   0bfc     andlw   0xfc             	ANDLW	0xfc
004784   6e03     movwf   0x3, 0           	MOVWF	r0x03
004786   0ecc     movlw   0xcc             	MOVLW	0xcc
004788   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
00478a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00478c   1202     iorwf   0x2, 0x1, 0      	IORWF	r0x02, F
00478e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004790   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1014; meter_logger.c	c |= ((b >>  4) & 0x0f) | ((b <<  4) & 0xf0);
004792   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
004794   0b0f     andlw   0xf              	ANDLW	0x0f
004796   6e02     movwf   0x2, 0           	MOVWF	r0x02
004798   0e0f     movlw   0xf              	MOVLW	0x0f
00479a   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
00479c   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
00479e   0bf0     andlw   0xf0             	ANDLW	0xf0
0047a0   6e03     movwf   0x3, 0           	MOVWF	r0x03
0047a2   0ef0     movlw   0xf0             	MOVLW	0xf0
0047a4   1403     andwf   0x3, 0, 0        	ANDWF	r0x03, W
0047a6   6e00     movwf   0, 0             	MOVWF	r0x00
0047a8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0047aa   1202     iorwf   0x2, 0x1, 0      	IORWF	r0x02, F
0047ac   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0047ae   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1015; meter_logger.c	return(c);
0047b0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0047b2   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0047b4   f003
0047b6   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0047b8   f002
0047ba   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0047bc   f001
0047be   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0047c0   f000
0047c2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0047c4   ffd9
0047c6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__my_usart_open	code
                                           _my_usart_open:
                                           ;	.line	980; meter_logger.c	void my_usart_open() {
004c5a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004c5c   ffe5
004c5e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004c60   ffd9
                                           ;	.line	981; meter_logger.c	SPBRG = 103;					// 8MHz => 19230 baud
004c62   0e67     movlw   0x67             	MOVLW	0x67
004c64   6eaf     movwf   0xaf, 0          	MOVWF	_SPBRG
                                           ;	.line	982; meter_logger.c	TXSTAbits.BRGH = 1;	// (0 = low speed)
004c66   84ac     bsf     0xac, 0x2, 0     	BSF	_TXSTAbits, 2
                                           ;	.line	983; meter_logger.c	TXSTAbits.SYNC = 0;	// (0 = asynchronous)
004c68   98ac     bcf     0xac, 0x4, 0     	BCF	_TXSTAbits, 4
                                           ;	.line	984; meter_logger.c	BAUDCONbits.BRG16 = 1;
004c6a   86b8     bsf     0xb8, 0x3, 0     	BSF	_BAUDCONbits, 3
                                           ;	.line	987; meter_logger.c	RCSTAbits.SPEN = 1; // (1 = serial port enabled)
004c6c   8eab     bsf     0xab, 0x7, 0     	BSF	_RCSTAbits, 7
                                           ;	.line	990; meter_logger.c	PIE1bits.TXIE = 0; // (1 = enabled)
004c6e   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
                                           ;	.line	991; meter_logger.c	IPR1bits.TXIP = 0; // USART Tx on low priority interrupt
004c70   989f     bcf     0x9f, 0x4, 0     	BCF	_IPR1bits, 4
                                           ;	.line	994; meter_logger.c	PIE1bits.RCIE = 1; // (1 = enabled)
004c72   8a9d     bsf     0x9d, 0x5, 0     	BSF	_PIE1bits, 5
                                           ;	.line	995; meter_logger.c	IPR1bits.RCIP = 0; // USART Rx on low priority interrupt
004c74   9a9f     bcf     0x9f, 0x5, 0     	BCF	_IPR1bits, 5
                                           ;	.line	998; meter_logger.c	TXSTAbits.TX9 = 0; // (0 = 8-bit transmit)
004c76   9cac     bcf     0xac, 0x6, 0     	BCF	_TXSTAbits, 6
                                           ;	.line	1001; meter_logger.c	RCSTAbits.RX9 = 0; // (0 = 8-bit reception)
004c78   9cab     bcf     0xab, 0x6, 0     	BCF	_RCSTAbits, 6
                                           ;	.line	1004; meter_logger.c	RCSTAbits.CREN = 1; // (1 = Enables receiver)
004c7a   88ab     bsf     0xab, 0x4, 0     	BSF	_RCSTAbits, 4
                                           ;	.line	1007; meter_logger.c	TXSTAbits.TXEN = 1; // (1 = transmit enabled)
004c7c   8aac     bsf     0xac, 0x5, 0     	BSF	_TXSTAbits, 5
004c7e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004c80   ffd9
004c82   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__init_system	code
                                           _init_system:
                                           ;	.line	879; meter_logger.c	void init_system() {
004918   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00491a   ffe5
00491c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00491e   ffd9
                                           ;	.line	881; meter_logger.c	TRIS_COMP1 = INPUT_STATE;		// as input
004920   8092     bsf     0x92, 0, 0       	BSF	_TRISAbits, 0
                                           ;	.line	882; meter_logger.c	TRIS_COMP2 = INPUT_STATE;		// as input
004922   8292     bsf     0x92, 0x1, 0     	BSF	_TRISAbits, 1
                                           ;	.line	884; meter_logger.c	TRIS_IR_PIN = INPUT_STATE;		// as input
004924   8093     bsf     0x93, 0, 0       	BSF	_TRISBbits, 0
                                           ;	.line	886; meter_logger.c	TRIS_LED_PIN = OUTPUT_STATE;	// as output
004926   9893     bcf     0x93, 0x4, 0     	BCF	_TRISBbits, 4
                                           ;	.line	887; meter_logger.c	LED_PIN = 0;					// and clear
004928   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	889; meter_logger.c	TRIS_IR_LED_PIN = OUTPUT_STATE;	// as output
00492a   9293     bcf     0x93, 0x1, 0     	BCF	_TRISBbits, 1
                                           ;	.line	890; meter_logger.c	IR_LED_PIN = 0;					// and clear
00492c   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	892; meter_logger.c	TRIS_V_SENSE = INPUT_STATE;		// as input
00492e   8a92     bsf     0x92, 0x5, 0     	BSF	_TRISAbits, 5
                                           ;	.line	894; meter_logger.c	TRIS_DEBUG_PIN = OUTPUT_STATE;	// as output
004930   9493     bcf     0x93, 0x2, 0     	BCF	_TRISBbits, 2
                                           ;	.line	895; meter_logger.c	DEBUG_PIN = 0;					// and clear
004932   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	897; meter_logger.c	TRIS_DEBUG2_PIN = OUTPUT_STATE;	// as output
004934   9693     bcf     0x93, 0x3, 0     	BCF	_TRISBbits, 3
                                           ;	.line	898; meter_logger.c	DEBUG2_PIN = 0;					// and clear
004936   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	900; meter_logger.c	TRIS_DEBUG3_PIN = OUTPUT_STATE;	// as output
004938   9893     bcf     0x93, 0x4, 0     	BCF	_TRISBbits, 4
                                           ;	.line	901; meter_logger.c	DEBUG3_PIN = 0;					// and clear
00493a   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	905; meter_logger.c	TRIS_PWM_PIN = OUTPUT_STATE;	// enable output from pwm module at init
00493c   9294     bcf     0x94, 0x1, 0     	BCF	_TRISCbits, 1
                                           ;	.line	906; meter_logger.c	PWM_PIN = 0;					// and clear
00493e   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
                                           ;	.line	909; meter_logger.c	TRIS_RX_PIN = INPUT_STATE;		// as input
004940   8e94     bsf     0x94, 0x7, 0     	BSF	_TRISCbits, 7
                                           ;	.line	910; meter_logger.c	TRIS_TX_PIN = OUTPUT_STATE;		// as input
004942   9c94     bcf     0x94, 0x6, 0     	BCF	_TRISCbits, 6
                                           ;	.line	915; meter_logger.c	T1CONbits.TMR1ON = 1;
004944   80cd     bsf     0xcd, 0, 0       	BSF	_T1CONbits, 0
                                           ;	.line	916; meter_logger.c	T1CONbits.RD16 = 1;
004946   8ecd     bsf     0xcd, 0x7, 0     	BSF	_T1CONbits, 7
                                           ;	.line	917; meter_logger.c	T1CONbits.TMR1CS = 0;   // internal clock source
004948   92cd     bcf     0xcd, 0x1, 0     	BCF	_T1CONbits, 1
                                           ;	.line	918; meter_logger.c	T1CONbits.T1OSCEN = 0;  // dont put t1 on pin
00494a   96cd     bcf     0xcd, 0x3, 0     	BCF	_T1CONbits, 3
                                           ;	.line	919; meter_logger.c	T1CONbits.T1CKPS0 = 0;
00494c   98cd     bcf     0xcd, 0x4, 0     	BCF	_T1CONbits, 4
                                           ;	.line	920; meter_logger.c	T1CONbits.T1CKPS1 = 0;
00494e   9acd     bcf     0xcd, 0x5, 0     	BCF	_T1CONbits, 5
                                           ;	.line	921; meter_logger.c	IPR1bits.TMR1IP = 0;	// low priority
004950   909f     bcf     0x9f, 0, 0       	BCF	_IPR1bits, 0
                                           ;	.line	922; meter_logger.c	PIE1bits.TMR1IE = 1;	// Ensure that TMR1 Interrupt is enabled
004952   809d     bsf     0x9d, 0, 0       	BSF	_PIE1bits, 0
                                           ;	.line	923; meter_logger.c	PIR1bits.TMR1IF = 1;	// Force Instant entry to Timer 1 Interrupt
004954   809e     bsf     0x9e, 0, 0       	BSF	_PIR1bits, 0
                                           ;	.line	954; meter_logger.c	RCONbits.IPEN = 1;
004956   8ed0     bsf     0xd0, 0x7, 0     	BSF	_RCONbits, 7
                                           ;	.line	956; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int, enabled when ir demodulator is started
004958   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	957; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
00495a   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
                                           ;	.line	959; meter_logger.c	INTCONbits.PEIE = 1;
00495c   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	960; meter_logger.c	INTCONbits.GIE = 1;	/* Enable Global interrupts   */	
00495e   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           ;	.line	965; meter_logger.c	IPR1bits.RCIP = 0;
004960   9a9f     bcf     0x9f, 0x5, 0     	BCF	_IPR1bits, 5
                                           ;	.line	966; meter_logger.c	IPR1bits.TXIP = 0;
004962   989f     bcf     0x9f, 0x4, 0     	BCF	_IPR1bits, 4
                                           ;	.line	977; meter_logger.c	my_usart_open();
004964   ec2d     call    0x4c5a, 0        	CALL	_my_usart_open
004966   f026
004968   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00496a   ffd9
00496c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__sleep_ms	code
                                           _sleep_ms:
                                           ;	.line	859; meter_logger.c	void sleep_ms(unsigned int ms) {
004696   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004698   ffe5
00469a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00469c   ffd9
00469e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0046a0   ffe5
0046a2   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0046a4   ffe5
0046a6   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0046a8   ffe5
0046aa   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0046ac   ffe5
0046ae   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0046b0   ffe5
0046b2   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0046b4   ffe5
0046b6   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0046b8   ffe5
0046ba   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
0046bc   ffe5
0046be   0e02     movlw   0x2              	MOVLW	0x02
0046c0   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0046c2   f000
0046c4   0e03     movlw   0x3              	MOVLW	0x03
0046c6   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0046c8   f001
                                           ;	.line	862; meter_logger.c	start_timer_1_ms = timer_1_ms;	
0046ca   c540     movff   0x540, 0x2       	MOVFF	_timer_1_ms, r0x02
0046cc   f002
0046ce   c541     movff   0x541, 0x3       	MOVFF	(_timer_1_ms + 1), r0x03
0046d0   f003
                                           ;	.line	865; meter_logger.c	do {
0046d2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0046d4   08ff     sublw   0xff             	SUBLW	0xff
0046d6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0046d8   0eff     movlw   0xff             	MOVLW	0xff
0046da   5403     subfwb  0x3, 0, 0        	SUBFWB	r0x03, W
0046dc   6e05     movwf   0x5, 0           	MOVWF	r0x05
                                           _00734_DS_:
                                           ;	.line	866; meter_logger.c	if (start_timer_1_ms <= timer_1_ms) {
0046de   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0046e0   0105     movlb   0x5              	BANKSEL	(_timer_1_ms + 1)
0046e2   5d41     subwf   0x41, 0, 0x1     	SUBWF	(_timer_1_ms + 1), W, B
0046e4   e102     bnz     0x46ea           	BNZ	_00745_DS_
0046e6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
0046e8   5d40     subwf   0x40, 0, 0x1     	SUBWF	_timer_1_ms, W, B
                                           _00745_DS_:
0046ea   e308     bnc     0x46fc           	BNC	_00732_DS_
                                           ;	.line	867; meter_logger.c	diff = timer_1_ms - start_timer_1_ms;
0046ec   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0046ee   0105     movlb   0x5              	BANKSEL	_timer_1_ms
0046f0   5d40     subwf   0x40, 0, 0x1     	SUBWF	_timer_1_ms, W, B
0046f2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0046f4   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
0046f6   5941     subwfb  0x41, 0, 0x1     	SUBWFB	(_timer_1_ms + 1), W, B
0046f8   6e07     movwf   0x7, 0           	MOVWF	r0x07
0046fa   d007     bra     0x470a           	BRA	_00735_DS_
                                           _00732_DS_:
0046fc   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	871; meter_logger.c	diff = 0xffff - start_timer_1_ms + timer_1_ms;
0046fe   5140     movf    0x40, 0, 0x1     	MOVF	_timer_1_ms, W, B
004700   2404     addwf   0x4, 0, 0        	ADDWF	r0x04, W
004702   6e06     movwf   0x6, 0           	MOVWF	r0x06
                                           ; removed redundant BANKSEL
004704   5141     movf    0x41, 0, 0x1     	MOVF	(_timer_1_ms + 1), W, B
004706   2005     addwfc  0x5, 0, 0        	ADDWFC	r0x05, W
004708   6e07     movwf   0x7, 0           	MOVWF	r0x07
                                           _00735_DS_:
                                           ;	.line	873; meter_logger.c	} while (diff < ms);
00470a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00470c   5c07     subwf   0x7, 0, 0        	SUBWF	r0x07, W
00470e   e102     bnz     0x4714           	BNZ	_00746_DS_
004710   5000     movf    0, 0, 0          	MOVF	r0x00, W
004712   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
                                           _00746_DS_:
004714   e3e4     bnc     0x46de           	BNC	_00734_DS_
004716   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
004718   f007
00471a   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
00471c   f006
00471e   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
004720   f005
004722   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004724   f004
004726   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004728   f003
00472a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00472c   f002
00472e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004730   f001
004732   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004734   f000
004736   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004738   ffd9
00473a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__isr_low_prio	code
                                           _isr_low_prio:
                                           ;	.line	827; meter_logger.c	static void isr_low_prio(void) __interrupt 2 {
0045d2   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
0045d4   ffe5
0045d6   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
0045d8   ffe5
0045da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0045dc   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
0045de   ffe5
0045e0   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
0045e2   ffe5
0045e4   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
0045e6   ffe5
0045e8   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
0045ea   ffe5
0045ec   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
0045ee   ffe5
0045f0   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
0045f2   ffe5
0045f4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0045f6   ffe5
0045f8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0045fa   ffd9
0045fc   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0045fe   ffe5
004600   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004602   ffe5
                                           ;	.line	830; meter_logger.c	if (PIR1bits.TMR1IF) {
004604   a09e     btfss   0x9e, 0, 0       	BTFSS	_PIR1bits, 0
004606   d024     bra     0x4650           	BRA	_00703_DS_
                                           ;	.line	831; meter_logger.c	TMR1H = (unsigned char)(TIMER1_RELOAD >> 8);    // 262,158ms @ 8MHz
004608   0ef8     movlw   0xf8             	MOVLW	0xf8
00460a   6ecf     movwf   0xcf, 0          	MOVWF	_TMR1H
                                           ;	.line	832; meter_logger.c	TMR1L = (unsigned char)TIMER1_RELOAD;
00460c   0e53     movlw   0x53             	MOVLW	0x53
00460e   6ece     movwf   0xce, 0          	MOVWF	_TMR1L
                                           ;	.line	834; meter_logger.c	switch (led_flash.state) {
004610   c54c     movff   0x54c, 0         	MOVFF	_led_flash, r0x00
004612   f000
004614   5000     movf    0, 0, 0          	MOVF	r0x00, W
004616   6e01     movwf   0x1, 0           	MOVWF	r0x01
004618   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00461a   e004     bz      0x4624           	BZ	_00697_DS_
00461c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00461e   0a01     xorlw   0x1              	XORLW	0x01
004620   e006     bz      0x462e           	BZ	_00698_DS_
004622   d011     bra     0x4646           	BRA	_00701_DS_
                                           _00697_DS_:
                                           ;	.line	836; meter_logger.c	LED_PIN = 1;
004624   8881     bsf     0x81, 0x4, 0     	BSF	_PORTBbits, 4
                                           ;	.line	837; meter_logger.c	led_flash.state = LED_FLASH_RUNNING;
004626   0e01     movlw   0x1              	MOVLW	0x01
004628   0105     movlb   0x5              	BANKSEL	_led_flash
00462a   6f4c     movwf   0x4c, 0x1        	MOVWF	_led_flash, B
                                           ;	.line	838; meter_logger.c	break;
00462c   d00c     bra     0x4646           	BRA	_00701_DS_
                                           _00698_DS_:
                                           ;	.line	840; meter_logger.c	if (led_flash.timer-- == 0) {
00462e   c54d     movff   0x54d, 0         	MOVFF	(_led_flash + 1), r0x00
004630   f000
004632   0400     decf    0, 0, 0          	DECF	r0x00, W
004634   6e01     movwf   0x1, 0           	MOVWF	r0x01
004636   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004638   0105     movlb   0x5              	BANKSEL	(_led_flash + 1)
00463a   6f4d     movwf   0x4d, 0x1        	MOVWF	(_led_flash + 1), B
00463c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00463e   e103     bnz     0x4646           	BNZ	_00701_DS_
                                           ;	.line	841; meter_logger.c	LED_PIN = 0;
004640   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	842; meter_logger.c	led_flash.state = LED_FLASH_STOPPED;
004642   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
004644   6f4c     movwf   0x4c, 0x1        	MOVWF	_led_flash, B
                                           _00701_DS_:
004646   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	846; meter_logger.c	timer_1_ms++;
004648   3f40     incfsz  0x40, 0x1, 0x1   	INCFSZ	_timer_1_ms, F, B
00464a   d001     bra     0x464e           	BRA	_31047_DS_
                                           ; removed redundant BANKSEL
00464c   2b41     incf    0x41, 0x1, 0x1   	INCF	(_timer_1_ms + 1), F, B
                                           _31047_DS_:
                                           ;	.line	847; meter_logger.c	PIR1bits.TMR1IF = 0;    /* Clear the Timer Flag  */
00464e   909e     bcf     0x9e, 0, 0       	BCF	_PIR1bits, 0
                                           _00703_DS_:
                                           ;	.line	851; meter_logger.c	if (usart_drdy()) {
004650   ec2e     call    0x4e5c, 0        	CALL	_usart_drdy
004652   f027
004654   6e00     movwf   0, 0             	MOVWF	r0x00
004656   5000     movf    0, 0, 0          	MOVF	r0x00, W
004658   e006     bz      0x4666           	BZ	_00706_DS_
                                           ;	.line	853; meter_logger.c	c = usart_getc();
00465a   ec42     call    0x4c84, 0        	CALL	_usart_getc
00465c   f026
00465e   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	854; meter_logger.c	usart_putc(c);
004660   5000     movf    0, 0, 0          	MOVF	r0x00, W
004662   ec12     call    0x4e24, 0        	CALL	_usart_putc
004664   f027
                                           _00706_DS_:
004666   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004668   f001
00466a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00466c   f000
00466e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004670   ffd9
004672   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
004674   fffb
004676   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
004678   fffa
00467a   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
00467c   ffea
00467e   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
004680   ffe9
004682   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
004684   fff4
004686   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
004688   fff3
00468a   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
00468c   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
00468e   ffe0
004690   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
004692   ffd8
004694   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__isr_high_prio	code
                                           _isr_high_prio:
                                           ;	.line	468; meter_logger.c	static void isr_high_prio(void) __interrupt 1 {
002336   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
002338   ffe5
00233a   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
00233c   ffe5
00233e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002340   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
002342   ffe5
002344   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
002346   ffe5
002348   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
00234a   ffe5
00234c   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
00234e   ffe5
002350   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
002352   ffe5
002354   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
002356   ffe5
002358   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00235a   ffe5
00235c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00235e   ffd9
002360   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002362   ffe5
002364   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002366   ffe5
002368   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00236a   ffe5
00236c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00236e   ffe5
002370   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002372   ffe5
002374   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002376   ffe5
                                           ;	.line	470; meter_logger.c	if (INTCONbits.INT0IF && INTCONbits.INT0IE) {
002378   a2f2     btfss   0xf2, 0x1, 0     	BTFSS	_INTCONbits, 1
00237a   d147     bra     0x260a           	BRA	_00370_DS_
00237c   a8f2     btfss   0xf2, 0x4, 0     	BTFSS	_INTCONbits, 4
00237e   d145     bra     0x260a           	BRA	_00370_DS_
                                           ;	.line	471; meter_logger.c	timer_0 = (unsigned int)(TMR0L) | ((unsigned int)(TMR0H) << 8);
002380   cfd6     movff   0xfd6, 0         	MOVFF	_TMR0L, r0x00
002382   f000
002384   6a01     clrf    0x1, 0           	CLRF	r0x01
002386   cfd7     movff   0xfd7, 0x2       	MOVFF	_TMR0H, r0x02
002388   f002
00238a   6a03     clrf    0x3, 0           	CLRF	r0x03
00238c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00238e   6e05     movwf   0x5, 0           	MOVWF	r0x05
002390   6a04     clrf    0x4, 0           	CLRF	r0x04
002392   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002394   1000     iorwf   0, 0, 0          	IORWF	r0x00, W
002396   0105     movlb   0x5              	BANKSEL	_timer_0
002398   6f46     movwf   0x46, 0x1        	MOVWF	_timer_0, B
00239a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00239c   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
                                           ; removed redundant BANKSEL
00239e   6f47     movwf   0x47, 0x1        	MOVWF	(_timer_0 + 1), B
0023a0   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	472; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
0023a2   5149     movf    0x49, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
0023a4   6e00     movwf   0, 0             	MOVWF	r0x00
0023a6   6a01     clrf    0x1, 0           	CLRF	r0x01
0023a8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0023aa   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	473; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
0023ac   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0023ae   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
0023b0   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	475; meter_logger.c	switch (codec_type) {
0023b2   5151     movf    0x51, 0, 0x1     	MOVF	_codec_type, W, B
0023b4   0a01     xorlw   0x1              	XORLW	0x01
0023b6   e006     bz      0x23c4           	BZ	_00331_DS_
                                           _00614_DS_:
0023b8   0105     movlb   0x5              	BANKSEL	_codec_type
0023ba   5151     movf    0x51, 0, 0x1     	MOVF	_codec_type, W, B
0023bc   0a02     xorlw   0x2              	XORLW	0x02
0023be   e101     bnz     0x23c2           	BNZ	_00616_DS_
0023c0   d117     bra     0x25f0           	BRA	_00365_DS_
                                           _00616_DS_:
0023c2   d122     bra     0x2608           	BRA	_00368_DS_
                                           _00331_DS_:
                                           ;	.line	477; meter_logger.c	flash_led(100);
0023c4   0e64     movlw   0x64             	MOVLW	0x64
0023c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0023c8   ec6a     call    0x4cd4, 0        	CALL	_flash_led
0023ca   f026
0023cc   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	478; meter_logger.c	switch (testo_ir_proto.state) {
0023ce   c51d     movff   0x51d, 0         	MOVFF	_testo_ir_proto, r0x00
0023d0   f000
0023d2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0023d4   6e01     movwf   0x1, 0           	MOVWF	r0x01
0023d6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0023d8   e008     bz      0x23ea           	BZ	_00332_DS_
0023da   5000     movf    0, 0, 0          	MOVF	r0x00, W
0023dc   0a02     xorlw   0x2              	XORLW	0x02
0023de   e00c     bz      0x23f8           	BZ	_00333_DS_
0023e0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0023e2   0a04     xorlw   0x4              	XORLW	0x04
0023e4   e101     bnz     0x23e8           	BNZ	_00622_DS_
0023e6   d03b     bra     0x245e           	BRA	_00341_DS_
                                           _00622_DS_:
0023e8   d10f     bra     0x2608           	BRA	_00368_DS_
                                           _00332_DS_:
                                           ;	.line	480; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
0023ea   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	481; meter_logger.c	testo_ir_proto.start_bit_len = 1;
0023ec   0e01     movlw   0x1              	MOVLW	0x01
0023ee   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
0023f0   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	482; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
0023f2   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
0023f4   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
                                           ;	.line	483; meter_logger.c	break;
0023f6   d108     bra     0x2608           	BRA	_00368_DS_
                                           _00333_DS_:
0023f8   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	485; meter_logger.c	if ((TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < TICK + timer0_reload + TICK_ADJ)) {
0023fa   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0023fc   0f8f     addlw   0x8f             	ADDLW	0x8f
0023fe   6e00     movwf   0, 0             	MOVWF	r0x00
002400   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002402   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002404   6e01     movwf   0x1, 0           	MOVWF	r0x01
002406   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002408   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
00240a   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00240c   e102     bnz     0x2412           	BNZ	_00623_DS_
                                           ; removed redundant BANKSEL
00240e   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
002410   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00623_DS_:
002412   e21f     bc      0x2452           	BC	_00338_DS_
002414   0105     movlb   0x5              	BANKSEL	_timer0_reload
002416   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002418   0f1f     addlw   0x1f             	ADDLW	0x1f
00241a   6e00     movwf   0, 0             	MOVWF	r0x00
00241c   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
00241e   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002420   6e01     movwf   0x1, 0           	MOVWF	r0x01
002422   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002424   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002426   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
002428   e102     bnz     0x242e           	BNZ	_00624_DS_
00242a   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00242c   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00624_DS_:
00242e   e211     bc      0x2452           	BC	_00338_DS_
                                           ;	.line	486; meter_logger.c	if (testo_ir_proto.start_bit_len < 2) {
002430   0e02     movlw   0x2              	MOVLW	0x02
002432   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
002434   5d1f     subwf   0x1f, 0, 0x1     	SUBWF	(_testo_ir_proto + 2), W, B
002436   e206     bc      0x2444           	BC	_00335_DS_
                                           ;	.line	487; meter_logger.c	testo_ir_proto.start_bit_len++;
002438   c51f     movff   0x51f, 0         	MOVFF	(_testo_ir_proto + 2), r0x00
00243a   f000
00243c   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
00243e   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002440   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
002442   d0e2     bra     0x2608           	BRA	_00368_DS_
                                           _00335_DS_:
002444   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	491; meter_logger.c	testo_ir_proto.data = 0;
002446   6b20     clrf    0x20, 0x1        	CLRF	(_testo_ir_proto + 3), B
                                           ; removed redundant BANKSEL
002448   6b21     clrf    0x21, 0x1        	CLRF	(_testo_ir_proto + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	492; meter_logger.c	testo_ir_proto.data_len = 0;
00244a   6b22     clrf    0x22, 0x1        	CLRF	(_testo_ir_proto + 5), B
                                           ;	.line	493; meter_logger.c	testo_ir_proto.state = DATA_WAIT;
00244c   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
00244e   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
002450   d0db     bra     0x2608           	BRA	_00368_DS_
                                           _00338_DS_:
                                           ;	.line	498; meter_logger.c	testo_ir_proto.start_bit_len = 1;
002452   0e01     movlw   0x1              	MOVLW	0x01
002454   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
002456   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	499; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
002458   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
00245a   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
                                           ;	.line	501; meter_logger.c	break;
00245c   d0d5     bra     0x2608           	BRA	_00368_DS_
                                           _00341_DS_:
                                           ;	.line	503; meter_logger.c	if (testo_ir_proto.data_len <= 12) {
00245e   0e0d     movlw   0xd              	MOVLW	0x0d
002460   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
002462   5d22     subwf   0x22, 0, 0x1     	SUBWF	(_testo_ir_proto + 5), W, B
002464   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002466   d0d0     bra     0x2608           	BRA	_00368_DS_
002468   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	504; meter_logger.c	if (((TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < TICK + timer0_reload + TICK_ADJ)) || ((3 * TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < 3 * TICK + timer0_reload + TICK_ADJ))) {
00246a   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00246c   0f8f     addlw   0x8f             	ADDLW	0x8f
00246e   6e00     movwf   0, 0             	MOVWF	r0x00
002470   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002472   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002474   6e01     movwf   0x1, 0           	MOVWF	r0x01
002476   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002478   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
00247a   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00247c   e102     bnz     0x2482           	BNZ	_00627_DS_
                                           ; removed redundant BANKSEL
00247e   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
002480   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00627_DS_:
002482   e20e     bc      0x24a0           	BC	_00357_DS_
002484   0105     movlb   0x5              	BANKSEL	_timer0_reload
002486   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002488   0f1f     addlw   0x1f             	ADDLW	0x1f
00248a   6e00     movwf   0, 0             	MOVWF	r0x00
00248c   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
00248e   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002490   6e01     movwf   0x1, 0           	MOVWF	r0x01
002492   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002494   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002496   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
002498   e102     bnz     0x249e           	BNZ	_00628_DS_
00249a   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00249c   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00628_DS_:
00249e   e31c     bnc     0x24d8           	BNC	_00352_DS_
                                           _00357_DS_:
0024a0   0105     movlb   0x5              	BANKSEL	_timer0_reload
0024a2   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0024a4   0f3d     addlw   0x3d             	ADDLW	0x3d
0024a6   6e00     movwf   0, 0             	MOVWF	r0x00
0024a8   0e09     movlw   0x9              	MOVLW	0x09
                                           ; removed redundant BANKSEL
0024aa   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0024ac   6e01     movwf   0x1, 0           	MOVWF	r0x01
0024ae   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0024b0   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
0024b2   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0024b4   e102     bnz     0x24ba           	BNZ	_00629_DS_
                                           ; removed redundant BANKSEL
0024b6   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
0024b8   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00629_DS_:
0024ba   e235     bc      0x2526           	BC	_00353_DS_
0024bc   0105     movlb   0x5              	BANKSEL	_timer0_reload
0024be   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0024c0   0fcd     addlw   0xcd             	ADDLW	0xcd
0024c2   6e00     movwf   0, 0             	MOVWF	r0x00
0024c4   0e0a     movlw   0xa              	MOVLW	0x0a
                                           ; removed redundant BANKSEL
0024c6   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0024c8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0024ca   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0024cc   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0024ce   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
0024d0   e102     bnz     0x24d6           	BNZ	_00630_DS_
0024d2   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0024d4   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00630_DS_:
0024d6   e227     bc      0x2526           	BC	_00353_DS_
                                           _00352_DS_:
0024d8   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	506; meter_logger.c	if ((testo_ir_proto.data & 1) != 0) {
0024da   a120     btfss   0x20, 0, 0x1     	BTFSS	(_testo_ir_proto + 3), 0
0024dc   d00a     bra     0x24f2           	BRA	_00343_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	508; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
0024de   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0024e0   6e00     movwf   0, 0             	MOVWF	r0x00
0024e2   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
0024e4   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
0024e6   6e01     movwf   0x1, 0           	MOVWF	r0x01
0024e8   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0024ea   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
0024ec   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0024ee   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
0024f0   d013     bra     0x2518           	BRA	_00344_DS_
                                           _00343_DS_:
0024f2   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	513; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
0024f4   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0024f6   6e00     movwf   0, 0             	MOVWF	r0x00
0024f8   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
0024fa   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
0024fc   6e01     movwf   0x1, 0           	MOVWF	r0x01
0024fe   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002500   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002502   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002504   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           ;	.line	514; meter_logger.c	testo_ir_proto.data |= 1;	// and set bit 0
002506   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002508   1120     iorwf   0x20, 0, 0x1     	IORWF	(_testo_ir_proto + 3), W, B
00250a   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
00250c   5121     movf    0x21, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
00250e   6e01     movwf   0x1, 0           	MOVWF	r0x01
002510   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002512   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002514   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002516   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           _00344_DS_:
                                           ;	.line	516; meter_logger.c	testo_ir_proto.data_len++;
002518   c522     movff   0x522, 0         	MOVFF	(_testo_ir_proto + 5), r0x00
00251a   f000
00251c   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
00251e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002520   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
002522   6f22     movwf   0x22, 0x1        	MOVWF	(_testo_ir_proto + 5), B
002524   d048     bra     0x25b6           	BRA	_00354_DS_
                                           _00353_DS_:
002526   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	518; meter_logger.c	else if ((2 * TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < 2 * TICK + timer0_reload + TICK_ADJ)) {
002528   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00252a   0fe6     addlw   0xe6             	ADDLW	0xe6
00252c   6e00     movwf   0, 0             	MOVWF	r0x00
00252e   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
002530   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002532   6e01     movwf   0x1, 0           	MOVWF	r0x01
002534   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002536   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
002538   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00253a   e102     bnz     0x2540           	BNZ	_00633_DS_
                                           ; removed redundant BANKSEL
00253c   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
00253e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00633_DS_:
002540   e235     bc      0x25ac           	BC	_00349_DS_
002542   0105     movlb   0x5              	BANKSEL	_timer0_reload
002544   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002546   0f76     addlw   0x76             	ADDLW	0x76
002548   6e00     movwf   0, 0             	MOVWF	r0x00
00254a   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
00254c   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
00254e   6e01     movwf   0x1, 0           	MOVWF	r0x01
002550   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002552   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002554   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
002556   e102     bnz     0x255c           	BNZ	_00634_DS_
002558   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00255a   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00634_DS_:
00255c   e227     bc      0x25ac           	BC	_00349_DS_
00255e   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	520; meter_logger.c	if ((testo_ir_proto.data & 1) != 0) {
002560   a120     btfss   0x20, 0, 0x1     	BTFSS	(_testo_ir_proto + 3), 0
002562   d013     bra     0x258a           	BRA	_00346_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	522; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
002564   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
002566   6e00     movwf   0, 0             	MOVWF	r0x00
002568   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
00256a   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
00256c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00256e   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002570   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002572   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002574   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           ;	.line	523; meter_logger.c	testo_ir_proto.data |= 1;	// and set bit 0
002576   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002578   1120     iorwf   0x20, 0, 0x1     	IORWF	(_testo_ir_proto + 3), W, B
00257a   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
00257c   5121     movf    0x21, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
00257e   6e01     movwf   0x1, 0           	MOVWF	r0x01
002580   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002582   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002584   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002586   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
002588   d00a     bra     0x259e           	BRA	_00347_DS_
                                           _00346_DS_:
00258a   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	527; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
00258c   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
00258e   6e00     movwf   0, 0             	MOVWF	r0x00
002590   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
002592   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
002594   6e01     movwf   0x1, 0           	MOVWF	r0x01
002596   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002598   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
00259a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00259c   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           _00347_DS_:
                                           ;	.line	530; meter_logger.c	testo_ir_proto.data_len++;
00259e   c522     movff   0x522, 0         	MOVFF	(_testo_ir_proto + 5), r0x00
0025a0   f000
0025a2   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0025a4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0025a6   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
0025a8   6f22     movwf   0x22, 0x1        	MOVWF	(_testo_ir_proto + 5), B
0025aa   d005     bra     0x25b6           	BRA	_00354_DS_
                                           _00349_DS_:
                                           ;	.line	535; meter_logger.c	testo_ir_proto.start_bit_len = 1;
0025ac   0e01     movlw   0x1              	MOVLW	0x01
0025ae   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
0025b0   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	536; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
0025b2   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
0025b4   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
                                           _00354_DS_:
0025b6   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
                                           ;	.line	538; meter_logger.c	if (testo_ir_proto.data_len == 12) {
0025b8   5122     movf    0x22, 0, 0x1     	MOVF	(_testo_ir_proto + 5), W, B
0025ba   0a0c     xorlw   0xc              	XORLW	0x0c
0025bc   e125     bnz     0x2608           	BNZ	_00368_DS_
                                           _00638_DS_:
0025be   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 4)
                                           ;	.line	541; meter_logger.c	if (testo_valid_err_corr(testo_ir_proto.data & 0xffff)) {
0025c0   5121     movf    0x21, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
0025c2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0025c4   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0025c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0025c8   ecd6     call    0x35ac, 0        	CALL	_testo_valid_err_corr
0025ca   f01a
0025cc   6e00     movwf   0, 0             	MOVWF	r0x00
0025ce   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0025d0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0025d2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0025d4   e00a     bz      0x25ea           	BZ	_00359_DS_
0025d6   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	543; meter_logger.c	fifo_put(testo_ir_proto.data & 0xff);
0025d8   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0025da   6e00     movwf   0, 0             	MOVWF	r0x00
0025dc   6a01     clrf    0x1, 0           	CLRF	r0x01
0025de   5000     movf    0, 0, 0          	MOVF	r0x00, W
0025e0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0025e2   ec92     call    0x3f24, 0        	CALL	_fifo_put
0025e4   f01f
0025e6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	544; meter_logger.c	LED_PIN = 1;
0025e8   8881     bsf     0x81, 0x4, 0     	BSF	_PORTBbits, 4
                                           _00359_DS_:
0025ea   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	546; meter_logger.c	testo_ir_proto.state = INIT_STATE;
0025ec   6b1d     clrf    0x1d, 0x1        	CLRF	_testo_ir_proto, B
                                           ;	.line	551; meter_logger.c	break;
0025ee   d00c     bra     0x2608           	BRA	_00368_DS_
                                           _00365_DS_:
0025f0   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	553; meter_logger.c	switch (rs232_proto.state) {
0025f2   5123     movf    0x23, 0, 0x1     	MOVF	_rs232_proto, W, B
0025f4   0a02     xorlw   0x2              	XORLW	0x02
0025f6   e108     bnz     0x2608           	BNZ	_00368_DS_
                                           ;	.line	564; meter_logger.c	TMR0H = (unsigned char)(TIMER0_RS232_1200_START >> 8);
0025f8   0ef7     movlw   0xf7             	MOVLW	0xf7
0025fa   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ;	.line	565; meter_logger.c	TMR0L = (unsigned char)TIMER0_RS232_1200_START;
0025fc   6ad6     clrf    0xd6, 0          	CLRF	_TMR0L
                                           ;	.line	566; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int while we are using timer to receive data bits
0025fe   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	567; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
002600   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	568; meter_logger.c	rs232_proto.state = DATA_WAIT;
002602   0e04     movlw   0x4              	MOVLW	0x04
002604   0105     movlb   0x5              	BANKSEL	_rs232_proto
002606   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           _00368_DS_:
                                           ;	.line	573; meter_logger.c	INTCONbits.INT0IF = 0;	/* Clear Interrupt Flag */
002608   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           _00370_DS_:
                                           ;	.line	577; meter_logger.c	if (INTCONbits.TMR0IF && INTCONbits.TMR0IE) {
00260a   a4f2     btfss   0xf2, 0x2, 0     	BTFSS	_INTCONbits, 2
00260c   d14d     bra     0x28a8           	BRA	_00423_DS_
00260e   aaf2     btfss   0xf2, 0x5, 0     	BTFSS	_INTCONbits, 5
002610   d14b     bra     0x28a8           	BRA	_00423_DS_
002612   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	579; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
002614   5149     movf    0x49, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
002616   6e00     movwf   0, 0             	MOVWF	r0x00
002618   6a01     clrf    0x1, 0           	CLRF	r0x01
00261a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00261c   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	580; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
00261e   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002620   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
                                           ;	.line	582; meter_logger.c	switch (codec_type) {
002622   0e01     movlw   0x1              	MOVLW	0x01
002624   0105     movlb   0x5              	BANKSEL	_codec_type
002626   5d51     subwf   0x51, 0, 0x1     	SUBWF	_codec_type, W, B
002628   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
00262a   d13d     bra     0x28a6           	BRA	_00421_DS_
00262c   0e06     movlw   0x6              	MOVLW	0x06
                                           ; removed redundant BANKSEL
00262e   5d51     subwf   0x51, 0, 0x1     	SUBWF	_codec_type, W, B
002630   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002632   d139     bra     0x28a6           	BRA	_00421_DS_
                                           ; removed redundant BANKSEL
002634   0551     decf    0x51, 0, 0x1     	DECF	_codec_type, W, B
002636   6e00     movwf   0, 0             	MOVWF	r0x00
002638   6afa     clrf    0xfa, 0          	CLRF	PCLATH
00263a   6afb     clrf    0xfb, 0          	CLRF	PCLATU
00263c   3400     rlcf    0, 0, 0          	RLCF	r0x00, W
00263e   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
002640   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
002642   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
002644   0bfc     andlw   0xfc             	ANDLW	0xfc
002646   0f56     addlw   0x56             	ADDLW	LOW(_00644_DS_)
002648   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00264a   0e26     movlw   0x26             	MOVLW	HIGH(_00644_DS_)
00264c   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
00264e   0e00     movlw   0                	MOVLW	UPPER(_00644_DS_)
002650   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
002652   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002654   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00644_DS_:
002656   ef35     goto    0x266a           	GOTO	_00372_DS_
002658   f013
00265a   ef83     goto    0x2706           	GOTO	_00384_DS_
00265c   f013
00265e   ef3a     goto    0x2674           	GOTO	_00373_DS_
002660   f013
002662   efbc     goto    0x2778           	GOTO	_00394_DS_
002664   f013
002666   effe     goto    0x27fc           	GOTO	_00405_DS_
002668   f013
                                           _00372_DS_:
                                           ;	.line	584; meter_logger.c	T0CONbits.TMR0ON = 0;			// Stop TMR0
00266a   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
00266c   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	585; meter_logger.c	testo_ir_proto.state = INIT_STATE;
00266e   6b1d     clrf    0x1d, 0x1        	CLRF	_testo_ir_proto, B
002670   0003     sleep                    	sleep 
                                           ;	.line	587; meter_logger.c	break;
002672   d119     bra     0x28a6           	BRA	_00421_DS_
                                           _00373_DS_:
                                           ;	.line	589; meter_logger.c	switch (rs232_proto.state) {
002674   c523     movff   0x523, 0         	MOVFF	_rs232_proto, r0x00
002676   f000
002678   5000     movf    0, 0, 0          	MOVF	r0x00, W
00267a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00267c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00267e   e00a     bz      0x2694           	BZ	_00374_DS_
002680   5000     movf    0, 0, 0          	MOVF	r0x00, W
002682   0a03     xorlw   0x3              	XORLW	0x03
002684   e011     bz      0x26a8           	BZ	_00377_DS_
002686   5000     movf    0, 0, 0          	MOVF	r0x00, W
002688   0a09     xorlw   0x9              	XORLW	0x09
00268a   e033     bz      0x26f2           	BZ	_00381_DS_
00268c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00268e   0a0a     xorlw   0xa              	XORLW	0x0a
002690   e035     bz      0x26fc           	BZ	_00382_DS_
002692   d109     bra     0x28a6           	BRA	_00421_DS_
                                           _00374_DS_:
002694   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	591; meter_logger.c	if (rs232_proto.data_len == 8) {
002696   5126     movf    0x26, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
002698   0a08     xorlw   0x8              	XORLW	0x08
00269a   e001     bz      0x269e           	BZ	_00654_DS_
00269c   d104     bra     0x28a6           	BRA	_00421_DS_
                                           _00654_DS_:
                                           ;	.line	592; meter_logger.c	IR_LED_PIN = 1;		// inverted rs232 output on ir, start bit = ir light
00269e   8281     bsf     0x81, 0x1, 0     	BSF	_PORTBbits, 1
                                           ;	.line	593; meter_logger.c	rs232_proto.state = START_BIT_SENT;
0026a0   0e03     movlw   0x3              	MOVLW	0x03
0026a2   0105     movlb   0x5              	BANKSEL	_rs232_proto
0026a4   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	595; meter_logger.c	break;
0026a6   d0ff     bra     0x28a6           	BRA	_00421_DS_
                                           _00377_DS_:
                                           ;	.line	597; meter_logger.c	if (rs232_proto.data_len >= 1) {
0026a8   0e01     movlw   0x1              	MOVLW	0x01
0026aa   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
0026ac   5d26     subwf   0x26, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
0026ae   e31c     bnc     0x26e8           	BNC	_00379_DS_
                                           ;	.line	598; meter_logger.c	IR_LED_PIN = (rs232_proto.data & 1) == 0;	// inverted rs232 output on ir
0026b0   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
0026b2   1525     andwf   0x25, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
0026b4   6e00     movwf   0, 0             	MOVWF	r0x00
0026b6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0026b8   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
0026ba   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
0026bc   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0026be   6a00     clrf    0, 0             	CLRF	r0x00
0026c0   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
0026c2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0026c4   0b01     andlw   0x1              	ANDLW	0x01
0026c6   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
0026c8   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
0026ca   5081     movf    0x81, 0, 0       	MOVF	_PORTBbits, W
0026cc   0bfd     andlw   0xfd             	ANDLW	0xfd
0026ce   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
0026d0   6e81     movwf   0x81, 0          	MOVWF	_PORTBbits
                                           ; removed redundant BANKSEL
                                           ;	.line	599; meter_logger.c	rs232_proto.data = rs232_proto.data >> 1;
0026d2   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
0026d4   0b7f     andlw   0x7f             	ANDLW	0x7f
0026d6   6e00     movwf   0, 0             	MOVWF	r0x00
0026d8   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0026da   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	600; meter_logger.c	rs232_proto.data_len--;
0026dc   c526     movff   0x526, 0         	MOVFF	(_rs232_proto + 3), r0x00
0026de   f000
0026e0   0600     decf    0, 0x1, 0        	DECF	r0x00, F
0026e2   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0026e4   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
0026e6   d0df     bra     0x28a6           	BRA	_00421_DS_
                                           _00379_DS_:
                                           ;	.line	603; meter_logger.c	IR_LED_PIN = 0;								// inverted rs232 output on ir					
0026e8   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	604; meter_logger.c	rs232_proto.state = STOP_BIT_SENT;
0026ea   0e09     movlw   0x9              	MOVLW	0x09
0026ec   0105     movlb   0x5              	BANKSEL	_rs232_proto
0026ee   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	606; meter_logger.c	break;
0026f0   d0da     bra     0x28a6           	BRA	_00421_DS_
                                           _00381_DS_:
                                           ;	.line	608; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
0026f2   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	609; meter_logger.c	rs232_proto.state = STOP_BIT2_SENT;
0026f4   0e0a     movlw   0xa              	MOVLW	0x0a
0026f6   0105     movlb   0x5              	BANKSEL	_rs232_proto
0026f8   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	610; meter_logger.c	break;
0026fa   d0d5     bra     0x28a6           	BRA	_00421_DS_
                                           _00382_DS_:
                                           ;	.line	612; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
0026fc   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
0026fe   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	613; meter_logger.c	rs232_proto.state = INIT_STATE;
002700   6b23     clrf    0x23, 0x1        	CLRF	_rs232_proto, B
                                           ;	.line	614; meter_logger.c	T0CONbits.TMR0ON = 0;							// stop timer 0
002702   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	617; meter_logger.c	break;
002704   d0d0     bra     0x28a6           	BRA	_00421_DS_
                                           _00384_DS_:
                                           ;	.line	619; meter_logger.c	switch (rs232_proto.state) {
002706   c523     movff   0x523, 0         	MOVFF	_rs232_proto, r0x00
002708   f000
00270a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00270c   0a04     xorlw   0x4              	XORLW	0x04
00270e   e004     bz      0x2718           	BZ	_00385_DS_
002710   5000     movf    0, 0, 0          	MOVF	r0x00, W
002712   0a07     xorlw   0x7              	XORLW	0x07
002714   e022     bz      0x275a           	BZ	_00392_DS_
002716   d0c7     bra     0x28a6           	BRA	_00421_DS_
                                           _00385_DS_:
                                           ;	.line	621; meter_logger.c	rs232_proto.data_len++;
002718   c526     movff   0x526, 0         	MOVFF	(_rs232_proto + 3), r0x00
00271a   f000
00271c   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
00271e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002720   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002722   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	622; meter_logger.c	if (rs232_proto.data_len <= 8) {
002724   0e09     movlw   0x9              	MOVLW	0x09
                                           ; removed redundant BANKSEL
002726   5d26     subwf   0x26, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002728   e214     bc      0x2752           	BC	_00390_DS_
                                           ;	.line	623; meter_logger.c	if (IR_PIN) {		
00272a   a081     btfss   0x81, 0, 0       	BTFSS	_PORTBbits, 0
00272c   d006     bra     0x273a           	BRA	_00387_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	625; meter_logger.c	rs232_proto.data >>= 1;
00272e   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002730   0b7f     andlw   0x7f             	ANDLW	0x7f
002732   6e00     movwf   0, 0             	MOVWF	r0x00
002734   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002736   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
002738   d0b6     bra     0x28a6           	BRA	_00421_DS_
                                           _00387_DS_:
00273a   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	637; meter_logger.c	rs232_proto.data >>= 1;
00273c   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
00273e   0b7f     andlw   0x7f             	ANDLW	0x7f
002740   6e00     movwf   0, 0             	MOVWF	r0x00
002742   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002744   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	638; meter_logger.c	rs232_proto.data |= 0x80;
002746   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
002748   1125     iorwf   0x25, 0, 0x1     	IORWF	(_rs232_proto + 2), W, B
00274a   6e00     movwf   0, 0             	MOVWF	r0x00
00274c   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00274e   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
002750   d0aa     bra     0x28a6           	BRA	_00421_DS_
                                           _00390_DS_:
                                           ;	.line	660; meter_logger.c	rs232_proto.state = STOP_BIT_WAIT;
002752   0e07     movlw   0x7              	MOVLW	0x07
002754   0105     movlb   0x5              	BANKSEL	_rs232_proto
002756   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	662; meter_logger.c	break;
002758   d0a6     bra     0x28a6           	BRA	_00421_DS_
                                           _00392_DS_:
00275a   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	668; meter_logger.c	fifo_put(rs232_proto.data);
00275c   5125     movf    0x25, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
00275e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002760   ec92     call    0x3f24, 0        	CALL	_fifo_put
002762   f01f
002764   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002766   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	669; meter_logger.c	rs232_proto.data = 0;
002768   6b25     clrf    0x25, 0x1        	CLRF	(_rs232_proto + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	670; meter_logger.c	rs232_proto.data_len = 0;
00276a   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	671; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
00276c   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
00276e   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	672; meter_logger.c	T0CONbits.TMR0ON = 0;
002770   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	673; meter_logger.c	INTCONbits.INT0IF = 0;		// dont enter ext int now
002772   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           ;	.line	674; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int again
002774   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	677; meter_logger.c	break;
002776   d097     bra     0x28a6           	BRA	_00421_DS_
                                           _00394_DS_:
                                           ;	.line	679; meter_logger.c	switch (fsk_proto.state) {
002778   c500     movff   0x500, 0         	MOVFF	_fsk_proto, r0x00
00277a   f000
00277c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00277e   0a04     xorlw   0x4              	XORLW	0x04
002780   e004     bz      0x278a           	BZ	_00395_DS_
002782   5000     movf    0, 0, 0          	MOVF	r0x00, W
002784   0a07     xorlw   0x7              	XORLW	0x07
002786   e02e     bz      0x27e4           	BZ	_00403_DS_
002788   d08e     bra     0x28a6           	BRA	_00421_DS_
                                           _00395_DS_:
                                           ;	.line	681; meter_logger.c	fsk_proto.data_len++;						
00278a   c50d     movff   0x50d, 0         	MOVFF	(_fsk_proto + 13), r0x00
00278c   f000
00278e   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002790   5000     movf    0, 0, 0          	MOVF	r0x00, W
002792   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
002794   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
                                           ;	.line	682; meter_logger.c	if (fsk_proto.data_len <= 8) {
002796   0e09     movlw   0x9              	MOVLW	0x09
                                           ; removed redundant BANKSEL
002798   5d0d     subwf   0xd, 0, 0x1      	SUBWF	(_fsk_proto + 13), W, B
00279a   e220     bc      0x27dc           	BC	_00401_DS_
                                           ;	.line	683; meter_logger.c	if ((fsk_proto.diff > 340) && (fsk_proto.diff < 476)) {
00279c   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
00279e   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
0027a0   e102     bnz     0x27a6           	BNZ	_00668_DS_
0027a2   0e55     movlw   0x55             	MOVLW	0x55
                                           ; removed redundant BANKSEL
0027a4   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00668_DS_:
0027a6   e30e     bnc     0x27c4           	BNC	_00397_DS_
0027a8   0e01     movlw   0x1              	MOVLW	0x01
0027aa   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 2)
0027ac   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
0027ae   e102     bnz     0x27b4           	BNZ	_00669_DS_
0027b0   0edc     movlw   0xdc             	MOVLW	0xdc
                                           ; removed redundant BANKSEL
0027b2   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00669_DS_:
0027b4   e207     bc      0x27c4           	BC	_00397_DS_
0027b6   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	686; meter_logger.c	fsk_proto.data >>= 1;
0027b8   410c     rrncf   0xc, 0, 0x1      	RRNCF	(_fsk_proto + 12), W, B
0027ba   0b7f     andlw   0x7f             	ANDLW	0x7f
0027bc   6e00     movwf   0, 0             	MOVWF	r0x00
0027be   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0027c0   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
0027c2   d071     bra     0x28a6           	BRA	_00421_DS_
                                           _00397_DS_:
0027c4   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	691; meter_logger.c	fsk_proto.data >>= 1;
0027c6   410c     rrncf   0xc, 0, 0x1      	RRNCF	(_fsk_proto + 12), W, B
0027c8   0b7f     andlw   0x7f             	ANDLW	0x7f
0027ca   6e00     movwf   0, 0             	MOVWF	r0x00
0027cc   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0027ce   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
                                           ;	.line	692; meter_logger.c	fsk_proto.data |= 0x80;
0027d0   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
0027d2   110c     iorwf   0xc, 0, 0x1      	IORWF	(_fsk_proto + 12), W, B
0027d4   6e00     movwf   0, 0             	MOVWF	r0x00
0027d6   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0027d8   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
0027da   d065     bra     0x28a6           	BRA	_00421_DS_
                                           _00401_DS_:
                                           ;	.line	700; meter_logger.c	fsk_proto.state = STOP_BIT_WAIT;
0027dc   0e07     movlw   0x7              	MOVLW	0x07
0027de   0105     movlb   0x5              	BANKSEL	_fsk_proto
0027e0   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	702; meter_logger.c	break;
0027e2   d061     bra     0x28a6           	BRA	_00421_DS_
                                           _00403_DS_:
0027e4   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	705; meter_logger.c	fifo_put(fsk_proto.data);
0027e6   510c     movf    0xc, 0, 0x1      	MOVF	(_fsk_proto + 12), W, B
0027e8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0027ea   ec92     call    0x3f24, 0        	CALL	_fifo_put
0027ec   f01f
0027ee   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0027f0   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	706; meter_logger.c	fsk_proto.data = 0;
0027f2   6b0c     clrf    0xc, 0x1         	CLRF	(_fsk_proto + 12), B
                                           ;	.line	707; meter_logger.c	fsk_proto.state = START_BIT_WAIT;
0027f4   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
0027f6   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	709; meter_logger.c	INTCONbits.TMR0IE = 0;						
0027f8   9af2     bcf     0xf2, 0x5, 0     	BCF	_INTCONbits, 5
                                           ;	.line	712; meter_logger.c	break;
0027fa   d055     bra     0x28a6           	BRA	_00421_DS_
                                           _00405_DS_:
                                           ;	.line	714; meter_logger.c	switch (fsk_proto.state) {
0027fc   c500     movff   0x500, 0         	MOVFF	_fsk_proto, r0x00
0027fe   f000
002800   5000     movf    0, 0, 0          	MOVF	r0x00, W
002802   6e01     movwf   0x1, 0           	MOVWF	r0x01
002804   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002806   e00f     bz      0x2826           	BZ	_00406_DS_
002808   5000     movf    0, 0, 0          	MOVF	r0x00, W
00280a   0a01     xorlw   0x1              	XORLW	0x01
00280c   e015     bz      0x2838           	BZ	_00409_DS_
00280e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002810   0a03     xorlw   0x3              	XORLW	0x03
002812   e019     bz      0x2846           	BZ	_00410_DS_
002814   5000     movf    0, 0, 0          	MOVF	r0x00, W
002816   0a05     xorlw   0x5              	XORLW	0x05
002818   e101     bnz     0x281c           	BNZ	_00678_DS_
00281a   d039     bra     0x288e           	BRA	_00418_DS_
                                           _00678_DS_:
00281c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00281e   0a09     xorlw   0x9              	XORLW	0x09
002820   e101     bnz     0x2824           	BNZ	_00680_DS_
002822   d03c     bra     0x289c           	BRA	_00419_DS_
                                           _00680_DS_:
002824   d040     bra     0x28a6           	BRA	_00421_DS_
                                           _00406_DS_:
002826   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	717; meter_logger.c	if (fsk_proto.data_len == 8) {
002828   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
00282a   0a08     xorlw   0x8              	XORLW	0x08
00282c   e103     bnz     0x2834           	BNZ	_00408_DS_
                                           ;	.line	718; meter_logger.c	fsk_proto.state = IDLE;
00282e   0e01     movlw   0x1              	MOVLW	0x01
002830   0105     movlb   0x5              	BANKSEL	_fsk_proto
002832   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           _00408_DS_:
                                           ;	.line	721; meter_logger.c	DEBUG_PIN = 0;
002834   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	723; meter_logger.c	break;
002836   d037     bra     0x28a6           	BRA	_00421_DS_
                                           _00409_DS_:
                                           ;	.line	725; meter_logger.c	send_fsk_low();
002838   ecf8     call    0x17f0, 0        	CALL	_send_fsk_low
00283a   f00b
                                           ;	.line	726; meter_logger.c	fsk_proto.state = START_BIT_SENT;
00283c   0e03     movlw   0x3              	MOVLW	0x03
00283e   0105     movlb   0x5              	BANKSEL	_fsk_proto
002840   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	728; meter_logger.c	DEBUG_PIN = 1;
002842   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
                                           ;	.line	730; meter_logger.c	break;
002844   d030     bra     0x28a6           	BRA	_00421_DS_
                                           _00410_DS_:
                                           ;	.line	732; meter_logger.c	if (fsk_proto.data_len--) {
002846   c50d     movff   0x50d, 0         	MOVFF	(_fsk_proto + 13), r0x00
002848   f000
00284a   0400     decf    0, 0, 0          	DECF	r0x00, W
00284c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00284e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002850   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
002852   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
002854   5000     movf    0, 0, 0          	MOVF	r0x00, W
002856   e015     bz      0x2882           	BZ	_00415_DS_
                                           ;	.line	733; meter_logger.c	if (fsk_proto.data & (0x80 >> fsk_proto.data_len)) {
002858   0e80     movlw   0x80             	MOVLW	0x80
00285a   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
00285c   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
00285e   e005     bz      0x286a           	BZ	_00683_DS_
002860   6ce8     negf    0xe8, 0          	NEGF	WREG
002862   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00684_DS_:
002864   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
002866   0f01     addlw   0x1              	ADDLW	0x01
002868   e3fd     bnc     0x2864           	BNC	_00684_DS_
                                           _00683_DS_:
00286a   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
00286c   510c     movf    0xc, 0, 0x1      	MOVF	(_fsk_proto + 12), W, B
00286e   1600     andwf   0, 0x1, 0        	ANDWF	r0x00, F
002870   5000     movf    0, 0, 0          	MOVF	r0x00, W
002872   e004     bz      0x287c           	BZ	_00412_DS_
                                           ;	.line	734; meter_logger.c	send_fsk_high();
002874   ec18     call    0xc30, 0         	CALL	_send_fsk_high
002876   f006
                                           ;	.line	736; meter_logger.c	DEBUG_PIN = 0;
002878   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
00287a   d003     bra     0x2882           	BRA	_00415_DS_
                                           _00412_DS_:
                                           ;	.line	740; meter_logger.c	send_fsk_low();
00287c   ecf8     call    0x17f0, 0        	CALL	_send_fsk_low
00287e   f00b
                                           ;	.line	742; meter_logger.c	DEBUG_PIN = 1;
002880   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
                                           _00415_DS_:
002882   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	746; meter_logger.c	if (fsk_proto.data_len == 0) {
002884   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002886   e10f     bnz     0x28a6           	BNZ	_00421_DS_
                                           ;	.line	747; meter_logger.c	fsk_proto.state = DATA_SENT;
002888   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
00288a   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	749; meter_logger.c	break;
00288c   d00c     bra     0x28a6           	BRA	_00421_DS_
                                           _00418_DS_:
                                           ;	.line	751; meter_logger.c	send_fsk_high();
00288e   ec18     call    0xc30, 0         	CALL	_send_fsk_high
002890   f006
                                           ;	.line	752; meter_logger.c	fsk_proto.state = STOP_BIT_SENT;
002892   0e09     movlw   0x9              	MOVLW	0x09
002894   0105     movlb   0x5              	BANKSEL	_fsk_proto
002896   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	754; meter_logger.c	DEBUG_PIN = 0;
002898   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	756; meter_logger.c	break;
00289a   d005     bra     0x28a6           	BRA	_00421_DS_
                                           _00419_DS_:
                                           ;	.line	758; meter_logger.c	send_fsk_high();
00289c   ec18     call    0xc30, 0         	CALL	_send_fsk_high
00289e   f006
0028a0   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	759; meter_logger.c	fsk_proto.state = INIT_STATE;
0028a2   6b00     clrf    0, 0x1           	CLRF	_fsk_proto, B
                                           ;	.line	761; meter_logger.c	DEBUG_PIN = 0;
0028a4   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           _00421_DS_:
                                           ;	.line	768; meter_logger.c	INTCONbits.TMR0IF = 0;
0028a6   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           _00423_DS_:
                                           ;	.line	771; meter_logger.c	if (PIR2bits.CMIF && PIE2bits.CMIE) {
0028a8   aca1     btfss   0xa1, 0x6, 0     	BTFSS	_PIR2bits, 6
0028aa   d076     bra     0x2998           	BRA	_00442_DS_
0028ac   aca0     btfss   0xa0, 0x6, 0     	BTFSS	_PIE2bits, 6
0028ae   d074     bra     0x2998           	BRA	_00442_DS_
                                           ;	.line	773; meter_logger.c	if (CMCONbits.C1OUT) {		// rising edge
0028b0   acb4     btfss   0xb4, 0x6, 0     	BTFSS	_CMCONbits, 6
0028b2   d070     bra     0x2994           	BRA	_00437_DS_
                                           ;	.line	774; meter_logger.c	timer_0 = (unsigned int)(TMR0L) | ((unsigned int)(TMR0H) << 8);
0028b4   cfd6     movff   0xfd6, 0         	MOVFF	_TMR0L, r0x00
0028b6   f000
0028b8   6a01     clrf    0x1, 0           	CLRF	r0x01
0028ba   cfd7     movff   0xfd7, 0x2       	MOVFF	_TMR0H, r0x02
0028bc   f002
0028be   6a03     clrf    0x3, 0           	CLRF	r0x03
0028c0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0028c2   6e05     movwf   0x5, 0           	MOVWF	r0x05
0028c4   6a04     clrf    0x4, 0           	CLRF	r0x04
0028c6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0028c8   1000     iorwf   0, 0, 0          	IORWF	r0x00, W
0028ca   0105     movlb   0x5              	BANKSEL	_timer_0
0028cc   6f46     movwf   0x46, 0x1        	MOVWF	_timer_0, B
0028ce   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0028d0   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
                                           ; removed redundant BANKSEL
0028d2   6f47     movwf   0x47, 0x1        	MOVWF	(_timer_0 + 1), B
                                           ;	.line	779; meter_logger.c	DEBUG_PIN = 1;
0028d4   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
0028d6   0105     movlb   0x5              	BANKSEL	_last_timer_0
                                           ;	.line	781; meter_logger.c	fsk_proto.diff = timer_0 - last_timer_0;
0028d8   514a     movf    0x4a, 0, 0x1     	MOVF	_last_timer_0, W, B
0028da   0105     movlb   0x5              	BANKSEL	_timer_0
0028dc   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
0028de   6e00     movwf   0, 0             	MOVWF	r0x00
0028e0   0105     movlb   0x5              	BANKSEL	(_last_timer_0 + 1)
0028e2   514b     movf    0x4b, 0, 0x1     	MOVF	(_last_timer_0 + 1), W, B
0028e4   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0028e6   5947     subwfb  0x47, 0, 0x1     	SUBWFB	(_timer_0 + 1), W, B
0028e8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0028ea   5000     movf    0, 0, 0          	MOVF	r0x00, W
0028ec   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
0028ee   6f01     movwf   0x1, 0x1         	MOVWF	(_fsk_proto + 1), B
0028f0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0028f2   6f02     movwf   0x2, 0x1         	MOVWF	(_fsk_proto + 2), B
                                           ;	.line	782; meter_logger.c	last_timer_0 = timer_0;
0028f4   c546     movff   0x546, 0x54a     	MOVFF	_timer_0, _last_timer_0
0028f6   f54a
0028f8   c547     movff   0x547, 0x54b     	MOVFF	(_timer_0 + 1), (_last_timer_0 + 1)
0028fa   f54b
                                           ;	.line	784; meter_logger.c	if ((fsk_proto.diff > 340) && (fsk_proto.diff < 476)) {
0028fc   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
0028fe   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
002900   e102     bnz     0x2906           	BNZ	_00686_DS_
002902   0e55     movlw   0x55             	MOVLW	0x55
                                           ; removed redundant BANKSEL
002904   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00686_DS_:
002906   e330     bnc     0x2968           	BNC	_00433_DS_
002908   0e01     movlw   0x1              	MOVLW	0x01
00290a   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 2)
00290c   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
00290e   e102     bnz     0x2914           	BNZ	_00687_DS_
002910   0edc     movlw   0xdc             	MOVLW	0xdc
                                           ; removed redundant BANKSEL
002912   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00687_DS_:
002914   e229     bc      0x2968           	BC	_00433_DS_
002916   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
                                           ;	.line	785; meter_logger.c	fsk_proto.low_count += fsk_proto.diff;
002918   5101     movf    0x1, 0, 0x1      	MOVF	(_fsk_proto + 1), W, B
                                           ; removed redundant BANKSEL
00291a   2505     addwf   0x5, 0, 0x1      	ADDWF	(_fsk_proto + 5), W, B
00291c   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
00291e   5102     movf    0x2, 0, 0x1      	MOVF	(_fsk_proto + 2), W, B
                                           ; removed redundant BANKSEL
002920   2106     addwfc  0x6, 0, 0x1      	ADDWFC	(_fsk_proto + 6), W, B
002922   6e01     movwf   0x1, 0           	MOVWF	r0x01
002924   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002926   6f05     movwf   0x5, 0x1         	MOVWF	(_fsk_proto + 5), B
002928   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00292a   6f06     movwf   0x6, 0x1         	MOVWF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	786; meter_logger.c	if (fsk_proto.state == START_BIT_WAIT) {
00292c   5100     movf    0, 0, 0x1        	MOVF	_fsk_proto, W, B
00292e   0a02     xorlw   0x2              	XORLW	0x02
002930   e132     bnz     0x2996           	BNZ	_00438_DS_
                                           ;	.line	787; meter_logger.c	if (fsk_proto.low_count >= 800) {								// start bit received
002932   0e03     movlw   0x3              	MOVLW	0x03
002934   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 6)
002936   5d06     subwf   0x6, 0, 0x1      	SUBWF	(_fsk_proto + 6), W, B
002938   e102     bnz     0x293e           	BNZ	_00690_DS_
00293a   0e20     movlw   0x20             	MOVLW	0x20
                                           ; removed redundant BANKSEL
00293c   5d05     subwf   0x5, 0, 0x1      	SUBWF	(_fsk_proto + 5), W, B
                                           _00690_DS_:
00293e   e32b     bnc     0x2996           	BNC	_00438_DS_
002940   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	789; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
002942   5149     movf    0x49, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
002944   6e00     movwf   0, 0             	MOVWF	r0x00
002946   6a01     clrf    0x1, 0           	CLRF	r0x01
002948   5000     movf    0, 0, 0          	MOVF	r0x00, W
00294a   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	790; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
00294c   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00294e   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
002950   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 5)
                                           ;	.line	791; meter_logger.c	fsk_proto.low_count = 0;
002952   6b05     clrf    0x5, 0x1         	CLRF	(_fsk_proto + 5), B
                                           ; removed redundant BANKSEL
002954   6b06     clrf    0x6, 0x1         	CLRF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	792; meter_logger.c	fsk_proto.high_count = 0;
002956   6b07     clrf    0x7, 0x1         	CLRF	(_fsk_proto + 7), B
                                           ; removed redundant BANKSEL
002958   6b08     clrf    0x8, 0x1         	CLRF	(_fsk_proto + 8), B
                                           ; removed redundant BANKSEL
                                           ;	.line	794; meter_logger.c	fsk_proto.data_len = 0;
00295a   6b0d     clrf    0xd, 0x1         	CLRF	(_fsk_proto + 13), B
                                           ; removed redundant BANKSEL
                                           ;	.line	795; meter_logger.c	fsk_proto.data = 0;
00295c   6b0c     clrf    0xc, 0x1         	CLRF	(_fsk_proto + 12), B
                                           ;	.line	796; meter_logger.c	fsk_proto.state = DATA_WAIT;
00295e   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
002960   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	797; meter_logger.c	INTCONbits.TMR0IF = 0;		// clear flag so it dont enter isr now
002962   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	798; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
002964   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
002966   d017     bra     0x2996           	BRA	_00438_DS_
                                           _00433_DS_:
002968   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	804; meter_logger.c	if (fsk_proto.state == START_BIT_WAIT) {
00296a   5100     movf    0, 0, 0x1        	MOVF	_fsk_proto, W, B
00296c   0a02     xorlw   0x2              	XORLW	0x02
00296e   e106     bnz     0x297c           	BNZ	_00430_DS_
                                           _00692_DS_:
002970   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 5)
                                           ;	.line	805; meter_logger.c	fsk_proto.low_count = 0;
002972   6b05     clrf    0x5, 0x1         	CLRF	(_fsk_proto + 5), B
                                           ; removed redundant BANKSEL
002974   6b06     clrf    0x6, 0x1         	CLRF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	806; meter_logger.c	fsk_proto.high_count = 0;
002976   6b07     clrf    0x7, 0x1         	CLRF	(_fsk_proto + 7), B
                                           ; removed redundant BANKSEL
002978   6b08     clrf    0x8, 0x1         	CLRF	(_fsk_proto + 8), B
00297a   d00d     bra     0x2996           	BRA	_00438_DS_
                                           _00430_DS_:
00297c   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
                                           ;	.line	809; meter_logger.c	fsk_proto.high_count += fsk_proto.diff;
00297e   5101     movf    0x1, 0, 0x1      	MOVF	(_fsk_proto + 1), W, B
                                           ; removed redundant BANKSEL
002980   2507     addwf   0x7, 0, 0x1      	ADDWF	(_fsk_proto + 7), W, B
002982   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002984   5102     movf    0x2, 0, 0x1      	MOVF	(_fsk_proto + 2), W, B
                                           ; removed redundant BANKSEL
002986   2108     addwfc  0x8, 0, 0x1      	ADDWFC	(_fsk_proto + 8), W, B
002988   6e01     movwf   0x1, 0           	MOVWF	r0x01
00298a   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00298c   6f07     movwf   0x7, 0x1         	MOVWF	(_fsk_proto + 7), B
00298e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002990   6f08     movwf   0x8, 0x1         	MOVWF	(_fsk_proto + 8), B
002992   d001     bra     0x2996           	BRA	_00438_DS_
                                           _00437_DS_:
                                           ;	.line	815; meter_logger.c	DEBUG_PIN = 0;
002994   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           _00438_DS_:
                                           ;	.line	819; meter_logger.c	PIR2bits.CMIF = 0;
002996   9ca1     bcf     0xa1, 0x6, 0     	BCF	_PIR2bits, 6
                                           _00442_DS_:
002998   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
00299a   f005
00299c   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00299e   f004
0029a0   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0029a2   f003
0029a4   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0029a6   f002
0029a8   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0029aa   f001
0029ac   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0029ae   f000
0029b0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0029b2   ffd9
0029b4   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
0029b6   fffb
0029b8   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
0029ba   fffa
0029bc   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
0029be   ffea
0029c0   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
0029c2   ffe9
0029c4   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
0029c6   fff4
0029c8   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
0029ca   fff3
0029cc   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0029ce   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
0029d0   ffe0
0029d2   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
0029d4   ffd8
0029d6   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           ___str_0:
0029d8   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x67, 0x65
0029da   654d     cpfsgt  0x4d, 0x1        
0029dc   6574     cpfsgt  0x74, 0x1        
0029de   4c72     dcfsnz  0x72, 0, 0       
0029e0   676f     tstfsz  0x6f, 0x1        
0029e2   6567     cpfsgt  0x67, 0x1        
0029e4   2e72     decfsz  0x72, 0x1, 0     	DB	0x72, 0x2e, 0x2e, 0x2e, 0x20, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x20
0029e6   2e2e     decfsz  0x2e, 0x1, 0     
0029e8   7320     btg     0x20, 0x1, 0x1   
0029ea   7265     btg     0x65, 0x1, 0     
0029ec   6169     cpfslt  0x69, 0x1        
0029ee   206c     addwfc  0x6c, 0, 0       
0029f0   6f77     movwf   0x77, 0x1        	DB	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x0a, 0x0d, 0x00
0029f2   6b72     clrf    0x72, 0x1        
0029f4   6e69     movwf   0x69, 0          
0029f6   0a67     xorlw   0x67             
0029f8   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_1:
0029fa   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x70, 0x72, 0x69, 0x6e
0029fc   7270     btg     0x70, 0x1, 0     
0029fe   7365     btg     0x65, 0x1, 0x1   
002a00   2073     addwfc  0x73, 0, 0       
002a02   7270     btg     0x70, 0x1, 0     
002a04   6e69     movwf   0x69, 0          
002a06   2074     addwfc  0x74, 0, 0       	DB	0x74, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x0a, 0x0d
002a08   6e6f     movwf   0x6f, 0          
002a0a   7420     btg     0x20, 0x2, 0     
002a0c   7365     btg     0x65, 0x1, 0x1   
002a0e   6f74     movwf   0x74, 0x1        
002a10   0d0a     mullw   0xa              
002a12   0000     nop                      	DB	0x00
                                           ; ; Starting pCode block
                                           ___str_2:
002a14   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x64, 0x6f, 0x6e, 0x65, 0x20, 0x72, 0x65, 0x63, 0x65, 0x69
002a16   6f64     movwf   0x64, 0x1        
002a18   656e     cpfsgt  0x6e, 0x1        
002a1a   7220     btg     0x20, 0x1, 0     
002a1c   6365     cpfseq  0x65, 0x1        
002a1e   6965     setf    0x65, 0x1        
002a20   6976     setf    0x76, 0x1        	DB	0x76, 0x69, 0x6e, 0x67, 0x20, 0x2d, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x69
002a22   676e     tstfsz  0x6e, 0x1        
002a24   2d20     decfsz  0x20, 0, 0x1     
002a26   7320     btg     0x20, 0x1, 0x1   
002a28   6e65     movwf   0x65, 0          
002a2a   6964     setf    0x64, 0x1        
002a2c   676e     tstfsz  0x6e, 0x1        	DB	0x6e, 0x67, 0x20, 0x76, 0x69, 0x61, 0x20, 0x73, 0x65, 0x72, 0x69, 0x61
002a2e   7620     btg     0x20, 0x3, 0     
002a30   6169     cpfslt  0x69, 0x1        
002a32   7320     btg     0x20, 0x1, 0x1   
002a34   7265     btg     0x65, 0x1, 0     
002a36   6169     cpfslt  0x69, 0x1        
002a38   2f6c     decfsz  0x6c, 0x1, 0x1   	DB	0x6c, 0x2f, 0x66, 0x73, 0x6b, 0x0a, 0x0d, 0x00
002a3a   7366     btg     0x66, 0x1, 0x1   
002a3c   0a6b     xorlw   0x6b             
002a3e   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_3:
002a40   6425     cpfsgt  0x25, 0          	DB	0x25, 0x64, 0x20, 0x00
002a42   0020     dw      0x20             
                                           ; ; Starting pCode block
                                           ___str_4:
002a44   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6f
002a46   6177     cpfslt  0x77, 0x1        
002a48   7469     btg     0x69, 0x2, 0     
002a4a   6e69     movwf   0x69, 0          
002a4c   2067     addwfc  0x67, 0, 0       
002a4e   6f66     movwf   0x66, 0x1        
002a50   2072     addwfc  0x72, 0, 0       	DB	0x72, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e
002a52   656e     cpfsgt  0x6e, 0x1        
002a54   2077     addwfc  0x77, 0, 0       
002a56   6f63     movwf   0x63, 0x1        
002a58   6d6d     negf    0x6d, 0x1        
002a5a   6e61     movwf   0x61, 0          
002a5c   0a64     xorlw   0x64             	DB	0x64, 0x0a, 0x0d, 0x00
002a5e   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_5:
002a60   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x74, 0x65, 0x73, 0x74, 0x20
002a62   6365     cpfseq  0x65, 0x1        
002a64   6f68     movwf   0x68, 0x1        
002a66   7420     btg     0x20, 0x2, 0     
002a68   7365     btg     0x65, 0x1, 0x1   
002a6a   2074     addwfc  0x74, 0, 0       
002a6c   202d     addwfc  0x2d, 0, 0       	DB	0x2d, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x20, 0x73, 0x6f, 0x6d, 0x65, 0x20
002a6e   6573     cpfsgt  0x73, 0x1        
002a70   646e     cpfsgt  0x6e, 0          
002a72   7320     btg     0x20, 0x1, 0x1   
002a74   6d6f     negf    0x6f, 0x1        
002a76   2065     addwfc  0x65, 0, 0       
002a78   6164     cpfslt  0x64, 0x1        	DB	0x64, 0x61, 0x74, 0x61, 0x0a, 0x0d, 0x00
002a7a   6174     cpfslt  0x74, 0x1        
002a7c   0d0a     mullw   0xa              
002a7e   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_6:
002a80   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002a82   616b     cpfslt  0x6b, 0x1        
002a84   736d     btg     0x6d, 0x1, 0x1   
002a86   7274     btg     0x74, 0x1, 0     
002a88   7075     btg     0x75, 0, 0       
002a8a   2d20     decfsz  0x20, 0, 0x1     
002a8c   7320     btg     0x20, 0x1, 0x1   	DB	0x20, 0x73, 0x65, 0x6e, 0x64, 0x20, 0x6b, 0x6d, 0x70, 0x20, 0x66, 0x72
002a8e   6e65     movwf   0x65, 0          
002a90   2064     addwfc  0x64, 0, 0       
002a92   6d6b     negf    0x6b, 0x1        
002a94   2070     addwfc  0x70, 0, 0       
002a96   7266     btg     0x66, 0x1, 0     
002a98   6d61     negf    0x61, 0x1        	DB	0x61, 0x6d, 0x65, 0x20, 0x64, 0x61, 0x74, 0x61, 0x0a, 0x0d, 0x00
002a9a   2065     addwfc  0x65, 0, 0       
002a9c   6164     cpfslt  0x64, 0x1        
002a9e   6174     cpfslt  0x74, 0x1        
002aa0   0d0a     mullw   0xa              
002aa2   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_7:
002aa4   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002aa6   616b     cpfslt  0x6b, 0x1        
002aa8   736d     btg     0x6d, 0x1, 0x1   
002aaa   7274     btg     0x74, 0x1, 0     
002aac   7075     btg     0x75, 0, 0       
002aae   2d20     decfsz  0x20, 0, 0x1     
002ab0   6b20     clrf    0x20, 0x1        	DB	0x20, 0x6b, 0x6d, 0x70, 0x20, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x20, 0x72
002ab2   706d     btg     0x6d, 0, 0       
002ab4   6620     tstfsz  0x20, 0          
002ab6   6172     cpfslt  0x72, 0x1        
002ab8   656d     cpfsgt  0x6d, 0x1        
002aba   7220     btg     0x20, 0x1, 0     
002abc   6365     cpfseq  0x65, 0x1        	DB	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x3a, 0x0a, 0x0d, 0x00
002abe   6965     setf    0x65, 0x1        
002ac0   6576     cpfsgt  0x76, 0x1        
002ac2   3a64     swapf   0x64, 0x1, 0     
002ac4   0d0a     mullw   0xa              
002ac6   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_8:
002ac8   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002aca   616b     cpfslt  0x6b, 0x1        
002acc   736d     btg     0x6d, 0x1, 0x1   
002ace   7274     btg     0x74, 0x1, 0     
002ad0   7075     btg     0x75, 0, 0       
002ad2   2d20     decfsz  0x20, 0, 0x1     
002ad4   6b20     clrf    0x20, 0x1        	DB	0x20, 0x6b, 0x6d, 0x70, 0x20, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x20, 0x72
002ad6   706d     btg     0x6d, 0, 0       
002ad8   7220     btg     0x20, 0x1, 0     
002ada   7065     btg     0x65, 0, 0       
002adc   796c     btg     0x6c, 0x4, 0x1   
002ade   7220     btg     0x20, 0x1, 0     
002ae0   6365     cpfseq  0x65, 0x1        	DB	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x3a, 0x0a, 0x0d, 0x00
002ae2   6965     setf    0x65, 0x1        
002ae4   6576     cpfsgt  0x76, 0x1        
002ae6   3a64     swapf   0x64, 0x1, 0     
002ae8   0d0a     mullw   0xa              
002aea   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_9:
002aec   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6e, 0x6f, 0x20, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x20, 0x66
002aee   6f6e     movwf   0x6e, 0x1        
002af0   7220     btg     0x20, 0x1, 0     
002af2   7065     btg     0x65, 0, 0       
002af4   796c     btg     0x6c, 0x4, 0x1   
002af6   6620     tstfsz  0x20, 0          
002af8   6f72     movwf   0x72, 0x1        	DB	0x72, 0x6f, 0x6d, 0x20, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x0a, 0x0d, 0x00
002afa   206d     addwfc  0x6d, 0, 0       
002afc   656d     cpfsgt  0x6d, 0x1        
002afe   6574     cpfsgt  0x74, 0x1        
002b00   0a72     xorlw   0x72             
002b02   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_10:
002b04   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002b06   616b     cpfslt  0x6b, 0x1        
002b08   736d     btg     0x6d, 0x1, 0x1   
002b0a   7274     btg     0x74, 0x1, 0     
002b0c   7075     btg     0x75, 0, 0       
002b0e   2d20     decfsz  0x20, 0, 0x1     
002b10   7320     btg     0x20, 0x1, 0x1   	DB	0x20, 0x73, 0x65, 0x6e, 0x64, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63
002b12   6e65     movwf   0x65, 0          
002b14   2064     addwfc  0x64, 0, 0       
002b16   756d     btg     0x6d, 0x2, 0x1   
002b18   746c     btg     0x6c, 0x2, 0     
002b1a   6369     cpfseq  0x69, 0x1        
002b1c   6c61     negf    0x61, 0          	DB	0x61, 0x6c, 0x20, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x20, 0x64, 0x61, 0x74
002b1e   6620     tstfsz  0x20, 0          
002b20   6172     cpfslt  0x72, 0x1        
002b22   656d     cpfsgt  0x6d, 0x1        
002b24   6420     cpfsgt  0x20, 0          
002b26   7461     btg     0x61, 0x2, 0     
002b28   0a61     xorlw   0x61             	DB	0x61, 0x0a, 0x0d, 0x00
002b2a   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_11:
002b2c   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002b2e   616b     cpfslt  0x6b, 0x1        
002b30   736d     btg     0x6d, 0x1, 0x1   
002b32   7274     btg     0x74, 0x1, 0     
002b34   7075     btg     0x75, 0, 0       
002b36   2d20     decfsz  0x20, 0, 0x1     
002b38   6d20     negf    0x20, 0x1        	DB	0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x20, 0x66, 0x72
002b3a   6c75     negf    0x75, 0          
002b3c   6974     setf    0x74, 0x1        
002b3e   6163     cpfslt  0x63, 0x1        
002b40   206c     addwfc  0x6c, 0, 0       
002b42   7266     btg     0x66, 0x1, 0     
002b44   6d61     negf    0x61, 0x1        	DB	0x61, 0x6d, 0x65, 0x20, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64
002b46   2065     addwfc  0x65, 0, 0       
002b48   6572     cpfsgt  0x72, 0x1        
002b4a   6563     cpfsgt  0x63, 0x1        
002b4c   7669     btg     0x69, 0x3, 0     
002b4e   6465     cpfsgt  0x65, 0          
002b50   0a3a     xorlw   0x3a             	DB	0x3a, 0x0a, 0x0d, 0x00
002b52   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_12:
002b54   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002b56   616b     cpfslt  0x6b, 0x1        
002b58   736d     btg     0x6d, 0x1, 0x1   
002b5a   7274     btg     0x74, 0x1, 0     
002b5c   7075     btg     0x75, 0, 0       
002b5e   2d20     decfsz  0x20, 0, 0x1     
002b60   6d20     negf    0x20, 0x1        	DB	0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x20, 0x72, 0x65
002b62   6c75     negf    0x75, 0          
002b64   6974     setf    0x74, 0x1        
002b66   6163     cpfslt  0x63, 0x1        
002b68   206c     addwfc  0x6c, 0, 0       
002b6a   6572     cpfsgt  0x72, 0x1        
002b6c   6c70     negf    0x70, 0          	DB	0x70, 0x6c, 0x79, 0x20, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64
002b6e   2079     addwfc  0x79, 0, 0       
002b70   6572     cpfsgt  0x72, 0x1        
002b72   6563     cpfsgt  0x63, 0x1        
002b74   7669     btg     0x69, 0x3, 0     
002b76   6465     cpfsgt  0x65, 0          
002b78   0a3a     xorlw   0x3a             	DB	0x3a, 0x0a, 0x0d, 0x00
002b7a   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_13:
002b7c   6142     cpfslt  0x42, 0x1        	DB	0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x3a, 0x20, 0x25, 0x64, 0x6d
002b7e   7474     btg     0x74, 0x2, 0     
002b80   7265     btg     0x65, 0x1, 0     
002b82   3a79     swapf   0x79, 0x1, 0     
002b84   2520     addwf   0x20, 0, 0x1     
002b86   6d64     negf    0x64, 0x1        
002b88   0a56     xorlw   0x56             	DB	0x56, 0x0a, 0x0d, 0x00
002b8a   000d     tblwt   *+               
                                           
                                           
                                           ; Statistics:
                                           ; code size:	14434 (0x3862) bytes (11.01%)
                                           ;           	 7217 (0x1c31) words
                                           ; udata size:	 1198 (0x04ae) bytes (66.85%)
                                           ; access size:	   14 (0x000e) bytes
                                           
                                           
                                           	end
