gplink-1.2.0 #980 (Jul 31 2013)
Copyright (c) 1998-2013 gputils project
Listing File Generated: 6-18-2014  00:08:36
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.4.0 #8981 (Jun  6 2014) (Mac OS X x86_64)
                                           ; This file was generated Wed Jun 18 00:08:35 2014
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f2550
                                           	radix	dec
                                           	CONFIG	PLLDIV=2
                                           	CONFIG	CPUDIV=OSC1_PLL2
                                           	CONFIG	USBDIV=1
                                           	CONFIG	FOSC=INTOSC_XT
                                           	CONFIG	FCMEN=OFF
                                           	CONFIG	IESO=OFF
                                           	CONFIG	PWRT=OFF
                                           	CONFIG	BOR=OFF
                                           	CONFIG	BORV=3
                                           	CONFIG	VREGEN=OFF
                                           	CONFIG	WDT=OFF
                                           	CONFIG	WDTPS=32768
                                           	CONFIG	CCP2MX=ON
                                           	CONFIG	PBADEN=OFF
                                           	CONFIG	LPT1OSC=OFF
                                           	CONFIG	MCLRE=ON
                                           	CONFIG	STVREN=ON
                                           	CONFIG	LVP=ON
                                           	CONFIG	XINST=OFF
                                           	CONFIG	CP0=OFF
                                           	CONFIG	CP1=OFF
                                           	CONFIG	CP2=OFF
                                           	CONFIG	CP3=OFF
                                           	CONFIG	CPB=OFF
                                           	CONFIG	CPD=OFF
                                           	CONFIG	WRT0=OFF
                                           	CONFIG	WRT1=OFF
                                           	CONFIG	WRT2=OFF
                                           	CONFIG	WRT3=OFF
                                           	CONFIG	WRTC=OFF
                                           	CONFIG	WRTB=OFF
                                           	CONFIG	WRTD=OFF
                                           	CONFIG	EBTR0=OFF
                                           	CONFIG	EBTR1=OFF
                                           	CONFIG	EBTR2=OFF
                                           	CONFIG	EBTR3=OFF
                                           	CONFIG	EBTRB=OFF
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_c
                                           	global	_sleep_ms
                                           	global	_init_system
                                           	global	_get_dev_id
                                           	global	_my_usart_open
                                           	global	_reverse
                                           	global	_testo_valid_err_corr
                                           	global	_testo_ir_enable
                                           	global	_testo_ir_disable
                                           	global	_rs232_tx_enable
                                           	global	_rs232_tx_disable
                                           	global	_rs232_rx_enable
                                           	global	_rs232_rx_disable
                                           	global	_rs232_tx_byte
                                           	global	_fsk_tx_enable
                                           	global	_fsk_tx_disable
                                           	global	_fsk_rx_enable
                                           	global	_fsk_rx_disable
                                           	global	_send_fsk_high
                                           	global	_send_fsk_low
                                           	global	_fsk_tx_byte
                                           	global	_fifo_in_use
                                           	global	_fifo_put
                                           	global	_fifo_get
                                           	global	_fifo_snoop
                                           	global	_get_battery_level
                                           	global	_flash_led
                                           	global	__debug
                                           	global	__debug2
                                           	global	_timer_0
                                           	global	_last_timer_0
                                           	global	_timer_1_ms
                                           	global	_timer0_reload
                                           	global	_debug_buffer
                                           	global	_fifo_head
                                           	global	_fifo_tail
                                           	global	_fifo_buffer_0
                                           	global	_fifo_buffer_1
                                           	global	_fifo_buffer_2
                                           	global	_fifo_buffer_3
                                           	global	_codec_type
                                           	global	_led_flash
                                           	global	_testo_ir_proto
                                           	global	_rs232_proto
                                           	global	_fsk_proto
                                           	global	_main
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrput1
                                           	extern	_UFRMLbits
                                           	extern	_UFRMHbits
                                           	extern	_UIRbits
                                           	extern	_UIEbits
                                           	extern	_UEIRbits
                                           	extern	_UEIEbits
                                           	extern	_USTATbits
                                           	extern	_UCONbits
                                           	extern	_UADDRbits
                                           	extern	_UCFGbits
                                           	extern	_UEP0bits
                                           	extern	_UEP1bits
                                           	extern	_UEP2bits
                                           	extern	_UEP3bits
                                           	extern	_UEP4bits
                                           	extern	_UEP5bits
                                           	extern	_UEP6bits
                                           	extern	_UEP7bits
                                           	extern	_UEP8bits
                                           	extern	_UEP9bits
                                           	extern	_UEP10bits
                                           	extern	_UEP11bits
                                           	extern	_UEP12bits
                                           	extern	_UEP13bits
                                           	extern	_UEP14bits
                                           	extern	_UEP15bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_EECON1bits
                                           	extern	_RCSTAbits
                                           	extern	_TXSTAbits
                                           	extern	_T3CONbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_CCP1ASbits
                                           	extern	_ECCP1ASbits
                                           	extern	_CCP1DELbits
                                           	extern	_ECCP1DELbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCTLbits
                                           	extern	_CCP2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_UFRM
                                           	extern	_UFRML
                                           	extern	_UFRMH
                                           	extern	_UIR
                                           	extern	_UIE
                                           	extern	_UEIR
                                           	extern	_UEIE
                                           	extern	_USTAT
                                           	extern	_UCON
                                           	extern	_UADDR
                                           	extern	_UCFG
                                           	extern	_UEP0
                                           	extern	_UEP1
                                           	extern	_UEP2
                                           	extern	_UEP3
                                           	extern	_UEP4
                                           	extern	_UEP5
                                           	extern	_UEP6
                                           	extern	_UEP7
                                           	extern	_UEP8
                                           	extern	_UEP9
                                           	extern	_UEP10
                                           	extern	_UEP11
                                           	extern	_UEP12
                                           	extern	_UEP13
                                           	extern	_UEP14
                                           	extern	_UEP15
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_OSCTUNE
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_RCSTA
                                           	extern	_TXSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_CCP1AS
                                           	extern	_ECCP1AS
                                           	extern	_CCP1DEL
                                           	extern	_ECCP1DEL
                                           	extern	_BAUDCON
                                           	extern	_BAUDCTL
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_sprintf
                                           	extern	_usart_drdy
                                           	extern	_usart_getc
                                           	extern	_usart_putc
                                           	extern	_usart_puts
                                           	extern	_adc_open
                                           	extern	_adc_close
                                           	extern	_adc_conv
                                           	extern	_adc_busy
                                           	extern	_adc_read
                                           	extern	_adc_setchannel
                                           	extern	__mullong
                                           	extern	__divulong
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           r0x0d	res	1
                                           
                                           udata_meter_logger_0	udata
                                           _c	res	1
                                           
                                           udata_meter_logger_1	udata
                                           _timer_1_ms	res	2
                                           
                                           udata_meter_logger_2	udata
                                           _fifo_head	res	2
                                           
                                           udata_meter_logger_3	udata
                                           _fifo_tail	res	2
                                           
                                           udata_meter_logger_4	udata
                                           _debug_buffer	res	128
                                           
                                           udata_meter_logger_5	udata
                                           _main_cmd_1_87	res	1
                                           
                                           udata_meter_logger_6	udata
                                           _main_sub_cmd_1_87	res	1
                                           
                                           udata_meter_logger_7	udata
                                           _timer_0	res	2
                                           
                                           udata_meter_logger_8	udata
                                           _timer0_reload	res	2
                                           
                                           udata_meter_logger_9	udata
                                           _testo_ir_proto	res	6
                                           
                                           udata_meter_logger_10	udata
                                           _rs232_proto	res	6
                                           
                                           udata_meter_logger_11	udata
                                           _fsk_proto	res	16
                                           
                                           udata_meter_logger_12	udata
                                           _last_timer_0	res	2
                                           
                                           udata_meter_logger_13	udata
                                           _codec_type	res	1
                                           
                                           udata_meter_logger_14	udata
                                           _led_flash	res	2
                                           
                                           udata_meter_logger_15	udata
                                           _fifo_buffer_0	res	256
                                           
                                           udata_meter_logger_16	udata
                                           _fifo_buffer_1	res	256
                                           
                                           udata_meter_logger_17	udata
                                           _fifo_buffer_2	res	256
                                           
                                           udata_meter_logger_18	udata
                                           _fifo_buffer_3	res	256
                                           
                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_meter_logger_ivec_0x1_isr_high_prio	code	0X000008
                                           ivec_0x1_isr_high_prio:
000008   ef18     goto    0x2430           	GOTO	_isr_high_prio
00000a   f012
                                           
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_meter_logger_ivec_0x2_isr_low_prio	code	0X000018
                                           ivec_0x2_isr_low_prio:
000018   eff5     goto    0x47ea           	GOTO	_isr_low_prio
00001a   f023
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_meter_logger__main	code
                                           _main:
                                           ;	.line	115; meter_logger.c	OSCCONbits.SCS = 0x10;
00001c   50d3     movf    0xd3, 0, 0       	MOVF	_OSCCONbits, W
00001e   0bfc     andlw   0xfc             	ANDLW	0xfc
000020   6ed3     movwf   0xd3, 0          	MOVWF	_OSCCONbits
                                           ;	.line	117; meter_logger.c	OSCCONbits.IRCF = 0x7;	// 8 MHz
000022   50d3     movf    0xd3, 0, 0       	MOVF	_OSCCONbits, W
000024   0b8f     andlw   0x8f             	ANDLW	0x8f
000026   0970     iorlw   0x70             	IORLW	0x70
000028   6ed3     movwf   0xd3, 0          	MOVWF	_OSCCONbits
00002a   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	120; meter_logger.c	timer_1_ms = 0;
00002c   6b40     clrf    0x40, 0x1        	CLRF	_timer_1_ms, B
                                           ; removed redundant BANKSEL
00002e   6b41     clrf    0x41, 0x1        	CLRF	(_timer_1_ms + 1), B
000030   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	122; meter_logger.c	fifo_head = 0;
000032   6b42     clrf    0x42, 0x1        	CLRF	_fifo_head, B
                                           ; removed redundant BANKSEL
000034   6b43     clrf    0x43, 0x1        	CLRF	(_fifo_head + 1), B
000036   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	123; meter_logger.c	fifo_tail = 0;
000038   6b44     clrf    0x44, 0x1        	CLRF	_fifo_tail, B
                                           ; removed redundant BANKSEL
00003a   6b45     clrf    0x45, 0x1        	CLRF	(_fifo_tail + 1), B
                                           ;	.line	125; meter_logger.c	init_system();	
00003c   ecd1     call    0x4ba2, 0        	CALL	_init_system
00003e   f025
                                           ;	.line	126; meter_logger.c	sleep_ms(100);
000040   0e00     movlw   0                	MOVLW	0x00
000042   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000044   0e64     movlw   0x64             	MOVLW	0x64
000046   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000048   ec57     call    0x48ae, 0        	CALL	_sleep_ms
00004a   f024
00004c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00004e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	129; meter_logger.c	usart_puts("\n\rMeterLogger... serial working\n\r");
000050   0e00     movlw   0                	MOVLW	UPPER(___str_0)
000052   6e02     movwf   0x2, 0           	MOVWF	r0x02
000054   0e2a     movlw   0x2a             	MOVLW	HIGH(___str_0)
000056   6e01     movwf   0x1, 0           	MOVWF	r0x01
000058   0ed2     movlw   0xd2             	MOVLW	LOW(___str_0)
00005a   6e00     movwf   0, 0             	MOVWF	r0x00
00005c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00005e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000060   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000062   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000064   5000     movf    0, 0, 0          	MOVF	r0x00, W
000066   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000068   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
00006a   f025
00006c   0e03     movlw   0x3              	MOVLW	0x03
00006e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	133; meter_logger.c	get_battery_level();
000070   ec77     call    0x34ee, 0        	CALL	_get_battery_level
000072   f01a
                                           ;	.line	136; meter_logger.c	dev_id = get_dev_id();
000074   ec6a     call    0x4ad4, 0        	CALL	_get_dev_id
000076   f025
000078   6e00     movwf   0, 0             	MOVWF	r0x00
00007a   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00007c   f001
                                           ;	.line	138; meter_logger.c	if (dev_id == 0x1240) {
00007e   5000     movf    0, 0, 0          	MOVF	r0x00, W
000080   0a40     xorlw   0x40             	XORLW	0x40
000082   e103     bnz     0x8a             	BNZ	_00325_DS_
000084   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000086   0a12     xorlw   0x12             	XORLW	0x12
000088   e001     bz      0x8c             	BZ	_00326_DS_
                                           _00325_DS_:
00008a   d01d     bra     0xc6             	BRA	_00109_DS_
                                           _00326_DS_:
                                           ;	.line	139; meter_logger.c	sprintf(debug_buffer, "Processor: pic18f2550\n\r");
00008c   0e00     movlw   0                	MOVLW	UPPER(___str_1)
00008e   6e04     movwf   0x4, 0           	MOVWF	r0x04
000090   0e2a     movlw   0x2a             	MOVLW	HIGH(___str_1)
000092   6e03     movwf   0x3, 0           	MOVWF	r0x03
000094   0ef4     movlw   0xf4             	MOVLW	LOW(___str_1)
000096   6e02     movwf   0x2, 0           	MOVWF	r0x02
000098   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00009a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00009c   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00009e   6e05     movwf   0x5, 0           	MOVWF	r0x05
0000a0   0e80     movlw   0x80             	MOVLW	0x80
0000a2   6e07     movwf   0x7, 0           	MOVWF	r0x07
0000a4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0000a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000a8   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0000aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000ac   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0000ae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000b0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0000b2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000b4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0000b6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000b8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0000ba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000bc   ecb9     call    0x4372, 0        	CALL	_sprintf
0000be   f021
0000c0   0e06     movlw   0x6              	MOVLW	0x06
0000c2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0000c4   d044     bra     0x14e            	BRA	_00110_DS_
                                           _00109_DS_:
                                           ;	.line	141; meter_logger.c	else if (dev_id == 0x2a40) {
0000c6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0000c8   0a40     xorlw   0x40             	XORLW	0x40
0000ca   e103     bnz     0xd2             	BNZ	_00327_DS_
0000cc   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0000ce   0a2a     xorlw   0x2a             	XORLW	0x2a
0000d0   e001     bz      0xd4             	BZ	_00328_DS_
                                           _00327_DS_:
0000d2   d01d     bra     0x10e            	BRA	_00106_DS_
                                           _00328_DS_:
                                           ;	.line	142; meter_logger.c	sprintf(debug_buffer, "Processor: pic18f2553\n\r");
0000d4   0e00     movlw   0                	MOVLW	UPPER(___str_2)
0000d6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0000d8   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_2)
0000da   6e03     movwf   0x3, 0           	MOVWF	r0x03
0000dc   0e0c     movlw   0xc              	MOVLW	LOW(___str_2)
0000de   6e02     movwf   0x2, 0           	MOVWF	r0x02
0000e0   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0000e2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0000e4   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0000e6   6e05     movwf   0x5, 0           	MOVWF	r0x05
0000e8   0e80     movlw   0x80             	MOVLW	0x80
0000ea   6e07     movwf   0x7, 0           	MOVWF	r0x07
0000ec   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0000ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000f0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0000f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000f4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0000f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000f8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0000fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000fc   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0000fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000100   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000102   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000104   ecb9     call    0x4372, 0        	CALL	_sprintf
000106   f021
000108   0e06     movlw   0x6              	MOVLW	0x06
00010a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00010c   d020     bra     0x14e            	BRA	_00110_DS_
                                           _00106_DS_:
                                           ;	.line	145; meter_logger.c	sprintf(debug_buffer, "Processor: unsupported, device id: 0x%04x\n\r", dev_id);
00010e   0e00     movlw   0                	MOVLW	UPPER(___str_3)
000110   6e04     movwf   0x4, 0           	MOVWF	r0x04
000112   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_3)
000114   6e03     movwf   0x3, 0           	MOVWF	r0x03
000116   0e24     movlw   0x24             	MOVLW	LOW(___str_3)
000118   6e02     movwf   0x2, 0           	MOVWF	r0x02
00011a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00011c   6e06     movwf   0x6, 0           	MOVWF	r0x06
00011e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000120   6e05     movwf   0x5, 0           	MOVWF	r0x05
000122   0e80     movlw   0x80             	MOVLW	0x80
000124   6e07     movwf   0x7, 0           	MOVWF	r0x07
000126   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000128   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00012a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00012c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00012e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000130   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000132   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000134   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000136   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000138   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00013a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00013c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00013e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000140   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000142   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000144   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000146   ecb9     call    0x4372, 0        	CALL	_sprintf
000148   f021
00014a   0e08     movlw   0x8              	MOVLW	0x08
00014c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _00110_DS_:
                                           ;	.line	147; meter_logger.c	usart_puts(debug_buffer);
00014e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000150   6e01     movwf   0x1, 0           	MOVWF	r0x01
000152   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000154   6e00     movwf   0, 0             	MOVWF	r0x00
000156   0e80     movlw   0x80             	MOVLW	0x80
000158   6e02     movwf   0x2, 0           	MOVWF	r0x02
00015a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00015c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00015e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000160   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000162   5000     movf    0, 0, 0          	MOVF	r0x00, W
000164   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000166   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
000168   f025
00016a   0e03     movlw   0x3              	MOVLW	0x03
00016c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	150; meter_logger.c	fsk_rx_enable();
00016e   eca3     call    0x4b46, 0        	CALL	_fsk_rx_enable
000170   f025
                                           _00168_DS_:
                                           ;	.line	152; meter_logger.c	if (fifo_get(&cmd)) {
000172   0e05     movlw   0x5              	MOVLW	HIGH(_main_cmd_1_87)
000174   6e01     movwf   0x1, 0           	MOVWF	r0x01
000176   0e4f     movlw   0x4f             	MOVLW	LOW(_main_cmd_1_87)
000178   6e00     movwf   0, 0             	MOVWF	r0x00
00017a   0e80     movlw   0x80             	MOVLW	0x80
00017c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00017e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000180   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000182   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000184   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000186   5000     movf    0, 0, 0          	MOVF	r0x00, W
000188   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00018a   ec42     call    0x3e84, 0        	CALL	_fifo_get
00018c   f01f
00018e   6e00     movwf   0, 0             	MOVWF	r0x00
000190   0e03     movlw   0x3              	MOVLW	0x03
000192   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000194   5000     movf    0, 0, 0          	MOVF	r0x00, W
000196   e0ed     bz      0x172            	BZ	_00168_DS_
                                           ;	.line	153; meter_logger.c	switch (cmd) {
000198   0efb     movlw   0xfb             	MOVLW	0xfb
00019a   0105     movlb   0x5              	BANKSEL	_main_cmd_1_87
00019c   5d4f     subwf   0x4f, 0, 0x1     	SUBWF	_main_cmd_1_87, W, B
00019e   e3e9     bnc     0x172            	BNC	_00168_DS_
0001a0   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
0001a2   254f     addwf   0x4f, 0, 0x1     	ADDWF	_main_cmd_1_87, W, B
0001a4   6e00     movwf   0, 0             	MOVWF	r0x00
0001a6   6afa     clrf    0xfa, 0          	CLRF	PCLATH
0001a8   6afb     clrf    0xfb, 0          	CLRF	PCLATU
0001aa   3400     rlcf    0, 0, 0          	RLCF	r0x00, W
0001ac   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0001ae   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
0001b0   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0001b2   0bfc     andlw   0xfc             	ANDLW	0xfc
0001b4   0fc4     addlw   0xc4             	ADDLW	LOW(_00330_DS_)
0001b6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001b8   0e01     movlw   0x1              	MOVLW	HIGH(_00330_DS_)
0001ba   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
0001bc   0e00     movlw   0                	MOVLW	UPPER(_00330_DS_)
0001be   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0001c0   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0001c2   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00330_DS_:
0001c4   ef8c     goto    0xd18            	GOTO	_00163_DS_
0001c6   f006
0001c8   ef98     goto    0x930            	GOTO	_00145_DS_
0001ca   f004
0001cc   ef9c     goto    0x538            	GOTO	_00127_DS_
0001ce   f002
0001d0   efec     goto    0x1d8            	GOTO	_00111_DS_
0001d2   f000
0001d4   efcc     goto    0x398            	GOTO	_00119_DS_
0001d6   f001
                                           _00111_DS_:
                                           ;	.line	155; meter_logger.c	fsk_rx_disable();
0001d8   ec39     call    0x5072, 0        	CALL	_fsk_rx_disable
0001da   f028
                                           ;	.line	156; meter_logger.c	usart_puts("\n\rpress print on testo\n\r");
0001dc   0e00     movlw   0                	MOVLW	UPPER(___str_4)
0001de   6e02     movwf   0x2, 0           	MOVWF	r0x02
0001e0   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_4)
0001e2   6e01     movwf   0x1, 0           	MOVWF	r0x01
0001e4   0e50     movlw   0x50             	MOVLW	LOW(___str_4)
0001e6   6e00     movwf   0, 0             	MOVWF	r0x00
0001e8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0001ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001ec   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0001ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001f0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0001f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001f4   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
0001f6   f025
0001f8   0e03     movlw   0x3              	MOVLW	0x03
0001fa   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	157; meter_logger.c	testo_ir_enable();
0001fc   ec5b     call    0x4cb6, 0        	CALL	_testo_ir_enable
0001fe   f026
                                           ;	.line	159; meter_logger.c	last_fifo_size = 0;
000200   6a00     clrf    0, 0             	CLRF	r0x00
000202   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	160; meter_logger.c	sleep_ms(10000);						// 10 seconds to start printing
000204   0e27     movlw   0x27             	MOVLW	0x27
000206   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000208   0e10     movlw   0x10             	MOVLW	0x10
00020a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00020c   ec57     call    0x48ae, 0        	CALL	_sleep_ms
00020e   f024
000210   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000212   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	161; meter_logger.c	fifo_size = fifo_in_use();
000214   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
000216   f026
000218   6e02     movwf   0x2, 0           	MOVWF	r0x02
00021a   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00021c   f003
                                           _00112_DS_:
                                           ;	.line	162; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
00021e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000220   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000222   e102     bnz     0x228            	BNZ	_00331_DS_
000224   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000226   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00331_DS_:
000228   e212     bc      0x24e            	BC	_00114_DS_
                                           ;	.line	163; meter_logger.c	last_fifo_size = fifo_size;
00022a   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
00022c   f000
00022e   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000230   f001
                                           ;	.line	164; meter_logger.c	sleep_ms(200);						// return data when no data for 200 ms
000232   0e00     movlw   0                	MOVLW	0x00
000234   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000236   0ec8     movlw   0xc8             	MOVLW	0xc8
000238   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00023a   ec57     call    0x48ae, 0        	CALL	_sleep_ms
00023c   f024
00023e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000240   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	165; meter_logger.c	fifo_size = fifo_in_use();
000242   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
000244   f026
000246   6e02     movwf   0x2, 0           	MOVWF	r0x02
000248   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00024a   f003
00024c   d7e8     bra     0x21e            	BRA	_00112_DS_
                                           _00114_DS_:
                                           ;	.line	167; meter_logger.c	testo_ir_disable();
00024e   ec43     call    0x5086, 0        	CALL	_testo_ir_disable
000250   f028
                                           ;	.line	170; meter_logger.c	usart_puts("\n\rdone receiving - sending via serial/fsk\n\r");
000252   0e00     movlw   0                	MOVLW	UPPER(___str_5)
000254   6e06     movwf   0x6, 0           	MOVWF	r0x06
000256   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_5)
000258   6e05     movwf   0x5, 0           	MOVWF	r0x05
00025a   0e6a     movlw   0x6a             	MOVLW	LOW(___str_5)
00025c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00025e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000260   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000262   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000264   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000266   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000268   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00026a   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
00026c   f025
00026e   0e03     movlw   0x3              	MOVLW	0x03
000270   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	173; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000272   6a04     clrf    0x4, 0           	CLRF	r0x04
000274   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00171_DS_:
000276   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
000278   f026
00027a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00027c   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
00027e   f007
000280   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000282   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000284   e102     bnz     0x28a            	BNZ	_00332_DS_
000286   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000288   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00332_DS_:
00028a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00028c   d04c     bra     0x326            	BRA	_00115_DS_
                                           ;	.line	175; meter_logger.c	fifo_get(&sub_cmd);
00028e   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_87)
000290   6e07     movwf   0x7, 0           	MOVWF	r0x07
000292   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_87)
000294   6e06     movwf   0x6, 0           	MOVWF	r0x06
000296   0e80     movlw   0x80             	MOVLW	0x80
000298   6e08     movwf   0x8, 0           	MOVWF	r0x08
00029a   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00029c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00029e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0002a0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002a2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0002a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002a6   ec42     call    0x3e84, 0        	CALL	_fifo_get
0002a8   f01f
0002aa   0e03     movlw   0x3              	MOVLW	0x03
0002ac   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	177; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
0002ae   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_87, r0x06
0002b0   f006
0002b2   6a07     clrf    0x7, 0           	CLRF	r0x07
0002b4   0e00     movlw   0                	MOVLW	UPPER(___str_6)
0002b6   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0002b8   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_6)
0002ba   6e09     movwf   0x9, 0           	MOVWF	r0x09
0002bc   0e96     movlw   0x96             	MOVLW	LOW(___str_6)
0002be   6e08     movwf   0x8, 0           	MOVWF	r0x08
0002c0   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0002c2   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
0002c4   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0002c6   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0002c8   0e80     movlw   0x80             	MOVLW	0x80
0002ca   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
0002cc   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0002ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002d0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0002d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002d4   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
0002d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002d8   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0002da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002dc   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0002de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002e0   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
0002e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002e4   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
0002e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002e8   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
0002ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002ec   ecb9     call    0x4372, 0        	CALL	_sprintf
0002ee   f021
0002f0   0e08     movlw   0x8              	MOVLW	0x08
0002f2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	178; meter_logger.c	usart_puts(debug_buffer);
0002f4   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0002f6   6e07     movwf   0x7, 0           	MOVWF	r0x07
0002f8   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0002fa   6e06     movwf   0x6, 0           	MOVWF	r0x06
0002fc   0e80     movlw   0x80             	MOVLW	0x80
0002fe   6e08     movwf   0x8, 0           	MOVWF	r0x08
000300   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000302   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000304   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000306   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000308   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00030a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00030c   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
00030e   f025
000310   0e03     movlw   0x3              	MOVLW	0x03
000312   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000314   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_87
                                           ;	.line	180; meter_logger.c	fifo_put(sub_cmd);
000316   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_87, W, B
000318   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00031a   ec9e     call    0x413c, 0        	CALL	_fifo_put
00031c   f020
00031e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	173; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000320   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000322   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000324   d7a8     bra     0x276            	BRA	_00171_DS_
                                           _00115_DS_:
                                           ;	.line	183; meter_logger.c	fsk_tx_enable();
000326   eccd     call    0x4d9a, 0        	CALL	_fsk_tx_enable
000328   f026
                                           _00116_DS_:
                                           ;	.line	184; meter_logger.c	while (fifo_get(&cmd)) {	// and print them to serial
00032a   0e05     movlw   0x5              	MOVLW	HIGH(_main_cmd_1_87)
00032c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00032e   0e4f     movlw   0x4f             	MOVLW	LOW(_main_cmd_1_87)
000330   6e04     movwf   0x4, 0           	MOVWF	r0x04
000332   0e80     movlw   0x80             	MOVLW	0x80
000334   6e06     movwf   0x6, 0           	MOVWF	r0x06
000336   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000338   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00033a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00033c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00033e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000340   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000342   ec42     call    0x3e84, 0        	CALL	_fifo_get
000344   f01f
000346   6e04     movwf   0x4, 0           	MOVWF	r0x04
000348   0e03     movlw   0x3              	MOVLW	0x03
00034a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00034c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00034e   e00f     bz      0x36e            	BZ	_00118_DS_
000350   0105     movlb   0x5              	BANKSEL	_main_cmd_1_87
                                           ;	.line	185; meter_logger.c	fsk_tx_byte(cmd);
000352   514f     movf    0x4f, 0, 0x1     	MOVF	_main_cmd_1_87, W, B
000354   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000356   ec46     call    0x4e8c, 0        	CALL	_fsk_tx_byte
000358   f027
00035a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	186; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
00035c   0e00     movlw   0                	MOVLW	0x00
00035e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000360   0e02     movlw   0x2              	MOVLW	0x02
000362   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000364   ec57     call    0x48ae, 0        	CALL	_sleep_ms
000366   f024
000368   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00036a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00036c   d7de     bra     0x32a            	BRA	_00116_DS_
                                           _00118_DS_:
                                           ;	.line	188; meter_logger.c	fsk_tx_disable();
00036e   ec0d     call    0x501a, 0        	CALL	_fsk_tx_disable
000370   f028
                                           ;	.line	190; meter_logger.c	usart_puts("\n\rwaiting for new command\n\r");
000372   0e00     movlw   0                	MOVLW	UPPER(___str_7)
000374   6e06     movwf   0x6, 0           	MOVWF	r0x06
000376   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_7)
000378   6e05     movwf   0x5, 0           	MOVWF	r0x05
00037a   0e9a     movlw   0x9a             	MOVLW	LOW(___str_7)
00037c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00037e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000380   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000382   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000384   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000386   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000388   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00038a   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
00038c   f025
00038e   0e03     movlw   0x3              	MOVLW	0x03
000390   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	192; meter_logger.c	fsk_rx_enable();
000392   eca3     call    0x4b46, 0        	CALL	_fsk_rx_enable
000394   f025
                                           ;	.line	193; meter_logger.c	break;
000396   d6ed     bra     0x172            	BRA	_00168_DS_
                                           _00119_DS_:
                                           ;	.line	197; meter_logger.c	fsk_rx_disable();
000398   ec39     call    0x5072, 0        	CALL	_fsk_rx_disable
00039a   f028
                                           ;	.line	198; meter_logger.c	usart_puts("\n\recho test - send some data\n\r");
00039c   0e00     movlw   0                	MOVLW	UPPER(___str_8)
00039e   6e06     movwf   0x6, 0           	MOVWF	r0x06
0003a0   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_8)
0003a2   6e05     movwf   0x5, 0           	MOVWF	r0x05
0003a4   0eb6     movlw   0xb6             	MOVLW	LOW(___str_8)
0003a6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0003a8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0003aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003ac   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0003ae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003b0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0003b2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003b4   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
0003b6   f025
0003b8   0e03     movlw   0x3              	MOVLW	0x03
0003ba   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	199; meter_logger.c	fsk_rx_enable();
0003bc   eca3     call    0x4b46, 0        	CALL	_fsk_rx_enable
0003be   f025
                                           ;	.line	203; meter_logger.c	last_fifo_size = 0;
0003c0   6a00     clrf    0, 0             	CLRF	r0x00
0003c2   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	204; meter_logger.c	sleep_ms(1000);							// 1 second
0003c4   0e03     movlw   0x3              	MOVLW	0x03
0003c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003c8   0ee8     movlw   0xe8             	MOVLW	0xe8
0003ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003cc   ec57     call    0x48ae, 0        	CALL	_sleep_ms
0003ce   f024
0003d0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0003d2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	205; meter_logger.c	fifo_size = fifo_in_use();
0003d4   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
0003d6   f026
0003d8   6e02     movwf   0x2, 0           	MOVWF	r0x02
0003da   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0003dc   f003
                                           _00120_DS_:
                                           ;	.line	206; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
0003de   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0003e0   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0003e2   e102     bnz     0x3e8            	BNZ	_00333_DS_
0003e4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0003e6   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00333_DS_:
0003e8   e212     bc      0x40e            	BC	_00122_DS_
                                           ;	.line	207; meter_logger.c	last_fifo_size = fifo_size;
0003ea   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
0003ec   f000
0003ee   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
0003f0   f001
                                           ;	.line	208; meter_logger.c	sleep_ms(500);						// return data when no data for 500 ms
0003f2   0e01     movlw   0x1              	MOVLW	0x01
0003f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003f6   0ef4     movlw   0xf4             	MOVLW	0xf4
0003f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003fa   ec57     call    0x48ae, 0        	CALL	_sleep_ms
0003fc   f024
0003fe   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000400   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	209; meter_logger.c	fifo_size = fifo_in_use();
000402   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
000404   f026
000406   6e02     movwf   0x2, 0           	MOVWF	r0x02
000408   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00040a   f003
00040c   d7e8     bra     0x3de            	BRA	_00120_DS_
                                           _00122_DS_:
                                           ;	.line	211; meter_logger.c	fsk_rx_disable();
00040e   ec39     call    0x5072, 0        	CALL	_fsk_rx_disable
000410   f028
                                           ;	.line	214; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000412   6a04     clrf    0x4, 0           	CLRF	r0x04
000414   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00174_DS_:
000416   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
000418   f026
00041a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00041c   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
00041e   f007
000420   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000422   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000424   e102     bnz     0x42a            	BNZ	_00334_DS_
000426   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000428   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00334_DS_:
00042a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00042c   d04c     bra     0x4c6            	BRA	_00123_DS_
                                           ;	.line	216; meter_logger.c	fifo_get(&sub_cmd);
00042e   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_87)
000430   6e07     movwf   0x7, 0           	MOVWF	r0x07
000432   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_87)
000434   6e06     movwf   0x6, 0           	MOVWF	r0x06
000436   0e80     movlw   0x80             	MOVLW	0x80
000438   6e08     movwf   0x8, 0           	MOVWF	r0x08
00043a   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00043c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00043e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000440   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000442   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000444   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000446   ec42     call    0x3e84, 0        	CALL	_fifo_get
000448   f01f
00044a   0e03     movlw   0x3              	MOVLW	0x03
00044c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	218; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
00044e   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_87, r0x06
000450   f006
000452   6a07     clrf    0x7, 0           	CLRF	r0x07
000454   0e00     movlw   0                	MOVLW	UPPER(___str_6)
000456   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000458   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_6)
00045a   6e09     movwf   0x9, 0           	MOVWF	r0x09
00045c   0e96     movlw   0x96             	MOVLW	LOW(___str_6)
00045e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000460   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000462   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
000464   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000466   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
000468   0e80     movlw   0x80             	MOVLW	0x80
00046a   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
00046c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00046e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000470   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000472   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000474   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000476   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000478   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00047a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00047c   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00047e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000480   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000482   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000484   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000486   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000488   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
00048a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00048c   ecb9     call    0x4372, 0        	CALL	_sprintf
00048e   f021
000490   0e08     movlw   0x8              	MOVLW	0x08
000492   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	219; meter_logger.c	usart_puts(debug_buffer);
000494   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000496   6e07     movwf   0x7, 0           	MOVWF	r0x07
000498   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00049a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00049c   0e80     movlw   0x80             	MOVLW	0x80
00049e   6e08     movwf   0x8, 0           	MOVWF	r0x08
0004a0   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0004a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004a4   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0004a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004a8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0004aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004ac   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
0004ae   f025
0004b0   0e03     movlw   0x3              	MOVLW	0x03
0004b2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0004b4   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_87
                                           ;	.line	221; meter_logger.c	fifo_put(sub_cmd);
0004b6   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_87, W, B
0004b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004ba   ec9e     call    0x413c, 0        	CALL	_fifo_put
0004bc   f020
0004be   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	214; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
0004c0   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
0004c2   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
0004c4   d7a8     bra     0x416            	BRA	_00174_DS_
                                           _00123_DS_:
                                           ;	.line	226; meter_logger.c	fsk_tx_enable();
0004c6   eccd     call    0x4d9a, 0        	CALL	_fsk_tx_enable
0004c8   f026
                                           _00124_DS_:
                                           ;	.line	227; meter_logger.c	while (fifo_get(&sub_cmd)) {
0004ca   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_87)
0004cc   6e05     movwf   0x5, 0           	MOVWF	r0x05
0004ce   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_87)
0004d0   6e04     movwf   0x4, 0           	MOVWF	r0x04
0004d2   0e80     movlw   0x80             	MOVLW	0x80
0004d4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0004d6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0004d8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004da   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0004dc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004de   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0004e0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004e2   ec42     call    0x3e84, 0        	CALL	_fifo_get
0004e4   f01f
0004e6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0004e8   0e03     movlw   0x3              	MOVLW	0x03
0004ea   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0004ec   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0004ee   e00f     bz      0x50e            	BZ	_00126_DS_
0004f0   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_87
                                           ;	.line	228; meter_logger.c	fsk_tx_byte(sub_cmd);
0004f2   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_87, W, B
0004f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004f6   ec46     call    0x4e8c, 0        	CALL	_fsk_tx_byte
0004f8   f027
0004fa   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	229; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
0004fc   0e00     movlw   0                	MOVLW	0x00
0004fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000500   0e02     movlw   0x2              	MOVLW	0x02
000502   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000504   ec57     call    0x48ae, 0        	CALL	_sleep_ms
000506   f024
000508   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00050a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00050c   d7de     bra     0x4ca            	BRA	_00124_DS_
                                           _00126_DS_:
                                           ;	.line	231; meter_logger.c	fsk_tx_disable();
00050e   ec0d     call    0x501a, 0        	CALL	_fsk_tx_disable
000510   f028
                                           ;	.line	234; meter_logger.c	usart_puts("\n\rwaiting for new command\n\r");
000512   0e00     movlw   0                	MOVLW	UPPER(___str_7)
000514   6e06     movwf   0x6, 0           	MOVWF	r0x06
000516   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_7)
000518   6e05     movwf   0x5, 0           	MOVWF	r0x05
00051a   0e9a     movlw   0x9a             	MOVLW	LOW(___str_7)
00051c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00051e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000520   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000522   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000524   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000526   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000528   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00052a   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
00052c   f025
00052e   0e03     movlw   0x3              	MOVLW	0x03
000530   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	236; meter_logger.c	fsk_rx_enable();
000532   eca3     call    0x4b46, 0        	CALL	_fsk_rx_enable
000534   f025
                                           ;	.line	237; meter_logger.c	break;
000536   d61d     bra     0x172            	BRA	_00168_DS_
                                           _00127_DS_:
                                           ;	.line	240; meter_logger.c	fsk_rx_disable();
000538   ec39     call    0x5072, 0        	CALL	_fsk_rx_disable
00053a   f028
                                           ;	.line	242; meter_logger.c	usart_puts("\n\rkamstrup - send kmp frame data\n\r");
00053c   0e00     movlw   0                	MOVLW	UPPER(___str_9)
00053e   6e06     movwf   0x6, 0           	MOVWF	r0x06
000540   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_9)
000542   6e05     movwf   0x5, 0           	MOVWF	r0x05
000544   0ed6     movlw   0xd6             	MOVLW	LOW(___str_9)
000546   6e04     movwf   0x4, 0           	MOVWF	r0x04
000548   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00054a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00054c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00054e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000550   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000552   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000554   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
000556   f025
000558   0e03     movlw   0x3              	MOVLW	0x03
00055a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	246; meter_logger.c	fsk_rx_enable();
00055c   eca3     call    0x4b46, 0        	CALL	_fsk_rx_enable
00055e   f025
                                           ;	.line	247; meter_logger.c	last_fifo_size = 0;
000560   6a00     clrf    0, 0             	CLRF	r0x00
000562   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	248; meter_logger.c	sleep_ms(400);							// sleep 400 ms to let some data come in
000564   0e01     movlw   0x1              	MOVLW	0x01
000566   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000568   0e90     movlw   0x90             	MOVLW	0x90
00056a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00056c   ec57     call    0x48ae, 0        	CALL	_sleep_ms
00056e   f024
000570   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000572   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	249; meter_logger.c	fifo_size = fifo_in_use();
000574   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
000576   f026
000578   6e02     movwf   0x2, 0           	MOVWF	r0x02
00057a   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00057c   f003
                                           _00128_DS_:
                                           ;	.line	250; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
00057e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000580   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000582   e102     bnz     0x588            	BNZ	_00335_DS_
000584   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000586   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00335_DS_:
000588   e212     bc      0x5ae            	BC	_00130_DS_
                                           ;	.line	251; meter_logger.c	last_fifo_size = fifo_size;
00058a   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
00058c   f000
00058e   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000590   f001
                                           ;	.line	252; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
000592   0e00     movlw   0                	MOVLW	0x00
000594   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000596   0ec8     movlw   0xc8             	MOVLW	0xc8
000598   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00059a   ec57     call    0x48ae, 0        	CALL	_sleep_ms
00059c   f024
00059e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0005a0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	253; meter_logger.c	fifo_size = fifo_in_use();
0005a2   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
0005a4   f026
0005a6   6e02     movwf   0x2, 0           	MOVWF	r0x02
0005a8   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0005aa   f003
0005ac   d7e8     bra     0x57e            	BRA	_00128_DS_
                                           _00130_DS_:
                                           ;	.line	255; meter_logger.c	fsk_rx_disable();
0005ae   ec39     call    0x5072, 0        	CALL	_fsk_rx_disable
0005b0   f028
                                           ;	.line	258; meter_logger.c	usart_puts("\n\rkamstrup - kmp frame received:\n\r");
0005b2   0e00     movlw   0                	MOVLW	UPPER(___str_10)
0005b4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0005b6   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_10)
0005b8   6e05     movwf   0x5, 0           	MOVWF	r0x05
0005ba   0efa     movlw   0xfa             	MOVLW	LOW(___str_10)
0005bc   6e04     movwf   0x4, 0           	MOVWF	r0x04
0005be   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0005c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005c2   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0005c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005c6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0005c8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005ca   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
0005cc   f025
0005ce   0e03     movlw   0x3              	MOVLW	0x03
0005d0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	261; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
0005d2   6a04     clrf    0x4, 0           	CLRF	r0x04
0005d4   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00177_DS_:
0005d6   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
0005d8   f026
0005da   6e06     movwf   0x6, 0           	MOVWF	r0x06
0005dc   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
0005de   f007
0005e0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0005e2   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0005e4   e102     bnz     0x5ea            	BNZ	_00336_DS_
0005e6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0005e8   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00336_DS_:
0005ea   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0005ec   d04c     bra     0x686            	BRA	_00131_DS_
                                           ;	.line	263; meter_logger.c	fifo_get(&sub_cmd);
0005ee   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_87)
0005f0   6e07     movwf   0x7, 0           	MOVWF	r0x07
0005f2   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_87)
0005f4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0005f6   0e80     movlw   0x80             	MOVLW	0x80
0005f8   6e08     movwf   0x8, 0           	MOVWF	r0x08
0005fa   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0005fc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005fe   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000600   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000602   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000604   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000606   ec42     call    0x3e84, 0        	CALL	_fifo_get
000608   f01f
00060a   0e03     movlw   0x3              	MOVLW	0x03
00060c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	265; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
00060e   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_87, r0x06
000610   f006
000612   6a07     clrf    0x7, 0           	CLRF	r0x07
000614   0e00     movlw   0                	MOVLW	UPPER(___str_6)
000616   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000618   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_6)
00061a   6e09     movwf   0x9, 0           	MOVWF	r0x09
00061c   0e96     movlw   0x96             	MOVLW	LOW(___str_6)
00061e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000620   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000622   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
000624   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000626   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
000628   0e80     movlw   0x80             	MOVLW	0x80
00062a   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
00062c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00062e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000630   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000632   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000634   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000636   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000638   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00063a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00063c   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00063e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000640   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000642   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000644   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000646   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000648   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
00064a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00064c   ecb9     call    0x4372, 0        	CALL	_sprintf
00064e   f021
000650   0e08     movlw   0x8              	MOVLW	0x08
000652   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	266; meter_logger.c	usart_puts(debug_buffer);
000654   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000656   6e07     movwf   0x7, 0           	MOVWF	r0x07
000658   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00065a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00065c   0e80     movlw   0x80             	MOVLW	0x80
00065e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000660   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000662   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000664   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000666   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000668   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00066a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00066c   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
00066e   f025
000670   0e03     movlw   0x3              	MOVLW	0x03
000672   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000674   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_87
                                           ;	.line	268; meter_logger.c	fifo_put(sub_cmd);
000676   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_87, W, B
000678   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00067a   ec9e     call    0x413c, 0        	CALL	_fifo_put
00067c   f020
00067e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	261; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000680   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000682   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000684   d7a8     bra     0x5d6            	BRA	_00177_DS_
                                           _00131_DS_:
                                           ;	.line	272; meter_logger.c	rs232_tx_enable(TIMER0_RS232_1200);
000686   0ef9     movlw   0xf9             	MOVLW	0xf9
000688   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00068a   0eae     movlw   0xae             	MOVLW	0xae
00068c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00068e   ec3c     call    0x4c78, 0        	CALL	_rs232_tx_enable
000690   f026
000692   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000694   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00132_DS_:
                                           ;	.line	273; meter_logger.c	while (fifo_get(&sub_cmd)) {
000696   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_87)
000698   6e05     movwf   0x5, 0           	MOVWF	r0x05
00069a   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_87)
00069c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00069e   0e80     movlw   0x80             	MOVLW	0x80
0006a0   6e06     movwf   0x6, 0           	MOVWF	r0x06
0006a2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0006a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006a6   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0006a8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006aa   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0006ac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006ae   ec42     call    0x3e84, 0        	CALL	_fifo_get
0006b0   f01f
0006b2   6e04     movwf   0x4, 0           	MOVWF	r0x04
0006b4   0e03     movlw   0x3              	MOVLW	0x03
0006b6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0006b8   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0006ba   e00f     bz      0x6da            	BZ	_00134_DS_
0006bc   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_87
                                           ;	.line	274; meter_logger.c	rs232_tx_byte(sub_cmd);
0006be   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_87, W, B
0006c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006c2   ece7     call    0x4dce, 0        	CALL	_rs232_tx_byte
0006c4   f026
0006c6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	275; meter_logger.c	sleep_ms(RS232_TX_SLEEP);
0006c8   0e00     movlw   0                	MOVLW	0x00
0006ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006cc   0e0c     movlw   0xc              	MOVLW	0x0c
0006ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006d0   ec57     call    0x48ae, 0        	CALL	_sleep_ms
0006d2   f024
0006d4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0006d6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0006d8   d7de     bra     0x696            	BRA	_00132_DS_
                                           _00134_DS_:
                                           ;	.line	277; meter_logger.c	rs232_tx_disable();
0006da   ec23     call    0x5046, 0        	CALL	_rs232_tx_disable
0006dc   f028
                                           ;	.line	283; meter_logger.c	rs232_rx_enable(TIMER0_RS232_1200);
0006de   0ef9     movlw   0xf9             	MOVLW	0xf9
0006e0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006e2   0eae     movlw   0xae             	MOVLW	0xae
0006e4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006e6   ecfc     call    0x4bf8, 0        	CALL	_rs232_rx_enable
0006e8   f025
0006ea   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0006ec   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	284; meter_logger.c	last_fifo_size = 0;
0006ee   6a00     clrf    0, 0             	CLRF	r0x00
0006f0   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	285; meter_logger.c	sleep_ms(400);							// sleep 200 ms to let some data come in
0006f2   0e01     movlw   0x1              	MOVLW	0x01
0006f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006f6   0e90     movlw   0x90             	MOVLW	0x90
0006f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006fa   ec57     call    0x48ae, 0        	CALL	_sleep_ms
0006fc   f024
0006fe   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000700   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	286; meter_logger.c	fifo_size = fifo_in_use();
000702   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
000704   f026
000706   6e02     movwf   0x2, 0           	MOVWF	r0x02
000708   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00070a   f003
                                           _00135_DS_:
                                           ;	.line	288; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
00070c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00070e   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000710   e102     bnz     0x716            	BNZ	_00337_DS_
000712   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000714   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00337_DS_:
000716   e212     bc      0x73c            	BC	_00137_DS_
                                           ;	.line	289; meter_logger.c	last_fifo_size = fifo_size;
000718   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
00071a   f000
00071c   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
00071e   f001
                                           ;	.line	290; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
000720   0e00     movlw   0                	MOVLW	0x00
000722   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000724   0ec8     movlw   0xc8             	MOVLW	0xc8
000726   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000728   ec57     call    0x48ae, 0        	CALL	_sleep_ms
00072a   f024
00072c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00072e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	291; meter_logger.c	fifo_size = fifo_in_use();
000730   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
000732   f026
000734   6e02     movwf   0x2, 0           	MOVWF	r0x02
000736   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000738   f003
00073a   d7e8     bra     0x70c            	BRA	_00135_DS_
                                           _00137_DS_:
                                           ;	.line	294; meter_logger.c	rs232_rx_disable();
00073c   ec18     call    0x5030, 0        	CALL	_rs232_rx_disable
00073e   f028
                                           ;	.line	298; meter_logger.c	usart_puts("\n\rkamstrup - kmp reply received:\n\r");
000740   0e00     movlw   0                	MOVLW	UPPER(___str_11)
000742   6e06     movwf   0x6, 0           	MOVWF	r0x06
000744   0e2c     movlw   0x2c             	MOVLW	HIGH(___str_11)
000746   6e05     movwf   0x5, 0           	MOVWF	r0x05
000748   0e1e     movlw   0x1e             	MOVLW	LOW(___str_11)
00074a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00074c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00074e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000750   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000752   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000754   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000756   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000758   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
00075a   f025
00075c   0e03     movlw   0x3              	MOVLW	0x03
00075e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	301; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000760   6a04     clrf    0x4, 0           	CLRF	r0x04
000762   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00180_DS_:
000764   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
000766   f026
000768   6e06     movwf   0x6, 0           	MOVWF	r0x06
00076a   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
00076c   f007
00076e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000770   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000772   e102     bnz     0x778            	BNZ	_00338_DS_
000774   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000776   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00338_DS_:
000778   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00077a   d04c     bra     0x814            	BRA	_00138_DS_
                                           ;	.line	303; meter_logger.c	fifo_get(&sub_cmd);
00077c   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_87)
00077e   6e07     movwf   0x7, 0           	MOVWF	r0x07
000780   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_87)
000782   6e06     movwf   0x6, 0           	MOVWF	r0x06
000784   0e80     movlw   0x80             	MOVLW	0x80
000786   6e08     movwf   0x8, 0           	MOVWF	r0x08
000788   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00078a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00078c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00078e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000790   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000792   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000794   ec42     call    0x3e84, 0        	CALL	_fifo_get
000796   f01f
000798   0e03     movlw   0x3              	MOVLW	0x03
00079a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	305; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
00079c   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_87, r0x06
00079e   f006
0007a0   6a07     clrf    0x7, 0           	CLRF	r0x07
0007a2   0e00     movlw   0                	MOVLW	UPPER(___str_6)
0007a4   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0007a6   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_6)
0007a8   6e09     movwf   0x9, 0           	MOVWF	r0x09
0007aa   0e96     movlw   0x96             	MOVLW	LOW(___str_6)
0007ac   6e08     movwf   0x8, 0           	MOVWF	r0x08
0007ae   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0007b0   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
0007b2   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0007b4   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0007b6   0e80     movlw   0x80             	MOVLW	0x80
0007b8   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
0007ba   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0007bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007be   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0007c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007c2   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
0007c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007c6   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0007c8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007ca   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0007cc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007ce   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
0007d0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007d2   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
0007d4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007d6   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
0007d8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007da   ecb9     call    0x4372, 0        	CALL	_sprintf
0007dc   f021
0007de   0e08     movlw   0x8              	MOVLW	0x08
0007e0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	306; meter_logger.c	usart_puts(debug_buffer);
0007e2   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0007e4   6e07     movwf   0x7, 0           	MOVWF	r0x07
0007e6   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0007e8   6e06     movwf   0x6, 0           	MOVWF	r0x06
0007ea   0e80     movlw   0x80             	MOVLW	0x80
0007ec   6e08     movwf   0x8, 0           	MOVWF	r0x08
0007ee   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0007f0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007f2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0007f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007f6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0007f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007fa   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
0007fc   f025
0007fe   0e03     movlw   0x3              	MOVLW	0x03
000800   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000802   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_87
                                           ;	.line	308; meter_logger.c	fifo_put(sub_cmd);
000804   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_87, W, B
000806   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000808   ec9e     call    0x413c, 0        	CALL	_fifo_put
00080a   f020
00080c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	301; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
00080e   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000810   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000812   d7a8     bra     0x764            	BRA	_00180_DS_
                                           _00138_DS_:
                                           ;	.line	311; meter_logger.c	if (fifo_in_use()) {
000814   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
000816   f026
000818   6e04     movwf   0x4, 0           	MOVWF	r0x04
00081a   cff3     movff   0xff3, 0x5       	MOVFF	PRODL, r0x05
00081c   f005
00081e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000820   1005     iorwf   0x5, 0, 0        	IORWF	r0x05, W
000822   e02b     bz      0x87a            	BZ	_00143_DS_
                                           ;	.line	313; meter_logger.c	DEBUG2_PIN = 1;
000824   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000826   0000     nop                      	nop
000828   0000     nop                      	nop
                                           	
                                           ;	.line	318; meter_logger.c	DEBUG2_PIN = 0;
00082a   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	319; meter_logger.c	fsk_tx_enable();
00082c   eccd     call    0x4d9a, 0        	CALL	_fsk_tx_enable
00082e   f026
                                           _00139_DS_:
                                           ;	.line	320; meter_logger.c	while (fifo_get(&sub_cmd)) {
000830   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_87)
000832   6e05     movwf   0x5, 0           	MOVWF	r0x05
000834   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_87)
000836   6e04     movwf   0x4, 0           	MOVWF	r0x04
000838   0e80     movlw   0x80             	MOVLW	0x80
00083a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00083c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00083e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000840   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000842   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000844   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000846   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000848   ec42     call    0x3e84, 0        	CALL	_fifo_get
00084a   f01f
00084c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00084e   0e03     movlw   0x3              	MOVLW	0x03
000850   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000852   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000854   e00f     bz      0x874            	BZ	_00141_DS_
000856   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_87
                                           ;	.line	321; meter_logger.c	fsk_tx_byte(sub_cmd);
000858   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_87, W, B
00085a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00085c   ec46     call    0x4e8c, 0        	CALL	_fsk_tx_byte
00085e   f027
000860   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	322; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000862   0e00     movlw   0                	MOVLW	0x00
000864   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000866   0e02     movlw   0x2              	MOVLW	0x02
000868   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00086a   ec57     call    0x48ae, 0        	CALL	_sleep_ms
00086c   f024
00086e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000870   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000872   d7de     bra     0x830            	BRA	_00139_DS_
                                           _00141_DS_:
                                           ;	.line	324; meter_logger.c	fsk_tx_disable();
000874   ec0d     call    0x501a, 0        	CALL	_fsk_tx_disable
000876   f028
000878   d047     bra     0x908            	BRA	_00144_DS_
                                           _00143_DS_:
                                           ;	.line	328; meter_logger.c	DEBUG2_PIN = 1;
00087a   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
00087c   0000     nop                      	nop
00087e   0000     nop                      	nop
                                           	
                                           ;	.line	333; meter_logger.c	DEBUG2_PIN = 0;
000880   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
000882   0000     nop                      	nop
000884   0000     nop                      	nop
                                           	
                                           ;	.line	338; meter_logger.c	DEBUG2_PIN = 1;
000886   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000888   0000     nop                      	nop
00088a   0000     nop                      	nop
                                           	
                                           ;	.line	343; meter_logger.c	DEBUG2_PIN = 0;
00088c   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	345; meter_logger.c	sprintf(debug_buffer, "\n\rno reply from meter\n\r");
00088e   0e00     movlw   0                	MOVLW	UPPER(___str_12)
000890   6e06     movwf   0x6, 0           	MOVWF	r0x06
000892   0e2c     movlw   0x2c             	MOVLW	HIGH(___str_12)
000894   6e05     movwf   0x5, 0           	MOVWF	r0x05
000896   0e42     movlw   0x42             	MOVLW	LOW(___str_12)
000898   6e04     movwf   0x4, 0           	MOVWF	r0x04
00089a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00089c   6e08     movwf   0x8, 0           	MOVWF	r0x08
00089e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0008a0   6e07     movwf   0x7, 0           	MOVWF	r0x07
0008a2   0e80     movlw   0x80             	MOVLW	0x80
0008a4   6e09     movwf   0x9, 0           	MOVWF	r0x09
0008a6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0008a8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008aa   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0008ac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008ae   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0008b0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008b2   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0008b4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008b6   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0008b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008ba   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0008bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008be   ecb9     call    0x4372, 0        	CALL	_sprintf
0008c0   f021
0008c2   0e06     movlw   0x6              	MOVLW	0x06
0008c4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	346; meter_logger.c	usart_puts(debug_buffer);
0008c6   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0008c8   6e05     movwf   0x5, 0           	MOVWF	r0x05
0008ca   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0008cc   6e04     movwf   0x4, 0           	MOVWF	r0x04
0008ce   0e80     movlw   0x80             	MOVLW	0x80
0008d0   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008d2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0008d4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008d6   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0008d8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008da   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0008dc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008de   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
0008e0   f025
0008e2   0e03     movlw   0x3              	MOVLW	0x03
0008e4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	348; meter_logger.c	fsk_tx_enable();
0008e6   eccd     call    0x4d9a, 0        	CALL	_fsk_tx_enable
0008e8   f026
                                           ;	.line	349; meter_logger.c	fsk_tx_byte(0x0d);
0008ea   0e0d     movlw   0xd              	MOVLW	0x0d
0008ec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008ee   ec46     call    0x4e8c, 0        	CALL	_fsk_tx_byte
0008f0   f027
0008f2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	350; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
0008f4   0e00     movlw   0                	MOVLW	0x00
0008f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008f8   0e02     movlw   0x2              	MOVLW	0x02
0008fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008fc   ec57     call    0x48ae, 0        	CALL	_sleep_ms
0008fe   f024
000900   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000902   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	351; meter_logger.c	fsk_tx_disable();
000904   ec0d     call    0x501a, 0        	CALL	_fsk_tx_disable
000906   f028
                                           _00144_DS_:
                                           ;	.line	354; meter_logger.c	usart_puts("\n\rwaiting for new command\n\r");
000908   0e00     movlw   0                	MOVLW	UPPER(___str_7)
00090a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00090c   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_7)
00090e   6e05     movwf   0x5, 0           	MOVWF	r0x05
000910   0e9a     movlw   0x9a             	MOVLW	LOW(___str_7)
000912   6e04     movwf   0x4, 0           	MOVWF	r0x04
000914   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000916   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000918   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00091a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00091c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00091e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000920   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
000922   f025
000924   0e03     movlw   0x3              	MOVLW	0x03
000926   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	356; meter_logger.c	fsk_rx_enable();
000928   eca3     call    0x4b46, 0        	CALL	_fsk_rx_enable
00092a   f025
                                           ;	.line	357; meter_logger.c	break;
00092c   efb9     goto    0x172            	GOTO	_00168_DS_
00092e   f000
                                           _00145_DS_:
                                           ;	.line	359; meter_logger.c	fsk_rx_disable();
000930   ec39     call    0x5072, 0        	CALL	_fsk_rx_disable
000932   f028
                                           ;	.line	361; meter_logger.c	usart_puts("\n\rkamstrup - send multical frame data\n\r");
000934   0e00     movlw   0                	MOVLW	UPPER(___str_13)
000936   6e06     movwf   0x6, 0           	MOVWF	r0x06
000938   0e2c     movlw   0x2c             	MOVLW	HIGH(___str_13)
00093a   6e05     movwf   0x5, 0           	MOVWF	r0x05
00093c   0e5a     movlw   0x5a             	MOVLW	LOW(___str_13)
00093e   6e04     movwf   0x4, 0           	MOVWF	r0x04
000940   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000942   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000944   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000946   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000948   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00094a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00094c   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
00094e   f025
000950   0e03     movlw   0x3              	MOVLW	0x03
000952   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	365; meter_logger.c	fsk_rx_enable();
000954   eca3     call    0x4b46, 0        	CALL	_fsk_rx_enable
000956   f025
                                           ;	.line	366; meter_logger.c	last_fifo_size = 0;
000958   6a00     clrf    0, 0             	CLRF	r0x00
00095a   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	367; meter_logger.c	sleep_ms(400);							// sleep 400 ms to let some data come in
00095c   0e01     movlw   0x1              	MOVLW	0x01
00095e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000960   0e90     movlw   0x90             	MOVLW	0x90
000962   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000964   ec57     call    0x48ae, 0        	CALL	_sleep_ms
000966   f024
000968   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00096a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	368; meter_logger.c	fifo_size = fifo_in_use();
00096c   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
00096e   f026
000970   6e02     movwf   0x2, 0           	MOVWF	r0x02
000972   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000974   f003
                                           _00146_DS_:
                                           ;	.line	369; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000976   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000978   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00097a   e102     bnz     0x980            	BNZ	_00339_DS_
00097c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00097e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00339_DS_:
000980   e212     bc      0x9a6            	BC	_00148_DS_
                                           ;	.line	370; meter_logger.c	last_fifo_size = fifo_size;
000982   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000984   f000
000986   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000988   f001
                                           ;	.line	371; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
00098a   0e00     movlw   0                	MOVLW	0x00
00098c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00098e   0ec8     movlw   0xc8             	MOVLW	0xc8
000990   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000992   ec57     call    0x48ae, 0        	CALL	_sleep_ms
000994   f024
000996   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000998   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	372; meter_logger.c	fifo_size = fifo_in_use();
00099a   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
00099c   f026
00099e   6e02     movwf   0x2, 0           	MOVWF	r0x02
0009a0   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0009a2   f003
0009a4   d7e8     bra     0x976            	BRA	_00146_DS_
                                           _00148_DS_:
                                           ;	.line	374; meter_logger.c	fsk_rx_disable();
0009a6   ec39     call    0x5072, 0        	CALL	_fsk_rx_disable
0009a8   f028
                                           ;	.line	377; meter_logger.c	usart_puts("\n\rkamstrup - multical frame received:\n\r");
0009aa   0e00     movlw   0                	MOVLW	UPPER(___str_14)
0009ac   6e06     movwf   0x6, 0           	MOVWF	r0x06
0009ae   0e2c     movlw   0x2c             	MOVLW	HIGH(___str_14)
0009b0   6e05     movwf   0x5, 0           	MOVWF	r0x05
0009b2   0e82     movlw   0x82             	MOVLW	LOW(___str_14)
0009b4   6e04     movwf   0x4, 0           	MOVWF	r0x04
0009b6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0009b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009ba   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0009bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009be   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0009c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009c2   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
0009c4   f025
0009c6   0e03     movlw   0x3              	MOVLW	0x03
0009c8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	380; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
0009ca   6a04     clrf    0x4, 0           	CLRF	r0x04
0009cc   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00183_DS_:
0009ce   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
0009d0   f026
0009d2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0009d4   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
0009d6   f007
0009d8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0009da   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0009dc   e102     bnz     0x9e2            	BNZ	_00340_DS_
0009de   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0009e0   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00340_DS_:
0009e2   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0009e4   d04c     bra     0xa7e            	BRA	_00150_DS_
                                           ;	.line	382; meter_logger.c	fifo_get(&sub_cmd);
0009e6   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_87)
0009e8   6e07     movwf   0x7, 0           	MOVWF	r0x07
0009ea   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_87)
0009ec   6e06     movwf   0x6, 0           	MOVWF	r0x06
0009ee   0e80     movlw   0x80             	MOVLW	0x80
0009f0   6e08     movwf   0x8, 0           	MOVWF	r0x08
0009f2   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0009f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009f6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0009f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009fa   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0009fc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009fe   ec42     call    0x3e84, 0        	CALL	_fifo_get
000a00   f01f
000a02   0e03     movlw   0x3              	MOVLW	0x03
000a04   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	384; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
000a06   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_87, r0x06
000a08   f006
000a0a   6a07     clrf    0x7, 0           	CLRF	r0x07
000a0c   0e00     movlw   0                	MOVLW	UPPER(___str_6)
000a0e   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000a10   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_6)
000a12   6e09     movwf   0x9, 0           	MOVWF	r0x09
000a14   0e96     movlw   0x96             	MOVLW	LOW(___str_6)
000a16   6e08     movwf   0x8, 0           	MOVWF	r0x08
000a18   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000a1a   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
000a1c   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000a1e   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
000a20   0e80     movlw   0x80             	MOVLW	0x80
000a22   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
000a24   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000a26   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a28   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000a2a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a2c   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000a2e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a30   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000a32   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a34   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000a36   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a38   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000a3a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a3c   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000a3e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a40   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000a42   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a44   ecb9     call    0x4372, 0        	CALL	_sprintf
000a46   f021
000a48   0e08     movlw   0x8              	MOVLW	0x08
000a4a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	385; meter_logger.c	usart_puts(debug_buffer);
000a4c   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000a4e   6e07     movwf   0x7, 0           	MOVWF	r0x07
000a50   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000a52   6e06     movwf   0x6, 0           	MOVWF	r0x06
000a54   0e80     movlw   0x80             	MOVLW	0x80
000a56   6e08     movwf   0x8, 0           	MOVWF	r0x08
000a58   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000a5a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a5c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000a5e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a60   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000a62   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a64   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
000a66   f025
000a68   0e03     movlw   0x3              	MOVLW	0x03
000a6a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000a6c   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_87
                                           ;	.line	387; meter_logger.c	fifo_put(sub_cmd);
000a6e   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_87, W, B
000a70   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a72   ec9e     call    0x413c, 0        	CALL	_fifo_put
000a74   f020
000a76   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	380; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000a78   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000a7a   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000a7c   d7a8     bra     0x9ce            	BRA	_00183_DS_
                                           _00150_DS_:
                                           ;	.line	391; meter_logger.c	while (fifo_get(&sub_cmd)) {
000a7e   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_87)
000a80   6e05     movwf   0x5, 0           	MOVWF	r0x05
000a82   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_87)
000a84   6e04     movwf   0x4, 0           	MOVWF	r0x04
000a86   0e80     movlw   0x80             	MOVLW	0x80
000a88   6e06     movwf   0x6, 0           	MOVWF	r0x06
000a8a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000a8c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a8e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000a90   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a92   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000a94   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a96   ec42     call    0x3e84, 0        	CALL	_fifo_get
000a98   f01f
000a9a   6e04     movwf   0x4, 0           	MOVWF	r0x04
000a9c   0e03     movlw   0x3              	MOVLW	0x03
000a9e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000aa0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000aa2   e00f     bz      0xac2            	BZ	_00152_DS_
000aa4   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_87
                                           ;	.line	392; meter_logger.c	rs232_tx_byte(sub_cmd);
000aa6   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_87, W, B
000aa8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000aaa   ece7     call    0x4dce, 0        	CALL	_rs232_tx_byte
000aac   f026
000aae   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	393; meter_logger.c	sleep_ms(RS232_TX_SLEEP);
000ab0   0e00     movlw   0                	MOVLW	0x00
000ab2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ab4   0e0c     movlw   0xc              	MOVLW	0x0c
000ab6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ab8   ec57     call    0x48ae, 0        	CALL	_sleep_ms
000aba   f024
000abc   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000abe   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000ac0   d7de     bra     0xa7e            	BRA	_00150_DS_
                                           _00152_DS_:
                                           ;	.line	395; meter_logger.c	rs232_tx_disable();
000ac2   ec23     call    0x5046, 0        	CALL	_rs232_tx_disable
000ac4   f028
                                           ;	.line	401; meter_logger.c	rs232_rx_enable(TIMER0_RS232_300);
000ac6   0ee6     movlw   0xe6             	MOVLW	0xe6
000ac8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000aca   0e1b     movlw   0x1b             	MOVLW	0x1b
000acc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ace   ecfc     call    0x4bf8, 0        	CALL	_rs232_rx_enable
000ad0   f025
000ad2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000ad4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	402; meter_logger.c	last_fifo_size = 0;
000ad6   6a00     clrf    0, 0             	CLRF	r0x00
000ad8   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	403; meter_logger.c	sleep_ms(400);							// sleep 200 ms to let some data come in
000ada   0e01     movlw   0x1              	MOVLW	0x01
000adc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ade   0e90     movlw   0x90             	MOVLW	0x90
000ae0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ae2   ec57     call    0x48ae, 0        	CALL	_sleep_ms
000ae4   f024
000ae6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000ae8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	404; meter_logger.c	fifo_size = fifo_in_use();
000aea   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
000aec   f026
000aee   6e02     movwf   0x2, 0           	MOVWF	r0x02
000af0   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000af2   f003
                                           _00153_DS_:
                                           ;	.line	406; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000af4   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000af6   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000af8   e102     bnz     0xafe            	BNZ	_00341_DS_
000afa   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000afc   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00341_DS_:
000afe   e212     bc      0xb24            	BC	_00155_DS_
                                           ;	.line	407; meter_logger.c	last_fifo_size = fifo_size;
000b00   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000b02   f000
000b04   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000b06   f001
                                           ;	.line	408; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
000b08   0e00     movlw   0                	MOVLW	0x00
000b0a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b0c   0ec8     movlw   0xc8             	MOVLW	0xc8
000b0e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b10   ec57     call    0x48ae, 0        	CALL	_sleep_ms
000b12   f024
000b14   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000b16   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	409; meter_logger.c	fifo_size = fifo_in_use();
000b18   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
000b1a   f026
000b1c   6e02     movwf   0x2, 0           	MOVWF	r0x02
000b1e   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000b20   f003
000b22   d7e8     bra     0xaf4            	BRA	_00153_DS_
                                           _00155_DS_:
                                           ;	.line	412; meter_logger.c	rs232_rx_disable();
000b24   ec18     call    0x5030, 0        	CALL	_rs232_rx_disable
000b26   f028
                                           ;	.line	416; meter_logger.c	usart_puts("\n\rkamstrup - multical reply received:\n\r");
000b28   0e00     movlw   0                	MOVLW	UPPER(___str_15)
000b2a   6e02     movwf   0x2, 0           	MOVWF	r0x02
000b2c   0e2c     movlw   0x2c             	MOVLW	HIGH(___str_15)
000b2e   6e01     movwf   0x1, 0           	MOVWF	r0x01
000b30   0eaa     movlw   0xaa             	MOVLW	LOW(___str_15)
000b32   6e00     movwf   0, 0             	MOVWF	r0x00
000b34   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000b36   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b38   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000b3a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b3c   5000     movf    0, 0, 0          	MOVF	r0x00, W
000b3e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b40   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
000b42   f025
000b44   0e03     movlw   0x3              	MOVLW	0x03
000b46   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	419; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000b48   6a00     clrf    0, 0             	CLRF	r0x00
000b4a   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00186_DS_:
000b4c   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
000b4e   f026
000b50   6e02     movwf   0x2, 0           	MOVWF	r0x02
000b52   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000b54   f003
000b56   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000b58   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000b5a   e102     bnz     0xb60            	BNZ	_00342_DS_
000b5c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000b5e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00342_DS_:
000b60   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
000b62   d04c     bra     0xbfc            	BRA	_00156_DS_
                                           ;	.line	421; meter_logger.c	fifo_get(&sub_cmd);
000b64   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_87)
000b66   6e03     movwf   0x3, 0           	MOVWF	r0x03
000b68   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_87)
000b6a   6e02     movwf   0x2, 0           	MOVWF	r0x02
000b6c   0e80     movlw   0x80             	MOVLW	0x80
000b6e   6e04     movwf   0x4, 0           	MOVWF	r0x04
000b70   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000b72   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b74   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000b76   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b78   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000b7a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b7c   ec42     call    0x3e84, 0        	CALL	_fifo_get
000b7e   f01f
000b80   0e03     movlw   0x3              	MOVLW	0x03
000b82   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	423; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
000b84   c550     movff   0x550, 0x2       	MOVFF	_main_sub_cmd_1_87, r0x02
000b86   f002
000b88   6a03     clrf    0x3, 0           	CLRF	r0x03
000b8a   0e00     movlw   0                	MOVLW	UPPER(___str_6)
000b8c   6e06     movwf   0x6, 0           	MOVWF	r0x06
000b8e   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_6)
000b90   6e05     movwf   0x5, 0           	MOVWF	r0x05
000b92   0e96     movlw   0x96             	MOVLW	LOW(___str_6)
000b94   6e04     movwf   0x4, 0           	MOVWF	r0x04
000b96   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000b98   6e08     movwf   0x8, 0           	MOVWF	r0x08
000b9a   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000b9c   6e07     movwf   0x7, 0           	MOVWF	r0x07
000b9e   0e80     movlw   0x80             	MOVLW	0x80
000ba0   6e09     movwf   0x9, 0           	MOVWF	r0x09
000ba2   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000ba4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ba6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000ba8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000baa   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000bac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bae   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000bb0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bb2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000bb4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bb6   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000bb8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bba   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000bbc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bbe   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000bc0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bc2   ecb9     call    0x4372, 0        	CALL	_sprintf
000bc4   f021
000bc6   0e08     movlw   0x8              	MOVLW	0x08
000bc8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	424; meter_logger.c	usart_puts(debug_buffer);
000bca   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000bcc   6e03     movwf   0x3, 0           	MOVWF	r0x03
000bce   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000bd0   6e02     movwf   0x2, 0           	MOVWF	r0x02
000bd2   0e80     movlw   0x80             	MOVLW	0x80
000bd4   6e04     movwf   0x4, 0           	MOVWF	r0x04
000bd6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000bd8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bda   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000bdc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bde   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000be0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000be2   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
000be4   f025
000be6   0e03     movlw   0x3              	MOVLW	0x03
000be8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000bea   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_87
                                           ;	.line	426; meter_logger.c	fifo_put(sub_cmd);
000bec   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_87, W, B
000bee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bf0   ec9e     call    0x413c, 0        	CALL	_fifo_put
000bf2   f020
000bf4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	419; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000bf6   4a00     infsnz  0, 0x1, 0        	INFSNZ	r0x00, F
000bf8   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
000bfa   d7a8     bra     0xb4c            	BRA	_00186_DS_
                                           _00156_DS_:
                                           ;	.line	429; meter_logger.c	if (fifo_in_use()) {
000bfc   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
000bfe   f026
000c00   6e00     movwf   0, 0             	MOVWF	r0x00
000c02   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
000c04   f001
000c06   5000     movf    0, 0, 0          	MOVF	r0x00, W
000c08   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
000c0a   e02b     bz      0xc62            	BZ	_00161_DS_
                                           ;	.line	431; meter_logger.c	DEBUG2_PIN = 1;
000c0c   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000c0e   0000     nop                      	nop
000c10   0000     nop                      	nop
                                           	
                                           ;	.line	436; meter_logger.c	DEBUG2_PIN = 0;
000c12   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	437; meter_logger.c	fsk_tx_enable();
000c14   eccd     call    0x4d9a, 0        	CALL	_fsk_tx_enable
000c16   f026
                                           _00157_DS_:
                                           ;	.line	438; meter_logger.c	while (fifo_get(&sub_cmd)) {
000c18   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_87)
000c1a   6e01     movwf   0x1, 0           	MOVWF	r0x01
000c1c   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_87)
000c1e   6e00     movwf   0, 0             	MOVWF	r0x00
000c20   0e80     movlw   0x80             	MOVLW	0x80
000c22   6e02     movwf   0x2, 0           	MOVWF	r0x02
000c24   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000c26   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c28   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000c2a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c2c   5000     movf    0, 0, 0          	MOVF	r0x00, W
000c2e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c30   ec42     call    0x3e84, 0        	CALL	_fifo_get
000c32   f01f
000c34   6e00     movwf   0, 0             	MOVWF	r0x00
000c36   0e03     movlw   0x3              	MOVLW	0x03
000c38   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000c3a   5000     movf    0, 0, 0          	MOVF	r0x00, W
000c3c   e00f     bz      0xc5c            	BZ	_00159_DS_
000c3e   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_87
                                           ;	.line	439; meter_logger.c	fsk_tx_byte(sub_cmd);
000c40   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_87, W, B
000c42   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c44   ec46     call    0x4e8c, 0        	CALL	_fsk_tx_byte
000c46   f027
000c48   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	440; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000c4a   0e00     movlw   0                	MOVLW	0x00
000c4c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c4e   0e02     movlw   0x2              	MOVLW	0x02
000c50   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c52   ec57     call    0x48ae, 0        	CALL	_sleep_ms
000c54   f024
000c56   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c58   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c5a   d7de     bra     0xc18            	BRA	_00157_DS_
                                           _00159_DS_:
                                           ;	.line	442; meter_logger.c	fsk_tx_disable();
000c5c   ec0d     call    0x501a, 0        	CALL	_fsk_tx_disable
000c5e   f028
000c60   d047     bra     0xcf0            	BRA	_00162_DS_
                                           _00161_DS_:
                                           ;	.line	446; meter_logger.c	DEBUG2_PIN = 1;
000c62   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000c64   0000     nop                      	nop
000c66   0000     nop                      	nop
                                           	
                                           ;	.line	451; meter_logger.c	DEBUG2_PIN = 0;
000c68   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
000c6a   0000     nop                      	nop
000c6c   0000     nop                      	nop
                                           	
                                           ;	.line	456; meter_logger.c	DEBUG2_PIN = 1;
000c6e   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000c70   0000     nop                      	nop
000c72   0000     nop                      	nop
                                           	
                                           ;	.line	461; meter_logger.c	DEBUG2_PIN = 0;
000c74   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	463; meter_logger.c	sprintf(debug_buffer, "\n\rno reply from meter\n\r");
000c76   0e00     movlw   0                	MOVLW	UPPER(___str_12)
000c78   6e02     movwf   0x2, 0           	MOVWF	r0x02
000c7a   0e2c     movlw   0x2c             	MOVLW	HIGH(___str_12)
000c7c   6e01     movwf   0x1, 0           	MOVWF	r0x01
000c7e   0e42     movlw   0x42             	MOVLW	LOW(___str_12)
000c80   6e00     movwf   0, 0             	MOVWF	r0x00
000c82   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000c84   6e04     movwf   0x4, 0           	MOVWF	r0x04
000c86   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000c88   6e03     movwf   0x3, 0           	MOVWF	r0x03
000c8a   0e80     movlw   0x80             	MOVLW	0x80
000c8c   6e05     movwf   0x5, 0           	MOVWF	r0x05
000c8e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000c90   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c92   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000c94   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c96   5000     movf    0, 0, 0          	MOVF	r0x00, W
000c98   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c9a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000c9c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c9e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000ca0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ca2   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000ca4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ca6   ecb9     call    0x4372, 0        	CALL	_sprintf
000ca8   f021
000caa   0e06     movlw   0x6              	MOVLW	0x06
000cac   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	464; meter_logger.c	usart_puts(debug_buffer);
000cae   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000cb0   6e01     movwf   0x1, 0           	MOVWF	r0x01
000cb2   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000cb4   6e00     movwf   0, 0             	MOVWF	r0x00
000cb6   0e80     movlw   0x80             	MOVLW	0x80
000cb8   6e02     movwf   0x2, 0           	MOVWF	r0x02
000cba   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000cbc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cbe   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000cc0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cc2   5000     movf    0, 0, 0          	MOVF	r0x00, W
000cc4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cc6   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
000cc8   f025
000cca   0e03     movlw   0x3              	MOVLW	0x03
000ccc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	466; meter_logger.c	fsk_tx_enable();
000cce   eccd     call    0x4d9a, 0        	CALL	_fsk_tx_enable
000cd0   f026
                                           ;	.line	467; meter_logger.c	fsk_tx_byte(0x0d);
000cd2   0e0d     movlw   0xd              	MOVLW	0x0d
000cd4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cd6   ec46     call    0x4e8c, 0        	CALL	_fsk_tx_byte
000cd8   f027
000cda   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	468; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000cdc   0e00     movlw   0                	MOVLW	0x00
000cde   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ce0   0e02     movlw   0x2              	MOVLW	0x02
000ce2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ce4   ec57     call    0x48ae, 0        	CALL	_sleep_ms
000ce6   f024
000ce8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000cea   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	469; meter_logger.c	fsk_tx_disable();
000cec   ec0d     call    0x501a, 0        	CALL	_fsk_tx_disable
000cee   f028
                                           _00162_DS_:
                                           ;	.line	472; meter_logger.c	usart_puts("\n\rwaiting for new command\n\r");
000cf0   0e00     movlw   0                	MOVLW	UPPER(___str_7)
000cf2   6e02     movwf   0x2, 0           	MOVWF	r0x02
000cf4   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_7)
000cf6   6e01     movwf   0x1, 0           	MOVWF	r0x01
000cf8   0e9a     movlw   0x9a             	MOVLW	LOW(___str_7)
000cfa   6e00     movwf   0, 0             	MOVWF	r0x00
000cfc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000cfe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d00   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000d02   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d04   5000     movf    0, 0, 0          	MOVF	r0x00, W
000d06   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d08   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
000d0a   f025
000d0c   0e03     movlw   0x3              	MOVLW	0x03
000d0e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	474; meter_logger.c	fsk_rx_enable();
000d10   eca3     call    0x4b46, 0        	CALL	_fsk_rx_enable
000d12   f025
                                           ;	.line	475; meter_logger.c	break;
000d14   efb9     goto    0x172            	GOTO	_00168_DS_
000d16   f000
                                           _00163_DS_:
                                           ;	.line	477; meter_logger.c	fsk_rx_disable();
000d18   ec39     call    0x5072, 0        	CALL	_fsk_rx_disable
000d1a   f028
                                           ;	.line	478; meter_logger.c	get_battery_level();
000d1c   ec77     call    0x34ee, 0        	CALL	_get_battery_level
000d1e   f01a
                                           ;	.line	479; meter_logger.c	fsk_rx_enable();
000d20   eca3     call    0x4b46, 0        	CALL	_fsk_rx_enable
000d22   f025
                                           ;	.line	481; meter_logger.c	}
000d24   efb9     goto    0x172            	GOTO	_00168_DS_
000d26   f000
000d28   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger___debug2	code
                                           __debug2:
                                           ;	.line	4476; meter_logger.c	void _debug2() {
004598   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00459a   ffe5
00459c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00459e   ffd9
                                           ;	.line	4477; meter_logger.c	DEBUG2_PIN = 0x1;
0045a0   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
0045a2   0000     nop                      	nop
0045a4   0000     nop                      	nop
0045a6   0000     nop                      	nop
0045a8   0000     nop                      	nop
0045aa   0000     nop                      	nop
0045ac   0000     nop                      	nop
0045ae   0000     nop                      	nop
0045b0   0000     nop                      	nop
0045b2   0000     nop                      	nop
0045b4   0000     nop                      	nop
0045b6   0000     nop                      	nop
0045b8   0000     nop                      	nop
0045ba   0000     nop                      	nop
0045bc   0000     nop                      	nop
0045be   0000     nop                      	nop
0045c0   0000     nop                      	nop
0045c2   0000     nop                      	nop
0045c4   0000     nop                      	nop
0045c6   0000     nop                      	nop
0045c8   0000     nop                      	nop
0045ca   0000     nop                      	nop
0045cc   0000     nop                      	nop
0045ce   0000     nop                      	nop
0045d0   0000     nop                      	nop
0045d2   0000     nop                      	nop
0045d4   0000     nop                      	nop
0045d6   0000     nop                      	nop
0045d8   0000     nop                      	nop
0045da   0000     nop                      	nop
0045dc   0000     nop                      	nop
0045de   0000     nop                      	nop
0045e0   0000     nop                      	nop
0045e2   0000     nop                      	nop
0045e4   0000     nop                      	nop
0045e6   0000     nop                      	nop
0045e8   0000     nop                      	nop
0045ea   0000     nop                      	nop
0045ec   0000     nop                      	nop
0045ee   0000     nop                      	nop
0045f0   0000     nop                      	nop
0045f2   0000     nop                      	nop
0045f4   0000     nop                      	nop
0045f6   0000     nop                      	nop
0045f8   0000     nop                      	nop
0045fa   0000     nop                      	nop
                                           	
                                           ;	.line	4525; meter_logger.c	DEBUG2_PIN = 0x0;
0045fc   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
0045fe   0000     nop                      	nop
004600   0000     nop                      	nop
004602   0000     nop                      	nop
004604   0000     nop                      	nop
004606   0000     nop                      	nop
004608   0000     nop                      	nop
00460a   0000     nop                      	nop
00460c   0000     nop                      	nop
00460e   0000     nop                      	nop
004610   0000     nop                      	nop
004612   0000     nop                      	nop
004614   0000     nop                      	nop
004616   0000     nop                      	nop
004618   0000     nop                      	nop
00461a   0000     nop                      	nop
00461c   0000     nop                      	nop
00461e   0000     nop                      	nop
004620   0000     nop                      	nop
004622   0000     nop                      	nop
004624   0000     nop                      	nop
004626   0000     nop                      	nop
004628   0000     nop                      	nop
00462a   0000     nop                      	nop
00462c   0000     nop                      	nop
00462e   0000     nop                      	nop
004630   0000     nop                      	nop
004632   0000     nop                      	nop
004634   0000     nop                      	nop
004636   0000     nop                      	nop
004638   0000     nop                      	nop
00463a   0000     nop                      	nop
00463c   0000     nop                      	nop
00463e   0000     nop                      	nop
004640   0000     nop                      	nop
004642   0000     nop                      	nop
004644   0000     nop                      	nop
004646   0000     nop                      	nop
004648   0000     nop                      	nop
00464a   0000     nop                      	nop
00464c   0000     nop                      	nop
00464e   0000     nop                      	nop
004650   0000     nop                      	nop
004652   0000     nop                      	nop
004654   0000     nop                      	nop
004656   0000     nop                      	nop
                                           	
004658   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00465a   ffd9
00465c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger___debug	code
                                           __debug:
                                           ;	.line	4376; meter_logger.c	void _debug() {
00465e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004660   ffe5
004662   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004664   ffd9
                                           ;	.line	4377; meter_logger.c	DEBUG_PIN = 0x1;
004666   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
004668   0000     nop                      	nop
00466a   0000     nop                      	nop
00466c   0000     nop                      	nop
00466e   0000     nop                      	nop
004670   0000     nop                      	nop
004672   0000     nop                      	nop
004674   0000     nop                      	nop
004676   0000     nop                      	nop
004678   0000     nop                      	nop
00467a   0000     nop                      	nop
00467c   0000     nop                      	nop
00467e   0000     nop                      	nop
004680   0000     nop                      	nop
004682   0000     nop                      	nop
004684   0000     nop                      	nop
004686   0000     nop                      	nop
004688   0000     nop                      	nop
00468a   0000     nop                      	nop
00468c   0000     nop                      	nop
00468e   0000     nop                      	nop
004690   0000     nop                      	nop
004692   0000     nop                      	nop
004694   0000     nop                      	nop
004696   0000     nop                      	nop
004698   0000     nop                      	nop
00469a   0000     nop                      	nop
00469c   0000     nop                      	nop
00469e   0000     nop                      	nop
0046a0   0000     nop                      	nop
0046a2   0000     nop                      	nop
0046a4   0000     nop                      	nop
0046a6   0000     nop                      	nop
0046a8   0000     nop                      	nop
0046aa   0000     nop                      	nop
0046ac   0000     nop                      	nop
0046ae   0000     nop                      	nop
0046b0   0000     nop                      	nop
0046b2   0000     nop                      	nop
0046b4   0000     nop                      	nop
0046b6   0000     nop                      	nop
0046b8   0000     nop                      	nop
0046ba   0000     nop                      	nop
0046bc   0000     nop                      	nop
0046be   0000     nop                      	nop
0046c0   0000     nop                      	nop
                                           	
                                           ;	.line	4425; meter_logger.c	DEBUG_PIN = 0x0;
0046c2   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
0046c4   0000     nop                      	nop
0046c6   0000     nop                      	nop
0046c8   0000     nop                      	nop
0046ca   0000     nop                      	nop
0046cc   0000     nop                      	nop
0046ce   0000     nop                      	nop
0046d0   0000     nop                      	nop
0046d2   0000     nop                      	nop
0046d4   0000     nop                      	nop
0046d6   0000     nop                      	nop
0046d8   0000     nop                      	nop
0046da   0000     nop                      	nop
0046dc   0000     nop                      	nop
0046de   0000     nop                      	nop
0046e0   0000     nop                      	nop
0046e2   0000     nop                      	nop
0046e4   0000     nop                      	nop
0046e6   0000     nop                      	nop
0046e8   0000     nop                      	nop
0046ea   0000     nop                      	nop
0046ec   0000     nop                      	nop
0046ee   0000     nop                      	nop
0046f0   0000     nop                      	nop
0046f2   0000     nop                      	nop
0046f4   0000     nop                      	nop
0046f6   0000     nop                      	nop
0046f8   0000     nop                      	nop
0046fa   0000     nop                      	nop
0046fc   0000     nop                      	nop
0046fe   0000     nop                      	nop
004700   0000     nop                      	nop
004702   0000     nop                      	nop
004704   0000     nop                      	nop
004706   0000     nop                      	nop
004708   0000     nop                      	nop
00470a   0000     nop                      	nop
00470c   0000     nop                      	nop
00470e   0000     nop                      	nop
004710   0000     nop                      	nop
004712   0000     nop                      	nop
004714   0000     nop                      	nop
004716   0000     nop                      	nop
004718   0000     nop                      	nop
00471a   0000     nop                      	nop
00471c   0000     nop                      	nop
                                           	
00471e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004720   ffd9
004722   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__flash_led	code
                                           _flash_led:
                                           ;	.line	4371; meter_logger.c	void flash_led(unsigned char ms) {
004f5e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004f60   ffe5
004f62   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004f64   ffd9
004f66   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004f68   ffe5
004f6a   0e02     movlw   0x2              	MOVLW	0x02
004f6c   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004f6e   f000
                                           ;	.line	4372; meter_logger.c	led_flash.timer = ms;
004f70   5000     movf    0, 0, 0          	MOVF	r0x00, W
004f72   0105     movlb   0x5              	BANKSEL	(_led_flash + 1)
004f74   6f4d     movwf   0x4d, 0x1        	MOVWF	(_led_flash + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	4373; meter_logger.c	led_flash.state = LED_FLASH_RUN;
004f76   6b4c     clrf    0x4c, 0x1        	CLRF	_led_flash, B
004f78   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004f7a   f000
004f7c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004f7e   ffd9
004f80   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__get_battery_level	code
                                           _get_battery_level:
                                           ;	.line	4340; meter_logger.c	unsigned int get_battery_level() {
0034ee   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0034f0   ffe5
0034f2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0034f4   ffd9
0034f6   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0034f8   ffe5
0034fa   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0034fc   ffe5
0034fe   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003500   ffe5
003502   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003504   ffe5
003506   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003508   ffe5
00350a   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00350c   ffe5
00350e   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003510   ffe5
003512   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
003514   ffe5
                                           ;	.line	4344; meter_logger.c	adc_open(ADC_CHN_4 , ADC_FOSC_64, ADC_CFG_5A, ADC_FRM_RJUST | ADC_INT_OFF | ADC_VCFG_VDD_VSS);
003516   0e80     movlw   0x80             	MOVLW	0x80
003518   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00351a   0e0a     movlw   0xa              	MOVLW	0x0a
00351c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00351e   0e06     movlw   0x6              	MOVLW	0x06
003520   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003522   0e04     movlw   0x4              	MOVLW	0x04
003524   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003526   ecf0     call    0x49e0, 0        	CALL	_adc_open
003528   f024
00352a   0e04     movlw   0x4              	MOVLW	0x04
00352c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4346; meter_logger.c	adc_setchannel(ADC_CHN_4);
00352e   0e04     movlw   0x4              	MOVLW	0x04
003530   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003532   ec79     call    0x4cf2, 0        	CALL	_adc_setchannel
003534   f026
003536   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	4347; meter_logger.c	adc_conv();
003538   ec0a     call    0x14, 0          	CALL	_adc_conv
00353a   f000
                                           _01048_DS_:
                                           ;	.line	4348; meter_logger.c	while(adc_busy()) {
00353c   ec6f     call    0x50de, 0        	CALL	_adc_busy
00353e   f028
003540   6e00     movwf   0, 0             	MOVWF	r0x00
003542   5000     movf    0, 0, 0          	MOVF	r0x00, W
003544   e1fb     bnz     0x353c           	BNZ	_01048_DS_
                                           ;	.line	4352; meter_logger.c	dev_id = get_dev_id();
003546   ec6a     call    0x4ad4, 0        	CALL	_get_dev_id
003548   f025
00354a   6e00     movwf   0, 0             	MOVWF	r0x00
00354c   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00354e   f001
                                           ;	.line	4353; meter_logger.c	if (dev_id == 0x1240) {
003550   5000     movf    0, 0, 0          	MOVF	r0x00, W
003552   0a40     xorlw   0x40             	XORLW	0x40
003554   e103     bnz     0x355c           	BNZ	_01071_DS_
003556   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003558   0a12     xorlw   0x12             	XORLW	0x12
00355a   e001     bz      0x355e           	BZ	_01072_DS_
                                           _01071_DS_:
00355c   d041     bra     0x35e0           	BRA	_01055_DS_
                                           _01072_DS_:
                                           ;	.line	4355; meter_logger.c	v_level = (unsigned long)1000 * (unsigned long)adc_read() * (unsigned long)833/(unsigned long)93600;
00355e   ec67     call    0x50ce, 0        	CALL	_adc_read
003560   f028
003562   6e02     movwf   0x2, 0           	MOVWF	r0x02
003564   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
003566   f003
003568   6ae8     clrf    0xe8, 0          	CLRF	WREG
00356a   be03     btfsc   0x3, 0x7, 0      	BTFSC	r0x03, 7
00356c   0eff     movlw   0xff             	MOVLW	0xff
00356e   6e04     movwf   0x4, 0           	MOVWF	r0x04
003570   6e05     movwf   0x5, 0           	MOVWF	r0x05
003572   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003574   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003576   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003578   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00357a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00357c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00357e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003580   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003582   0e00     movlw   0                	MOVLW	0x00
003584   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003586   0e0c     movlw   0xc              	MOVLW	0x0c
003588   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00358a   0eb5     movlw   0xb5             	MOVLW	0xb5
00358c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00358e   0ee8     movlw   0xe8             	MOVLW	0xe8
003590   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003592   ec8c     call    0x3718, 0        	CALL	__mullong
003594   f01b
003596   6e02     movwf   0x2, 0           	MOVWF	r0x02
003598   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00359a   f003
00359c   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
00359e   f004
0035a0   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
0035a2   f005
0035a4   0e08     movlw   0x8              	MOVLW	0x08
0035a6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0035a8   0e00     movlw   0                	MOVLW	0x00
0035aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0035ac   0e01     movlw   0x1              	MOVLW	0x01
0035ae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0035b0   0e6d     movlw   0x6d             	MOVLW	0x6d
0035b2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0035b4   0ea0     movlw   0xa0             	MOVLW	0xa0
0035b6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0035b8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0035ba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0035bc   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0035be   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0035c0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0035c2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0035c4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0035c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0035c8   ec2d     call    0x425a, 0        	CALL	__divulong
0035ca   f021
0035cc   6e02     movwf   0x2, 0           	MOVWF	r0x02
0035ce   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0035d0   f003
0035d2   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
0035d4   f004
0035d6   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
0035d8   f005
0035da   0e08     movlw   0x8              	MOVLW	0x08
0035dc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0035de   d054     bra     0x3688           	BRA	_01056_DS_
                                           _01055_DS_:
                                           ;	.line	4357; meter_logger.c	else if (dev_id == 0x2a40) {
0035e0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0035e2   0a40     xorlw   0x40             	XORLW	0x40
0035e4   e103     bnz     0x35ec           	BNZ	_01073_DS_
0035e6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0035e8   0a2a     xorlw   0x2a             	XORLW	0x2a
0035ea   e001     bz      0x35ee           	BZ	_01074_DS_
                                           _01073_DS_:
0035ec   d04b     bra     0x3684           	BRA	_01052_DS_
                                           _01074_DS_:
                                           ;	.line	4359; meter_logger.c	v_level = (unsigned long)1000 * (unsigned long)(adc_read() >> 2) * (unsigned long)833/(unsigned long)93600;
0035ee   ec67     call    0x50ce, 0        	CALL	_adc_read
0035f0   f028
0035f2   6e00     movwf   0, 0             	MOVWF	r0x00
0035f4   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0035f6   f001
0035f8   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
0035fa   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
0035fc   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
0035fe   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
003600   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
003602   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
003604   6ae8     clrf    0xe8, 0          	CLRF	WREG
003606   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
003608   0eff     movlw   0xff             	MOVLW	0xff
00360a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00360c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00360e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003610   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003612   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003614   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003616   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003618   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00361a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00361c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00361e   0e00     movlw   0                	MOVLW	0x00
003620   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003622   0e0c     movlw   0xc              	MOVLW	0x0c
003624   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003626   0eb5     movlw   0xb5             	MOVLW	0xb5
003628   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00362a   0ee8     movlw   0xe8             	MOVLW	0xe8
00362c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00362e   ec8c     call    0x3718, 0        	CALL	__mullong
003630   f01b
003632   6e00     movwf   0, 0             	MOVWF	r0x00
003634   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003636   f001
003638   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
00363a   f004
00363c   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
00363e   f005
003640   0e08     movlw   0x8              	MOVLW	0x08
003642   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003644   0e00     movlw   0                	MOVLW	0x00
003646   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003648   0e01     movlw   0x1              	MOVLW	0x01
00364a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00364c   0e6d     movlw   0x6d             	MOVLW	0x6d
00364e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003650   0ea0     movlw   0xa0             	MOVLW	0xa0
003652   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003654   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003656   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003658   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00365a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00365c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00365e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003660   5000     movf    0, 0, 0          	MOVF	r0x00, W
003662   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003664   ec2d     call    0x425a, 0        	CALL	__divulong
003666   f021
003668   6e00     movwf   0, 0             	MOVWF	r0x00
00366a   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00366c   f001
00366e   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
003670   f004
003672   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
003674   f005
003676   0e08     movlw   0x8              	MOVLW	0x08
003678   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00367a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00367c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00367e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003680   6e03     movwf   0x3, 0           	MOVWF	r0x03
003682   d002     bra     0x3688           	BRA	_01056_DS_
                                           _01052_DS_:
                                           ;	.line	4362; meter_logger.c	v_level = 0;
003684   6a02     clrf    0x2, 0           	CLRF	r0x02
003686   6a03     clrf    0x3, 0           	CLRF	r0x03
                                           _01056_DS_:
                                           ;	.line	4364; meter_logger.c	sprintf(debug_buffer, "Battery: %dmV\n\r", v_level);
003688   0e00     movlw   0                	MOVLW	UPPER(___str_16)
00368a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00368c   0e2c     movlw   0x2c             	MOVLW	HIGH(___str_16)
00368e   6e01     movwf   0x1, 0           	MOVWF	r0x01
003690   0ed2     movlw   0xd2             	MOVLW	LOW(___str_16)
003692   6e00     movwf   0, 0             	MOVWF	r0x00
003694   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
003696   6e06     movwf   0x6, 0           	MOVWF	r0x06
003698   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00369a   6e05     movwf   0x5, 0           	MOVWF	r0x05
00369c   0e80     movlw   0x80             	MOVLW	0x80
00369e   6e07     movwf   0x7, 0           	MOVWF	r0x07
0036a0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0036a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0036a4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0036a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0036a8   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0036aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0036ac   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0036ae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0036b0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0036b2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0036b4   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0036b6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0036b8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0036ba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0036bc   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0036be   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0036c0   ecb9     call    0x4372, 0        	CALL	_sprintf
0036c2   f021
0036c4   0e08     movlw   0x8              	MOVLW	0x08
0036c6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4365; meter_logger.c	usart_puts(debug_buffer);	
0036c8   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0036ca   6e01     movwf   0x1, 0           	MOVWF	r0x01
0036cc   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0036ce   6e00     movwf   0, 0             	MOVWF	r0x00
0036d0   0e80     movlw   0x80             	MOVLW	0x80
0036d2   6e04     movwf   0x4, 0           	MOVWF	r0x04
0036d4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0036d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0036d8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0036da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0036dc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0036de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0036e0   ec2e     call    0x4a5c, 0        	CALL	_usart_puts
0036e2   f025
0036e4   0e03     movlw   0x3              	MOVLW	0x03
0036e6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4367; meter_logger.c	adc_close();
0036e8   ec7a     call    0x50f4, 0        	CALL	_adc_close
0036ea   f028
                                           ;	.line	4368; meter_logger.c	return v_level;
0036ec   c003     movff   0x3, 0xff3       	MOVFF	r0x03, PRODL
0036ee   fff3
0036f0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0036f2   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
0036f4   f007
0036f6   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
0036f8   f006
0036fa   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0036fc   f005
0036fe   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003700   f004
003702   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003704   f003
003706   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003708   f002
00370a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00370c   f001
00370e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003710   f000
003712   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003714   ffd9
003716   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_snoop	code
                                           _fifo_snoop:
                                           ;	.line	4317; meter_logger.c	unsigned char fifo_snoop(unsigned char *c, unsigned int pos) {
003ce4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003ce6   ffe5
003ce8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003cea   ffd9
003cec   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003cee   ffe5
003cf0   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003cf2   ffe5
003cf4   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003cf6   ffe5
003cf8   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003cfa   ffe5
003cfc   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003cfe   ffe5
003d00   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003d02   ffe5
003d04   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003d06   ffe5
003d08   0e02     movlw   0x2              	MOVLW	0x02
003d0a   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003d0c   f000
003d0e   0e03     movlw   0x3              	MOVLW	0x03
003d10   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003d12   f001
003d14   0e04     movlw   0x4              	MOVLW	0x04
003d16   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
003d18   f002
003d1a   0e05     movlw   0x5              	MOVLW	0x05
003d1c   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
003d1e   f003
003d20   0e06     movlw   0x6              	MOVLW	0x06
003d22   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
003d24   f004
                                           ;	.line	4318; meter_logger.c	if (fifo_in_use() > (pos)) {
003d26   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
003d28   f026
003d2a   6e05     movwf   0x5, 0           	MOVWF	r0x05
003d2c   cff3     movff   0xff3, 0x6       	MOVFF	PRODL, r0x06
003d2e   f006
003d30   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003d32   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
003d34   e102     bnz     0x3d3a           	BNZ	_01041_DS_
003d36   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003d38   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _01041_DS_:
003d3a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003d3c   d091     bra     0x3e60           	BRA	_01031_DS_
003d3e   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
                                           ;	.line	4319; meter_logger.c	switch (fifo_tail/QUEUE_SIZE) {
003d40   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
003d42   6e05     movwf   0x5, 0           	MOVWF	r0x05
003d44   6a06     clrf    0x6, 0           	CLRF	r0x06
003d46   0e00     movlw   0                	MOVLW	0x00
003d48   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003d4a   e102     bnz     0x3d50           	BNZ	_01042_DS_
003d4c   0e04     movlw   0x4              	MOVLW	0x04
003d4e   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
                                           _01042_DS_:
003d50   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003d52   d084     bra     0x3e5c           	BRA	_01029_DS_
003d54   6afa     clrf    0xfa, 0          	CLRF	PCLATH
003d56   6afb     clrf    0xfb, 0          	CLRF	PCLATU
003d58   3405     rlcf    0x5, 0, 0        	RLCF	r0x05, W
003d5a   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
003d5c   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
003d5e   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
003d60   0bfc     andlw   0xfc             	ANDLW	0xfc
003d62   0f72     addlw   0x72             	ADDLW	LOW(_01043_DS_)
003d64   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d66   0e3d     movlw   0x3d             	MOVLW	HIGH(_01043_DS_)
003d68   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
003d6a   0e00     movlw   0                	MOVLW	UPPER(_01043_DS_)
003d6c   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
003d6e   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
003d70   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01043_DS_:
003d72   efc1     goto    0x3d82           	GOTO	_01025_DS_
003d74   f01e
003d76   efdd     goto    0x3dba           	GOTO	_01026_DS_
003d78   f01e
003d7a   eff9     goto    0x3df2           	GOTO	_01027_DS_
003d7c   f01e
003d7e   ef15     goto    0x3e2a           	GOTO	_01028_DS_
003d80   f01f
                                           _01025_DS_:
                                           ;	.line	4321; meter_logger.c	*c = fifo_buffer_0[(fifo_tail + pos) % QUEUE_SIZE];
003d82   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003d84   0105     movlb   0x5              	BANKSEL	_fifo_tail
003d86   2544     addwf   0x44, 0, 0x1     	ADDWF	_fifo_tail, W, B
003d88   6e05     movwf   0x5, 0           	MOVWF	r0x05
003d8a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
003d8c   2145     addwfc  0x45, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
003d8e   6e06     movwf   0x6, 0           	MOVWF	r0x06
003d90   6a06     clrf    0x6, 0           	CLRF	r0x06
003d92   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
003d94   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
003d96   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
003d98   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
003d9a   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
003d9c   ffe9
003d9e   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
003da0   ffea
003da2   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
003da4   f005
003da6   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003da8   ffe5
003daa   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003dac   ffe9
003dae   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003db0   fff3
003db2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003db4   ec2e     call    0x505c, 0        	CALL	__gptrput1
003db6   f028
                                           ;	.line	4322; meter_logger.c	break;
003db8   d051     bra     0x3e5c           	BRA	_01029_DS_
                                           _01026_DS_:
                                           ;	.line	4324; meter_logger.c	*c = fifo_buffer_1[(fifo_tail + pos) % QUEUE_SIZE];
003dba   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003dbc   0105     movlb   0x5              	BANKSEL	_fifo_tail
003dbe   2544     addwf   0x44, 0, 0x1     	ADDWF	_fifo_tail, W, B
003dc0   6e05     movwf   0x5, 0           	MOVWF	r0x05
003dc2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
003dc4   2145     addwfc  0x45, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
003dc6   6e06     movwf   0x6, 0           	MOVWF	r0x06
003dc8   6a06     clrf    0x6, 0           	CLRF	r0x06
003dca   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
003dcc   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
003dce   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
003dd0   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
003dd2   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
003dd4   ffe9
003dd6   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
003dd8   ffea
003dda   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
003ddc   f005
003dde   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003de0   ffe5
003de2   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003de4   ffe9
003de6   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003de8   fff3
003dea   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003dec   ec2e     call    0x505c, 0        	CALL	__gptrput1
003dee   f028
                                           ;	.line	4325; meter_logger.c	break;
003df0   d035     bra     0x3e5c           	BRA	_01029_DS_
                                           _01027_DS_:
                                           ;	.line	4327; meter_logger.c	*c = fifo_buffer_2[(fifo_tail + pos) % QUEUE_SIZE];
003df2   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003df4   0105     movlb   0x5              	BANKSEL	_fifo_tail
003df6   2544     addwf   0x44, 0, 0x1     	ADDWF	_fifo_tail, W, B
003df8   6e05     movwf   0x5, 0           	MOVWF	r0x05
003dfa   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
003dfc   2145     addwfc  0x45, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
003dfe   6e06     movwf   0x6, 0           	MOVWF	r0x06
003e00   6a06     clrf    0x6, 0           	CLRF	r0x06
003e02   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
003e04   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
003e06   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
003e08   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
003e0a   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
003e0c   ffe9
003e0e   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
003e10   ffea
003e12   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
003e14   f005
003e16   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003e18   ffe5
003e1a   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003e1c   ffe9
003e1e   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003e20   fff3
003e22   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003e24   ec2e     call    0x505c, 0        	CALL	__gptrput1
003e26   f028
                                           ;	.line	4328; meter_logger.c	break;
003e28   d019     bra     0x3e5c           	BRA	_01029_DS_
                                           _01028_DS_:
003e2a   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4330; meter_logger.c	*c = fifo_buffer_3[(fifo_tail + pos) % QUEUE_SIZE];
003e2c   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
003e2e   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
                                           ; removed redundant BANKSEL
003e30   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
003e32   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
003e34   6a04     clrf    0x4, 0           	CLRF	r0x04
003e36   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
003e38   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
003e3a   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
003e3c   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
003e3e   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
003e40   ffe9
003e42   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
003e44   ffea
003e46   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
003e48   f003
003e4a   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003e4c   ffe5
003e4e   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003e50   ffe9
003e52   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003e54   fff3
003e56   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003e58   ec2e     call    0x505c, 0        	CALL	__gptrput1
003e5a   f028
                                           _01029_DS_:
                                           ;	.line	4333; meter_logger.c	return 1;
003e5c   0e01     movlw   0x1              	MOVLW	0x01
003e5e   d001     bra     0x3e62           	BRA	_01033_DS_
                                           _01031_DS_:
                                           ;	.line	4336; meter_logger.c	return 0;
003e60   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _01033_DS_:
003e62   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003e64   f006
003e66   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003e68   f005
003e6a   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003e6c   f004
003e6e   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003e70   f003
003e72   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003e74   f002
003e76   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003e78   f001
003e7a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003e7c   f000
003e7e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003e80   ffd9
003e82   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_get	code
                                           _fifo_get:
                                           ;	.line	4289; meter_logger.c	unsigned char fifo_get(unsigned char *c) {
003e84   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003e86   ffe5
003e88   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003e8a   ffd9
003e8c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003e8e   ffe5
003e90   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003e92   ffe5
003e94   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003e96   ffe5
003e98   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003e9a   ffe5
003e9c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003e9e   ffe5
003ea0   0e02     movlw   0x2              	MOVLW	0x02
003ea2   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003ea4   f000
003ea6   0e03     movlw   0x3              	MOVLW	0x03
003ea8   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003eaa   f001
003eac   0e04     movlw   0x4              	MOVLW	0x04
003eae   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
003eb0   f002
                                           ;	.line	4290; meter_logger.c	if (fifo_in_use() != 0) {
003eb2   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
003eb4   f026
003eb6   6e03     movwf   0x3, 0           	MOVWF	r0x03
003eb8   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
003eba   f004
003ebc   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003ebe   1004     iorwf   0x4, 0, 0        	IORWF	r0x04, W
003ec0   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
003ec2   d091     bra     0x3fe6           	BRA	_01000_DS_
003ec4   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
                                           ;	.line	4291; meter_logger.c	switch (fifo_tail/QUEUE_SIZE) {
003ec6   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
003ec8   6e03     movwf   0x3, 0           	MOVWF	r0x03
003eca   6a04     clrf    0x4, 0           	CLRF	r0x04
003ecc   0e00     movlw   0                	MOVLW	0x00
003ece   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
003ed0   e102     bnz     0x3ed6           	BNZ	_01013_DS_
003ed2   0e04     movlw   0x4              	MOVLW	0x04
003ed4   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _01013_DS_:
003ed6   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003ed8   d076     bra     0x3fc6           	BRA	_00996_DS_
003eda   6afa     clrf    0xfa, 0          	CLRF	PCLATH
003edc   6afb     clrf    0xfb, 0          	CLRF	PCLATU
003ede   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
003ee0   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
003ee2   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
003ee4   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
003ee6   0bfc     andlw   0xfc             	ANDLW	0xfc
003ee8   0ff8     addlw   0xf8             	ADDLW	LOW(_01014_DS_)
003eea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003eec   0e3e     movlw   0x3e             	MOVLW	HIGH(_01014_DS_)
003eee   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
003ef0   0e00     movlw   0                	MOVLW	UPPER(_01014_DS_)
003ef2   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
003ef4   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
003ef6   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01014_DS_:
003ef8   ef84     goto    0x3f08           	GOTO	_00992_DS_
003efa   f01f
003efc   ef9c     goto    0x3f38           	GOTO	_00993_DS_
003efe   f01f
003f00   efb4     goto    0x3f68           	GOTO	_00994_DS_
003f02   f01f
003f04   efcc     goto    0x3f98           	GOTO	_00995_DS_
003f06   f01f
                                           _00992_DS_:
003f08   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4293; meter_logger.c	*c = fifo_buffer_0[fifo_tail % QUEUE_SIZE];
003f0a   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
003f0c   6e03     movwf   0x3, 0           	MOVWF	r0x03
003f0e   6a04     clrf    0x4, 0           	CLRF	r0x04
003f10   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
003f12   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
003f14   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
003f16   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
003f18   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
003f1a   ffe9
003f1c   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
003f1e   ffea
003f20   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
003f22   f003
003f24   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003f26   ffe5
003f28   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003f2a   ffe9
003f2c   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003f2e   fff3
003f30   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003f32   ec2e     call    0x505c, 0        	CALL	__gptrput1
003f34   f028
                                           ;	.line	4294; meter_logger.c	break;
003f36   d047     bra     0x3fc6           	BRA	_00996_DS_
                                           _00993_DS_:
003f38   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4296; meter_logger.c	*c = fifo_buffer_1[fifo_tail % QUEUE_SIZE];
003f3a   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
003f3c   6e03     movwf   0x3, 0           	MOVWF	r0x03
003f3e   6a04     clrf    0x4, 0           	CLRF	r0x04
003f40   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
003f42   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
003f44   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
003f46   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
003f48   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
003f4a   ffe9
003f4c   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
003f4e   ffea
003f50   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
003f52   f003
003f54   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003f56   ffe5
003f58   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003f5a   ffe9
003f5c   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003f5e   fff3
003f60   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003f62   ec2e     call    0x505c, 0        	CALL	__gptrput1
003f64   f028
                                           ;	.line	4297; meter_logger.c	break;
003f66   d02f     bra     0x3fc6           	BRA	_00996_DS_
                                           _00994_DS_:
003f68   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4299; meter_logger.c	*c = fifo_buffer_2[fifo_tail % QUEUE_SIZE];
003f6a   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
003f6c   6e03     movwf   0x3, 0           	MOVWF	r0x03
003f6e   6a04     clrf    0x4, 0           	CLRF	r0x04
003f70   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
003f72   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
003f74   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
003f76   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
003f78   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
003f7a   ffe9
003f7c   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
003f7e   ffea
003f80   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
003f82   f003
003f84   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003f86   ffe5
003f88   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003f8a   ffe9
003f8c   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003f8e   fff3
003f90   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003f92   ec2e     call    0x505c, 0        	CALL	__gptrput1
003f94   f028
                                           ;	.line	4300; meter_logger.c	break;
003f96   d017     bra     0x3fc6           	BRA	_00996_DS_
                                           _00995_DS_:
003f98   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4302; meter_logger.c	*c = fifo_buffer_3[fifo_tail % QUEUE_SIZE];
003f9a   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
003f9c   6e03     movwf   0x3, 0           	MOVWF	r0x03
003f9e   6a04     clrf    0x4, 0           	CLRF	r0x04
003fa0   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
003fa2   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
003fa4   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
003fa6   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
003fa8   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
003faa   ffe9
003fac   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
003fae   ffea
003fb0   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
003fb2   f003
003fb4   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003fb6   ffe5
003fb8   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003fba   ffe9
003fbc   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003fbe   fff3
003fc0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003fc2   ec2e     call    0x505c, 0        	CALL	__gptrput1
003fc4   f028
                                           _00996_DS_:
003fc6   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4305; meter_logger.c	fifo_tail++;
003fc8   3f44     incfsz  0x44, 0x1, 0x1   	INCFSZ	_fifo_tail, F, B
003fca   d001     bra     0x3fce           	BRA	_11089_DS_
                                           ; removed redundant BANKSEL
003fcc   2b45     incf    0x45, 0x1, 0x1   	INCF	(_fifo_tail + 1), F, B
                                           _11089_DS_:
003fce   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4307; meter_logger.c	if (fifo_tail == QUEUE_SIZE_COMBINED) {
003fd0   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
003fd2   e103     bnz     0x3fda           	BNZ	_01019_DS_
                                           ; removed redundant BANKSEL
003fd4   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
003fd6   0a04     xorlw   0x4              	XORLW	0x04
003fd8   e001     bz      0x3fdc           	BZ	_01020_DS_
                                           _01019_DS_:
003fda   d003     bra     0x3fe2           	BRA	_00998_DS_
                                           _01020_DS_:
003fdc   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4308; meter_logger.c	fifo_tail = 0;
003fde   6b44     clrf    0x44, 0x1        	CLRF	_fifo_tail, B
                                           ; removed redundant BANKSEL
003fe0   6b45     clrf    0x45, 0x1        	CLRF	(_fifo_tail + 1), B
                                           _00998_DS_:
                                           ;	.line	4310; meter_logger.c	return 1;
003fe2   0e01     movlw   0x1              	MOVLW	0x01
003fe4   d001     bra     0x3fe8           	BRA	_01002_DS_
                                           _01000_DS_:
                                           ;	.line	4313; meter_logger.c	return 0;
003fe6   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _01002_DS_:
003fe8   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003fea   f004
003fec   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003fee   f003
003ff0   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003ff2   f002
003ff4   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003ff6   f001
003ff8   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003ffa   f000
003ffc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003ffe   ffd9
004000   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_put	code
                                           _fifo_put:
                                           ;	.line	4261; meter_logger.c	unsigned char fifo_put(unsigned char c) {
00413c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00413e   ffe5
004140   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004142   ffd9
004144   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004146   ffe5
004148   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00414a   ffe5
00414c   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00414e   ffe5
004150   0e02     movlw   0x2              	MOVLW	0x02
004152   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004154   f000
                                           ;	.line	4262; meter_logger.c	if (fifo_in_use() != QUEUE_SIZE_COMBINED) {
004156   ec96     call    0x4d2c, 0        	CALL	_fifo_in_use
004158   f026
00415a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00415c   cff3     movff   0xff3, 0x2       	MOVFF	PRODL, r0x02
00415e   f002
004160   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004162   e104     bnz     0x416c           	BNZ	_00979_DS_
004164   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004166   0a04     xorlw   0x4              	XORLW	0x04
004168   e101     bnz     0x416c           	BNZ	_00979_DS_
00416a   d06d     bra     0x4246           	BRA	_00965_DS_
                                           _00979_DS_:
00416c   0105     movlb   0x5              	BANKSEL	(_fifo_head + 1)
                                           ;	.line	4263; meter_logger.c	switch (fifo_head/QUEUE_SIZE) {
00416e   5143     movf    0x43, 0, 0x1     	MOVF	(_fifo_head + 1), W, B
004170   6e01     movwf   0x1, 0           	MOVWF	r0x01
004172   6a02     clrf    0x2, 0           	CLRF	r0x02
004174   0e00     movlw   0                	MOVLW	0x00
004176   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
004178   e102     bnz     0x417e           	BNZ	_00980_DS_
00417a   0e04     movlw   0x4              	MOVLW	0x04
00417c   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
                                           _00980_DS_:
00417e   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
004180   d052     bra     0x4226           	BRA	_00961_DS_
004182   6afa     clrf    0xfa, 0          	CLRF	PCLATH
004184   6afb     clrf    0xfb, 0          	CLRF	PCLATU
004186   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
004188   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00418a   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
00418c   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00418e   0bfc     andlw   0xfc             	ANDLW	0xfc
004190   0fa0     addlw   0xa0             	ADDLW	LOW(_00981_DS_)
004192   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004194   0e41     movlw   0x41             	MOVLW	HIGH(_00981_DS_)
004196   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
004198   0e00     movlw   0                	MOVLW	UPPER(_00981_DS_)
00419a   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
00419c   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
00419e   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00981_DS_:
0041a0   efd8     goto    0x41b0           	GOTO	_00957_DS_
0041a2   f020
0041a4   efe7     goto    0x41ce           	GOTO	_00958_DS_
0041a6   f020
0041a8   eff6     goto    0x41ec           	GOTO	_00959_DS_
0041aa   f020
0041ac   ef05     goto    0x420a           	GOTO	_00960_DS_
0041ae   f021
                                           _00957_DS_:
0041b0   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4265; meter_logger.c	fifo_buffer_0[fifo_head % QUEUE_SIZE] = c;
0041b2   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
0041b4   6e01     movwf   0x1, 0           	MOVWF	r0x01
0041b6   6a02     clrf    0x2, 0           	CLRF	r0x02
0041b8   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
0041ba   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
0041bc   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
0041be   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0041c0   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0041c2   ffe9
0041c4   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0041c6   ffea
0041c8   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
0041ca   ffef
                                           ;	.line	4266; meter_logger.c	break;
0041cc   d02c     bra     0x4226           	BRA	_00961_DS_
                                           _00958_DS_:
0041ce   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4268; meter_logger.c	fifo_buffer_1[fifo_head % QUEUE_SIZE] = c;
0041d0   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
0041d2   6e01     movwf   0x1, 0           	MOVWF	r0x01
0041d4   6a02     clrf    0x2, 0           	CLRF	r0x02
0041d6   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
0041d8   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
0041da   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
0041dc   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0041de   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0041e0   ffe9
0041e2   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0041e4   ffea
0041e6   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
0041e8   ffef
                                           ;	.line	4269; meter_logger.c	break;
0041ea   d01d     bra     0x4226           	BRA	_00961_DS_
                                           _00959_DS_:
0041ec   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4271; meter_logger.c	fifo_buffer_2[fifo_head % QUEUE_SIZE] = c;
0041ee   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
0041f0   6e01     movwf   0x1, 0           	MOVWF	r0x01
0041f2   6a02     clrf    0x2, 0           	CLRF	r0x02
0041f4   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
0041f6   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
0041f8   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
0041fa   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0041fc   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0041fe   ffe9
004200   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
004202   ffea
004204   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
004206   ffef
                                           ;	.line	4272; meter_logger.c	break;
004208   d00e     bra     0x4226           	BRA	_00961_DS_
                                           _00960_DS_:
00420a   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4274; meter_logger.c	fifo_buffer_3[fifo_head % QUEUE_SIZE] = c;
00420c   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
00420e   6e01     movwf   0x1, 0           	MOVWF	r0x01
004210   6a02     clrf    0x2, 0           	CLRF	r0x02
004212   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
004214   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
004216   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
004218   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00421a   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
00421c   ffe9
00421e   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
004220   ffea
004222   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
004224   ffef
                                           _00961_DS_:
004226   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4277; meter_logger.c	fifo_head++;
004228   3f42     incfsz  0x42, 0x1, 0x1   	INCFSZ	_fifo_head, F, B
00422a   d001     bra     0x422e           	BRA	_21090_DS_
                                           ; removed redundant BANKSEL
00422c   2b43     incf    0x43, 0x1, 0x1   	INCF	(_fifo_head + 1), F, B
                                           _21090_DS_:
00422e   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4279; meter_logger.c	if (fifo_head == QUEUE_SIZE_COMBINED) {
004230   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
004232   e103     bnz     0x423a           	BNZ	_00986_DS_
                                           ; removed redundant BANKSEL
004234   5143     movf    0x43, 0, 0x1     	MOVF	(_fifo_head + 1), W, B
004236   0a04     xorlw   0x4              	XORLW	0x04
004238   e001     bz      0x423c           	BZ	_00987_DS_
                                           _00986_DS_:
00423a   d003     bra     0x4242           	BRA	_00963_DS_
                                           _00987_DS_:
00423c   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4280; meter_logger.c	fifo_head = 0;
00423e   6b42     clrf    0x42, 0x1        	CLRF	_fifo_head, B
                                           ; removed redundant BANKSEL
004240   6b43     clrf    0x43, 0x1        	CLRF	(_fifo_head + 1), B
                                           _00963_DS_:
                                           ;	.line	4282; meter_logger.c	return 1;
004242   0e01     movlw   0x1              	MOVLW	0x01
004244   d001     bra     0x4248           	BRA	_00967_DS_
                                           _00965_DS_:
                                           ;	.line	4285; meter_logger.c	return 0;
004246   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00967_DS_:
004248   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00424a   f002
00424c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00424e   f001
004250   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004252   f000
004254   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004256   ffd9
004258   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_in_use	code
                                           _fifo_in_use:
                                           ;	.line	4257; meter_logger.c	unsigned int fifo_in_use() {
004d2c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004d2e   ffe5
004d30   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004d32   ffd9
004d34   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004d36   ffe5
004d38   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004d3a   ffe5
004d3c   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4258; meter_logger.c	return fifo_head - fifo_tail;
004d3e   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
004d40   0105     movlb   0x5              	BANKSEL	_fifo_head
004d42   5d42     subwf   0x42, 0, 0x1     	SUBWF	_fifo_head, W, B
004d44   6e00     movwf   0, 0             	MOVWF	r0x00
004d46   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
004d48   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
004d4a   0105     movlb   0x5              	BANKSEL	(_fifo_head + 1)
004d4c   5943     subwfb  0x43, 0, 0x1     	SUBWFB	(_fifo_head + 1), W, B
004d4e   6e01     movwf   0x1, 0           	MOVWF	r0x01
004d50   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
004d52   fff3
004d54   5000     movf    0, 0, 0          	MOVF	r0x00, W
004d56   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004d58   f001
004d5a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004d5c   f000
004d5e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004d60   ffd9
004d62   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_byte	code
                                           _fsk_tx_byte:
                                           ;	.line	4249; meter_logger.c	void fsk_tx_byte(unsigned char c) {
004e8c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004e8e   ffe5
004e90   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004e92   ffd9
004e94   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004e96   ffe5
004e98   0e02     movlw   0x2              	MOVLW	0x02
004e9a   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004e9c   f000
                                           ;	.line	4250; meter_logger.c	fsk_proto.data = c;
004e9e   5000     movf    0, 0, 0          	MOVF	r0x00, W
004ea0   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
004ea2   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
                                           ;	.line	4251; meter_logger.c	fsk_proto.data_len = 8;
004ea4   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
004ea6   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
                                           _00944_DS_:
004ea8   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	4252; meter_logger.c	while (fsk_proto.data_len) {
004eaa   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
004eac   e1fd     bnz     0x4ea8           	BNZ	_00944_DS_
004eae   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004eb0   f000
004eb2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004eb4   ffd9
004eb6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__send_fsk_low	code
                                           _send_fsk_low:
                                           ;	.line	2796; meter_logger.c	void send_fsk_low(void) {
0018ea   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0018ec   ffe5
0018ee   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0018f0   ffd9
                                           ;	.line	2797; meter_logger.c	PWM_PIN = 1;
0018f2   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
0018f4   0000     nop                      	nop
0018f6   0000     nop                      	nop
0018f8   0000     nop                      	nop
0018fa   0000     nop                      	nop
0018fc   0000     nop                      	nop
0018fe   0000     nop                      	nop
001900   0000     nop                      	nop
001902   0000     nop                      	nop
001904   0000     nop                      	nop
001906   0000     nop                      	nop
001908   0000     nop                      	nop
00190a   0000     nop                      	nop
00190c   0000     nop                      	nop
00190e   0000     nop                      	nop
001910   0000     nop                      	nop
001912   0000     nop                      	nop
001914   0000     nop                      	nop
001916   0000     nop                      	nop
001918   0000     nop                      	nop
00191a   0000     nop                      	nop
00191c   0000     nop                      	nop
00191e   0000     nop                      	nop
001920   0000     nop                      	nop
001922   0000     nop                      	nop
001924   0000     nop                      	nop
001926   0000     nop                      	nop
001928   0000     nop                      	nop
00192a   0000     nop                      	nop
00192c   0000     nop                      	nop
00192e   0000     nop                      	nop
001930   0000     nop                      	nop
001932   0000     nop                      	nop
001934   0000     nop                      	nop
001936   0000     nop                      	nop
001938   0000     nop                      	nop
00193a   0000     nop                      	nop
00193c   0000     nop                      	nop
00193e   0000     nop                      	nop
001940   0000     nop                      	nop
001942   0000     nop                      	nop
001944   0000     nop                      	nop
001946   0000     nop                      	nop
001948   0000     nop                      	nop
00194a   0000     nop                      	nop
00194c   0000     nop                      	nop
00194e   0000     nop                      	nop
001950   0000     nop                      	nop
001952   0000     nop                      	nop
001954   0000     nop                      	nop
001956   0000     nop                      	nop
001958   0000     nop                      	nop
00195a   0000     nop                      	nop
00195c   0000     nop                      	nop
00195e   0000     nop                      	nop
001960   0000     nop                      	nop
001962   0000     nop                      	nop
001964   0000     nop                      	nop
001966   0000     nop                      	nop
001968   0000     nop                      	nop
00196a   0000     nop                      	nop
00196c   0000     nop                      	nop
00196e   0000     nop                      	nop
001970   0000     nop                      	nop
001972   0000     nop                      	nop
001974   0000     nop                      	nop
001976   0000     nop                      	nop
001978   0000     nop                      	nop
00197a   0000     nop                      	nop
00197c   0000     nop                      	nop
00197e   0000     nop                      	nop
001980   0000     nop                      	nop
001982   0000     nop                      	nop
001984   0000     nop                      	nop
001986   0000     nop                      	nop
001988   0000     nop                      	nop
00198a   0000     nop                      	nop
00198c   0000     nop                      	nop
00198e   0000     nop                      	nop
001990   0000     nop                      	nop
001992   0000     nop                      	nop
001994   0000     nop                      	nop
001996   0000     nop                      	nop
001998   0000     nop                      	nop
00199a   0000     nop                      	nop
00199c   0000     nop                      	nop
00199e   0000     nop                      	nop
0019a0   0000     nop                      	nop
0019a2   0000     nop                      	nop
0019a4   0000     nop                      	nop
0019a6   0000     nop                      	nop
0019a8   0000     nop                      	nop
0019aa   0000     nop                      	nop
0019ac   0000     nop                      	nop
0019ae   0000     nop                      	nop
0019b0   0000     nop                      	nop
0019b2   0000     nop                      	nop
0019b4   0000     nop                      	nop
0019b6   0000     nop                      	nop
0019b8   0000     nop                      	nop
0019ba   0000     nop                      	nop
0019bc   0000     nop                      	nop
0019be   0000     nop                      	nop
0019c0   0000     nop                      	nop
0019c2   0000     nop                      	nop
0019c4   0000     nop                      	nop
0019c6   0000     nop                      	nop
0019c8   0000     nop                      	nop
0019ca   0000     nop                      	nop
0019cc   0000     nop                      	nop
0019ce   0000     nop                      	nop
0019d0   0000     nop                      	nop
0019d2   0000     nop                      	nop
0019d4   0000     nop                      	nop
0019d6   0000     nop                      	nop
0019d8   0000     nop                      	nop
0019da   0000     nop                      	nop
0019dc   0000     nop                      	nop
0019de   0000     nop                      	nop
0019e0   0000     nop                      	nop
0019e2   0000     nop                      	nop
0019e4   0000     nop                      	nop
0019e6   0000     nop                      	nop
0019e8   0000     nop                      	nop
0019ea   0000     nop                      	nop
0019ec   0000     nop                      	nop
0019ee   0000     nop                      	nop
0019f0   0000     nop                      	nop
0019f2   0000     nop                      	nop
0019f4   0000     nop                      	nop
0019f6   0000     nop                      	nop
0019f8   0000     nop                      	nop
0019fa   0000     nop                      	nop
0019fc   0000     nop                      	nop
0019fe   0000     nop                      	nop
001a00   0000     nop                      	nop
001a02   0000     nop                      	nop
001a04   0000     nop                      	nop
001a06   0000     nop                      	nop
001a08   0000     nop                      	nop
001a0a   0000     nop                      	nop
001a0c   0000     nop                      	nop
001a0e   0000     nop                      	nop
001a10   0000     nop                      	nop
001a12   0000     nop                      	nop
001a14   0000     nop                      	nop
001a16   0000     nop                      	nop
001a18   0000     nop                      	nop
001a1a   0000     nop                      	nop
001a1c   0000     nop                      	nop
001a1e   0000     nop                      	nop
001a20   0000     nop                      	nop
001a22   0000     nop                      	nop
001a24   0000     nop                      	nop
001a26   0000     nop                      	nop
001a28   0000     nop                      	nop
001a2a   0000     nop                      	nop
001a2c   0000     nop                      	nop
001a2e   0000     nop                      	nop
001a30   0000     nop                      	nop
001a32   0000     nop                      	nop
001a34   0000     nop                      	nop
001a36   0000     nop                      	nop
001a38   0000     nop                      	nop
001a3a   0000     nop                      	nop
001a3c   0000     nop                      	nop
001a3e   0000     nop                      	nop
001a40   0000     nop                      	nop
001a42   0000     nop                      	nop
001a44   0000     nop                      	nop
001a46   0000     nop                      	nop
001a48   0000     nop                      	nop
001a4a   0000     nop                      	nop
001a4c   0000     nop                      	nop
001a4e   0000     nop                      	nop
001a50   0000     nop                      	nop
001a52   0000     nop                      	nop
001a54   0000     nop                      	nop
001a56   0000     nop                      	nop
001a58   0000     nop                      	nop
001a5a   0000     nop                      	nop
001a5c   0000     nop                      	nop
001a5e   0000     nop                      	nop
001a60   0000     nop                      	nop
001a62   0000     nop                      	nop
001a64   0000     nop                      	nop
001a66   0000     nop                      	nop
001a68   0000     nop                      	nop
001a6a   0000     nop                      	nop
001a6c   0000     nop                      	nop
001a6e   0000     nop                      	nop
001a70   0000     nop                      	nop
001a72   0000     nop                      	nop
001a74   0000     nop                      	nop
001a76   0000     nop                      	nop
001a78   0000     nop                      	nop
001a7a   0000     nop                      	nop
001a7c   0000     nop                      	nop
001a7e   0000     nop                      	nop
001a80   0000     nop                      	nop
001a82   0000     nop                      	nop
001a84   0000     nop                      	nop
001a86   0000     nop                      	nop
001a88   0000     nop                      	nop
001a8a   0000     nop                      	nop
                                           	
                                           ;	.line	3004; meter_logger.c	PWM_PIN = 0;
001a8c   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001a8e   0000     nop                      	nop
001a90   0000     nop                      	nop
001a92   0000     nop                      	nop
001a94   0000     nop                      	nop
001a96   0000     nop                      	nop
001a98   0000     nop                      	nop
001a9a   0000     nop                      	nop
001a9c   0000     nop                      	nop
001a9e   0000     nop                      	nop
001aa0   0000     nop                      	nop
001aa2   0000     nop                      	nop
001aa4   0000     nop                      	nop
001aa6   0000     nop                      	nop
001aa8   0000     nop                      	nop
001aaa   0000     nop                      	nop
001aac   0000     nop                      	nop
001aae   0000     nop                      	nop
001ab0   0000     nop                      	nop
001ab2   0000     nop                      	nop
001ab4   0000     nop                      	nop
001ab6   0000     nop                      	nop
001ab8   0000     nop                      	nop
001aba   0000     nop                      	nop
001abc   0000     nop                      	nop
001abe   0000     nop                      	nop
001ac0   0000     nop                      	nop
001ac2   0000     nop                      	nop
001ac4   0000     nop                      	nop
001ac6   0000     nop                      	nop
001ac8   0000     nop                      	nop
001aca   0000     nop                      	nop
001acc   0000     nop                      	nop
001ace   0000     nop                      	nop
001ad0   0000     nop                      	nop
001ad2   0000     nop                      	nop
001ad4   0000     nop                      	nop
001ad6   0000     nop                      	nop
001ad8   0000     nop                      	nop
001ada   0000     nop                      	nop
001adc   0000     nop                      	nop
001ade   0000     nop                      	nop
001ae0   0000     nop                      	nop
001ae2   0000     nop                      	nop
001ae4   0000     nop                      	nop
001ae6   0000     nop                      	nop
001ae8   0000     nop                      	nop
001aea   0000     nop                      	nop
001aec   0000     nop                      	nop
001aee   0000     nop                      	nop
001af0   0000     nop                      	nop
001af2   0000     nop                      	nop
001af4   0000     nop                      	nop
001af6   0000     nop                      	nop
001af8   0000     nop                      	nop
001afa   0000     nop                      	nop
001afc   0000     nop                      	nop
001afe   0000     nop                      	nop
001b00   0000     nop                      	nop
001b02   0000     nop                      	nop
001b04   0000     nop                      	nop
001b06   0000     nop                      	nop
001b08   0000     nop                      	nop
001b0a   0000     nop                      	nop
001b0c   0000     nop                      	nop
001b0e   0000     nop                      	nop
001b10   0000     nop                      	nop
001b12   0000     nop                      	nop
001b14   0000     nop                      	nop
001b16   0000     nop                      	nop
001b18   0000     nop                      	nop
001b1a   0000     nop                      	nop
001b1c   0000     nop                      	nop
001b1e   0000     nop                      	nop
001b20   0000     nop                      	nop
001b22   0000     nop                      	nop
001b24   0000     nop                      	nop
001b26   0000     nop                      	nop
001b28   0000     nop                      	nop
001b2a   0000     nop                      	nop
001b2c   0000     nop                      	nop
001b2e   0000     nop                      	nop
001b30   0000     nop                      	nop
001b32   0000     nop                      	nop
001b34   0000     nop                      	nop
001b36   0000     nop                      	nop
001b38   0000     nop                      	nop
001b3a   0000     nop                      	nop
001b3c   0000     nop                      	nop
001b3e   0000     nop                      	nop
001b40   0000     nop                      	nop
001b42   0000     nop                      	nop
001b44   0000     nop                      	nop
001b46   0000     nop                      	nop
001b48   0000     nop                      	nop
001b4a   0000     nop                      	nop
001b4c   0000     nop                      	nop
001b4e   0000     nop                      	nop
001b50   0000     nop                      	nop
001b52   0000     nop                      	nop
001b54   0000     nop                      	nop
001b56   0000     nop                      	nop
001b58   0000     nop                      	nop
001b5a   0000     nop                      	nop
001b5c   0000     nop                      	nop
001b5e   0000     nop                      	nop
001b60   0000     nop                      	nop
001b62   0000     nop                      	nop
001b64   0000     nop                      	nop
001b66   0000     nop                      	nop
001b68   0000     nop                      	nop
001b6a   0000     nop                      	nop
001b6c   0000     nop                      	nop
001b6e   0000     nop                      	nop
001b70   0000     nop                      	nop
001b72   0000     nop                      	nop
001b74   0000     nop                      	nop
001b76   0000     nop                      	nop
001b78   0000     nop                      	nop
001b7a   0000     nop                      	nop
001b7c   0000     nop                      	nop
001b7e   0000     nop                      	nop
001b80   0000     nop                      	nop
001b82   0000     nop                      	nop
001b84   0000     nop                      	nop
001b86   0000     nop                      	nop
001b88   0000     nop                      	nop
001b8a   0000     nop                      	nop
001b8c   0000     nop                      	nop
001b8e   0000     nop                      	nop
001b90   0000     nop                      	nop
001b92   0000     nop                      	nop
001b94   0000     nop                      	nop
001b96   0000     nop                      	nop
001b98   0000     nop                      	nop
001b9a   0000     nop                      	nop
001b9c   0000     nop                      	nop
001b9e   0000     nop                      	nop
001ba0   0000     nop                      	nop
001ba2   0000     nop                      	nop
001ba4   0000     nop                      	nop
001ba6   0000     nop                      	nop
001ba8   0000     nop                      	nop
001baa   0000     nop                      	nop
001bac   0000     nop                      	nop
001bae   0000     nop                      	nop
001bb0   0000     nop                      	nop
001bb2   0000     nop                      	nop
001bb4   0000     nop                      	nop
001bb6   0000     nop                      	nop
001bb8   0000     nop                      	nop
001bba   0000     nop                      	nop
001bbc   0000     nop                      	nop
001bbe   0000     nop                      	nop
001bc0   0000     nop                      	nop
001bc2   0000     nop                      	nop
001bc4   0000     nop                      	nop
001bc6   0000     nop                      	nop
001bc8   0000     nop                      	nop
001bca   0000     nop                      	nop
001bcc   0000     nop                      	nop
001bce   0000     nop                      	nop
001bd0   0000     nop                      	nop
001bd2   0000     nop                      	nop
001bd4   0000     nop                      	nop
001bd6   0000     nop                      	nop
001bd8   0000     nop                      	nop
001bda   0000     nop                      	nop
001bdc   0000     nop                      	nop
001bde   0000     nop                      	nop
001be0   0000     nop                      	nop
001be2   0000     nop                      	nop
001be4   0000     nop                      	nop
001be6   0000     nop                      	nop
001be8   0000     nop                      	nop
001bea   0000     nop                      	nop
001bec   0000     nop                      	nop
001bee   0000     nop                      	nop
001bf0   0000     nop                      	nop
001bf2   0000     nop                      	nop
001bf4   0000     nop                      	nop
001bf6   0000     nop                      	nop
001bf8   0000     nop                      	nop
001bfa   0000     nop                      	nop
001bfc   0000     nop                      	nop
001bfe   0000     nop                      	nop
001c00   0000     nop                      	nop
001c02   0000     nop                      	nop
001c04   0000     nop                      	nop
001c06   0000     nop                      	nop
001c08   0000     nop                      	nop
001c0a   0000     nop                      	nop
001c0c   0000     nop                      	nop
001c0e   0000     nop                      	nop
001c10   0000     nop                      	nop
001c12   0000     nop                      	nop
001c14   0000     nop                      	nop
001c16   0000     nop                      	nop
001c18   0000     nop                      	nop
001c1a   0000     nop                      	nop
001c1c   0000     nop                      	nop
001c1e   0000     nop                      	nop
001c20   0000     nop                      	nop
001c22   0000     nop                      	nop
001c24   0000     nop                      	nop
                                           	
                                           ;	.line	3211; meter_logger.c	PWM_PIN = 1;
001c26   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001c28   0000     nop                      	nop
001c2a   0000     nop                      	nop
001c2c   0000     nop                      	nop
001c2e   0000     nop                      	nop
001c30   0000     nop                      	nop
001c32   0000     nop                      	nop
001c34   0000     nop                      	nop
001c36   0000     nop                      	nop
001c38   0000     nop                      	nop
001c3a   0000     nop                      	nop
001c3c   0000     nop                      	nop
001c3e   0000     nop                      	nop
001c40   0000     nop                      	nop
001c42   0000     nop                      	nop
001c44   0000     nop                      	nop
001c46   0000     nop                      	nop
001c48   0000     nop                      	nop
001c4a   0000     nop                      	nop
001c4c   0000     nop                      	nop
001c4e   0000     nop                      	nop
001c50   0000     nop                      	nop
001c52   0000     nop                      	nop
001c54   0000     nop                      	nop
001c56   0000     nop                      	nop
001c58   0000     nop                      	nop
001c5a   0000     nop                      	nop
001c5c   0000     nop                      	nop
001c5e   0000     nop                      	nop
001c60   0000     nop                      	nop
001c62   0000     nop                      	nop
001c64   0000     nop                      	nop
001c66   0000     nop                      	nop
001c68   0000     nop                      	nop
001c6a   0000     nop                      	nop
001c6c   0000     nop                      	nop
001c6e   0000     nop                      	nop
001c70   0000     nop                      	nop
001c72   0000     nop                      	nop
001c74   0000     nop                      	nop
001c76   0000     nop                      	nop
001c78   0000     nop                      	nop
001c7a   0000     nop                      	nop
001c7c   0000     nop                      	nop
001c7e   0000     nop                      	nop
001c80   0000     nop                      	nop
001c82   0000     nop                      	nop
001c84   0000     nop                      	nop
001c86   0000     nop                      	nop
001c88   0000     nop                      	nop
001c8a   0000     nop                      	nop
001c8c   0000     nop                      	nop
001c8e   0000     nop                      	nop
001c90   0000     nop                      	nop
001c92   0000     nop                      	nop
001c94   0000     nop                      	nop
001c96   0000     nop                      	nop
001c98   0000     nop                      	nop
001c9a   0000     nop                      	nop
001c9c   0000     nop                      	nop
001c9e   0000     nop                      	nop
001ca0   0000     nop                      	nop
001ca2   0000     nop                      	nop
001ca4   0000     nop                      	nop
001ca6   0000     nop                      	nop
001ca8   0000     nop                      	nop
001caa   0000     nop                      	nop
001cac   0000     nop                      	nop
001cae   0000     nop                      	nop
001cb0   0000     nop                      	nop
001cb2   0000     nop                      	nop
001cb4   0000     nop                      	nop
001cb6   0000     nop                      	nop
001cb8   0000     nop                      	nop
001cba   0000     nop                      	nop
001cbc   0000     nop                      	nop
001cbe   0000     nop                      	nop
001cc0   0000     nop                      	nop
001cc2   0000     nop                      	nop
001cc4   0000     nop                      	nop
001cc6   0000     nop                      	nop
001cc8   0000     nop                      	nop
001cca   0000     nop                      	nop
001ccc   0000     nop                      	nop
001cce   0000     nop                      	nop
001cd0   0000     nop                      	nop
001cd2   0000     nop                      	nop
001cd4   0000     nop                      	nop
001cd6   0000     nop                      	nop
001cd8   0000     nop                      	nop
001cda   0000     nop                      	nop
001cdc   0000     nop                      	nop
001cde   0000     nop                      	nop
001ce0   0000     nop                      	nop
001ce2   0000     nop                      	nop
001ce4   0000     nop                      	nop
001ce6   0000     nop                      	nop
001ce8   0000     nop                      	nop
001cea   0000     nop                      	nop
001cec   0000     nop                      	nop
001cee   0000     nop                      	nop
001cf0   0000     nop                      	nop
001cf2   0000     nop                      	nop
001cf4   0000     nop                      	nop
001cf6   0000     nop                      	nop
001cf8   0000     nop                      	nop
001cfa   0000     nop                      	nop
001cfc   0000     nop                      	nop
001cfe   0000     nop                      	nop
001d00   0000     nop                      	nop
001d02   0000     nop                      	nop
001d04   0000     nop                      	nop
001d06   0000     nop                      	nop
001d08   0000     nop                      	nop
001d0a   0000     nop                      	nop
001d0c   0000     nop                      	nop
001d0e   0000     nop                      	nop
001d10   0000     nop                      	nop
001d12   0000     nop                      	nop
001d14   0000     nop                      	nop
001d16   0000     nop                      	nop
001d18   0000     nop                      	nop
001d1a   0000     nop                      	nop
001d1c   0000     nop                      	nop
001d1e   0000     nop                      	nop
001d20   0000     nop                      	nop
001d22   0000     nop                      	nop
001d24   0000     nop                      	nop
001d26   0000     nop                      	nop
001d28   0000     nop                      	nop
001d2a   0000     nop                      	nop
001d2c   0000     nop                      	nop
001d2e   0000     nop                      	nop
001d30   0000     nop                      	nop
001d32   0000     nop                      	nop
001d34   0000     nop                      	nop
001d36   0000     nop                      	nop
001d38   0000     nop                      	nop
001d3a   0000     nop                      	nop
001d3c   0000     nop                      	nop
001d3e   0000     nop                      	nop
001d40   0000     nop                      	nop
001d42   0000     nop                      	nop
001d44   0000     nop                      	nop
001d46   0000     nop                      	nop
001d48   0000     nop                      	nop
001d4a   0000     nop                      	nop
001d4c   0000     nop                      	nop
001d4e   0000     nop                      	nop
001d50   0000     nop                      	nop
001d52   0000     nop                      	nop
001d54   0000     nop                      	nop
001d56   0000     nop                      	nop
001d58   0000     nop                      	nop
001d5a   0000     nop                      	nop
001d5c   0000     nop                      	nop
001d5e   0000     nop                      	nop
001d60   0000     nop                      	nop
001d62   0000     nop                      	nop
001d64   0000     nop                      	nop
001d66   0000     nop                      	nop
001d68   0000     nop                      	nop
001d6a   0000     nop                      	nop
001d6c   0000     nop                      	nop
001d6e   0000     nop                      	nop
001d70   0000     nop                      	nop
001d72   0000     nop                      	nop
001d74   0000     nop                      	nop
001d76   0000     nop                      	nop
001d78   0000     nop                      	nop
001d7a   0000     nop                      	nop
001d7c   0000     nop                      	nop
001d7e   0000     nop                      	nop
001d80   0000     nop                      	nop
001d82   0000     nop                      	nop
001d84   0000     nop                      	nop
001d86   0000     nop                      	nop
001d88   0000     nop                      	nop
001d8a   0000     nop                      	nop
001d8c   0000     nop                      	nop
001d8e   0000     nop                      	nop
001d90   0000     nop                      	nop
001d92   0000     nop                      	nop
001d94   0000     nop                      	nop
001d96   0000     nop                      	nop
001d98   0000     nop                      	nop
001d9a   0000     nop                      	nop
001d9c   0000     nop                      	nop
001d9e   0000     nop                      	nop
001da0   0000     nop                      	nop
001da2   0000     nop                      	nop
001da4   0000     nop                      	nop
001da6   0000     nop                      	nop
001da8   0000     nop                      	nop
001daa   0000     nop                      	nop
001dac   0000     nop                      	nop
001dae   0000     nop                      	nop
001db0   0000     nop                      	nop
001db2   0000     nop                      	nop
001db4   0000     nop                      	nop
001db6   0000     nop                      	nop
001db8   0000     nop                      	nop
001dba   0000     nop                      	nop
001dbc   0000     nop                      	nop
001dbe   0000     nop                      	nop
                                           	
                                           ;	.line	3418; meter_logger.c	PWM_PIN = 0;
001dc0   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001dc2   0000     nop                      	nop
001dc4   0000     nop                      	nop
001dc6   0000     nop                      	nop
001dc8   0000     nop                      	nop
001dca   0000     nop                      	nop
001dcc   0000     nop                      	nop
001dce   0000     nop                      	nop
001dd0   0000     nop                      	nop
001dd2   0000     nop                      	nop
001dd4   0000     nop                      	nop
001dd6   0000     nop                      	nop
001dd8   0000     nop                      	nop
001dda   0000     nop                      	nop
001ddc   0000     nop                      	nop
001dde   0000     nop                      	nop
001de0   0000     nop                      	nop
001de2   0000     nop                      	nop
001de4   0000     nop                      	nop
001de6   0000     nop                      	nop
001de8   0000     nop                      	nop
001dea   0000     nop                      	nop
001dec   0000     nop                      	nop
001dee   0000     nop                      	nop
001df0   0000     nop                      	nop
001df2   0000     nop                      	nop
001df4   0000     nop                      	nop
001df6   0000     nop                      	nop
001df8   0000     nop                      	nop
001dfa   0000     nop                      	nop
001dfc   0000     nop                      	nop
001dfe   0000     nop                      	nop
001e00   0000     nop                      	nop
001e02   0000     nop                      	nop
001e04   0000     nop                      	nop
001e06   0000     nop                      	nop
001e08   0000     nop                      	nop
001e0a   0000     nop                      	nop
001e0c   0000     nop                      	nop
001e0e   0000     nop                      	nop
001e10   0000     nop                      	nop
001e12   0000     nop                      	nop
001e14   0000     nop                      	nop
001e16   0000     nop                      	nop
001e18   0000     nop                      	nop
001e1a   0000     nop                      	nop
001e1c   0000     nop                      	nop
001e1e   0000     nop                      	nop
001e20   0000     nop                      	nop
001e22   0000     nop                      	nop
001e24   0000     nop                      	nop
001e26   0000     nop                      	nop
001e28   0000     nop                      	nop
001e2a   0000     nop                      	nop
001e2c   0000     nop                      	nop
001e2e   0000     nop                      	nop
001e30   0000     nop                      	nop
001e32   0000     nop                      	nop
001e34   0000     nop                      	nop
001e36   0000     nop                      	nop
001e38   0000     nop                      	nop
001e3a   0000     nop                      	nop
001e3c   0000     nop                      	nop
001e3e   0000     nop                      	nop
001e40   0000     nop                      	nop
001e42   0000     nop                      	nop
001e44   0000     nop                      	nop
001e46   0000     nop                      	nop
001e48   0000     nop                      	nop
001e4a   0000     nop                      	nop
001e4c   0000     nop                      	nop
001e4e   0000     nop                      	nop
001e50   0000     nop                      	nop
001e52   0000     nop                      	nop
001e54   0000     nop                      	nop
001e56   0000     nop                      	nop
001e58   0000     nop                      	nop
001e5a   0000     nop                      	nop
001e5c   0000     nop                      	nop
001e5e   0000     nop                      	nop
001e60   0000     nop                      	nop
001e62   0000     nop                      	nop
001e64   0000     nop                      	nop
001e66   0000     nop                      	nop
001e68   0000     nop                      	nop
001e6a   0000     nop                      	nop
001e6c   0000     nop                      	nop
001e6e   0000     nop                      	nop
001e70   0000     nop                      	nop
001e72   0000     nop                      	nop
001e74   0000     nop                      	nop
001e76   0000     nop                      	nop
001e78   0000     nop                      	nop
001e7a   0000     nop                      	nop
001e7c   0000     nop                      	nop
001e7e   0000     nop                      	nop
001e80   0000     nop                      	nop
001e82   0000     nop                      	nop
001e84   0000     nop                      	nop
001e86   0000     nop                      	nop
001e88   0000     nop                      	nop
001e8a   0000     nop                      	nop
001e8c   0000     nop                      	nop
001e8e   0000     nop                      	nop
001e90   0000     nop                      	nop
001e92   0000     nop                      	nop
001e94   0000     nop                      	nop
001e96   0000     nop                      	nop
001e98   0000     nop                      	nop
001e9a   0000     nop                      	nop
001e9c   0000     nop                      	nop
001e9e   0000     nop                      	nop
001ea0   0000     nop                      	nop
001ea2   0000     nop                      	nop
001ea4   0000     nop                      	nop
001ea6   0000     nop                      	nop
001ea8   0000     nop                      	nop
001eaa   0000     nop                      	nop
001eac   0000     nop                      	nop
001eae   0000     nop                      	nop
001eb0   0000     nop                      	nop
001eb2   0000     nop                      	nop
001eb4   0000     nop                      	nop
001eb6   0000     nop                      	nop
001eb8   0000     nop                      	nop
001eba   0000     nop                      	nop
001ebc   0000     nop                      	nop
001ebe   0000     nop                      	nop
001ec0   0000     nop                      	nop
001ec2   0000     nop                      	nop
001ec4   0000     nop                      	nop
001ec6   0000     nop                      	nop
001ec8   0000     nop                      	nop
001eca   0000     nop                      	nop
001ecc   0000     nop                      	nop
001ece   0000     nop                      	nop
001ed0   0000     nop                      	nop
001ed2   0000     nop                      	nop
001ed4   0000     nop                      	nop
001ed6   0000     nop                      	nop
001ed8   0000     nop                      	nop
001eda   0000     nop                      	nop
001edc   0000     nop                      	nop
001ede   0000     nop                      	nop
001ee0   0000     nop                      	nop
001ee2   0000     nop                      	nop
001ee4   0000     nop                      	nop
001ee6   0000     nop                      	nop
001ee8   0000     nop                      	nop
001eea   0000     nop                      	nop
001eec   0000     nop                      	nop
001eee   0000     nop                      	nop
001ef0   0000     nop                      	nop
001ef2   0000     nop                      	nop
001ef4   0000     nop                      	nop
001ef6   0000     nop                      	nop
001ef8   0000     nop                      	nop
001efa   0000     nop                      	nop
001efc   0000     nop                      	nop
001efe   0000     nop                      	nop
001f00   0000     nop                      	nop
001f02   0000     nop                      	nop
001f04   0000     nop                      	nop
001f06   0000     nop                      	nop
001f08   0000     nop                      	nop
001f0a   0000     nop                      	nop
001f0c   0000     nop                      	nop
001f0e   0000     nop                      	nop
001f10   0000     nop                      	nop
001f12   0000     nop                      	nop
001f14   0000     nop                      	nop
001f16   0000     nop                      	nop
001f18   0000     nop                      	nop
001f1a   0000     nop                      	nop
001f1c   0000     nop                      	nop
001f1e   0000     nop                      	nop
001f20   0000     nop                      	nop
001f22   0000     nop                      	nop
001f24   0000     nop                      	nop
001f26   0000     nop                      	nop
001f28   0000     nop                      	nop
001f2a   0000     nop                      	nop
001f2c   0000     nop                      	nop
001f2e   0000     nop                      	nop
001f30   0000     nop                      	nop
001f32   0000     nop                      	nop
001f34   0000     nop                      	nop
001f36   0000     nop                      	nop
001f38   0000     nop                      	nop
001f3a   0000     nop                      	nop
001f3c   0000     nop                      	nop
001f3e   0000     nop                      	nop
001f40   0000     nop                      	nop
001f42   0000     nop                      	nop
001f44   0000     nop                      	nop
001f46   0000     nop                      	nop
001f48   0000     nop                      	nop
001f4a   0000     nop                      	nop
001f4c   0000     nop                      	nop
001f4e   0000     nop                      	nop
001f50   0000     nop                      	nop
001f52   0000     nop                      	nop
001f54   0000     nop                      	nop
001f56   0000     nop                      	nop
001f58   0000     nop                      	nop
                                           	
                                           ;	.line	3625; meter_logger.c	PWM_PIN = 1;
001f5a   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001f5c   0000     nop                      	nop
001f5e   0000     nop                      	nop
001f60   0000     nop                      	nop
001f62   0000     nop                      	nop
001f64   0000     nop                      	nop
001f66   0000     nop                      	nop
001f68   0000     nop                      	nop
001f6a   0000     nop                      	nop
001f6c   0000     nop                      	nop
001f6e   0000     nop                      	nop
001f70   0000     nop                      	nop
001f72   0000     nop                      	nop
001f74   0000     nop                      	nop
001f76   0000     nop                      	nop
001f78   0000     nop                      	nop
001f7a   0000     nop                      	nop
001f7c   0000     nop                      	nop
001f7e   0000     nop                      	nop
001f80   0000     nop                      	nop
001f82   0000     nop                      	nop
001f84   0000     nop                      	nop
001f86   0000     nop                      	nop
001f88   0000     nop                      	nop
001f8a   0000     nop                      	nop
001f8c   0000     nop                      	nop
001f8e   0000     nop                      	nop
001f90   0000     nop                      	nop
001f92   0000     nop                      	nop
001f94   0000     nop                      	nop
001f96   0000     nop                      	nop
001f98   0000     nop                      	nop
001f9a   0000     nop                      	nop
001f9c   0000     nop                      	nop
001f9e   0000     nop                      	nop
001fa0   0000     nop                      	nop
001fa2   0000     nop                      	nop
001fa4   0000     nop                      	nop
001fa6   0000     nop                      	nop
001fa8   0000     nop                      	nop
001faa   0000     nop                      	nop
001fac   0000     nop                      	nop
001fae   0000     nop                      	nop
001fb0   0000     nop                      	nop
001fb2   0000     nop                      	nop
001fb4   0000     nop                      	nop
001fb6   0000     nop                      	nop
001fb8   0000     nop                      	nop
001fba   0000     nop                      	nop
001fbc   0000     nop                      	nop
001fbe   0000     nop                      	nop
001fc0   0000     nop                      	nop
001fc2   0000     nop                      	nop
001fc4   0000     nop                      	nop
001fc6   0000     nop                      	nop
001fc8   0000     nop                      	nop
001fca   0000     nop                      	nop
001fcc   0000     nop                      	nop
001fce   0000     nop                      	nop
001fd0   0000     nop                      	nop
001fd2   0000     nop                      	nop
001fd4   0000     nop                      	nop
001fd6   0000     nop                      	nop
001fd8   0000     nop                      	nop
001fda   0000     nop                      	nop
001fdc   0000     nop                      	nop
001fde   0000     nop                      	nop
001fe0   0000     nop                      	nop
001fe2   0000     nop                      	nop
001fe4   0000     nop                      	nop
001fe6   0000     nop                      	nop
001fe8   0000     nop                      	nop
001fea   0000     nop                      	nop
001fec   0000     nop                      	nop
001fee   0000     nop                      	nop
001ff0   0000     nop                      	nop
001ff2   0000     nop                      	nop
001ff4   0000     nop                      	nop
001ff6   0000     nop                      	nop
001ff8   0000     nop                      	nop
001ffa   0000     nop                      	nop
001ffc   0000     nop                      	nop
001ffe   0000     nop                      	nop
002000   0000     nop                      	nop
002002   0000     nop                      	nop
002004   0000     nop                      	nop
002006   0000     nop                      	nop
002008   0000     nop                      	nop
00200a   0000     nop                      	nop
00200c   0000     nop                      	nop
00200e   0000     nop                      	nop
002010   0000     nop                      	nop
002012   0000     nop                      	nop
002014   0000     nop                      	nop
002016   0000     nop                      	nop
002018   0000     nop                      	nop
00201a   0000     nop                      	nop
00201c   0000     nop                      	nop
00201e   0000     nop                      	nop
002020   0000     nop                      	nop
002022   0000     nop                      	nop
002024   0000     nop                      	nop
002026   0000     nop                      	nop
002028   0000     nop                      	nop
00202a   0000     nop                      	nop
00202c   0000     nop                      	nop
00202e   0000     nop                      	nop
002030   0000     nop                      	nop
002032   0000     nop                      	nop
002034   0000     nop                      	nop
002036   0000     nop                      	nop
002038   0000     nop                      	nop
00203a   0000     nop                      	nop
00203c   0000     nop                      	nop
00203e   0000     nop                      	nop
002040   0000     nop                      	nop
002042   0000     nop                      	nop
002044   0000     nop                      	nop
002046   0000     nop                      	nop
002048   0000     nop                      	nop
00204a   0000     nop                      	nop
00204c   0000     nop                      	nop
00204e   0000     nop                      	nop
002050   0000     nop                      	nop
002052   0000     nop                      	nop
002054   0000     nop                      	nop
002056   0000     nop                      	nop
002058   0000     nop                      	nop
00205a   0000     nop                      	nop
00205c   0000     nop                      	nop
00205e   0000     nop                      	nop
002060   0000     nop                      	nop
002062   0000     nop                      	nop
002064   0000     nop                      	nop
002066   0000     nop                      	nop
002068   0000     nop                      	nop
00206a   0000     nop                      	nop
00206c   0000     nop                      	nop
00206e   0000     nop                      	nop
002070   0000     nop                      	nop
002072   0000     nop                      	nop
002074   0000     nop                      	nop
002076   0000     nop                      	nop
002078   0000     nop                      	nop
00207a   0000     nop                      	nop
00207c   0000     nop                      	nop
00207e   0000     nop                      	nop
002080   0000     nop                      	nop
002082   0000     nop                      	nop
002084   0000     nop                      	nop
002086   0000     nop                      	nop
002088   0000     nop                      	nop
00208a   0000     nop                      	nop
00208c   0000     nop                      	nop
00208e   0000     nop                      	nop
002090   0000     nop                      	nop
002092   0000     nop                      	nop
002094   0000     nop                      	nop
002096   0000     nop                      	nop
002098   0000     nop                      	nop
00209a   0000     nop                      	nop
00209c   0000     nop                      	nop
00209e   0000     nop                      	nop
0020a0   0000     nop                      	nop
0020a2   0000     nop                      	nop
0020a4   0000     nop                      	nop
0020a6   0000     nop                      	nop
0020a8   0000     nop                      	nop
0020aa   0000     nop                      	nop
0020ac   0000     nop                      	nop
0020ae   0000     nop                      	nop
0020b0   0000     nop                      	nop
0020b2   0000     nop                      	nop
0020b4   0000     nop                      	nop
0020b6   0000     nop                      	nop
0020b8   0000     nop                      	nop
0020ba   0000     nop                      	nop
0020bc   0000     nop                      	nop
0020be   0000     nop                      	nop
0020c0   0000     nop                      	nop
0020c2   0000     nop                      	nop
0020c4   0000     nop                      	nop
0020c6   0000     nop                      	nop
0020c8   0000     nop                      	nop
0020ca   0000     nop                      	nop
0020cc   0000     nop                      	nop
0020ce   0000     nop                      	nop
0020d0   0000     nop                      	nop
0020d2   0000     nop                      	nop
0020d4   0000     nop                      	nop
0020d6   0000     nop                      	nop
0020d8   0000     nop                      	nop
0020da   0000     nop                      	nop
0020dc   0000     nop                      	nop
0020de   0000     nop                      	nop
0020e0   0000     nop                      	nop
0020e2   0000     nop                      	nop
0020e4   0000     nop                      	nop
0020e6   0000     nop                      	nop
0020e8   0000     nop                      	nop
0020ea   0000     nop                      	nop
0020ec   0000     nop                      	nop
0020ee   0000     nop                      	nop
0020f0   0000     nop                      	nop
0020f2   0000     nop                      	nop
                                           	
                                           ;	.line	3832; meter_logger.c	PWM_PIN = 0;
0020f4   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
0020f6   0000     nop                      	nop
0020f8   0000     nop                      	nop
0020fa   0000     nop                      	nop
0020fc   0000     nop                      	nop
0020fe   0000     nop                      	nop
002100   0000     nop                      	nop
002102   0000     nop                      	nop
002104   0000     nop                      	nop
002106   0000     nop                      	nop
002108   0000     nop                      	nop
00210a   0000     nop                      	nop
00210c   0000     nop                      	nop
00210e   0000     nop                      	nop
002110   0000     nop                      	nop
002112   0000     nop                      	nop
002114   0000     nop                      	nop
002116   0000     nop                      	nop
002118   0000     nop                      	nop
00211a   0000     nop                      	nop
00211c   0000     nop                      	nop
00211e   0000     nop                      	nop
002120   0000     nop                      	nop
002122   0000     nop                      	nop
002124   0000     nop                      	nop
002126   0000     nop                      	nop
002128   0000     nop                      	nop
00212a   0000     nop                      	nop
00212c   0000     nop                      	nop
00212e   0000     nop                      	nop
002130   0000     nop                      	nop
002132   0000     nop                      	nop
002134   0000     nop                      	nop
002136   0000     nop                      	nop
002138   0000     nop                      	nop
00213a   0000     nop                      	nop
00213c   0000     nop                      	nop
00213e   0000     nop                      	nop
002140   0000     nop                      	nop
002142   0000     nop                      	nop
002144   0000     nop                      	nop
002146   0000     nop                      	nop
002148   0000     nop                      	nop
00214a   0000     nop                      	nop
00214c   0000     nop                      	nop
00214e   0000     nop                      	nop
002150   0000     nop                      	nop
002152   0000     nop                      	nop
002154   0000     nop                      	nop
002156   0000     nop                      	nop
002158   0000     nop                      	nop
00215a   0000     nop                      	nop
00215c   0000     nop                      	nop
00215e   0000     nop                      	nop
002160   0000     nop                      	nop
002162   0000     nop                      	nop
002164   0000     nop                      	nop
002166   0000     nop                      	nop
002168   0000     nop                      	nop
00216a   0000     nop                      	nop
00216c   0000     nop                      	nop
00216e   0000     nop                      	nop
002170   0000     nop                      	nop
002172   0000     nop                      	nop
002174   0000     nop                      	nop
002176   0000     nop                      	nop
002178   0000     nop                      	nop
00217a   0000     nop                      	nop
00217c   0000     nop                      	nop
00217e   0000     nop                      	nop
002180   0000     nop                      	nop
002182   0000     nop                      	nop
002184   0000     nop                      	nop
002186   0000     nop                      	nop
002188   0000     nop                      	nop
00218a   0000     nop                      	nop
00218c   0000     nop                      	nop
00218e   0000     nop                      	nop
002190   0000     nop                      	nop
002192   0000     nop                      	nop
002194   0000     nop                      	nop
002196   0000     nop                      	nop
002198   0000     nop                      	nop
00219a   0000     nop                      	nop
00219c   0000     nop                      	nop
00219e   0000     nop                      	nop
0021a0   0000     nop                      	nop
0021a2   0000     nop                      	nop
0021a4   0000     nop                      	nop
0021a6   0000     nop                      	nop
0021a8   0000     nop                      	nop
0021aa   0000     nop                      	nop
0021ac   0000     nop                      	nop
0021ae   0000     nop                      	nop
0021b0   0000     nop                      	nop
0021b2   0000     nop                      	nop
0021b4   0000     nop                      	nop
0021b6   0000     nop                      	nop
0021b8   0000     nop                      	nop
0021ba   0000     nop                      	nop
0021bc   0000     nop                      	nop
0021be   0000     nop                      	nop
0021c0   0000     nop                      	nop
0021c2   0000     nop                      	nop
0021c4   0000     nop                      	nop
0021c6   0000     nop                      	nop
0021c8   0000     nop                      	nop
0021ca   0000     nop                      	nop
0021cc   0000     nop                      	nop
0021ce   0000     nop                      	nop
0021d0   0000     nop                      	nop
0021d2   0000     nop                      	nop
0021d4   0000     nop                      	nop
0021d6   0000     nop                      	nop
0021d8   0000     nop                      	nop
0021da   0000     nop                      	nop
0021dc   0000     nop                      	nop
0021de   0000     nop                      	nop
0021e0   0000     nop                      	nop
0021e2   0000     nop                      	nop
0021e4   0000     nop                      	nop
0021e6   0000     nop                      	nop
0021e8   0000     nop                      	nop
0021ea   0000     nop                      	nop
0021ec   0000     nop                      	nop
0021ee   0000     nop                      	nop
0021f0   0000     nop                      	nop
0021f2   0000     nop                      	nop
0021f4   0000     nop                      	nop
0021f6   0000     nop                      	nop
0021f8   0000     nop                      	nop
0021fa   0000     nop                      	nop
0021fc   0000     nop                      	nop
0021fe   0000     nop                      	nop
002200   0000     nop                      	nop
002202   0000     nop                      	nop
002204   0000     nop                      	nop
002206   0000     nop                      	nop
002208   0000     nop                      	nop
00220a   0000     nop                      	nop
00220c   0000     nop                      	nop
00220e   0000     nop                      	nop
002210   0000     nop                      	nop
002212   0000     nop                      	nop
002214   0000     nop                      	nop
002216   0000     nop                      	nop
002218   0000     nop                      	nop
00221a   0000     nop                      	nop
00221c   0000     nop                      	nop
00221e   0000     nop                      	nop
002220   0000     nop                      	nop
002222   0000     nop                      	nop
002224   0000     nop                      	nop
002226   0000     nop                      	nop
002228   0000     nop                      	nop
00222a   0000     nop                      	nop
00222c   0000     nop                      	nop
00222e   0000     nop                      	nop
002230   0000     nop                      	nop
002232   0000     nop                      	nop
002234   0000     nop                      	nop
002236   0000     nop                      	nop
002238   0000     nop                      	nop
00223a   0000     nop                      	nop
00223c   0000     nop                      	nop
00223e   0000     nop                      	nop
002240   0000     nop                      	nop
002242   0000     nop                      	nop
002244   0000     nop                      	nop
002246   0000     nop                      	nop
002248   0000     nop                      	nop
00224a   0000     nop                      	nop
00224c   0000     nop                      	nop
00224e   0000     nop                      	nop
002250   0000     nop                      	nop
002252   0000     nop                      	nop
002254   0000     nop                      	nop
002256   0000     nop                      	nop
002258   0000     nop                      	nop
00225a   0000     nop                      	nop
00225c   0000     nop                      	nop
00225e   0000     nop                      	nop
002260   0000     nop                      	nop
002262   0000     nop                      	nop
002264   0000     nop                      	nop
002266   0000     nop                      	nop
002268   0000     nop                      	nop
00226a   0000     nop                      	nop
00226c   0000     nop                      	nop
00226e   0000     nop                      	nop
002270   0000     nop                      	nop
002272   0000     nop                      	nop
002274   0000     nop                      	nop
002276   0000     nop                      	nop
002278   0000     nop                      	nop
00227a   0000     nop                      	nop
00227c   0000     nop                      	nop
00227e   0000     nop                      	nop
002280   0000     nop                      	nop
002282   0000     nop                      	nop
002284   0000     nop                      	nop
002286   0000     nop                      	nop
002288   0000     nop                      	nop
00228a   0000     nop                      	nop
00228c   0000     nop                      	nop
                                           	
                                           ;	.line	4039; meter_logger.c	PWM_PIN = 1;
00228e   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
002290   0000     nop                      	nop
002292   0000     nop                      	nop
002294   0000     nop                      	nop
002296   0000     nop                      	nop
002298   0000     nop                      	nop
00229a   0000     nop                      	nop
00229c   0000     nop                      	nop
00229e   0000     nop                      	nop
0022a0   0000     nop                      	nop
0022a2   0000     nop                      	nop
0022a4   0000     nop                      	nop
0022a6   0000     nop                      	nop
0022a8   0000     nop                      	nop
0022aa   0000     nop                      	nop
0022ac   0000     nop                      	nop
0022ae   0000     nop                      	nop
0022b0   0000     nop                      	nop
0022b2   0000     nop                      	nop
0022b4   0000     nop                      	nop
0022b6   0000     nop                      	nop
0022b8   0000     nop                      	nop
0022ba   0000     nop                      	nop
0022bc   0000     nop                      	nop
0022be   0000     nop                      	nop
0022c0   0000     nop                      	nop
0022c2   0000     nop                      	nop
0022c4   0000     nop                      	nop
0022c6   0000     nop                      	nop
0022c8   0000     nop                      	nop
0022ca   0000     nop                      	nop
0022cc   0000     nop                      	nop
0022ce   0000     nop                      	nop
0022d0   0000     nop                      	nop
0022d2   0000     nop                      	nop
0022d4   0000     nop                      	nop
0022d6   0000     nop                      	nop
0022d8   0000     nop                      	nop
0022da   0000     nop                      	nop
0022dc   0000     nop                      	nop
0022de   0000     nop                      	nop
0022e0   0000     nop                      	nop
0022e2   0000     nop                      	nop
0022e4   0000     nop                      	nop
0022e6   0000     nop                      	nop
0022e8   0000     nop                      	nop
0022ea   0000     nop                      	nop
0022ec   0000     nop                      	nop
0022ee   0000     nop                      	nop
0022f0   0000     nop                      	nop
0022f2   0000     nop                      	nop
0022f4   0000     nop                      	nop
0022f6   0000     nop                      	nop
0022f8   0000     nop                      	nop
0022fa   0000     nop                      	nop
0022fc   0000     nop                      	nop
0022fe   0000     nop                      	nop
002300   0000     nop                      	nop
002302   0000     nop                      	nop
002304   0000     nop                      	nop
002306   0000     nop                      	nop
002308   0000     nop                      	nop
00230a   0000     nop                      	nop
00230c   0000     nop                      	nop
00230e   0000     nop                      	nop
002310   0000     nop                      	nop
002312   0000     nop                      	nop
002314   0000     nop                      	nop
002316   0000     nop                      	nop
002318   0000     nop                      	nop
00231a   0000     nop                      	nop
00231c   0000     nop                      	nop
00231e   0000     nop                      	nop
002320   0000     nop                      	nop
002322   0000     nop                      	nop
002324   0000     nop                      	nop
002326   0000     nop                      	nop
002328   0000     nop                      	nop
00232a   0000     nop                      	nop
00232c   0000     nop                      	nop
00232e   0000     nop                      	nop
002330   0000     nop                      	nop
002332   0000     nop                      	nop
002334   0000     nop                      	nop
002336   0000     nop                      	nop
002338   0000     nop                      	nop
00233a   0000     nop                      	nop
00233c   0000     nop                      	nop
00233e   0000     nop                      	nop
002340   0000     nop                      	nop
002342   0000     nop                      	nop
002344   0000     nop                      	nop
002346   0000     nop                      	nop
002348   0000     nop                      	nop
00234a   0000     nop                      	nop
00234c   0000     nop                      	nop
00234e   0000     nop                      	nop
002350   0000     nop                      	nop
002352   0000     nop                      	nop
002354   0000     nop                      	nop
002356   0000     nop                      	nop
002358   0000     nop                      	nop
00235a   0000     nop                      	nop
00235c   0000     nop                      	nop
00235e   0000     nop                      	nop
002360   0000     nop                      	nop
002362   0000     nop                      	nop
002364   0000     nop                      	nop
002366   0000     nop                      	nop
002368   0000     nop                      	nop
00236a   0000     nop                      	nop
00236c   0000     nop                      	nop
00236e   0000     nop                      	nop
002370   0000     nop                      	nop
002372   0000     nop                      	nop
002374   0000     nop                      	nop
002376   0000     nop                      	nop
002378   0000     nop                      	nop
00237a   0000     nop                      	nop
00237c   0000     nop                      	nop
00237e   0000     nop                      	nop
002380   0000     nop                      	nop
002382   0000     nop                      	nop
002384   0000     nop                      	nop
002386   0000     nop                      	nop
002388   0000     nop                      	nop
00238a   0000     nop                      	nop
00238c   0000     nop                      	nop
00238e   0000     nop                      	nop
002390   0000     nop                      	nop
002392   0000     nop                      	nop
002394   0000     nop                      	nop
002396   0000     nop                      	nop
002398   0000     nop                      	nop
00239a   0000     nop                      	nop
00239c   0000     nop                      	nop
00239e   0000     nop                      	nop
0023a0   0000     nop                      	nop
0023a2   0000     nop                      	nop
0023a4   0000     nop                      	nop
0023a6   0000     nop                      	nop
0023a8   0000     nop                      	nop
0023aa   0000     nop                      	nop
0023ac   0000     nop                      	nop
0023ae   0000     nop                      	nop
0023b0   0000     nop                      	nop
0023b2   0000     nop                      	nop
0023b4   0000     nop                      	nop
0023b6   0000     nop                      	nop
0023b8   0000     nop                      	nop
0023ba   0000     nop                      	nop
0023bc   0000     nop                      	nop
0023be   0000     nop                      	nop
0023c0   0000     nop                      	nop
0023c2   0000     nop                      	nop
0023c4   0000     nop                      	nop
0023c6   0000     nop                      	nop
0023c8   0000     nop                      	nop
0023ca   0000     nop                      	nop
0023cc   0000     nop                      	nop
0023ce   0000     nop                      	nop
0023d0   0000     nop                      	nop
0023d2   0000     nop                      	nop
0023d4   0000     nop                      	nop
0023d6   0000     nop                      	nop
0023d8   0000     nop                      	nop
0023da   0000     nop                      	nop
0023dc   0000     nop                      	nop
0023de   0000     nop                      	nop
0023e0   0000     nop                      	nop
0023e2   0000     nop                      	nop
0023e4   0000     nop                      	nop
0023e6   0000     nop                      	nop
0023e8   0000     nop                      	nop
0023ea   0000     nop                      	nop
0023ec   0000     nop                      	nop
0023ee   0000     nop                      	nop
0023f0   0000     nop                      	nop
0023f2   0000     nop                      	nop
0023f4   0000     nop                      	nop
0023f6   0000     nop                      	nop
0023f8   0000     nop                      	nop
0023fa   0000     nop                      	nop
0023fc   0000     nop                      	nop
0023fe   0000     nop                      	nop
002400   0000     nop                      	nop
002402   0000     nop                      	nop
002404   0000     nop                      	nop
002406   0000     nop                      	nop
002408   0000     nop                      	nop
00240a   0000     nop                      	nop
00240c   0000     nop                      	nop
00240e   0000     nop                      	nop
002410   0000     nop                      	nop
002412   0000     nop                      	nop
002414   0000     nop                      	nop
002416   0000     nop                      	nop
002418   0000     nop                      	nop
00241a   0000     nop                      	nop
00241c   0000     nop                      	nop
00241e   0000     nop                      	nop
002420   0000     nop                      	nop
002422   0000     nop                      	nop
002424   0000     nop                      	nop
002426   0000     nop                      	nop
                                           	
                                           ;	.line	4246; meter_logger.c	PWM_PIN = 0;
002428   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
00242a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00242c   ffd9
00242e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__send_fsk_high	code
                                           _send_fsk_high:
                                           ;	.line	1274; meter_logger.c	void send_fsk_high(void) {
000d2a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000d2c   ffe5
000d2e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000d30   ffd9
                                           ;	.line	1275; meter_logger.c	PWM_PIN = 1;
000d32   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
000d34   0000     nop                      	nop
000d36   0000     nop                      	nop
000d38   0000     nop                      	nop
000d3a   0000     nop                      	nop
000d3c   0000     nop                      	nop
000d3e   0000     nop                      	nop
000d40   0000     nop                      	nop
000d42   0000     nop                      	nop
000d44   0000     nop                      	nop
000d46   0000     nop                      	nop
000d48   0000     nop                      	nop
000d4a   0000     nop                      	nop
000d4c   0000     nop                      	nop
000d4e   0000     nop                      	nop
000d50   0000     nop                      	nop
000d52   0000     nop                      	nop
000d54   0000     nop                      	nop
000d56   0000     nop                      	nop
000d58   0000     nop                      	nop
000d5a   0000     nop                      	nop
000d5c   0000     nop                      	nop
000d5e   0000     nop                      	nop
000d60   0000     nop                      	nop
000d62   0000     nop                      	nop
000d64   0000     nop                      	nop
000d66   0000     nop                      	nop
000d68   0000     nop                      	nop
000d6a   0000     nop                      	nop
000d6c   0000     nop                      	nop
000d6e   0000     nop                      	nop
000d70   0000     nop                      	nop
000d72   0000     nop                      	nop
000d74   0000     nop                      	nop
000d76   0000     nop                      	nop
000d78   0000     nop                      	nop
000d7a   0000     nop                      	nop
000d7c   0000     nop                      	nop
000d7e   0000     nop                      	nop
000d80   0000     nop                      	nop
000d82   0000     nop                      	nop
000d84   0000     nop                      	nop
000d86   0000     nop                      	nop
000d88   0000     nop                      	nop
000d8a   0000     nop                      	nop
000d8c   0000     nop                      	nop
000d8e   0000     nop                      	nop
000d90   0000     nop                      	nop
000d92   0000     nop                      	nop
000d94   0000     nop                      	nop
000d96   0000     nop                      	nop
000d98   0000     nop                      	nop
000d9a   0000     nop                      	nop
000d9c   0000     nop                      	nop
000d9e   0000     nop                      	nop
000da0   0000     nop                      	nop
000da2   0000     nop                      	nop
000da4   0000     nop                      	nop
000da6   0000     nop                      	nop
000da8   0000     nop                      	nop
000daa   0000     nop                      	nop
000dac   0000     nop                      	nop
000dae   0000     nop                      	nop
000db0   0000     nop                      	nop
000db2   0000     nop                      	nop
000db4   0000     nop                      	nop
000db6   0000     nop                      	nop
000db8   0000     nop                      	nop
000dba   0000     nop                      	nop
000dbc   0000     nop                      	nop
000dbe   0000     nop                      	nop
000dc0   0000     nop                      	nop
000dc2   0000     nop                      	nop
000dc4   0000     nop                      	nop
000dc6   0000     nop                      	nop
000dc8   0000     nop                      	nop
000dca   0000     nop                      	nop
000dcc   0000     nop                      	nop
000dce   0000     nop                      	nop
000dd0   0000     nop                      	nop
000dd2   0000     nop                      	nop
000dd4   0000     nop                      	nop
000dd6   0000     nop                      	nop
000dd8   0000     nop                      	nop
000dda   0000     nop                      	nop
000ddc   0000     nop                      	nop
000dde   0000     nop                      	nop
000de0   0000     nop                      	nop
000de2   0000     nop                      	nop
000de4   0000     nop                      	nop
000de6   0000     nop                      	nop
000de8   0000     nop                      	nop
000dea   0000     nop                      	nop
000dec   0000     nop                      	nop
000dee   0000     nop                      	nop
000df0   0000     nop                      	nop
000df2   0000     nop                      	nop
000df4   0000     nop                      	nop
000df6   0000     nop                      	nop
000df8   0000     nop                      	nop
000dfa   0000     nop                      	nop
000dfc   0000     nop                      	nop
000dfe   0000     nop                      	nop
000e00   0000     nop                      	nop
000e02   0000     nop                      	nop
000e04   0000     nop                      	nop
000e06   0000     nop                      	nop
000e08   0000     nop                      	nop
000e0a   0000     nop                      	nop
000e0c   0000     nop                      	nop
000e0e   0000     nop                      	nop
000e10   0000     nop                      	nop
000e12   0000     nop                      	nop
000e14   0000     nop                      	nop
000e16   0000     nop                      	nop
000e18   0000     nop                      	nop
000e1a   0000     nop                      	nop
000e1c   0000     nop                      	nop
000e1e   0000     nop                      	nop
000e20   0000     nop                      	nop
000e22   0000     nop                      	nop
000e24   0000     nop                      	nop
000e26   0000     nop                      	nop
000e28   0000     nop                      	nop
000e2a   0000     nop                      	nop
000e2c   0000     nop                      	nop
000e2e   0000     nop                      	nop
000e30   0000     nop                      	nop
000e32   0000     nop                      	nop
000e34   0000     nop                      	nop
000e36   0000     nop                      	nop
000e38   0000     nop                      	nop
000e3a   0000     nop                      	nop
000e3c   0000     nop                      	nop
000e3e   0000     nop                      	nop
000e40   0000     nop                      	nop
                                           	
                                           ;	.line	1413; meter_logger.c	PWM_PIN = 0;
000e42   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
000e44   0000     nop                      	nop
000e46   0000     nop                      	nop
000e48   0000     nop                      	nop
000e4a   0000     nop                      	nop
000e4c   0000     nop                      	nop
000e4e   0000     nop                      	nop
000e50   0000     nop                      	nop
000e52   0000     nop                      	nop
000e54   0000     nop                      	nop
000e56   0000     nop                      	nop
000e58   0000     nop                      	nop
000e5a   0000     nop                      	nop
000e5c   0000     nop                      	nop
000e5e   0000     nop                      	nop
000e60   0000     nop                      	nop
000e62   0000     nop                      	nop
000e64   0000     nop                      	nop
000e66   0000     nop                      	nop
000e68   0000     nop                      	nop
000e6a   0000     nop                      	nop
000e6c   0000     nop                      	nop
000e6e   0000     nop                      	nop
000e70   0000     nop                      	nop
000e72   0000     nop                      	nop
000e74   0000     nop                      	nop
000e76   0000     nop                      	nop
000e78   0000     nop                      	nop
000e7a   0000     nop                      	nop
000e7c   0000     nop                      	nop
000e7e   0000     nop                      	nop
000e80   0000     nop                      	nop
000e82   0000     nop                      	nop
000e84   0000     nop                      	nop
000e86   0000     nop                      	nop
000e88   0000     nop                      	nop
000e8a   0000     nop                      	nop
000e8c   0000     nop                      	nop
000e8e   0000     nop                      	nop
000e90   0000     nop                      	nop
000e92   0000     nop                      	nop
000e94   0000     nop                      	nop
000e96   0000     nop                      	nop
000e98   0000     nop                      	nop
000e9a   0000     nop                      	nop
000e9c   0000     nop                      	nop
000e9e   0000     nop                      	nop
000ea0   0000     nop                      	nop
000ea2   0000     nop                      	nop
000ea4   0000     nop                      	nop
000ea6   0000     nop                      	nop
000ea8   0000     nop                      	nop
000eaa   0000     nop                      	nop
000eac   0000     nop                      	nop
000eae   0000     nop                      	nop
000eb0   0000     nop                      	nop
000eb2   0000     nop                      	nop
000eb4   0000     nop                      	nop
000eb6   0000     nop                      	nop
000eb8   0000     nop                      	nop
000eba   0000     nop                      	nop
000ebc   0000     nop                      	nop
000ebe   0000     nop                      	nop
000ec0   0000     nop                      	nop
000ec2   0000     nop                      	nop
000ec4   0000     nop                      	nop
000ec6   0000     nop                      	nop
000ec8   0000     nop                      	nop
000eca   0000     nop                      	nop
000ecc   0000     nop                      	nop
000ece   0000     nop                      	nop
000ed0   0000     nop                      	nop
000ed2   0000     nop                      	nop
000ed4   0000     nop                      	nop
000ed6   0000     nop                      	nop
000ed8   0000     nop                      	nop
000eda   0000     nop                      	nop
000edc   0000     nop                      	nop
000ede   0000     nop                      	nop
000ee0   0000     nop                      	nop
000ee2   0000     nop                      	nop
000ee4   0000     nop                      	nop
000ee6   0000     nop                      	nop
000ee8   0000     nop                      	nop
000eea   0000     nop                      	nop
000eec   0000     nop                      	nop
000eee   0000     nop                      	nop
000ef0   0000     nop                      	nop
000ef2   0000     nop                      	nop
000ef4   0000     nop                      	nop
000ef6   0000     nop                      	nop
000ef8   0000     nop                      	nop
000efa   0000     nop                      	nop
000efc   0000     nop                      	nop
000efe   0000     nop                      	nop
000f00   0000     nop                      	nop
000f02   0000     nop                      	nop
000f04   0000     nop                      	nop
000f06   0000     nop                      	nop
000f08   0000     nop                      	nop
000f0a   0000     nop                      	nop
000f0c   0000     nop                      	nop
000f0e   0000     nop                      	nop
000f10   0000     nop                      	nop
000f12   0000     nop                      	nop
000f14   0000     nop                      	nop
000f16   0000     nop                      	nop
000f18   0000     nop                      	nop
000f1a   0000     nop                      	nop
000f1c   0000     nop                      	nop
000f1e   0000     nop                      	nop
000f20   0000     nop                      	nop
000f22   0000     nop                      	nop
000f24   0000     nop                      	nop
000f26   0000     nop                      	nop
000f28   0000     nop                      	nop
000f2a   0000     nop                      	nop
000f2c   0000     nop                      	nop
000f2e   0000     nop                      	nop
000f30   0000     nop                      	nop
000f32   0000     nop                      	nop
000f34   0000     nop                      	nop
000f36   0000     nop                      	nop
000f38   0000     nop                      	nop
000f3a   0000     nop                      	nop
000f3c   0000     nop                      	nop
000f3e   0000     nop                      	nop
000f40   0000     nop                      	nop
000f42   0000     nop                      	nop
000f44   0000     nop                      	nop
000f46   0000     nop                      	nop
000f48   0000     nop                      	nop
000f4a   0000     nop                      	nop
000f4c   0000     nop                      	nop
000f4e   0000     nop                      	nop
000f50   0000     nop                      	nop
                                           	
                                           ;	.line	1551; meter_logger.c	PWM_PIN = 1;
000f52   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
000f54   0000     nop                      	nop
000f56   0000     nop                      	nop
000f58   0000     nop                      	nop
000f5a   0000     nop                      	nop
000f5c   0000     nop                      	nop
000f5e   0000     nop                      	nop
000f60   0000     nop                      	nop
000f62   0000     nop                      	nop
000f64   0000     nop                      	nop
000f66   0000     nop                      	nop
000f68   0000     nop                      	nop
000f6a   0000     nop                      	nop
000f6c   0000     nop                      	nop
000f6e   0000     nop                      	nop
000f70   0000     nop                      	nop
000f72   0000     nop                      	nop
000f74   0000     nop                      	nop
000f76   0000     nop                      	nop
000f78   0000     nop                      	nop
000f7a   0000     nop                      	nop
000f7c   0000     nop                      	nop
000f7e   0000     nop                      	nop
000f80   0000     nop                      	nop
000f82   0000     nop                      	nop
000f84   0000     nop                      	nop
000f86   0000     nop                      	nop
000f88   0000     nop                      	nop
000f8a   0000     nop                      	nop
000f8c   0000     nop                      	nop
000f8e   0000     nop                      	nop
000f90   0000     nop                      	nop
000f92   0000     nop                      	nop
000f94   0000     nop                      	nop
000f96   0000     nop                      	nop
000f98   0000     nop                      	nop
000f9a   0000     nop                      	nop
000f9c   0000     nop                      	nop
000f9e   0000     nop                      	nop
000fa0   0000     nop                      	nop
000fa2   0000     nop                      	nop
000fa4   0000     nop                      	nop
000fa6   0000     nop                      	nop
000fa8   0000     nop                      	nop
000faa   0000     nop                      	nop
000fac   0000     nop                      	nop
000fae   0000     nop                      	nop
000fb0   0000     nop                      	nop
000fb2   0000     nop                      	nop
000fb4   0000     nop                      	nop
000fb6   0000     nop                      	nop
000fb8   0000     nop                      	nop
000fba   0000     nop                      	nop
000fbc   0000     nop                      	nop
000fbe   0000     nop                      	nop
000fc0   0000     nop                      	nop
000fc2   0000     nop                      	nop
000fc4   0000     nop                      	nop
000fc6   0000     nop                      	nop
000fc8   0000     nop                      	nop
000fca   0000     nop                      	nop
000fcc   0000     nop                      	nop
000fce   0000     nop                      	nop
000fd0   0000     nop                      	nop
000fd2   0000     nop                      	nop
000fd4   0000     nop                      	nop
000fd6   0000     nop                      	nop
000fd8   0000     nop                      	nop
000fda   0000     nop                      	nop
000fdc   0000     nop                      	nop
000fde   0000     nop                      	nop
000fe0   0000     nop                      	nop
000fe2   0000     nop                      	nop
000fe4   0000     nop                      	nop
000fe6   0000     nop                      	nop
000fe8   0000     nop                      	nop
000fea   0000     nop                      	nop
000fec   0000     nop                      	nop
000fee   0000     nop                      	nop
000ff0   0000     nop                      	nop
000ff2   0000     nop                      	nop
000ff4   0000     nop                      	nop
000ff6   0000     nop                      	nop
000ff8   0000     nop                      	nop
000ffa   0000     nop                      	nop
000ffc   0000     nop                      	nop
000ffe   0000     nop                      	nop
001000   0000     nop                      	nop
001002   0000     nop                      	nop
001004   0000     nop                      	nop
001006   0000     nop                      	nop
001008   0000     nop                      	nop
00100a   0000     nop                      	nop
00100c   0000     nop                      	nop
00100e   0000     nop                      	nop
001010   0000     nop                      	nop
001012   0000     nop                      	nop
001014   0000     nop                      	nop
001016   0000     nop                      	nop
001018   0000     nop                      	nop
00101a   0000     nop                      	nop
00101c   0000     nop                      	nop
00101e   0000     nop                      	nop
001020   0000     nop                      	nop
001022   0000     nop                      	nop
001024   0000     nop                      	nop
001026   0000     nop                      	nop
001028   0000     nop                      	nop
00102a   0000     nop                      	nop
00102c   0000     nop                      	nop
00102e   0000     nop                      	nop
001030   0000     nop                      	nop
001032   0000     nop                      	nop
001034   0000     nop                      	nop
001036   0000     nop                      	nop
001038   0000     nop                      	nop
00103a   0000     nop                      	nop
00103c   0000     nop                      	nop
00103e   0000     nop                      	nop
001040   0000     nop                      	nop
001042   0000     nop                      	nop
001044   0000     nop                      	nop
001046   0000     nop                      	nop
001048   0000     nop                      	nop
00104a   0000     nop                      	nop
00104c   0000     nop                      	nop
00104e   0000     nop                      	nop
001050   0000     nop                      	nop
001052   0000     nop                      	nop
001054   0000     nop                      	nop
001056   0000     nop                      	nop
001058   0000     nop                      	nop
00105a   0000     nop                      	nop
00105c   0000     nop                      	nop
00105e   0000     nop                      	nop
001060   0000     nop                      	nop
                                           	
                                           ;	.line	1689; meter_logger.c	PWM_PIN = 0;
001062   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001064   0000     nop                      	nop
001066   0000     nop                      	nop
001068   0000     nop                      	nop
00106a   0000     nop                      	nop
00106c   0000     nop                      	nop
00106e   0000     nop                      	nop
001070   0000     nop                      	nop
001072   0000     nop                      	nop
001074   0000     nop                      	nop
001076   0000     nop                      	nop
001078   0000     nop                      	nop
00107a   0000     nop                      	nop
00107c   0000     nop                      	nop
00107e   0000     nop                      	nop
001080   0000     nop                      	nop
001082   0000     nop                      	nop
001084   0000     nop                      	nop
001086   0000     nop                      	nop
001088   0000     nop                      	nop
00108a   0000     nop                      	nop
00108c   0000     nop                      	nop
00108e   0000     nop                      	nop
001090   0000     nop                      	nop
001092   0000     nop                      	nop
001094   0000     nop                      	nop
001096   0000     nop                      	nop
001098   0000     nop                      	nop
00109a   0000     nop                      	nop
00109c   0000     nop                      	nop
00109e   0000     nop                      	nop
0010a0   0000     nop                      	nop
0010a2   0000     nop                      	nop
0010a4   0000     nop                      	nop
0010a6   0000     nop                      	nop
0010a8   0000     nop                      	nop
0010aa   0000     nop                      	nop
0010ac   0000     nop                      	nop
0010ae   0000     nop                      	nop
0010b0   0000     nop                      	nop
0010b2   0000     nop                      	nop
0010b4   0000     nop                      	nop
0010b6   0000     nop                      	nop
0010b8   0000     nop                      	nop
0010ba   0000     nop                      	nop
0010bc   0000     nop                      	nop
0010be   0000     nop                      	nop
0010c0   0000     nop                      	nop
0010c2   0000     nop                      	nop
0010c4   0000     nop                      	nop
0010c6   0000     nop                      	nop
0010c8   0000     nop                      	nop
0010ca   0000     nop                      	nop
0010cc   0000     nop                      	nop
0010ce   0000     nop                      	nop
0010d0   0000     nop                      	nop
0010d2   0000     nop                      	nop
0010d4   0000     nop                      	nop
0010d6   0000     nop                      	nop
0010d8   0000     nop                      	nop
0010da   0000     nop                      	nop
0010dc   0000     nop                      	nop
0010de   0000     nop                      	nop
0010e0   0000     nop                      	nop
0010e2   0000     nop                      	nop
0010e4   0000     nop                      	nop
0010e6   0000     nop                      	nop
0010e8   0000     nop                      	nop
0010ea   0000     nop                      	nop
0010ec   0000     nop                      	nop
0010ee   0000     nop                      	nop
0010f0   0000     nop                      	nop
0010f2   0000     nop                      	nop
0010f4   0000     nop                      	nop
0010f6   0000     nop                      	nop
0010f8   0000     nop                      	nop
0010fa   0000     nop                      	nop
0010fc   0000     nop                      	nop
0010fe   0000     nop                      	nop
001100   0000     nop                      	nop
001102   0000     nop                      	nop
001104   0000     nop                      	nop
001106   0000     nop                      	nop
001108   0000     nop                      	nop
00110a   0000     nop                      	nop
00110c   0000     nop                      	nop
00110e   0000     nop                      	nop
001110   0000     nop                      	nop
001112   0000     nop                      	nop
001114   0000     nop                      	nop
001116   0000     nop                      	nop
001118   0000     nop                      	nop
00111a   0000     nop                      	nop
00111c   0000     nop                      	nop
00111e   0000     nop                      	nop
001120   0000     nop                      	nop
001122   0000     nop                      	nop
001124   0000     nop                      	nop
001126   0000     nop                      	nop
001128   0000     nop                      	nop
00112a   0000     nop                      	nop
00112c   0000     nop                      	nop
00112e   0000     nop                      	nop
001130   0000     nop                      	nop
001132   0000     nop                      	nop
001134   0000     nop                      	nop
001136   0000     nop                      	nop
001138   0000     nop                      	nop
00113a   0000     nop                      	nop
00113c   0000     nop                      	nop
00113e   0000     nop                      	nop
001140   0000     nop                      	nop
001142   0000     nop                      	nop
001144   0000     nop                      	nop
001146   0000     nop                      	nop
001148   0000     nop                      	nop
00114a   0000     nop                      	nop
00114c   0000     nop                      	nop
00114e   0000     nop                      	nop
001150   0000     nop                      	nop
001152   0000     nop                      	nop
001154   0000     nop                      	nop
001156   0000     nop                      	nop
001158   0000     nop                      	nop
00115a   0000     nop                      	nop
00115c   0000     nop                      	nop
00115e   0000     nop                      	nop
001160   0000     nop                      	nop
001162   0000     nop                      	nop
001164   0000     nop                      	nop
001166   0000     nop                      	nop
001168   0000     nop                      	nop
00116a   0000     nop                      	nop
00116c   0000     nop                      	nop
00116e   0000     nop                      	nop
001170   0000     nop                      	nop
                                           	
                                           ;	.line	1827; meter_logger.c	PWM_PIN = 1;
001172   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001174   0000     nop                      	nop
001176   0000     nop                      	nop
001178   0000     nop                      	nop
00117a   0000     nop                      	nop
00117c   0000     nop                      	nop
00117e   0000     nop                      	nop
001180   0000     nop                      	nop
001182   0000     nop                      	nop
001184   0000     nop                      	nop
001186   0000     nop                      	nop
001188   0000     nop                      	nop
00118a   0000     nop                      	nop
00118c   0000     nop                      	nop
00118e   0000     nop                      	nop
001190   0000     nop                      	nop
001192   0000     nop                      	nop
001194   0000     nop                      	nop
001196   0000     nop                      	nop
001198   0000     nop                      	nop
00119a   0000     nop                      	nop
00119c   0000     nop                      	nop
00119e   0000     nop                      	nop
0011a0   0000     nop                      	nop
0011a2   0000     nop                      	nop
0011a4   0000     nop                      	nop
0011a6   0000     nop                      	nop
0011a8   0000     nop                      	nop
0011aa   0000     nop                      	nop
0011ac   0000     nop                      	nop
0011ae   0000     nop                      	nop
0011b0   0000     nop                      	nop
0011b2   0000     nop                      	nop
0011b4   0000     nop                      	nop
0011b6   0000     nop                      	nop
0011b8   0000     nop                      	nop
0011ba   0000     nop                      	nop
0011bc   0000     nop                      	nop
0011be   0000     nop                      	nop
0011c0   0000     nop                      	nop
0011c2   0000     nop                      	nop
0011c4   0000     nop                      	nop
0011c6   0000     nop                      	nop
0011c8   0000     nop                      	nop
0011ca   0000     nop                      	nop
0011cc   0000     nop                      	nop
0011ce   0000     nop                      	nop
0011d0   0000     nop                      	nop
0011d2   0000     nop                      	nop
0011d4   0000     nop                      	nop
0011d6   0000     nop                      	nop
0011d8   0000     nop                      	nop
0011da   0000     nop                      	nop
0011dc   0000     nop                      	nop
0011de   0000     nop                      	nop
0011e0   0000     nop                      	nop
0011e2   0000     nop                      	nop
0011e4   0000     nop                      	nop
0011e6   0000     nop                      	nop
0011e8   0000     nop                      	nop
0011ea   0000     nop                      	nop
0011ec   0000     nop                      	nop
0011ee   0000     nop                      	nop
0011f0   0000     nop                      	nop
0011f2   0000     nop                      	nop
0011f4   0000     nop                      	nop
0011f6   0000     nop                      	nop
0011f8   0000     nop                      	nop
0011fa   0000     nop                      	nop
0011fc   0000     nop                      	nop
0011fe   0000     nop                      	nop
001200   0000     nop                      	nop
001202   0000     nop                      	nop
001204   0000     nop                      	nop
001206   0000     nop                      	nop
001208   0000     nop                      	nop
00120a   0000     nop                      	nop
00120c   0000     nop                      	nop
00120e   0000     nop                      	nop
001210   0000     nop                      	nop
001212   0000     nop                      	nop
001214   0000     nop                      	nop
001216   0000     nop                      	nop
001218   0000     nop                      	nop
00121a   0000     nop                      	nop
00121c   0000     nop                      	nop
00121e   0000     nop                      	nop
001220   0000     nop                      	nop
001222   0000     nop                      	nop
001224   0000     nop                      	nop
001226   0000     nop                      	nop
001228   0000     nop                      	nop
00122a   0000     nop                      	nop
00122c   0000     nop                      	nop
00122e   0000     nop                      	nop
001230   0000     nop                      	nop
001232   0000     nop                      	nop
001234   0000     nop                      	nop
001236   0000     nop                      	nop
001238   0000     nop                      	nop
00123a   0000     nop                      	nop
00123c   0000     nop                      	nop
00123e   0000     nop                      	nop
001240   0000     nop                      	nop
001242   0000     nop                      	nop
001244   0000     nop                      	nop
001246   0000     nop                      	nop
001248   0000     nop                      	nop
00124a   0000     nop                      	nop
00124c   0000     nop                      	nop
00124e   0000     nop                      	nop
001250   0000     nop                      	nop
001252   0000     nop                      	nop
001254   0000     nop                      	nop
001256   0000     nop                      	nop
001258   0000     nop                      	nop
00125a   0000     nop                      	nop
00125c   0000     nop                      	nop
00125e   0000     nop                      	nop
001260   0000     nop                      	nop
001262   0000     nop                      	nop
001264   0000     nop                      	nop
001266   0000     nop                      	nop
001268   0000     nop                      	nop
00126a   0000     nop                      	nop
00126c   0000     nop                      	nop
00126e   0000     nop                      	nop
001270   0000     nop                      	nop
001272   0000     nop                      	nop
001274   0000     nop                      	nop
001276   0000     nop                      	nop
001278   0000     nop                      	nop
00127a   0000     nop                      	nop
00127c   0000     nop                      	nop
00127e   0000     nop                      	nop
001280   0000     nop                      	nop
                                           	
                                           ;	.line	1965; meter_logger.c	PWM_PIN = 0;
001282   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001284   0000     nop                      	nop
001286   0000     nop                      	nop
001288   0000     nop                      	nop
00128a   0000     nop                      	nop
00128c   0000     nop                      	nop
00128e   0000     nop                      	nop
001290   0000     nop                      	nop
001292   0000     nop                      	nop
001294   0000     nop                      	nop
001296   0000     nop                      	nop
001298   0000     nop                      	nop
00129a   0000     nop                      	nop
00129c   0000     nop                      	nop
00129e   0000     nop                      	nop
0012a0   0000     nop                      	nop
0012a2   0000     nop                      	nop
0012a4   0000     nop                      	nop
0012a6   0000     nop                      	nop
0012a8   0000     nop                      	nop
0012aa   0000     nop                      	nop
0012ac   0000     nop                      	nop
0012ae   0000     nop                      	nop
0012b0   0000     nop                      	nop
0012b2   0000     nop                      	nop
0012b4   0000     nop                      	nop
0012b6   0000     nop                      	nop
0012b8   0000     nop                      	nop
0012ba   0000     nop                      	nop
0012bc   0000     nop                      	nop
0012be   0000     nop                      	nop
0012c0   0000     nop                      	nop
0012c2   0000     nop                      	nop
0012c4   0000     nop                      	nop
0012c6   0000     nop                      	nop
0012c8   0000     nop                      	nop
0012ca   0000     nop                      	nop
0012cc   0000     nop                      	nop
0012ce   0000     nop                      	nop
0012d0   0000     nop                      	nop
0012d2   0000     nop                      	nop
0012d4   0000     nop                      	nop
0012d6   0000     nop                      	nop
0012d8   0000     nop                      	nop
0012da   0000     nop                      	nop
0012dc   0000     nop                      	nop
0012de   0000     nop                      	nop
0012e0   0000     nop                      	nop
0012e2   0000     nop                      	nop
0012e4   0000     nop                      	nop
0012e6   0000     nop                      	nop
0012e8   0000     nop                      	nop
0012ea   0000     nop                      	nop
0012ec   0000     nop                      	nop
0012ee   0000     nop                      	nop
0012f0   0000     nop                      	nop
0012f2   0000     nop                      	nop
0012f4   0000     nop                      	nop
0012f6   0000     nop                      	nop
0012f8   0000     nop                      	nop
0012fa   0000     nop                      	nop
0012fc   0000     nop                      	nop
0012fe   0000     nop                      	nop
001300   0000     nop                      	nop
001302   0000     nop                      	nop
001304   0000     nop                      	nop
001306   0000     nop                      	nop
001308   0000     nop                      	nop
00130a   0000     nop                      	nop
00130c   0000     nop                      	nop
00130e   0000     nop                      	nop
001310   0000     nop                      	nop
001312   0000     nop                      	nop
001314   0000     nop                      	nop
001316   0000     nop                      	nop
001318   0000     nop                      	nop
00131a   0000     nop                      	nop
00131c   0000     nop                      	nop
00131e   0000     nop                      	nop
001320   0000     nop                      	nop
001322   0000     nop                      	nop
001324   0000     nop                      	nop
001326   0000     nop                      	nop
001328   0000     nop                      	nop
00132a   0000     nop                      	nop
00132c   0000     nop                      	nop
00132e   0000     nop                      	nop
001330   0000     nop                      	nop
001332   0000     nop                      	nop
001334   0000     nop                      	nop
001336   0000     nop                      	nop
001338   0000     nop                      	nop
00133a   0000     nop                      	nop
00133c   0000     nop                      	nop
00133e   0000     nop                      	nop
001340   0000     nop                      	nop
001342   0000     nop                      	nop
001344   0000     nop                      	nop
001346   0000     nop                      	nop
001348   0000     nop                      	nop
00134a   0000     nop                      	nop
00134c   0000     nop                      	nop
00134e   0000     nop                      	nop
001350   0000     nop                      	nop
001352   0000     nop                      	nop
001354   0000     nop                      	nop
001356   0000     nop                      	nop
001358   0000     nop                      	nop
00135a   0000     nop                      	nop
00135c   0000     nop                      	nop
00135e   0000     nop                      	nop
001360   0000     nop                      	nop
001362   0000     nop                      	nop
001364   0000     nop                      	nop
001366   0000     nop                      	nop
001368   0000     nop                      	nop
00136a   0000     nop                      	nop
00136c   0000     nop                      	nop
00136e   0000     nop                      	nop
001370   0000     nop                      	nop
001372   0000     nop                      	nop
001374   0000     nop                      	nop
001376   0000     nop                      	nop
001378   0000     nop                      	nop
00137a   0000     nop                      	nop
00137c   0000     nop                      	nop
00137e   0000     nop                      	nop
001380   0000     nop                      	nop
001382   0000     nop                      	nop
001384   0000     nop                      	nop
001386   0000     nop                      	nop
001388   0000     nop                      	nop
00138a   0000     nop                      	nop
00138c   0000     nop                      	nop
00138e   0000     nop                      	nop
001390   0000     nop                      	nop
                                           	
                                           ;	.line	2103; meter_logger.c	PWM_PIN = 1;
001392   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001394   0000     nop                      	nop
001396   0000     nop                      	nop
001398   0000     nop                      	nop
00139a   0000     nop                      	nop
00139c   0000     nop                      	nop
00139e   0000     nop                      	nop
0013a0   0000     nop                      	nop
0013a2   0000     nop                      	nop
0013a4   0000     nop                      	nop
0013a6   0000     nop                      	nop
0013a8   0000     nop                      	nop
0013aa   0000     nop                      	nop
0013ac   0000     nop                      	nop
0013ae   0000     nop                      	nop
0013b0   0000     nop                      	nop
0013b2   0000     nop                      	nop
0013b4   0000     nop                      	nop
0013b6   0000     nop                      	nop
0013b8   0000     nop                      	nop
0013ba   0000     nop                      	nop
0013bc   0000     nop                      	nop
0013be   0000     nop                      	nop
0013c0   0000     nop                      	nop
0013c2   0000     nop                      	nop
0013c4   0000     nop                      	nop
0013c6   0000     nop                      	nop
0013c8   0000     nop                      	nop
0013ca   0000     nop                      	nop
0013cc   0000     nop                      	nop
0013ce   0000     nop                      	nop
0013d0   0000     nop                      	nop
0013d2   0000     nop                      	nop
0013d4   0000     nop                      	nop
0013d6   0000     nop                      	nop
0013d8   0000     nop                      	nop
0013da   0000     nop                      	nop
0013dc   0000     nop                      	nop
0013de   0000     nop                      	nop
0013e0   0000     nop                      	nop
0013e2   0000     nop                      	nop
0013e4   0000     nop                      	nop
0013e6   0000     nop                      	nop
0013e8   0000     nop                      	nop
0013ea   0000     nop                      	nop
0013ec   0000     nop                      	nop
0013ee   0000     nop                      	nop
0013f0   0000     nop                      	nop
0013f2   0000     nop                      	nop
0013f4   0000     nop                      	nop
0013f6   0000     nop                      	nop
0013f8   0000     nop                      	nop
0013fa   0000     nop                      	nop
0013fc   0000     nop                      	nop
0013fe   0000     nop                      	nop
001400   0000     nop                      	nop
001402   0000     nop                      	nop
001404   0000     nop                      	nop
001406   0000     nop                      	nop
001408   0000     nop                      	nop
00140a   0000     nop                      	nop
00140c   0000     nop                      	nop
00140e   0000     nop                      	nop
001410   0000     nop                      	nop
001412   0000     nop                      	nop
001414   0000     nop                      	nop
001416   0000     nop                      	nop
001418   0000     nop                      	nop
00141a   0000     nop                      	nop
00141c   0000     nop                      	nop
00141e   0000     nop                      	nop
001420   0000     nop                      	nop
001422   0000     nop                      	nop
001424   0000     nop                      	nop
001426   0000     nop                      	nop
001428   0000     nop                      	nop
00142a   0000     nop                      	nop
00142c   0000     nop                      	nop
00142e   0000     nop                      	nop
001430   0000     nop                      	nop
001432   0000     nop                      	nop
001434   0000     nop                      	nop
001436   0000     nop                      	nop
001438   0000     nop                      	nop
00143a   0000     nop                      	nop
00143c   0000     nop                      	nop
00143e   0000     nop                      	nop
001440   0000     nop                      	nop
001442   0000     nop                      	nop
001444   0000     nop                      	nop
001446   0000     nop                      	nop
001448   0000     nop                      	nop
00144a   0000     nop                      	nop
00144c   0000     nop                      	nop
00144e   0000     nop                      	nop
001450   0000     nop                      	nop
001452   0000     nop                      	nop
001454   0000     nop                      	nop
001456   0000     nop                      	nop
001458   0000     nop                      	nop
00145a   0000     nop                      	nop
00145c   0000     nop                      	nop
00145e   0000     nop                      	nop
001460   0000     nop                      	nop
001462   0000     nop                      	nop
001464   0000     nop                      	nop
001466   0000     nop                      	nop
001468   0000     nop                      	nop
00146a   0000     nop                      	nop
00146c   0000     nop                      	nop
00146e   0000     nop                      	nop
001470   0000     nop                      	nop
001472   0000     nop                      	nop
001474   0000     nop                      	nop
001476   0000     nop                      	nop
001478   0000     nop                      	nop
00147a   0000     nop                      	nop
00147c   0000     nop                      	nop
00147e   0000     nop                      	nop
001480   0000     nop                      	nop
001482   0000     nop                      	nop
001484   0000     nop                      	nop
001486   0000     nop                      	nop
001488   0000     nop                      	nop
00148a   0000     nop                      	nop
00148c   0000     nop                      	nop
00148e   0000     nop                      	nop
001490   0000     nop                      	nop
001492   0000     nop                      	nop
001494   0000     nop                      	nop
001496   0000     nop                      	nop
001498   0000     nop                      	nop
00149a   0000     nop                      	nop
00149c   0000     nop                      	nop
00149e   0000     nop                      	nop
0014a0   0000     nop                      	nop
                                           	
                                           ;	.line	2241; meter_logger.c	PWM_PIN = 0;
0014a2   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
0014a4   0000     nop                      	nop
0014a6   0000     nop                      	nop
0014a8   0000     nop                      	nop
0014aa   0000     nop                      	nop
0014ac   0000     nop                      	nop
0014ae   0000     nop                      	nop
0014b0   0000     nop                      	nop
0014b2   0000     nop                      	nop
0014b4   0000     nop                      	nop
0014b6   0000     nop                      	nop
0014b8   0000     nop                      	nop
0014ba   0000     nop                      	nop
0014bc   0000     nop                      	nop
0014be   0000     nop                      	nop
0014c0   0000     nop                      	nop
0014c2   0000     nop                      	nop
0014c4   0000     nop                      	nop
0014c6   0000     nop                      	nop
0014c8   0000     nop                      	nop
0014ca   0000     nop                      	nop
0014cc   0000     nop                      	nop
0014ce   0000     nop                      	nop
0014d0   0000     nop                      	nop
0014d2   0000     nop                      	nop
0014d4   0000     nop                      	nop
0014d6   0000     nop                      	nop
0014d8   0000     nop                      	nop
0014da   0000     nop                      	nop
0014dc   0000     nop                      	nop
0014de   0000     nop                      	nop
0014e0   0000     nop                      	nop
0014e2   0000     nop                      	nop
0014e4   0000     nop                      	nop
0014e6   0000     nop                      	nop
0014e8   0000     nop                      	nop
0014ea   0000     nop                      	nop
0014ec   0000     nop                      	nop
0014ee   0000     nop                      	nop
0014f0   0000     nop                      	nop
0014f2   0000     nop                      	nop
0014f4   0000     nop                      	nop
0014f6   0000     nop                      	nop
0014f8   0000     nop                      	nop
0014fa   0000     nop                      	nop
0014fc   0000     nop                      	nop
0014fe   0000     nop                      	nop
001500   0000     nop                      	nop
001502   0000     nop                      	nop
001504   0000     nop                      	nop
001506   0000     nop                      	nop
001508   0000     nop                      	nop
00150a   0000     nop                      	nop
00150c   0000     nop                      	nop
00150e   0000     nop                      	nop
001510   0000     nop                      	nop
001512   0000     nop                      	nop
001514   0000     nop                      	nop
001516   0000     nop                      	nop
001518   0000     nop                      	nop
00151a   0000     nop                      	nop
00151c   0000     nop                      	nop
00151e   0000     nop                      	nop
001520   0000     nop                      	nop
001522   0000     nop                      	nop
001524   0000     nop                      	nop
001526   0000     nop                      	nop
001528   0000     nop                      	nop
00152a   0000     nop                      	nop
00152c   0000     nop                      	nop
00152e   0000     nop                      	nop
001530   0000     nop                      	nop
001532   0000     nop                      	nop
001534   0000     nop                      	nop
001536   0000     nop                      	nop
001538   0000     nop                      	nop
00153a   0000     nop                      	nop
00153c   0000     nop                      	nop
00153e   0000     nop                      	nop
001540   0000     nop                      	nop
001542   0000     nop                      	nop
001544   0000     nop                      	nop
001546   0000     nop                      	nop
001548   0000     nop                      	nop
00154a   0000     nop                      	nop
00154c   0000     nop                      	nop
00154e   0000     nop                      	nop
001550   0000     nop                      	nop
001552   0000     nop                      	nop
001554   0000     nop                      	nop
001556   0000     nop                      	nop
001558   0000     nop                      	nop
00155a   0000     nop                      	nop
00155c   0000     nop                      	nop
00155e   0000     nop                      	nop
001560   0000     nop                      	nop
001562   0000     nop                      	nop
001564   0000     nop                      	nop
001566   0000     nop                      	nop
001568   0000     nop                      	nop
00156a   0000     nop                      	nop
00156c   0000     nop                      	nop
00156e   0000     nop                      	nop
001570   0000     nop                      	nop
001572   0000     nop                      	nop
001574   0000     nop                      	nop
001576   0000     nop                      	nop
001578   0000     nop                      	nop
00157a   0000     nop                      	nop
00157c   0000     nop                      	nop
00157e   0000     nop                      	nop
001580   0000     nop                      	nop
001582   0000     nop                      	nop
001584   0000     nop                      	nop
001586   0000     nop                      	nop
001588   0000     nop                      	nop
00158a   0000     nop                      	nop
00158c   0000     nop                      	nop
00158e   0000     nop                      	nop
001590   0000     nop                      	nop
001592   0000     nop                      	nop
001594   0000     nop                      	nop
001596   0000     nop                      	nop
001598   0000     nop                      	nop
00159a   0000     nop                      	nop
00159c   0000     nop                      	nop
00159e   0000     nop                      	nop
0015a0   0000     nop                      	nop
0015a2   0000     nop                      	nop
0015a4   0000     nop                      	nop
0015a6   0000     nop                      	nop
0015a8   0000     nop                      	nop
0015aa   0000     nop                      	nop
0015ac   0000     nop                      	nop
0015ae   0000     nop                      	nop
0015b0   0000     nop                      	nop
                                           	
                                           ;	.line	2379; meter_logger.c	PWM_PIN = 1;
0015b2   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
0015b4   0000     nop                      	nop
0015b6   0000     nop                      	nop
0015b8   0000     nop                      	nop
0015ba   0000     nop                      	nop
0015bc   0000     nop                      	nop
0015be   0000     nop                      	nop
0015c0   0000     nop                      	nop
0015c2   0000     nop                      	nop
0015c4   0000     nop                      	nop
0015c6   0000     nop                      	nop
0015c8   0000     nop                      	nop
0015ca   0000     nop                      	nop
0015cc   0000     nop                      	nop
0015ce   0000     nop                      	nop
0015d0   0000     nop                      	nop
0015d2   0000     nop                      	nop
0015d4   0000     nop                      	nop
0015d6   0000     nop                      	nop
0015d8   0000     nop                      	nop
0015da   0000     nop                      	nop
0015dc   0000     nop                      	nop
0015de   0000     nop                      	nop
0015e0   0000     nop                      	nop
0015e2   0000     nop                      	nop
0015e4   0000     nop                      	nop
0015e6   0000     nop                      	nop
0015e8   0000     nop                      	nop
0015ea   0000     nop                      	nop
0015ec   0000     nop                      	nop
0015ee   0000     nop                      	nop
0015f0   0000     nop                      	nop
0015f2   0000     nop                      	nop
0015f4   0000     nop                      	nop
0015f6   0000     nop                      	nop
0015f8   0000     nop                      	nop
0015fa   0000     nop                      	nop
0015fc   0000     nop                      	nop
0015fe   0000     nop                      	nop
001600   0000     nop                      	nop
001602   0000     nop                      	nop
001604   0000     nop                      	nop
001606   0000     nop                      	nop
001608   0000     nop                      	nop
00160a   0000     nop                      	nop
00160c   0000     nop                      	nop
00160e   0000     nop                      	nop
001610   0000     nop                      	nop
001612   0000     nop                      	nop
001614   0000     nop                      	nop
001616   0000     nop                      	nop
001618   0000     nop                      	nop
00161a   0000     nop                      	nop
00161c   0000     nop                      	nop
00161e   0000     nop                      	nop
001620   0000     nop                      	nop
001622   0000     nop                      	nop
001624   0000     nop                      	nop
001626   0000     nop                      	nop
001628   0000     nop                      	nop
00162a   0000     nop                      	nop
00162c   0000     nop                      	nop
00162e   0000     nop                      	nop
001630   0000     nop                      	nop
001632   0000     nop                      	nop
001634   0000     nop                      	nop
001636   0000     nop                      	nop
001638   0000     nop                      	nop
00163a   0000     nop                      	nop
00163c   0000     nop                      	nop
00163e   0000     nop                      	nop
001640   0000     nop                      	nop
001642   0000     nop                      	nop
001644   0000     nop                      	nop
001646   0000     nop                      	nop
001648   0000     nop                      	nop
00164a   0000     nop                      	nop
00164c   0000     nop                      	nop
00164e   0000     nop                      	nop
001650   0000     nop                      	nop
001652   0000     nop                      	nop
001654   0000     nop                      	nop
001656   0000     nop                      	nop
001658   0000     nop                      	nop
00165a   0000     nop                      	nop
00165c   0000     nop                      	nop
00165e   0000     nop                      	nop
001660   0000     nop                      	nop
001662   0000     nop                      	nop
001664   0000     nop                      	nop
001666   0000     nop                      	nop
001668   0000     nop                      	nop
00166a   0000     nop                      	nop
00166c   0000     nop                      	nop
00166e   0000     nop                      	nop
001670   0000     nop                      	nop
001672   0000     nop                      	nop
001674   0000     nop                      	nop
001676   0000     nop                      	nop
001678   0000     nop                      	nop
00167a   0000     nop                      	nop
00167c   0000     nop                      	nop
00167e   0000     nop                      	nop
001680   0000     nop                      	nop
001682   0000     nop                      	nop
001684   0000     nop                      	nop
001686   0000     nop                      	nop
001688   0000     nop                      	nop
00168a   0000     nop                      	nop
00168c   0000     nop                      	nop
00168e   0000     nop                      	nop
001690   0000     nop                      	nop
001692   0000     nop                      	nop
001694   0000     nop                      	nop
001696   0000     nop                      	nop
001698   0000     nop                      	nop
00169a   0000     nop                      	nop
00169c   0000     nop                      	nop
00169e   0000     nop                      	nop
0016a0   0000     nop                      	nop
0016a2   0000     nop                      	nop
0016a4   0000     nop                      	nop
0016a6   0000     nop                      	nop
0016a8   0000     nop                      	nop
0016aa   0000     nop                      	nop
0016ac   0000     nop                      	nop
0016ae   0000     nop                      	nop
0016b0   0000     nop                      	nop
0016b2   0000     nop                      	nop
0016b4   0000     nop                      	nop
0016b6   0000     nop                      	nop
0016b8   0000     nop                      	nop
0016ba   0000     nop                      	nop
0016bc   0000     nop                      	nop
0016be   0000     nop                      	nop
0016c0   0000     nop                      	nop
                                           	
                                           ;	.line	2517; meter_logger.c	PWM_PIN = 0;
0016c2   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
0016c4   0000     nop                      	nop
0016c6   0000     nop                      	nop
0016c8   0000     nop                      	nop
0016ca   0000     nop                      	nop
0016cc   0000     nop                      	nop
0016ce   0000     nop                      	nop
0016d0   0000     nop                      	nop
0016d2   0000     nop                      	nop
0016d4   0000     nop                      	nop
0016d6   0000     nop                      	nop
0016d8   0000     nop                      	nop
0016da   0000     nop                      	nop
0016dc   0000     nop                      	nop
0016de   0000     nop                      	nop
0016e0   0000     nop                      	nop
0016e2   0000     nop                      	nop
0016e4   0000     nop                      	nop
0016e6   0000     nop                      	nop
0016e8   0000     nop                      	nop
0016ea   0000     nop                      	nop
0016ec   0000     nop                      	nop
0016ee   0000     nop                      	nop
0016f0   0000     nop                      	nop
0016f2   0000     nop                      	nop
0016f4   0000     nop                      	nop
0016f6   0000     nop                      	nop
0016f8   0000     nop                      	nop
0016fa   0000     nop                      	nop
0016fc   0000     nop                      	nop
0016fe   0000     nop                      	nop
001700   0000     nop                      	nop
001702   0000     nop                      	nop
001704   0000     nop                      	nop
001706   0000     nop                      	nop
001708   0000     nop                      	nop
00170a   0000     nop                      	nop
00170c   0000     nop                      	nop
00170e   0000     nop                      	nop
001710   0000     nop                      	nop
001712   0000     nop                      	nop
001714   0000     nop                      	nop
001716   0000     nop                      	nop
001718   0000     nop                      	nop
00171a   0000     nop                      	nop
00171c   0000     nop                      	nop
00171e   0000     nop                      	nop
001720   0000     nop                      	nop
001722   0000     nop                      	nop
001724   0000     nop                      	nop
001726   0000     nop                      	nop
001728   0000     nop                      	nop
00172a   0000     nop                      	nop
00172c   0000     nop                      	nop
00172e   0000     nop                      	nop
001730   0000     nop                      	nop
001732   0000     nop                      	nop
001734   0000     nop                      	nop
001736   0000     nop                      	nop
001738   0000     nop                      	nop
00173a   0000     nop                      	nop
00173c   0000     nop                      	nop
00173e   0000     nop                      	nop
001740   0000     nop                      	nop
001742   0000     nop                      	nop
001744   0000     nop                      	nop
001746   0000     nop                      	nop
001748   0000     nop                      	nop
00174a   0000     nop                      	nop
00174c   0000     nop                      	nop
00174e   0000     nop                      	nop
001750   0000     nop                      	nop
001752   0000     nop                      	nop
001754   0000     nop                      	nop
001756   0000     nop                      	nop
001758   0000     nop                      	nop
00175a   0000     nop                      	nop
00175c   0000     nop                      	nop
00175e   0000     nop                      	nop
001760   0000     nop                      	nop
001762   0000     nop                      	nop
001764   0000     nop                      	nop
001766   0000     nop                      	nop
001768   0000     nop                      	nop
00176a   0000     nop                      	nop
00176c   0000     nop                      	nop
00176e   0000     nop                      	nop
001770   0000     nop                      	nop
001772   0000     nop                      	nop
001774   0000     nop                      	nop
001776   0000     nop                      	nop
001778   0000     nop                      	nop
00177a   0000     nop                      	nop
00177c   0000     nop                      	nop
00177e   0000     nop                      	nop
001780   0000     nop                      	nop
001782   0000     nop                      	nop
001784   0000     nop                      	nop
001786   0000     nop                      	nop
001788   0000     nop                      	nop
00178a   0000     nop                      	nop
00178c   0000     nop                      	nop
00178e   0000     nop                      	nop
001790   0000     nop                      	nop
001792   0000     nop                      	nop
001794   0000     nop                      	nop
001796   0000     nop                      	nop
001798   0000     nop                      	nop
00179a   0000     nop                      	nop
00179c   0000     nop                      	nop
00179e   0000     nop                      	nop
0017a0   0000     nop                      	nop
0017a2   0000     nop                      	nop
0017a4   0000     nop                      	nop
0017a6   0000     nop                      	nop
0017a8   0000     nop                      	nop
0017aa   0000     nop                      	nop
0017ac   0000     nop                      	nop
0017ae   0000     nop                      	nop
0017b0   0000     nop                      	nop
0017b2   0000     nop                      	nop
0017b4   0000     nop                      	nop
0017b6   0000     nop                      	nop
0017b8   0000     nop                      	nop
0017ba   0000     nop                      	nop
0017bc   0000     nop                      	nop
0017be   0000     nop                      	nop
0017c0   0000     nop                      	nop
0017c2   0000     nop                      	nop
0017c4   0000     nop                      	nop
0017c6   0000     nop                      	nop
0017c8   0000     nop                      	nop
0017ca   0000     nop                      	nop
0017cc   0000     nop                      	nop
0017ce   0000     nop                      	nop
0017d0   0000     nop                      	nop
                                           	
                                           ;	.line	2655; meter_logger.c	PWM_PIN = 1;
0017d2   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
0017d4   0000     nop                      	nop
0017d6   0000     nop                      	nop
0017d8   0000     nop                      	nop
0017da   0000     nop                      	nop
0017dc   0000     nop                      	nop
0017de   0000     nop                      	nop
0017e0   0000     nop                      	nop
0017e2   0000     nop                      	nop
0017e4   0000     nop                      	nop
0017e6   0000     nop                      	nop
0017e8   0000     nop                      	nop
0017ea   0000     nop                      	nop
0017ec   0000     nop                      	nop
0017ee   0000     nop                      	nop
0017f0   0000     nop                      	nop
0017f2   0000     nop                      	nop
0017f4   0000     nop                      	nop
0017f6   0000     nop                      	nop
0017f8   0000     nop                      	nop
0017fa   0000     nop                      	nop
0017fc   0000     nop                      	nop
0017fe   0000     nop                      	nop
001800   0000     nop                      	nop
001802   0000     nop                      	nop
001804   0000     nop                      	nop
001806   0000     nop                      	nop
001808   0000     nop                      	nop
00180a   0000     nop                      	nop
00180c   0000     nop                      	nop
00180e   0000     nop                      	nop
001810   0000     nop                      	nop
001812   0000     nop                      	nop
001814   0000     nop                      	nop
001816   0000     nop                      	nop
001818   0000     nop                      	nop
00181a   0000     nop                      	nop
00181c   0000     nop                      	nop
00181e   0000     nop                      	nop
001820   0000     nop                      	nop
001822   0000     nop                      	nop
001824   0000     nop                      	nop
001826   0000     nop                      	nop
001828   0000     nop                      	nop
00182a   0000     nop                      	nop
00182c   0000     nop                      	nop
00182e   0000     nop                      	nop
001830   0000     nop                      	nop
001832   0000     nop                      	nop
001834   0000     nop                      	nop
001836   0000     nop                      	nop
001838   0000     nop                      	nop
00183a   0000     nop                      	nop
00183c   0000     nop                      	nop
00183e   0000     nop                      	nop
001840   0000     nop                      	nop
001842   0000     nop                      	nop
001844   0000     nop                      	nop
001846   0000     nop                      	nop
001848   0000     nop                      	nop
00184a   0000     nop                      	nop
00184c   0000     nop                      	nop
00184e   0000     nop                      	nop
001850   0000     nop                      	nop
001852   0000     nop                      	nop
001854   0000     nop                      	nop
001856   0000     nop                      	nop
001858   0000     nop                      	nop
00185a   0000     nop                      	nop
00185c   0000     nop                      	nop
00185e   0000     nop                      	nop
001860   0000     nop                      	nop
001862   0000     nop                      	nop
001864   0000     nop                      	nop
001866   0000     nop                      	nop
001868   0000     nop                      	nop
00186a   0000     nop                      	nop
00186c   0000     nop                      	nop
00186e   0000     nop                      	nop
001870   0000     nop                      	nop
001872   0000     nop                      	nop
001874   0000     nop                      	nop
001876   0000     nop                      	nop
001878   0000     nop                      	nop
00187a   0000     nop                      	nop
00187c   0000     nop                      	nop
00187e   0000     nop                      	nop
001880   0000     nop                      	nop
001882   0000     nop                      	nop
001884   0000     nop                      	nop
001886   0000     nop                      	nop
001888   0000     nop                      	nop
00188a   0000     nop                      	nop
00188c   0000     nop                      	nop
00188e   0000     nop                      	nop
001890   0000     nop                      	nop
001892   0000     nop                      	nop
001894   0000     nop                      	nop
001896   0000     nop                      	nop
001898   0000     nop                      	nop
00189a   0000     nop                      	nop
00189c   0000     nop                      	nop
00189e   0000     nop                      	nop
0018a0   0000     nop                      	nop
0018a2   0000     nop                      	nop
0018a4   0000     nop                      	nop
0018a6   0000     nop                      	nop
0018a8   0000     nop                      	nop
0018aa   0000     nop                      	nop
0018ac   0000     nop                      	nop
0018ae   0000     nop                      	nop
0018b0   0000     nop                      	nop
0018b2   0000     nop                      	nop
0018b4   0000     nop                      	nop
0018b6   0000     nop                      	nop
0018b8   0000     nop                      	nop
0018ba   0000     nop                      	nop
0018bc   0000     nop                      	nop
0018be   0000     nop                      	nop
0018c0   0000     nop                      	nop
0018c2   0000     nop                      	nop
0018c4   0000     nop                      	nop
0018c6   0000     nop                      	nop
0018c8   0000     nop                      	nop
0018ca   0000     nop                      	nop
0018cc   0000     nop                      	nop
0018ce   0000     nop                      	nop
0018d0   0000     nop                      	nop
0018d2   0000     nop                      	nop
0018d4   0000     nop                      	nop
0018d6   0000     nop                      	nop
0018d8   0000     nop                      	nop
0018da   0000     nop                      	nop
0018dc   0000     nop                      	nop
0018de   0000     nop                      	nop
0018e0   0000     nop                      	nop
                                           	
                                           ;	.line	2793; meter_logger.c	PWM_PIN = 0;
0018e2   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
0018e4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0018e6   ffd9
0018e8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_rx_disable	code
                                           _fsk_rx_disable:
                                           ;	.line	1269; meter_logger.c	void fsk_rx_disable() {
005072   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005074   ffe5
005076   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005078   ffd9
                                           ;	.line	1270; meter_logger.c	PIE2bits.CMIE = 0;		// Disable comparator interrupt
00507a   9ca0     bcf     0xa0, 0x6, 0     	BCF	_PIE2bits, 6
00507c   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1271; meter_logger.c	codec_type = NONE;
00507e   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
005080   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005082   ffd9
005084   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_rx_enable	code
                                           _fsk_rx_enable:
                                           ;	.line	1233; meter_logger.c	void fsk_rx_enable() {
004b46   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004b48   ffe5
004b4a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004b4c   ffd9
                                           ;	.line	1234; meter_logger.c	fsk_proto.state = START_BIT_WAIT;
004b4e   0e02     movlw   0x2              	MOVLW	0x02
004b50   0105     movlb   0x5              	BANKSEL	_fsk_proto
004b52   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1235; meter_logger.c	fsk_proto.start_bit_time = 0;
004b54   6b0a     clrf    0xa, 0x1         	CLRF	(_fsk_proto + 10), B
                                           ; removed redundant BANKSEL
004b56   6b0b     clrf    0xb, 0x1         	CLRF	(_fsk_proto + 11), B
                                           ;	.line	1237; meter_logger.c	timer0_reload = TIMER0_FSK;
004b58   0e9f     movlw   0x9f             	MOVLW	0x9f
004b5a   0105     movlb   0x5              	BANKSEL	_timer0_reload
004b5c   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
004b5e   0ef9     movlw   0xf9             	MOVLW	0xf9
                                           ; removed redundant BANKSEL
004b60   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
                                           ;	.line	1239; meter_logger.c	codec_type = FSK_RX;
004b62   0e04     movlw   0x4              	MOVLW	0x04
004b64   0105     movlb   0x5              	BANKSEL	_codec_type
004b66   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1242; meter_logger.c	T0CONbits.TMR0ON = 1;
004b68   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1243; meter_logger.c	T0CONbits.T0PS0 = 0;
004b6a   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1244; meter_logger.c	T0CONbits.T0PS1 = 0;
004b6c   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1245; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004b6e   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1246; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004b70   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1247; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004b72   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1248; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004b74   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1249; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004b76   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1250; meter_logger.c	INTCONbits.TMR0IE = 0;		// Dont enable TMR0 Interrupt
004b78   9af2     bcf     0xf2, 0x5, 0     	BCF	_INTCONbits, 5
                                           ;	.line	1253; meter_logger.c	CVRCONbits.CVREF = 0xf;	// 0V
004b7a   88b5     bsf     0xb5, 0x4, 0     	BSF	_CVRCONbits, 4
                                           ;	.line	1255; meter_logger.c	CVRCONbits.CVRSS = 0;	// VDD – VSS
004b7c   98b5     bcf     0xb5, 0x4, 0     	BCF	_CVRCONbits, 4
                                           ;	.line	1256; meter_logger.c	CVRCONbits.CVRR = 0;	// high range, 0.25 CVRSRC to 0.75 CVRSRC, with CVRSRC/32 step size
004b7e   9ab5     bcf     0xb5, 0x5, 0     	BCF	_CVRCONbits, 5
                                           ;	.line	1257; meter_logger.c	CVRCONbits.CVR = 9;		// 2,65625 V
004b80   50b5     movf    0xb5, 0, 0       	MOVF	_CVRCONbits, W
004b82   0bf0     andlw   0xf0             	ANDLW	0xf0
004b84   0909     iorlw   0x9              	IORLW	0x09
004b86   6eb5     movwf   0xb5, 0          	MOVWF	_CVRCONbits
                                           ;	.line	1258; meter_logger.c	CVRCONbits.CVROE = 0;	// Comparator VREF Output disabled, CVREF voltage is disconnected from the RA2/AN2/VREF-/CVREF pin
004b88   9cb5     bcf     0xb5, 0x6, 0     	BCF	_CVRCONbits, 6
                                           ;	.line	1259; meter_logger.c	CVRCONbits.CVREN = 1;	// Comparator Voltage Reference Enable bit
004b8a   8eb5     bsf     0xb5, 0x7, 0     	BSF	_CVRCONbits, 7
                                           ;	.line	1261; meter_logger.c	CMCONbits.CM = 0x6;		// four inputs multiplexed to two comparators
004b8c   50b4     movf    0xb4, 0, 0       	MOVF	_CMCONbits, W
004b8e   0bf8     andlw   0xf8             	ANDLW	0xf8
004b90   0906     iorlw   0x6              	IORLW	0x06
004b92   6eb4     movwf   0xb4, 0          	MOVWF	_CMCONbits
                                           ;	.line	1262; meter_logger.c	CMCONbits.CIS = 0;		// multiplexed to RA0/AN0 and RA1/AN1
004b94   96b4     bcf     0xb4, 0x3, 0     	BCF	_CMCONbits, 3
                                           ;	.line	1263; meter_logger.c	CMCONbits.C1INV = 1;	// inverted output, C1 VIN+ < C1 VIN-
004b96   88b4     bsf     0xb4, 0x4, 0     	BSF	_CMCONbits, 4
                                           ;	.line	1265; meter_logger.c	IPR2bits.CMIP = 1;		// high priority
004b98   8ca2     bsf     0xa2, 0x6, 0     	BSF	_IPR2bits, 6
                                           ;	.line	1266; meter_logger.c	PIE2bits.CMIE = 1;		// Enable comparator interrupt
004b9a   8ca0     bsf     0xa0, 0x6, 0     	BSF	_PIE2bits, 6
004b9c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004b9e   ffd9
004ba0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_disable	code
                                           _fsk_tx_disable:
                                           ;	.line	1227; meter_logger.c	void fsk_tx_disable() {
00501a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00501c   ffe5
00501e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005020   ffd9
005022   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1228; meter_logger.c	codec_type = NONE;
005024   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1229; meter_logger.c	T0CONbits.TMR0ON = 0;	// Disable TMR0 
005026   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1230; meter_logger.c	PIE2bits.CMIE = 1;		// Disable comparator interrupt
005028   8ca0     bsf     0xa0, 0x6, 0     	BSF	_PIE2bits, 6
00502a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00502c   ffd9
00502e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_enable	code
                                           _fsk_tx_enable:
                                           ;	.line	1209; meter_logger.c	void fsk_tx_enable() {
004d9a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004d9c   ffe5
004d9e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004da0   ffd9
                                           ;	.line	1210; meter_logger.c	timer0_reload = TIMER0_FSK;
004da2   0e9f     movlw   0x9f             	MOVLW	0x9f
004da4   0105     movlb   0x5              	BANKSEL	_timer0_reload
004da6   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
004da8   0ef9     movlw   0xf9             	MOVLW	0xf9
                                           ; removed redundant BANKSEL
004daa   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
004dac   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	1212; meter_logger.c	fsk_proto.state = INIT_STATE;
004dae   6b00     clrf    0, 0x1           	CLRF	_fsk_proto, B
                                           ;	.line	1213; meter_logger.c	codec_type = FSK_TX;
004db0   0e05     movlw   0x5              	MOVLW	0x05
004db2   0105     movlb   0x5              	BANKSEL	_codec_type
004db4   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1216; meter_logger.c	T0CONbits.TMR0ON = 1;
004db6   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1217; meter_logger.c	T0CONbits.T0PS0 = 0;
004db8   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1218; meter_logger.c	T0CONbits.T0PS1 = 0;
004dba   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1219; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004dbc   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1220; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004dbe   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1221; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004dc0   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1222; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004dc2   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1223; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004dc4   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1224; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004dc6   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
004dc8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004dca   ffd9
004dcc   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_tx_byte	code
                                           _rs232_tx_byte:
                                           ;	.line	1199; meter_logger.c	void rs232_tx_byte(unsigned char c) {
004dce   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004dd0   ffe5
004dd2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004dd4   ffd9
004dd6   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004dd8   ffe5
004dda   0e02     movlw   0x2              	MOVLW	0x02
004ddc   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004dde   f000
                                           ;	.line	1200; meter_logger.c	rs232_proto.data = c;
004de0   5000     movf    0, 0, 0          	MOVF	r0x00, W
004de2   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
004de4   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	1201; meter_logger.c	rs232_proto.data_len = 8;
004de6   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
004de8   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	1202; meter_logger.c	T0CONbits.TMR0ON = 1;		// start timer 0
004dea   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1203; meter_logger.c	INTCONbits.TMR0IF = 1;		// enter timer interrupt handler now
004dec   84f2     bsf     0xf2, 0x2, 0     	BSF	_INTCONbits, 2
                                           _00906_DS_:
004dee   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	1204; meter_logger.c	while (rs232_proto.data_len) {
004df0   5126     movf    0x26, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
004df2   e1fd     bnz     0x4dee           	BNZ	_00906_DS_
004df4   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004df6   f000
004df8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004dfa   ffd9
004dfc   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_rx_disable	code
                                           _rs232_rx_disable:
                                           ;	.line	1193; meter_logger.c	void rs232_rx_disable() {
005030   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005032   ffe5
005034   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005036   ffd9
                                           ;	.line	1194; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
005038   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
00503a   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1195; meter_logger.c	codec_type = NONE;
00503c   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1196; meter_logger.c	T0CONbits.TMR0ON = 0;
00503e   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
005040   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005042   ffd9
005044   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_rx_enable	code
                                           _rs232_rx_enable:
                                           ;	.line	1169; meter_logger.c	void rs232_rx_enable(unsigned int t) {
004bf8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004bfa   ffe5
004bfc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004bfe   ffd9
004c00   0e02     movlw   0x2              	MOVLW	0x02
004c02   cfdb     movff   0xfdb, 0x548     	MOVFF	PLUSW2, _timer0_reload
004c04   f548
004c06   0e03     movlw   0x3              	MOVLW	0x03
004c08   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, (_timer0_reload + 1)
004c0a   f549
                                           ;	.line	1170; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
004c0c   0e02     movlw   0x2              	MOVLW	0x02
004c0e   0105     movlb   0x5              	BANKSEL	_rs232_proto
004c10   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1171; meter_logger.c	rs232_proto.data_len = 0;
004c12   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1175; meter_logger.c	codec_type = RS232_RX;
004c14   0e02     movlw   0x2              	MOVLW	0x02
004c16   0105     movlb   0x5              	BANKSEL	_codec_type
004c18   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1178; meter_logger.c	T0CONbits.TMR0ON = 0;
004c1a   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1179; meter_logger.c	T0CONbits.T0PS0 = 0;
004c1c   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1180; meter_logger.c	T0CONbits.T0PS1 = 0;
004c1e   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1181; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004c20   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1182; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004c22   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1183; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004c24   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1184; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004c26   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1185; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004c28   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1186; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004c2a   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1187; meter_logger.c	INTCONbits.TMR0IF = 0;
004c2c   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1189; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
004c2e   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1190; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004c30   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
004c32   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004c34   ffd9
004c36   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_tx_disable	code
                                           _rs232_tx_disable:
                                           ;	.line	1163; meter_logger.c	void rs232_tx_disable() {
005046   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005048   ffe5
00504a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00504c   ffd9
00504e   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1164; meter_logger.c	codec_type = NONE;
005050   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1165; meter_logger.c	IR_LED_PIN = 0;				// no need to set it to inverted idle
005052   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1166; meter_logger.c	T0CONbits.TMR0ON = 0;
005054   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
005056   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005058   ffd9
00505a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_tx_enable	code
                                           _rs232_tx_enable:
                                           ;	.line	1137; meter_logger.c	void rs232_tx_enable(unsigned int t) {
004c78   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004c7a   ffe5
004c7c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004c7e   ffd9
004c80   0e02     movlw   0x2              	MOVLW	0x02
004c82   cfdb     movff   0xfdb, 0x548     	MOVFF	PLUSW2, _timer0_reload
004c84   f548
004c86   0e03     movlw   0x3              	MOVLW	0x03
004c88   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, (_timer0_reload + 1)
004c8a   f549
004c8c   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	1140; meter_logger.c	rs232_proto.state = INIT_STATE;
004c8e   6b23     clrf    0x23, 0x1        	CLRF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1141; meter_logger.c	rs232_proto.data_len = 0;
004c90   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1143; meter_logger.c	IR_LED_PIN = 0;				// inverted rs232 output on ir, idle = no ir light
004c92   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1145; meter_logger.c	codec_type = RS232_TX;
004c94   0e03     movlw   0x3              	MOVLW	0x03
004c96   0105     movlb   0x5              	BANKSEL	_codec_type
004c98   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1148; meter_logger.c	T0CONbits.TMR0ON = 0;
004c9a   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1149; meter_logger.c	T0CONbits.T0PS0 = 0;
004c9c   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1150; meter_logger.c	T0CONbits.T0PS1 = 0;
004c9e   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1151; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004ca0   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1152; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004ca2   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1153; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004ca4   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1154; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004ca6   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1155; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004ca8   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1156; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004caa   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1157; meter_logger.c	INTCONbits.TMR0IF = 0;
004cac   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1160; meter_logger.c	T0CONbits.TMR0ON = 0;		// timer 0 started in rs232_tx_byte()
004cae   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
004cb0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004cb2   ffd9
004cb4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_ir_disable	code
                                           _testo_ir_disable:
                                           ;	.line	1132; meter_logger.c	void testo_ir_disable() {
005086   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005088   ffe5
00508a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00508c   ffd9
00508e   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1133; meter_logger.c	codec_type = NONE;
005090   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1134; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
005092   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
005094   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005096   ffd9
005098   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_ir_enable	code
                                           _testo_ir_enable:
                                           ;	.line	1108; meter_logger.c	void testo_ir_enable() {
004cb6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004cb8   ffe5
004cba   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004cbc   ffd9
004cbe   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	1109; meter_logger.c	testo_ir_proto.state = INIT_STATE;
004cc0   6b1d     clrf    0x1d, 0x1        	CLRF	_testo_ir_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1110; meter_logger.c	testo_ir_proto.start_bit_len = 0;
004cc2   6b1f     clrf    0x1f, 0x1        	CLRF	(_testo_ir_proto + 2), B
                                           ;	.line	1112; meter_logger.c	timer0_reload = TIMER0_TESTO;
004cc4   0e23     movlw   0x23             	MOVLW	0x23
004cc6   0105     movlb   0x5              	BANKSEL	_timer0_reload
004cc8   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
004cca   0ef3     movlw   0xf3             	MOVLW	0xf3
                                           ; removed redundant BANKSEL
004ccc   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
                                           ;	.line	1114; meter_logger.c	codec_type = TESTO;
004cce   0e01     movlw   0x1              	MOVLW	0x01
004cd0   0105     movlb   0x5              	BANKSEL	_codec_type
004cd2   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1117; meter_logger.c	T0CONbits.TMR0ON = 0;
004cd4   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1118; meter_logger.c	T0CONbits.T0PS0 = 0;
004cd6   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1119; meter_logger.c	T0CONbits.T0PS1 = 0;
004cd8   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1120; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004cda   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1121; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004cdc   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1122; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004cde   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1123; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004ce0   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1124; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004ce2   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1125; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004ce4   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1126; meter_logger.c	INTCONbits.TMR0IF = 0;
004ce6   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1128; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
004ce8   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1129; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004cea   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
004cec   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004cee   ffd9
004cf0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_valid_err_corr	code
                                           _testo_valid_err_corr:
                                           ;	.line	1053; meter_logger.c	unsigned char testo_valid_err_corr(unsigned int c) {
00392c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00392e   ffe5
003930   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003932   ffd9
003934   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003936   ffe5
003938   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00393a   ffe5
00393c   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00393e   ffe5
003940   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003942   ffe5
003944   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003946   ffe5
003948   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00394a   ffe5
00394c   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
00394e   ffe5
003950   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
003952   ffe5
003954   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
003956   ffe5
003958   0e02     movlw   0x2              	MOVLW	0x02
00395a   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00395c   f000
00395e   0e03     movlw   0x3              	MOVLW	0x03
003960   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003962   f001
                                           ;	.line	1060; meter_logger.c	calculated_err_corr_bit = 0;
003964   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1061; meter_logger.c	for (i = 0; i < 8; i++) {
003966   0e78     movlw   0x78             	MOVLW	0x78
003968   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
00396a   6e03     movwf   0x3, 0           	MOVWF	r0x03
00396c   6a04     clrf    0x4, 0           	CLRF	r0x04
00396e   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00794_DS_:
                                           ;	.line	1062; meter_logger.c	calculated_err_corr_bit ^= (((c & 0x78) & (1 << i)) != 0);   // 0b01111000
003970   0e01     movlw   0x1              	MOVLW	0x01
003972   6e06     movwf   0x6, 0           	MOVWF	r0x06
003974   0e00     movlw   0                	MOVLW	0x00
003976   6e07     movwf   0x7, 0           	MOVWF	r0x07
003978   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00397a   e006     bz      0x3988           	BZ	_00836_DS_
00397c   6ce8     negf    0xe8, 0          	NEGF	WREG
00397e   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00837_DS_:
003980   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
003982   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003984   0f01     addlw   0x1              	ADDLW	0x01
003986   e3fc     bnc     0x3980           	BNC	_00837_DS_
                                           _00836_DS_:
003988   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00398a   1606     andwf   0x6, 0x1, 0      	ANDWF	r0x06, F
00398c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00398e   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003990   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003992   e105     bnz     0x399e           	BNZ	_00839_DS_
003994   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003996   e103     bnz     0x399e           	BNZ	_00839_DS_
003998   6a06     clrf    0x6, 0           	CLRF	r0x06
00399a   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
00399c   d001     bra     0x39a0           	BRA	_00840_DS_
                                           _00839_DS_:
00399e   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00840_DS_:
0039a0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0039a2   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
0039a4   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
0039a6   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0039a8   6a06     clrf    0x6, 0           	CLRF	r0x06
0039aa   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
0039ac   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0039ae   6e07     movwf   0x7, 0           	MOVWF	r0x07
0039b0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0039b2   1807     xorwf   0x7, 0, 0        	XORWF	r0x07, W
0039b4   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1061; meter_logger.c	for (i = 0; i < 8; i++) {
0039b6   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
0039b8   0e08     movlw   0x8              	MOVLW	0x08
0039ba   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0039bc   e3d9     bnc     0x3970           	BNC	_00794_DS_
                                           ;	.line	1065; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
0039be   4402     rlncf   0x2, 0, 0        	RLNCF	r0x02, W
0039c0   0bfe     andlw   0xfe             	ANDLW	0xfe
0039c2   6e03     movwf   0x3, 0           	MOVWF	r0x03
                                           ;	.line	1068; meter_logger.c	calculated_err_corr_bit = 0;
0039c4   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1069; meter_logger.c	for (i = 0; i < 8; i++) {
0039c6   0ee6     movlw   0xe6             	MOVLW	0xe6
0039c8   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
0039ca   6e04     movwf   0x4, 0           	MOVWF	r0x04
0039cc   6a05     clrf    0x5, 0           	CLRF	r0x05
0039ce   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00796_DS_:
                                           ;	.line	1070; meter_logger.c	calculated_err_corr_bit ^= (((c & 0xe6) & (1 << i)) != 0);   // 0b11100110
0039d0   0e01     movlw   0x1              	MOVLW	0x01
0039d2   6e07     movwf   0x7, 0           	MOVWF	r0x07
0039d4   0e00     movlw   0                	MOVLW	0x00
0039d6   6e08     movwf   0x8, 0           	MOVWF	r0x08
0039d8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0039da   e006     bz      0x39e8           	BZ	_00844_DS_
0039dc   6ce8     negf    0xe8, 0          	NEGF	WREG
0039de   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00845_DS_:
0039e0   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
0039e2   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
0039e4   0f01     addlw   0x1              	ADDLW	0x01
0039e6   e3fc     bnc     0x39e0           	BNC	_00845_DS_
                                           _00844_DS_:
0039e8   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0039ea   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
0039ec   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0039ee   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
0039f0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0039f2   e105     bnz     0x39fe           	BNZ	_00847_DS_
0039f4   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0039f6   e103     bnz     0x39fe           	BNZ	_00847_DS_
0039f8   6a07     clrf    0x7, 0           	CLRF	r0x07
0039fa   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
0039fc   d001     bra     0x3a00           	BRA	_00848_DS_
                                           _00847_DS_:
0039fe   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00848_DS_:
003a00   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003a02   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003a04   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003a06   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003a08   6a07     clrf    0x7, 0           	CLRF	r0x07
003a0a   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003a0c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003a0e   6e08     movwf   0x8, 0           	MOVWF	r0x08
003a10   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003a12   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003a14   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1069; meter_logger.c	for (i = 0; i < 8; i++) {
003a16   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003a18   0e08     movlw   0x8              	MOVLW	0x08
003a1a   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003a1c   e3d9     bnc     0x39d0           	BNC	_00796_DS_
                                           ;	.line	1072; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003a1e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003a20   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1073; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003a22   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003a24   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
                                           ;	.line	1076; meter_logger.c	calculated_err_corr_bit = 0;
003a26   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1077; meter_logger.c	for (i = 0; i < 8; i++) {
003a28   0ed5     movlw   0xd5             	MOVLW	0xd5
003a2a   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003a2c   6e04     movwf   0x4, 0           	MOVWF	r0x04
003a2e   6a05     clrf    0x5, 0           	CLRF	r0x05
003a30   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00798_DS_:
                                           ;	.line	1078; meter_logger.c	calculated_err_corr_bit ^= (((c & 0xd5) & (1 << i)) != 0);   // 0b11010101
003a32   0e01     movlw   0x1              	MOVLW	0x01
003a34   6e07     movwf   0x7, 0           	MOVWF	r0x07
003a36   0e00     movlw   0                	MOVLW	0x00
003a38   6e08     movwf   0x8, 0           	MOVWF	r0x08
003a3a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003a3c   e006     bz      0x3a4a           	BZ	_00853_DS_
003a3e   6ce8     negf    0xe8, 0          	NEGF	WREG
003a40   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00854_DS_:
003a42   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003a44   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003a46   0f01     addlw   0x1              	ADDLW	0x01
003a48   e3fc     bnc     0x3a42           	BNC	_00854_DS_
                                           _00853_DS_:
003a4a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003a4c   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003a4e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003a50   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003a52   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003a54   e105     bnz     0x3a60           	BNZ	_00856_DS_
003a56   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003a58   e103     bnz     0x3a60           	BNZ	_00856_DS_
003a5a   6a07     clrf    0x7, 0           	CLRF	r0x07
003a5c   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003a5e   d001     bra     0x3a62           	BRA	_00857_DS_
                                           _00856_DS_:
003a60   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00857_DS_:
003a62   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003a64   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003a66   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003a68   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003a6a   6a07     clrf    0x7, 0           	CLRF	r0x07
003a6c   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003a6e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003a70   6e08     movwf   0x8, 0           	MOVWF	r0x08
003a72   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003a74   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003a76   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1077; meter_logger.c	for (i = 0; i < 8; i++) {
003a78   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003a7a   0e08     movlw   0x8              	MOVLW	0x08
003a7c   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003a7e   e3d9     bnc     0x3a32           	BNC	_00798_DS_
                                           ;	.line	1080; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003a80   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003a82   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1081; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003a84   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003a86   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
                                           ;	.line	1084; meter_logger.c	calculated_err_corr_bit = 0;
003a88   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1085; meter_logger.c	for (i = 0; i < 8; i++) {
003a8a   0e8b     movlw   0x8b             	MOVLW	0x8b
003a8c   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003a8e   6e04     movwf   0x4, 0           	MOVWF	r0x04
003a90   6a05     clrf    0x5, 0           	CLRF	r0x05
003a92   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00800_DS_:
                                           ;	.line	1086; meter_logger.c	calculated_err_corr_bit ^= (((c & 0x8b) & (1 << i)) != 0);   // 0b10001011
003a94   0e01     movlw   0x1              	MOVLW	0x01
003a96   6e07     movwf   0x7, 0           	MOVWF	r0x07
003a98   0e00     movlw   0                	MOVLW	0x00
003a9a   6e08     movwf   0x8, 0           	MOVWF	r0x08
003a9c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003a9e   e006     bz      0x3aac           	BZ	_00862_DS_
003aa0   6ce8     negf    0xe8, 0          	NEGF	WREG
003aa2   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00863_DS_:
003aa4   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003aa6   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003aa8   0f01     addlw   0x1              	ADDLW	0x01
003aaa   e3fc     bnc     0x3aa4           	BNC	_00863_DS_
                                           _00862_DS_:
003aac   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003aae   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003ab0   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003ab2   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003ab4   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003ab6   e105     bnz     0x3ac2           	BNZ	_00865_DS_
003ab8   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003aba   e103     bnz     0x3ac2           	BNZ	_00865_DS_
003abc   6a07     clrf    0x7, 0           	CLRF	r0x07
003abe   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003ac0   d001     bra     0x3ac4           	BRA	_00866_DS_
                                           _00865_DS_:
003ac2   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00866_DS_:
003ac4   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003ac6   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003ac8   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003aca   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003acc   6a07     clrf    0x7, 0           	CLRF	r0x07
003ace   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003ad0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003ad2   6e08     movwf   0x8, 0           	MOVWF	r0x08
003ad4   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003ad6   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003ad8   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1085; meter_logger.c	for (i = 0; i < 8; i++) {
003ada   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003adc   0e08     movlw   0x8              	MOVLW	0x08
003ade   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003ae0   e3d9     bnc     0x3a94           	BNC	_00800_DS_
                                           ;	.line	1088; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003ae2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003ae4   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1099; meter_logger.c	if ((c >> 8) == calculated_err_corr) {
003ae6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003ae8   6e00     movwf   0, 0             	MOVWF	r0x00
003aea   6a01     clrf    0x1, 0           	CLRF	r0x01
003aec   6a02     clrf    0x2, 0           	CLRF	r0x02
003aee   5000     movf    0, 0, 0          	MOVF	r0x00, W
003af0   1803     xorwf   0x3, 0, 0        	XORWF	r0x03, W
003af2   e103     bnz     0x3afa           	BNZ	_00870_DS_
003af4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003af6   1802     xorwf   0x2, 0, 0        	XORWF	r0x02, W
003af8   e001     bz      0x3afc           	BZ	_00871_DS_
                                           _00870_DS_:
003afa   d002     bra     0x3b00           	BRA	_00792_DS_
                                           _00871_DS_:
                                           ;	.line	1100; meter_logger.c	return 1;
003afc   0e01     movlw   0x1              	MOVLW	0x01
003afe   d001     bra     0x3b02           	BRA	_00802_DS_
                                           _00792_DS_:
                                           ;	.line	1103; meter_logger.c	return 0;
003b00   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00802_DS_:
003b02   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
003b04   f008
003b06   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003b08   f007
003b0a   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003b0c   f006
003b0e   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003b10   f005
003b12   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003b14   f004
003b16   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003b18   f003
003b1a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003b1c   f002
003b1e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003b20   f001
003b22   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003b24   f000
003b26   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003b28   ffd9
003b2a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__reverse	code
                                           _reverse:
                                           ;	.line	1045; meter_logger.c	unsigned char reverse(unsigned char b) {
004954   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004956   ffe5
004958   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00495a   ffd9
00495c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00495e   ffe5
004960   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004962   ffe5
004964   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004966   ffe5
004968   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00496a   ffe5
00496c   0e02     movlw   0x2              	MOVLW	0x02
00496e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004970   f000
                                           ;	.line	1047; meter_logger.c	c  = ((b >>  1) & 0x55) | ((b <<  1) & 0xaa);
004972   4000     rrncf   0, 0, 0          	RRNCF	r0x00, W
004974   0b7f     andlw   0x7f             	ANDLW	0x7f
004976   6e01     movwf   0x1, 0           	MOVWF	r0x01
004978   0e55     movlw   0x55             	MOVLW	0x55
00497a   1601     andwf   0x1, 0x1, 0      	ANDWF	r0x01, F
00497c   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
00497e   0bfe     andlw   0xfe             	ANDLW	0xfe
004980   6e02     movwf   0x2, 0           	MOVWF	r0x02
004982   0eaa     movlw   0xaa             	MOVLW	0xaa
004984   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004986   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004988   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1048; meter_logger.c	c |= ((b >>  2) & 0x33) | ((b <<  2) & 0xcc);
00498a   4000     rrncf   0, 0, 0          	RRNCF	r0x00, W
00498c   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
00498e   0b3f     andlw   0x3f             	ANDLW	0x3f
004990   6e02     movwf   0x2, 0           	MOVWF	r0x02
004992   0e33     movlw   0x33             	MOVLW	0x33
004994   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004996   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
004998   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
00499a   0bfc     andlw   0xfc             	ANDLW	0xfc
00499c   6e03     movwf   0x3, 0           	MOVWF	r0x03
00499e   0ecc     movlw   0xcc             	MOVLW	0xcc
0049a0   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
0049a2   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0049a4   1202     iorwf   0x2, 0x1, 0      	IORWF	r0x02, F
0049a6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0049a8   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1049; meter_logger.c	c |= ((b >>  4) & 0x0f) | ((b <<  4) & 0xf0);
0049aa   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
0049ac   0b0f     andlw   0xf              	ANDLW	0x0f
0049ae   6e02     movwf   0x2, 0           	MOVWF	r0x02
0049b0   0e0f     movlw   0xf              	MOVLW	0x0f
0049b2   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
0049b4   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
0049b6   0bf0     andlw   0xf0             	ANDLW	0xf0
0049b8   6e03     movwf   0x3, 0           	MOVWF	r0x03
0049ba   0ef0     movlw   0xf0             	MOVLW	0xf0
0049bc   1403     andwf   0x3, 0, 0        	ANDWF	r0x03, W
0049be   6e00     movwf   0, 0             	MOVWF	r0x00
0049c0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0049c2   1202     iorwf   0x2, 0x1, 0      	IORWF	r0x02, F
0049c4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0049c6   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1050; meter_logger.c	return(c);
0049c8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0049ca   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0049cc   f003
0049ce   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0049d0   f002
0049d2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0049d4   f001
0049d6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0049d8   f000
0049da   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0049dc   ffd9
0049de   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__my_usart_open	code
                                           _my_usart_open:
                                           ;	.line	1015; meter_logger.c	void my_usart_open() {
004ee4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004ee6   ffe5
004ee8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004eea   ffd9
                                           ;	.line	1016; meter_logger.c	SPBRG = 103;					// 8MHz => 19230 baud
004eec   0e67     movlw   0x67             	MOVLW	0x67
004eee   6eaf     movwf   0xaf, 0          	MOVWF	_SPBRG
                                           ;	.line	1017; meter_logger.c	TXSTAbits.BRGH = 1;	// (0 = low speed)
004ef0   84ac     bsf     0xac, 0x2, 0     	BSF	_TXSTAbits, 2
                                           ;	.line	1018; meter_logger.c	TXSTAbits.SYNC = 0;	// (0 = asynchronous)
004ef2   98ac     bcf     0xac, 0x4, 0     	BCF	_TXSTAbits, 4
                                           ;	.line	1019; meter_logger.c	BAUDCONbits.BRG16 = 1;
004ef4   86b8     bsf     0xb8, 0x3, 0     	BSF	_BAUDCONbits, 3
                                           ;	.line	1022; meter_logger.c	RCSTAbits.SPEN = 1; // (1 = serial port enabled)
004ef6   8eab     bsf     0xab, 0x7, 0     	BSF	_RCSTAbits, 7
                                           ;	.line	1025; meter_logger.c	PIE1bits.TXIE = 0; // (1 = enabled)
004ef8   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
                                           ;	.line	1026; meter_logger.c	IPR1bits.TXIP = 0; // USART Tx on low priority interrupt
004efa   989f     bcf     0x9f, 0x4, 0     	BCF	_IPR1bits, 4
                                           ;	.line	1029; meter_logger.c	PIE1bits.RCIE = 1; // (1 = enabled)
004efc   8a9d     bsf     0x9d, 0x5, 0     	BSF	_PIE1bits, 5
                                           ;	.line	1030; meter_logger.c	IPR1bits.RCIP = 0; // USART Rx on low priority interrupt
004efe   9a9f     bcf     0x9f, 0x5, 0     	BCF	_IPR1bits, 5
                                           ;	.line	1033; meter_logger.c	TXSTAbits.TX9 = 0; // (0 = 8-bit transmit)
004f00   9cac     bcf     0xac, 0x6, 0     	BCF	_TXSTAbits, 6
                                           ;	.line	1036; meter_logger.c	RCSTAbits.RX9 = 0; // (0 = 8-bit reception)
004f02   9cab     bcf     0xab, 0x6, 0     	BCF	_RCSTAbits, 6
                                           ;	.line	1039; meter_logger.c	RCSTAbits.CREN = 1; // (1 = Enables receiver)
004f04   88ab     bsf     0xab, 0x4, 0     	BSF	_RCSTAbits, 4
                                           ;	.line	1042; meter_logger.c	TXSTAbits.TXEN = 1; // (1 = transmit enabled)
004f06   8aac     bsf     0xac, 0x5, 0     	BSF	_TXSTAbits, 5
004f08   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004f0a   ffd9
004f0c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__get_dev_id	code
                                           _get_dev_id:
                                           ;	.line	998; meter_logger.c	unsigned int get_dev_id() {
004ad4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004ad6   ffe5
004ad8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004ada   ffd9
004adc   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004ade   ffe5
004ae0   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004ae2   ffe5
004ae4   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004ae6   ffe5
004ae8   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004aea   ffe5
004aec   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004aee   ffe5
004af0   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004af2   ffe5
                                           ;	.line	1001; meter_logger.c	TBLPTRU = __DEVID1 >> 16;
004af4   0e3f     movlw   0x3f             	MOVLW	0x3f
004af6   6ef8     movwf   0xf8, 0          	MOVWF	_TBLPTRU
                                           ;	.line	1002; meter_logger.c	TBLPTRH = __DEVID1 >> 8;
004af8   0eff     movlw   0xff             	MOVLW	0xff
004afa   6ef7     movwf   0xf7, 0          	MOVWF	_TBLPTRH
                                           ;	.line	1003; meter_logger.c	TBLPTRL = __DEVID1;
004afc   0efe     movlw   0xfe             	MOVLW	0xfe
004afe   6ef6     movwf   0xf6, 0          	MOVWF	_TBLPTRL
004b00   0009     tblrd   *+               	tblrd*+
                                           	
                                           ;	.line	1007; meter_logger.c	dev_id_low = TABLAT;
004b02   cff5     movff   0xff5, 0         	MOVFF	_TABLAT, r0x00
004b04   f000
004b06   0009     tblrd   *+               	tblrd*+
                                           	
                                           ;	.line	1011; meter_logger.c	dev_id_high = TABLAT;
004b08   cff5     movff   0xff5, 0x1       	MOVFF	_TABLAT, r0x01
004b0a   f001
                                           ;	.line	1012; meter_logger.c	return ((dev_id_high << 8) + dev_id_low) & 0xffe0;	// dont return revision
004b0c   6a02     clrf    0x2, 0           	CLRF	r0x02
004b0e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004b10   6e04     movwf   0x4, 0           	MOVWF	r0x04
004b12   6a03     clrf    0x3, 0           	CLRF	r0x03
004b14   6a05     clrf    0x5, 0           	CLRF	r0x05
004b16   5000     movf    0, 0, 0          	MOVF	r0x00, W
004b18   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
004b1a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
004b1c   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
004b1e   0ee0     movlw   0xe0             	MOVLW	0xe0
004b20   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
004b22   c004     movff   0x4, 0xff3       	MOVFF	r0x04, PRODL
004b24   fff3
004b26   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004b28   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
004b2a   f005
004b2c   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004b2e   f004
004b30   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004b32   f003
004b34   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004b36   f002
004b38   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004b3a   f001
004b3c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004b3e   f000
004b40   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004b42   ffd9
004b44   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__init_system	code
                                           _init_system:
                                           ;	.line	897; meter_logger.c	void init_system() {
004ba2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004ba4   ffe5
004ba6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004ba8   ffd9
                                           ;	.line	899; meter_logger.c	TRIS_COMP1 = INPUT_STATE;		// as input
004baa   8092     bsf     0x92, 0, 0       	BSF	_TRISAbits, 0
                                           ;	.line	900; meter_logger.c	TRIS_COMP2 = INPUT_STATE;		// as input
004bac   8292     bsf     0x92, 0x1, 0     	BSF	_TRISAbits, 1
                                           ;	.line	902; meter_logger.c	TRIS_IR_PIN = INPUT_STATE;		// as input
004bae   8093     bsf     0x93, 0, 0       	BSF	_TRISBbits, 0
                                           ;	.line	904; meter_logger.c	TRIS_LED_PIN = OUTPUT_STATE;	// as output
004bb0   9893     bcf     0x93, 0x4, 0     	BCF	_TRISBbits, 4
                                           ;	.line	905; meter_logger.c	LED_PIN = 0;					// and clear
004bb2   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	907; meter_logger.c	TRIS_IR_LED_PIN = OUTPUT_STATE;	// as output
004bb4   9293     bcf     0x93, 0x1, 0     	BCF	_TRISBbits, 1
                                           ;	.line	908; meter_logger.c	IR_LED_PIN = 0;					// and clear
004bb6   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	910; meter_logger.c	TRIS_V_SENSE = INPUT_STATE;		// as input
004bb8   8a92     bsf     0x92, 0x5, 0     	BSF	_TRISAbits, 5
                                           ;	.line	912; meter_logger.c	TRIS_DEBUG_PIN = OUTPUT_STATE;	// as output
004bba   9493     bcf     0x93, 0x2, 0     	BCF	_TRISBbits, 2
                                           ;	.line	913; meter_logger.c	DEBUG_PIN = 0;					// and clear
004bbc   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	915; meter_logger.c	TRIS_DEBUG2_PIN = OUTPUT_STATE;	// as output
004bbe   9693     bcf     0x93, 0x3, 0     	BCF	_TRISBbits, 3
                                           ;	.line	916; meter_logger.c	DEBUG2_PIN = 0;					// and clear
004bc0   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	918; meter_logger.c	TRIS_DEBUG3_PIN = OUTPUT_STATE;	// as output
004bc2   9893     bcf     0x93, 0x4, 0     	BCF	_TRISBbits, 4
                                           ;	.line	919; meter_logger.c	DEBUG3_PIN = 0;					// and clear
004bc4   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	923; meter_logger.c	TRIS_PWM_PIN = OUTPUT_STATE;	// enable output from pwm module at init
004bc6   9294     bcf     0x94, 0x1, 0     	BCF	_TRISCbits, 1
                                           ;	.line	924; meter_logger.c	PWM_PIN = 0;					// and clear
004bc8   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
                                           ;	.line	927; meter_logger.c	TRIS_RX_PIN = INPUT_STATE;		// as input
004bca   8e94     bsf     0x94, 0x7, 0     	BSF	_TRISCbits, 7
                                           ;	.line	928; meter_logger.c	TRIS_TX_PIN = OUTPUT_STATE;		// as input
004bcc   9c94     bcf     0x94, 0x6, 0     	BCF	_TRISCbits, 6
                                           ;	.line	933; meter_logger.c	T1CONbits.TMR1ON = 1;
004bce   80cd     bsf     0xcd, 0, 0       	BSF	_T1CONbits, 0
                                           ;	.line	934; meter_logger.c	T1CONbits.RD16 = 1;
004bd0   8ecd     bsf     0xcd, 0x7, 0     	BSF	_T1CONbits, 7
                                           ;	.line	935; meter_logger.c	T1CONbits.TMR1CS = 0;   // internal clock source
004bd2   92cd     bcf     0xcd, 0x1, 0     	BCF	_T1CONbits, 1
                                           ;	.line	936; meter_logger.c	T1CONbits.T1OSCEN = 0;  // dont put t1 on pin
004bd4   96cd     bcf     0xcd, 0x3, 0     	BCF	_T1CONbits, 3
                                           ;	.line	937; meter_logger.c	T1CONbits.T1CKPS0 = 0;
004bd6   98cd     bcf     0xcd, 0x4, 0     	BCF	_T1CONbits, 4
                                           ;	.line	938; meter_logger.c	T1CONbits.T1CKPS1 = 0;
004bd8   9acd     bcf     0xcd, 0x5, 0     	BCF	_T1CONbits, 5
                                           ;	.line	939; meter_logger.c	IPR1bits.TMR1IP = 0;	// low priority
004bda   909f     bcf     0x9f, 0, 0       	BCF	_IPR1bits, 0
                                           ;	.line	940; meter_logger.c	PIE1bits.TMR1IE = 1;	// Ensure that TMR1 Interrupt is enabled
004bdc   809d     bsf     0x9d, 0, 0       	BSF	_PIE1bits, 0
                                           ;	.line	941; meter_logger.c	PIR1bits.TMR1IF = 1;	// Force Instant entry to Timer 1 Interrupt
004bde   809e     bsf     0x9e, 0, 0       	BSF	_PIR1bits, 0
                                           ;	.line	972; meter_logger.c	RCONbits.IPEN = 1;
004be0   8ed0     bsf     0xd0, 0x7, 0     	BSF	_RCONbits, 7
                                           ;	.line	974; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int, enabled when ir demodulator is started
004be2   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	975; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004be4   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
                                           ;	.line	977; meter_logger.c	INTCONbits.PEIE = 1;
004be6   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	978; meter_logger.c	INTCONbits.GIE = 1;	/* Enable Global interrupts   */	
004be8   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           ;	.line	983; meter_logger.c	IPR1bits.RCIP = 0;
004bea   9a9f     bcf     0x9f, 0x5, 0     	BCF	_IPR1bits, 5
                                           ;	.line	984; meter_logger.c	IPR1bits.TXIP = 0;
004bec   989f     bcf     0x9f, 0x4, 0     	BCF	_IPR1bits, 4
                                           ;	.line	995; meter_logger.c	my_usart_open();
004bee   ec72     call    0x4ee4, 0        	CALL	_my_usart_open
004bf0   f027
004bf2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004bf4   ffd9
004bf6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__sleep_ms	code
                                           _sleep_ms:
                                           ;	.line	877; meter_logger.c	void sleep_ms(unsigned int ms) {
0048ae   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0048b0   ffe5
0048b2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0048b4   ffd9
0048b6   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0048b8   ffe5
0048ba   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0048bc   ffe5
0048be   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0048c0   ffe5
0048c2   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0048c4   ffe5
0048c6   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0048c8   ffe5
0048ca   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0048cc   ffe5
0048ce   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0048d0   ffe5
0048d2   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
0048d4   ffe5
0048d6   0e02     movlw   0x2              	MOVLW	0x02
0048d8   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0048da   f000
0048dc   0e03     movlw   0x3              	MOVLW	0x03
0048de   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0048e0   f001
                                           ;	.line	880; meter_logger.c	start_timer_1_ms = timer_1_ms;	
0048e2   c540     movff   0x540, 0x2       	MOVFF	_timer_1_ms, r0x02
0048e4   f002
0048e6   c541     movff   0x541, 0x3       	MOVFF	(_timer_1_ms + 1), r0x03
0048e8   f003
                                           ;	.line	883; meter_logger.c	do {
0048ea   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0048ec   08ff     sublw   0xff             	SUBLW	0xff
0048ee   6e04     movwf   0x4, 0           	MOVWF	r0x04
0048f0   0eff     movlw   0xff             	MOVLW	0xff
0048f2   5403     subfwb  0x3, 0, 0        	SUBFWB	r0x03, W
0048f4   6e05     movwf   0x5, 0           	MOVWF	r0x05
                                           _00750_DS_:
                                           ;	.line	884; meter_logger.c	if (start_timer_1_ms <= timer_1_ms) {
0048f6   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0048f8   0105     movlb   0x5              	BANKSEL	(_timer_1_ms + 1)
0048fa   5d41     subwf   0x41, 0, 0x1     	SUBWF	(_timer_1_ms + 1), W, B
0048fc   e102     bnz     0x4902           	BNZ	_00761_DS_
0048fe   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
004900   5d40     subwf   0x40, 0, 0x1     	SUBWF	_timer_1_ms, W, B
                                           _00761_DS_:
004902   e308     bnc     0x4914           	BNC	_00748_DS_
                                           ;	.line	885; meter_logger.c	diff = timer_1_ms - start_timer_1_ms;
004904   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004906   0105     movlb   0x5              	BANKSEL	_timer_1_ms
004908   5d40     subwf   0x40, 0, 0x1     	SUBWF	_timer_1_ms, W, B
00490a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00490c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
00490e   5941     subwfb  0x41, 0, 0x1     	SUBWFB	(_timer_1_ms + 1), W, B
004910   6e07     movwf   0x7, 0           	MOVWF	r0x07
004912   d007     bra     0x4922           	BRA	_00751_DS_
                                           _00748_DS_:
004914   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	889; meter_logger.c	diff = 0xffff - start_timer_1_ms + timer_1_ms;
004916   5140     movf    0x40, 0, 0x1     	MOVF	_timer_1_ms, W, B
004918   2404     addwf   0x4, 0, 0        	ADDWF	r0x04, W
00491a   6e06     movwf   0x6, 0           	MOVWF	r0x06
                                           ; removed redundant BANKSEL
00491c   5141     movf    0x41, 0, 0x1     	MOVF	(_timer_1_ms + 1), W, B
00491e   2005     addwfc  0x5, 0, 0        	ADDWFC	r0x05, W
004920   6e07     movwf   0x7, 0           	MOVWF	r0x07
                                           _00751_DS_:
                                           ;	.line	891; meter_logger.c	} while (diff < ms);
004922   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004924   5c07     subwf   0x7, 0, 0        	SUBWF	r0x07, W
004926   e102     bnz     0x492c           	BNZ	_00762_DS_
004928   5000     movf    0, 0, 0          	MOVF	r0x00, W
00492a   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
                                           _00762_DS_:
00492c   e3e4     bnc     0x48f6           	BNC	_00750_DS_
00492e   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
004930   f007
004932   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
004934   f006
004936   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
004938   f005
00493a   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00493c   f004
00493e   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004940   f003
004942   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004944   f002
004946   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004948   f001
00494a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00494c   f000
00494e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004950   ffd9
004952   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__isr_low_prio	code
                                           _isr_low_prio:
                                           ;	.line	845; meter_logger.c	static void isr_low_prio(void) __interrupt 2 {
0047ea   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
0047ec   ffe5
0047ee   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
0047f0   ffe5
0047f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0047f4   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
0047f6   ffe5
0047f8   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
0047fa   ffe5
0047fc   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
0047fe   ffe5
004800   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
004802   ffe5
004804   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
004806   ffe5
004808   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
00480a   ffe5
00480c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00480e   ffe5
004810   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004812   ffd9
004814   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004816   ffe5
004818   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00481a   ffe5
                                           ;	.line	848; meter_logger.c	if (PIR1bits.TMR1IF) {
00481c   a09e     btfss   0x9e, 0, 0       	BTFSS	_PIR1bits, 0
00481e   d024     bra     0x4868           	BRA	_00719_DS_
                                           ;	.line	849; meter_logger.c	TMR1H = (unsigned char)(TIMER1_RELOAD >> 8);    // 262,158ms @ 8MHz
004820   0ef8     movlw   0xf8             	MOVLW	0xf8
004822   6ecf     movwf   0xcf, 0          	MOVWF	_TMR1H
                                           ;	.line	850; meter_logger.c	TMR1L = (unsigned char)TIMER1_RELOAD;
004824   0e53     movlw   0x53             	MOVLW	0x53
004826   6ece     movwf   0xce, 0          	MOVWF	_TMR1L
                                           ;	.line	852; meter_logger.c	switch (led_flash.state) {
004828   c54c     movff   0x54c, 0         	MOVFF	_led_flash, r0x00
00482a   f000
00482c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00482e   6e01     movwf   0x1, 0           	MOVWF	r0x01
004830   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004832   e004     bz      0x483c           	BZ	_00713_DS_
004834   5000     movf    0, 0, 0          	MOVF	r0x00, W
004836   0a01     xorlw   0x1              	XORLW	0x01
004838   e006     bz      0x4846           	BZ	_00714_DS_
00483a   d011     bra     0x485e           	BRA	_00717_DS_
                                           _00713_DS_:
                                           ;	.line	854; meter_logger.c	LED_PIN = 1;
00483c   8881     bsf     0x81, 0x4, 0     	BSF	_PORTBbits, 4
                                           ;	.line	855; meter_logger.c	led_flash.state = LED_FLASH_RUNNING;
00483e   0e01     movlw   0x1              	MOVLW	0x01
004840   0105     movlb   0x5              	BANKSEL	_led_flash
004842   6f4c     movwf   0x4c, 0x1        	MOVWF	_led_flash, B
                                           ;	.line	856; meter_logger.c	break;
004844   d00c     bra     0x485e           	BRA	_00717_DS_
                                           _00714_DS_:
                                           ;	.line	858; meter_logger.c	if (led_flash.timer-- == 0) {
004846   c54d     movff   0x54d, 0         	MOVFF	(_led_flash + 1), r0x00
004848   f000
00484a   0400     decf    0, 0, 0          	DECF	r0x00, W
00484c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00484e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004850   0105     movlb   0x5              	BANKSEL	(_led_flash + 1)
004852   6f4d     movwf   0x4d, 0x1        	MOVWF	(_led_flash + 1), B
004854   5000     movf    0, 0, 0          	MOVF	r0x00, W
004856   e103     bnz     0x485e           	BNZ	_00717_DS_
                                           ;	.line	859; meter_logger.c	LED_PIN = 0;
004858   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	860; meter_logger.c	led_flash.state = LED_FLASH_STOPPED;
00485a   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
00485c   6f4c     movwf   0x4c, 0x1        	MOVWF	_led_flash, B
                                           _00717_DS_:
00485e   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	864; meter_logger.c	timer_1_ms++;
004860   3f40     incfsz  0x40, 0x1, 0x1   	INCFSZ	_timer_1_ms, F, B
004862   d001     bra     0x4866           	BRA	_31091_DS_
                                           ; removed redundant BANKSEL
004864   2b41     incf    0x41, 0x1, 0x1   	INCF	(_timer_1_ms + 1), F, B
                                           _31091_DS_:
                                           ;	.line	865; meter_logger.c	PIR1bits.TMR1IF = 0;    /* Clear the Timer Flag  */
004866   909e     bcf     0x9e, 0, 0       	BCF	_PIR1bits, 0
                                           _00719_DS_:
                                           ;	.line	869; meter_logger.c	if (usart_drdy()) {
004868   ec73     call    0x50e6, 0        	CALL	_usart_drdy
00486a   f028
00486c   6e00     movwf   0, 0             	MOVWF	r0x00
00486e   5000     movf    0, 0, 0          	MOVF	r0x00, W
004870   e006     bz      0x487e           	BZ	_00722_DS_
                                           ;	.line	871; meter_logger.c	c = usart_getc();
004872   ec87     call    0x4f0e, 0        	CALL	_usart_getc
004874   f027
004876   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	872; meter_logger.c	usart_putc(c);
004878   5000     movf    0, 0, 0          	MOVF	r0x00, W
00487a   ec57     call    0x50ae, 0        	CALL	_usart_putc
00487c   f028
                                           _00722_DS_:
00487e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004880   f001
004882   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004884   f000
004886   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004888   ffd9
00488a   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
00488c   fffb
00488e   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
004890   fffa
004892   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
004894   ffea
004896   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
004898   ffe9
00489a   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
00489c   fff4
00489e   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
0048a0   fff3
0048a2   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0048a4   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
0048a6   ffe0
0048a8   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
0048aa   ffd8
0048ac   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__isr_high_prio	code
                                           _isr_high_prio:
                                           ;	.line	486; meter_logger.c	static void isr_high_prio(void) __interrupt 1 {
002430   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
002432   ffe5
002434   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
002436   ffe5
002438   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00243a   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
00243c   ffe5
00243e   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
002440   ffe5
002442   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
002444   ffe5
002446   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
002448   ffe5
00244a   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
00244c   ffe5
00244e   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
002450   ffe5
002452   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002454   ffe5
002456   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002458   ffd9
00245a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00245c   ffe5
00245e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002460   ffe5
002462   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002464   ffe5
002466   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002468   ffe5
00246a   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00246c   ffe5
00246e   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002470   ffe5
                                           ;	.line	488; meter_logger.c	if (INTCONbits.INT0IF && INTCONbits.INT0IE) {
002472   a2f2     btfss   0xf2, 0x1, 0     	BTFSS	_INTCONbits, 1
002474   d147     bra     0x2704           	BRA	_00386_DS_
002476   a8f2     btfss   0xf2, 0x4, 0     	BTFSS	_INTCONbits, 4
002478   d145     bra     0x2704           	BRA	_00386_DS_
                                           ;	.line	489; meter_logger.c	timer_0 = (unsigned int)(TMR0L) | ((unsigned int)(TMR0H) << 8);
00247a   cfd6     movff   0xfd6, 0         	MOVFF	_TMR0L, r0x00
00247c   f000
00247e   6a01     clrf    0x1, 0           	CLRF	r0x01
002480   cfd7     movff   0xfd7, 0x2       	MOVFF	_TMR0H, r0x02
002482   f002
002484   6a03     clrf    0x3, 0           	CLRF	r0x03
002486   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002488   6e05     movwf   0x5, 0           	MOVWF	r0x05
00248a   6a04     clrf    0x4, 0           	CLRF	r0x04
00248c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00248e   1000     iorwf   0, 0, 0          	IORWF	r0x00, W
002490   0105     movlb   0x5              	BANKSEL	_timer_0
002492   6f46     movwf   0x46, 0x1        	MOVWF	_timer_0, B
002494   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002496   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
                                           ; removed redundant BANKSEL
002498   6f47     movwf   0x47, 0x1        	MOVWF	(_timer_0 + 1), B
00249a   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	490; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
00249c   5149     movf    0x49, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
00249e   6e00     movwf   0, 0             	MOVWF	r0x00
0024a0   6a01     clrf    0x1, 0           	CLRF	r0x01
0024a2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0024a4   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	491; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
0024a6   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0024a8   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
0024aa   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	493; meter_logger.c	switch (codec_type) {
0024ac   5151     movf    0x51, 0, 0x1     	MOVF	_codec_type, W, B
0024ae   0a01     xorlw   0x1              	XORLW	0x01
0024b0   e006     bz      0x24be           	BZ	_00347_DS_
                                           _00630_DS_:
0024b2   0105     movlb   0x5              	BANKSEL	_codec_type
0024b4   5151     movf    0x51, 0, 0x1     	MOVF	_codec_type, W, B
0024b6   0a02     xorlw   0x2              	XORLW	0x02
0024b8   e101     bnz     0x24bc           	BNZ	_00632_DS_
0024ba   d117     bra     0x26ea           	BRA	_00381_DS_
                                           _00632_DS_:
0024bc   d122     bra     0x2702           	BRA	_00384_DS_
                                           _00347_DS_:
                                           ;	.line	495; meter_logger.c	flash_led(100);
0024be   0e64     movlw   0x64             	MOVLW	0x64
0024c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0024c2   ecaf     call    0x4f5e, 0        	CALL	_flash_led
0024c4   f027
0024c6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	496; meter_logger.c	switch (testo_ir_proto.state) {
0024c8   c51d     movff   0x51d, 0         	MOVFF	_testo_ir_proto, r0x00
0024ca   f000
0024cc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0024ce   6e01     movwf   0x1, 0           	MOVWF	r0x01
0024d0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0024d2   e008     bz      0x24e4           	BZ	_00348_DS_
0024d4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0024d6   0a02     xorlw   0x2              	XORLW	0x02
0024d8   e00c     bz      0x24f2           	BZ	_00349_DS_
0024da   5000     movf    0, 0, 0          	MOVF	r0x00, W
0024dc   0a04     xorlw   0x4              	XORLW	0x04
0024de   e101     bnz     0x24e2           	BNZ	_00638_DS_
0024e0   d03b     bra     0x2558           	BRA	_00357_DS_
                                           _00638_DS_:
0024e2   d10f     bra     0x2702           	BRA	_00384_DS_
                                           _00348_DS_:
                                           ;	.line	498; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
0024e4   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	499; meter_logger.c	testo_ir_proto.start_bit_len = 1;
0024e6   0e01     movlw   0x1              	MOVLW	0x01
0024e8   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
0024ea   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	500; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
0024ec   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
0024ee   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
                                           ;	.line	501; meter_logger.c	break;
0024f0   d108     bra     0x2702           	BRA	_00384_DS_
                                           _00349_DS_:
0024f2   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	503; meter_logger.c	if ((TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < TICK + timer0_reload + TICK_ADJ)) {
0024f4   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0024f6   0f8f     addlw   0x8f             	ADDLW	0x8f
0024f8   6e00     movwf   0, 0             	MOVWF	r0x00
0024fa   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
0024fc   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0024fe   6e01     movwf   0x1, 0           	MOVWF	r0x01
002500   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002502   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
002504   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002506   e102     bnz     0x250c           	BNZ	_00639_DS_
                                           ; removed redundant BANKSEL
002508   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
00250a   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00639_DS_:
00250c   e21f     bc      0x254c           	BC	_00354_DS_
00250e   0105     movlb   0x5              	BANKSEL	_timer0_reload
002510   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002512   0f1f     addlw   0x1f             	ADDLW	0x1f
002514   6e00     movwf   0, 0             	MOVWF	r0x00
002516   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
002518   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
00251a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00251c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00251e   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002520   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
002522   e102     bnz     0x2528           	BNZ	_00640_DS_
002524   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002526   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00640_DS_:
002528   e211     bc      0x254c           	BC	_00354_DS_
                                           ;	.line	504; meter_logger.c	if (testo_ir_proto.start_bit_len < 2) {
00252a   0e02     movlw   0x2              	MOVLW	0x02
00252c   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
00252e   5d1f     subwf   0x1f, 0, 0x1     	SUBWF	(_testo_ir_proto + 2), W, B
002530   e206     bc      0x253e           	BC	_00351_DS_
                                           ;	.line	505; meter_logger.c	testo_ir_proto.start_bit_len++;
002532   c51f     movff   0x51f, 0         	MOVFF	(_testo_ir_proto + 2), r0x00
002534   f000
002536   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002538   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00253a   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
00253c   d0e2     bra     0x2702           	BRA	_00384_DS_
                                           _00351_DS_:
00253e   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	509; meter_logger.c	testo_ir_proto.data = 0;
002540   6b20     clrf    0x20, 0x1        	CLRF	(_testo_ir_proto + 3), B
                                           ; removed redundant BANKSEL
002542   6b21     clrf    0x21, 0x1        	CLRF	(_testo_ir_proto + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	510; meter_logger.c	testo_ir_proto.data_len = 0;
002544   6b22     clrf    0x22, 0x1        	CLRF	(_testo_ir_proto + 5), B
                                           ;	.line	511; meter_logger.c	testo_ir_proto.state = DATA_WAIT;
002546   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
002548   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
00254a   d0db     bra     0x2702           	BRA	_00384_DS_
                                           _00354_DS_:
                                           ;	.line	516; meter_logger.c	testo_ir_proto.start_bit_len = 1;
00254c   0e01     movlw   0x1              	MOVLW	0x01
00254e   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
002550   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	517; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
002552   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002554   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
                                           ;	.line	519; meter_logger.c	break;
002556   d0d5     bra     0x2702           	BRA	_00384_DS_
                                           _00357_DS_:
                                           ;	.line	521; meter_logger.c	if (testo_ir_proto.data_len <= 12) {
002558   0e0d     movlw   0xd              	MOVLW	0x0d
00255a   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
00255c   5d22     subwf   0x22, 0, 0x1     	SUBWF	(_testo_ir_proto + 5), W, B
00255e   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002560   d0d0     bra     0x2702           	BRA	_00384_DS_
002562   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	522; meter_logger.c	if (((TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < TICK + timer0_reload + TICK_ADJ)) || ((3 * TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < 3 * TICK + timer0_reload + TICK_ADJ))) {
002564   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002566   0f8f     addlw   0x8f             	ADDLW	0x8f
002568   6e00     movwf   0, 0             	MOVWF	r0x00
00256a   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
00256c   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
00256e   6e01     movwf   0x1, 0           	MOVWF	r0x01
002570   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002572   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
002574   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002576   e102     bnz     0x257c           	BNZ	_00643_DS_
                                           ; removed redundant BANKSEL
002578   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
00257a   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00643_DS_:
00257c   e20e     bc      0x259a           	BC	_00373_DS_
00257e   0105     movlb   0x5              	BANKSEL	_timer0_reload
002580   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002582   0f1f     addlw   0x1f             	ADDLW	0x1f
002584   6e00     movwf   0, 0             	MOVWF	r0x00
002586   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
002588   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
00258a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00258c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00258e   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002590   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
002592   e102     bnz     0x2598           	BNZ	_00644_DS_
002594   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002596   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00644_DS_:
002598   e31c     bnc     0x25d2           	BNC	_00368_DS_
                                           _00373_DS_:
00259a   0105     movlb   0x5              	BANKSEL	_timer0_reload
00259c   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00259e   0f3d     addlw   0x3d             	ADDLW	0x3d
0025a0   6e00     movwf   0, 0             	MOVWF	r0x00
0025a2   0e09     movlw   0x9              	MOVLW	0x09
                                           ; removed redundant BANKSEL
0025a4   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0025a6   6e01     movwf   0x1, 0           	MOVWF	r0x01
0025a8   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0025aa   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
0025ac   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0025ae   e102     bnz     0x25b4           	BNZ	_00645_DS_
                                           ; removed redundant BANKSEL
0025b0   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
0025b2   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00645_DS_:
0025b4   e235     bc      0x2620           	BC	_00369_DS_
0025b6   0105     movlb   0x5              	BANKSEL	_timer0_reload
0025b8   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0025ba   0fcd     addlw   0xcd             	ADDLW	0xcd
0025bc   6e00     movwf   0, 0             	MOVWF	r0x00
0025be   0e0a     movlw   0xa              	MOVLW	0x0a
                                           ; removed redundant BANKSEL
0025c0   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0025c2   6e01     movwf   0x1, 0           	MOVWF	r0x01
0025c4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0025c6   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0025c8   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
0025ca   e102     bnz     0x25d0           	BNZ	_00646_DS_
0025cc   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0025ce   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00646_DS_:
0025d0   e227     bc      0x2620           	BC	_00369_DS_
                                           _00368_DS_:
0025d2   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	524; meter_logger.c	if ((testo_ir_proto.data & 1) != 0) {
0025d4   a120     btfss   0x20, 0, 0x1     	BTFSS	(_testo_ir_proto + 3), 0
0025d6   d00a     bra     0x25ec           	BRA	_00359_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	526; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
0025d8   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0025da   6e00     movwf   0, 0             	MOVWF	r0x00
0025dc   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
0025de   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
0025e0   6e01     movwf   0x1, 0           	MOVWF	r0x01
0025e2   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0025e4   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
0025e6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0025e8   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
0025ea   d013     bra     0x2612           	BRA	_00360_DS_
                                           _00359_DS_:
0025ec   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	531; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
0025ee   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0025f0   6e00     movwf   0, 0             	MOVWF	r0x00
0025f2   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
0025f4   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
0025f6   6e01     movwf   0x1, 0           	MOVWF	r0x01
0025f8   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0025fa   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
0025fc   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0025fe   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           ;	.line	532; meter_logger.c	testo_ir_proto.data |= 1;	// and set bit 0
002600   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002602   1120     iorwf   0x20, 0, 0x1     	IORWF	(_testo_ir_proto + 3), W, B
002604   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002606   5121     movf    0x21, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
002608   6e01     movwf   0x1, 0           	MOVWF	r0x01
00260a   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00260c   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
00260e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002610   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           _00360_DS_:
                                           ;	.line	534; meter_logger.c	testo_ir_proto.data_len++;
002612   c522     movff   0x522, 0         	MOVFF	(_testo_ir_proto + 5), r0x00
002614   f000
002616   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002618   5000     movf    0, 0, 0          	MOVF	r0x00, W
00261a   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
00261c   6f22     movwf   0x22, 0x1        	MOVWF	(_testo_ir_proto + 5), B
00261e   d048     bra     0x26b0           	BRA	_00370_DS_
                                           _00369_DS_:
002620   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	536; meter_logger.c	else if ((2 * TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < 2 * TICK + timer0_reload + TICK_ADJ)) {
002622   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002624   0fe6     addlw   0xe6             	ADDLW	0xe6
002626   6e00     movwf   0, 0             	MOVWF	r0x00
002628   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
00262a   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
00262c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00262e   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002630   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
002632   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002634   e102     bnz     0x263a           	BNZ	_00649_DS_
                                           ; removed redundant BANKSEL
002636   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
002638   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00649_DS_:
00263a   e235     bc      0x26a6           	BC	_00365_DS_
00263c   0105     movlb   0x5              	BANKSEL	_timer0_reload
00263e   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002640   0f76     addlw   0x76             	ADDLW	0x76
002642   6e00     movwf   0, 0             	MOVWF	r0x00
002644   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
002646   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002648   6e01     movwf   0x1, 0           	MOVWF	r0x01
00264a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00264c   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
00264e   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
002650   e102     bnz     0x2656           	BNZ	_00650_DS_
002652   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002654   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00650_DS_:
002656   e227     bc      0x26a6           	BC	_00365_DS_
002658   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	538; meter_logger.c	if ((testo_ir_proto.data & 1) != 0) {
00265a   a120     btfss   0x20, 0, 0x1     	BTFSS	(_testo_ir_proto + 3), 0
00265c   d013     bra     0x2684           	BRA	_00362_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	540; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
00265e   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
002660   6e00     movwf   0, 0             	MOVWF	r0x00
002662   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
002664   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
002666   6e01     movwf   0x1, 0           	MOVWF	r0x01
002668   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00266a   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
00266c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00266e   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           ;	.line	541; meter_logger.c	testo_ir_proto.data |= 1;	// and set bit 0
002670   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002672   1120     iorwf   0x20, 0, 0x1     	IORWF	(_testo_ir_proto + 3), W, B
002674   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002676   5121     movf    0x21, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
002678   6e01     movwf   0x1, 0           	MOVWF	r0x01
00267a   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00267c   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
00267e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002680   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
002682   d00a     bra     0x2698           	BRA	_00363_DS_
                                           _00362_DS_:
002684   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	545; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
002686   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
002688   6e00     movwf   0, 0             	MOVWF	r0x00
00268a   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
00268c   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
00268e   6e01     movwf   0x1, 0           	MOVWF	r0x01
002690   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002692   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002694   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002696   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           _00363_DS_:
                                           ;	.line	548; meter_logger.c	testo_ir_proto.data_len++;
002698   c522     movff   0x522, 0         	MOVFF	(_testo_ir_proto + 5), r0x00
00269a   f000
00269c   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
00269e   5000     movf    0, 0, 0          	MOVF	r0x00, W
0026a0   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
0026a2   6f22     movwf   0x22, 0x1        	MOVWF	(_testo_ir_proto + 5), B
0026a4   d005     bra     0x26b0           	BRA	_00370_DS_
                                           _00365_DS_:
                                           ;	.line	553; meter_logger.c	testo_ir_proto.start_bit_len = 1;
0026a6   0e01     movlw   0x1              	MOVLW	0x01
0026a8   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
0026aa   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	554; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
0026ac   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
0026ae   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
                                           _00370_DS_:
0026b0   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
                                           ;	.line	556; meter_logger.c	if (testo_ir_proto.data_len == 12) {
0026b2   5122     movf    0x22, 0, 0x1     	MOVF	(_testo_ir_proto + 5), W, B
0026b4   0a0c     xorlw   0xc              	XORLW	0x0c
0026b6   e125     bnz     0x2702           	BNZ	_00384_DS_
                                           _00654_DS_:
0026b8   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 4)
                                           ;	.line	559; meter_logger.c	if (testo_valid_err_corr(testo_ir_proto.data & 0xffff)) {
0026ba   5121     movf    0x21, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
0026bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0026be   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0026c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0026c2   ec96     call    0x392c, 0        	CALL	_testo_valid_err_corr
0026c4   f01c
0026c6   6e00     movwf   0, 0             	MOVWF	r0x00
0026c8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0026ca   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0026cc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0026ce   e00a     bz      0x26e4           	BZ	_00375_DS_
0026d0   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	561; meter_logger.c	fifo_put(testo_ir_proto.data & 0xff);
0026d2   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0026d4   6e00     movwf   0, 0             	MOVWF	r0x00
0026d6   6a01     clrf    0x1, 0           	CLRF	r0x01
0026d8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0026da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0026dc   ec9e     call    0x413c, 0        	CALL	_fifo_put
0026de   f020
0026e0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	562; meter_logger.c	LED_PIN = 1;
0026e2   8881     bsf     0x81, 0x4, 0     	BSF	_PORTBbits, 4
                                           _00375_DS_:
0026e4   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	564; meter_logger.c	testo_ir_proto.state = INIT_STATE;
0026e6   6b1d     clrf    0x1d, 0x1        	CLRF	_testo_ir_proto, B
                                           ;	.line	569; meter_logger.c	break;
0026e8   d00c     bra     0x2702           	BRA	_00384_DS_
                                           _00381_DS_:
0026ea   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	571; meter_logger.c	switch (rs232_proto.state) {
0026ec   5123     movf    0x23, 0, 0x1     	MOVF	_rs232_proto, W, B
0026ee   0a02     xorlw   0x2              	XORLW	0x02
0026f0   e108     bnz     0x2702           	BNZ	_00384_DS_
                                           ;	.line	582; meter_logger.c	TMR0H = (unsigned char)(TIMER0_RS232_1200_START >> 8);
0026f2   0ef7     movlw   0xf7             	MOVLW	0xf7
0026f4   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ;	.line	583; meter_logger.c	TMR0L = (unsigned char)TIMER0_RS232_1200_START;
0026f6   6ad6     clrf    0xd6, 0          	CLRF	_TMR0L
                                           ;	.line	584; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int while we are using timer to receive data bits
0026f8   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	585; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
0026fa   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	586; meter_logger.c	rs232_proto.state = DATA_WAIT;
0026fc   0e04     movlw   0x4              	MOVLW	0x04
0026fe   0105     movlb   0x5              	BANKSEL	_rs232_proto
002700   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           _00384_DS_:
                                           ;	.line	591; meter_logger.c	INTCONbits.INT0IF = 0;	/* Clear Interrupt Flag */
002702   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           _00386_DS_:
                                           ;	.line	595; meter_logger.c	if (INTCONbits.TMR0IF && INTCONbits.TMR0IE) {
002704   a4f2     btfss   0xf2, 0x2, 0     	BTFSS	_INTCONbits, 2
002706   d14d     bra     0x29a2           	BRA	_00439_DS_
002708   aaf2     btfss   0xf2, 0x5, 0     	BTFSS	_INTCONbits, 5
00270a   d14b     bra     0x29a2           	BRA	_00439_DS_
00270c   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	597; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
00270e   5149     movf    0x49, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
002710   6e00     movwf   0, 0             	MOVWF	r0x00
002712   6a01     clrf    0x1, 0           	CLRF	r0x01
002714   5000     movf    0, 0, 0          	MOVF	r0x00, W
002716   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	598; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
002718   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00271a   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
                                           ;	.line	600; meter_logger.c	switch (codec_type) {
00271c   0e01     movlw   0x1              	MOVLW	0x01
00271e   0105     movlb   0x5              	BANKSEL	_codec_type
002720   5d51     subwf   0x51, 0, 0x1     	SUBWF	_codec_type, W, B
002722   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
002724   d13d     bra     0x29a0           	BRA	_00437_DS_
002726   0e06     movlw   0x6              	MOVLW	0x06
                                           ; removed redundant BANKSEL
002728   5d51     subwf   0x51, 0, 0x1     	SUBWF	_codec_type, W, B
00272a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00272c   d139     bra     0x29a0           	BRA	_00437_DS_
                                           ; removed redundant BANKSEL
00272e   0551     decf    0x51, 0, 0x1     	DECF	_codec_type, W, B
002730   6e00     movwf   0, 0             	MOVWF	r0x00
002732   6afa     clrf    0xfa, 0          	CLRF	PCLATH
002734   6afb     clrf    0xfb, 0          	CLRF	PCLATU
002736   3400     rlcf    0, 0, 0          	RLCF	r0x00, W
002738   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00273a   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
00273c   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00273e   0bfc     andlw   0xfc             	ANDLW	0xfc
002740   0f50     addlw   0x50             	ADDLW	LOW(_00660_DS_)
002742   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002744   0e27     movlw   0x27             	MOVLW	HIGH(_00660_DS_)
002746   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
002748   0e00     movlw   0                	MOVLW	UPPER(_00660_DS_)
00274a   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
00274c   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
00274e   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00660_DS_:
002750   efb2     goto    0x2764           	GOTO	_00388_DS_
002752   f013
002754   ef00     goto    0x2800           	GOTO	_00400_DS_
002756   f014
002758   efb7     goto    0x276e           	GOTO	_00389_DS_
00275a   f013
00275c   ef39     goto    0x2872           	GOTO	_00410_DS_
00275e   f014
002760   ef7b     goto    0x28f6           	GOTO	_00421_DS_
002762   f014
                                           _00388_DS_:
                                           ;	.line	602; meter_logger.c	T0CONbits.TMR0ON = 0;			// Stop TMR0
002764   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
002766   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	603; meter_logger.c	testo_ir_proto.state = INIT_STATE;
002768   6b1d     clrf    0x1d, 0x1        	CLRF	_testo_ir_proto, B
00276a   0003     sleep                    	sleep 
                                           ;	.line	605; meter_logger.c	break;
00276c   d119     bra     0x29a0           	BRA	_00437_DS_
                                           _00389_DS_:
                                           ;	.line	607; meter_logger.c	switch (rs232_proto.state) {
00276e   c523     movff   0x523, 0         	MOVFF	_rs232_proto, r0x00
002770   f000
002772   5000     movf    0, 0, 0          	MOVF	r0x00, W
002774   6e01     movwf   0x1, 0           	MOVWF	r0x01
002776   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002778   e00a     bz      0x278e           	BZ	_00390_DS_
00277a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00277c   0a03     xorlw   0x3              	XORLW	0x03
00277e   e011     bz      0x27a2           	BZ	_00393_DS_
002780   5000     movf    0, 0, 0          	MOVF	r0x00, W
002782   0a09     xorlw   0x9              	XORLW	0x09
002784   e033     bz      0x27ec           	BZ	_00397_DS_
002786   5000     movf    0, 0, 0          	MOVF	r0x00, W
002788   0a0a     xorlw   0xa              	XORLW	0x0a
00278a   e035     bz      0x27f6           	BZ	_00398_DS_
00278c   d109     bra     0x29a0           	BRA	_00437_DS_
                                           _00390_DS_:
00278e   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	609; meter_logger.c	if (rs232_proto.data_len == 8) {
002790   5126     movf    0x26, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
002792   0a08     xorlw   0x8              	XORLW	0x08
002794   e001     bz      0x2798           	BZ	_00670_DS_
002796   d104     bra     0x29a0           	BRA	_00437_DS_
                                           _00670_DS_:
                                           ;	.line	610; meter_logger.c	IR_LED_PIN = 1;		// inverted rs232 output on ir, start bit = ir light
002798   8281     bsf     0x81, 0x1, 0     	BSF	_PORTBbits, 1
                                           ;	.line	611; meter_logger.c	rs232_proto.state = START_BIT_SENT;
00279a   0e03     movlw   0x3              	MOVLW	0x03
00279c   0105     movlb   0x5              	BANKSEL	_rs232_proto
00279e   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	613; meter_logger.c	break;
0027a0   d0ff     bra     0x29a0           	BRA	_00437_DS_
                                           _00393_DS_:
                                           ;	.line	615; meter_logger.c	if (rs232_proto.data_len >= 1) {
0027a2   0e01     movlw   0x1              	MOVLW	0x01
0027a4   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
0027a6   5d26     subwf   0x26, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
0027a8   e31c     bnc     0x27e2           	BNC	_00395_DS_
                                           ;	.line	616; meter_logger.c	IR_LED_PIN = (rs232_proto.data & 1) == 0;	// inverted rs232 output on ir
0027aa   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
0027ac   1525     andwf   0x25, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
0027ae   6e00     movwf   0, 0             	MOVWF	r0x00
0027b0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0027b2   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
0027b4   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
0027b6   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0027b8   6a00     clrf    0, 0             	CLRF	r0x00
0027ba   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
0027bc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0027be   0b01     andlw   0x1              	ANDLW	0x01
0027c0   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
0027c2   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
0027c4   5081     movf    0x81, 0, 0       	MOVF	_PORTBbits, W
0027c6   0bfd     andlw   0xfd             	ANDLW	0xfd
0027c8   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
0027ca   6e81     movwf   0x81, 0          	MOVWF	_PORTBbits
                                           ; removed redundant BANKSEL
                                           ;	.line	617; meter_logger.c	rs232_proto.data = rs232_proto.data >> 1;
0027cc   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
0027ce   0b7f     andlw   0x7f             	ANDLW	0x7f
0027d0   6e00     movwf   0, 0             	MOVWF	r0x00
0027d2   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0027d4   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	618; meter_logger.c	rs232_proto.data_len--;
0027d6   c526     movff   0x526, 0         	MOVFF	(_rs232_proto + 3), r0x00
0027d8   f000
0027da   0600     decf    0, 0x1, 0        	DECF	r0x00, F
0027dc   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0027de   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
0027e0   d0df     bra     0x29a0           	BRA	_00437_DS_
                                           _00395_DS_:
                                           ;	.line	621; meter_logger.c	IR_LED_PIN = 0;								// inverted rs232 output on ir					
0027e2   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	622; meter_logger.c	rs232_proto.state = STOP_BIT_SENT;
0027e4   0e09     movlw   0x9              	MOVLW	0x09
0027e6   0105     movlb   0x5              	BANKSEL	_rs232_proto
0027e8   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	624; meter_logger.c	break;
0027ea   d0da     bra     0x29a0           	BRA	_00437_DS_
                                           _00397_DS_:
                                           ;	.line	626; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
0027ec   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	627; meter_logger.c	rs232_proto.state = STOP_BIT2_SENT;
0027ee   0e0a     movlw   0xa              	MOVLW	0x0a
0027f0   0105     movlb   0x5              	BANKSEL	_rs232_proto
0027f2   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	628; meter_logger.c	break;
0027f4   d0d5     bra     0x29a0           	BRA	_00437_DS_
                                           _00398_DS_:
                                           ;	.line	630; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
0027f6   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
0027f8   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	631; meter_logger.c	rs232_proto.state = INIT_STATE;
0027fa   6b23     clrf    0x23, 0x1        	CLRF	_rs232_proto, B
                                           ;	.line	632; meter_logger.c	T0CONbits.TMR0ON = 0;							// stop timer 0
0027fc   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	635; meter_logger.c	break;
0027fe   d0d0     bra     0x29a0           	BRA	_00437_DS_
                                           _00400_DS_:
                                           ;	.line	637; meter_logger.c	switch (rs232_proto.state) {
002800   c523     movff   0x523, 0         	MOVFF	_rs232_proto, r0x00
002802   f000
002804   5000     movf    0, 0, 0          	MOVF	r0x00, W
002806   0a04     xorlw   0x4              	XORLW	0x04
002808   e004     bz      0x2812           	BZ	_00401_DS_
00280a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00280c   0a07     xorlw   0x7              	XORLW	0x07
00280e   e022     bz      0x2854           	BZ	_00408_DS_
002810   d0c7     bra     0x29a0           	BRA	_00437_DS_
                                           _00401_DS_:
                                           ;	.line	639; meter_logger.c	rs232_proto.data_len++;
002812   c526     movff   0x526, 0         	MOVFF	(_rs232_proto + 3), r0x00
002814   f000
002816   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002818   5000     movf    0, 0, 0          	MOVF	r0x00, W
00281a   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
00281c   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	640; meter_logger.c	if (rs232_proto.data_len <= 8) {
00281e   0e09     movlw   0x9              	MOVLW	0x09
                                           ; removed redundant BANKSEL
002820   5d26     subwf   0x26, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002822   e214     bc      0x284c           	BC	_00406_DS_
                                           ;	.line	641; meter_logger.c	if (IR_PIN) {		
002824   a081     btfss   0x81, 0, 0       	BTFSS	_PORTBbits, 0
002826   d006     bra     0x2834           	BRA	_00403_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	643; meter_logger.c	rs232_proto.data >>= 1;
002828   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
00282a   0b7f     andlw   0x7f             	ANDLW	0x7f
00282c   6e00     movwf   0, 0             	MOVWF	r0x00
00282e   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002830   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
002832   d0b6     bra     0x29a0           	BRA	_00437_DS_
                                           _00403_DS_:
002834   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	655; meter_logger.c	rs232_proto.data >>= 1;
002836   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002838   0b7f     andlw   0x7f             	ANDLW	0x7f
00283a   6e00     movwf   0, 0             	MOVWF	r0x00
00283c   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00283e   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	656; meter_logger.c	rs232_proto.data |= 0x80;
002840   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
002842   1125     iorwf   0x25, 0, 0x1     	IORWF	(_rs232_proto + 2), W, B
002844   6e00     movwf   0, 0             	MOVWF	r0x00
002846   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002848   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
00284a   d0aa     bra     0x29a0           	BRA	_00437_DS_
                                           _00406_DS_:
                                           ;	.line	678; meter_logger.c	rs232_proto.state = STOP_BIT_WAIT;
00284c   0e07     movlw   0x7              	MOVLW	0x07
00284e   0105     movlb   0x5              	BANKSEL	_rs232_proto
002850   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	680; meter_logger.c	break;
002852   d0a6     bra     0x29a0           	BRA	_00437_DS_
                                           _00408_DS_:
002854   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	686; meter_logger.c	fifo_put(rs232_proto.data);
002856   5125     movf    0x25, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
002858   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00285a   ec9e     call    0x413c, 0        	CALL	_fifo_put
00285c   f020
00285e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002860   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	687; meter_logger.c	rs232_proto.data = 0;
002862   6b25     clrf    0x25, 0x1        	CLRF	(_rs232_proto + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	688; meter_logger.c	rs232_proto.data_len = 0;
002864   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	689; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
002866   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002868   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	690; meter_logger.c	T0CONbits.TMR0ON = 0;
00286a   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	691; meter_logger.c	INTCONbits.INT0IF = 0;		// dont enter ext int now
00286c   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           ;	.line	692; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int again
00286e   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	695; meter_logger.c	break;
002870   d097     bra     0x29a0           	BRA	_00437_DS_
                                           _00410_DS_:
                                           ;	.line	697; meter_logger.c	switch (fsk_proto.state) {
002872   c500     movff   0x500, 0         	MOVFF	_fsk_proto, r0x00
002874   f000
002876   5000     movf    0, 0, 0          	MOVF	r0x00, W
002878   0a04     xorlw   0x4              	XORLW	0x04
00287a   e004     bz      0x2884           	BZ	_00411_DS_
00287c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00287e   0a07     xorlw   0x7              	XORLW	0x07
002880   e02e     bz      0x28de           	BZ	_00419_DS_
002882   d08e     bra     0x29a0           	BRA	_00437_DS_
                                           _00411_DS_:
                                           ;	.line	699; meter_logger.c	fsk_proto.data_len++;						
002884   c50d     movff   0x50d, 0         	MOVFF	(_fsk_proto + 13), r0x00
002886   f000
002888   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
00288a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00288c   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
00288e   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
                                           ;	.line	700; meter_logger.c	if (fsk_proto.data_len <= 8) {
002890   0e09     movlw   0x9              	MOVLW	0x09
                                           ; removed redundant BANKSEL
002892   5d0d     subwf   0xd, 0, 0x1      	SUBWF	(_fsk_proto + 13), W, B
002894   e220     bc      0x28d6           	BC	_00417_DS_
                                           ;	.line	701; meter_logger.c	if ((fsk_proto.diff > 340) && (fsk_proto.diff < 476)) {
002896   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002898   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
00289a   e102     bnz     0x28a0           	BNZ	_00684_DS_
00289c   0e55     movlw   0x55             	MOVLW	0x55
                                           ; removed redundant BANKSEL
00289e   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00684_DS_:
0028a0   e30e     bnc     0x28be           	BNC	_00413_DS_
0028a2   0e01     movlw   0x1              	MOVLW	0x01
0028a4   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 2)
0028a6   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
0028a8   e102     bnz     0x28ae           	BNZ	_00685_DS_
0028aa   0edc     movlw   0xdc             	MOVLW	0xdc
                                           ; removed redundant BANKSEL
0028ac   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00685_DS_:
0028ae   e207     bc      0x28be           	BC	_00413_DS_
0028b0   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	704; meter_logger.c	fsk_proto.data >>= 1;
0028b2   410c     rrncf   0xc, 0, 0x1      	RRNCF	(_fsk_proto + 12), W, B
0028b4   0b7f     andlw   0x7f             	ANDLW	0x7f
0028b6   6e00     movwf   0, 0             	MOVWF	r0x00
0028b8   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0028ba   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
0028bc   d071     bra     0x29a0           	BRA	_00437_DS_
                                           _00413_DS_:
0028be   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	709; meter_logger.c	fsk_proto.data >>= 1;
0028c0   410c     rrncf   0xc, 0, 0x1      	RRNCF	(_fsk_proto + 12), W, B
0028c2   0b7f     andlw   0x7f             	ANDLW	0x7f
0028c4   6e00     movwf   0, 0             	MOVWF	r0x00
0028c6   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0028c8   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
                                           ;	.line	710; meter_logger.c	fsk_proto.data |= 0x80;
0028ca   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
0028cc   110c     iorwf   0xc, 0, 0x1      	IORWF	(_fsk_proto + 12), W, B
0028ce   6e00     movwf   0, 0             	MOVWF	r0x00
0028d0   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0028d2   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
0028d4   d065     bra     0x29a0           	BRA	_00437_DS_
                                           _00417_DS_:
                                           ;	.line	718; meter_logger.c	fsk_proto.state = STOP_BIT_WAIT;
0028d6   0e07     movlw   0x7              	MOVLW	0x07
0028d8   0105     movlb   0x5              	BANKSEL	_fsk_proto
0028da   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	720; meter_logger.c	break;
0028dc   d061     bra     0x29a0           	BRA	_00437_DS_
                                           _00419_DS_:
0028de   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	723; meter_logger.c	fifo_put(fsk_proto.data);
0028e0   510c     movf    0xc, 0, 0x1      	MOVF	(_fsk_proto + 12), W, B
0028e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0028e4   ec9e     call    0x413c, 0        	CALL	_fifo_put
0028e6   f020
0028e8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0028ea   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	724; meter_logger.c	fsk_proto.data = 0;
0028ec   6b0c     clrf    0xc, 0x1         	CLRF	(_fsk_proto + 12), B
                                           ;	.line	725; meter_logger.c	fsk_proto.state = START_BIT_WAIT;
0028ee   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
0028f0   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	727; meter_logger.c	INTCONbits.TMR0IE = 0;						
0028f2   9af2     bcf     0xf2, 0x5, 0     	BCF	_INTCONbits, 5
                                           ;	.line	730; meter_logger.c	break;
0028f4   d055     bra     0x29a0           	BRA	_00437_DS_
                                           _00421_DS_:
                                           ;	.line	732; meter_logger.c	switch (fsk_proto.state) {
0028f6   c500     movff   0x500, 0         	MOVFF	_fsk_proto, r0x00
0028f8   f000
0028fa   5000     movf    0, 0, 0          	MOVF	r0x00, W
0028fc   6e01     movwf   0x1, 0           	MOVWF	r0x01
0028fe   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002900   e00f     bz      0x2920           	BZ	_00422_DS_
002902   5000     movf    0, 0, 0          	MOVF	r0x00, W
002904   0a01     xorlw   0x1              	XORLW	0x01
002906   e015     bz      0x2932           	BZ	_00425_DS_
002908   5000     movf    0, 0, 0          	MOVF	r0x00, W
00290a   0a03     xorlw   0x3              	XORLW	0x03
00290c   e019     bz      0x2940           	BZ	_00426_DS_
00290e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002910   0a05     xorlw   0x5              	XORLW	0x05
002912   e101     bnz     0x2916           	BNZ	_00694_DS_
002914   d039     bra     0x2988           	BRA	_00434_DS_
                                           _00694_DS_:
002916   5000     movf    0, 0, 0          	MOVF	r0x00, W
002918   0a09     xorlw   0x9              	XORLW	0x09
00291a   e101     bnz     0x291e           	BNZ	_00696_DS_
00291c   d03c     bra     0x2996           	BRA	_00435_DS_
                                           _00696_DS_:
00291e   d040     bra     0x29a0           	BRA	_00437_DS_
                                           _00422_DS_:
002920   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	735; meter_logger.c	if (fsk_proto.data_len == 8) {
002922   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002924   0a08     xorlw   0x8              	XORLW	0x08
002926   e103     bnz     0x292e           	BNZ	_00424_DS_
                                           ;	.line	736; meter_logger.c	fsk_proto.state = IDLE;
002928   0e01     movlw   0x1              	MOVLW	0x01
00292a   0105     movlb   0x5              	BANKSEL	_fsk_proto
00292c   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           _00424_DS_:
                                           ;	.line	739; meter_logger.c	DEBUG_PIN = 0;
00292e   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	741; meter_logger.c	break;
002930   d037     bra     0x29a0           	BRA	_00437_DS_
                                           _00425_DS_:
                                           ;	.line	743; meter_logger.c	send_fsk_low();
002932   ec75     call    0x18ea, 0        	CALL	_send_fsk_low
002934   f00c
                                           ;	.line	744; meter_logger.c	fsk_proto.state = START_BIT_SENT;
002936   0e03     movlw   0x3              	MOVLW	0x03
002938   0105     movlb   0x5              	BANKSEL	_fsk_proto
00293a   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	746; meter_logger.c	DEBUG_PIN = 1;
00293c   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
                                           ;	.line	748; meter_logger.c	break;
00293e   d030     bra     0x29a0           	BRA	_00437_DS_
                                           _00426_DS_:
                                           ;	.line	750; meter_logger.c	if (fsk_proto.data_len--) {
002940   c50d     movff   0x50d, 0         	MOVFF	(_fsk_proto + 13), r0x00
002942   f000
002944   0400     decf    0, 0, 0          	DECF	r0x00, W
002946   6e01     movwf   0x1, 0           	MOVWF	r0x01
002948   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00294a   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
00294c   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
00294e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002950   e015     bz      0x297c           	BZ	_00431_DS_
                                           ;	.line	751; meter_logger.c	if (fsk_proto.data & (0x80 >> fsk_proto.data_len)) {
002952   0e80     movlw   0x80             	MOVLW	0x80
002954   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002956   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002958   e005     bz      0x2964           	BZ	_00699_DS_
00295a   6ce8     negf    0xe8, 0          	NEGF	WREG
00295c   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00700_DS_:
00295e   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
002960   0f01     addlw   0x1              	ADDLW	0x01
002962   e3fd     bnc     0x295e           	BNC	_00700_DS_
                                           _00699_DS_:
002964   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
002966   510c     movf    0xc, 0, 0x1      	MOVF	(_fsk_proto + 12), W, B
002968   1600     andwf   0, 0x1, 0        	ANDWF	r0x00, F
00296a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00296c   e004     bz      0x2976           	BZ	_00428_DS_
                                           ;	.line	752; meter_logger.c	send_fsk_high();
00296e   ec95     call    0xd2a, 0         	CALL	_send_fsk_high
002970   f006
                                           ;	.line	754; meter_logger.c	DEBUG_PIN = 0;
002972   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
002974   d003     bra     0x297c           	BRA	_00431_DS_
                                           _00428_DS_:
                                           ;	.line	758; meter_logger.c	send_fsk_low();
002976   ec75     call    0x18ea, 0        	CALL	_send_fsk_low
002978   f00c
                                           ;	.line	760; meter_logger.c	DEBUG_PIN = 1;
00297a   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
                                           _00431_DS_:
00297c   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	764; meter_logger.c	if (fsk_proto.data_len == 0) {
00297e   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002980   e10f     bnz     0x29a0           	BNZ	_00437_DS_
                                           ;	.line	765; meter_logger.c	fsk_proto.state = DATA_SENT;
002982   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
002984   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	767; meter_logger.c	break;
002986   d00c     bra     0x29a0           	BRA	_00437_DS_
                                           _00434_DS_:
                                           ;	.line	769; meter_logger.c	send_fsk_high();
002988   ec95     call    0xd2a, 0         	CALL	_send_fsk_high
00298a   f006
                                           ;	.line	770; meter_logger.c	fsk_proto.state = STOP_BIT_SENT;
00298c   0e09     movlw   0x9              	MOVLW	0x09
00298e   0105     movlb   0x5              	BANKSEL	_fsk_proto
002990   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	772; meter_logger.c	DEBUG_PIN = 0;
002992   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	774; meter_logger.c	break;
002994   d005     bra     0x29a0           	BRA	_00437_DS_
                                           _00435_DS_:
                                           ;	.line	776; meter_logger.c	send_fsk_high();
002996   ec95     call    0xd2a, 0         	CALL	_send_fsk_high
002998   f006
00299a   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	777; meter_logger.c	fsk_proto.state = INIT_STATE;
00299c   6b00     clrf    0, 0x1           	CLRF	_fsk_proto, B
                                           ;	.line	779; meter_logger.c	DEBUG_PIN = 0;
00299e   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           _00437_DS_:
                                           ;	.line	786; meter_logger.c	INTCONbits.TMR0IF = 0;
0029a0   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           _00439_DS_:
                                           ;	.line	789; meter_logger.c	if (PIR2bits.CMIF && PIE2bits.CMIE) {
0029a2   aca1     btfss   0xa1, 0x6, 0     	BTFSS	_PIR2bits, 6
0029a4   d076     bra     0x2a92           	BRA	_00458_DS_
0029a6   aca0     btfss   0xa0, 0x6, 0     	BTFSS	_PIE2bits, 6
0029a8   d074     bra     0x2a92           	BRA	_00458_DS_
                                           ;	.line	791; meter_logger.c	if (CMCONbits.C1OUT) {		// rising edge
0029aa   acb4     btfss   0xb4, 0x6, 0     	BTFSS	_CMCONbits, 6
0029ac   d070     bra     0x2a8e           	BRA	_00453_DS_
                                           ;	.line	792; meter_logger.c	timer_0 = (unsigned int)(TMR0L) | ((unsigned int)(TMR0H) << 8);
0029ae   cfd6     movff   0xfd6, 0         	MOVFF	_TMR0L, r0x00
0029b0   f000
0029b2   6a01     clrf    0x1, 0           	CLRF	r0x01
0029b4   cfd7     movff   0xfd7, 0x2       	MOVFF	_TMR0H, r0x02
0029b6   f002
0029b8   6a03     clrf    0x3, 0           	CLRF	r0x03
0029ba   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0029bc   6e05     movwf   0x5, 0           	MOVWF	r0x05
0029be   6a04     clrf    0x4, 0           	CLRF	r0x04
0029c0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0029c2   1000     iorwf   0, 0, 0          	IORWF	r0x00, W
0029c4   0105     movlb   0x5              	BANKSEL	_timer_0
0029c6   6f46     movwf   0x46, 0x1        	MOVWF	_timer_0, B
0029c8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0029ca   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
                                           ; removed redundant BANKSEL
0029cc   6f47     movwf   0x47, 0x1        	MOVWF	(_timer_0 + 1), B
                                           ;	.line	797; meter_logger.c	DEBUG_PIN = 1;
0029ce   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
0029d0   0105     movlb   0x5              	BANKSEL	_last_timer_0
                                           ;	.line	799; meter_logger.c	fsk_proto.diff = timer_0 - last_timer_0;
0029d2   514a     movf    0x4a, 0, 0x1     	MOVF	_last_timer_0, W, B
0029d4   0105     movlb   0x5              	BANKSEL	_timer_0
0029d6   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
0029d8   6e00     movwf   0, 0             	MOVWF	r0x00
0029da   0105     movlb   0x5              	BANKSEL	(_last_timer_0 + 1)
0029dc   514b     movf    0x4b, 0, 0x1     	MOVF	(_last_timer_0 + 1), W, B
0029de   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0029e0   5947     subwfb  0x47, 0, 0x1     	SUBWFB	(_timer_0 + 1), W, B
0029e2   6e01     movwf   0x1, 0           	MOVWF	r0x01
0029e4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0029e6   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
0029e8   6f01     movwf   0x1, 0x1         	MOVWF	(_fsk_proto + 1), B
0029ea   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0029ec   6f02     movwf   0x2, 0x1         	MOVWF	(_fsk_proto + 2), B
                                           ;	.line	800; meter_logger.c	last_timer_0 = timer_0;
0029ee   c546     movff   0x546, 0x54a     	MOVFF	_timer_0, _last_timer_0
0029f0   f54a
0029f2   c547     movff   0x547, 0x54b     	MOVFF	(_timer_0 + 1), (_last_timer_0 + 1)
0029f4   f54b
                                           ;	.line	802; meter_logger.c	if ((fsk_proto.diff > 340) && (fsk_proto.diff < 476)) {
0029f6   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
0029f8   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
0029fa   e102     bnz     0x2a00           	BNZ	_00702_DS_
0029fc   0e55     movlw   0x55             	MOVLW	0x55
                                           ; removed redundant BANKSEL
0029fe   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00702_DS_:
002a00   e330     bnc     0x2a62           	BNC	_00449_DS_
002a02   0e01     movlw   0x1              	MOVLW	0x01
002a04   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 2)
002a06   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
002a08   e102     bnz     0x2a0e           	BNZ	_00703_DS_
002a0a   0edc     movlw   0xdc             	MOVLW	0xdc
                                           ; removed redundant BANKSEL
002a0c   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00703_DS_:
002a0e   e229     bc      0x2a62           	BC	_00449_DS_
002a10   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
                                           ;	.line	803; meter_logger.c	fsk_proto.low_count += fsk_proto.diff;
002a12   5101     movf    0x1, 0, 0x1      	MOVF	(_fsk_proto + 1), W, B
                                           ; removed redundant BANKSEL
002a14   2505     addwf   0x5, 0, 0x1      	ADDWF	(_fsk_proto + 5), W, B
002a16   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002a18   5102     movf    0x2, 0, 0x1      	MOVF	(_fsk_proto + 2), W, B
                                           ; removed redundant BANKSEL
002a1a   2106     addwfc  0x6, 0, 0x1      	ADDWFC	(_fsk_proto + 6), W, B
002a1c   6e01     movwf   0x1, 0           	MOVWF	r0x01
002a1e   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002a20   6f05     movwf   0x5, 0x1         	MOVWF	(_fsk_proto + 5), B
002a22   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002a24   6f06     movwf   0x6, 0x1         	MOVWF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	804; meter_logger.c	if (fsk_proto.state == START_BIT_WAIT) {
002a26   5100     movf    0, 0, 0x1        	MOVF	_fsk_proto, W, B
002a28   0a02     xorlw   0x2              	XORLW	0x02
002a2a   e132     bnz     0x2a90           	BNZ	_00454_DS_
                                           ;	.line	805; meter_logger.c	if (fsk_proto.low_count >= 800) {								// start bit received
002a2c   0e03     movlw   0x3              	MOVLW	0x03
002a2e   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 6)
002a30   5d06     subwf   0x6, 0, 0x1      	SUBWF	(_fsk_proto + 6), W, B
002a32   e102     bnz     0x2a38           	BNZ	_00706_DS_
002a34   0e20     movlw   0x20             	MOVLW	0x20
                                           ; removed redundant BANKSEL
002a36   5d05     subwf   0x5, 0, 0x1      	SUBWF	(_fsk_proto + 5), W, B
                                           _00706_DS_:
002a38   e32b     bnc     0x2a90           	BNC	_00454_DS_
002a3a   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	807; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
002a3c   5149     movf    0x49, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
002a3e   6e00     movwf   0, 0             	MOVWF	r0x00
002a40   6a01     clrf    0x1, 0           	CLRF	r0x01
002a42   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a44   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	808; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
002a46   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002a48   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
002a4a   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 5)
                                           ;	.line	809; meter_logger.c	fsk_proto.low_count = 0;
002a4c   6b05     clrf    0x5, 0x1         	CLRF	(_fsk_proto + 5), B
                                           ; removed redundant BANKSEL
002a4e   6b06     clrf    0x6, 0x1         	CLRF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	810; meter_logger.c	fsk_proto.high_count = 0;
002a50   6b07     clrf    0x7, 0x1         	CLRF	(_fsk_proto + 7), B
                                           ; removed redundant BANKSEL
002a52   6b08     clrf    0x8, 0x1         	CLRF	(_fsk_proto + 8), B
                                           ; removed redundant BANKSEL
                                           ;	.line	812; meter_logger.c	fsk_proto.data_len = 0;
002a54   6b0d     clrf    0xd, 0x1         	CLRF	(_fsk_proto + 13), B
                                           ; removed redundant BANKSEL
                                           ;	.line	813; meter_logger.c	fsk_proto.data = 0;
002a56   6b0c     clrf    0xc, 0x1         	CLRF	(_fsk_proto + 12), B
                                           ;	.line	814; meter_logger.c	fsk_proto.state = DATA_WAIT;
002a58   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
002a5a   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	815; meter_logger.c	INTCONbits.TMR0IF = 0;		// clear flag so it dont enter isr now
002a5c   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	816; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
002a5e   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
002a60   d017     bra     0x2a90           	BRA	_00454_DS_
                                           _00449_DS_:
002a62   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	822; meter_logger.c	if (fsk_proto.state == START_BIT_WAIT) {
002a64   5100     movf    0, 0, 0x1        	MOVF	_fsk_proto, W, B
002a66   0a02     xorlw   0x2              	XORLW	0x02
002a68   e106     bnz     0x2a76           	BNZ	_00446_DS_
                                           _00708_DS_:
002a6a   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 5)
                                           ;	.line	823; meter_logger.c	fsk_proto.low_count = 0;
002a6c   6b05     clrf    0x5, 0x1         	CLRF	(_fsk_proto + 5), B
                                           ; removed redundant BANKSEL
002a6e   6b06     clrf    0x6, 0x1         	CLRF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	824; meter_logger.c	fsk_proto.high_count = 0;
002a70   6b07     clrf    0x7, 0x1         	CLRF	(_fsk_proto + 7), B
                                           ; removed redundant BANKSEL
002a72   6b08     clrf    0x8, 0x1         	CLRF	(_fsk_proto + 8), B
002a74   d00d     bra     0x2a90           	BRA	_00454_DS_
                                           _00446_DS_:
002a76   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
                                           ;	.line	827; meter_logger.c	fsk_proto.high_count += fsk_proto.diff;
002a78   5101     movf    0x1, 0, 0x1      	MOVF	(_fsk_proto + 1), W, B
                                           ; removed redundant BANKSEL
002a7a   2507     addwf   0x7, 0, 0x1      	ADDWF	(_fsk_proto + 7), W, B
002a7c   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002a7e   5102     movf    0x2, 0, 0x1      	MOVF	(_fsk_proto + 2), W, B
                                           ; removed redundant BANKSEL
002a80   2108     addwfc  0x8, 0, 0x1      	ADDWFC	(_fsk_proto + 8), W, B
002a82   6e01     movwf   0x1, 0           	MOVWF	r0x01
002a84   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002a86   6f07     movwf   0x7, 0x1         	MOVWF	(_fsk_proto + 7), B
002a88   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002a8a   6f08     movwf   0x8, 0x1         	MOVWF	(_fsk_proto + 8), B
002a8c   d001     bra     0x2a90           	BRA	_00454_DS_
                                           _00453_DS_:
                                           ;	.line	833; meter_logger.c	DEBUG_PIN = 0;
002a8e   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           _00454_DS_:
                                           ;	.line	837; meter_logger.c	PIR2bits.CMIF = 0;
002a90   9ca1     bcf     0xa1, 0x6, 0     	BCF	_PIR2bits, 6
                                           _00458_DS_:
002a92   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002a94   f005
002a96   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002a98   f004
002a9a   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002a9c   f003
002a9e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002aa0   f002
002aa2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002aa4   f001
002aa6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002aa8   f000
002aaa   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002aac   ffd9
002aae   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
002ab0   fffb
002ab2   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
002ab4   fffa
002ab6   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
002ab8   ffea
002aba   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
002abc   ffe9
002abe   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
002ac0   fff4
002ac2   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
002ac4   fff3
002ac6   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002ac8   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
002aca   ffe0
002acc   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
002ace   ffd8
002ad0   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           ___str_0:
002ad2   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x67, 0x65
002ad4   654d     cpfsgt  0x4d, 0x1        
002ad6   6574     cpfsgt  0x74, 0x1        
002ad8   4c72     dcfsnz  0x72, 0, 0       
002ada   676f     tstfsz  0x6f, 0x1        
002adc   6567     cpfsgt  0x67, 0x1        
002ade   2e72     decfsz  0x72, 0x1, 0     	DB	0x72, 0x2e, 0x2e, 0x2e, 0x20, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x20
002ae0   2e2e     decfsz  0x2e, 0x1, 0     
002ae2   7320     btg     0x20, 0x1, 0x1   
002ae4   7265     btg     0x65, 0x1, 0     
002ae6   6169     cpfslt  0x69, 0x1        
002ae8   206c     addwfc  0x6c, 0, 0       
002aea   6f77     movwf   0x77, 0x1        	DB	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x0a, 0x0d, 0x00
002aec   6b72     clrf    0x72, 0x1        
002aee   6e69     movwf   0x69, 0          
002af0   0a67     xorlw   0x67             
002af2   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_1:
002af4   7250     btg     0x50, 0x1, 0     	DB	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x3a, 0x20, 0x70
002af6   636f     cpfseq  0x6f, 0x1        
002af8   7365     btg     0x65, 0x1, 0x1   
002afa   6f73     movwf   0x73, 0x1        
002afc   3a72     swapf   0x72, 0x1, 0     
002afe   7020     btg     0x20, 0, 0       
002b00   6369     cpfseq  0x69, 0x1        	DB	0x69, 0x63, 0x31, 0x38, 0x66, 0x32, 0x35, 0x35, 0x30, 0x0a, 0x0d, 0x00
002b02   3831     swapf   0x31, 0, 0       
002b04   3266     rrcf    0x66, 0x1, 0     
002b06   3535     rlcf    0x35, 0, 0x1     
002b08   0a30     xorlw   0x30             
002b0a   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_2:
002b0c   7250     btg     0x50, 0x1, 0     	DB	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x3a, 0x20, 0x70
002b0e   636f     cpfseq  0x6f, 0x1        
002b10   7365     btg     0x65, 0x1, 0x1   
002b12   6f73     movwf   0x73, 0x1        
002b14   3a72     swapf   0x72, 0x1, 0     
002b16   7020     btg     0x20, 0, 0       
002b18   6369     cpfseq  0x69, 0x1        	DB	0x69, 0x63, 0x31, 0x38, 0x66, 0x32, 0x35, 0x35, 0x33, 0x0a, 0x0d, 0x00
002b1a   3831     swapf   0x31, 0, 0       
002b1c   3266     rrcf    0x66, 0x1, 0     
002b1e   3535     rlcf    0x35, 0, 0x1     
002b20   0a33     xorlw   0x33             
002b22   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_3:
002b24   7250     btg     0x50, 0x1, 0     	DB	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x3a, 0x20, 0x75
002b26   636f     cpfseq  0x6f, 0x1        
002b28   7365     btg     0x65, 0x1, 0x1   
002b2a   6f73     movwf   0x73, 0x1        
002b2c   3a72     swapf   0x72, 0x1, 0     
002b2e   7520     btg     0x20, 0x2, 0x1   
002b30   736e     btg     0x6e, 0x1, 0x1   	DB	0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x2c, 0x20
002b32   7075     btg     0x75, 0, 0       
002b34   6f70     movwf   0x70, 0x1        
002b36   7472     btg     0x72, 0x2, 0     
002b38   6465     cpfsgt  0x65, 0          
002b3a   202c     addwfc  0x2c, 0, 0       
002b3c   6564     cpfsgt  0x64, 0x1        	DB	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x69, 0x64, 0x3a, 0x20, 0x30
002b3e   6976     setf    0x76, 0x1        
002b40   6563     cpfsgt  0x63, 0x1        
002b42   6920     setf    0x20, 0x1        
002b44   3a64     swapf   0x64, 0x1, 0     
002b46   3020     rrcf    0x20, 0, 0       
002b48   2578     addwf   0x78, 0, 0x1     	DB	0x78, 0x25, 0x30, 0x34, 0x78, 0x0a, 0x0d, 0x00
002b4a   3430     rlcf    0x30, 0, 0       
002b4c   0a78     xorlw   0x78             
002b4e   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_4:
002b50   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x70, 0x72, 0x69, 0x6e
002b52   7270     btg     0x70, 0x1, 0     
002b54   7365     btg     0x65, 0x1, 0x1   
002b56   2073     addwfc  0x73, 0, 0       
002b58   7270     btg     0x70, 0x1, 0     
002b5a   6e69     movwf   0x69, 0          
002b5c   2074     addwfc  0x74, 0, 0       	DB	0x74, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x0a, 0x0d
002b5e   6e6f     movwf   0x6f, 0          
002b60   7420     btg     0x20, 0x2, 0     
002b62   7365     btg     0x65, 0x1, 0x1   
002b64   6f74     movwf   0x74, 0x1        
002b66   0d0a     mullw   0xa              
002b68   0000     nop                      	DB	0x00
                                           ; ; Starting pCode block
                                           ___str_5:
002b6a   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x64, 0x6f, 0x6e, 0x65, 0x20, 0x72, 0x65, 0x63, 0x65, 0x69
002b6c   6f64     movwf   0x64, 0x1        
002b6e   656e     cpfsgt  0x6e, 0x1        
002b70   7220     btg     0x20, 0x1, 0     
002b72   6365     cpfseq  0x65, 0x1        
002b74   6965     setf    0x65, 0x1        
002b76   6976     setf    0x76, 0x1        	DB	0x76, 0x69, 0x6e, 0x67, 0x20, 0x2d, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x69
002b78   676e     tstfsz  0x6e, 0x1        
002b7a   2d20     decfsz  0x20, 0, 0x1     
002b7c   7320     btg     0x20, 0x1, 0x1   
002b7e   6e65     movwf   0x65, 0          
002b80   6964     setf    0x64, 0x1        
002b82   676e     tstfsz  0x6e, 0x1        	DB	0x6e, 0x67, 0x20, 0x76, 0x69, 0x61, 0x20, 0x73, 0x65, 0x72, 0x69, 0x61
002b84   7620     btg     0x20, 0x3, 0     
002b86   6169     cpfslt  0x69, 0x1        
002b88   7320     btg     0x20, 0x1, 0x1   
002b8a   7265     btg     0x65, 0x1, 0     
002b8c   6169     cpfslt  0x69, 0x1        
002b8e   2f6c     decfsz  0x6c, 0x1, 0x1   	DB	0x6c, 0x2f, 0x66, 0x73, 0x6b, 0x0a, 0x0d, 0x00
002b90   7366     btg     0x66, 0x1, 0x1   
002b92   0a6b     xorlw   0x6b             
002b94   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_6:
002b96   6425     cpfsgt  0x25, 0          	DB	0x25, 0x64, 0x20, 0x00
002b98   0020     dw      0x20             
                                           ; ; Starting pCode block
                                           ___str_7:
002b9a   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6f
002b9c   6177     cpfslt  0x77, 0x1        
002b9e   7469     btg     0x69, 0x2, 0     
002ba0   6e69     movwf   0x69, 0          
002ba2   2067     addwfc  0x67, 0, 0       
002ba4   6f66     movwf   0x66, 0x1        
002ba6   2072     addwfc  0x72, 0, 0       	DB	0x72, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e
002ba8   656e     cpfsgt  0x6e, 0x1        
002baa   2077     addwfc  0x77, 0, 0       
002bac   6f63     movwf   0x63, 0x1        
002bae   6d6d     negf    0x6d, 0x1        
002bb0   6e61     movwf   0x61, 0          
002bb2   0a64     xorlw   0x64             	DB	0x64, 0x0a, 0x0d, 0x00
002bb4   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_8:
002bb6   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x74, 0x65, 0x73, 0x74, 0x20
002bb8   6365     cpfseq  0x65, 0x1        
002bba   6f68     movwf   0x68, 0x1        
002bbc   7420     btg     0x20, 0x2, 0     
002bbe   7365     btg     0x65, 0x1, 0x1   
002bc0   2074     addwfc  0x74, 0, 0       
002bc2   202d     addwfc  0x2d, 0, 0       	DB	0x2d, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x20, 0x73, 0x6f, 0x6d, 0x65, 0x20
002bc4   6573     cpfsgt  0x73, 0x1        
002bc6   646e     cpfsgt  0x6e, 0          
002bc8   7320     btg     0x20, 0x1, 0x1   
002bca   6d6f     negf    0x6f, 0x1        
002bcc   2065     addwfc  0x65, 0, 0       
002bce   6164     cpfslt  0x64, 0x1        	DB	0x64, 0x61, 0x74, 0x61, 0x0a, 0x0d, 0x00
002bd0   6174     cpfslt  0x74, 0x1        
002bd2   0d0a     mullw   0xa              
002bd4   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_9:
002bd6   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002bd8   616b     cpfslt  0x6b, 0x1        
002bda   736d     btg     0x6d, 0x1, 0x1   
002bdc   7274     btg     0x74, 0x1, 0     
002bde   7075     btg     0x75, 0, 0       
002be0   2d20     decfsz  0x20, 0, 0x1     
002be2   7320     btg     0x20, 0x1, 0x1   	DB	0x20, 0x73, 0x65, 0x6e, 0x64, 0x20, 0x6b, 0x6d, 0x70, 0x20, 0x66, 0x72
002be4   6e65     movwf   0x65, 0          
002be6   2064     addwfc  0x64, 0, 0       
002be8   6d6b     negf    0x6b, 0x1        
002bea   2070     addwfc  0x70, 0, 0       
002bec   7266     btg     0x66, 0x1, 0     
002bee   6d61     negf    0x61, 0x1        	DB	0x61, 0x6d, 0x65, 0x20, 0x64, 0x61, 0x74, 0x61, 0x0a, 0x0d, 0x00
002bf0   2065     addwfc  0x65, 0, 0       
002bf2   6164     cpfslt  0x64, 0x1        
002bf4   6174     cpfslt  0x74, 0x1        
002bf6   0d0a     mullw   0xa              
002bf8   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_10:
002bfa   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002bfc   616b     cpfslt  0x6b, 0x1        
002bfe   736d     btg     0x6d, 0x1, 0x1   
002c00   7274     btg     0x74, 0x1, 0     
002c02   7075     btg     0x75, 0, 0       
002c04   2d20     decfsz  0x20, 0, 0x1     
002c06   6b20     clrf    0x20, 0x1        	DB	0x20, 0x6b, 0x6d, 0x70, 0x20, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x20, 0x72
002c08   706d     btg     0x6d, 0, 0       
002c0a   6620     tstfsz  0x20, 0          
002c0c   6172     cpfslt  0x72, 0x1        
002c0e   656d     cpfsgt  0x6d, 0x1        
002c10   7220     btg     0x20, 0x1, 0     
002c12   6365     cpfseq  0x65, 0x1        	DB	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x3a, 0x0a, 0x0d, 0x00
002c14   6965     setf    0x65, 0x1        
002c16   6576     cpfsgt  0x76, 0x1        
002c18   3a64     swapf   0x64, 0x1, 0     
002c1a   0d0a     mullw   0xa              
002c1c   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_11:
002c1e   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002c20   616b     cpfslt  0x6b, 0x1        
002c22   736d     btg     0x6d, 0x1, 0x1   
002c24   7274     btg     0x74, 0x1, 0     
002c26   7075     btg     0x75, 0, 0       
002c28   2d20     decfsz  0x20, 0, 0x1     
002c2a   6b20     clrf    0x20, 0x1        	DB	0x20, 0x6b, 0x6d, 0x70, 0x20, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x20, 0x72
002c2c   706d     btg     0x6d, 0, 0       
002c2e   7220     btg     0x20, 0x1, 0     
002c30   7065     btg     0x65, 0, 0       
002c32   796c     btg     0x6c, 0x4, 0x1   
002c34   7220     btg     0x20, 0x1, 0     
002c36   6365     cpfseq  0x65, 0x1        	DB	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x3a, 0x0a, 0x0d, 0x00
002c38   6965     setf    0x65, 0x1        
002c3a   6576     cpfsgt  0x76, 0x1        
002c3c   3a64     swapf   0x64, 0x1, 0     
002c3e   0d0a     mullw   0xa              
002c40   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_12:
002c42   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6e, 0x6f, 0x20, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x20, 0x66
002c44   6f6e     movwf   0x6e, 0x1        
002c46   7220     btg     0x20, 0x1, 0     
002c48   7065     btg     0x65, 0, 0       
002c4a   796c     btg     0x6c, 0x4, 0x1   
002c4c   6620     tstfsz  0x20, 0          
002c4e   6f72     movwf   0x72, 0x1        	DB	0x72, 0x6f, 0x6d, 0x20, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x0a, 0x0d, 0x00
002c50   206d     addwfc  0x6d, 0, 0       
002c52   656d     cpfsgt  0x6d, 0x1        
002c54   6574     cpfsgt  0x74, 0x1        
002c56   0a72     xorlw   0x72             
002c58   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_13:
002c5a   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002c5c   616b     cpfslt  0x6b, 0x1        
002c5e   736d     btg     0x6d, 0x1, 0x1   
002c60   7274     btg     0x74, 0x1, 0     
002c62   7075     btg     0x75, 0, 0       
002c64   2d20     decfsz  0x20, 0, 0x1     
002c66   7320     btg     0x20, 0x1, 0x1   	DB	0x20, 0x73, 0x65, 0x6e, 0x64, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63
002c68   6e65     movwf   0x65, 0          
002c6a   2064     addwfc  0x64, 0, 0       
002c6c   756d     btg     0x6d, 0x2, 0x1   
002c6e   746c     btg     0x6c, 0x2, 0     
002c70   6369     cpfseq  0x69, 0x1        
002c72   6c61     negf    0x61, 0          	DB	0x61, 0x6c, 0x20, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x20, 0x64, 0x61, 0x74
002c74   6620     tstfsz  0x20, 0          
002c76   6172     cpfslt  0x72, 0x1        
002c78   656d     cpfsgt  0x6d, 0x1        
002c7a   6420     cpfsgt  0x20, 0          
002c7c   7461     btg     0x61, 0x2, 0     
002c7e   0a61     xorlw   0x61             	DB	0x61, 0x0a, 0x0d, 0x00
002c80   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_14:
002c82   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002c84   616b     cpfslt  0x6b, 0x1        
002c86   736d     btg     0x6d, 0x1, 0x1   
002c88   7274     btg     0x74, 0x1, 0     
002c8a   7075     btg     0x75, 0, 0       
002c8c   2d20     decfsz  0x20, 0, 0x1     
002c8e   6d20     negf    0x20, 0x1        	DB	0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x20, 0x66, 0x72
002c90   6c75     negf    0x75, 0          
002c92   6974     setf    0x74, 0x1        
002c94   6163     cpfslt  0x63, 0x1        
002c96   206c     addwfc  0x6c, 0, 0       
002c98   7266     btg     0x66, 0x1, 0     
002c9a   6d61     negf    0x61, 0x1        	DB	0x61, 0x6d, 0x65, 0x20, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64
002c9c   2065     addwfc  0x65, 0, 0       
002c9e   6572     cpfsgt  0x72, 0x1        
002ca0   6563     cpfsgt  0x63, 0x1        
002ca2   7669     btg     0x69, 0x3, 0     
002ca4   6465     cpfsgt  0x65, 0          
002ca6   0a3a     xorlw   0x3a             	DB	0x3a, 0x0a, 0x0d, 0x00
002ca8   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_15:
002caa   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002cac   616b     cpfslt  0x6b, 0x1        
002cae   736d     btg     0x6d, 0x1, 0x1   
002cb0   7274     btg     0x74, 0x1, 0     
002cb2   7075     btg     0x75, 0, 0       
002cb4   2d20     decfsz  0x20, 0, 0x1     
002cb6   6d20     negf    0x20, 0x1        	DB	0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x20, 0x72, 0x65
002cb8   6c75     negf    0x75, 0          
002cba   6974     setf    0x74, 0x1        
002cbc   6163     cpfslt  0x63, 0x1        
002cbe   206c     addwfc  0x6c, 0, 0       
002cc0   6572     cpfsgt  0x72, 0x1        
002cc2   6c70     negf    0x70, 0          	DB	0x70, 0x6c, 0x79, 0x20, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64
002cc4   2079     addwfc  0x79, 0, 0       
002cc6   6572     cpfsgt  0x72, 0x1        
002cc8   6563     cpfsgt  0x63, 0x1        
002cca   7669     btg     0x69, 0x3, 0     
002ccc   6465     cpfsgt  0x65, 0          
002cce   0a3a     xorlw   0x3a             	DB	0x3a, 0x0a, 0x0d, 0x00
002cd0   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_16:
002cd2   6142     cpfslt  0x42, 0x1        	DB	0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x3a, 0x20, 0x25, 0x64, 0x6d
002cd4   7474     btg     0x74, 0x2, 0     
002cd6   7265     btg     0x65, 0x1, 0     
002cd8   3a79     swapf   0x79, 0x1, 0     
002cda   2520     addwf   0x20, 0, 0x1     
002cdc   6d64     negf    0x64, 0x1        
002cde   0a56     xorlw   0x56             	DB	0x56, 0x0a, 0x0d, 0x00
002ce0   000d     tblwt   *+               
                                           
                                           
                                           ; Statistics:
                                           ; code size:	15012 (0x3aa4) bytes (11.45%)
                                           ;           	 7506 (0x1d52) words
                                           ; udata size:	 1198 (0x04ae) bytes (66.85%)
                                           ; access size:	   14 (0x000e) bytes
                                           
                                           
                                           	end
