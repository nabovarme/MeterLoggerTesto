gplink-1.2.0 #980 (Oct 25 2013)
Copyright (c) 1998-2013 gputils project
Listing File Generated: 6-20-2014  19:38:41
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.3.0 #8604 (Oct 27 2013) (Mac OS X x86_64)
                                           ; This file was generated Fri Jun 20 19:38:40 2014
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f2550
                                           	radix	dec
                                           	CONFIG	PLLDIV=2
                                           	CONFIG	CPUDIV=OSC1_PLL2
                                           	CONFIG	USBDIV=1
                                           	CONFIG	FOSC=INTOSC_XT
                                           	CONFIG	FCMEN=OFF
                                           	CONFIG	IESO=OFF
                                           	CONFIG	PWRT=OFF
                                           	CONFIG	BOR=OFF
                                           	CONFIG	BORV=3
                                           	CONFIG	VREGEN=OFF
                                           	CONFIG	WDT=OFF
                                           	CONFIG	WDTPS=32768
                                           	CONFIG	CCP2MX=ON
                                           	CONFIG	PBADEN=OFF
                                           	CONFIG	LPT1OSC=OFF
                                           	CONFIG	MCLRE=ON
                                           	CONFIG	STVREN=ON
                                           	CONFIG	LVP=ON
                                           	CONFIG	XINST=OFF
                                           	CONFIG	CP0=OFF
                                           	CONFIG	CP1=OFF
                                           	CONFIG	CP2=OFF
                                           	CONFIG	CP3=OFF
                                           	CONFIG	CPB=OFF
                                           	CONFIG	CPD=OFF
                                           	CONFIG	WRT0=OFF
                                           	CONFIG	WRT1=OFF
                                           	CONFIG	WRT2=OFF
                                           	CONFIG	WRT3=OFF
                                           	CONFIG	WRTC=OFF
                                           	CONFIG	WRTB=OFF
                                           	CONFIG	WRTD=OFF
                                           	CONFIG	EBTR0=OFF
                                           	CONFIG	EBTR1=OFF
                                           	CONFIG	EBTR2=OFF
                                           	CONFIG	EBTR3=OFF
                                           	CONFIG	EBTRB=OFF
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_c
                                           	global	_sleep_ms
                                           	global	_init_system
                                           	global	_get_dev_id
                                           	global	_my_usart_open
                                           	global	_reverse
                                           	global	_testo_valid_err_corr
                                           	global	_testo_ir_enable
                                           	global	_testo_ir_disable
                                           	global	_rs232_8n2_tx_enable
                                           	global	_rs232_8n2_tx_disable
                                           	global	_rs232_8n2_rx_enable
                                           	global	_rs232_8n2_rx_disable
                                           	global	_rs232_8n2_tx_byte
                                           	global	_rs232_7e1_tx_enable
                                           	global	_rs232_7e1_tx_disable
                                           	global	_rs232_7e1_rx_enable
                                           	global	_rs232_7e1_rx_disable
                                           	global	_rs232_7e1_tx_byte
                                           	global	_fsk_tx_enable
                                           	global	_fsk_tx_disable
                                           	global	_fsk_rx_enable
                                           	global	_fsk_rx_disable
                                           	global	_send_fsk_high
                                           	global	_send_fsk_low
                                           	global	_fsk_tx_byte
                                           	global	_fifo_in_use
                                           	global	_fifo_put
                                           	global	_fifo_get
                                           	global	_fifo_snoop
                                           	global	_get_battery_level
                                           	global	_flash_led
                                           	global	__debug
                                           	global	__debug2
                                           	global	_timer_0
                                           	global	_last_timer_0
                                           	global	_timer_1_ms
                                           	global	_timer0_reload
                                           	global	_debug_buffer
                                           	global	_fifo_head
                                           	global	_fifo_tail
                                           	global	_fifo_buffer_0
                                           	global	_fifo_buffer_1
                                           	global	_fifo_buffer_2
                                           	global	_fifo_buffer_3
                                           	global	_codec_type
                                           	global	_led_flash
                                           	global	_testo_ir_proto
                                           	global	_rs232_proto
                                           	global	_fsk_proto
                                           	global	_main
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrput1
                                           	extern	_UFRMLbits
                                           	extern	_UFRMHbits
                                           	extern	_UIRbits
                                           	extern	_UIEbits
                                           	extern	_UEIRbits
                                           	extern	_UEIEbits
                                           	extern	_USTATbits
                                           	extern	_UCONbits
                                           	extern	_UADDRbits
                                           	extern	_UCFGbits
                                           	extern	_UEP0bits
                                           	extern	_UEP1bits
                                           	extern	_UEP2bits
                                           	extern	_UEP3bits
                                           	extern	_UEP4bits
                                           	extern	_UEP5bits
                                           	extern	_UEP6bits
                                           	extern	_UEP7bits
                                           	extern	_UEP8bits
                                           	extern	_UEP9bits
                                           	extern	_UEP10bits
                                           	extern	_UEP11bits
                                           	extern	_UEP12bits
                                           	extern	_UEP13bits
                                           	extern	_UEP14bits
                                           	extern	_UEP15bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_EECON1bits
                                           	extern	_RCSTAbits
                                           	extern	_TXSTAbits
                                           	extern	_T3CONbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_CCP1ASbits
                                           	extern	_ECCP1ASbits
                                           	extern	_CCP1DELbits
                                           	extern	_ECCP1DELbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCTLbits
                                           	extern	_CCP2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_UFRM
                                           	extern	_UFRML
                                           	extern	_UFRMH
                                           	extern	_UIR
                                           	extern	_UIE
                                           	extern	_UEIR
                                           	extern	_UEIE
                                           	extern	_USTAT
                                           	extern	_UCON
                                           	extern	_UADDR
                                           	extern	_UCFG
                                           	extern	_UEP0
                                           	extern	_UEP1
                                           	extern	_UEP2
                                           	extern	_UEP3
                                           	extern	_UEP4
                                           	extern	_UEP5
                                           	extern	_UEP6
                                           	extern	_UEP7
                                           	extern	_UEP8
                                           	extern	_UEP9
                                           	extern	_UEP10
                                           	extern	_UEP11
                                           	extern	_UEP12
                                           	extern	_UEP13
                                           	extern	_UEP14
                                           	extern	_UEP15
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_OSCTUNE
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_RCSTA
                                           	extern	_TXSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_CCP1AS
                                           	extern	_ECCP1AS
                                           	extern	_CCP1DEL
                                           	extern	_ECCP1DEL
                                           	extern	_BAUDCON
                                           	extern	_BAUDCTL
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_sprintf
                                           	extern	_usart_drdy
                                           	extern	_usart_getc
                                           	extern	_usart_putc
                                           	extern	_usart_puts
                                           	extern	_adc_open
                                           	extern	_adc_close
                                           	extern	_adc_conv
                                           	extern	_adc_busy
                                           	extern	_adc_read
                                           	extern	_adc_setchannel
                                           	extern	__mullong
                                           	extern	__divulong
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           r0x0d	res	1
                                           
                                           udata_meter_logger_0	udata
                                           _c	res	1
                                           
                                           udata_meter_logger_1	udata
                                           _timer_1_ms	res	2
                                           
                                           udata_meter_logger_2	udata
                                           _fifo_head	res	2
                                           
                                           udata_meter_logger_3	udata
                                           _fifo_tail	res	2
                                           
                                           udata_meter_logger_4	udata
                                           _debug_buffer	res	128
                                           
                                           udata_meter_logger_5	udata
                                           _main_cmd_1_90	res	1
                                           
                                           udata_meter_logger_6	udata
                                           _main_sub_cmd_1_90	res	1
                                           
                                           udata_meter_logger_7	udata
                                           _timer_0	res	2
                                           
                                           udata_meter_logger_8	udata
                                           _timer0_reload	res	2
                                           
                                           udata_meter_logger_9	udata
                                           _testo_ir_proto	res	6
                                           
                                           udata_meter_logger_10	udata
                                           _rs232_proto	res	6
                                           
                                           udata_meter_logger_11	udata
                                           _fsk_proto	res	16
                                           
                                           udata_meter_logger_12	udata
                                           _last_timer_0	res	2
                                           
                                           udata_meter_logger_13	udata
                                           _codec_type	res	1
                                           
                                           udata_meter_logger_14	udata
                                           _led_flash	res	2
                                           
                                           udata_meter_logger_15	udata
                                           _fifo_buffer_0	res	256
                                           
                                           udata_meter_logger_16	udata
                                           _fifo_buffer_1	res	256
                                           
                                           udata_meter_logger_17	udata
                                           _fifo_buffer_2	res	256
                                           
                                           udata_meter_logger_18	udata
                                           _fifo_buffer_3	res	256
                                           
                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_meter_logger_ivec_0x1_isr_high_prio	code	0X000008
                                           ivec_0x1_isr_high_prio:
000008   ef05     goto    0x260a           	GOTO	_isr_high_prio
00000a   f013
                                           
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_meter_logger_ivec_0x2_isr_low_prio	code	0X000018
                                           ivec_0x2_isr_low_prio:
000018   ef37     goto    0x4a6e           	GOTO	_isr_low_prio
00001a   f025
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_meter_logger__main	code
                                           _main:
                                           ;	.line	120; meter_logger.c	OSCCONbits.SCS = 0x10;
00001c   50d3     movf    0xd3, 0, 0       	MOVF	_OSCCONbits, W
00001e   0bfc     andlw   0xfc             	ANDLW	0xfc
000020   6ed3     movwf   0xd3, 0          	MOVWF	_OSCCONbits
                                           ;	.line	122; meter_logger.c	OSCCONbits.IRCF = 0x7;	// 8 MHz
000022   50d3     movf    0xd3, 0, 0       	MOVF	_OSCCONbits, W
000024   0b8f     andlw   0x8f             	ANDLW	0x8f
000026   0970     iorlw   0x70             	IORLW	0x70
000028   6ed3     movwf   0xd3, 0          	MOVWF	_OSCCONbits
00002a   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	125; meter_logger.c	timer_1_ms = 0;
00002c   6b40     clrf    0x40, 0x1        	CLRF	_timer_1_ms, B
                                           ; removed redundant BANKSEL
00002e   6b41     clrf    0x41, 0x1        	CLRF	(_timer_1_ms + 1), B
000030   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	127; meter_logger.c	fifo_head = 0;
000032   6b42     clrf    0x42, 0x1        	CLRF	_fifo_head, B
                                           ; removed redundant BANKSEL
000034   6b43     clrf    0x43, 0x1        	CLRF	(_fifo_head + 1), B
000036   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	128; meter_logger.c	fifo_tail = 0;
000038   6b44     clrf    0x44, 0x1        	CLRF	_fifo_tail, B
                                           ; removed redundant BANKSEL
00003a   6b45     clrf    0x45, 0x1        	CLRF	(_fifo_tail + 1), B
                                           ;	.line	130; meter_logger.c	init_system();	
00003c   ec13     call    0x4e26, 0        	CALL	_init_system
00003e   f027
                                           ;	.line	131; meter_logger.c	sleep_ms(100);
000040   0e00     movlw   0                	MOVLW	0x00
000042   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000044   0e64     movlw   0x64             	MOVLW	0x64
000046   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000048   ec99     call    0x4b32, 0        	CALL	_sleep_ms
00004a   f025
00004c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00004e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	138; meter_logger.c	get_battery_level();
000050   ecb9     call    0x3772, 0        	CALL	_get_battery_level
000052   f01b
                                           ;	.line	141; meter_logger.c	dev_id = get_dev_id();
000054   ecac     call    0x4d58, 0        	CALL	_get_dev_id
000056   f026
000058   6e00     movwf   0, 0             	MOVWF	r0x00
00005a   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00005c   f001
                                           ;	.line	143; meter_logger.c	if (dev_id == 0x1240) {
00005e   5000     movf    0, 0, 0          	MOVF	r0x00, W
000060   0a40     xorlw   0x40             	XORLW	0x40
000062   e103     bnz     0x6a             	BNZ	_00325_DS_
000064   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000066   0a12     xorlw   0x12             	XORLW	0x12
000068   e001     bz      0x6c             	BZ	_00326_DS_
                                           _00325_DS_:
00006a   d01d     bra     0xa6             	BRA	_00109_DS_
                                           _00326_DS_:
                                           ;	.line	144; meter_logger.c	sprintf(debug_buffer, "Processor: pic18f2550\n\r");
00006c   0e00     movlw   0                	MOVLW	UPPER(__str_0)
00006e   6e04     movwf   0x4, 0           	MOVWF	r0x04
000070   0e2e     movlw   0x2e             	MOVLW	HIGH(__str_0)
000072   6e03     movwf   0x3, 0           	MOVWF	r0x03
000074   0ed0     movlw   0xd0             	MOVLW	LOW(__str_0)
000076   6e02     movwf   0x2, 0           	MOVWF	r0x02
000078   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00007a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00007c   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00007e   6e05     movwf   0x5, 0           	MOVWF	r0x05
000080   0e80     movlw   0x80             	MOVLW	0x80
000082   6e07     movwf   0x7, 0           	MOVWF	r0x07
000084   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000086   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000088   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00008a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00008c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00008e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000090   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000092   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000094   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000096   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000098   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00009a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00009c   ecfb     call    0x45f6, 0        	CALL	_sprintf
00009e   f022
0000a0   0e06     movlw   0x6              	MOVLW	0x06
0000a2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0000a4   d044     bra     0x12e            	BRA	_00110_DS_
                                           _00109_DS_:
                                           ;	.line	146; meter_logger.c	else if (dev_id == 0x2a40) {
0000a6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0000a8   0a40     xorlw   0x40             	XORLW	0x40
0000aa   e103     bnz     0xb2             	BNZ	_00327_DS_
0000ac   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0000ae   0a2a     xorlw   0x2a             	XORLW	0x2a
0000b0   e001     bz      0xb4             	BZ	_00328_DS_
                                           _00327_DS_:
0000b2   d01d     bra     0xee             	BRA	_00106_DS_
                                           _00328_DS_:
                                           ;	.line	147; meter_logger.c	sprintf(debug_buffer, "Processor: pic18f2553\n\r");
0000b4   0e00     movlw   0                	MOVLW	UPPER(__str_1)
0000b6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0000b8   0e2e     movlw   0x2e             	MOVLW	HIGH(__str_1)
0000ba   6e03     movwf   0x3, 0           	MOVWF	r0x03
0000bc   0ee8     movlw   0xe8             	MOVLW	LOW(__str_1)
0000be   6e02     movwf   0x2, 0           	MOVWF	r0x02
0000c0   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0000c2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0000c4   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0000c6   6e05     movwf   0x5, 0           	MOVWF	r0x05
0000c8   0e80     movlw   0x80             	MOVLW	0x80
0000ca   6e07     movwf   0x7, 0           	MOVWF	r0x07
0000cc   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0000ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000d0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0000d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000d4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0000d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000d8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0000da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000dc   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0000de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000e0   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0000e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000e4   ecfb     call    0x45f6, 0        	CALL	_sprintf
0000e6   f022
0000e8   0e06     movlw   0x6              	MOVLW	0x06
0000ea   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0000ec   d020     bra     0x12e            	BRA	_00110_DS_
                                           _00106_DS_:
                                           ;	.line	150; meter_logger.c	sprintf(debug_buffer, "Processor: unsupported, device id: 0x%04x\n\r", dev_id);
0000ee   0e00     movlw   0                	MOVLW	UPPER(__str_2)
0000f0   6e04     movwf   0x4, 0           	MOVWF	r0x04
0000f2   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_2)
0000f4   6e03     movwf   0x3, 0           	MOVWF	r0x03
0000f6   0e00     movlw   0                	MOVLW	LOW(__str_2)
0000f8   6e02     movwf   0x2, 0           	MOVWF	r0x02
0000fa   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0000fc   6e06     movwf   0x6, 0           	MOVWF	r0x06
0000fe   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000100   6e05     movwf   0x5, 0           	MOVWF	r0x05
000102   0e80     movlw   0x80             	MOVLW	0x80
000104   6e07     movwf   0x7, 0           	MOVWF	r0x07
000106   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000108   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00010a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00010c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00010e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000110   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000112   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000114   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000116   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000118   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00011a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00011c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00011e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000120   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000122   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000124   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000126   ecfb     call    0x45f6, 0        	CALL	_sprintf
000128   f022
00012a   0e08     movlw   0x8              	MOVLW	0x08
00012c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _00110_DS_:
                                           ;	.line	152; meter_logger.c	usart_puts(debug_buffer);
00012e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000130   6e01     movwf   0x1, 0           	MOVWF	r0x01
000132   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000134   6e00     movwf   0, 0             	MOVWF	r0x00
000136   0e80     movlw   0x80             	MOVLW	0x80
000138   6e02     movwf   0x2, 0           	MOVWF	r0x02
00013a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00013c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00013e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000140   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000142   5000     movf    0, 0, 0          	MOVF	r0x00, W
000144   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000146   ec70     call    0x4ce0, 0        	CALL	_usart_puts
000148   f026
00014a   0e03     movlw   0x3              	MOVLW	0x03
00014c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	155; meter_logger.c	fsk_rx_enable();
00014e   ece5     call    0x4dca, 0        	CALL	_fsk_rx_enable
000150   f026
                                           _00168_DS_:
                                           ;	.line	157; meter_logger.c	if (fifo_get(&cmd)) {
000152   0e05     movlw   0x5              	MOVLW	HIGH(_main_cmd_1_90)
000154   6e01     movwf   0x1, 0           	MOVWF	r0x01
000156   0e4f     movlw   0x4f             	MOVLW	LOW(_main_cmd_1_90)
000158   6e00     movwf   0, 0             	MOVWF	r0x00
00015a   0e80     movlw   0x80             	MOVLW	0x80
00015c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00015e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000160   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000162   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000164   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000166   5000     movf    0, 0, 0          	MOVF	r0x00, W
000168   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00016a   ec84     call    0x4108, 0        	CALL	_fifo_get
00016c   f020
00016e   6e00     movwf   0, 0             	MOVWF	r0x00
000170   0e03     movlw   0x3              	MOVLW	0x03
000172   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000174   5000     movf    0, 0, 0          	MOVF	r0x00, W
000176   e0ed     bz      0x152            	BZ	_00168_DS_
                                           ;	.line	158; meter_logger.c	switch (cmd) {
000178   0efb     movlw   0xfb             	MOVLW	0xfb
00017a   0105     movlb   0x5              	BANKSEL	_main_cmd_1_90
00017c   5d4f     subwf   0x4f, 0, 0x1     	SUBWF	_main_cmd_1_90, W, B
00017e   e3e9     bnc     0x152            	BNC	_00168_DS_
000180   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
000182   254f     addwf   0x4f, 0, 0x1     	ADDWF	_main_cmd_1_90, W, B
000184   6e00     movwf   0, 0             	MOVWF	r0x00
000186   6afa     clrf    0xfa, 0          	CLRF	PCLATH
000188   6afb     clrf    0xfb, 0          	CLRF	PCLATU
00018a   3400     rlcf    0, 0, 0          	RLCF	r0x00, W
00018c   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00018e   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
000190   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
000192   0bfc     andlw   0xfc             	ANDLW	0xfc
000194   0fa4     addlw   0xa4             	ADDLW	LOW(_00330_DS_)
000196   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000198   0e01     movlw   0x1              	MOVLW	HIGH(_00330_DS_)
00019a   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
00019c   0e00     movlw   0                	MOVLW	UPPER(_00330_DS_)
00019e   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0001a0   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0001a2   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00330_DS_:
0001a4   ef79     goto    0xef2            	GOTO	_00163_DS_
0001a6   f007
0001a8   ef39     goto    0xa72            	GOTO	_00145_DS_
0001aa   f005
0001ac   eff9     goto    0x5f2            	GOTO	_00127_DS_
0001ae   f002
0001b0   efdc     goto    0x1b8            	GOTO	_00111_DS_
0001b2   f000
0001b4   eff4     goto    0x3e8            	GOTO	_00119_DS_
0001b6   f001
                                           _00111_DS_:
                                           ;	.line	160; meter_logger.c	fsk_rx_disable();
0001b8   ece8     call    0x53d0, 0        	CALL	_fsk_rx_disable
0001ba   f029
                                           ;	.line	161; meter_logger.c	usart_puts("\n\rpress print on testo\n\r");
0001bc   0e00     movlw   0                	MOVLW	UPPER(__str_3)
0001be   6e02     movwf   0x2, 0           	MOVWF	r0x02
0001c0   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_3)
0001c2   6e01     movwf   0x1, 0           	MOVWF	r0x01
0001c4   0e2c     movlw   0x2c             	MOVLW	LOW(__str_3)
0001c6   6e00     movwf   0, 0             	MOVWF	r0x00
0001c8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0001ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001cc   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0001ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001d0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0001d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001d4   ec70     call    0x4ce0, 0        	CALL	_usart_puts
0001d6   f026
0001d8   0e03     movlw   0x3              	MOVLW	0x03
0001da   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	162; meter_logger.c	testo_ir_enable();
0001dc   ecdc     call    0x4fb8, 0        	CALL	_testo_ir_enable
0001de   f027
                                           ;	.line	164; meter_logger.c	last_fifo_size = 0;
0001e0   6a00     clrf    0, 0             	CLRF	r0x00
0001e2   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	165; meter_logger.c	sleep_ms(10000);						// 10 seconds to start printing
0001e4   0e27     movlw   0x27             	MOVLW	0x27
0001e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001e8   0e10     movlw   0x10             	MOVLW	0x10
0001ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001ec   ec99     call    0x4b32, 0        	CALL	_sleep_ms
0001ee   f025
0001f0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0001f2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	166; meter_logger.c	fifo_size = fifo_in_use();
0001f4   ec17     call    0x502e, 0        	CALL	_fifo_in_use
0001f6   f028
0001f8   6e02     movwf   0x2, 0           	MOVWF	r0x02
0001fa   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0001fc   f003
                                           _00112_DS_:
                                           ;	.line	167; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
0001fe   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000200   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000202   e102     bnz     0x208            	BNZ	_00331_DS_
000204   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000206   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00331_DS_:
000208   e212     bc      0x22e            	BC	_00114_DS_
                                           ;	.line	168; meter_logger.c	last_fifo_size = fifo_size;
00020a   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
00020c   f000
00020e   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000210   f001
                                           ;	.line	169; meter_logger.c	sleep_ms(200);						// return data when no data for 200 ms
000212   0e00     movlw   0                	MOVLW	0x00
000214   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000216   0ec8     movlw   0xc8             	MOVLW	0xc8
000218   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00021a   ec99     call    0x4b32, 0        	CALL	_sleep_ms
00021c   f025
00021e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000220   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	170; meter_logger.c	fifo_size = fifo_in_use();
000222   ec17     call    0x502e, 0        	CALL	_fifo_in_use
000224   f028
000226   6e02     movwf   0x2, 0           	MOVWF	r0x02
000228   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00022a   f003
00022c   d7e8     bra     0x1fe            	BRA	_00112_DS_
                                           _00114_DS_:
                                           ;	.line	172; meter_logger.c	testo_ir_disable();
00022e   ecf2     call    0x53e4, 0        	CALL	_testo_ir_disable
000230   f029
                                           ;	.line	178; meter_logger.c	sprintf(debug_buffer, "<- ");
000232   0e00     movlw   0                	MOVLW	UPPER(__str_4)
000234   6e06     movwf   0x6, 0           	MOVWF	r0x06
000236   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_4)
000238   6e05     movwf   0x5, 0           	MOVWF	r0x05
00023a   0e46     movlw   0x46             	MOVLW	LOW(__str_4)
00023c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00023e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000240   6e08     movwf   0x8, 0           	MOVWF	r0x08
000242   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000244   6e07     movwf   0x7, 0           	MOVWF	r0x07
000246   0e80     movlw   0x80             	MOVLW	0x80
000248   6e09     movwf   0x9, 0           	MOVWF	r0x09
00024a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00024c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00024e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000250   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000252   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000254   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000256   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000258   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00025a   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00025c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00025e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000260   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000262   ecfb     call    0x45f6, 0        	CALL	_sprintf
000264   f022
000266   0e06     movlw   0x6              	MOVLW	0x06
000268   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	179; meter_logger.c	usart_puts(debug_buffer);
00026a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00026c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00026e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000270   6e04     movwf   0x4, 0           	MOVWF	r0x04
000272   0e80     movlw   0x80             	MOVLW	0x80
000274   6e06     movwf   0x6, 0           	MOVWF	r0x06
000276   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000278   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00027a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00027c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00027e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000280   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000282   ec70     call    0x4ce0, 0        	CALL	_usart_puts
000284   f026
000286   0e03     movlw   0x3              	MOVLW	0x03
000288   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	180; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
00028a   6a04     clrf    0x4, 0           	CLRF	r0x04
00028c   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00171_DS_:
00028e   ec17     call    0x502e, 0        	CALL	_fifo_in_use
000290   f028
000292   6e06     movwf   0x6, 0           	MOVWF	r0x06
000294   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
000296   f007
000298   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00029a   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
00029c   e102     bnz     0x2a2            	BNZ	_00332_DS_
00029e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0002a0   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00332_DS_:
0002a2   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0002a4   d04c     bra     0x33e            	BRA	_00115_DS_
                                           ;	.line	182; meter_logger.c	fifo_get(&sub_cmd);
0002a6   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0002a8   6e07     movwf   0x7, 0           	MOVWF	r0x07
0002aa   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
0002ac   6e06     movwf   0x6, 0           	MOVWF	r0x06
0002ae   0e80     movlw   0x80             	MOVLW	0x80
0002b0   6e08     movwf   0x8, 0           	MOVWF	r0x08
0002b2   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0002b4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002b6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0002b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002ba   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0002bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002be   ec84     call    0x4108, 0        	CALL	_fifo_get
0002c0   f020
0002c2   0e03     movlw   0x3              	MOVLW	0x03
0002c4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	184; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
0002c6   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
0002c8   f006
0002ca   6a07     clrf    0x7, 0           	CLRF	r0x07
0002cc   0e00     movlw   0                	MOVLW	UPPER(__str_5)
0002ce   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0002d0   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_5)
0002d2   6e09     movwf   0x9, 0           	MOVWF	r0x09
0002d4   0e4a     movlw   0x4a             	MOVLW	LOW(__str_5)
0002d6   6e08     movwf   0x8, 0           	MOVWF	r0x08
0002d8   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0002da   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
0002dc   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0002de   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0002e0   0e80     movlw   0x80             	MOVLW	0x80
0002e2   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
0002e4   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0002e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002e8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0002ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002ec   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
0002ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002f0   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0002f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002f4   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0002f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002f8   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
0002fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002fc   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
0002fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000300   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000302   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000304   ecfb     call    0x45f6, 0        	CALL	_sprintf
000306   f022
000308   0e08     movlw   0x8              	MOVLW	0x08
00030a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	185; meter_logger.c	usart_puts(debug_buffer);
00030c   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00030e   6e07     movwf   0x7, 0           	MOVWF	r0x07
000310   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000312   6e06     movwf   0x6, 0           	MOVWF	r0x06
000314   0e80     movlw   0x80             	MOVLW	0x80
000316   6e08     movwf   0x8, 0           	MOVWF	r0x08
000318   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00031a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00031c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00031e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000320   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000322   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000324   ec70     call    0x4ce0, 0        	CALL	_usart_puts
000326   f026
000328   0e03     movlw   0x3              	MOVLW	0x03
00032a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00032c   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	187; meter_logger.c	fifo_put(sub_cmd);
00032e   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000330   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000332   ece0     call    0x43c0, 0        	CALL	_fifo_put
000334   f021
000336   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	180; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000338   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
00033a   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
00033c   d7a8     bra     0x28e            	BRA	_00171_DS_
                                           _00115_DS_:
                                           ;	.line	189; meter_logger.c	sprintf(debug_buffer, "\n\r");
00033e   0e00     movlw   0                	MOVLW	UPPER(__str_6)
000340   6e06     movwf   0x6, 0           	MOVWF	r0x06
000342   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_6)
000344   6e05     movwf   0x5, 0           	MOVWF	r0x05
000346   0e4e     movlw   0x4e             	MOVLW	LOW(__str_6)
000348   6e04     movwf   0x4, 0           	MOVWF	r0x04
00034a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00034c   6e08     movwf   0x8, 0           	MOVWF	r0x08
00034e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000350   6e07     movwf   0x7, 0           	MOVWF	r0x07
000352   0e80     movlw   0x80             	MOVLW	0x80
000354   6e09     movwf   0x9, 0           	MOVWF	r0x09
000356   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000358   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00035a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00035c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00035e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000360   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000362   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000364   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000366   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000368   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00036a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00036c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00036e   ecfb     call    0x45f6, 0        	CALL	_sprintf
000370   f022
000372   0e06     movlw   0x6              	MOVLW	0x06
000374   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	190; meter_logger.c	usart_puts(debug_buffer);
000376   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000378   6e05     movwf   0x5, 0           	MOVWF	r0x05
00037a   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00037c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00037e   0e80     movlw   0x80             	MOVLW	0x80
000380   6e06     movwf   0x6, 0           	MOVWF	r0x06
000382   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000384   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000386   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000388   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00038a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00038c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00038e   ec70     call    0x4ce0, 0        	CALL	_usart_puts
000390   f026
000392   0e03     movlw   0x3              	MOVLW	0x03
000394   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	192; meter_logger.c	fsk_tx_enable();
000396   ec4e     call    0x509c, 0        	CALL	_fsk_tx_enable
000398   f028
                                           _00116_DS_:
                                           ;	.line	193; meter_logger.c	while (fifo_get(&cmd)) {	// and send them via fsk
00039a   0e05     movlw   0x5              	MOVLW	HIGH(_main_cmd_1_90)
00039c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00039e   0e4f     movlw   0x4f             	MOVLW	LOW(_main_cmd_1_90)
0003a0   6e04     movwf   0x4, 0           	MOVWF	r0x04
0003a2   0e80     movlw   0x80             	MOVLW	0x80
0003a4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0003a6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0003a8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003aa   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0003ac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003ae   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0003b0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003b2   ec84     call    0x4108, 0        	CALL	_fifo_get
0003b4   f020
0003b6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0003b8   0e03     movlw   0x3              	MOVLW	0x03
0003ba   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0003bc   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0003be   e00f     bz      0x3de            	BZ	_00118_DS_
0003c0   0105     movlb   0x5              	BANKSEL	_main_cmd_1_90
                                           ;	.line	194; meter_logger.c	fsk_tx_byte(cmd);
0003c2   514f     movf    0x4f, 0, 0x1     	MOVF	_main_cmd_1_90, W, B
0003c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003c6   ecdf     call    0x51be, 0        	CALL	_fsk_tx_byte
0003c8   f028
0003ca   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	195; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
0003cc   0e00     movlw   0                	MOVLW	0x00
0003ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003d0   0e04     movlw   0x4              	MOVLW	0x04
0003d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003d4   ec99     call    0x4b32, 0        	CALL	_sleep_ms
0003d6   f025
0003d8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0003da   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0003dc   d7de     bra     0x39a            	BRA	_00116_DS_
                                           _00118_DS_:
                                           ;	.line	197; meter_logger.c	fsk_tx_disable();
0003de   eca6     call    0x534c, 0        	CALL	_fsk_tx_disable
0003e0   f029
                                           ;	.line	201; meter_logger.c	fsk_rx_enable();
0003e2   ece5     call    0x4dca, 0        	CALL	_fsk_rx_enable
0003e4   f026
                                           ;	.line	202; meter_logger.c	break;
0003e6   d6b5     bra     0x152            	BRA	_00168_DS_
                                           _00119_DS_:
                                           ;	.line	212; meter_logger.c	last_fifo_size = 0;
0003e8   6a00     clrf    0, 0             	CLRF	r0x00
0003ea   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	213; meter_logger.c	sleep_ms(1000);							// 1 second
0003ec   0e03     movlw   0x3              	MOVLW	0x03
0003ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003f0   0ee8     movlw   0xe8             	MOVLW	0xe8
0003f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003f4   ec99     call    0x4b32, 0        	CALL	_sleep_ms
0003f6   f025
0003f8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0003fa   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	214; meter_logger.c	fifo_size = fifo_in_use();
0003fc   ec17     call    0x502e, 0        	CALL	_fifo_in_use
0003fe   f028
000400   6e02     movwf   0x2, 0           	MOVWF	r0x02
000402   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000404   f003
                                           _00120_DS_:
                                           ;	.line	215; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000406   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000408   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00040a   e102     bnz     0x410            	BNZ	_00333_DS_
00040c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00040e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00333_DS_:
000410   e212     bc      0x436            	BC	_00122_DS_
                                           ;	.line	216; meter_logger.c	last_fifo_size = fifo_size;
000412   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000414   f000
000416   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000418   f001
                                           ;	.line	217; meter_logger.c	sleep_ms(500);						// return data when no data for 500 ms
00041a   0e01     movlw   0x1              	MOVLW	0x01
00041c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00041e   0ef4     movlw   0xf4             	MOVLW	0xf4
000420   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000422   ec99     call    0x4b32, 0        	CALL	_sleep_ms
000424   f025
000426   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000428   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	218; meter_logger.c	fifo_size = fifo_in_use();
00042a   ec17     call    0x502e, 0        	CALL	_fifo_in_use
00042c   f028
00042e   6e02     movwf   0x2, 0           	MOVWF	r0x02
000430   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000432   f003
000434   d7e8     bra     0x406            	BRA	_00120_DS_
                                           _00122_DS_:
                                           ;	.line	220; meter_logger.c	fsk_rx_disable();
000436   ece8     call    0x53d0, 0        	CALL	_fsk_rx_disable
000438   f029
                                           ;	.line	223; meter_logger.c	sprintf(debug_buffer, "-> ");
00043a   0e00     movlw   0                	MOVLW	UPPER(__str_7)
00043c   6e06     movwf   0x6, 0           	MOVWF	r0x06
00043e   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_7)
000440   6e05     movwf   0x5, 0           	MOVWF	r0x05
000442   0e52     movlw   0x52             	MOVLW	LOW(__str_7)
000444   6e04     movwf   0x4, 0           	MOVWF	r0x04
000446   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000448   6e08     movwf   0x8, 0           	MOVWF	r0x08
00044a   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00044c   6e07     movwf   0x7, 0           	MOVWF	r0x07
00044e   0e80     movlw   0x80             	MOVLW	0x80
000450   6e09     movwf   0x9, 0           	MOVWF	r0x09
000452   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000454   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000456   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000458   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00045a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00045c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00045e   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000460   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000462   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000464   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000466   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000468   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00046a   ecfb     call    0x45f6, 0        	CALL	_sprintf
00046c   f022
00046e   0e06     movlw   0x6              	MOVLW	0x06
000470   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	224; meter_logger.c	usart_puts(debug_buffer);
000472   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000474   6e05     movwf   0x5, 0           	MOVWF	r0x05
000476   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000478   6e04     movwf   0x4, 0           	MOVWF	r0x04
00047a   0e80     movlw   0x80             	MOVLW	0x80
00047c   6e06     movwf   0x6, 0           	MOVWF	r0x06
00047e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000480   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000482   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000484   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000486   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000488   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00048a   ec70     call    0x4ce0, 0        	CALL	_usart_puts
00048c   f026
00048e   0e03     movlw   0x3              	MOVLW	0x03
000490   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	225; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000492   6a04     clrf    0x4, 0           	CLRF	r0x04
000494   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00174_DS_:
000496   ec17     call    0x502e, 0        	CALL	_fifo_in_use
000498   f028
00049a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00049c   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
00049e   f007
0004a0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0004a2   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0004a4   e102     bnz     0x4aa            	BNZ	_00334_DS_
0004a6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0004a8   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00334_DS_:
0004aa   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0004ac   d04c     bra     0x546            	BRA	_00123_DS_
                                           ;	.line	227; meter_logger.c	fifo_get(&sub_cmd);
0004ae   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0004b0   6e07     movwf   0x7, 0           	MOVWF	r0x07
0004b2   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
0004b4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0004b6   0e80     movlw   0x80             	MOVLW	0x80
0004b8   6e08     movwf   0x8, 0           	MOVWF	r0x08
0004ba   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0004bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004be   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0004c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004c2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0004c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004c6   ec84     call    0x4108, 0        	CALL	_fifo_get
0004c8   f020
0004ca   0e03     movlw   0x3              	MOVLW	0x03
0004cc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	229; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
0004ce   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
0004d0   f006
0004d2   6a07     clrf    0x7, 0           	CLRF	r0x07
0004d4   0e00     movlw   0                	MOVLW	UPPER(__str_5)
0004d6   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0004d8   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_5)
0004da   6e09     movwf   0x9, 0           	MOVWF	r0x09
0004dc   0e4a     movlw   0x4a             	MOVLW	LOW(__str_5)
0004de   6e08     movwf   0x8, 0           	MOVWF	r0x08
0004e0   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0004e2   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
0004e4   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0004e6   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0004e8   0e80     movlw   0x80             	MOVLW	0x80
0004ea   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
0004ec   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0004ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004f0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0004f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004f4   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
0004f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004f8   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0004fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004fc   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0004fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000500   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000502   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000504   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000506   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000508   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
00050a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00050c   ecfb     call    0x45f6, 0        	CALL	_sprintf
00050e   f022
000510   0e08     movlw   0x8              	MOVLW	0x08
000512   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	230; meter_logger.c	usart_puts(debug_buffer);
000514   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000516   6e07     movwf   0x7, 0           	MOVWF	r0x07
000518   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00051a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00051c   0e80     movlw   0x80             	MOVLW	0x80
00051e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000520   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000522   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000524   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000526   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000528   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00052a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00052c   ec70     call    0x4ce0, 0        	CALL	_usart_puts
00052e   f026
000530   0e03     movlw   0x3              	MOVLW	0x03
000532   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000534   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	232; meter_logger.c	fifo_put(sub_cmd);
000536   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000538   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00053a   ece0     call    0x43c0, 0        	CALL	_fifo_put
00053c   f021
00053e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	225; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000540   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000542   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000544   d7a8     bra     0x496            	BRA	_00174_DS_
                                           _00123_DS_:
                                           ;	.line	234; meter_logger.c	sprintf(debug_buffer, "\n\r");
000546   0e00     movlw   0                	MOVLW	UPPER(__str_6)
000548   6e06     movwf   0x6, 0           	MOVWF	r0x06
00054a   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_6)
00054c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00054e   0e4e     movlw   0x4e             	MOVLW	LOW(__str_6)
000550   6e04     movwf   0x4, 0           	MOVWF	r0x04
000552   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000554   6e08     movwf   0x8, 0           	MOVWF	r0x08
000556   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000558   6e07     movwf   0x7, 0           	MOVWF	r0x07
00055a   0e80     movlw   0x80             	MOVLW	0x80
00055c   6e09     movwf   0x9, 0           	MOVWF	r0x09
00055e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000560   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000562   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000564   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000566   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000568   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00056a   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00056c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00056e   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000570   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000572   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000574   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000576   ecfb     call    0x45f6, 0        	CALL	_sprintf
000578   f022
00057a   0e06     movlw   0x6              	MOVLW	0x06
00057c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	235; meter_logger.c	usart_puts(debug_buffer);
00057e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000580   6e05     movwf   0x5, 0           	MOVWF	r0x05
000582   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000584   6e04     movwf   0x4, 0           	MOVWF	r0x04
000586   0e80     movlw   0x80             	MOVLW	0x80
000588   6e06     movwf   0x6, 0           	MOVWF	r0x06
00058a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00058c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00058e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000590   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000592   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000594   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000596   ec70     call    0x4ce0, 0        	CALL	_usart_puts
000598   f026
00059a   0e03     movlw   0x3              	MOVLW	0x03
00059c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	239; meter_logger.c	fsk_tx_enable();
00059e   ec4e     call    0x509c, 0        	CALL	_fsk_tx_enable
0005a0   f028
                                           _00124_DS_:
                                           ;	.line	240; meter_logger.c	while (fifo_get(&sub_cmd)) {
0005a2   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0005a4   6e05     movwf   0x5, 0           	MOVWF	r0x05
0005a6   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
0005a8   6e04     movwf   0x4, 0           	MOVWF	r0x04
0005aa   0e80     movlw   0x80             	MOVLW	0x80
0005ac   6e06     movwf   0x6, 0           	MOVWF	r0x06
0005ae   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0005b0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005b2   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0005b4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005b6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0005b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005ba   ec84     call    0x4108, 0        	CALL	_fifo_get
0005bc   f020
0005be   6e04     movwf   0x4, 0           	MOVWF	r0x04
0005c0   0e03     movlw   0x3              	MOVLW	0x03
0005c2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0005c4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0005c6   e00f     bz      0x5e6            	BZ	_00126_DS_
0005c8   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	241; meter_logger.c	fsk_tx_byte(sub_cmd);
0005ca   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
0005cc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005ce   ecdf     call    0x51be, 0        	CALL	_fsk_tx_byte
0005d0   f028
0005d2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	242; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
0005d4   0e00     movlw   0                	MOVLW	0x00
0005d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005d8   0e04     movlw   0x4              	MOVLW	0x04
0005da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005dc   ec99     call    0x4b32, 0        	CALL	_sleep_ms
0005de   f025
0005e0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0005e2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0005e4   d7de     bra     0x5a2            	BRA	_00124_DS_
                                           _00126_DS_:
                                           ;	.line	244; meter_logger.c	fsk_tx_disable();
0005e6   eca6     call    0x534c, 0        	CALL	_fsk_tx_disable
0005e8   f029
                                           ;	.line	249; meter_logger.c	fsk_rx_enable();
0005ea   ece5     call    0x4dca, 0        	CALL	_fsk_rx_enable
0005ec   f026
                                           ;	.line	250; meter_logger.c	break;
0005ee   efa9     goto    0x152            	GOTO	_00168_DS_
0005f0   f000
                                           _00127_DS_:
                                           ;	.line	253; meter_logger.c	fsk_rx_disable();
0005f2   ece8     call    0x53d0, 0        	CALL	_fsk_rx_disable
0005f4   f029
                                           ;	.line	259; meter_logger.c	fsk_rx_enable();
0005f6   ece5     call    0x4dca, 0        	CALL	_fsk_rx_enable
0005f8   f026
                                           ;	.line	260; meter_logger.c	last_fifo_size = 0;
0005fa   6a00     clrf    0, 0             	CLRF	r0x00
0005fc   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	261; meter_logger.c	sleep_ms(400);							// sleep 400 ms to let some data come in
0005fe   0e01     movlw   0x1              	MOVLW	0x01
000600   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000602   0e90     movlw   0x90             	MOVLW	0x90
000604   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000606   ec99     call    0x4b32, 0        	CALL	_sleep_ms
000608   f025
00060a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00060c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	262; meter_logger.c	fifo_size = fifo_in_use();
00060e   ec17     call    0x502e, 0        	CALL	_fifo_in_use
000610   f028
000612   6e02     movwf   0x2, 0           	MOVWF	r0x02
000614   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000616   f003
                                           _00128_DS_:
                                           ;	.line	263; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000618   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00061a   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00061c   e102     bnz     0x622            	BNZ	_00335_DS_
00061e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000620   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00335_DS_:
000622   e212     bc      0x648            	BC	_00130_DS_
                                           ;	.line	264; meter_logger.c	last_fifo_size = fifo_size;
000624   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000626   f000
000628   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
00062a   f001
                                           ;	.line	265; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
00062c   0e00     movlw   0                	MOVLW	0x00
00062e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000630   0ec8     movlw   0xc8             	MOVLW	0xc8
000632   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000634   ec99     call    0x4b32, 0        	CALL	_sleep_ms
000636   f025
000638   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00063a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	266; meter_logger.c	fifo_size = fifo_in_use();
00063c   ec17     call    0x502e, 0        	CALL	_fifo_in_use
00063e   f028
000640   6e02     movwf   0x2, 0           	MOVWF	r0x02
000642   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000644   f003
000646   d7e8     bra     0x618            	BRA	_00128_DS_
                                           _00130_DS_:
                                           ;	.line	268; meter_logger.c	fsk_rx_disable();
000648   ece8     call    0x53d0, 0        	CALL	_fsk_rx_disable
00064a   f029
                                           ;	.line	274; meter_logger.c	sprintf(debug_buffer, "-> ");
00064c   0e00     movlw   0                	MOVLW	UPPER(__str_7)
00064e   6e06     movwf   0x6, 0           	MOVWF	r0x06
000650   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_7)
000652   6e05     movwf   0x5, 0           	MOVWF	r0x05
000654   0e52     movlw   0x52             	MOVLW	LOW(__str_7)
000656   6e04     movwf   0x4, 0           	MOVWF	r0x04
000658   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00065a   6e08     movwf   0x8, 0           	MOVWF	r0x08
00065c   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00065e   6e07     movwf   0x7, 0           	MOVWF	r0x07
000660   0e80     movlw   0x80             	MOVLW	0x80
000662   6e09     movwf   0x9, 0           	MOVWF	r0x09
000664   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000666   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000668   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00066a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00066c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00066e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000670   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000672   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000674   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000676   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000678   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00067a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00067c   ecfb     call    0x45f6, 0        	CALL	_sprintf
00067e   f022
000680   0e06     movlw   0x6              	MOVLW	0x06
000682   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	275; meter_logger.c	usart_puts(debug_buffer);
000684   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000686   6e05     movwf   0x5, 0           	MOVWF	r0x05
000688   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00068a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00068c   0e80     movlw   0x80             	MOVLW	0x80
00068e   6e06     movwf   0x6, 0           	MOVWF	r0x06
000690   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000692   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000694   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000696   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000698   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00069a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00069c   ec70     call    0x4ce0, 0        	CALL	_usart_puts
00069e   f026
0006a0   0e03     movlw   0x3              	MOVLW	0x03
0006a2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	276; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
0006a4   6a04     clrf    0x4, 0           	CLRF	r0x04
0006a6   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00177_DS_:
0006a8   ec17     call    0x502e, 0        	CALL	_fifo_in_use
0006aa   f028
0006ac   6e06     movwf   0x6, 0           	MOVWF	r0x06
0006ae   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
0006b0   f007
0006b2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0006b4   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0006b6   e102     bnz     0x6bc            	BNZ	_00336_DS_
0006b8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0006ba   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00336_DS_:
0006bc   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0006be   d04c     bra     0x758            	BRA	_00131_DS_
                                           ;	.line	278; meter_logger.c	fifo_get(&sub_cmd);
0006c0   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0006c2   6e07     movwf   0x7, 0           	MOVWF	r0x07
0006c4   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
0006c6   6e06     movwf   0x6, 0           	MOVWF	r0x06
0006c8   0e80     movlw   0x80             	MOVLW	0x80
0006ca   6e08     movwf   0x8, 0           	MOVWF	r0x08
0006cc   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0006ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006d0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0006d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006d4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0006d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006d8   ec84     call    0x4108, 0        	CALL	_fifo_get
0006da   f020
0006dc   0e03     movlw   0x3              	MOVLW	0x03
0006de   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	280; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
0006e0   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
0006e2   f006
0006e4   6a07     clrf    0x7, 0           	CLRF	r0x07
0006e6   0e00     movlw   0                	MOVLW	UPPER(__str_5)
0006e8   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0006ea   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_5)
0006ec   6e09     movwf   0x9, 0           	MOVWF	r0x09
0006ee   0e4a     movlw   0x4a             	MOVLW	LOW(__str_5)
0006f0   6e08     movwf   0x8, 0           	MOVWF	r0x08
0006f2   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0006f4   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
0006f6   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0006f8   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0006fa   0e80     movlw   0x80             	MOVLW	0x80
0006fc   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
0006fe   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000700   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000702   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000704   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000706   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000708   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00070a   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00070c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00070e   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000710   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000712   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000714   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000716   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000718   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00071a   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
00071c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00071e   ecfb     call    0x45f6, 0        	CALL	_sprintf
000720   f022
000722   0e08     movlw   0x8              	MOVLW	0x08
000724   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	281; meter_logger.c	usart_puts(debug_buffer);
000726   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000728   6e07     movwf   0x7, 0           	MOVWF	r0x07
00072a   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00072c   6e06     movwf   0x6, 0           	MOVWF	r0x06
00072e   0e80     movlw   0x80             	MOVLW	0x80
000730   6e08     movwf   0x8, 0           	MOVWF	r0x08
000732   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000734   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000736   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000738   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00073a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00073c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00073e   ec70     call    0x4ce0, 0        	CALL	_usart_puts
000740   f026
000742   0e03     movlw   0x3              	MOVLW	0x03
000744   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000746   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	283; meter_logger.c	fifo_put(sub_cmd);
000748   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
00074a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00074c   ece0     call    0x43c0, 0        	CALL	_fifo_put
00074e   f021
000750   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	276; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000752   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000754   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000756   d7a8     bra     0x6a8            	BRA	_00177_DS_
                                           _00131_DS_:
                                           ;	.line	285; meter_logger.c	sprintf(debug_buffer, "\n\r");
000758   0e00     movlw   0                	MOVLW	UPPER(__str_6)
00075a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00075c   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_6)
00075e   6e05     movwf   0x5, 0           	MOVWF	r0x05
000760   0e4e     movlw   0x4e             	MOVLW	LOW(__str_6)
000762   6e04     movwf   0x4, 0           	MOVWF	r0x04
000764   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000766   6e08     movwf   0x8, 0           	MOVWF	r0x08
000768   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00076a   6e07     movwf   0x7, 0           	MOVWF	r0x07
00076c   0e80     movlw   0x80             	MOVLW	0x80
00076e   6e09     movwf   0x9, 0           	MOVWF	r0x09
000770   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000772   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000774   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000776   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000778   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00077a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00077c   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00077e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000780   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000782   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000784   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000786   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000788   ecfb     call    0x45f6, 0        	CALL	_sprintf
00078a   f022
00078c   0e06     movlw   0x6              	MOVLW	0x06
00078e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	286; meter_logger.c	usart_puts(debug_buffer);
000790   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000792   6e05     movwf   0x5, 0           	MOVWF	r0x05
000794   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000796   6e04     movwf   0x4, 0           	MOVWF	r0x04
000798   0e80     movlw   0x80             	MOVLW	0x80
00079a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00079c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00079e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007a0   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0007a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007a4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0007a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007a8   ec70     call    0x4ce0, 0        	CALL	_usart_puts
0007aa   f026
0007ac   0e03     movlw   0x3              	MOVLW	0x03
0007ae   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	289; meter_logger.c	rs232_8n2_tx_enable(TIMER0_RS232_1200);
0007b0   0ef9     movlw   0xf9             	MOVLW	0xf9
0007b2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007b4   0eae     movlw   0xae             	MOVLW	0xae
0007b6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007b8   ecbd     call    0x4f7a, 0        	CALL	_rs232_8n2_tx_enable
0007ba   f027
0007bc   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0007be   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00132_DS_:
                                           ;	.line	290; meter_logger.c	while (fifo_get(&sub_cmd)) {
0007c0   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0007c2   6e05     movwf   0x5, 0           	MOVWF	r0x05
0007c4   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
0007c6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0007c8   0e80     movlw   0x80             	MOVLW	0x80
0007ca   6e06     movwf   0x6, 0           	MOVWF	r0x06
0007cc   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0007ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007d0   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0007d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007d4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0007d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007d8   ec84     call    0x4108, 0        	CALL	_fifo_get
0007da   f020
0007dc   6e04     movwf   0x4, 0           	MOVWF	r0x04
0007de   0e03     movlw   0x3              	MOVLW	0x03
0007e0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0007e2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0007e4   e00f     bz      0x804            	BZ	_00134_DS_
0007e6   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	291; meter_logger.c	rs232_8n2_tx_byte(sub_cmd);
0007e8   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
0007ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007ec   ec80     call    0x5100, 0        	CALL	_rs232_8n2_tx_byte
0007ee   f028
0007f0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	292; meter_logger.c	sleep_ms(RS232_TX_SLEEP);
0007f2   0e00     movlw   0                	MOVLW	0x00
0007f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007f6   0e0c     movlw   0xc              	MOVLW	0x0c
0007f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007fa   ec99     call    0x4b32, 0        	CALL	_sleep_ms
0007fc   f025
0007fe   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000800   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000802   d7de     bra     0x7c0            	BRA	_00132_DS_
                                           _00134_DS_:
                                           ;	.line	294; meter_logger.c	rs232_8n2_tx_disable();
000804   ecd2     call    0x53a4, 0        	CALL	_rs232_8n2_tx_disable
000806   f029
                                           ;	.line	300; meter_logger.c	rs232_8n2_rx_enable(TIMER0_RS232_1200);
000808   0ef9     movlw   0xf9             	MOVLW	0xf9
00080a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00080c   0eae     movlw   0xae             	MOVLW	0xae
00080e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000810   ec5e     call    0x4ebc, 0        	CALL	_rs232_8n2_rx_enable
000812   f027
000814   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000816   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	301; meter_logger.c	last_fifo_size = 0;
000818   6a00     clrf    0, 0             	CLRF	r0x00
00081a   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	302; meter_logger.c	sleep_ms(400);							// sleep 400 ms to let some data come in
00081c   0e01     movlw   0x1              	MOVLW	0x01
00081e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000820   0e90     movlw   0x90             	MOVLW	0x90
000822   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000824   ec99     call    0x4b32, 0        	CALL	_sleep_ms
000826   f025
000828   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00082a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	303; meter_logger.c	fifo_size = fifo_in_use();
00082c   ec17     call    0x502e, 0        	CALL	_fifo_in_use
00082e   f028
000830   6e02     movwf   0x2, 0           	MOVWF	r0x02
000832   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000834   f003
                                           _00135_DS_:
                                           ;	.line	305; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000836   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000838   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00083a   e102     bnz     0x840            	BNZ	_00337_DS_
00083c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00083e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00337_DS_:
000840   e212     bc      0x866            	BC	_00137_DS_
                                           ;	.line	306; meter_logger.c	last_fifo_size = fifo_size;
000842   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000844   f000
000846   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000848   f001
                                           ;	.line	307; meter_logger.c	sleep_ms(200);						// return data when no data for 200 ms
00084a   0e00     movlw   0                	MOVLW	0x00
00084c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00084e   0ec8     movlw   0xc8             	MOVLW	0xc8
000850   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000852   ec99     call    0x4b32, 0        	CALL	_sleep_ms
000854   f025
000856   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000858   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	308; meter_logger.c	fifo_size = fifo_in_use();
00085a   ec17     call    0x502e, 0        	CALL	_fifo_in_use
00085c   f028
00085e   6e02     movwf   0x2, 0           	MOVWF	r0x02
000860   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000862   f003
000864   d7e8     bra     0x836            	BRA	_00135_DS_
                                           _00137_DS_:
                                           ;	.line	311; meter_logger.c	rs232_8n2_rx_disable();
000866   ecc7     call    0x538e, 0        	CALL	_rs232_8n2_rx_disable
000868   f029
                                           ;	.line	318; meter_logger.c	sprintf(debug_buffer, "<- ");
00086a   0e00     movlw   0                	MOVLW	UPPER(__str_4)
00086c   6e06     movwf   0x6, 0           	MOVWF	r0x06
00086e   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_4)
000870   6e05     movwf   0x5, 0           	MOVWF	r0x05
000872   0e46     movlw   0x46             	MOVLW	LOW(__str_4)
000874   6e04     movwf   0x4, 0           	MOVWF	r0x04
000876   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000878   6e08     movwf   0x8, 0           	MOVWF	r0x08
00087a   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00087c   6e07     movwf   0x7, 0           	MOVWF	r0x07
00087e   0e80     movlw   0x80             	MOVLW	0x80
000880   6e09     movwf   0x9, 0           	MOVWF	r0x09
000882   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000884   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000886   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000888   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00088a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00088c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00088e   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000890   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000892   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000894   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000896   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000898   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00089a   ecfb     call    0x45f6, 0        	CALL	_sprintf
00089c   f022
00089e   0e06     movlw   0x6              	MOVLW	0x06
0008a0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	319; meter_logger.c	usart_puts(debug_buffer);
0008a2   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0008a4   6e05     movwf   0x5, 0           	MOVWF	r0x05
0008a6   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0008a8   6e04     movwf   0x4, 0           	MOVWF	r0x04
0008aa   0e80     movlw   0x80             	MOVLW	0x80
0008ac   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008ae   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0008b0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008b2   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0008b4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008b6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0008b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008ba   ec70     call    0x4ce0, 0        	CALL	_usart_puts
0008bc   f026
0008be   0e03     movlw   0x3              	MOVLW	0x03
0008c0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	320; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
0008c2   6a04     clrf    0x4, 0           	CLRF	r0x04
0008c4   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00180_DS_:
0008c6   ec17     call    0x502e, 0        	CALL	_fifo_in_use
0008c8   f028
0008ca   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008cc   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
0008ce   f007
0008d0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0008d2   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0008d4   e102     bnz     0x8da            	BNZ	_00338_DS_
0008d6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0008d8   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00338_DS_:
0008da   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0008dc   d04c     bra     0x976            	BRA	_00138_DS_
                                           ;	.line	322; meter_logger.c	fifo_get(&sub_cmd);
0008de   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0008e0   6e07     movwf   0x7, 0           	MOVWF	r0x07
0008e2   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
0008e4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008e6   0e80     movlw   0x80             	MOVLW	0x80
0008e8   6e08     movwf   0x8, 0           	MOVWF	r0x08
0008ea   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0008ec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008ee   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0008f0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008f2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0008f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008f6   ec84     call    0x4108, 0        	CALL	_fifo_get
0008f8   f020
0008fa   0e03     movlw   0x3              	MOVLW	0x03
0008fc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	324; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
0008fe   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
000900   f006
000902   6a07     clrf    0x7, 0           	CLRF	r0x07
000904   0e00     movlw   0                	MOVLW	UPPER(__str_5)
000906   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000908   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_5)
00090a   6e09     movwf   0x9, 0           	MOVWF	r0x09
00090c   0e4a     movlw   0x4a             	MOVLW	LOW(__str_5)
00090e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000910   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000912   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
000914   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000916   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
000918   0e80     movlw   0x80             	MOVLW	0x80
00091a   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
00091c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00091e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000920   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000922   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000924   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000926   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000928   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00092a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00092c   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00092e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000930   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000932   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000934   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000936   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000938   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
00093a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00093c   ecfb     call    0x45f6, 0        	CALL	_sprintf
00093e   f022
000940   0e08     movlw   0x8              	MOVLW	0x08
000942   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	325; meter_logger.c	usart_puts(debug_buffer);
000944   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000946   6e07     movwf   0x7, 0           	MOVWF	r0x07
000948   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00094a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00094c   0e80     movlw   0x80             	MOVLW	0x80
00094e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000950   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000952   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000954   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000956   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000958   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00095a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00095c   ec70     call    0x4ce0, 0        	CALL	_usart_puts
00095e   f026
000960   0e03     movlw   0x3              	MOVLW	0x03
000962   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000964   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	327; meter_logger.c	fifo_put(sub_cmd);
000966   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000968   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00096a   ece0     call    0x43c0, 0        	CALL	_fifo_put
00096c   f021
00096e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	320; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000970   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000972   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000974   d7a8     bra     0x8c6            	BRA	_00180_DS_
                                           _00138_DS_:
                                           ;	.line	329; meter_logger.c	sprintf(debug_buffer, "\n\r");
000976   0e00     movlw   0                	MOVLW	UPPER(__str_6)
000978   6e06     movwf   0x6, 0           	MOVWF	r0x06
00097a   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_6)
00097c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00097e   0e4e     movlw   0x4e             	MOVLW	LOW(__str_6)
000980   6e04     movwf   0x4, 0           	MOVWF	r0x04
000982   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000984   6e08     movwf   0x8, 0           	MOVWF	r0x08
000986   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000988   6e07     movwf   0x7, 0           	MOVWF	r0x07
00098a   0e80     movlw   0x80             	MOVLW	0x80
00098c   6e09     movwf   0x9, 0           	MOVWF	r0x09
00098e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000990   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000992   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000994   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000996   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000998   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00099a   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00099c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00099e   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0009a0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009a2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0009a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009a6   ecfb     call    0x45f6, 0        	CALL	_sprintf
0009a8   f022
0009aa   0e06     movlw   0x6              	MOVLW	0x06
0009ac   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	330; meter_logger.c	usart_puts(debug_buffer);
0009ae   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0009b0   6e05     movwf   0x5, 0           	MOVWF	r0x05
0009b2   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0009b4   6e04     movwf   0x4, 0           	MOVWF	r0x04
0009b6   0e80     movlw   0x80             	MOVLW	0x80
0009b8   6e06     movwf   0x6, 0           	MOVWF	r0x06
0009ba   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0009bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009be   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0009c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009c2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0009c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009c6   ec70     call    0x4ce0, 0        	CALL	_usart_puts
0009c8   f026
0009ca   0e03     movlw   0x3              	MOVLW	0x03
0009cc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	332; meter_logger.c	if (fifo_in_use()) {
0009ce   ec17     call    0x502e, 0        	CALL	_fifo_in_use
0009d0   f028
0009d2   6e04     movwf   0x4, 0           	MOVWF	r0x04
0009d4   cff3     movff   0xff3, 0x5       	MOVFF	PRODL, r0x05
0009d6   f005
0009d8   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0009da   1005     iorwf   0x5, 0, 0        	IORWF	r0x05, W
0009dc   e02b     bz      0xa34            	BZ	_00143_DS_
                                           ;	.line	334; meter_logger.c	DEBUG2_PIN = 1;
0009de   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
0009e0   0000     nop                      	nop
0009e2   0000     nop                      	nop
                                           	
                                           ;	.line	339; meter_logger.c	DEBUG2_PIN = 0;
0009e4   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	340; meter_logger.c	fsk_tx_enable();
0009e6   ec4e     call    0x509c, 0        	CALL	_fsk_tx_enable
0009e8   f028
                                           _00139_DS_:
                                           ;	.line	341; meter_logger.c	while (fifo_get(&sub_cmd)) {
0009ea   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0009ec   6e05     movwf   0x5, 0           	MOVWF	r0x05
0009ee   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
0009f0   6e04     movwf   0x4, 0           	MOVWF	r0x04
0009f2   0e80     movlw   0x80             	MOVLW	0x80
0009f4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0009f6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0009f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009fa   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0009fc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009fe   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000a00   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a02   ec84     call    0x4108, 0        	CALL	_fifo_get
000a04   f020
000a06   6e04     movwf   0x4, 0           	MOVWF	r0x04
000a08   0e03     movlw   0x3              	MOVLW	0x03
000a0a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000a0c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000a0e   e00f     bz      0xa2e            	BZ	_00141_DS_
000a10   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	342; meter_logger.c	fsk_tx_byte(sub_cmd);
000a12   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000a14   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a16   ecdf     call    0x51be, 0        	CALL	_fsk_tx_byte
000a18   f028
000a1a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	343; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000a1c   0e00     movlw   0                	MOVLW	0x00
000a1e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a20   0e04     movlw   0x4              	MOVLW	0x04
000a22   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a24   ec99     call    0x4b32, 0        	CALL	_sleep_ms
000a26   f025
000a28   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000a2a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000a2c   d7de     bra     0x9ea            	BRA	_00139_DS_
                                           _00141_DS_:
                                           ;	.line	345; meter_logger.c	fsk_tx_disable();
000a2e   eca6     call    0x534c, 0        	CALL	_fsk_tx_disable
000a30   f029
000a32   d01b     bra     0xa6a            	BRA	_00144_DS_
                                           _00143_DS_:
                                           ;	.line	349; meter_logger.c	DEBUG2_PIN = 1;
000a34   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000a36   0000     nop                      	nop
000a38   0000     nop                      	nop
                                           	
                                           ;	.line	354; meter_logger.c	DEBUG2_PIN = 0;
000a3a   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
000a3c   0000     nop                      	nop
000a3e   0000     nop                      	nop
                                           	
                                           ;	.line	359; meter_logger.c	DEBUG2_PIN = 1;
000a40   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000a42   0000     nop                      	nop
000a44   0000     nop                      	nop
                                           	
                                           ;	.line	364; meter_logger.c	DEBUG2_PIN = 0;
000a46   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	369; meter_logger.c	fsk_tx_enable();
000a48   ec4e     call    0x509c, 0        	CALL	_fsk_tx_enable
000a4a   f028
                                           ;	.line	370; meter_logger.c	fsk_tx_byte(0x0d);
000a4c   0e0d     movlw   0xd              	MOVLW	0x0d
000a4e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a50   ecdf     call    0x51be, 0        	CALL	_fsk_tx_byte
000a52   f028
000a54   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	371; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000a56   0e00     movlw   0                	MOVLW	0x00
000a58   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a5a   0e04     movlw   0x4              	MOVLW	0x04
000a5c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a5e   ec99     call    0x4b32, 0        	CALL	_sleep_ms
000a60   f025
000a62   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000a64   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	372; meter_logger.c	fsk_tx_disable();
000a66   eca6     call    0x534c, 0        	CALL	_fsk_tx_disable
000a68   f029
                                           _00144_DS_:
                                           ;	.line	377; meter_logger.c	fsk_rx_enable();
000a6a   ece5     call    0x4dca, 0        	CALL	_fsk_rx_enable
000a6c   f026
                                           ;	.line	378; meter_logger.c	break;
000a6e   efa9     goto    0x152            	GOTO	_00168_DS_
000a70   f000
                                           _00145_DS_:
                                           ;	.line	380; meter_logger.c	fsk_rx_disable();
000a72   ece8     call    0x53d0, 0        	CALL	_fsk_rx_disable
000a74   f029
                                           ;	.line	386; meter_logger.c	fsk_rx_enable();
000a76   ece5     call    0x4dca, 0        	CALL	_fsk_rx_enable
000a78   f026
                                           ;	.line	387; meter_logger.c	last_fifo_size = 0;
000a7a   6a00     clrf    0, 0             	CLRF	r0x00
000a7c   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	388; meter_logger.c	sleep_ms(400);							// sleep 400 ms to let some data come in
000a7e   0e01     movlw   0x1              	MOVLW	0x01
000a80   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a82   0e90     movlw   0x90             	MOVLW	0x90
000a84   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a86   ec99     call    0x4b32, 0        	CALL	_sleep_ms
000a88   f025
000a8a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000a8c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	389; meter_logger.c	fifo_size = fifo_in_use();
000a8e   ec17     call    0x502e, 0        	CALL	_fifo_in_use
000a90   f028
000a92   6e02     movwf   0x2, 0           	MOVWF	r0x02
000a94   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000a96   f003
                                           _00146_DS_:
                                           ;	.line	390; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000a98   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000a9a   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000a9c   e102     bnz     0xaa2            	BNZ	_00339_DS_
000a9e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000aa0   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00339_DS_:
000aa2   e212     bc      0xac8            	BC	_00148_DS_
                                           ;	.line	391; meter_logger.c	last_fifo_size = fifo_size;
000aa4   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000aa6   f000
000aa8   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000aaa   f001
                                           ;	.line	392; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
000aac   0e00     movlw   0                	MOVLW	0x00
000aae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ab0   0ec8     movlw   0xc8             	MOVLW	0xc8
000ab2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ab4   ec99     call    0x4b32, 0        	CALL	_sleep_ms
000ab6   f025
000ab8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000aba   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	393; meter_logger.c	fifo_size = fifo_in_use();
000abc   ec17     call    0x502e, 0        	CALL	_fifo_in_use
000abe   f028
000ac0   6e02     movwf   0x2, 0           	MOVWF	r0x02
000ac2   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000ac4   f003
000ac6   d7e8     bra     0xa98            	BRA	_00146_DS_
                                           _00148_DS_:
                                           ;	.line	395; meter_logger.c	fsk_rx_disable();
000ac8   ece8     call    0x53d0, 0        	CALL	_fsk_rx_disable
000aca   f029
                                           ;	.line	401; meter_logger.c	sprintf(debug_buffer, "-> ");
000acc   0e00     movlw   0                	MOVLW	UPPER(__str_7)
000ace   6e06     movwf   0x6, 0           	MOVWF	r0x06
000ad0   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_7)
000ad2   6e05     movwf   0x5, 0           	MOVWF	r0x05
000ad4   0e52     movlw   0x52             	MOVLW	LOW(__str_7)
000ad6   6e04     movwf   0x4, 0           	MOVWF	r0x04
000ad8   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000ada   6e08     movwf   0x8, 0           	MOVWF	r0x08
000adc   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000ade   6e07     movwf   0x7, 0           	MOVWF	r0x07
000ae0   0e80     movlw   0x80             	MOVLW	0x80
000ae2   6e09     movwf   0x9, 0           	MOVWF	r0x09
000ae4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000ae6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ae8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000aea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000aec   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000aee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000af0   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000af2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000af4   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000af6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000af8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000afa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000afc   ecfb     call    0x45f6, 0        	CALL	_sprintf
000afe   f022
000b00   0e06     movlw   0x6              	MOVLW	0x06
000b02   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	402; meter_logger.c	usart_puts(debug_buffer);
000b04   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000b06   6e05     movwf   0x5, 0           	MOVWF	r0x05
000b08   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000b0a   6e04     movwf   0x4, 0           	MOVWF	r0x04
000b0c   0e80     movlw   0x80             	MOVLW	0x80
000b0e   6e06     movwf   0x6, 0           	MOVWF	r0x06
000b10   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000b12   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b14   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000b16   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b18   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000b1a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b1c   ec70     call    0x4ce0, 0        	CALL	_usart_puts
000b1e   f026
000b20   0e03     movlw   0x3              	MOVLW	0x03
000b22   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	403; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000b24   6a04     clrf    0x4, 0           	CLRF	r0x04
000b26   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00183_DS_:
000b28   ec17     call    0x502e, 0        	CALL	_fifo_in_use
000b2a   f028
000b2c   6e06     movwf   0x6, 0           	MOVWF	r0x06
000b2e   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
000b30   f007
000b32   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000b34   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000b36   e102     bnz     0xb3c            	BNZ	_00340_DS_
000b38   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000b3a   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00340_DS_:
000b3c   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
000b3e   d04c     bra     0xbd8            	BRA	_00149_DS_
                                           ;	.line	405; meter_logger.c	fifo_get(&sub_cmd);
000b40   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000b42   6e07     movwf   0x7, 0           	MOVWF	r0x07
000b44   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
000b46   6e06     movwf   0x6, 0           	MOVWF	r0x06
000b48   0e80     movlw   0x80             	MOVLW	0x80
000b4a   6e08     movwf   0x8, 0           	MOVWF	r0x08
000b4c   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000b4e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b50   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000b52   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b54   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000b56   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b58   ec84     call    0x4108, 0        	CALL	_fifo_get
000b5a   f020
000b5c   0e03     movlw   0x3              	MOVLW	0x03
000b5e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	407; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
000b60   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
000b62   f006
000b64   6a07     clrf    0x7, 0           	CLRF	r0x07
000b66   0e00     movlw   0                	MOVLW	UPPER(__str_5)
000b68   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000b6a   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_5)
000b6c   6e09     movwf   0x9, 0           	MOVWF	r0x09
000b6e   0e4a     movlw   0x4a             	MOVLW	LOW(__str_5)
000b70   6e08     movwf   0x8, 0           	MOVWF	r0x08
000b72   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000b74   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
000b76   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000b78   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
000b7a   0e80     movlw   0x80             	MOVLW	0x80
000b7c   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
000b7e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000b80   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b82   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000b84   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b86   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000b88   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b8a   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000b8c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b8e   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000b90   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b92   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000b94   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b96   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000b98   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b9a   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000b9c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b9e   ecfb     call    0x45f6, 0        	CALL	_sprintf
000ba0   f022
000ba2   0e08     movlw   0x8              	MOVLW	0x08
000ba4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	408; meter_logger.c	usart_puts(debug_buffer);
000ba6   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000ba8   6e07     movwf   0x7, 0           	MOVWF	r0x07
000baa   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000bac   6e06     movwf   0x6, 0           	MOVWF	r0x06
000bae   0e80     movlw   0x80             	MOVLW	0x80
000bb0   6e08     movwf   0x8, 0           	MOVWF	r0x08
000bb2   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000bb4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bb6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000bb8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bba   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000bbc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bbe   ec70     call    0x4ce0, 0        	CALL	_usart_puts
000bc0   f026
000bc2   0e03     movlw   0x3              	MOVLW	0x03
000bc4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000bc6   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	410; meter_logger.c	fifo_put(sub_cmd);
000bc8   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000bca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bcc   ece0     call    0x43c0, 0        	CALL	_fifo_put
000bce   f021
000bd0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	403; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000bd2   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000bd4   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000bd6   d7a8     bra     0xb28            	BRA	_00183_DS_
                                           _00149_DS_:
                                           ;	.line	412; meter_logger.c	sprintf(debug_buffer, "\n\r");
000bd8   0e00     movlw   0                	MOVLW	UPPER(__str_6)
000bda   6e06     movwf   0x6, 0           	MOVWF	r0x06
000bdc   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_6)
000bde   6e05     movwf   0x5, 0           	MOVWF	r0x05
000be0   0e4e     movlw   0x4e             	MOVLW	LOW(__str_6)
000be2   6e04     movwf   0x4, 0           	MOVWF	r0x04
000be4   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000be6   6e08     movwf   0x8, 0           	MOVWF	r0x08
000be8   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000bea   6e07     movwf   0x7, 0           	MOVWF	r0x07
000bec   0e80     movlw   0x80             	MOVLW	0x80
000bee   6e09     movwf   0x9, 0           	MOVWF	r0x09
000bf0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000bf2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bf4   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000bf6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bf8   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000bfa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bfc   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000bfe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c00   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000c02   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c04   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000c06   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c08   ecfb     call    0x45f6, 0        	CALL	_sprintf
000c0a   f022
000c0c   0e06     movlw   0x6              	MOVLW	0x06
000c0e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	413; meter_logger.c	usart_puts(debug_buffer);
000c10   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000c12   6e05     movwf   0x5, 0           	MOVWF	r0x05
000c14   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000c16   6e04     movwf   0x4, 0           	MOVWF	r0x04
000c18   0e80     movlw   0x80             	MOVLW	0x80
000c1a   6e06     movwf   0x6, 0           	MOVWF	r0x06
000c1c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000c1e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c20   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000c22   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c24   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000c26   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c28   ec70     call    0x4ce0, 0        	CALL	_usart_puts
000c2a   f026
000c2c   0e03     movlw   0x3              	MOVLW	0x03
000c2e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	415; meter_logger.c	rs232_7e1_tx_enable(TIMER0_RS232_300);
000c30   0ee6     movlw   0xe6             	MOVLW	0xe6
000c32   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c34   0e1b     movlw   0x1b             	MOVLW	0x1b
000c36   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c38   ec9e     call    0x4f3c, 0        	CALL	_rs232_7e1_tx_enable
000c3a   f027
000c3c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c3e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00150_DS_:
                                           ;	.line	416; meter_logger.c	while (fifo_get(&sub_cmd)) {
000c40   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000c42   6e05     movwf   0x5, 0           	MOVWF	r0x05
000c44   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
000c46   6e04     movwf   0x4, 0           	MOVWF	r0x04
000c48   0e80     movlw   0x80             	MOVLW	0x80
000c4a   6e06     movwf   0x6, 0           	MOVWF	r0x06
000c4c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000c4e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c50   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000c52   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c54   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000c56   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c58   ec84     call    0x4108, 0        	CALL	_fifo_get
000c5a   f020
000c5c   6e04     movwf   0x4, 0           	MOVWF	r0x04
000c5e   0e03     movlw   0x3              	MOVLW	0x03
000c60   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000c62   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000c64   e00f     bz      0xc84            	BZ	_00152_DS_
000c66   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	417; meter_logger.c	rs232_7e1_tx_byte(sub_cmd);
000c68   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000c6a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c6c   ec68     call    0x50d0, 0        	CALL	_rs232_7e1_tx_byte
000c6e   f028
000c70   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	418; meter_logger.c	sleep_ms(RS232_TX_SLEEP);
000c72   0e00     movlw   0                	MOVLW	0x00
000c74   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c76   0e0c     movlw   0xc              	MOVLW	0x0c
000c78   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c7a   ec99     call    0x4b32, 0        	CALL	_sleep_ms
000c7c   f025
000c7e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c80   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c82   d7de     bra     0xc40            	BRA	_00150_DS_
                                           _00152_DS_:
                                           ;	.line	420; meter_logger.c	rs232_7e1_tx_disable();
000c84   ecbc     call    0x5378, 0        	CALL	_rs232_7e1_tx_disable
000c86   f029
                                           ;	.line	426; meter_logger.c	rs232_7e1_rx_enable(TIMER0_RS232_300);
000c88   0ee6     movlw   0xe6             	MOVLW	0xe6
000c8a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c8c   0e1b     movlw   0x1b             	MOVLW	0x1b
000c8e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c90   ec3e     call    0x4e7c, 0        	CALL	_rs232_7e1_rx_enable
000c92   f027
000c94   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c96   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	427; meter_logger.c	last_fifo_size = 0;
000c98   6a00     clrf    0, 0             	CLRF	r0x00
000c9a   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	428; meter_logger.c	sleep_ms(1500);							// sleep 1500 ms to let some data come in
000c9c   0e05     movlw   0x5              	MOVLW	0x05
000c9e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ca0   0edc     movlw   0xdc             	MOVLW	0xdc
000ca2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ca4   ec99     call    0x4b32, 0        	CALL	_sleep_ms
000ca6   f025
000ca8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000caa   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	429; meter_logger.c	fifo_size = fifo_in_use();
000cac   ec17     call    0x502e, 0        	CALL	_fifo_in_use
000cae   f028
000cb0   6e02     movwf   0x2, 0           	MOVWF	r0x02
000cb2   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000cb4   f003
                                           _00153_DS_:
                                           ;	.line	431; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000cb6   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000cb8   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000cba   e102     bnz     0xcc0            	BNZ	_00341_DS_
000cbc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000cbe   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00341_DS_:
000cc0   e212     bc      0xce6            	BC	_00155_DS_
                                           ;	.line	432; meter_logger.c	last_fifo_size = fifo_size;
000cc2   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000cc4   f000
000cc6   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000cc8   f001
                                           ;	.line	433; meter_logger.c	sleep_ms(600);						// return data when no data for 600 ms
000cca   0e02     movlw   0x2              	MOVLW	0x02
000ccc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cce   0e58     movlw   0x58             	MOVLW	0x58
000cd0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cd2   ec99     call    0x4b32, 0        	CALL	_sleep_ms
000cd4   f025
000cd6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000cd8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	434; meter_logger.c	fifo_size = fifo_in_use();
000cda   ec17     call    0x502e, 0        	CALL	_fifo_in_use
000cdc   f028
000cde   6e02     movwf   0x2, 0           	MOVWF	r0x02
000ce0   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000ce2   f003
000ce4   d7e8     bra     0xcb6            	BRA	_00153_DS_
                                           _00155_DS_:
                                           ;	.line	437; meter_logger.c	rs232_7e1_rx_disable();
000ce6   ecb1     call    0x5362, 0        	CALL	_rs232_7e1_rx_disable
000ce8   f029
                                           ;	.line	444; meter_logger.c	sprintf(debug_buffer, "<- ");
000cea   0e00     movlw   0                	MOVLW	UPPER(__str_4)
000cec   6e02     movwf   0x2, 0           	MOVWF	r0x02
000cee   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_4)
000cf0   6e01     movwf   0x1, 0           	MOVWF	r0x01
000cf2   0e46     movlw   0x46             	MOVLW	LOW(__str_4)
000cf4   6e00     movwf   0, 0             	MOVWF	r0x00
000cf6   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000cf8   6e04     movwf   0x4, 0           	MOVWF	r0x04
000cfa   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000cfc   6e03     movwf   0x3, 0           	MOVWF	r0x03
000cfe   0e80     movlw   0x80             	MOVLW	0x80
000d00   6e05     movwf   0x5, 0           	MOVWF	r0x05
000d02   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000d04   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d06   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000d08   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d0a   5000     movf    0, 0, 0          	MOVF	r0x00, W
000d0c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d0e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000d10   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d12   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000d14   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d16   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000d18   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d1a   ecfb     call    0x45f6, 0        	CALL	_sprintf
000d1c   f022
000d1e   0e06     movlw   0x6              	MOVLW	0x06
000d20   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	445; meter_logger.c	usart_puts(debug_buffer);
000d22   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000d24   6e01     movwf   0x1, 0           	MOVWF	r0x01
000d26   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000d28   6e00     movwf   0, 0             	MOVWF	r0x00
000d2a   0e80     movlw   0x80             	MOVLW	0x80
000d2c   6e02     movwf   0x2, 0           	MOVWF	r0x02
000d2e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000d30   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d32   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000d34   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d36   5000     movf    0, 0, 0          	MOVF	r0x00, W
000d38   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d3a   ec70     call    0x4ce0, 0        	CALL	_usart_puts
000d3c   f026
000d3e   0e03     movlw   0x3              	MOVLW	0x03
000d40   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	446; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000d42   6a00     clrf    0, 0             	CLRF	r0x00
000d44   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00186_DS_:
000d46   ec17     call    0x502e, 0        	CALL	_fifo_in_use
000d48   f028
000d4a   6e02     movwf   0x2, 0           	MOVWF	r0x02
000d4c   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000d4e   f003
000d50   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000d52   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000d54   e102     bnz     0xd5a            	BNZ	_00342_DS_
000d56   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000d58   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00342_DS_:
000d5a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
000d5c   d04c     bra     0xdf6            	BRA	_00156_DS_
                                           ;	.line	448; meter_logger.c	fifo_get(&sub_cmd);
000d5e   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000d60   6e03     movwf   0x3, 0           	MOVWF	r0x03
000d62   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
000d64   6e02     movwf   0x2, 0           	MOVWF	r0x02
000d66   0e80     movlw   0x80             	MOVLW	0x80
000d68   6e04     movwf   0x4, 0           	MOVWF	r0x04
000d6a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000d6c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d6e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000d70   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d72   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000d74   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d76   ec84     call    0x4108, 0        	CALL	_fifo_get
000d78   f020
000d7a   0e03     movlw   0x3              	MOVLW	0x03
000d7c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	450; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
000d7e   c550     movff   0x550, 0x2       	MOVFF	_main_sub_cmd_1_90, r0x02
000d80   f002
000d82   6a03     clrf    0x3, 0           	CLRF	r0x03
000d84   0e00     movlw   0                	MOVLW	UPPER(__str_5)
000d86   6e06     movwf   0x6, 0           	MOVWF	r0x06
000d88   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_5)
000d8a   6e05     movwf   0x5, 0           	MOVWF	r0x05
000d8c   0e4a     movlw   0x4a             	MOVLW	LOW(__str_5)
000d8e   6e04     movwf   0x4, 0           	MOVWF	r0x04
000d90   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000d92   6e08     movwf   0x8, 0           	MOVWF	r0x08
000d94   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000d96   6e07     movwf   0x7, 0           	MOVWF	r0x07
000d98   0e80     movlw   0x80             	MOVLW	0x80
000d9a   6e09     movwf   0x9, 0           	MOVWF	r0x09
000d9c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000d9e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000da0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000da2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000da4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000da6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000da8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000daa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000dac   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000dae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000db0   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000db2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000db4   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000db6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000db8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000dba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000dbc   ecfb     call    0x45f6, 0        	CALL	_sprintf
000dbe   f022
000dc0   0e08     movlw   0x8              	MOVLW	0x08
000dc2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	451; meter_logger.c	usart_puts(debug_buffer);
000dc4   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000dc6   6e03     movwf   0x3, 0           	MOVWF	r0x03
000dc8   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000dca   6e02     movwf   0x2, 0           	MOVWF	r0x02
000dcc   0e80     movlw   0x80             	MOVLW	0x80
000dce   6e04     movwf   0x4, 0           	MOVWF	r0x04
000dd0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000dd2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000dd4   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000dd6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000dd8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000dda   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ddc   ec70     call    0x4ce0, 0        	CALL	_usart_puts
000dde   f026
000de0   0e03     movlw   0x3              	MOVLW	0x03
000de2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000de4   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	453; meter_logger.c	fifo_put(sub_cmd);
000de6   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000de8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000dea   ece0     call    0x43c0, 0        	CALL	_fifo_put
000dec   f021
000dee   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	446; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000df0   4a00     infsnz  0, 0x1, 0        	INFSNZ	r0x00, F
000df2   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
000df4   d7a8     bra     0xd46            	BRA	_00186_DS_
                                           _00156_DS_:
                                           ;	.line	455; meter_logger.c	sprintf(debug_buffer, "\n\r");
000df6   0e00     movlw   0                	MOVLW	UPPER(__str_6)
000df8   6e02     movwf   0x2, 0           	MOVWF	r0x02
000dfa   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_6)
000dfc   6e01     movwf   0x1, 0           	MOVWF	r0x01
000dfe   0e4e     movlw   0x4e             	MOVLW	LOW(__str_6)
000e00   6e00     movwf   0, 0             	MOVWF	r0x00
000e02   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000e04   6e04     movwf   0x4, 0           	MOVWF	r0x04
000e06   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000e08   6e03     movwf   0x3, 0           	MOVWF	r0x03
000e0a   0e80     movlw   0x80             	MOVLW	0x80
000e0c   6e05     movwf   0x5, 0           	MOVWF	r0x05
000e0e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000e10   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e12   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000e14   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e16   5000     movf    0, 0, 0          	MOVF	r0x00, W
000e18   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e1a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000e1c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e1e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000e20   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e22   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000e24   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e26   ecfb     call    0x45f6, 0        	CALL	_sprintf
000e28   f022
000e2a   0e06     movlw   0x6              	MOVLW	0x06
000e2c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	456; meter_logger.c	usart_puts(debug_buffer);
000e2e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000e30   6e01     movwf   0x1, 0           	MOVWF	r0x01
000e32   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000e34   6e00     movwf   0, 0             	MOVWF	r0x00
000e36   0e80     movlw   0x80             	MOVLW	0x80
000e38   6e02     movwf   0x2, 0           	MOVWF	r0x02
000e3a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000e3c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e3e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000e40   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e42   5000     movf    0, 0, 0          	MOVF	r0x00, W
000e44   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e46   ec70     call    0x4ce0, 0        	CALL	_usart_puts
000e48   f026
000e4a   0e03     movlw   0x3              	MOVLW	0x03
000e4c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	458; meter_logger.c	if (fifo_in_use()) {
000e4e   ec17     call    0x502e, 0        	CALL	_fifo_in_use
000e50   f028
000e52   6e00     movwf   0, 0             	MOVWF	r0x00
000e54   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
000e56   f001
000e58   5000     movf    0, 0, 0          	MOVF	r0x00, W
000e5a   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
000e5c   e02b     bz      0xeb4            	BZ	_00161_DS_
                                           ;	.line	460; meter_logger.c	DEBUG2_PIN = 1;
000e5e   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000e60   0000     nop                      	nop
000e62   0000     nop                      	nop
                                           	
                                           ;	.line	465; meter_logger.c	DEBUG2_PIN = 0;
000e64   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	466; meter_logger.c	fsk_tx_enable();
000e66   ec4e     call    0x509c, 0        	CALL	_fsk_tx_enable
000e68   f028
                                           _00157_DS_:
                                           ;	.line	467; meter_logger.c	while (fifo_get(&sub_cmd)) {
000e6a   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000e6c   6e01     movwf   0x1, 0           	MOVWF	r0x01
000e6e   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
000e70   6e00     movwf   0, 0             	MOVWF	r0x00
000e72   0e80     movlw   0x80             	MOVLW	0x80
000e74   6e02     movwf   0x2, 0           	MOVWF	r0x02
000e76   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000e78   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e7a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000e7c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e7e   5000     movf    0, 0, 0          	MOVF	r0x00, W
000e80   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e82   ec84     call    0x4108, 0        	CALL	_fifo_get
000e84   f020
000e86   6e00     movwf   0, 0             	MOVWF	r0x00
000e88   0e03     movlw   0x3              	MOVLW	0x03
000e8a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000e8c   5000     movf    0, 0, 0          	MOVF	r0x00, W
000e8e   e00f     bz      0xeae            	BZ	_00159_DS_
000e90   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	468; meter_logger.c	fsk_tx_byte(sub_cmd);
000e92   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000e94   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e96   ecdf     call    0x51be, 0        	CALL	_fsk_tx_byte
000e98   f028
000e9a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	469; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000e9c   0e00     movlw   0                	MOVLW	0x00
000e9e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ea0   0e04     movlw   0x4              	MOVLW	0x04
000ea2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ea4   ec99     call    0x4b32, 0        	CALL	_sleep_ms
000ea6   f025
000ea8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000eaa   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000eac   d7de     bra     0xe6a            	BRA	_00157_DS_
                                           _00159_DS_:
                                           ;	.line	471; meter_logger.c	fsk_tx_disable();
000eae   eca6     call    0x534c, 0        	CALL	_fsk_tx_disable
000eb0   f029
000eb2   d01b     bra     0xeea            	BRA	_00162_DS_
                                           _00161_DS_:
                                           ;	.line	475; meter_logger.c	DEBUG2_PIN = 1;
000eb4   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000eb6   0000     nop                      	nop
000eb8   0000     nop                      	nop
                                           	
                                           ;	.line	480; meter_logger.c	DEBUG2_PIN = 0;
000eba   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
000ebc   0000     nop                      	nop
000ebe   0000     nop                      	nop
                                           	
                                           ;	.line	485; meter_logger.c	DEBUG2_PIN = 1;
000ec0   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000ec2   0000     nop                      	nop
000ec4   0000     nop                      	nop
                                           	
                                           ;	.line	490; meter_logger.c	DEBUG2_PIN = 0;
000ec6   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	495; meter_logger.c	fsk_tx_enable();
000ec8   ec4e     call    0x509c, 0        	CALL	_fsk_tx_enable
000eca   f028
                                           ;	.line	496; meter_logger.c	fsk_tx_byte(0x0d);
000ecc   0e0d     movlw   0xd              	MOVLW	0x0d
000ece   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ed0   ecdf     call    0x51be, 0        	CALL	_fsk_tx_byte
000ed2   f028
000ed4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	497; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000ed6   0e00     movlw   0                	MOVLW	0x00
000ed8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000eda   0e04     movlw   0x4              	MOVLW	0x04
000edc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ede   ec99     call    0x4b32, 0        	CALL	_sleep_ms
000ee0   f025
000ee2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000ee4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	498; meter_logger.c	fsk_tx_disable();
000ee6   eca6     call    0x534c, 0        	CALL	_fsk_tx_disable
000ee8   f029
                                           _00162_DS_:
                                           ;	.line	503; meter_logger.c	fsk_rx_enable();
000eea   ece5     call    0x4dca, 0        	CALL	_fsk_rx_enable
000eec   f026
                                           ;	.line	504; meter_logger.c	break;
000eee   efa9     goto    0x152            	GOTO	_00168_DS_
000ef0   f000
                                           _00163_DS_:
                                           ;	.line	506; meter_logger.c	fsk_rx_disable();
000ef2   ece8     call    0x53d0, 0        	CALL	_fsk_rx_disable
000ef4   f029
                                           ;	.line	507; meter_logger.c	get_battery_level();
000ef6   ecb9     call    0x3772, 0        	CALL	_get_battery_level
000ef8   f01b
                                           ;	.line	508; meter_logger.c	fsk_rx_enable();
000efa   ece5     call    0x4dca, 0        	CALL	_fsk_rx_enable
000efc   f026
                                           ;	.line	510; meter_logger.c	}
000efe   efa9     goto    0x152            	GOTO	_00168_DS_
000f00   f000
000f02   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger___debug2	code
                                           __debug2:
                                           ;	.line	4684; meter_logger.c	void _debug2() {
00481c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00481e   ffe5
004820   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004822   ffd9
                                           ;	.line	4685; meter_logger.c	DEBUG2_PIN = 0x1;
004824   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
004826   0000     nop                      	nop
004828   0000     nop                      	nop
00482a   0000     nop                      	nop
00482c   0000     nop                      	nop
00482e   0000     nop                      	nop
004830   0000     nop                      	nop
004832   0000     nop                      	nop
004834   0000     nop                      	nop
004836   0000     nop                      	nop
004838   0000     nop                      	nop
00483a   0000     nop                      	nop
00483c   0000     nop                      	nop
00483e   0000     nop                      	nop
004840   0000     nop                      	nop
004842   0000     nop                      	nop
004844   0000     nop                      	nop
004846   0000     nop                      	nop
004848   0000     nop                      	nop
00484a   0000     nop                      	nop
00484c   0000     nop                      	nop
00484e   0000     nop                      	nop
004850   0000     nop                      	nop
004852   0000     nop                      	nop
004854   0000     nop                      	nop
004856   0000     nop                      	nop
004858   0000     nop                      	nop
00485a   0000     nop                      	nop
00485c   0000     nop                      	nop
00485e   0000     nop                      	nop
004860   0000     nop                      	nop
004862   0000     nop                      	nop
004864   0000     nop                      	nop
004866   0000     nop                      	nop
004868   0000     nop                      	nop
00486a   0000     nop                      	nop
00486c   0000     nop                      	nop
00486e   0000     nop                      	nop
004870   0000     nop                      	nop
004872   0000     nop                      	nop
004874   0000     nop                      	nop
004876   0000     nop                      	nop
004878   0000     nop                      	nop
00487a   0000     nop                      	nop
00487c   0000     nop                      	nop
00487e   0000     nop                      	nop
                                           	
                                           ;	.line	4733; meter_logger.c	DEBUG2_PIN = 0x0;
004880   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
004882   0000     nop                      	nop
004884   0000     nop                      	nop
004886   0000     nop                      	nop
004888   0000     nop                      	nop
00488a   0000     nop                      	nop
00488c   0000     nop                      	nop
00488e   0000     nop                      	nop
004890   0000     nop                      	nop
004892   0000     nop                      	nop
004894   0000     nop                      	nop
004896   0000     nop                      	nop
004898   0000     nop                      	nop
00489a   0000     nop                      	nop
00489c   0000     nop                      	nop
00489e   0000     nop                      	nop
0048a0   0000     nop                      	nop
0048a2   0000     nop                      	nop
0048a4   0000     nop                      	nop
0048a6   0000     nop                      	nop
0048a8   0000     nop                      	nop
0048aa   0000     nop                      	nop
0048ac   0000     nop                      	nop
0048ae   0000     nop                      	nop
0048b0   0000     nop                      	nop
0048b2   0000     nop                      	nop
0048b4   0000     nop                      	nop
0048b6   0000     nop                      	nop
0048b8   0000     nop                      	nop
0048ba   0000     nop                      	nop
0048bc   0000     nop                      	nop
0048be   0000     nop                      	nop
0048c0   0000     nop                      	nop
0048c2   0000     nop                      	nop
0048c4   0000     nop                      	nop
0048c6   0000     nop                      	nop
0048c8   0000     nop                      	nop
0048ca   0000     nop                      	nop
0048cc   0000     nop                      	nop
0048ce   0000     nop                      	nop
0048d0   0000     nop                      	nop
0048d2   0000     nop                      	nop
0048d4   0000     nop                      	nop
0048d6   0000     nop                      	nop
0048d8   0000     nop                      	nop
0048da   0000     nop                      	nop
                                           	
0048dc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0048de   ffd9
0048e0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger___debug	code
                                           __debug:
                                           ;	.line	4584; meter_logger.c	void _debug() {
0048e2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0048e4   ffe5
0048e6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0048e8   ffd9
                                           ;	.line	4585; meter_logger.c	DEBUG_PIN = 0x1;
0048ea   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
0048ec   0000     nop                      	nop
0048ee   0000     nop                      	nop
0048f0   0000     nop                      	nop
0048f2   0000     nop                      	nop
0048f4   0000     nop                      	nop
0048f6   0000     nop                      	nop
0048f8   0000     nop                      	nop
0048fa   0000     nop                      	nop
0048fc   0000     nop                      	nop
0048fe   0000     nop                      	nop
004900   0000     nop                      	nop
004902   0000     nop                      	nop
004904   0000     nop                      	nop
004906   0000     nop                      	nop
004908   0000     nop                      	nop
00490a   0000     nop                      	nop
00490c   0000     nop                      	nop
00490e   0000     nop                      	nop
004910   0000     nop                      	nop
004912   0000     nop                      	nop
004914   0000     nop                      	nop
004916   0000     nop                      	nop
004918   0000     nop                      	nop
00491a   0000     nop                      	nop
00491c   0000     nop                      	nop
00491e   0000     nop                      	nop
004920   0000     nop                      	nop
004922   0000     nop                      	nop
004924   0000     nop                      	nop
004926   0000     nop                      	nop
004928   0000     nop                      	nop
00492a   0000     nop                      	nop
00492c   0000     nop                      	nop
00492e   0000     nop                      	nop
004930   0000     nop                      	nop
004932   0000     nop                      	nop
004934   0000     nop                      	nop
004936   0000     nop                      	nop
004938   0000     nop                      	nop
00493a   0000     nop                      	nop
00493c   0000     nop                      	nop
00493e   0000     nop                      	nop
004940   0000     nop                      	nop
004942   0000     nop                      	nop
004944   0000     nop                      	nop
                                           	
                                           ;	.line	4633; meter_logger.c	DEBUG_PIN = 0x0;
004946   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
004948   0000     nop                      	nop
00494a   0000     nop                      	nop
00494c   0000     nop                      	nop
00494e   0000     nop                      	nop
004950   0000     nop                      	nop
004952   0000     nop                      	nop
004954   0000     nop                      	nop
004956   0000     nop                      	nop
004958   0000     nop                      	nop
00495a   0000     nop                      	nop
00495c   0000     nop                      	nop
00495e   0000     nop                      	nop
004960   0000     nop                      	nop
004962   0000     nop                      	nop
004964   0000     nop                      	nop
004966   0000     nop                      	nop
004968   0000     nop                      	nop
00496a   0000     nop                      	nop
00496c   0000     nop                      	nop
00496e   0000     nop                      	nop
004970   0000     nop                      	nop
004972   0000     nop                      	nop
004974   0000     nop                      	nop
004976   0000     nop                      	nop
004978   0000     nop                      	nop
00497a   0000     nop                      	nop
00497c   0000     nop                      	nop
00497e   0000     nop                      	nop
004980   0000     nop                      	nop
004982   0000     nop                      	nop
004984   0000     nop                      	nop
004986   0000     nop                      	nop
004988   0000     nop                      	nop
00498a   0000     nop                      	nop
00498c   0000     nop                      	nop
00498e   0000     nop                      	nop
004990   0000     nop                      	nop
004992   0000     nop                      	nop
004994   0000     nop                      	nop
004996   0000     nop                      	nop
004998   0000     nop                      	nop
00499a   0000     nop                      	nop
00499c   0000     nop                      	nop
00499e   0000     nop                      	nop
0049a0   0000     nop                      	nop
                                           	
0049a2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0049a4   ffd9
0049a6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__flash_led	code
                                           _flash_led:
                                           ;	.line	4579; meter_logger.c	void flash_led(unsigned char ms) {
005290   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005292   ffe5
005294   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005296   ffd9
005298   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00529a   ffe5
00529c   0e02     movlw   0x2              	MOVLW	0x02
00529e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0052a0   f000
                                           ;	.line	4580; meter_logger.c	led_flash.timer = ms;
0052a2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0052a4   0105     movlb   0x5              	BANKSEL	(_led_flash + 1)
0052a6   6f4d     movwf   0x4d, 0x1        	MOVWF	(_led_flash + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	4581; meter_logger.c	led_flash.state = LED_FLASH_RUN;
0052a8   6b4c     clrf    0x4c, 0x1        	CLRF	_led_flash, B
0052aa   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0052ac   f000
0052ae   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0052b0   ffd9
0052b2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__get_battery_level	code
                                           _get_battery_level:
                                           ;	.line	4548; meter_logger.c	unsigned int get_battery_level() {
003772   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003774   ffe5
003776   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003778   ffd9
00377a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00377c   ffe5
00377e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003780   ffe5
003782   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003784   ffe5
003786   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003788   ffe5
00378a   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00378c   ffe5
00378e   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003790   ffe5
003792   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003794   ffe5
003796   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
003798   ffe5
                                           ;	.line	4552; meter_logger.c	adc_open(ADC_CHN_4 , ADC_FOSC_64, ADC_CFG_5A, ADC_FRM_RJUST | ADC_INT_OFF | ADC_VCFG_VDD_VSS);
00379a   0e80     movlw   0x80             	MOVLW	0x80
00379c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00379e   0e0a     movlw   0xa              	MOVLW	0x0a
0037a0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037a2   0e06     movlw   0x6              	MOVLW	0x06
0037a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037a6   0e04     movlw   0x4              	MOVLW	0x04
0037a8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037aa   ec32     call    0x4c64, 0        	CALL	_adc_open
0037ac   f026
0037ae   0e04     movlw   0x4              	MOVLW	0x04
0037b0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4554; meter_logger.c	adc_setchannel(ADC_CHN_4);
0037b2   0e04     movlw   0x4              	MOVLW	0x04
0037b4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037b6   ecfa     call    0x4ff4, 0        	CALL	_adc_setchannel
0037b8   f027
0037ba   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	4555; meter_logger.c	adc_conv();
0037bc   ec0a     call    0x14, 0          	CALL	_adc_conv
0037be   f000
                                           _01172_DS_:
                                           ;	.line	4556; meter_logger.c	while(adc_busy()) {
0037c0   ec1e     call    0x543c, 0        	CALL	_adc_busy
0037c2   f02a
0037c4   6e00     movwf   0, 0             	MOVWF	r0x00
0037c6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0037c8   e1fb     bnz     0x37c0           	BNZ	_01172_DS_
                                           ;	.line	4560; meter_logger.c	dev_id = get_dev_id();
0037ca   ecac     call    0x4d58, 0        	CALL	_get_dev_id
0037cc   f026
0037ce   6e00     movwf   0, 0             	MOVWF	r0x00
0037d0   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0037d2   f001
                                           ;	.line	4561; meter_logger.c	if (dev_id == 0x1240) {
0037d4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0037d6   0a40     xorlw   0x40             	XORLW	0x40
0037d8   e103     bnz     0x37e0           	BNZ	_01195_DS_
0037da   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0037dc   0a12     xorlw   0x12             	XORLW	0x12
0037de   e001     bz      0x37e2           	BZ	_01196_DS_
                                           _01195_DS_:
0037e0   d041     bra     0x3864           	BRA	_01179_DS_
                                           _01196_DS_:
                                           ;	.line	4563; meter_logger.c	v_level = (unsigned long)1000 * (unsigned long)adc_read() * (unsigned long)833/(unsigned long)93600;
0037e2   ec16     call    0x542c, 0        	CALL	_adc_read
0037e4   f02a
0037e6   6e02     movwf   0x2, 0           	MOVWF	r0x02
0037e8   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0037ea   f003
0037ec   6ae8     clrf    0xe8, 0          	CLRF	WREG
0037ee   be03     btfsc   0x3, 0x7, 0      	BTFSC	r0x03, 7
0037f0   0eff     movlw   0xff             	MOVLW	0xff
0037f2   6e04     movwf   0x4, 0           	MOVWF	r0x04
0037f4   6e05     movwf   0x5, 0           	MOVWF	r0x05
0037f6   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0037f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037fa   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0037fc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037fe   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003800   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003802   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003804   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003806   0e00     movlw   0                	MOVLW	0x00
003808   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00380a   0e0c     movlw   0xc              	MOVLW	0x0c
00380c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00380e   0eb5     movlw   0xb5             	MOVLW	0xb5
003810   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003812   0ee8     movlw   0xe8             	MOVLW	0xe8
003814   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003816   ecce     call    0x399c, 0        	CALL	__mullong
003818   f01c
00381a   6e02     movwf   0x2, 0           	MOVWF	r0x02
00381c   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00381e   f003
003820   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
003822   f004
003824   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
003826   f005
003828   0e08     movlw   0x8              	MOVLW	0x08
00382a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00382c   0e00     movlw   0                	MOVLW	0x00
00382e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003830   0e01     movlw   0x1              	MOVLW	0x01
003832   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003834   0e6d     movlw   0x6d             	MOVLW	0x6d
003836   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003838   0ea0     movlw   0xa0             	MOVLW	0xa0
00383a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00383c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00383e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003840   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003842   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003844   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003846   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003848   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00384a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00384c   ec6f     call    0x44de, 0        	CALL	__divulong
00384e   f022
003850   6e02     movwf   0x2, 0           	MOVWF	r0x02
003852   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
003854   f003
003856   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
003858   f004
00385a   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
00385c   f005
00385e   0e08     movlw   0x8              	MOVLW	0x08
003860   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003862   d054     bra     0x390c           	BRA	_01180_DS_
                                           _01179_DS_:
                                           ;	.line	4565; meter_logger.c	else if (dev_id == 0x2a40) {
003864   5000     movf    0, 0, 0          	MOVF	r0x00, W
003866   0a40     xorlw   0x40             	XORLW	0x40
003868   e103     bnz     0x3870           	BNZ	_01197_DS_
00386a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00386c   0a2a     xorlw   0x2a             	XORLW	0x2a
00386e   e001     bz      0x3872           	BZ	_01198_DS_
                                           _01197_DS_:
003870   d04b     bra     0x3908           	BRA	_01176_DS_
                                           _01198_DS_:
                                           ;	.line	4567; meter_logger.c	v_level = (unsigned long)1000 * (unsigned long)(adc_read() >> 2) * (unsigned long)833/(unsigned long)93600;
003872   ec16     call    0x542c, 0        	CALL	_adc_read
003874   f02a
003876   6e00     movwf   0, 0             	MOVWF	r0x00
003878   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00387a   f001
00387c   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
00387e   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
003880   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
003882   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
003884   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
003886   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
003888   6ae8     clrf    0xe8, 0          	CLRF	WREG
00388a   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
00388c   0eff     movlw   0xff             	MOVLW	0xff
00388e   6e04     movwf   0x4, 0           	MOVWF	r0x04
003890   6e05     movwf   0x5, 0           	MOVWF	r0x05
003892   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003894   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003896   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003898   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00389a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00389c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00389e   5000     movf    0, 0, 0          	MOVF	r0x00, W
0038a0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038a2   0e00     movlw   0                	MOVLW	0x00
0038a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038a6   0e0c     movlw   0xc              	MOVLW	0x0c
0038a8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038aa   0eb5     movlw   0xb5             	MOVLW	0xb5
0038ac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038ae   0ee8     movlw   0xe8             	MOVLW	0xe8
0038b0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038b2   ecce     call    0x399c, 0        	CALL	__mullong
0038b4   f01c
0038b6   6e00     movwf   0, 0             	MOVWF	r0x00
0038b8   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0038ba   f001
0038bc   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
0038be   f004
0038c0   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
0038c2   f005
0038c4   0e08     movlw   0x8              	MOVLW	0x08
0038c6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0038c8   0e00     movlw   0                	MOVLW	0x00
0038ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038cc   0e01     movlw   0x1              	MOVLW	0x01
0038ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038d0   0e6d     movlw   0x6d             	MOVLW	0x6d
0038d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038d4   0ea0     movlw   0xa0             	MOVLW	0xa0
0038d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038d8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0038da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038dc   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0038de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038e0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0038e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038e4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0038e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038e8   ec6f     call    0x44de, 0        	CALL	__divulong
0038ea   f022
0038ec   6e00     movwf   0, 0             	MOVWF	r0x00
0038ee   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0038f0   f001
0038f2   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
0038f4   f004
0038f6   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
0038f8   f005
0038fa   0e08     movlw   0x8              	MOVLW	0x08
0038fc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0038fe   5000     movf    0, 0, 0          	MOVF	r0x00, W
003900   6e02     movwf   0x2, 0           	MOVWF	r0x02
003902   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003904   6e03     movwf   0x3, 0           	MOVWF	r0x03
003906   d002     bra     0x390c           	BRA	_01180_DS_
                                           _01176_DS_:
                                           ;	.line	4570; meter_logger.c	v_level = 0;
003908   6a02     clrf    0x2, 0           	CLRF	r0x02
00390a   6a03     clrf    0x3, 0           	CLRF	r0x03
                                           _01180_DS_:
                                           ;	.line	4572; meter_logger.c	sprintf(debug_buffer, "Battery: %dmV\n\r", v_level);
00390c   0e00     movlw   0                	MOVLW	UPPER(__str_8)
00390e   6e04     movwf   0x4, 0           	MOVWF	r0x04
003910   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_8)
003912   6e01     movwf   0x1, 0           	MOVWF	r0x01
003914   0e56     movlw   0x56             	MOVLW	LOW(__str_8)
003916   6e00     movwf   0, 0             	MOVWF	r0x00
003918   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00391a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00391c   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00391e   6e05     movwf   0x5, 0           	MOVWF	r0x05
003920   0e80     movlw   0x80             	MOVLW	0x80
003922   6e07     movwf   0x7, 0           	MOVWF	r0x07
003924   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003926   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003928   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00392a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00392c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00392e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003930   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003932   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003934   5000     movf    0, 0, 0          	MOVF	r0x00, W
003936   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003938   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00393a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00393c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00393e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003940   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003942   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003944   ecfb     call    0x45f6, 0        	CALL	_sprintf
003946   f022
003948   0e08     movlw   0x8              	MOVLW	0x08
00394a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4573; meter_logger.c	usart_puts(debug_buffer);	
00394c   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00394e   6e01     movwf   0x1, 0           	MOVWF	r0x01
003950   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
003952   6e00     movwf   0, 0             	MOVWF	r0x00
003954   0e80     movlw   0x80             	MOVLW	0x80
003956   6e04     movwf   0x4, 0           	MOVWF	r0x04
003958   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00395a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00395c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00395e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003960   5000     movf    0, 0, 0          	MOVF	r0x00, W
003962   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003964   ec70     call    0x4ce0, 0        	CALL	_usart_puts
003966   f026
003968   0e03     movlw   0x3              	MOVLW	0x03
00396a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4575; meter_logger.c	adc_close();
00396c   ec29     call    0x5452, 0        	CALL	_adc_close
00396e   f02a
                                           ;	.line	4576; meter_logger.c	return v_level;
003970   c003     movff   0x3, 0xff3       	MOVFF	r0x03, PRODL
003972   fff3
003974   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003976   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003978   f007
00397a   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
00397c   f006
00397e   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003980   f005
003982   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003984   f004
003986   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003988   f003
00398a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00398c   f002
00398e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003990   f001
003992   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003994   f000
003996   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003998   ffd9
00399a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_snoop	code
                                           _fifo_snoop:
                                           ;	.line	4525; meter_logger.c	unsigned char fifo_snoop(unsigned char *c, unsigned int pos) {
003f68   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003f6a   ffe5
003f6c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003f6e   ffd9
003f70   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003f72   ffe5
003f74   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003f76   ffe5
003f78   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003f7a   ffe5
003f7c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003f7e   ffe5
003f80   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003f82   ffe5
003f84   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003f86   ffe5
003f88   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003f8a   ffe5
003f8c   0e02     movlw   0x2              	MOVLW	0x02
003f8e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003f90   f000
003f92   0e03     movlw   0x3              	MOVLW	0x03
003f94   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003f96   f001
003f98   0e04     movlw   0x4              	MOVLW	0x04
003f9a   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
003f9c   f002
003f9e   0e05     movlw   0x5              	MOVLW	0x05
003fa0   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
003fa2   f003
003fa4   0e06     movlw   0x6              	MOVLW	0x06
003fa6   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
003fa8   f004
                                           ;	.line	4526; meter_logger.c	if (fifo_in_use() > (pos)) {
003faa   ec17     call    0x502e, 0        	CALL	_fifo_in_use
003fac   f028
003fae   6e05     movwf   0x5, 0           	MOVWF	r0x05
003fb0   cff3     movff   0xff3, 0x6       	MOVFF	PRODL, r0x06
003fb2   f006
003fb4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003fb6   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
003fb8   e102     bnz     0x3fbe           	BNZ	_01165_DS_
003fba   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003fbc   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _01165_DS_:
003fbe   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003fc0   d091     bra     0x40e4           	BRA	_01155_DS_
003fc2   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
                                           ;	.line	4527; meter_logger.c	switch (fifo_tail/QUEUE_SIZE) {
003fc4   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
003fc6   6e05     movwf   0x5, 0           	MOVWF	r0x05
003fc8   6a06     clrf    0x6, 0           	CLRF	r0x06
003fca   0e00     movlw   0                	MOVLW	0x00
003fcc   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003fce   e102     bnz     0x3fd4           	BNZ	_01166_DS_
003fd0   0e04     movlw   0x4              	MOVLW	0x04
003fd2   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
                                           _01166_DS_:
003fd4   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003fd6   d084     bra     0x40e0           	BRA	_01153_DS_
003fd8   6afa     clrf    0xfa, 0          	CLRF	PCLATH
003fda   6afb     clrf    0xfb, 0          	CLRF	PCLATU
003fdc   3405     rlcf    0x5, 0, 0        	RLCF	r0x05, W
003fde   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
003fe0   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
003fe2   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
003fe4   0bfc     andlw   0xfc             	ANDLW	0xfc
003fe6   0ff6     addlw   0xf6             	ADDLW	LOW(_01167_DS_)
003fe8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003fea   0e3f     movlw   0x3f             	MOVLW	HIGH(_01167_DS_)
003fec   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
003fee   0e00     movlw   0                	MOVLW	UPPER(_01167_DS_)
003ff0   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
003ff2   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
003ff4   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01167_DS_:
003ff6   ef03     goto    0x4006           	GOTO	_01149_DS_
003ff8   f020
003ffa   ef1f     goto    0x403e           	GOTO	_01150_DS_
003ffc   f020
003ffe   ef3b     goto    0x4076           	GOTO	_01151_DS_
004000   f020
004002   ef57     goto    0x40ae           	GOTO	_01152_DS_
004004   f020
                                           _01149_DS_:
                                           ;	.line	4529; meter_logger.c	*c = fifo_buffer_0[(fifo_tail + pos) % QUEUE_SIZE];
004006   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004008   0105     movlb   0x5              	BANKSEL	_fifo_tail
00400a   2544     addwf   0x44, 0, 0x1     	ADDWF	_fifo_tail, W, B
00400c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00400e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
004010   2145     addwfc  0x45, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
004012   6e06     movwf   0x6, 0           	MOVWF	r0x06
004014   6a06     clrf    0x6, 0           	CLRF	r0x06
004016   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
004018   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
00401a   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
00401c   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
00401e   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
004020   ffe9
004022   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
004024   ffea
004026   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
004028   f005
00402a   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00402c   ffe5
00402e   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004030   ffe9
004032   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
004034   fff3
004036   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004038   ecdd     call    0x53ba, 0        	CALL	__gptrput1
00403a   f029
                                           ;	.line	4530; meter_logger.c	break;
00403c   d051     bra     0x40e0           	BRA	_01153_DS_
                                           _01150_DS_:
                                           ;	.line	4532; meter_logger.c	*c = fifo_buffer_1[(fifo_tail + pos) % QUEUE_SIZE];
00403e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004040   0105     movlb   0x5              	BANKSEL	_fifo_tail
004042   2544     addwf   0x44, 0, 0x1     	ADDWF	_fifo_tail, W, B
004044   6e05     movwf   0x5, 0           	MOVWF	r0x05
004046   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
004048   2145     addwfc  0x45, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
00404a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00404c   6a06     clrf    0x6, 0           	CLRF	r0x06
00404e   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
004050   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
004052   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
004054   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
004056   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
004058   ffe9
00405a   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
00405c   ffea
00405e   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
004060   f005
004062   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004064   ffe5
004066   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004068   ffe9
00406a   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00406c   fff3
00406e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004070   ecdd     call    0x53ba, 0        	CALL	__gptrput1
004072   f029
                                           ;	.line	4533; meter_logger.c	break;
004074   d035     bra     0x40e0           	BRA	_01153_DS_
                                           _01151_DS_:
                                           ;	.line	4535; meter_logger.c	*c = fifo_buffer_2[(fifo_tail + pos) % QUEUE_SIZE];
004076   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004078   0105     movlb   0x5              	BANKSEL	_fifo_tail
00407a   2544     addwf   0x44, 0, 0x1     	ADDWF	_fifo_tail, W, B
00407c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00407e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
004080   2145     addwfc  0x45, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
004082   6e06     movwf   0x6, 0           	MOVWF	r0x06
004084   6a06     clrf    0x6, 0           	CLRF	r0x06
004086   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
004088   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
00408a   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
00408c   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
00408e   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
004090   ffe9
004092   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
004094   ffea
004096   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
004098   f005
00409a   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00409c   ffe5
00409e   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0040a0   ffe9
0040a2   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0040a4   fff3
0040a6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0040a8   ecdd     call    0x53ba, 0        	CALL	__gptrput1
0040aa   f029
                                           ;	.line	4536; meter_logger.c	break;
0040ac   d019     bra     0x40e0           	BRA	_01153_DS_
                                           _01152_DS_:
0040ae   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4538; meter_logger.c	*c = fifo_buffer_3[(fifo_tail + pos) % QUEUE_SIZE];
0040b0   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
0040b2   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
                                           ; removed redundant BANKSEL
0040b4   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
0040b6   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0040b8   6a04     clrf    0x4, 0           	CLRF	r0x04
0040ba   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
0040bc   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
0040be   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
0040c0   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0040c2   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0040c4   ffe9
0040c6   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0040c8   ffea
0040ca   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
0040cc   f003
0040ce   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0040d0   ffe5
0040d2   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0040d4   ffe9
0040d6   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0040d8   fff3
0040da   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0040dc   ecdd     call    0x53ba, 0        	CALL	__gptrput1
0040de   f029
                                           _01153_DS_:
                                           ;	.line	4541; meter_logger.c	return 1;
0040e0   0e01     movlw   0x1              	MOVLW	0x01
0040e2   d001     bra     0x40e6           	BRA	_01157_DS_
                                           _01155_DS_:
                                           ;	.line	4544; meter_logger.c	return 0;
0040e4   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _01157_DS_:
0040e6   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
0040e8   f006
0040ea   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0040ec   f005
0040ee   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0040f0   f004
0040f2   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0040f4   f003
0040f6   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0040f8   f002
0040fa   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0040fc   f001
0040fe   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004100   f000
004102   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004104   ffd9
004106   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_get	code
                                           _fifo_get:
                                           ;	.line	4497; meter_logger.c	unsigned char fifo_get(unsigned char *c) {
004108   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00410a   ffe5
00410c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00410e   ffd9
004110   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004112   ffe5
004114   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004116   ffe5
004118   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00411a   ffe5
00411c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00411e   ffe5
004120   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004122   ffe5
004124   0e02     movlw   0x2              	MOVLW	0x02
004126   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004128   f000
00412a   0e03     movlw   0x3              	MOVLW	0x03
00412c   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
00412e   f001
004130   0e04     movlw   0x4              	MOVLW	0x04
004132   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
004134   f002
                                           ;	.line	4498; meter_logger.c	if (fifo_in_use() != 0) {
004136   ec17     call    0x502e, 0        	CALL	_fifo_in_use
004138   f028
00413a   6e03     movwf   0x3, 0           	MOVWF	r0x03
00413c   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
00413e   f004
004140   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004142   1004     iorwf   0x4, 0, 0        	IORWF	r0x04, W
004144   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
004146   d091     bra     0x426a           	BRA	_01124_DS_
004148   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
                                           ;	.line	4499; meter_logger.c	switch (fifo_tail/QUEUE_SIZE) {
00414a   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
00414c   6e03     movwf   0x3, 0           	MOVWF	r0x03
00414e   6a04     clrf    0x4, 0           	CLRF	r0x04
004150   0e00     movlw   0                	MOVLW	0x00
004152   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
004154   e102     bnz     0x415a           	BNZ	_01137_DS_
004156   0e04     movlw   0x4              	MOVLW	0x04
004158   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _01137_DS_:
00415a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00415c   d076     bra     0x424a           	BRA	_01120_DS_
00415e   6afa     clrf    0xfa, 0          	CLRF	PCLATH
004160   6afb     clrf    0xfb, 0          	CLRF	PCLATU
004162   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
004164   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
004166   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
004168   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00416a   0bfc     andlw   0xfc             	ANDLW	0xfc
00416c   0f7c     addlw   0x7c             	ADDLW	LOW(_01138_DS_)
00416e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004170   0e41     movlw   0x41             	MOVLW	HIGH(_01138_DS_)
004172   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
004174   0e00     movlw   0                	MOVLW	UPPER(_01138_DS_)
004176   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
004178   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
00417a   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01138_DS_:
00417c   efc6     goto    0x418c           	GOTO	_01116_DS_
00417e   f020
004180   efde     goto    0x41bc           	GOTO	_01117_DS_
004182   f020
004184   eff6     goto    0x41ec           	GOTO	_01118_DS_
004186   f020
004188   ef0e     goto    0x421c           	GOTO	_01119_DS_
00418a   f021
                                           _01116_DS_:
00418c   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4501; meter_logger.c	*c = fifo_buffer_0[fifo_tail % QUEUE_SIZE];
00418e   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
004190   6e03     movwf   0x3, 0           	MOVWF	r0x03
004192   6a04     clrf    0x4, 0           	CLRF	r0x04
004194   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
004196   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
004198   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
00419a   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
00419c   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
00419e   ffe9
0041a0   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0041a2   ffea
0041a4   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
0041a6   f003
0041a8   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0041aa   ffe5
0041ac   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0041ae   ffe9
0041b0   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0041b2   fff3
0041b4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0041b6   ecdd     call    0x53ba, 0        	CALL	__gptrput1
0041b8   f029
                                           ;	.line	4502; meter_logger.c	break;
0041ba   d047     bra     0x424a           	BRA	_01120_DS_
                                           _01117_DS_:
0041bc   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4504; meter_logger.c	*c = fifo_buffer_1[fifo_tail % QUEUE_SIZE];
0041be   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
0041c0   6e03     movwf   0x3, 0           	MOVWF	r0x03
0041c2   6a04     clrf    0x4, 0           	CLRF	r0x04
0041c4   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
0041c6   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
0041c8   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
0041ca   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0041cc   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0041ce   ffe9
0041d0   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0041d2   ffea
0041d4   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
0041d6   f003
0041d8   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0041da   ffe5
0041dc   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0041de   ffe9
0041e0   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0041e2   fff3
0041e4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0041e6   ecdd     call    0x53ba, 0        	CALL	__gptrput1
0041e8   f029
                                           ;	.line	4505; meter_logger.c	break;
0041ea   d02f     bra     0x424a           	BRA	_01120_DS_
                                           _01118_DS_:
0041ec   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4507; meter_logger.c	*c = fifo_buffer_2[fifo_tail % QUEUE_SIZE];
0041ee   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
0041f0   6e03     movwf   0x3, 0           	MOVWF	r0x03
0041f2   6a04     clrf    0x4, 0           	CLRF	r0x04
0041f4   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
0041f6   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
0041f8   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
0041fa   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0041fc   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0041fe   ffe9
004200   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
004202   ffea
004204   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
004206   f003
004208   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00420a   ffe5
00420c   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00420e   ffe9
004210   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
004212   fff3
004214   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004216   ecdd     call    0x53ba, 0        	CALL	__gptrput1
004218   f029
                                           ;	.line	4508; meter_logger.c	break;
00421a   d017     bra     0x424a           	BRA	_01120_DS_
                                           _01119_DS_:
00421c   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4510; meter_logger.c	*c = fifo_buffer_3[fifo_tail % QUEUE_SIZE];
00421e   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
004220   6e03     movwf   0x3, 0           	MOVWF	r0x03
004222   6a04     clrf    0x4, 0           	CLRF	r0x04
004224   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
004226   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
004228   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
00422a   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
00422c   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
00422e   ffe9
004230   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
004232   ffea
004234   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
004236   f003
004238   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00423a   ffe5
00423c   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00423e   ffe9
004240   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
004242   fff3
004244   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004246   ecdd     call    0x53ba, 0        	CALL	__gptrput1
004248   f029
                                           _01120_DS_:
00424a   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4513; meter_logger.c	fifo_tail++;
00424c   3f44     incfsz  0x44, 0x1, 0x1   	INCFSZ	_fifo_tail, F, B
00424e   d001     bra     0x4252           	BRA	_11213_DS_
                                           ; removed redundant BANKSEL
004250   2b45     incf    0x45, 0x1, 0x1   	INCF	(_fifo_tail + 1), F, B
                                           _11213_DS_:
004252   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4515; meter_logger.c	if (fifo_tail == QUEUE_SIZE_COMBINED) {
004254   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
004256   e103     bnz     0x425e           	BNZ	_01143_DS_
                                           ; removed redundant BANKSEL
004258   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
00425a   0a04     xorlw   0x4              	XORLW	0x04
00425c   e001     bz      0x4260           	BZ	_01144_DS_
                                           _01143_DS_:
00425e   d003     bra     0x4266           	BRA	_01122_DS_
                                           _01144_DS_:
004260   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4516; meter_logger.c	fifo_tail = 0;
004262   6b44     clrf    0x44, 0x1        	CLRF	_fifo_tail, B
                                           ; removed redundant BANKSEL
004264   6b45     clrf    0x45, 0x1        	CLRF	(_fifo_tail + 1), B
                                           _01122_DS_:
                                           ;	.line	4518; meter_logger.c	return 1;
004266   0e01     movlw   0x1              	MOVLW	0x01
004268   d001     bra     0x426c           	BRA	_01126_DS_
                                           _01124_DS_:
                                           ;	.line	4521; meter_logger.c	return 0;
00426a   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _01126_DS_:
00426c   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00426e   f004
004270   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004272   f003
004274   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004276   f002
004278   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00427a   f001
00427c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00427e   f000
004280   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004282   ffd9
004284   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_put	code
                                           _fifo_put:
                                           ;	.line	4469; meter_logger.c	unsigned char fifo_put(unsigned char c) {
0043c0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0043c2   ffe5
0043c4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0043c6   ffd9
0043c8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0043ca   ffe5
0043cc   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0043ce   ffe5
0043d0   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0043d2   ffe5
0043d4   0e02     movlw   0x2              	MOVLW	0x02
0043d6   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0043d8   f000
                                           ;	.line	4470; meter_logger.c	if (fifo_in_use() != QUEUE_SIZE_COMBINED) {
0043da   ec17     call    0x502e, 0        	CALL	_fifo_in_use
0043dc   f028
0043de   6e01     movwf   0x1, 0           	MOVWF	r0x01
0043e0   cff3     movff   0xff3, 0x2       	MOVFF	PRODL, r0x02
0043e2   f002
0043e4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0043e6   e104     bnz     0x43f0           	BNZ	_01103_DS_
0043e8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0043ea   0a04     xorlw   0x4              	XORLW	0x04
0043ec   e101     bnz     0x43f0           	BNZ	_01103_DS_
0043ee   d06d     bra     0x44ca           	BRA	_01089_DS_
                                           _01103_DS_:
0043f0   0105     movlb   0x5              	BANKSEL	(_fifo_head + 1)
                                           ;	.line	4471; meter_logger.c	switch (fifo_head/QUEUE_SIZE) {
0043f2   5143     movf    0x43, 0, 0x1     	MOVF	(_fifo_head + 1), W, B
0043f4   6e01     movwf   0x1, 0           	MOVWF	r0x01
0043f6   6a02     clrf    0x2, 0           	CLRF	r0x02
0043f8   0e00     movlw   0                	MOVLW	0x00
0043fa   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
0043fc   e102     bnz     0x4402           	BNZ	_01104_DS_
0043fe   0e04     movlw   0x4              	MOVLW	0x04
004400   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
                                           _01104_DS_:
004402   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
004404   d052     bra     0x44aa           	BRA	_01085_DS_
004406   6afa     clrf    0xfa, 0          	CLRF	PCLATH
004408   6afb     clrf    0xfb, 0          	CLRF	PCLATU
00440a   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
00440c   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00440e   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
004410   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
004412   0bfc     andlw   0xfc             	ANDLW	0xfc
004414   0f24     addlw   0x24             	ADDLW	LOW(_01105_DS_)
004416   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004418   0e44     movlw   0x44             	MOVLW	HIGH(_01105_DS_)
00441a   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
00441c   0e00     movlw   0                	MOVLW	UPPER(_01105_DS_)
00441e   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
004420   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
004422   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01105_DS_:
004424   ef1a     goto    0x4434           	GOTO	_01081_DS_
004426   f022
004428   ef29     goto    0x4452           	GOTO	_01082_DS_
00442a   f022
00442c   ef38     goto    0x4470           	GOTO	_01083_DS_
00442e   f022
004430   ef47     goto    0x448e           	GOTO	_01084_DS_
004432   f022
                                           _01081_DS_:
004434   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4473; meter_logger.c	fifo_buffer_0[fifo_head % QUEUE_SIZE] = c;
004436   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
004438   6e01     movwf   0x1, 0           	MOVWF	r0x01
00443a   6a02     clrf    0x2, 0           	CLRF	r0x02
00443c   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
00443e   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
004440   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
004442   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
004444   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
004446   ffe9
004448   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
00444a   ffea
00444c   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
00444e   ffef
                                           ;	.line	4474; meter_logger.c	break;
004450   d02c     bra     0x44aa           	BRA	_01085_DS_
                                           _01082_DS_:
004452   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4476; meter_logger.c	fifo_buffer_1[fifo_head % QUEUE_SIZE] = c;
004454   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
004456   6e01     movwf   0x1, 0           	MOVWF	r0x01
004458   6a02     clrf    0x2, 0           	CLRF	r0x02
00445a   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
00445c   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
00445e   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
004460   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
004462   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
004464   ffe9
004466   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
004468   ffea
00446a   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
00446c   ffef
                                           ;	.line	4477; meter_logger.c	break;
00446e   d01d     bra     0x44aa           	BRA	_01085_DS_
                                           _01083_DS_:
004470   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4479; meter_logger.c	fifo_buffer_2[fifo_head % QUEUE_SIZE] = c;
004472   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
004474   6e01     movwf   0x1, 0           	MOVWF	r0x01
004476   6a02     clrf    0x2, 0           	CLRF	r0x02
004478   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
00447a   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
00447c   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
00447e   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
004480   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
004482   ffe9
004484   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
004486   ffea
004488   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
00448a   ffef
                                           ;	.line	4480; meter_logger.c	break;
00448c   d00e     bra     0x44aa           	BRA	_01085_DS_
                                           _01084_DS_:
00448e   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4482; meter_logger.c	fifo_buffer_3[fifo_head % QUEUE_SIZE] = c;
004490   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
004492   6e01     movwf   0x1, 0           	MOVWF	r0x01
004494   6a02     clrf    0x2, 0           	CLRF	r0x02
004496   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
004498   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
00449a   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
00449c   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00449e   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0044a0   ffe9
0044a2   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0044a4   ffea
0044a6   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
0044a8   ffef
                                           _01085_DS_:
0044aa   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4485; meter_logger.c	fifo_head++;
0044ac   3f42     incfsz  0x42, 0x1, 0x1   	INCFSZ	_fifo_head, F, B
0044ae   d001     bra     0x44b2           	BRA	_21214_DS_
                                           ; removed redundant BANKSEL
0044b0   2b43     incf    0x43, 0x1, 0x1   	INCF	(_fifo_head + 1), F, B
                                           _21214_DS_:
0044b2   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4487; meter_logger.c	if (fifo_head == QUEUE_SIZE_COMBINED) {
0044b4   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
0044b6   e103     bnz     0x44be           	BNZ	_01110_DS_
                                           ; removed redundant BANKSEL
0044b8   5143     movf    0x43, 0, 0x1     	MOVF	(_fifo_head + 1), W, B
0044ba   0a04     xorlw   0x4              	XORLW	0x04
0044bc   e001     bz      0x44c0           	BZ	_01111_DS_
                                           _01110_DS_:
0044be   d003     bra     0x44c6           	BRA	_01087_DS_
                                           _01111_DS_:
0044c0   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4488; meter_logger.c	fifo_head = 0;
0044c2   6b42     clrf    0x42, 0x1        	CLRF	_fifo_head, B
                                           ; removed redundant BANKSEL
0044c4   6b43     clrf    0x43, 0x1        	CLRF	(_fifo_head + 1), B
                                           _01087_DS_:
                                           ;	.line	4490; meter_logger.c	return 1;
0044c6   0e01     movlw   0x1              	MOVLW	0x01
0044c8   d001     bra     0x44cc           	BRA	_01091_DS_
                                           _01089_DS_:
                                           ;	.line	4493; meter_logger.c	return 0;
0044ca   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _01091_DS_:
0044cc   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0044ce   f002
0044d0   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0044d2   f001
0044d4   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0044d6   f000
0044d8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0044da   ffd9
0044dc   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_in_use	code
                                           _fifo_in_use:
                                           ;	.line	4465; meter_logger.c	unsigned int fifo_in_use() {
00502e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005030   ffe5
005032   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005034   ffd9
005036   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
005038   ffe5
00503a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00503c   ffe5
00503e   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4466; meter_logger.c	return fifo_head - fifo_tail;
005040   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
005042   0105     movlb   0x5              	BANKSEL	_fifo_head
005044   5d42     subwf   0x42, 0, 0x1     	SUBWF	_fifo_head, W, B
005046   6e00     movwf   0, 0             	MOVWF	r0x00
005048   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
00504a   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
00504c   0105     movlb   0x5              	BANKSEL	(_fifo_head + 1)
00504e   5943     subwfb  0x43, 0, 0x1     	SUBWFB	(_fifo_head + 1), W, B
005050   6e01     movwf   0x1, 0           	MOVWF	r0x01
005052   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
005054   fff3
005056   5000     movf    0, 0, 0          	MOVF	r0x00, W
005058   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00505a   f001
00505c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00505e   f000
005060   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005062   ffd9
005064   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_byte	code
                                           _fsk_tx_byte:
                                           ;	.line	4457; meter_logger.c	void fsk_tx_byte(unsigned char c) {
0051be   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0051c0   ffe5
0051c2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0051c4   ffd9
0051c6   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0051c8   ffe5
0051ca   0e02     movlw   0x2              	MOVLW	0x02
0051cc   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0051ce   f000
                                           ;	.line	4458; meter_logger.c	fsk_proto.data = c;
0051d0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0051d2   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
0051d4   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
                                           ;	.line	4459; meter_logger.c	fsk_proto.data_len = 8;
0051d6   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
0051d8   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
                                           _01068_DS_:
0051da   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	4460; meter_logger.c	while (fsk_proto.data_len) {
0051dc   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
0051de   e1fd     bnz     0x51da           	BNZ	_01068_DS_
0051e0   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0051e2   f000
0051e4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0051e6   ffd9
0051e8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__send_fsk_low	code
                                           _send_fsk_low:
                                           ;	.line	3004; meter_logger.c	void send_fsk_low(void) {
001ac4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
001ac6   ffe5
001ac8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
001aca   ffd9
                                           ;	.line	3005; meter_logger.c	PWM_PIN = 1;
001acc   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001ace   0000     nop                      	nop
001ad0   0000     nop                      	nop
001ad2   0000     nop                      	nop
001ad4   0000     nop                      	nop
001ad6   0000     nop                      	nop
001ad8   0000     nop                      	nop
001ada   0000     nop                      	nop
001adc   0000     nop                      	nop
001ade   0000     nop                      	nop
001ae0   0000     nop                      	nop
001ae2   0000     nop                      	nop
001ae4   0000     nop                      	nop
001ae6   0000     nop                      	nop
001ae8   0000     nop                      	nop
001aea   0000     nop                      	nop
001aec   0000     nop                      	nop
001aee   0000     nop                      	nop
001af0   0000     nop                      	nop
001af2   0000     nop                      	nop
001af4   0000     nop                      	nop
001af6   0000     nop                      	nop
001af8   0000     nop                      	nop
001afa   0000     nop                      	nop
001afc   0000     nop                      	nop
001afe   0000     nop                      	nop
001b00   0000     nop                      	nop
001b02   0000     nop                      	nop
001b04   0000     nop                      	nop
001b06   0000     nop                      	nop
001b08   0000     nop                      	nop
001b0a   0000     nop                      	nop
001b0c   0000     nop                      	nop
001b0e   0000     nop                      	nop
001b10   0000     nop                      	nop
001b12   0000     nop                      	nop
001b14   0000     nop                      	nop
001b16   0000     nop                      	nop
001b18   0000     nop                      	nop
001b1a   0000     nop                      	nop
001b1c   0000     nop                      	nop
001b1e   0000     nop                      	nop
001b20   0000     nop                      	nop
001b22   0000     nop                      	nop
001b24   0000     nop                      	nop
001b26   0000     nop                      	nop
001b28   0000     nop                      	nop
001b2a   0000     nop                      	nop
001b2c   0000     nop                      	nop
001b2e   0000     nop                      	nop
001b30   0000     nop                      	nop
001b32   0000     nop                      	nop
001b34   0000     nop                      	nop
001b36   0000     nop                      	nop
001b38   0000     nop                      	nop
001b3a   0000     nop                      	nop
001b3c   0000     nop                      	nop
001b3e   0000     nop                      	nop
001b40   0000     nop                      	nop
001b42   0000     nop                      	nop
001b44   0000     nop                      	nop
001b46   0000     nop                      	nop
001b48   0000     nop                      	nop
001b4a   0000     nop                      	nop
001b4c   0000     nop                      	nop
001b4e   0000     nop                      	nop
001b50   0000     nop                      	nop
001b52   0000     nop                      	nop
001b54   0000     nop                      	nop
001b56   0000     nop                      	nop
001b58   0000     nop                      	nop
001b5a   0000     nop                      	nop
001b5c   0000     nop                      	nop
001b5e   0000     nop                      	nop
001b60   0000     nop                      	nop
001b62   0000     nop                      	nop
001b64   0000     nop                      	nop
001b66   0000     nop                      	nop
001b68   0000     nop                      	nop
001b6a   0000     nop                      	nop
001b6c   0000     nop                      	nop
001b6e   0000     nop                      	nop
001b70   0000     nop                      	nop
001b72   0000     nop                      	nop
001b74   0000     nop                      	nop
001b76   0000     nop                      	nop
001b78   0000     nop                      	nop
001b7a   0000     nop                      	nop
001b7c   0000     nop                      	nop
001b7e   0000     nop                      	nop
001b80   0000     nop                      	nop
001b82   0000     nop                      	nop
001b84   0000     nop                      	nop
001b86   0000     nop                      	nop
001b88   0000     nop                      	nop
001b8a   0000     nop                      	nop
001b8c   0000     nop                      	nop
001b8e   0000     nop                      	nop
001b90   0000     nop                      	nop
001b92   0000     nop                      	nop
001b94   0000     nop                      	nop
001b96   0000     nop                      	nop
001b98   0000     nop                      	nop
001b9a   0000     nop                      	nop
001b9c   0000     nop                      	nop
001b9e   0000     nop                      	nop
001ba0   0000     nop                      	nop
001ba2   0000     nop                      	nop
001ba4   0000     nop                      	nop
001ba6   0000     nop                      	nop
001ba8   0000     nop                      	nop
001baa   0000     nop                      	nop
001bac   0000     nop                      	nop
001bae   0000     nop                      	nop
001bb0   0000     nop                      	nop
001bb2   0000     nop                      	nop
001bb4   0000     nop                      	nop
001bb6   0000     nop                      	nop
001bb8   0000     nop                      	nop
001bba   0000     nop                      	nop
001bbc   0000     nop                      	nop
001bbe   0000     nop                      	nop
001bc0   0000     nop                      	nop
001bc2   0000     nop                      	nop
001bc4   0000     nop                      	nop
001bc6   0000     nop                      	nop
001bc8   0000     nop                      	nop
001bca   0000     nop                      	nop
001bcc   0000     nop                      	nop
001bce   0000     nop                      	nop
001bd0   0000     nop                      	nop
001bd2   0000     nop                      	nop
001bd4   0000     nop                      	nop
001bd6   0000     nop                      	nop
001bd8   0000     nop                      	nop
001bda   0000     nop                      	nop
001bdc   0000     nop                      	nop
001bde   0000     nop                      	nop
001be0   0000     nop                      	nop
001be2   0000     nop                      	nop
001be4   0000     nop                      	nop
001be6   0000     nop                      	nop
001be8   0000     nop                      	nop
001bea   0000     nop                      	nop
001bec   0000     nop                      	nop
001bee   0000     nop                      	nop
001bf0   0000     nop                      	nop
001bf2   0000     nop                      	nop
001bf4   0000     nop                      	nop
001bf6   0000     nop                      	nop
001bf8   0000     nop                      	nop
001bfa   0000     nop                      	nop
001bfc   0000     nop                      	nop
001bfe   0000     nop                      	nop
001c00   0000     nop                      	nop
001c02   0000     nop                      	nop
001c04   0000     nop                      	nop
001c06   0000     nop                      	nop
001c08   0000     nop                      	nop
001c0a   0000     nop                      	nop
001c0c   0000     nop                      	nop
001c0e   0000     nop                      	nop
001c10   0000     nop                      	nop
001c12   0000     nop                      	nop
001c14   0000     nop                      	nop
001c16   0000     nop                      	nop
001c18   0000     nop                      	nop
001c1a   0000     nop                      	nop
001c1c   0000     nop                      	nop
001c1e   0000     nop                      	nop
001c20   0000     nop                      	nop
001c22   0000     nop                      	nop
001c24   0000     nop                      	nop
001c26   0000     nop                      	nop
001c28   0000     nop                      	nop
001c2a   0000     nop                      	nop
001c2c   0000     nop                      	nop
001c2e   0000     nop                      	nop
001c30   0000     nop                      	nop
001c32   0000     nop                      	nop
001c34   0000     nop                      	nop
001c36   0000     nop                      	nop
001c38   0000     nop                      	nop
001c3a   0000     nop                      	nop
001c3c   0000     nop                      	nop
001c3e   0000     nop                      	nop
001c40   0000     nop                      	nop
001c42   0000     nop                      	nop
001c44   0000     nop                      	nop
001c46   0000     nop                      	nop
001c48   0000     nop                      	nop
001c4a   0000     nop                      	nop
001c4c   0000     nop                      	nop
001c4e   0000     nop                      	nop
001c50   0000     nop                      	nop
001c52   0000     nop                      	nop
001c54   0000     nop                      	nop
001c56   0000     nop                      	nop
001c58   0000     nop                      	nop
001c5a   0000     nop                      	nop
001c5c   0000     nop                      	nop
001c5e   0000     nop                      	nop
001c60   0000     nop                      	nop
001c62   0000     nop                      	nop
001c64   0000     nop                      	nop
                                           	
                                           ;	.line	3212; meter_logger.c	PWM_PIN = 0;
001c66   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001c68   0000     nop                      	nop
001c6a   0000     nop                      	nop
001c6c   0000     nop                      	nop
001c6e   0000     nop                      	nop
001c70   0000     nop                      	nop
001c72   0000     nop                      	nop
001c74   0000     nop                      	nop
001c76   0000     nop                      	nop
001c78   0000     nop                      	nop
001c7a   0000     nop                      	nop
001c7c   0000     nop                      	nop
001c7e   0000     nop                      	nop
001c80   0000     nop                      	nop
001c82   0000     nop                      	nop
001c84   0000     nop                      	nop
001c86   0000     nop                      	nop
001c88   0000     nop                      	nop
001c8a   0000     nop                      	nop
001c8c   0000     nop                      	nop
001c8e   0000     nop                      	nop
001c90   0000     nop                      	nop
001c92   0000     nop                      	nop
001c94   0000     nop                      	nop
001c96   0000     nop                      	nop
001c98   0000     nop                      	nop
001c9a   0000     nop                      	nop
001c9c   0000     nop                      	nop
001c9e   0000     nop                      	nop
001ca0   0000     nop                      	nop
001ca2   0000     nop                      	nop
001ca4   0000     nop                      	nop
001ca6   0000     nop                      	nop
001ca8   0000     nop                      	nop
001caa   0000     nop                      	nop
001cac   0000     nop                      	nop
001cae   0000     nop                      	nop
001cb0   0000     nop                      	nop
001cb2   0000     nop                      	nop
001cb4   0000     nop                      	nop
001cb6   0000     nop                      	nop
001cb8   0000     nop                      	nop
001cba   0000     nop                      	nop
001cbc   0000     nop                      	nop
001cbe   0000     nop                      	nop
001cc0   0000     nop                      	nop
001cc2   0000     nop                      	nop
001cc4   0000     nop                      	nop
001cc6   0000     nop                      	nop
001cc8   0000     nop                      	nop
001cca   0000     nop                      	nop
001ccc   0000     nop                      	nop
001cce   0000     nop                      	nop
001cd0   0000     nop                      	nop
001cd2   0000     nop                      	nop
001cd4   0000     nop                      	nop
001cd6   0000     nop                      	nop
001cd8   0000     nop                      	nop
001cda   0000     nop                      	nop
001cdc   0000     nop                      	nop
001cde   0000     nop                      	nop
001ce0   0000     nop                      	nop
001ce2   0000     nop                      	nop
001ce4   0000     nop                      	nop
001ce6   0000     nop                      	nop
001ce8   0000     nop                      	nop
001cea   0000     nop                      	nop
001cec   0000     nop                      	nop
001cee   0000     nop                      	nop
001cf0   0000     nop                      	nop
001cf2   0000     nop                      	nop
001cf4   0000     nop                      	nop
001cf6   0000     nop                      	nop
001cf8   0000     nop                      	nop
001cfa   0000     nop                      	nop
001cfc   0000     nop                      	nop
001cfe   0000     nop                      	nop
001d00   0000     nop                      	nop
001d02   0000     nop                      	nop
001d04   0000     nop                      	nop
001d06   0000     nop                      	nop
001d08   0000     nop                      	nop
001d0a   0000     nop                      	nop
001d0c   0000     nop                      	nop
001d0e   0000     nop                      	nop
001d10   0000     nop                      	nop
001d12   0000     nop                      	nop
001d14   0000     nop                      	nop
001d16   0000     nop                      	nop
001d18   0000     nop                      	nop
001d1a   0000     nop                      	nop
001d1c   0000     nop                      	nop
001d1e   0000     nop                      	nop
001d20   0000     nop                      	nop
001d22   0000     nop                      	nop
001d24   0000     nop                      	nop
001d26   0000     nop                      	nop
001d28   0000     nop                      	nop
001d2a   0000     nop                      	nop
001d2c   0000     nop                      	nop
001d2e   0000     nop                      	nop
001d30   0000     nop                      	nop
001d32   0000     nop                      	nop
001d34   0000     nop                      	nop
001d36   0000     nop                      	nop
001d38   0000     nop                      	nop
001d3a   0000     nop                      	nop
001d3c   0000     nop                      	nop
001d3e   0000     nop                      	nop
001d40   0000     nop                      	nop
001d42   0000     nop                      	nop
001d44   0000     nop                      	nop
001d46   0000     nop                      	nop
001d48   0000     nop                      	nop
001d4a   0000     nop                      	nop
001d4c   0000     nop                      	nop
001d4e   0000     nop                      	nop
001d50   0000     nop                      	nop
001d52   0000     nop                      	nop
001d54   0000     nop                      	nop
001d56   0000     nop                      	nop
001d58   0000     nop                      	nop
001d5a   0000     nop                      	nop
001d5c   0000     nop                      	nop
001d5e   0000     nop                      	nop
001d60   0000     nop                      	nop
001d62   0000     nop                      	nop
001d64   0000     nop                      	nop
001d66   0000     nop                      	nop
001d68   0000     nop                      	nop
001d6a   0000     nop                      	nop
001d6c   0000     nop                      	nop
001d6e   0000     nop                      	nop
001d70   0000     nop                      	nop
001d72   0000     nop                      	nop
001d74   0000     nop                      	nop
001d76   0000     nop                      	nop
001d78   0000     nop                      	nop
001d7a   0000     nop                      	nop
001d7c   0000     nop                      	nop
001d7e   0000     nop                      	nop
001d80   0000     nop                      	nop
001d82   0000     nop                      	nop
001d84   0000     nop                      	nop
001d86   0000     nop                      	nop
001d88   0000     nop                      	nop
001d8a   0000     nop                      	nop
001d8c   0000     nop                      	nop
001d8e   0000     nop                      	nop
001d90   0000     nop                      	nop
001d92   0000     nop                      	nop
001d94   0000     nop                      	nop
001d96   0000     nop                      	nop
001d98   0000     nop                      	nop
001d9a   0000     nop                      	nop
001d9c   0000     nop                      	nop
001d9e   0000     nop                      	nop
001da0   0000     nop                      	nop
001da2   0000     nop                      	nop
001da4   0000     nop                      	nop
001da6   0000     nop                      	nop
001da8   0000     nop                      	nop
001daa   0000     nop                      	nop
001dac   0000     nop                      	nop
001dae   0000     nop                      	nop
001db0   0000     nop                      	nop
001db2   0000     nop                      	nop
001db4   0000     nop                      	nop
001db6   0000     nop                      	nop
001db8   0000     nop                      	nop
001dba   0000     nop                      	nop
001dbc   0000     nop                      	nop
001dbe   0000     nop                      	nop
001dc0   0000     nop                      	nop
001dc2   0000     nop                      	nop
001dc4   0000     nop                      	nop
001dc6   0000     nop                      	nop
001dc8   0000     nop                      	nop
001dca   0000     nop                      	nop
001dcc   0000     nop                      	nop
001dce   0000     nop                      	nop
001dd0   0000     nop                      	nop
001dd2   0000     nop                      	nop
001dd4   0000     nop                      	nop
001dd6   0000     nop                      	nop
001dd8   0000     nop                      	nop
001dda   0000     nop                      	nop
001ddc   0000     nop                      	nop
001dde   0000     nop                      	nop
001de0   0000     nop                      	nop
001de2   0000     nop                      	nop
001de4   0000     nop                      	nop
001de6   0000     nop                      	nop
001de8   0000     nop                      	nop
001dea   0000     nop                      	nop
001dec   0000     nop                      	nop
001dee   0000     nop                      	nop
001df0   0000     nop                      	nop
001df2   0000     nop                      	nop
001df4   0000     nop                      	nop
001df6   0000     nop                      	nop
001df8   0000     nop                      	nop
001dfa   0000     nop                      	nop
001dfc   0000     nop                      	nop
001dfe   0000     nop                      	nop
                                           	
                                           ;	.line	3419; meter_logger.c	PWM_PIN = 1;
001e00   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001e02   0000     nop                      	nop
001e04   0000     nop                      	nop
001e06   0000     nop                      	nop
001e08   0000     nop                      	nop
001e0a   0000     nop                      	nop
001e0c   0000     nop                      	nop
001e0e   0000     nop                      	nop
001e10   0000     nop                      	nop
001e12   0000     nop                      	nop
001e14   0000     nop                      	nop
001e16   0000     nop                      	nop
001e18   0000     nop                      	nop
001e1a   0000     nop                      	nop
001e1c   0000     nop                      	nop
001e1e   0000     nop                      	nop
001e20   0000     nop                      	nop
001e22   0000     nop                      	nop
001e24   0000     nop                      	nop
001e26   0000     nop                      	nop
001e28   0000     nop                      	nop
001e2a   0000     nop                      	nop
001e2c   0000     nop                      	nop
001e2e   0000     nop                      	nop
001e30   0000     nop                      	nop
001e32   0000     nop                      	nop
001e34   0000     nop                      	nop
001e36   0000     nop                      	nop
001e38   0000     nop                      	nop
001e3a   0000     nop                      	nop
001e3c   0000     nop                      	nop
001e3e   0000     nop                      	nop
001e40   0000     nop                      	nop
001e42   0000     nop                      	nop
001e44   0000     nop                      	nop
001e46   0000     nop                      	nop
001e48   0000     nop                      	nop
001e4a   0000     nop                      	nop
001e4c   0000     nop                      	nop
001e4e   0000     nop                      	nop
001e50   0000     nop                      	nop
001e52   0000     nop                      	nop
001e54   0000     nop                      	nop
001e56   0000     nop                      	nop
001e58   0000     nop                      	nop
001e5a   0000     nop                      	nop
001e5c   0000     nop                      	nop
001e5e   0000     nop                      	nop
001e60   0000     nop                      	nop
001e62   0000     nop                      	nop
001e64   0000     nop                      	nop
001e66   0000     nop                      	nop
001e68   0000     nop                      	nop
001e6a   0000     nop                      	nop
001e6c   0000     nop                      	nop
001e6e   0000     nop                      	nop
001e70   0000     nop                      	nop
001e72   0000     nop                      	nop
001e74   0000     nop                      	nop
001e76   0000     nop                      	nop
001e78   0000     nop                      	nop
001e7a   0000     nop                      	nop
001e7c   0000     nop                      	nop
001e7e   0000     nop                      	nop
001e80   0000     nop                      	nop
001e82   0000     nop                      	nop
001e84   0000     nop                      	nop
001e86   0000     nop                      	nop
001e88   0000     nop                      	nop
001e8a   0000     nop                      	nop
001e8c   0000     nop                      	nop
001e8e   0000     nop                      	nop
001e90   0000     nop                      	nop
001e92   0000     nop                      	nop
001e94   0000     nop                      	nop
001e96   0000     nop                      	nop
001e98   0000     nop                      	nop
001e9a   0000     nop                      	nop
001e9c   0000     nop                      	nop
001e9e   0000     nop                      	nop
001ea0   0000     nop                      	nop
001ea2   0000     nop                      	nop
001ea4   0000     nop                      	nop
001ea6   0000     nop                      	nop
001ea8   0000     nop                      	nop
001eaa   0000     nop                      	nop
001eac   0000     nop                      	nop
001eae   0000     nop                      	nop
001eb0   0000     nop                      	nop
001eb2   0000     nop                      	nop
001eb4   0000     nop                      	nop
001eb6   0000     nop                      	nop
001eb8   0000     nop                      	nop
001eba   0000     nop                      	nop
001ebc   0000     nop                      	nop
001ebe   0000     nop                      	nop
001ec0   0000     nop                      	nop
001ec2   0000     nop                      	nop
001ec4   0000     nop                      	nop
001ec6   0000     nop                      	nop
001ec8   0000     nop                      	nop
001eca   0000     nop                      	nop
001ecc   0000     nop                      	nop
001ece   0000     nop                      	nop
001ed0   0000     nop                      	nop
001ed2   0000     nop                      	nop
001ed4   0000     nop                      	nop
001ed6   0000     nop                      	nop
001ed8   0000     nop                      	nop
001eda   0000     nop                      	nop
001edc   0000     nop                      	nop
001ede   0000     nop                      	nop
001ee0   0000     nop                      	nop
001ee2   0000     nop                      	nop
001ee4   0000     nop                      	nop
001ee6   0000     nop                      	nop
001ee8   0000     nop                      	nop
001eea   0000     nop                      	nop
001eec   0000     nop                      	nop
001eee   0000     nop                      	nop
001ef0   0000     nop                      	nop
001ef2   0000     nop                      	nop
001ef4   0000     nop                      	nop
001ef6   0000     nop                      	nop
001ef8   0000     nop                      	nop
001efa   0000     nop                      	nop
001efc   0000     nop                      	nop
001efe   0000     nop                      	nop
001f00   0000     nop                      	nop
001f02   0000     nop                      	nop
001f04   0000     nop                      	nop
001f06   0000     nop                      	nop
001f08   0000     nop                      	nop
001f0a   0000     nop                      	nop
001f0c   0000     nop                      	nop
001f0e   0000     nop                      	nop
001f10   0000     nop                      	nop
001f12   0000     nop                      	nop
001f14   0000     nop                      	nop
001f16   0000     nop                      	nop
001f18   0000     nop                      	nop
001f1a   0000     nop                      	nop
001f1c   0000     nop                      	nop
001f1e   0000     nop                      	nop
001f20   0000     nop                      	nop
001f22   0000     nop                      	nop
001f24   0000     nop                      	nop
001f26   0000     nop                      	nop
001f28   0000     nop                      	nop
001f2a   0000     nop                      	nop
001f2c   0000     nop                      	nop
001f2e   0000     nop                      	nop
001f30   0000     nop                      	nop
001f32   0000     nop                      	nop
001f34   0000     nop                      	nop
001f36   0000     nop                      	nop
001f38   0000     nop                      	nop
001f3a   0000     nop                      	nop
001f3c   0000     nop                      	nop
001f3e   0000     nop                      	nop
001f40   0000     nop                      	nop
001f42   0000     nop                      	nop
001f44   0000     nop                      	nop
001f46   0000     nop                      	nop
001f48   0000     nop                      	nop
001f4a   0000     nop                      	nop
001f4c   0000     nop                      	nop
001f4e   0000     nop                      	nop
001f50   0000     nop                      	nop
001f52   0000     nop                      	nop
001f54   0000     nop                      	nop
001f56   0000     nop                      	nop
001f58   0000     nop                      	nop
001f5a   0000     nop                      	nop
001f5c   0000     nop                      	nop
001f5e   0000     nop                      	nop
001f60   0000     nop                      	nop
001f62   0000     nop                      	nop
001f64   0000     nop                      	nop
001f66   0000     nop                      	nop
001f68   0000     nop                      	nop
001f6a   0000     nop                      	nop
001f6c   0000     nop                      	nop
001f6e   0000     nop                      	nop
001f70   0000     nop                      	nop
001f72   0000     nop                      	nop
001f74   0000     nop                      	nop
001f76   0000     nop                      	nop
001f78   0000     nop                      	nop
001f7a   0000     nop                      	nop
001f7c   0000     nop                      	nop
001f7e   0000     nop                      	nop
001f80   0000     nop                      	nop
001f82   0000     nop                      	nop
001f84   0000     nop                      	nop
001f86   0000     nop                      	nop
001f88   0000     nop                      	nop
001f8a   0000     nop                      	nop
001f8c   0000     nop                      	nop
001f8e   0000     nop                      	nop
001f90   0000     nop                      	nop
001f92   0000     nop                      	nop
001f94   0000     nop                      	nop
001f96   0000     nop                      	nop
001f98   0000     nop                      	nop
                                           	
                                           ;	.line	3626; meter_logger.c	PWM_PIN = 0;
001f9a   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001f9c   0000     nop                      	nop
001f9e   0000     nop                      	nop
001fa0   0000     nop                      	nop
001fa2   0000     nop                      	nop
001fa4   0000     nop                      	nop
001fa6   0000     nop                      	nop
001fa8   0000     nop                      	nop
001faa   0000     nop                      	nop
001fac   0000     nop                      	nop
001fae   0000     nop                      	nop
001fb0   0000     nop                      	nop
001fb2   0000     nop                      	nop
001fb4   0000     nop                      	nop
001fb6   0000     nop                      	nop
001fb8   0000     nop                      	nop
001fba   0000     nop                      	nop
001fbc   0000     nop                      	nop
001fbe   0000     nop                      	nop
001fc0   0000     nop                      	nop
001fc2   0000     nop                      	nop
001fc4   0000     nop                      	nop
001fc6   0000     nop                      	nop
001fc8   0000     nop                      	nop
001fca   0000     nop                      	nop
001fcc   0000     nop                      	nop
001fce   0000     nop                      	nop
001fd0   0000     nop                      	nop
001fd2   0000     nop                      	nop
001fd4   0000     nop                      	nop
001fd6   0000     nop                      	nop
001fd8   0000     nop                      	nop
001fda   0000     nop                      	nop
001fdc   0000     nop                      	nop
001fde   0000     nop                      	nop
001fe0   0000     nop                      	nop
001fe2   0000     nop                      	nop
001fe4   0000     nop                      	nop
001fe6   0000     nop                      	nop
001fe8   0000     nop                      	nop
001fea   0000     nop                      	nop
001fec   0000     nop                      	nop
001fee   0000     nop                      	nop
001ff0   0000     nop                      	nop
001ff2   0000     nop                      	nop
001ff4   0000     nop                      	nop
001ff6   0000     nop                      	nop
001ff8   0000     nop                      	nop
001ffa   0000     nop                      	nop
001ffc   0000     nop                      	nop
001ffe   0000     nop                      	nop
002000   0000     nop                      	nop
002002   0000     nop                      	nop
002004   0000     nop                      	nop
002006   0000     nop                      	nop
002008   0000     nop                      	nop
00200a   0000     nop                      	nop
00200c   0000     nop                      	nop
00200e   0000     nop                      	nop
002010   0000     nop                      	nop
002012   0000     nop                      	nop
002014   0000     nop                      	nop
002016   0000     nop                      	nop
002018   0000     nop                      	nop
00201a   0000     nop                      	nop
00201c   0000     nop                      	nop
00201e   0000     nop                      	nop
002020   0000     nop                      	nop
002022   0000     nop                      	nop
002024   0000     nop                      	nop
002026   0000     nop                      	nop
002028   0000     nop                      	nop
00202a   0000     nop                      	nop
00202c   0000     nop                      	nop
00202e   0000     nop                      	nop
002030   0000     nop                      	nop
002032   0000     nop                      	nop
002034   0000     nop                      	nop
002036   0000     nop                      	nop
002038   0000     nop                      	nop
00203a   0000     nop                      	nop
00203c   0000     nop                      	nop
00203e   0000     nop                      	nop
002040   0000     nop                      	nop
002042   0000     nop                      	nop
002044   0000     nop                      	nop
002046   0000     nop                      	nop
002048   0000     nop                      	nop
00204a   0000     nop                      	nop
00204c   0000     nop                      	nop
00204e   0000     nop                      	nop
002050   0000     nop                      	nop
002052   0000     nop                      	nop
002054   0000     nop                      	nop
002056   0000     nop                      	nop
002058   0000     nop                      	nop
00205a   0000     nop                      	nop
00205c   0000     nop                      	nop
00205e   0000     nop                      	nop
002060   0000     nop                      	nop
002062   0000     nop                      	nop
002064   0000     nop                      	nop
002066   0000     nop                      	nop
002068   0000     nop                      	nop
00206a   0000     nop                      	nop
00206c   0000     nop                      	nop
00206e   0000     nop                      	nop
002070   0000     nop                      	nop
002072   0000     nop                      	nop
002074   0000     nop                      	nop
002076   0000     nop                      	nop
002078   0000     nop                      	nop
00207a   0000     nop                      	nop
00207c   0000     nop                      	nop
00207e   0000     nop                      	nop
002080   0000     nop                      	nop
002082   0000     nop                      	nop
002084   0000     nop                      	nop
002086   0000     nop                      	nop
002088   0000     nop                      	nop
00208a   0000     nop                      	nop
00208c   0000     nop                      	nop
00208e   0000     nop                      	nop
002090   0000     nop                      	nop
002092   0000     nop                      	nop
002094   0000     nop                      	nop
002096   0000     nop                      	nop
002098   0000     nop                      	nop
00209a   0000     nop                      	nop
00209c   0000     nop                      	nop
00209e   0000     nop                      	nop
0020a0   0000     nop                      	nop
0020a2   0000     nop                      	nop
0020a4   0000     nop                      	nop
0020a6   0000     nop                      	nop
0020a8   0000     nop                      	nop
0020aa   0000     nop                      	nop
0020ac   0000     nop                      	nop
0020ae   0000     nop                      	nop
0020b0   0000     nop                      	nop
0020b2   0000     nop                      	nop
0020b4   0000     nop                      	nop
0020b6   0000     nop                      	nop
0020b8   0000     nop                      	nop
0020ba   0000     nop                      	nop
0020bc   0000     nop                      	nop
0020be   0000     nop                      	nop
0020c0   0000     nop                      	nop
0020c2   0000     nop                      	nop
0020c4   0000     nop                      	nop
0020c6   0000     nop                      	nop
0020c8   0000     nop                      	nop
0020ca   0000     nop                      	nop
0020cc   0000     nop                      	nop
0020ce   0000     nop                      	nop
0020d0   0000     nop                      	nop
0020d2   0000     nop                      	nop
0020d4   0000     nop                      	nop
0020d6   0000     nop                      	nop
0020d8   0000     nop                      	nop
0020da   0000     nop                      	nop
0020dc   0000     nop                      	nop
0020de   0000     nop                      	nop
0020e0   0000     nop                      	nop
0020e2   0000     nop                      	nop
0020e4   0000     nop                      	nop
0020e6   0000     nop                      	nop
0020e8   0000     nop                      	nop
0020ea   0000     nop                      	nop
0020ec   0000     nop                      	nop
0020ee   0000     nop                      	nop
0020f0   0000     nop                      	nop
0020f2   0000     nop                      	nop
0020f4   0000     nop                      	nop
0020f6   0000     nop                      	nop
0020f8   0000     nop                      	nop
0020fa   0000     nop                      	nop
0020fc   0000     nop                      	nop
0020fe   0000     nop                      	nop
002100   0000     nop                      	nop
002102   0000     nop                      	nop
002104   0000     nop                      	nop
002106   0000     nop                      	nop
002108   0000     nop                      	nop
00210a   0000     nop                      	nop
00210c   0000     nop                      	nop
00210e   0000     nop                      	nop
002110   0000     nop                      	nop
002112   0000     nop                      	nop
002114   0000     nop                      	nop
002116   0000     nop                      	nop
002118   0000     nop                      	nop
00211a   0000     nop                      	nop
00211c   0000     nop                      	nop
00211e   0000     nop                      	nop
002120   0000     nop                      	nop
002122   0000     nop                      	nop
002124   0000     nop                      	nop
002126   0000     nop                      	nop
002128   0000     nop                      	nop
00212a   0000     nop                      	nop
00212c   0000     nop                      	nop
00212e   0000     nop                      	nop
002130   0000     nop                      	nop
002132   0000     nop                      	nop
                                           	
                                           ;	.line	3833; meter_logger.c	PWM_PIN = 1;
002134   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
002136   0000     nop                      	nop
002138   0000     nop                      	nop
00213a   0000     nop                      	nop
00213c   0000     nop                      	nop
00213e   0000     nop                      	nop
002140   0000     nop                      	nop
002142   0000     nop                      	nop
002144   0000     nop                      	nop
002146   0000     nop                      	nop
002148   0000     nop                      	nop
00214a   0000     nop                      	nop
00214c   0000     nop                      	nop
00214e   0000     nop                      	nop
002150   0000     nop                      	nop
002152   0000     nop                      	nop
002154   0000     nop                      	nop
002156   0000     nop                      	nop
002158   0000     nop                      	nop
00215a   0000     nop                      	nop
00215c   0000     nop                      	nop
00215e   0000     nop                      	nop
002160   0000     nop                      	nop
002162   0000     nop                      	nop
002164   0000     nop                      	nop
002166   0000     nop                      	nop
002168   0000     nop                      	nop
00216a   0000     nop                      	nop
00216c   0000     nop                      	nop
00216e   0000     nop                      	nop
002170   0000     nop                      	nop
002172   0000     nop                      	nop
002174   0000     nop                      	nop
002176   0000     nop                      	nop
002178   0000     nop                      	nop
00217a   0000     nop                      	nop
00217c   0000     nop                      	nop
00217e   0000     nop                      	nop
002180   0000     nop                      	nop
002182   0000     nop                      	nop
002184   0000     nop                      	nop
002186   0000     nop                      	nop
002188   0000     nop                      	nop
00218a   0000     nop                      	nop
00218c   0000     nop                      	nop
00218e   0000     nop                      	nop
002190   0000     nop                      	nop
002192   0000     nop                      	nop
002194   0000     nop                      	nop
002196   0000     nop                      	nop
002198   0000     nop                      	nop
00219a   0000     nop                      	nop
00219c   0000     nop                      	nop
00219e   0000     nop                      	nop
0021a0   0000     nop                      	nop
0021a2   0000     nop                      	nop
0021a4   0000     nop                      	nop
0021a6   0000     nop                      	nop
0021a8   0000     nop                      	nop
0021aa   0000     nop                      	nop
0021ac   0000     nop                      	nop
0021ae   0000     nop                      	nop
0021b0   0000     nop                      	nop
0021b2   0000     nop                      	nop
0021b4   0000     nop                      	nop
0021b6   0000     nop                      	nop
0021b8   0000     nop                      	nop
0021ba   0000     nop                      	nop
0021bc   0000     nop                      	nop
0021be   0000     nop                      	nop
0021c0   0000     nop                      	nop
0021c2   0000     nop                      	nop
0021c4   0000     nop                      	nop
0021c6   0000     nop                      	nop
0021c8   0000     nop                      	nop
0021ca   0000     nop                      	nop
0021cc   0000     nop                      	nop
0021ce   0000     nop                      	nop
0021d0   0000     nop                      	nop
0021d2   0000     nop                      	nop
0021d4   0000     nop                      	nop
0021d6   0000     nop                      	nop
0021d8   0000     nop                      	nop
0021da   0000     nop                      	nop
0021dc   0000     nop                      	nop
0021de   0000     nop                      	nop
0021e0   0000     nop                      	nop
0021e2   0000     nop                      	nop
0021e4   0000     nop                      	nop
0021e6   0000     nop                      	nop
0021e8   0000     nop                      	nop
0021ea   0000     nop                      	nop
0021ec   0000     nop                      	nop
0021ee   0000     nop                      	nop
0021f0   0000     nop                      	nop
0021f2   0000     nop                      	nop
0021f4   0000     nop                      	nop
0021f6   0000     nop                      	nop
0021f8   0000     nop                      	nop
0021fa   0000     nop                      	nop
0021fc   0000     nop                      	nop
0021fe   0000     nop                      	nop
002200   0000     nop                      	nop
002202   0000     nop                      	nop
002204   0000     nop                      	nop
002206   0000     nop                      	nop
002208   0000     nop                      	nop
00220a   0000     nop                      	nop
00220c   0000     nop                      	nop
00220e   0000     nop                      	nop
002210   0000     nop                      	nop
002212   0000     nop                      	nop
002214   0000     nop                      	nop
002216   0000     nop                      	nop
002218   0000     nop                      	nop
00221a   0000     nop                      	nop
00221c   0000     nop                      	nop
00221e   0000     nop                      	nop
002220   0000     nop                      	nop
002222   0000     nop                      	nop
002224   0000     nop                      	nop
002226   0000     nop                      	nop
002228   0000     nop                      	nop
00222a   0000     nop                      	nop
00222c   0000     nop                      	nop
00222e   0000     nop                      	nop
002230   0000     nop                      	nop
002232   0000     nop                      	nop
002234   0000     nop                      	nop
002236   0000     nop                      	nop
002238   0000     nop                      	nop
00223a   0000     nop                      	nop
00223c   0000     nop                      	nop
00223e   0000     nop                      	nop
002240   0000     nop                      	nop
002242   0000     nop                      	nop
002244   0000     nop                      	nop
002246   0000     nop                      	nop
002248   0000     nop                      	nop
00224a   0000     nop                      	nop
00224c   0000     nop                      	nop
00224e   0000     nop                      	nop
002250   0000     nop                      	nop
002252   0000     nop                      	nop
002254   0000     nop                      	nop
002256   0000     nop                      	nop
002258   0000     nop                      	nop
00225a   0000     nop                      	nop
00225c   0000     nop                      	nop
00225e   0000     nop                      	nop
002260   0000     nop                      	nop
002262   0000     nop                      	nop
002264   0000     nop                      	nop
002266   0000     nop                      	nop
002268   0000     nop                      	nop
00226a   0000     nop                      	nop
00226c   0000     nop                      	nop
00226e   0000     nop                      	nop
002270   0000     nop                      	nop
002272   0000     nop                      	nop
002274   0000     nop                      	nop
002276   0000     nop                      	nop
002278   0000     nop                      	nop
00227a   0000     nop                      	nop
00227c   0000     nop                      	nop
00227e   0000     nop                      	nop
002280   0000     nop                      	nop
002282   0000     nop                      	nop
002284   0000     nop                      	nop
002286   0000     nop                      	nop
002288   0000     nop                      	nop
00228a   0000     nop                      	nop
00228c   0000     nop                      	nop
00228e   0000     nop                      	nop
002290   0000     nop                      	nop
002292   0000     nop                      	nop
002294   0000     nop                      	nop
002296   0000     nop                      	nop
002298   0000     nop                      	nop
00229a   0000     nop                      	nop
00229c   0000     nop                      	nop
00229e   0000     nop                      	nop
0022a0   0000     nop                      	nop
0022a2   0000     nop                      	nop
0022a4   0000     nop                      	nop
0022a6   0000     nop                      	nop
0022a8   0000     nop                      	nop
0022aa   0000     nop                      	nop
0022ac   0000     nop                      	nop
0022ae   0000     nop                      	nop
0022b0   0000     nop                      	nop
0022b2   0000     nop                      	nop
0022b4   0000     nop                      	nop
0022b6   0000     nop                      	nop
0022b8   0000     nop                      	nop
0022ba   0000     nop                      	nop
0022bc   0000     nop                      	nop
0022be   0000     nop                      	nop
0022c0   0000     nop                      	nop
0022c2   0000     nop                      	nop
0022c4   0000     nop                      	nop
0022c6   0000     nop                      	nop
0022c8   0000     nop                      	nop
0022ca   0000     nop                      	nop
0022cc   0000     nop                      	nop
                                           	
                                           ;	.line	4040; meter_logger.c	PWM_PIN = 0;
0022ce   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
0022d0   0000     nop                      	nop
0022d2   0000     nop                      	nop
0022d4   0000     nop                      	nop
0022d6   0000     nop                      	nop
0022d8   0000     nop                      	nop
0022da   0000     nop                      	nop
0022dc   0000     nop                      	nop
0022de   0000     nop                      	nop
0022e0   0000     nop                      	nop
0022e2   0000     nop                      	nop
0022e4   0000     nop                      	nop
0022e6   0000     nop                      	nop
0022e8   0000     nop                      	nop
0022ea   0000     nop                      	nop
0022ec   0000     nop                      	nop
0022ee   0000     nop                      	nop
0022f0   0000     nop                      	nop
0022f2   0000     nop                      	nop
0022f4   0000     nop                      	nop
0022f6   0000     nop                      	nop
0022f8   0000     nop                      	nop
0022fa   0000     nop                      	nop
0022fc   0000     nop                      	nop
0022fe   0000     nop                      	nop
002300   0000     nop                      	nop
002302   0000     nop                      	nop
002304   0000     nop                      	nop
002306   0000     nop                      	nop
002308   0000     nop                      	nop
00230a   0000     nop                      	nop
00230c   0000     nop                      	nop
00230e   0000     nop                      	nop
002310   0000     nop                      	nop
002312   0000     nop                      	nop
002314   0000     nop                      	nop
002316   0000     nop                      	nop
002318   0000     nop                      	nop
00231a   0000     nop                      	nop
00231c   0000     nop                      	nop
00231e   0000     nop                      	nop
002320   0000     nop                      	nop
002322   0000     nop                      	nop
002324   0000     nop                      	nop
002326   0000     nop                      	nop
002328   0000     nop                      	nop
00232a   0000     nop                      	nop
00232c   0000     nop                      	nop
00232e   0000     nop                      	nop
002330   0000     nop                      	nop
002332   0000     nop                      	nop
002334   0000     nop                      	nop
002336   0000     nop                      	nop
002338   0000     nop                      	nop
00233a   0000     nop                      	nop
00233c   0000     nop                      	nop
00233e   0000     nop                      	nop
002340   0000     nop                      	nop
002342   0000     nop                      	nop
002344   0000     nop                      	nop
002346   0000     nop                      	nop
002348   0000     nop                      	nop
00234a   0000     nop                      	nop
00234c   0000     nop                      	nop
00234e   0000     nop                      	nop
002350   0000     nop                      	nop
002352   0000     nop                      	nop
002354   0000     nop                      	nop
002356   0000     nop                      	nop
002358   0000     nop                      	nop
00235a   0000     nop                      	nop
00235c   0000     nop                      	nop
00235e   0000     nop                      	nop
002360   0000     nop                      	nop
002362   0000     nop                      	nop
002364   0000     nop                      	nop
002366   0000     nop                      	nop
002368   0000     nop                      	nop
00236a   0000     nop                      	nop
00236c   0000     nop                      	nop
00236e   0000     nop                      	nop
002370   0000     nop                      	nop
002372   0000     nop                      	nop
002374   0000     nop                      	nop
002376   0000     nop                      	nop
002378   0000     nop                      	nop
00237a   0000     nop                      	nop
00237c   0000     nop                      	nop
00237e   0000     nop                      	nop
002380   0000     nop                      	nop
002382   0000     nop                      	nop
002384   0000     nop                      	nop
002386   0000     nop                      	nop
002388   0000     nop                      	nop
00238a   0000     nop                      	nop
00238c   0000     nop                      	nop
00238e   0000     nop                      	nop
002390   0000     nop                      	nop
002392   0000     nop                      	nop
002394   0000     nop                      	nop
002396   0000     nop                      	nop
002398   0000     nop                      	nop
00239a   0000     nop                      	nop
00239c   0000     nop                      	nop
00239e   0000     nop                      	nop
0023a0   0000     nop                      	nop
0023a2   0000     nop                      	nop
0023a4   0000     nop                      	nop
0023a6   0000     nop                      	nop
0023a8   0000     nop                      	nop
0023aa   0000     nop                      	nop
0023ac   0000     nop                      	nop
0023ae   0000     nop                      	nop
0023b0   0000     nop                      	nop
0023b2   0000     nop                      	nop
0023b4   0000     nop                      	nop
0023b6   0000     nop                      	nop
0023b8   0000     nop                      	nop
0023ba   0000     nop                      	nop
0023bc   0000     nop                      	nop
0023be   0000     nop                      	nop
0023c0   0000     nop                      	nop
0023c2   0000     nop                      	nop
0023c4   0000     nop                      	nop
0023c6   0000     nop                      	nop
0023c8   0000     nop                      	nop
0023ca   0000     nop                      	nop
0023cc   0000     nop                      	nop
0023ce   0000     nop                      	nop
0023d0   0000     nop                      	nop
0023d2   0000     nop                      	nop
0023d4   0000     nop                      	nop
0023d6   0000     nop                      	nop
0023d8   0000     nop                      	nop
0023da   0000     nop                      	nop
0023dc   0000     nop                      	nop
0023de   0000     nop                      	nop
0023e0   0000     nop                      	nop
0023e2   0000     nop                      	nop
0023e4   0000     nop                      	nop
0023e6   0000     nop                      	nop
0023e8   0000     nop                      	nop
0023ea   0000     nop                      	nop
0023ec   0000     nop                      	nop
0023ee   0000     nop                      	nop
0023f0   0000     nop                      	nop
0023f2   0000     nop                      	nop
0023f4   0000     nop                      	nop
0023f6   0000     nop                      	nop
0023f8   0000     nop                      	nop
0023fa   0000     nop                      	nop
0023fc   0000     nop                      	nop
0023fe   0000     nop                      	nop
002400   0000     nop                      	nop
002402   0000     nop                      	nop
002404   0000     nop                      	nop
002406   0000     nop                      	nop
002408   0000     nop                      	nop
00240a   0000     nop                      	nop
00240c   0000     nop                      	nop
00240e   0000     nop                      	nop
002410   0000     nop                      	nop
002412   0000     nop                      	nop
002414   0000     nop                      	nop
002416   0000     nop                      	nop
002418   0000     nop                      	nop
00241a   0000     nop                      	nop
00241c   0000     nop                      	nop
00241e   0000     nop                      	nop
002420   0000     nop                      	nop
002422   0000     nop                      	nop
002424   0000     nop                      	nop
002426   0000     nop                      	nop
002428   0000     nop                      	nop
00242a   0000     nop                      	nop
00242c   0000     nop                      	nop
00242e   0000     nop                      	nop
002430   0000     nop                      	nop
002432   0000     nop                      	nop
002434   0000     nop                      	nop
002436   0000     nop                      	nop
002438   0000     nop                      	nop
00243a   0000     nop                      	nop
00243c   0000     nop                      	nop
00243e   0000     nop                      	nop
002440   0000     nop                      	nop
002442   0000     nop                      	nop
002444   0000     nop                      	nop
002446   0000     nop                      	nop
002448   0000     nop                      	nop
00244a   0000     nop                      	nop
00244c   0000     nop                      	nop
00244e   0000     nop                      	nop
002450   0000     nop                      	nop
002452   0000     nop                      	nop
002454   0000     nop                      	nop
002456   0000     nop                      	nop
002458   0000     nop                      	nop
00245a   0000     nop                      	nop
00245c   0000     nop                      	nop
00245e   0000     nop                      	nop
002460   0000     nop                      	nop
002462   0000     nop                      	nop
002464   0000     nop                      	nop
002466   0000     nop                      	nop
                                           	
                                           ;	.line	4247; meter_logger.c	PWM_PIN = 1;
002468   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
00246a   0000     nop                      	nop
00246c   0000     nop                      	nop
00246e   0000     nop                      	nop
002470   0000     nop                      	nop
002472   0000     nop                      	nop
002474   0000     nop                      	nop
002476   0000     nop                      	nop
002478   0000     nop                      	nop
00247a   0000     nop                      	nop
00247c   0000     nop                      	nop
00247e   0000     nop                      	nop
002480   0000     nop                      	nop
002482   0000     nop                      	nop
002484   0000     nop                      	nop
002486   0000     nop                      	nop
002488   0000     nop                      	nop
00248a   0000     nop                      	nop
00248c   0000     nop                      	nop
00248e   0000     nop                      	nop
002490   0000     nop                      	nop
002492   0000     nop                      	nop
002494   0000     nop                      	nop
002496   0000     nop                      	nop
002498   0000     nop                      	nop
00249a   0000     nop                      	nop
00249c   0000     nop                      	nop
00249e   0000     nop                      	nop
0024a0   0000     nop                      	nop
0024a2   0000     nop                      	nop
0024a4   0000     nop                      	nop
0024a6   0000     nop                      	nop
0024a8   0000     nop                      	nop
0024aa   0000     nop                      	nop
0024ac   0000     nop                      	nop
0024ae   0000     nop                      	nop
0024b0   0000     nop                      	nop
0024b2   0000     nop                      	nop
0024b4   0000     nop                      	nop
0024b6   0000     nop                      	nop
0024b8   0000     nop                      	nop
0024ba   0000     nop                      	nop
0024bc   0000     nop                      	nop
0024be   0000     nop                      	nop
0024c0   0000     nop                      	nop
0024c2   0000     nop                      	nop
0024c4   0000     nop                      	nop
0024c6   0000     nop                      	nop
0024c8   0000     nop                      	nop
0024ca   0000     nop                      	nop
0024cc   0000     nop                      	nop
0024ce   0000     nop                      	nop
0024d0   0000     nop                      	nop
0024d2   0000     nop                      	nop
0024d4   0000     nop                      	nop
0024d6   0000     nop                      	nop
0024d8   0000     nop                      	nop
0024da   0000     nop                      	nop
0024dc   0000     nop                      	nop
0024de   0000     nop                      	nop
0024e0   0000     nop                      	nop
0024e2   0000     nop                      	nop
0024e4   0000     nop                      	nop
0024e6   0000     nop                      	nop
0024e8   0000     nop                      	nop
0024ea   0000     nop                      	nop
0024ec   0000     nop                      	nop
0024ee   0000     nop                      	nop
0024f0   0000     nop                      	nop
0024f2   0000     nop                      	nop
0024f4   0000     nop                      	nop
0024f6   0000     nop                      	nop
0024f8   0000     nop                      	nop
0024fa   0000     nop                      	nop
0024fc   0000     nop                      	nop
0024fe   0000     nop                      	nop
002500   0000     nop                      	nop
002502   0000     nop                      	nop
002504   0000     nop                      	nop
002506   0000     nop                      	nop
002508   0000     nop                      	nop
00250a   0000     nop                      	nop
00250c   0000     nop                      	nop
00250e   0000     nop                      	nop
002510   0000     nop                      	nop
002512   0000     nop                      	nop
002514   0000     nop                      	nop
002516   0000     nop                      	nop
002518   0000     nop                      	nop
00251a   0000     nop                      	nop
00251c   0000     nop                      	nop
00251e   0000     nop                      	nop
002520   0000     nop                      	nop
002522   0000     nop                      	nop
002524   0000     nop                      	nop
002526   0000     nop                      	nop
002528   0000     nop                      	nop
00252a   0000     nop                      	nop
00252c   0000     nop                      	nop
00252e   0000     nop                      	nop
002530   0000     nop                      	nop
002532   0000     nop                      	nop
002534   0000     nop                      	nop
002536   0000     nop                      	nop
002538   0000     nop                      	nop
00253a   0000     nop                      	nop
00253c   0000     nop                      	nop
00253e   0000     nop                      	nop
002540   0000     nop                      	nop
002542   0000     nop                      	nop
002544   0000     nop                      	nop
002546   0000     nop                      	nop
002548   0000     nop                      	nop
00254a   0000     nop                      	nop
00254c   0000     nop                      	nop
00254e   0000     nop                      	nop
002550   0000     nop                      	nop
002552   0000     nop                      	nop
002554   0000     nop                      	nop
002556   0000     nop                      	nop
002558   0000     nop                      	nop
00255a   0000     nop                      	nop
00255c   0000     nop                      	nop
00255e   0000     nop                      	nop
002560   0000     nop                      	nop
002562   0000     nop                      	nop
002564   0000     nop                      	nop
002566   0000     nop                      	nop
002568   0000     nop                      	nop
00256a   0000     nop                      	nop
00256c   0000     nop                      	nop
00256e   0000     nop                      	nop
002570   0000     nop                      	nop
002572   0000     nop                      	nop
002574   0000     nop                      	nop
002576   0000     nop                      	nop
002578   0000     nop                      	nop
00257a   0000     nop                      	nop
00257c   0000     nop                      	nop
00257e   0000     nop                      	nop
002580   0000     nop                      	nop
002582   0000     nop                      	nop
002584   0000     nop                      	nop
002586   0000     nop                      	nop
002588   0000     nop                      	nop
00258a   0000     nop                      	nop
00258c   0000     nop                      	nop
00258e   0000     nop                      	nop
002590   0000     nop                      	nop
002592   0000     nop                      	nop
002594   0000     nop                      	nop
002596   0000     nop                      	nop
002598   0000     nop                      	nop
00259a   0000     nop                      	nop
00259c   0000     nop                      	nop
00259e   0000     nop                      	nop
0025a0   0000     nop                      	nop
0025a2   0000     nop                      	nop
0025a4   0000     nop                      	nop
0025a6   0000     nop                      	nop
0025a8   0000     nop                      	nop
0025aa   0000     nop                      	nop
0025ac   0000     nop                      	nop
0025ae   0000     nop                      	nop
0025b0   0000     nop                      	nop
0025b2   0000     nop                      	nop
0025b4   0000     nop                      	nop
0025b6   0000     nop                      	nop
0025b8   0000     nop                      	nop
0025ba   0000     nop                      	nop
0025bc   0000     nop                      	nop
0025be   0000     nop                      	nop
0025c0   0000     nop                      	nop
0025c2   0000     nop                      	nop
0025c4   0000     nop                      	nop
0025c6   0000     nop                      	nop
0025c8   0000     nop                      	nop
0025ca   0000     nop                      	nop
0025cc   0000     nop                      	nop
0025ce   0000     nop                      	nop
0025d0   0000     nop                      	nop
0025d2   0000     nop                      	nop
0025d4   0000     nop                      	nop
0025d6   0000     nop                      	nop
0025d8   0000     nop                      	nop
0025da   0000     nop                      	nop
0025dc   0000     nop                      	nop
0025de   0000     nop                      	nop
0025e0   0000     nop                      	nop
0025e2   0000     nop                      	nop
0025e4   0000     nop                      	nop
0025e6   0000     nop                      	nop
0025e8   0000     nop                      	nop
0025ea   0000     nop                      	nop
0025ec   0000     nop                      	nop
0025ee   0000     nop                      	nop
0025f0   0000     nop                      	nop
0025f2   0000     nop                      	nop
0025f4   0000     nop                      	nop
0025f6   0000     nop                      	nop
0025f8   0000     nop                      	nop
0025fa   0000     nop                      	nop
0025fc   0000     nop                      	nop
0025fe   0000     nop                      	nop
002600   0000     nop                      	nop
                                           	
                                           ;	.line	4454; meter_logger.c	PWM_PIN = 0;
002602   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
002604   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002606   ffd9
002608   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__send_fsk_high	code
                                           _send_fsk_high:
                                           ;	.line	1482; meter_logger.c	void send_fsk_high(void) {
000f04   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000f06   ffe5
000f08   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000f0a   ffd9
                                           ;	.line	1483; meter_logger.c	PWM_PIN = 1;
000f0c   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
000f0e   0000     nop                      	nop
000f10   0000     nop                      	nop
000f12   0000     nop                      	nop
000f14   0000     nop                      	nop
000f16   0000     nop                      	nop
000f18   0000     nop                      	nop
000f1a   0000     nop                      	nop
000f1c   0000     nop                      	nop
000f1e   0000     nop                      	nop
000f20   0000     nop                      	nop
000f22   0000     nop                      	nop
000f24   0000     nop                      	nop
000f26   0000     nop                      	nop
000f28   0000     nop                      	nop
000f2a   0000     nop                      	nop
000f2c   0000     nop                      	nop
000f2e   0000     nop                      	nop
000f30   0000     nop                      	nop
000f32   0000     nop                      	nop
000f34   0000     nop                      	nop
000f36   0000     nop                      	nop
000f38   0000     nop                      	nop
000f3a   0000     nop                      	nop
000f3c   0000     nop                      	nop
000f3e   0000     nop                      	nop
000f40   0000     nop                      	nop
000f42   0000     nop                      	nop
000f44   0000     nop                      	nop
000f46   0000     nop                      	nop
000f48   0000     nop                      	nop
000f4a   0000     nop                      	nop
000f4c   0000     nop                      	nop
000f4e   0000     nop                      	nop
000f50   0000     nop                      	nop
000f52   0000     nop                      	nop
000f54   0000     nop                      	nop
000f56   0000     nop                      	nop
000f58   0000     nop                      	nop
000f5a   0000     nop                      	nop
000f5c   0000     nop                      	nop
000f5e   0000     nop                      	nop
000f60   0000     nop                      	nop
000f62   0000     nop                      	nop
000f64   0000     nop                      	nop
000f66   0000     nop                      	nop
000f68   0000     nop                      	nop
000f6a   0000     nop                      	nop
000f6c   0000     nop                      	nop
000f6e   0000     nop                      	nop
000f70   0000     nop                      	nop
000f72   0000     nop                      	nop
000f74   0000     nop                      	nop
000f76   0000     nop                      	nop
000f78   0000     nop                      	nop
000f7a   0000     nop                      	nop
000f7c   0000     nop                      	nop
000f7e   0000     nop                      	nop
000f80   0000     nop                      	nop
000f82   0000     nop                      	nop
000f84   0000     nop                      	nop
000f86   0000     nop                      	nop
000f88   0000     nop                      	nop
000f8a   0000     nop                      	nop
000f8c   0000     nop                      	nop
000f8e   0000     nop                      	nop
000f90   0000     nop                      	nop
000f92   0000     nop                      	nop
000f94   0000     nop                      	nop
000f96   0000     nop                      	nop
000f98   0000     nop                      	nop
000f9a   0000     nop                      	nop
000f9c   0000     nop                      	nop
000f9e   0000     nop                      	nop
000fa0   0000     nop                      	nop
000fa2   0000     nop                      	nop
000fa4   0000     nop                      	nop
000fa6   0000     nop                      	nop
000fa8   0000     nop                      	nop
000faa   0000     nop                      	nop
000fac   0000     nop                      	nop
000fae   0000     nop                      	nop
000fb0   0000     nop                      	nop
000fb2   0000     nop                      	nop
000fb4   0000     nop                      	nop
000fb6   0000     nop                      	nop
000fb8   0000     nop                      	nop
000fba   0000     nop                      	nop
000fbc   0000     nop                      	nop
000fbe   0000     nop                      	nop
000fc0   0000     nop                      	nop
000fc2   0000     nop                      	nop
000fc4   0000     nop                      	nop
000fc6   0000     nop                      	nop
000fc8   0000     nop                      	nop
000fca   0000     nop                      	nop
000fcc   0000     nop                      	nop
000fce   0000     nop                      	nop
000fd0   0000     nop                      	nop
000fd2   0000     nop                      	nop
000fd4   0000     nop                      	nop
000fd6   0000     nop                      	nop
000fd8   0000     nop                      	nop
000fda   0000     nop                      	nop
000fdc   0000     nop                      	nop
000fde   0000     nop                      	nop
000fe0   0000     nop                      	nop
000fe2   0000     nop                      	nop
000fe4   0000     nop                      	nop
000fe6   0000     nop                      	nop
000fe8   0000     nop                      	nop
000fea   0000     nop                      	nop
000fec   0000     nop                      	nop
000fee   0000     nop                      	nop
000ff0   0000     nop                      	nop
000ff2   0000     nop                      	nop
000ff4   0000     nop                      	nop
000ff6   0000     nop                      	nop
000ff8   0000     nop                      	nop
000ffa   0000     nop                      	nop
000ffc   0000     nop                      	nop
000ffe   0000     nop                      	nop
001000   0000     nop                      	nop
001002   0000     nop                      	nop
001004   0000     nop                      	nop
001006   0000     nop                      	nop
001008   0000     nop                      	nop
00100a   0000     nop                      	nop
00100c   0000     nop                      	nop
00100e   0000     nop                      	nop
001010   0000     nop                      	nop
001012   0000     nop                      	nop
001014   0000     nop                      	nop
001016   0000     nop                      	nop
001018   0000     nop                      	nop
00101a   0000     nop                      	nop
                                           	
                                           ;	.line	1621; meter_logger.c	PWM_PIN = 0;
00101c   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
00101e   0000     nop                      	nop
001020   0000     nop                      	nop
001022   0000     nop                      	nop
001024   0000     nop                      	nop
001026   0000     nop                      	nop
001028   0000     nop                      	nop
00102a   0000     nop                      	nop
00102c   0000     nop                      	nop
00102e   0000     nop                      	nop
001030   0000     nop                      	nop
001032   0000     nop                      	nop
001034   0000     nop                      	nop
001036   0000     nop                      	nop
001038   0000     nop                      	nop
00103a   0000     nop                      	nop
00103c   0000     nop                      	nop
00103e   0000     nop                      	nop
001040   0000     nop                      	nop
001042   0000     nop                      	nop
001044   0000     nop                      	nop
001046   0000     nop                      	nop
001048   0000     nop                      	nop
00104a   0000     nop                      	nop
00104c   0000     nop                      	nop
00104e   0000     nop                      	nop
001050   0000     nop                      	nop
001052   0000     nop                      	nop
001054   0000     nop                      	nop
001056   0000     nop                      	nop
001058   0000     nop                      	nop
00105a   0000     nop                      	nop
00105c   0000     nop                      	nop
00105e   0000     nop                      	nop
001060   0000     nop                      	nop
001062   0000     nop                      	nop
001064   0000     nop                      	nop
001066   0000     nop                      	nop
001068   0000     nop                      	nop
00106a   0000     nop                      	nop
00106c   0000     nop                      	nop
00106e   0000     nop                      	nop
001070   0000     nop                      	nop
001072   0000     nop                      	nop
001074   0000     nop                      	nop
001076   0000     nop                      	nop
001078   0000     nop                      	nop
00107a   0000     nop                      	nop
00107c   0000     nop                      	nop
00107e   0000     nop                      	nop
001080   0000     nop                      	nop
001082   0000     nop                      	nop
001084   0000     nop                      	nop
001086   0000     nop                      	nop
001088   0000     nop                      	nop
00108a   0000     nop                      	nop
00108c   0000     nop                      	nop
00108e   0000     nop                      	nop
001090   0000     nop                      	nop
001092   0000     nop                      	nop
001094   0000     nop                      	nop
001096   0000     nop                      	nop
001098   0000     nop                      	nop
00109a   0000     nop                      	nop
00109c   0000     nop                      	nop
00109e   0000     nop                      	nop
0010a0   0000     nop                      	nop
0010a2   0000     nop                      	nop
0010a4   0000     nop                      	nop
0010a6   0000     nop                      	nop
0010a8   0000     nop                      	nop
0010aa   0000     nop                      	nop
0010ac   0000     nop                      	nop
0010ae   0000     nop                      	nop
0010b0   0000     nop                      	nop
0010b2   0000     nop                      	nop
0010b4   0000     nop                      	nop
0010b6   0000     nop                      	nop
0010b8   0000     nop                      	nop
0010ba   0000     nop                      	nop
0010bc   0000     nop                      	nop
0010be   0000     nop                      	nop
0010c0   0000     nop                      	nop
0010c2   0000     nop                      	nop
0010c4   0000     nop                      	nop
0010c6   0000     nop                      	nop
0010c8   0000     nop                      	nop
0010ca   0000     nop                      	nop
0010cc   0000     nop                      	nop
0010ce   0000     nop                      	nop
0010d0   0000     nop                      	nop
0010d2   0000     nop                      	nop
0010d4   0000     nop                      	nop
0010d6   0000     nop                      	nop
0010d8   0000     nop                      	nop
0010da   0000     nop                      	nop
0010dc   0000     nop                      	nop
0010de   0000     nop                      	nop
0010e0   0000     nop                      	nop
0010e2   0000     nop                      	nop
0010e4   0000     nop                      	nop
0010e6   0000     nop                      	nop
0010e8   0000     nop                      	nop
0010ea   0000     nop                      	nop
0010ec   0000     nop                      	nop
0010ee   0000     nop                      	nop
0010f0   0000     nop                      	nop
0010f2   0000     nop                      	nop
0010f4   0000     nop                      	nop
0010f6   0000     nop                      	nop
0010f8   0000     nop                      	nop
0010fa   0000     nop                      	nop
0010fc   0000     nop                      	nop
0010fe   0000     nop                      	nop
001100   0000     nop                      	nop
001102   0000     nop                      	nop
001104   0000     nop                      	nop
001106   0000     nop                      	nop
001108   0000     nop                      	nop
00110a   0000     nop                      	nop
00110c   0000     nop                      	nop
00110e   0000     nop                      	nop
001110   0000     nop                      	nop
001112   0000     nop                      	nop
001114   0000     nop                      	nop
001116   0000     nop                      	nop
001118   0000     nop                      	nop
00111a   0000     nop                      	nop
00111c   0000     nop                      	nop
00111e   0000     nop                      	nop
001120   0000     nop                      	nop
001122   0000     nop                      	nop
001124   0000     nop                      	nop
001126   0000     nop                      	nop
001128   0000     nop                      	nop
00112a   0000     nop                      	nop
                                           	
                                           ;	.line	1759; meter_logger.c	PWM_PIN = 1;
00112c   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
00112e   0000     nop                      	nop
001130   0000     nop                      	nop
001132   0000     nop                      	nop
001134   0000     nop                      	nop
001136   0000     nop                      	nop
001138   0000     nop                      	nop
00113a   0000     nop                      	nop
00113c   0000     nop                      	nop
00113e   0000     nop                      	nop
001140   0000     nop                      	nop
001142   0000     nop                      	nop
001144   0000     nop                      	nop
001146   0000     nop                      	nop
001148   0000     nop                      	nop
00114a   0000     nop                      	nop
00114c   0000     nop                      	nop
00114e   0000     nop                      	nop
001150   0000     nop                      	nop
001152   0000     nop                      	nop
001154   0000     nop                      	nop
001156   0000     nop                      	nop
001158   0000     nop                      	nop
00115a   0000     nop                      	nop
00115c   0000     nop                      	nop
00115e   0000     nop                      	nop
001160   0000     nop                      	nop
001162   0000     nop                      	nop
001164   0000     nop                      	nop
001166   0000     nop                      	nop
001168   0000     nop                      	nop
00116a   0000     nop                      	nop
00116c   0000     nop                      	nop
00116e   0000     nop                      	nop
001170   0000     nop                      	nop
001172   0000     nop                      	nop
001174   0000     nop                      	nop
001176   0000     nop                      	nop
001178   0000     nop                      	nop
00117a   0000     nop                      	nop
00117c   0000     nop                      	nop
00117e   0000     nop                      	nop
001180   0000     nop                      	nop
001182   0000     nop                      	nop
001184   0000     nop                      	nop
001186   0000     nop                      	nop
001188   0000     nop                      	nop
00118a   0000     nop                      	nop
00118c   0000     nop                      	nop
00118e   0000     nop                      	nop
001190   0000     nop                      	nop
001192   0000     nop                      	nop
001194   0000     nop                      	nop
001196   0000     nop                      	nop
001198   0000     nop                      	nop
00119a   0000     nop                      	nop
00119c   0000     nop                      	nop
00119e   0000     nop                      	nop
0011a0   0000     nop                      	nop
0011a2   0000     nop                      	nop
0011a4   0000     nop                      	nop
0011a6   0000     nop                      	nop
0011a8   0000     nop                      	nop
0011aa   0000     nop                      	nop
0011ac   0000     nop                      	nop
0011ae   0000     nop                      	nop
0011b0   0000     nop                      	nop
0011b2   0000     nop                      	nop
0011b4   0000     nop                      	nop
0011b6   0000     nop                      	nop
0011b8   0000     nop                      	nop
0011ba   0000     nop                      	nop
0011bc   0000     nop                      	nop
0011be   0000     nop                      	nop
0011c0   0000     nop                      	nop
0011c2   0000     nop                      	nop
0011c4   0000     nop                      	nop
0011c6   0000     nop                      	nop
0011c8   0000     nop                      	nop
0011ca   0000     nop                      	nop
0011cc   0000     nop                      	nop
0011ce   0000     nop                      	nop
0011d0   0000     nop                      	nop
0011d2   0000     nop                      	nop
0011d4   0000     nop                      	nop
0011d6   0000     nop                      	nop
0011d8   0000     nop                      	nop
0011da   0000     nop                      	nop
0011dc   0000     nop                      	nop
0011de   0000     nop                      	nop
0011e0   0000     nop                      	nop
0011e2   0000     nop                      	nop
0011e4   0000     nop                      	nop
0011e6   0000     nop                      	nop
0011e8   0000     nop                      	nop
0011ea   0000     nop                      	nop
0011ec   0000     nop                      	nop
0011ee   0000     nop                      	nop
0011f0   0000     nop                      	nop
0011f2   0000     nop                      	nop
0011f4   0000     nop                      	nop
0011f6   0000     nop                      	nop
0011f8   0000     nop                      	nop
0011fa   0000     nop                      	nop
0011fc   0000     nop                      	nop
0011fe   0000     nop                      	nop
001200   0000     nop                      	nop
001202   0000     nop                      	nop
001204   0000     nop                      	nop
001206   0000     nop                      	nop
001208   0000     nop                      	nop
00120a   0000     nop                      	nop
00120c   0000     nop                      	nop
00120e   0000     nop                      	nop
001210   0000     nop                      	nop
001212   0000     nop                      	nop
001214   0000     nop                      	nop
001216   0000     nop                      	nop
001218   0000     nop                      	nop
00121a   0000     nop                      	nop
00121c   0000     nop                      	nop
00121e   0000     nop                      	nop
001220   0000     nop                      	nop
001222   0000     nop                      	nop
001224   0000     nop                      	nop
001226   0000     nop                      	nop
001228   0000     nop                      	nop
00122a   0000     nop                      	nop
00122c   0000     nop                      	nop
00122e   0000     nop                      	nop
001230   0000     nop                      	nop
001232   0000     nop                      	nop
001234   0000     nop                      	nop
001236   0000     nop                      	nop
001238   0000     nop                      	nop
00123a   0000     nop                      	nop
                                           	
                                           ;	.line	1897; meter_logger.c	PWM_PIN = 0;
00123c   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
00123e   0000     nop                      	nop
001240   0000     nop                      	nop
001242   0000     nop                      	nop
001244   0000     nop                      	nop
001246   0000     nop                      	nop
001248   0000     nop                      	nop
00124a   0000     nop                      	nop
00124c   0000     nop                      	nop
00124e   0000     nop                      	nop
001250   0000     nop                      	nop
001252   0000     nop                      	nop
001254   0000     nop                      	nop
001256   0000     nop                      	nop
001258   0000     nop                      	nop
00125a   0000     nop                      	nop
00125c   0000     nop                      	nop
00125e   0000     nop                      	nop
001260   0000     nop                      	nop
001262   0000     nop                      	nop
001264   0000     nop                      	nop
001266   0000     nop                      	nop
001268   0000     nop                      	nop
00126a   0000     nop                      	nop
00126c   0000     nop                      	nop
00126e   0000     nop                      	nop
001270   0000     nop                      	nop
001272   0000     nop                      	nop
001274   0000     nop                      	nop
001276   0000     nop                      	nop
001278   0000     nop                      	nop
00127a   0000     nop                      	nop
00127c   0000     nop                      	nop
00127e   0000     nop                      	nop
001280   0000     nop                      	nop
001282   0000     nop                      	nop
001284   0000     nop                      	nop
001286   0000     nop                      	nop
001288   0000     nop                      	nop
00128a   0000     nop                      	nop
00128c   0000     nop                      	nop
00128e   0000     nop                      	nop
001290   0000     nop                      	nop
001292   0000     nop                      	nop
001294   0000     nop                      	nop
001296   0000     nop                      	nop
001298   0000     nop                      	nop
00129a   0000     nop                      	nop
00129c   0000     nop                      	nop
00129e   0000     nop                      	nop
0012a0   0000     nop                      	nop
0012a2   0000     nop                      	nop
0012a4   0000     nop                      	nop
0012a6   0000     nop                      	nop
0012a8   0000     nop                      	nop
0012aa   0000     nop                      	nop
0012ac   0000     nop                      	nop
0012ae   0000     nop                      	nop
0012b0   0000     nop                      	nop
0012b2   0000     nop                      	nop
0012b4   0000     nop                      	nop
0012b6   0000     nop                      	nop
0012b8   0000     nop                      	nop
0012ba   0000     nop                      	nop
0012bc   0000     nop                      	nop
0012be   0000     nop                      	nop
0012c0   0000     nop                      	nop
0012c2   0000     nop                      	nop
0012c4   0000     nop                      	nop
0012c6   0000     nop                      	nop
0012c8   0000     nop                      	nop
0012ca   0000     nop                      	nop
0012cc   0000     nop                      	nop
0012ce   0000     nop                      	nop
0012d0   0000     nop                      	nop
0012d2   0000     nop                      	nop
0012d4   0000     nop                      	nop
0012d6   0000     nop                      	nop
0012d8   0000     nop                      	nop
0012da   0000     nop                      	nop
0012dc   0000     nop                      	nop
0012de   0000     nop                      	nop
0012e0   0000     nop                      	nop
0012e2   0000     nop                      	nop
0012e4   0000     nop                      	nop
0012e6   0000     nop                      	nop
0012e8   0000     nop                      	nop
0012ea   0000     nop                      	nop
0012ec   0000     nop                      	nop
0012ee   0000     nop                      	nop
0012f0   0000     nop                      	nop
0012f2   0000     nop                      	nop
0012f4   0000     nop                      	nop
0012f6   0000     nop                      	nop
0012f8   0000     nop                      	nop
0012fa   0000     nop                      	nop
0012fc   0000     nop                      	nop
0012fe   0000     nop                      	nop
001300   0000     nop                      	nop
001302   0000     nop                      	nop
001304   0000     nop                      	nop
001306   0000     nop                      	nop
001308   0000     nop                      	nop
00130a   0000     nop                      	nop
00130c   0000     nop                      	nop
00130e   0000     nop                      	nop
001310   0000     nop                      	nop
001312   0000     nop                      	nop
001314   0000     nop                      	nop
001316   0000     nop                      	nop
001318   0000     nop                      	nop
00131a   0000     nop                      	nop
00131c   0000     nop                      	nop
00131e   0000     nop                      	nop
001320   0000     nop                      	nop
001322   0000     nop                      	nop
001324   0000     nop                      	nop
001326   0000     nop                      	nop
001328   0000     nop                      	nop
00132a   0000     nop                      	nop
00132c   0000     nop                      	nop
00132e   0000     nop                      	nop
001330   0000     nop                      	nop
001332   0000     nop                      	nop
001334   0000     nop                      	nop
001336   0000     nop                      	nop
001338   0000     nop                      	nop
00133a   0000     nop                      	nop
00133c   0000     nop                      	nop
00133e   0000     nop                      	nop
001340   0000     nop                      	nop
001342   0000     nop                      	nop
001344   0000     nop                      	nop
001346   0000     nop                      	nop
001348   0000     nop                      	nop
00134a   0000     nop                      	nop
                                           	
                                           ;	.line	2035; meter_logger.c	PWM_PIN = 1;
00134c   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
00134e   0000     nop                      	nop
001350   0000     nop                      	nop
001352   0000     nop                      	nop
001354   0000     nop                      	nop
001356   0000     nop                      	nop
001358   0000     nop                      	nop
00135a   0000     nop                      	nop
00135c   0000     nop                      	nop
00135e   0000     nop                      	nop
001360   0000     nop                      	nop
001362   0000     nop                      	nop
001364   0000     nop                      	nop
001366   0000     nop                      	nop
001368   0000     nop                      	nop
00136a   0000     nop                      	nop
00136c   0000     nop                      	nop
00136e   0000     nop                      	nop
001370   0000     nop                      	nop
001372   0000     nop                      	nop
001374   0000     nop                      	nop
001376   0000     nop                      	nop
001378   0000     nop                      	nop
00137a   0000     nop                      	nop
00137c   0000     nop                      	nop
00137e   0000     nop                      	nop
001380   0000     nop                      	nop
001382   0000     nop                      	nop
001384   0000     nop                      	nop
001386   0000     nop                      	nop
001388   0000     nop                      	nop
00138a   0000     nop                      	nop
00138c   0000     nop                      	nop
00138e   0000     nop                      	nop
001390   0000     nop                      	nop
001392   0000     nop                      	nop
001394   0000     nop                      	nop
001396   0000     nop                      	nop
001398   0000     nop                      	nop
00139a   0000     nop                      	nop
00139c   0000     nop                      	nop
00139e   0000     nop                      	nop
0013a0   0000     nop                      	nop
0013a2   0000     nop                      	nop
0013a4   0000     nop                      	nop
0013a6   0000     nop                      	nop
0013a8   0000     nop                      	nop
0013aa   0000     nop                      	nop
0013ac   0000     nop                      	nop
0013ae   0000     nop                      	nop
0013b0   0000     nop                      	nop
0013b2   0000     nop                      	nop
0013b4   0000     nop                      	nop
0013b6   0000     nop                      	nop
0013b8   0000     nop                      	nop
0013ba   0000     nop                      	nop
0013bc   0000     nop                      	nop
0013be   0000     nop                      	nop
0013c0   0000     nop                      	nop
0013c2   0000     nop                      	nop
0013c4   0000     nop                      	nop
0013c6   0000     nop                      	nop
0013c8   0000     nop                      	nop
0013ca   0000     nop                      	nop
0013cc   0000     nop                      	nop
0013ce   0000     nop                      	nop
0013d0   0000     nop                      	nop
0013d2   0000     nop                      	nop
0013d4   0000     nop                      	nop
0013d6   0000     nop                      	nop
0013d8   0000     nop                      	nop
0013da   0000     nop                      	nop
0013dc   0000     nop                      	nop
0013de   0000     nop                      	nop
0013e0   0000     nop                      	nop
0013e2   0000     nop                      	nop
0013e4   0000     nop                      	nop
0013e6   0000     nop                      	nop
0013e8   0000     nop                      	nop
0013ea   0000     nop                      	nop
0013ec   0000     nop                      	nop
0013ee   0000     nop                      	nop
0013f0   0000     nop                      	nop
0013f2   0000     nop                      	nop
0013f4   0000     nop                      	nop
0013f6   0000     nop                      	nop
0013f8   0000     nop                      	nop
0013fa   0000     nop                      	nop
0013fc   0000     nop                      	nop
0013fe   0000     nop                      	nop
001400   0000     nop                      	nop
001402   0000     nop                      	nop
001404   0000     nop                      	nop
001406   0000     nop                      	nop
001408   0000     nop                      	nop
00140a   0000     nop                      	nop
00140c   0000     nop                      	nop
00140e   0000     nop                      	nop
001410   0000     nop                      	nop
001412   0000     nop                      	nop
001414   0000     nop                      	nop
001416   0000     nop                      	nop
001418   0000     nop                      	nop
00141a   0000     nop                      	nop
00141c   0000     nop                      	nop
00141e   0000     nop                      	nop
001420   0000     nop                      	nop
001422   0000     nop                      	nop
001424   0000     nop                      	nop
001426   0000     nop                      	nop
001428   0000     nop                      	nop
00142a   0000     nop                      	nop
00142c   0000     nop                      	nop
00142e   0000     nop                      	nop
001430   0000     nop                      	nop
001432   0000     nop                      	nop
001434   0000     nop                      	nop
001436   0000     nop                      	nop
001438   0000     nop                      	nop
00143a   0000     nop                      	nop
00143c   0000     nop                      	nop
00143e   0000     nop                      	nop
001440   0000     nop                      	nop
001442   0000     nop                      	nop
001444   0000     nop                      	nop
001446   0000     nop                      	nop
001448   0000     nop                      	nop
00144a   0000     nop                      	nop
00144c   0000     nop                      	nop
00144e   0000     nop                      	nop
001450   0000     nop                      	nop
001452   0000     nop                      	nop
001454   0000     nop                      	nop
001456   0000     nop                      	nop
001458   0000     nop                      	nop
00145a   0000     nop                      	nop
                                           	
                                           ;	.line	2173; meter_logger.c	PWM_PIN = 0;
00145c   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
00145e   0000     nop                      	nop
001460   0000     nop                      	nop
001462   0000     nop                      	nop
001464   0000     nop                      	nop
001466   0000     nop                      	nop
001468   0000     nop                      	nop
00146a   0000     nop                      	nop
00146c   0000     nop                      	nop
00146e   0000     nop                      	nop
001470   0000     nop                      	nop
001472   0000     nop                      	nop
001474   0000     nop                      	nop
001476   0000     nop                      	nop
001478   0000     nop                      	nop
00147a   0000     nop                      	nop
00147c   0000     nop                      	nop
00147e   0000     nop                      	nop
001480   0000     nop                      	nop
001482   0000     nop                      	nop
001484   0000     nop                      	nop
001486   0000     nop                      	nop
001488   0000     nop                      	nop
00148a   0000     nop                      	nop
00148c   0000     nop                      	nop
00148e   0000     nop                      	nop
001490   0000     nop                      	nop
001492   0000     nop                      	nop
001494   0000     nop                      	nop
001496   0000     nop                      	nop
001498   0000     nop                      	nop
00149a   0000     nop                      	nop
00149c   0000     nop                      	nop
00149e   0000     nop                      	nop
0014a0   0000     nop                      	nop
0014a2   0000     nop                      	nop
0014a4   0000     nop                      	nop
0014a6   0000     nop                      	nop
0014a8   0000     nop                      	nop
0014aa   0000     nop                      	nop
0014ac   0000     nop                      	nop
0014ae   0000     nop                      	nop
0014b0   0000     nop                      	nop
0014b2   0000     nop                      	nop
0014b4   0000     nop                      	nop
0014b6   0000     nop                      	nop
0014b8   0000     nop                      	nop
0014ba   0000     nop                      	nop
0014bc   0000     nop                      	nop
0014be   0000     nop                      	nop
0014c0   0000     nop                      	nop
0014c2   0000     nop                      	nop
0014c4   0000     nop                      	nop
0014c6   0000     nop                      	nop
0014c8   0000     nop                      	nop
0014ca   0000     nop                      	nop
0014cc   0000     nop                      	nop
0014ce   0000     nop                      	nop
0014d0   0000     nop                      	nop
0014d2   0000     nop                      	nop
0014d4   0000     nop                      	nop
0014d6   0000     nop                      	nop
0014d8   0000     nop                      	nop
0014da   0000     nop                      	nop
0014dc   0000     nop                      	nop
0014de   0000     nop                      	nop
0014e0   0000     nop                      	nop
0014e2   0000     nop                      	nop
0014e4   0000     nop                      	nop
0014e6   0000     nop                      	nop
0014e8   0000     nop                      	nop
0014ea   0000     nop                      	nop
0014ec   0000     nop                      	nop
0014ee   0000     nop                      	nop
0014f0   0000     nop                      	nop
0014f2   0000     nop                      	nop
0014f4   0000     nop                      	nop
0014f6   0000     nop                      	nop
0014f8   0000     nop                      	nop
0014fa   0000     nop                      	nop
0014fc   0000     nop                      	nop
0014fe   0000     nop                      	nop
001500   0000     nop                      	nop
001502   0000     nop                      	nop
001504   0000     nop                      	nop
001506   0000     nop                      	nop
001508   0000     nop                      	nop
00150a   0000     nop                      	nop
00150c   0000     nop                      	nop
00150e   0000     nop                      	nop
001510   0000     nop                      	nop
001512   0000     nop                      	nop
001514   0000     nop                      	nop
001516   0000     nop                      	nop
001518   0000     nop                      	nop
00151a   0000     nop                      	nop
00151c   0000     nop                      	nop
00151e   0000     nop                      	nop
001520   0000     nop                      	nop
001522   0000     nop                      	nop
001524   0000     nop                      	nop
001526   0000     nop                      	nop
001528   0000     nop                      	nop
00152a   0000     nop                      	nop
00152c   0000     nop                      	nop
00152e   0000     nop                      	nop
001530   0000     nop                      	nop
001532   0000     nop                      	nop
001534   0000     nop                      	nop
001536   0000     nop                      	nop
001538   0000     nop                      	nop
00153a   0000     nop                      	nop
00153c   0000     nop                      	nop
00153e   0000     nop                      	nop
001540   0000     nop                      	nop
001542   0000     nop                      	nop
001544   0000     nop                      	nop
001546   0000     nop                      	nop
001548   0000     nop                      	nop
00154a   0000     nop                      	nop
00154c   0000     nop                      	nop
00154e   0000     nop                      	nop
001550   0000     nop                      	nop
001552   0000     nop                      	nop
001554   0000     nop                      	nop
001556   0000     nop                      	nop
001558   0000     nop                      	nop
00155a   0000     nop                      	nop
00155c   0000     nop                      	nop
00155e   0000     nop                      	nop
001560   0000     nop                      	nop
001562   0000     nop                      	nop
001564   0000     nop                      	nop
001566   0000     nop                      	nop
001568   0000     nop                      	nop
00156a   0000     nop                      	nop
                                           	
                                           ;	.line	2311; meter_logger.c	PWM_PIN = 1;
00156c   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
00156e   0000     nop                      	nop
001570   0000     nop                      	nop
001572   0000     nop                      	nop
001574   0000     nop                      	nop
001576   0000     nop                      	nop
001578   0000     nop                      	nop
00157a   0000     nop                      	nop
00157c   0000     nop                      	nop
00157e   0000     nop                      	nop
001580   0000     nop                      	nop
001582   0000     nop                      	nop
001584   0000     nop                      	nop
001586   0000     nop                      	nop
001588   0000     nop                      	nop
00158a   0000     nop                      	nop
00158c   0000     nop                      	nop
00158e   0000     nop                      	nop
001590   0000     nop                      	nop
001592   0000     nop                      	nop
001594   0000     nop                      	nop
001596   0000     nop                      	nop
001598   0000     nop                      	nop
00159a   0000     nop                      	nop
00159c   0000     nop                      	nop
00159e   0000     nop                      	nop
0015a0   0000     nop                      	nop
0015a2   0000     nop                      	nop
0015a4   0000     nop                      	nop
0015a6   0000     nop                      	nop
0015a8   0000     nop                      	nop
0015aa   0000     nop                      	nop
0015ac   0000     nop                      	nop
0015ae   0000     nop                      	nop
0015b0   0000     nop                      	nop
0015b2   0000     nop                      	nop
0015b4   0000     nop                      	nop
0015b6   0000     nop                      	nop
0015b8   0000     nop                      	nop
0015ba   0000     nop                      	nop
0015bc   0000     nop                      	nop
0015be   0000     nop                      	nop
0015c0   0000     nop                      	nop
0015c2   0000     nop                      	nop
0015c4   0000     nop                      	nop
0015c6   0000     nop                      	nop
0015c8   0000     nop                      	nop
0015ca   0000     nop                      	nop
0015cc   0000     nop                      	nop
0015ce   0000     nop                      	nop
0015d0   0000     nop                      	nop
0015d2   0000     nop                      	nop
0015d4   0000     nop                      	nop
0015d6   0000     nop                      	nop
0015d8   0000     nop                      	nop
0015da   0000     nop                      	nop
0015dc   0000     nop                      	nop
0015de   0000     nop                      	nop
0015e0   0000     nop                      	nop
0015e2   0000     nop                      	nop
0015e4   0000     nop                      	nop
0015e6   0000     nop                      	nop
0015e8   0000     nop                      	nop
0015ea   0000     nop                      	nop
0015ec   0000     nop                      	nop
0015ee   0000     nop                      	nop
0015f0   0000     nop                      	nop
0015f2   0000     nop                      	nop
0015f4   0000     nop                      	nop
0015f6   0000     nop                      	nop
0015f8   0000     nop                      	nop
0015fa   0000     nop                      	nop
0015fc   0000     nop                      	nop
0015fe   0000     nop                      	nop
001600   0000     nop                      	nop
001602   0000     nop                      	nop
001604   0000     nop                      	nop
001606   0000     nop                      	nop
001608   0000     nop                      	nop
00160a   0000     nop                      	nop
00160c   0000     nop                      	nop
00160e   0000     nop                      	nop
001610   0000     nop                      	nop
001612   0000     nop                      	nop
001614   0000     nop                      	nop
001616   0000     nop                      	nop
001618   0000     nop                      	nop
00161a   0000     nop                      	nop
00161c   0000     nop                      	nop
00161e   0000     nop                      	nop
001620   0000     nop                      	nop
001622   0000     nop                      	nop
001624   0000     nop                      	nop
001626   0000     nop                      	nop
001628   0000     nop                      	nop
00162a   0000     nop                      	nop
00162c   0000     nop                      	nop
00162e   0000     nop                      	nop
001630   0000     nop                      	nop
001632   0000     nop                      	nop
001634   0000     nop                      	nop
001636   0000     nop                      	nop
001638   0000     nop                      	nop
00163a   0000     nop                      	nop
00163c   0000     nop                      	nop
00163e   0000     nop                      	nop
001640   0000     nop                      	nop
001642   0000     nop                      	nop
001644   0000     nop                      	nop
001646   0000     nop                      	nop
001648   0000     nop                      	nop
00164a   0000     nop                      	nop
00164c   0000     nop                      	nop
00164e   0000     nop                      	nop
001650   0000     nop                      	nop
001652   0000     nop                      	nop
001654   0000     nop                      	nop
001656   0000     nop                      	nop
001658   0000     nop                      	nop
00165a   0000     nop                      	nop
00165c   0000     nop                      	nop
00165e   0000     nop                      	nop
001660   0000     nop                      	nop
001662   0000     nop                      	nop
001664   0000     nop                      	nop
001666   0000     nop                      	nop
001668   0000     nop                      	nop
00166a   0000     nop                      	nop
00166c   0000     nop                      	nop
00166e   0000     nop                      	nop
001670   0000     nop                      	nop
001672   0000     nop                      	nop
001674   0000     nop                      	nop
001676   0000     nop                      	nop
001678   0000     nop                      	nop
00167a   0000     nop                      	nop
                                           	
                                           ;	.line	2449; meter_logger.c	PWM_PIN = 0;
00167c   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
00167e   0000     nop                      	nop
001680   0000     nop                      	nop
001682   0000     nop                      	nop
001684   0000     nop                      	nop
001686   0000     nop                      	nop
001688   0000     nop                      	nop
00168a   0000     nop                      	nop
00168c   0000     nop                      	nop
00168e   0000     nop                      	nop
001690   0000     nop                      	nop
001692   0000     nop                      	nop
001694   0000     nop                      	nop
001696   0000     nop                      	nop
001698   0000     nop                      	nop
00169a   0000     nop                      	nop
00169c   0000     nop                      	nop
00169e   0000     nop                      	nop
0016a0   0000     nop                      	nop
0016a2   0000     nop                      	nop
0016a4   0000     nop                      	nop
0016a6   0000     nop                      	nop
0016a8   0000     nop                      	nop
0016aa   0000     nop                      	nop
0016ac   0000     nop                      	nop
0016ae   0000     nop                      	nop
0016b0   0000     nop                      	nop
0016b2   0000     nop                      	nop
0016b4   0000     nop                      	nop
0016b6   0000     nop                      	nop
0016b8   0000     nop                      	nop
0016ba   0000     nop                      	nop
0016bc   0000     nop                      	nop
0016be   0000     nop                      	nop
0016c0   0000     nop                      	nop
0016c2   0000     nop                      	nop
0016c4   0000     nop                      	nop
0016c6   0000     nop                      	nop
0016c8   0000     nop                      	nop
0016ca   0000     nop                      	nop
0016cc   0000     nop                      	nop
0016ce   0000     nop                      	nop
0016d0   0000     nop                      	nop
0016d2   0000     nop                      	nop
0016d4   0000     nop                      	nop
0016d6   0000     nop                      	nop
0016d8   0000     nop                      	nop
0016da   0000     nop                      	nop
0016dc   0000     nop                      	nop
0016de   0000     nop                      	nop
0016e0   0000     nop                      	nop
0016e2   0000     nop                      	nop
0016e4   0000     nop                      	nop
0016e6   0000     nop                      	nop
0016e8   0000     nop                      	nop
0016ea   0000     nop                      	nop
0016ec   0000     nop                      	nop
0016ee   0000     nop                      	nop
0016f0   0000     nop                      	nop
0016f2   0000     nop                      	nop
0016f4   0000     nop                      	nop
0016f6   0000     nop                      	nop
0016f8   0000     nop                      	nop
0016fa   0000     nop                      	nop
0016fc   0000     nop                      	nop
0016fe   0000     nop                      	nop
001700   0000     nop                      	nop
001702   0000     nop                      	nop
001704   0000     nop                      	nop
001706   0000     nop                      	nop
001708   0000     nop                      	nop
00170a   0000     nop                      	nop
00170c   0000     nop                      	nop
00170e   0000     nop                      	nop
001710   0000     nop                      	nop
001712   0000     nop                      	nop
001714   0000     nop                      	nop
001716   0000     nop                      	nop
001718   0000     nop                      	nop
00171a   0000     nop                      	nop
00171c   0000     nop                      	nop
00171e   0000     nop                      	nop
001720   0000     nop                      	nop
001722   0000     nop                      	nop
001724   0000     nop                      	nop
001726   0000     nop                      	nop
001728   0000     nop                      	nop
00172a   0000     nop                      	nop
00172c   0000     nop                      	nop
00172e   0000     nop                      	nop
001730   0000     nop                      	nop
001732   0000     nop                      	nop
001734   0000     nop                      	nop
001736   0000     nop                      	nop
001738   0000     nop                      	nop
00173a   0000     nop                      	nop
00173c   0000     nop                      	nop
00173e   0000     nop                      	nop
001740   0000     nop                      	nop
001742   0000     nop                      	nop
001744   0000     nop                      	nop
001746   0000     nop                      	nop
001748   0000     nop                      	nop
00174a   0000     nop                      	nop
00174c   0000     nop                      	nop
00174e   0000     nop                      	nop
001750   0000     nop                      	nop
001752   0000     nop                      	nop
001754   0000     nop                      	nop
001756   0000     nop                      	nop
001758   0000     nop                      	nop
00175a   0000     nop                      	nop
00175c   0000     nop                      	nop
00175e   0000     nop                      	nop
001760   0000     nop                      	nop
001762   0000     nop                      	nop
001764   0000     nop                      	nop
001766   0000     nop                      	nop
001768   0000     nop                      	nop
00176a   0000     nop                      	nop
00176c   0000     nop                      	nop
00176e   0000     nop                      	nop
001770   0000     nop                      	nop
001772   0000     nop                      	nop
001774   0000     nop                      	nop
001776   0000     nop                      	nop
001778   0000     nop                      	nop
00177a   0000     nop                      	nop
00177c   0000     nop                      	nop
00177e   0000     nop                      	nop
001780   0000     nop                      	nop
001782   0000     nop                      	nop
001784   0000     nop                      	nop
001786   0000     nop                      	nop
001788   0000     nop                      	nop
00178a   0000     nop                      	nop
                                           	
                                           ;	.line	2587; meter_logger.c	PWM_PIN = 1;
00178c   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
00178e   0000     nop                      	nop
001790   0000     nop                      	nop
001792   0000     nop                      	nop
001794   0000     nop                      	nop
001796   0000     nop                      	nop
001798   0000     nop                      	nop
00179a   0000     nop                      	nop
00179c   0000     nop                      	nop
00179e   0000     nop                      	nop
0017a0   0000     nop                      	nop
0017a2   0000     nop                      	nop
0017a4   0000     nop                      	nop
0017a6   0000     nop                      	nop
0017a8   0000     nop                      	nop
0017aa   0000     nop                      	nop
0017ac   0000     nop                      	nop
0017ae   0000     nop                      	nop
0017b0   0000     nop                      	nop
0017b2   0000     nop                      	nop
0017b4   0000     nop                      	nop
0017b6   0000     nop                      	nop
0017b8   0000     nop                      	nop
0017ba   0000     nop                      	nop
0017bc   0000     nop                      	nop
0017be   0000     nop                      	nop
0017c0   0000     nop                      	nop
0017c2   0000     nop                      	nop
0017c4   0000     nop                      	nop
0017c6   0000     nop                      	nop
0017c8   0000     nop                      	nop
0017ca   0000     nop                      	nop
0017cc   0000     nop                      	nop
0017ce   0000     nop                      	nop
0017d0   0000     nop                      	nop
0017d2   0000     nop                      	nop
0017d4   0000     nop                      	nop
0017d6   0000     nop                      	nop
0017d8   0000     nop                      	nop
0017da   0000     nop                      	nop
0017dc   0000     nop                      	nop
0017de   0000     nop                      	nop
0017e0   0000     nop                      	nop
0017e2   0000     nop                      	nop
0017e4   0000     nop                      	nop
0017e6   0000     nop                      	nop
0017e8   0000     nop                      	nop
0017ea   0000     nop                      	nop
0017ec   0000     nop                      	nop
0017ee   0000     nop                      	nop
0017f0   0000     nop                      	nop
0017f2   0000     nop                      	nop
0017f4   0000     nop                      	nop
0017f6   0000     nop                      	nop
0017f8   0000     nop                      	nop
0017fa   0000     nop                      	nop
0017fc   0000     nop                      	nop
0017fe   0000     nop                      	nop
001800   0000     nop                      	nop
001802   0000     nop                      	nop
001804   0000     nop                      	nop
001806   0000     nop                      	nop
001808   0000     nop                      	nop
00180a   0000     nop                      	nop
00180c   0000     nop                      	nop
00180e   0000     nop                      	nop
001810   0000     nop                      	nop
001812   0000     nop                      	nop
001814   0000     nop                      	nop
001816   0000     nop                      	nop
001818   0000     nop                      	nop
00181a   0000     nop                      	nop
00181c   0000     nop                      	nop
00181e   0000     nop                      	nop
001820   0000     nop                      	nop
001822   0000     nop                      	nop
001824   0000     nop                      	nop
001826   0000     nop                      	nop
001828   0000     nop                      	nop
00182a   0000     nop                      	nop
00182c   0000     nop                      	nop
00182e   0000     nop                      	nop
001830   0000     nop                      	nop
001832   0000     nop                      	nop
001834   0000     nop                      	nop
001836   0000     nop                      	nop
001838   0000     nop                      	nop
00183a   0000     nop                      	nop
00183c   0000     nop                      	nop
00183e   0000     nop                      	nop
001840   0000     nop                      	nop
001842   0000     nop                      	nop
001844   0000     nop                      	nop
001846   0000     nop                      	nop
001848   0000     nop                      	nop
00184a   0000     nop                      	nop
00184c   0000     nop                      	nop
00184e   0000     nop                      	nop
001850   0000     nop                      	nop
001852   0000     nop                      	nop
001854   0000     nop                      	nop
001856   0000     nop                      	nop
001858   0000     nop                      	nop
00185a   0000     nop                      	nop
00185c   0000     nop                      	nop
00185e   0000     nop                      	nop
001860   0000     nop                      	nop
001862   0000     nop                      	nop
001864   0000     nop                      	nop
001866   0000     nop                      	nop
001868   0000     nop                      	nop
00186a   0000     nop                      	nop
00186c   0000     nop                      	nop
00186e   0000     nop                      	nop
001870   0000     nop                      	nop
001872   0000     nop                      	nop
001874   0000     nop                      	nop
001876   0000     nop                      	nop
001878   0000     nop                      	nop
00187a   0000     nop                      	nop
00187c   0000     nop                      	nop
00187e   0000     nop                      	nop
001880   0000     nop                      	nop
001882   0000     nop                      	nop
001884   0000     nop                      	nop
001886   0000     nop                      	nop
001888   0000     nop                      	nop
00188a   0000     nop                      	nop
00188c   0000     nop                      	nop
00188e   0000     nop                      	nop
001890   0000     nop                      	nop
001892   0000     nop                      	nop
001894   0000     nop                      	nop
001896   0000     nop                      	nop
001898   0000     nop                      	nop
00189a   0000     nop                      	nop
                                           	
                                           ;	.line	2725; meter_logger.c	PWM_PIN = 0;
00189c   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
00189e   0000     nop                      	nop
0018a0   0000     nop                      	nop
0018a2   0000     nop                      	nop
0018a4   0000     nop                      	nop
0018a6   0000     nop                      	nop
0018a8   0000     nop                      	nop
0018aa   0000     nop                      	nop
0018ac   0000     nop                      	nop
0018ae   0000     nop                      	nop
0018b0   0000     nop                      	nop
0018b2   0000     nop                      	nop
0018b4   0000     nop                      	nop
0018b6   0000     nop                      	nop
0018b8   0000     nop                      	nop
0018ba   0000     nop                      	nop
0018bc   0000     nop                      	nop
0018be   0000     nop                      	nop
0018c0   0000     nop                      	nop
0018c2   0000     nop                      	nop
0018c4   0000     nop                      	nop
0018c6   0000     nop                      	nop
0018c8   0000     nop                      	nop
0018ca   0000     nop                      	nop
0018cc   0000     nop                      	nop
0018ce   0000     nop                      	nop
0018d0   0000     nop                      	nop
0018d2   0000     nop                      	nop
0018d4   0000     nop                      	nop
0018d6   0000     nop                      	nop
0018d8   0000     nop                      	nop
0018da   0000     nop                      	nop
0018dc   0000     nop                      	nop
0018de   0000     nop                      	nop
0018e0   0000     nop                      	nop
0018e2   0000     nop                      	nop
0018e4   0000     nop                      	nop
0018e6   0000     nop                      	nop
0018e8   0000     nop                      	nop
0018ea   0000     nop                      	nop
0018ec   0000     nop                      	nop
0018ee   0000     nop                      	nop
0018f0   0000     nop                      	nop
0018f2   0000     nop                      	nop
0018f4   0000     nop                      	nop
0018f6   0000     nop                      	nop
0018f8   0000     nop                      	nop
0018fa   0000     nop                      	nop
0018fc   0000     nop                      	nop
0018fe   0000     nop                      	nop
001900   0000     nop                      	nop
001902   0000     nop                      	nop
001904   0000     nop                      	nop
001906   0000     nop                      	nop
001908   0000     nop                      	nop
00190a   0000     nop                      	nop
00190c   0000     nop                      	nop
00190e   0000     nop                      	nop
001910   0000     nop                      	nop
001912   0000     nop                      	nop
001914   0000     nop                      	nop
001916   0000     nop                      	nop
001918   0000     nop                      	nop
00191a   0000     nop                      	nop
00191c   0000     nop                      	nop
00191e   0000     nop                      	nop
001920   0000     nop                      	nop
001922   0000     nop                      	nop
001924   0000     nop                      	nop
001926   0000     nop                      	nop
001928   0000     nop                      	nop
00192a   0000     nop                      	nop
00192c   0000     nop                      	nop
00192e   0000     nop                      	nop
001930   0000     nop                      	nop
001932   0000     nop                      	nop
001934   0000     nop                      	nop
001936   0000     nop                      	nop
001938   0000     nop                      	nop
00193a   0000     nop                      	nop
00193c   0000     nop                      	nop
00193e   0000     nop                      	nop
001940   0000     nop                      	nop
001942   0000     nop                      	nop
001944   0000     nop                      	nop
001946   0000     nop                      	nop
001948   0000     nop                      	nop
00194a   0000     nop                      	nop
00194c   0000     nop                      	nop
00194e   0000     nop                      	nop
001950   0000     nop                      	nop
001952   0000     nop                      	nop
001954   0000     nop                      	nop
001956   0000     nop                      	nop
001958   0000     nop                      	nop
00195a   0000     nop                      	nop
00195c   0000     nop                      	nop
00195e   0000     nop                      	nop
001960   0000     nop                      	nop
001962   0000     nop                      	nop
001964   0000     nop                      	nop
001966   0000     nop                      	nop
001968   0000     nop                      	nop
00196a   0000     nop                      	nop
00196c   0000     nop                      	nop
00196e   0000     nop                      	nop
001970   0000     nop                      	nop
001972   0000     nop                      	nop
001974   0000     nop                      	nop
001976   0000     nop                      	nop
001978   0000     nop                      	nop
00197a   0000     nop                      	nop
00197c   0000     nop                      	nop
00197e   0000     nop                      	nop
001980   0000     nop                      	nop
001982   0000     nop                      	nop
001984   0000     nop                      	nop
001986   0000     nop                      	nop
001988   0000     nop                      	nop
00198a   0000     nop                      	nop
00198c   0000     nop                      	nop
00198e   0000     nop                      	nop
001990   0000     nop                      	nop
001992   0000     nop                      	nop
001994   0000     nop                      	nop
001996   0000     nop                      	nop
001998   0000     nop                      	nop
00199a   0000     nop                      	nop
00199c   0000     nop                      	nop
00199e   0000     nop                      	nop
0019a0   0000     nop                      	nop
0019a2   0000     nop                      	nop
0019a4   0000     nop                      	nop
0019a6   0000     nop                      	nop
0019a8   0000     nop                      	nop
0019aa   0000     nop                      	nop
                                           	
                                           ;	.line	2863; meter_logger.c	PWM_PIN = 1;
0019ac   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
0019ae   0000     nop                      	nop
0019b0   0000     nop                      	nop
0019b2   0000     nop                      	nop
0019b4   0000     nop                      	nop
0019b6   0000     nop                      	nop
0019b8   0000     nop                      	nop
0019ba   0000     nop                      	nop
0019bc   0000     nop                      	nop
0019be   0000     nop                      	nop
0019c0   0000     nop                      	nop
0019c2   0000     nop                      	nop
0019c4   0000     nop                      	nop
0019c6   0000     nop                      	nop
0019c8   0000     nop                      	nop
0019ca   0000     nop                      	nop
0019cc   0000     nop                      	nop
0019ce   0000     nop                      	nop
0019d0   0000     nop                      	nop
0019d2   0000     nop                      	nop
0019d4   0000     nop                      	nop
0019d6   0000     nop                      	nop
0019d8   0000     nop                      	nop
0019da   0000     nop                      	nop
0019dc   0000     nop                      	nop
0019de   0000     nop                      	nop
0019e0   0000     nop                      	nop
0019e2   0000     nop                      	nop
0019e4   0000     nop                      	nop
0019e6   0000     nop                      	nop
0019e8   0000     nop                      	nop
0019ea   0000     nop                      	nop
0019ec   0000     nop                      	nop
0019ee   0000     nop                      	nop
0019f0   0000     nop                      	nop
0019f2   0000     nop                      	nop
0019f4   0000     nop                      	nop
0019f6   0000     nop                      	nop
0019f8   0000     nop                      	nop
0019fa   0000     nop                      	nop
0019fc   0000     nop                      	nop
0019fe   0000     nop                      	nop
001a00   0000     nop                      	nop
001a02   0000     nop                      	nop
001a04   0000     nop                      	nop
001a06   0000     nop                      	nop
001a08   0000     nop                      	nop
001a0a   0000     nop                      	nop
001a0c   0000     nop                      	nop
001a0e   0000     nop                      	nop
001a10   0000     nop                      	nop
001a12   0000     nop                      	nop
001a14   0000     nop                      	nop
001a16   0000     nop                      	nop
001a18   0000     nop                      	nop
001a1a   0000     nop                      	nop
001a1c   0000     nop                      	nop
001a1e   0000     nop                      	nop
001a20   0000     nop                      	nop
001a22   0000     nop                      	nop
001a24   0000     nop                      	nop
001a26   0000     nop                      	nop
001a28   0000     nop                      	nop
001a2a   0000     nop                      	nop
001a2c   0000     nop                      	nop
001a2e   0000     nop                      	nop
001a30   0000     nop                      	nop
001a32   0000     nop                      	nop
001a34   0000     nop                      	nop
001a36   0000     nop                      	nop
001a38   0000     nop                      	nop
001a3a   0000     nop                      	nop
001a3c   0000     nop                      	nop
001a3e   0000     nop                      	nop
001a40   0000     nop                      	nop
001a42   0000     nop                      	nop
001a44   0000     nop                      	nop
001a46   0000     nop                      	nop
001a48   0000     nop                      	nop
001a4a   0000     nop                      	nop
001a4c   0000     nop                      	nop
001a4e   0000     nop                      	nop
001a50   0000     nop                      	nop
001a52   0000     nop                      	nop
001a54   0000     nop                      	nop
001a56   0000     nop                      	nop
001a58   0000     nop                      	nop
001a5a   0000     nop                      	nop
001a5c   0000     nop                      	nop
001a5e   0000     nop                      	nop
001a60   0000     nop                      	nop
001a62   0000     nop                      	nop
001a64   0000     nop                      	nop
001a66   0000     nop                      	nop
001a68   0000     nop                      	nop
001a6a   0000     nop                      	nop
001a6c   0000     nop                      	nop
001a6e   0000     nop                      	nop
001a70   0000     nop                      	nop
001a72   0000     nop                      	nop
001a74   0000     nop                      	nop
001a76   0000     nop                      	nop
001a78   0000     nop                      	nop
001a7a   0000     nop                      	nop
001a7c   0000     nop                      	nop
001a7e   0000     nop                      	nop
001a80   0000     nop                      	nop
001a82   0000     nop                      	nop
001a84   0000     nop                      	nop
001a86   0000     nop                      	nop
001a88   0000     nop                      	nop
001a8a   0000     nop                      	nop
001a8c   0000     nop                      	nop
001a8e   0000     nop                      	nop
001a90   0000     nop                      	nop
001a92   0000     nop                      	nop
001a94   0000     nop                      	nop
001a96   0000     nop                      	nop
001a98   0000     nop                      	nop
001a9a   0000     nop                      	nop
001a9c   0000     nop                      	nop
001a9e   0000     nop                      	nop
001aa0   0000     nop                      	nop
001aa2   0000     nop                      	nop
001aa4   0000     nop                      	nop
001aa6   0000     nop                      	nop
001aa8   0000     nop                      	nop
001aaa   0000     nop                      	nop
001aac   0000     nop                      	nop
001aae   0000     nop                      	nop
001ab0   0000     nop                      	nop
001ab2   0000     nop                      	nop
001ab4   0000     nop                      	nop
001ab6   0000     nop                      	nop
001ab8   0000     nop                      	nop
001aba   0000     nop                      	nop
                                           	
                                           ;	.line	3001; meter_logger.c	PWM_PIN = 0;
001abc   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001abe   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
001ac0   ffd9
001ac2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_rx_disable	code
                                           _fsk_rx_disable:
                                           ;	.line	1477; meter_logger.c	void fsk_rx_disable() {
0053d0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0053d2   ffe5
0053d4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0053d6   ffd9
                                           ;	.line	1478; meter_logger.c	PIE2bits.CMIE = 0;		// Disable comparator interrupt
0053d8   9ca0     bcf     0xa0, 0x6, 0     	BCF	_PIE2bits, 6
0053da   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1479; meter_logger.c	codec_type = NONE;
0053dc   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
0053de   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0053e0   ffd9
0053e2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_rx_enable	code
                                           _fsk_rx_enable:
                                           ;	.line	1441; meter_logger.c	void fsk_rx_enable() {
004dca   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004dcc   ffe5
004dce   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004dd0   ffd9
                                           ;	.line	1442; meter_logger.c	fsk_proto.state = START_BIT_WAIT;
004dd2   0e02     movlw   0x2              	MOVLW	0x02
004dd4   0105     movlb   0x5              	BANKSEL	_fsk_proto
004dd6   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1443; meter_logger.c	fsk_proto.start_bit_time = 0;
004dd8   6b0a     clrf    0xa, 0x1         	CLRF	(_fsk_proto + 10), B
                                           ; removed redundant BANKSEL
004dda   6b0b     clrf    0xb, 0x1         	CLRF	(_fsk_proto + 11), B
                                           ;	.line	1445; meter_logger.c	timer0_reload = TIMER0_FSK;
004ddc   0e9f     movlw   0x9f             	MOVLW	0x9f
004dde   0105     movlb   0x5              	BANKSEL	_timer0_reload
004de0   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
004de2   0ef9     movlw   0xf9             	MOVLW	0xf9
                                           ; removed redundant BANKSEL
004de4   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
                                           ;	.line	1447; meter_logger.c	codec_type = FSK_RX;
004de6   0e06     movlw   0x6              	MOVLW	0x06
004de8   0105     movlb   0x5              	BANKSEL	_codec_type
004dea   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1450; meter_logger.c	T0CONbits.TMR0ON = 1;
004dec   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1451; meter_logger.c	T0CONbits.T0PS0 = 0;
004dee   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1452; meter_logger.c	T0CONbits.T0PS1 = 0;
004df0   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1453; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004df2   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1454; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004df4   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1455; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004df6   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1456; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004df8   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1457; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004dfa   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1458; meter_logger.c	INTCONbits.TMR0IE = 0;		// Dont enable TMR0 Interrupt
004dfc   9af2     bcf     0xf2, 0x5, 0     	BCF	_INTCONbits, 5
                                           ;	.line	1461; meter_logger.c	CVRCONbits.CVREF = 0xf;	// 0V
004dfe   88b5     bsf     0xb5, 0x4, 0     	BSF	_CVRCONbits, 4
                                           ;	.line	1463; meter_logger.c	CVRCONbits.CVRSS = 0;	// VDD – VSS
004e00   98b5     bcf     0xb5, 0x4, 0     	BCF	_CVRCONbits, 4
                                           ;	.line	1464; meter_logger.c	CVRCONbits.CVRR = 0;	// high range, 0.25 CVRSRC to 0.75 CVRSRC, with CVRSRC/32 step size
004e02   9ab5     bcf     0xb5, 0x5, 0     	BCF	_CVRCONbits, 5
                                           ;	.line	1465; meter_logger.c	CVRCONbits.CVR = 9;		// 2,65625 V
004e04   50b5     movf    0xb5, 0, 0       	MOVF	_CVRCONbits, W
004e06   0bf0     andlw   0xf0             	ANDLW	0xf0
004e08   0909     iorlw   0x9              	IORLW	0x09
004e0a   6eb5     movwf   0xb5, 0          	MOVWF	_CVRCONbits
                                           ;	.line	1466; meter_logger.c	CVRCONbits.CVROE = 0;	// Comparator VREF Output disabled, CVREF voltage is disconnected from the RA2/AN2/VREF-/CVREF pin
004e0c   9cb5     bcf     0xb5, 0x6, 0     	BCF	_CVRCONbits, 6
                                           ;	.line	1467; meter_logger.c	CVRCONbits.CVREN = 1;	// Comparator Voltage Reference Enable bit
004e0e   8eb5     bsf     0xb5, 0x7, 0     	BSF	_CVRCONbits, 7
                                           ;	.line	1469; meter_logger.c	CMCONbits.CM = 0x6;		// four inputs multiplexed to two comparators
004e10   50b4     movf    0xb4, 0, 0       	MOVF	_CMCONbits, W
004e12   0bf8     andlw   0xf8             	ANDLW	0xf8
004e14   0906     iorlw   0x6              	IORLW	0x06
004e16   6eb4     movwf   0xb4, 0          	MOVWF	_CMCONbits
                                           ;	.line	1470; meter_logger.c	CMCONbits.CIS = 0;		// multiplexed to RA0/AN0 and RA1/AN1
004e18   96b4     bcf     0xb4, 0x3, 0     	BCF	_CMCONbits, 3
                                           ;	.line	1471; meter_logger.c	CMCONbits.C1INV = 1;	// inverted output, C1 VIN+ < C1 VIN-
004e1a   88b4     bsf     0xb4, 0x4, 0     	BSF	_CMCONbits, 4
                                           ;	.line	1473; meter_logger.c	IPR2bits.CMIP = 1;		// high priority
004e1c   8ca2     bsf     0xa2, 0x6, 0     	BSF	_IPR2bits, 6
                                           ;	.line	1474; meter_logger.c	PIE2bits.CMIE = 1;		// Enable comparator interrupt
004e1e   8ca0     bsf     0xa0, 0x6, 0     	BSF	_PIE2bits, 6
004e20   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004e22   ffd9
004e24   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_disable	code
                                           _fsk_tx_disable:
                                           ;	.line	1435; meter_logger.c	void fsk_tx_disable() {
00534c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00534e   ffe5
005350   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005352   ffd9
005354   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1436; meter_logger.c	codec_type = NONE;
005356   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1437; meter_logger.c	T0CONbits.TMR0ON = 0;	// Disable TMR0 
005358   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1438; meter_logger.c	PIE2bits.CMIE = 1;		// Disable comparator interrupt
00535a   8ca0     bsf     0xa0, 0x6, 0     	BSF	_PIE2bits, 6
00535c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00535e   ffd9
005360   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_enable	code
                                           _fsk_tx_enable:
                                           ;	.line	1417; meter_logger.c	void fsk_tx_enable() {
00509c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00509e   ffe5
0050a0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0050a2   ffd9
                                           ;	.line	1418; meter_logger.c	timer0_reload = TIMER0_FSK;
0050a4   0e9f     movlw   0x9f             	MOVLW	0x9f
0050a6   0105     movlb   0x5              	BANKSEL	_timer0_reload
0050a8   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
0050aa   0ef9     movlw   0xf9             	MOVLW	0xf9
                                           ; removed redundant BANKSEL
0050ac   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
0050ae   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	1420; meter_logger.c	fsk_proto.state = INIT_STATE;
0050b0   6b00     clrf    0, 0x1           	CLRF	_fsk_proto, B
                                           ;	.line	1421; meter_logger.c	codec_type = FSK_TX;
0050b2   0e07     movlw   0x7              	MOVLW	0x07
0050b4   0105     movlb   0x5              	BANKSEL	_codec_type
0050b6   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1424; meter_logger.c	T0CONbits.TMR0ON = 1;
0050b8   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1425; meter_logger.c	T0CONbits.T0PS0 = 0;
0050ba   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1426; meter_logger.c	T0CONbits.T0PS1 = 0;
0050bc   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1427; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
0050be   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1428; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
0050c0   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1429; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
0050c2   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1430; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
0050c4   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1431; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
0050c6   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1432; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
0050c8   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
0050ca   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0050cc   ffd9
0050ce   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_tx_byte	code
                                           _rs232_7e1_tx_byte:
                                           ;	.line	1407; meter_logger.c	void rs232_7e1_tx_byte(unsigned char c) {
0050d0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0050d2   ffe5
0050d4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0050d6   ffd9
0050d8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0050da   ffe5
0050dc   0e02     movlw   0x2              	MOVLW	0x02
0050de   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0050e0   f000
                                           ;	.line	1408; meter_logger.c	rs232_proto.data = c;
0050e2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0050e4   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
0050e6   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	1409; meter_logger.c	rs232_proto.data_len = 7;
0050e8   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
0050ea   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	1410; meter_logger.c	T0CONbits.TMR0ON = 1;		// start timer 0
0050ec   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1411; meter_logger.c	INTCONbits.TMR0IF = 1;		// enter timer interrupt handler now
0050ee   84f2     bsf     0xf2, 0x2, 0     	BSF	_INTCONbits, 2
                                           _01030_DS_:
0050f0   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	1412; meter_logger.c	while (rs232_proto.data_len) {
0050f2   5126     movf    0x26, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
0050f4   e1fd     bnz     0x50f0           	BNZ	_01030_DS_
0050f6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0050f8   f000
0050fa   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0050fc   ffd9
0050fe   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_rx_disable	code
                                           _rs232_7e1_rx_disable:
                                           ;	.line	1401; meter_logger.c	void rs232_7e1_rx_disable() {
005362   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005364   ffe5
005366   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005368   ffd9
                                           ;	.line	1402; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
00536a   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
00536c   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1403; meter_logger.c	codec_type = NONE;
00536e   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1404; meter_logger.c	T0CONbits.TMR0ON = 0;
005370   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
005372   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005374   ffd9
005376   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_rx_enable	code
                                           _rs232_7e1_rx_enable:
                                           ;	.line	1377; meter_logger.c	void rs232_7e1_rx_enable(unsigned int t) {
004e7c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004e7e   ffe5
004e80   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004e82   ffd9
004e84   0e02     movlw   0x2              	MOVLW	0x02
004e86   cfdb     movff   0xfdb, 0x548     	MOVFF	PLUSW2, _timer0_reload
004e88   f548
004e8a   0e03     movlw   0x3              	MOVLW	0x03
004e8c   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, (_timer0_reload + 1)
004e8e   f549
                                           ;	.line	1378; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
004e90   0e02     movlw   0x2              	MOVLW	0x02
004e92   0105     movlb   0x5              	BANKSEL	_rs232_proto
004e94   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1379; meter_logger.c	rs232_proto.data_len = 0;
004e96   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1383; meter_logger.c	codec_type = RS232_7E1_RX;
004e98   0e04     movlw   0x4              	MOVLW	0x04
004e9a   0105     movlb   0x5              	BANKSEL	_codec_type
004e9c   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1386; meter_logger.c	T0CONbits.TMR0ON = 0;
004e9e   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1387; meter_logger.c	T0CONbits.T0PS0 = 0;
004ea0   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1388; meter_logger.c	T0CONbits.T0PS1 = 0;
004ea2   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1389; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004ea4   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1390; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004ea6   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1391; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004ea8   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1392; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004eaa   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1393; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004eac   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1394; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004eae   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1395; meter_logger.c	INTCONbits.TMR0IF = 0;
004eb0   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1397; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
004eb2   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1398; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004eb4   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
004eb6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004eb8   ffd9
004eba   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_tx_disable	code
                                           _rs232_7e1_tx_disable:
                                           ;	.line	1371; meter_logger.c	void rs232_7e1_tx_disable() {
005378   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00537a   ffe5
00537c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00537e   ffd9
005380   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1372; meter_logger.c	codec_type = NONE;
005382   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1373; meter_logger.c	IR_LED_PIN = 0;				// no need to set it to inverted idle
005384   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1374; meter_logger.c	T0CONbits.TMR0ON = 0;
005386   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
005388   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00538a   ffd9
00538c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_tx_enable	code
                                           _rs232_7e1_tx_enable:
                                           ;	.line	1345; meter_logger.c	void rs232_7e1_tx_enable(unsigned int t) {
004f3c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004f3e   ffe5
004f40   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004f42   ffd9
004f44   0e02     movlw   0x2              	MOVLW	0x02
004f46   cfdb     movff   0xfdb, 0x548     	MOVFF	PLUSW2, _timer0_reload
004f48   f548
004f4a   0e03     movlw   0x3              	MOVLW	0x03
004f4c   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, (_timer0_reload + 1)
004f4e   f549
004f50   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	1348; meter_logger.c	rs232_proto.state = INIT_STATE;
004f52   6b23     clrf    0x23, 0x1        	CLRF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1349; meter_logger.c	rs232_proto.data_len = 0;
004f54   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1351; meter_logger.c	IR_LED_PIN = 0;				// inverted rs232 output on ir, idle = no ir light
004f56   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1353; meter_logger.c	codec_type = RS232_7E1_TX;
004f58   0e05     movlw   0x5              	MOVLW	0x05
004f5a   0105     movlb   0x5              	BANKSEL	_codec_type
004f5c   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1356; meter_logger.c	T0CONbits.TMR0ON = 0;
004f5e   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1357; meter_logger.c	T0CONbits.T0PS0 = 0;
004f60   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1358; meter_logger.c	T0CONbits.T0PS1 = 0;
004f62   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1359; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004f64   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1360; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004f66   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1361; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004f68   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1362; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004f6a   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1363; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004f6c   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1364; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004f6e   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1365; meter_logger.c	INTCONbits.TMR0IF = 0;
004f70   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1368; meter_logger.c	T0CONbits.TMR0ON = 0;		// timer 0 started in rs232_8n2_tx_byte()
004f72   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
004f74   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004f76   ffd9
004f78   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_tx_byte	code
                                           _rs232_8n2_tx_byte:
                                           ;	.line	1335; meter_logger.c	void rs232_8n2_tx_byte(unsigned char c) {
005100   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005102   ffe5
005104   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005106   ffd9
005108   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00510a   ffe5
00510c   0e02     movlw   0x2              	MOVLW	0x02
00510e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
005110   f000
                                           ;	.line	1336; meter_logger.c	rs232_proto.data = c;
005112   5000     movf    0, 0, 0          	MOVF	r0x00, W
005114   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
005116   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	1337; meter_logger.c	rs232_proto.data_len = 8;
005118   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
00511a   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	1338; meter_logger.c	T0CONbits.TMR0ON = 1;		// start timer 0
00511c   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1339; meter_logger.c	INTCONbits.TMR0IF = 1;		// enter timer interrupt handler now
00511e   84f2     bsf     0xf2, 0x2, 0     	BSF	_INTCONbits, 2
                                           _01002_DS_:
005120   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	1340; meter_logger.c	while (rs232_proto.data_len) {
005122   5126     movf    0x26, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
005124   e1fd     bnz     0x5120           	BNZ	_01002_DS_
005126   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
005128   f000
00512a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00512c   ffd9
00512e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_rx_disable	code
                                           _rs232_8n2_rx_disable:
                                           ;	.line	1329; meter_logger.c	void rs232_8n2_rx_disable() {
00538e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005390   ffe5
005392   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005394   ffd9
                                           ;	.line	1330; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
005396   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
005398   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1331; meter_logger.c	codec_type = NONE;
00539a   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1332; meter_logger.c	T0CONbits.TMR0ON = 0;
00539c   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
00539e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0053a0   ffd9
0053a2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_rx_enable	code
                                           _rs232_8n2_rx_enable:
                                           ;	.line	1305; meter_logger.c	void rs232_8n2_rx_enable(unsigned int t) {
004ebc   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004ebe   ffe5
004ec0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004ec2   ffd9
004ec4   0e02     movlw   0x2              	MOVLW	0x02
004ec6   cfdb     movff   0xfdb, 0x548     	MOVFF	PLUSW2, _timer0_reload
004ec8   f548
004eca   0e03     movlw   0x3              	MOVLW	0x03
004ecc   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, (_timer0_reload + 1)
004ece   f549
                                           ;	.line	1306; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
004ed0   0e02     movlw   0x2              	MOVLW	0x02
004ed2   0105     movlb   0x5              	BANKSEL	_rs232_proto
004ed4   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1307; meter_logger.c	rs232_proto.data_len = 0;
004ed6   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1311; meter_logger.c	codec_type = RS232_8N2_RX;
004ed8   0e02     movlw   0x2              	MOVLW	0x02
004eda   0105     movlb   0x5              	BANKSEL	_codec_type
004edc   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1314; meter_logger.c	T0CONbits.TMR0ON = 0;
004ede   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1315; meter_logger.c	T0CONbits.T0PS0 = 0;
004ee0   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1316; meter_logger.c	T0CONbits.T0PS1 = 0;
004ee2   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1317; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004ee4   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1318; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004ee6   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1319; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004ee8   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1320; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004eea   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1321; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004eec   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1322; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004eee   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1323; meter_logger.c	INTCONbits.TMR0IF = 0;
004ef0   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1325; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
004ef2   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1326; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004ef4   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
004ef6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004ef8   ffd9
004efa   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_tx_disable	code
                                           _rs232_8n2_tx_disable:
                                           ;	.line	1299; meter_logger.c	void rs232_8n2_tx_disable() {
0053a4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0053a6   ffe5
0053a8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0053aa   ffd9
0053ac   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1300; meter_logger.c	codec_type = NONE;
0053ae   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1301; meter_logger.c	IR_LED_PIN = 0;				// no need to set it to inverted idle
0053b0   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1302; meter_logger.c	T0CONbits.TMR0ON = 0;
0053b2   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
0053b4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0053b6   ffd9
0053b8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_tx_enable	code
                                           _rs232_8n2_tx_enable:
                                           ;	.line	1273; meter_logger.c	void rs232_8n2_tx_enable(unsigned int t) {
004f7a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004f7c   ffe5
004f7e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004f80   ffd9
004f82   0e02     movlw   0x2              	MOVLW	0x02
004f84   cfdb     movff   0xfdb, 0x548     	MOVFF	PLUSW2, _timer0_reload
004f86   f548
004f88   0e03     movlw   0x3              	MOVLW	0x03
004f8a   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, (_timer0_reload + 1)
004f8c   f549
004f8e   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	1276; meter_logger.c	rs232_proto.state = INIT_STATE;
004f90   6b23     clrf    0x23, 0x1        	CLRF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1277; meter_logger.c	rs232_proto.data_len = 0;
004f92   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1279; meter_logger.c	IR_LED_PIN = 0;				// inverted rs232 output on ir, idle = no ir light
004f94   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1281; meter_logger.c	codec_type = RS232_8N2_TX;
004f96   0e03     movlw   0x3              	MOVLW	0x03
004f98   0105     movlb   0x5              	BANKSEL	_codec_type
004f9a   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1284; meter_logger.c	T0CONbits.TMR0ON = 0;
004f9c   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1285; meter_logger.c	T0CONbits.T0PS0 = 0;
004f9e   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1286; meter_logger.c	T0CONbits.T0PS1 = 0;
004fa0   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1287; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004fa2   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1288; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004fa4   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1289; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004fa6   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1290; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004fa8   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1291; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004faa   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1292; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004fac   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1293; meter_logger.c	INTCONbits.TMR0IF = 0;
004fae   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1296; meter_logger.c	T0CONbits.TMR0ON = 0;		// timer 0 started in rs232_8n2_tx_byte()
004fb0   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
004fb2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004fb4   ffd9
004fb6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_ir_disable	code
                                           _testo_ir_disable:
                                           ;	.line	1268; meter_logger.c	void testo_ir_disable() {
0053e4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0053e6   ffe5
0053e8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0053ea   ffd9
0053ec   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1269; meter_logger.c	codec_type = NONE;
0053ee   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1270; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
0053f0   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
0053f2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0053f4   ffd9
0053f6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_ir_enable	code
                                           _testo_ir_enable:
                                           ;	.line	1244; meter_logger.c	void testo_ir_enable() {
004fb8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004fba   ffe5
004fbc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004fbe   ffd9
004fc0   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	1245; meter_logger.c	testo_ir_proto.state = INIT_STATE;
004fc2   6b1d     clrf    0x1d, 0x1        	CLRF	_testo_ir_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1246; meter_logger.c	testo_ir_proto.start_bit_len = 0;
004fc4   6b1f     clrf    0x1f, 0x1        	CLRF	(_testo_ir_proto + 2), B
                                           ;	.line	1248; meter_logger.c	timer0_reload = TIMER0_TESTO;
004fc6   0e23     movlw   0x23             	MOVLW	0x23
004fc8   0105     movlb   0x5              	BANKSEL	_timer0_reload
004fca   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
004fcc   0ef3     movlw   0xf3             	MOVLW	0xf3
                                           ; removed redundant BANKSEL
004fce   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
                                           ;	.line	1250; meter_logger.c	codec_type = TESTO;
004fd0   0e01     movlw   0x1              	MOVLW	0x01
004fd2   0105     movlb   0x5              	BANKSEL	_codec_type
004fd4   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1253; meter_logger.c	T0CONbits.TMR0ON = 0;
004fd6   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1254; meter_logger.c	T0CONbits.T0PS0 = 0;
004fd8   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1255; meter_logger.c	T0CONbits.T0PS1 = 0;
004fda   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1256; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004fdc   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1257; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004fde   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1258; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004fe0   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1259; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004fe2   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1260; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004fe4   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1261; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004fe6   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1262; meter_logger.c	INTCONbits.TMR0IF = 0;
004fe8   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1264; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
004fea   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1265; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004fec   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
004fee   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004ff0   ffd9
004ff2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_valid_err_corr	code
                                           _testo_valid_err_corr:
                                           ;	.line	1189; meter_logger.c	unsigned char testo_valid_err_corr(unsigned int c) {
003bb0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003bb2   ffe5
003bb4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003bb6   ffd9
003bb8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003bba   ffe5
003bbc   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003bbe   ffe5
003bc0   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003bc2   ffe5
003bc4   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003bc6   ffe5
003bc8   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003bca   ffe5
003bcc   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003bce   ffe5
003bd0   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003bd2   ffe5
003bd4   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
003bd6   ffe5
003bd8   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
003bda   ffe5
003bdc   0e02     movlw   0x2              	MOVLW	0x02
003bde   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003be0   f000
003be2   0e03     movlw   0x3              	MOVLW	0x03
003be4   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003be6   f001
                                           ;	.line	1196; meter_logger.c	calculated_err_corr_bit = 0;
003be8   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1197; meter_logger.c	for (i = 0; i < 8; i++) {
003bea   0e78     movlw   0x78             	MOVLW	0x78
003bec   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003bee   6e03     movwf   0x3, 0           	MOVWF	r0x03
003bf0   6a04     clrf    0x4, 0           	CLRF	r0x04
003bf2   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00890_DS_:
                                           ;	.line	1198; meter_logger.c	calculated_err_corr_bit ^= (((c & 0x78) & (1 << i)) != 0);   // 0b01111000
003bf4   0e01     movlw   0x1              	MOVLW	0x01
003bf6   6e06     movwf   0x6, 0           	MOVWF	r0x06
003bf8   0e00     movlw   0                	MOVLW	0x00
003bfa   6e07     movwf   0x7, 0           	MOVWF	r0x07
003bfc   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003bfe   e006     bz      0x3c0c           	BZ	_00932_DS_
003c00   6ce8     negf    0xe8, 0          	NEGF	WREG
003c02   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00933_DS_:
003c04   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
003c06   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003c08   0f01     addlw   0x1              	ADDLW	0x01
003c0a   e3fc     bnc     0x3c04           	BNC	_00933_DS_
                                           _00932_DS_:
003c0c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003c0e   1606     andwf   0x6, 0x1, 0      	ANDWF	r0x06, F
003c10   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003c12   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003c14   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003c16   e105     bnz     0x3c22           	BNZ	_00935_DS_
003c18   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003c1a   e103     bnz     0x3c22           	BNZ	_00935_DS_
003c1c   6a06     clrf    0x6, 0           	CLRF	r0x06
003c1e   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003c20   d001     bra     0x3c24           	BRA	_00936_DS_
                                           _00935_DS_:
003c22   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00936_DS_:
003c24   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003c26   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003c28   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003c2a   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003c2c   6a06     clrf    0x6, 0           	CLRF	r0x06
003c2e   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
003c30   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003c32   6e07     movwf   0x7, 0           	MOVWF	r0x07
003c34   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003c36   1807     xorwf   0x7, 0, 0        	XORWF	r0x07, W
003c38   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1197; meter_logger.c	for (i = 0; i < 8; i++) {
003c3a   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
003c3c   0e08     movlw   0x8              	MOVLW	0x08
003c3e   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
003c40   e3d9     bnc     0x3bf4           	BNC	_00890_DS_
                                           ;	.line	1201; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003c42   4402     rlncf   0x2, 0, 0        	RLNCF	r0x02, W
003c44   0bfe     andlw   0xfe             	ANDLW	0xfe
003c46   6e03     movwf   0x3, 0           	MOVWF	r0x03
                                           ;	.line	1204; meter_logger.c	calculated_err_corr_bit = 0;
003c48   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1205; meter_logger.c	for (i = 0; i < 8; i++) {
003c4a   0ee6     movlw   0xe6             	MOVLW	0xe6
003c4c   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003c4e   6e04     movwf   0x4, 0           	MOVWF	r0x04
003c50   6a05     clrf    0x5, 0           	CLRF	r0x05
003c52   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00892_DS_:
                                           ;	.line	1206; meter_logger.c	calculated_err_corr_bit ^= (((c & 0xe6) & (1 << i)) != 0);   // 0b11100110
003c54   0e01     movlw   0x1              	MOVLW	0x01
003c56   6e07     movwf   0x7, 0           	MOVWF	r0x07
003c58   0e00     movlw   0                	MOVLW	0x00
003c5a   6e08     movwf   0x8, 0           	MOVWF	r0x08
003c5c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003c5e   e006     bz      0x3c6c           	BZ	_00940_DS_
003c60   6ce8     negf    0xe8, 0          	NEGF	WREG
003c62   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00941_DS_:
003c64   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003c66   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003c68   0f01     addlw   0x1              	ADDLW	0x01
003c6a   e3fc     bnc     0x3c64           	BNC	_00941_DS_
                                           _00940_DS_:
003c6c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003c6e   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003c70   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003c72   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003c74   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003c76   e105     bnz     0x3c82           	BNZ	_00943_DS_
003c78   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003c7a   e103     bnz     0x3c82           	BNZ	_00943_DS_
003c7c   6a07     clrf    0x7, 0           	CLRF	r0x07
003c7e   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003c80   d001     bra     0x3c84           	BRA	_00944_DS_
                                           _00943_DS_:
003c82   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00944_DS_:
003c84   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003c86   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003c88   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003c8a   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003c8c   6a07     clrf    0x7, 0           	CLRF	r0x07
003c8e   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003c90   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003c92   6e08     movwf   0x8, 0           	MOVWF	r0x08
003c94   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003c96   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003c98   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1205; meter_logger.c	for (i = 0; i < 8; i++) {
003c9a   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003c9c   0e08     movlw   0x8              	MOVLW	0x08
003c9e   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003ca0   e3d9     bnc     0x3c54           	BNC	_00892_DS_
                                           ;	.line	1208; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003ca2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003ca4   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1209; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003ca6   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003ca8   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
                                           ;	.line	1212; meter_logger.c	calculated_err_corr_bit = 0;
003caa   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1213; meter_logger.c	for (i = 0; i < 8; i++) {
003cac   0ed5     movlw   0xd5             	MOVLW	0xd5
003cae   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003cb0   6e04     movwf   0x4, 0           	MOVWF	r0x04
003cb2   6a05     clrf    0x5, 0           	CLRF	r0x05
003cb4   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00894_DS_:
                                           ;	.line	1214; meter_logger.c	calculated_err_corr_bit ^= (((c & 0xd5) & (1 << i)) != 0);   // 0b11010101
003cb6   0e01     movlw   0x1              	MOVLW	0x01
003cb8   6e07     movwf   0x7, 0           	MOVWF	r0x07
003cba   0e00     movlw   0                	MOVLW	0x00
003cbc   6e08     movwf   0x8, 0           	MOVWF	r0x08
003cbe   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003cc0   e006     bz      0x3cce           	BZ	_00949_DS_
003cc2   6ce8     negf    0xe8, 0          	NEGF	WREG
003cc4   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00950_DS_:
003cc6   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003cc8   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003cca   0f01     addlw   0x1              	ADDLW	0x01
003ccc   e3fc     bnc     0x3cc6           	BNC	_00950_DS_
                                           _00949_DS_:
003cce   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003cd0   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003cd2   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003cd4   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003cd6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003cd8   e105     bnz     0x3ce4           	BNZ	_00952_DS_
003cda   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003cdc   e103     bnz     0x3ce4           	BNZ	_00952_DS_
003cde   6a07     clrf    0x7, 0           	CLRF	r0x07
003ce0   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003ce2   d001     bra     0x3ce6           	BRA	_00953_DS_
                                           _00952_DS_:
003ce4   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00953_DS_:
003ce6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003ce8   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003cea   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003cec   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003cee   6a07     clrf    0x7, 0           	CLRF	r0x07
003cf0   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003cf2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003cf4   6e08     movwf   0x8, 0           	MOVWF	r0x08
003cf6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003cf8   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003cfa   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1213; meter_logger.c	for (i = 0; i < 8; i++) {
003cfc   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003cfe   0e08     movlw   0x8              	MOVLW	0x08
003d00   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003d02   e3d9     bnc     0x3cb6           	BNC	_00894_DS_
                                           ;	.line	1216; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003d04   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003d06   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1217; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003d08   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003d0a   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
                                           ;	.line	1220; meter_logger.c	calculated_err_corr_bit = 0;
003d0c   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1221; meter_logger.c	for (i = 0; i < 8; i++) {
003d0e   0e8b     movlw   0x8b             	MOVLW	0x8b
003d10   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003d12   6e04     movwf   0x4, 0           	MOVWF	r0x04
003d14   6a05     clrf    0x5, 0           	CLRF	r0x05
003d16   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00896_DS_:
                                           ;	.line	1222; meter_logger.c	calculated_err_corr_bit ^= (((c & 0x8b) & (1 << i)) != 0);   // 0b10001011
003d18   0e01     movlw   0x1              	MOVLW	0x01
003d1a   6e07     movwf   0x7, 0           	MOVWF	r0x07
003d1c   0e00     movlw   0                	MOVLW	0x00
003d1e   6e08     movwf   0x8, 0           	MOVWF	r0x08
003d20   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003d22   e006     bz      0x3d30           	BZ	_00958_DS_
003d24   6ce8     negf    0xe8, 0          	NEGF	WREG
003d26   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00959_DS_:
003d28   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003d2a   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003d2c   0f01     addlw   0x1              	ADDLW	0x01
003d2e   e3fc     bnc     0x3d28           	BNC	_00959_DS_
                                           _00958_DS_:
003d30   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003d32   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003d34   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003d36   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003d38   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003d3a   e105     bnz     0x3d46           	BNZ	_00961_DS_
003d3c   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003d3e   e103     bnz     0x3d46           	BNZ	_00961_DS_
003d40   6a07     clrf    0x7, 0           	CLRF	r0x07
003d42   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003d44   d001     bra     0x3d48           	BRA	_00962_DS_
                                           _00961_DS_:
003d46   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00962_DS_:
003d48   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003d4a   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003d4c   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003d4e   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003d50   6a07     clrf    0x7, 0           	CLRF	r0x07
003d52   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003d54   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003d56   6e08     movwf   0x8, 0           	MOVWF	r0x08
003d58   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003d5a   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003d5c   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1221; meter_logger.c	for (i = 0; i < 8; i++) {
003d5e   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003d60   0e08     movlw   0x8              	MOVLW	0x08
003d62   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003d64   e3d9     bnc     0x3d18           	BNC	_00896_DS_
                                           ;	.line	1224; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003d66   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003d68   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1235; meter_logger.c	if ((c >> 8) == calculated_err_corr) {
003d6a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003d6c   6e00     movwf   0, 0             	MOVWF	r0x00
003d6e   6a01     clrf    0x1, 0           	CLRF	r0x01
003d70   6a02     clrf    0x2, 0           	CLRF	r0x02
003d72   5000     movf    0, 0, 0          	MOVF	r0x00, W
003d74   1803     xorwf   0x3, 0, 0        	XORWF	r0x03, W
003d76   e103     bnz     0x3d7e           	BNZ	_00966_DS_
003d78   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003d7a   1802     xorwf   0x2, 0, 0        	XORWF	r0x02, W
003d7c   e001     bz      0x3d80           	BZ	_00967_DS_
                                           _00966_DS_:
003d7e   d002     bra     0x3d84           	BRA	_00888_DS_
                                           _00967_DS_:
                                           ;	.line	1236; meter_logger.c	return 1;
003d80   0e01     movlw   0x1              	MOVLW	0x01
003d82   d001     bra     0x3d86           	BRA	_00898_DS_
                                           _00888_DS_:
                                           ;	.line	1239; meter_logger.c	return 0;
003d84   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00898_DS_:
003d86   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
003d88   f008
003d8a   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003d8c   f007
003d8e   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003d90   f006
003d92   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003d94   f005
003d96   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003d98   f004
003d9a   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003d9c   f003
003d9e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003da0   f002
003da2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003da4   f001
003da6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003da8   f000
003daa   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003dac   ffd9
003dae   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__reverse	code
                                           _reverse:
                                           ;	.line	1181; meter_logger.c	unsigned char reverse(unsigned char b) {
004bd8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004bda   ffe5
004bdc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004bde   ffd9
004be0   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004be2   ffe5
004be4   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004be6   ffe5
004be8   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004bea   ffe5
004bec   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004bee   ffe5
004bf0   0e02     movlw   0x2              	MOVLW	0x02
004bf2   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004bf4   f000
                                           ;	.line	1183; meter_logger.c	c  = ((b >>  1) & 0x55) | ((b <<  1) & 0xaa);
004bf6   4000     rrncf   0, 0, 0          	RRNCF	r0x00, W
004bf8   0b7f     andlw   0x7f             	ANDLW	0x7f
004bfa   6e01     movwf   0x1, 0           	MOVWF	r0x01
004bfc   0e55     movlw   0x55             	MOVLW	0x55
004bfe   1601     andwf   0x1, 0x1, 0      	ANDWF	r0x01, F
004c00   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
004c02   0bfe     andlw   0xfe             	ANDLW	0xfe
004c04   6e02     movwf   0x2, 0           	MOVWF	r0x02
004c06   0eaa     movlw   0xaa             	MOVLW	0xaa
004c08   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004c0a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004c0c   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1184; meter_logger.c	c |= ((b >>  2) & 0x33) | ((b <<  2) & 0xcc);
004c0e   4000     rrncf   0, 0, 0          	RRNCF	r0x00, W
004c10   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
004c12   0b3f     andlw   0x3f             	ANDLW	0x3f
004c14   6e02     movwf   0x2, 0           	MOVWF	r0x02
004c16   0e33     movlw   0x33             	MOVLW	0x33
004c18   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004c1a   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
004c1c   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
004c1e   0bfc     andlw   0xfc             	ANDLW	0xfc
004c20   6e03     movwf   0x3, 0           	MOVWF	r0x03
004c22   0ecc     movlw   0xcc             	MOVLW	0xcc
004c24   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
004c26   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004c28   1202     iorwf   0x2, 0x1, 0      	IORWF	r0x02, F
004c2a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004c2c   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1185; meter_logger.c	c |= ((b >>  4) & 0x0f) | ((b <<  4) & 0xf0);
004c2e   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
004c30   0b0f     andlw   0xf              	ANDLW	0x0f
004c32   6e02     movwf   0x2, 0           	MOVWF	r0x02
004c34   0e0f     movlw   0xf              	MOVLW	0x0f
004c36   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004c38   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
004c3a   0bf0     andlw   0xf0             	ANDLW	0xf0
004c3c   6e03     movwf   0x3, 0           	MOVWF	r0x03
004c3e   0ef0     movlw   0xf0             	MOVLW	0xf0
004c40   1403     andwf   0x3, 0, 0        	ANDWF	r0x03, W
004c42   6e00     movwf   0, 0             	MOVWF	r0x00
004c44   5000     movf    0, 0, 0          	MOVF	r0x00, W
004c46   1202     iorwf   0x2, 0x1, 0      	IORWF	r0x02, F
004c48   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004c4a   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1186; meter_logger.c	return(c);
004c4c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004c4e   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004c50   f003
004c52   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004c54   f002
004c56   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004c58   f001
004c5a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004c5c   f000
004c5e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004c60   ffd9
004c62   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__my_usart_open	code
                                           _my_usart_open:
                                           ;	.line	1151; meter_logger.c	void my_usart_open() {
005216   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005218   ffe5
00521a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00521c   ffd9
                                           ;	.line	1152; meter_logger.c	SPBRG = 103;					// 8MHz => 19230 baud
00521e   0e67     movlw   0x67             	MOVLW	0x67
005220   6eaf     movwf   0xaf, 0          	MOVWF	_SPBRG
                                           ;	.line	1153; meter_logger.c	TXSTAbits.BRGH = 1;	// (0 = low speed)
005222   84ac     bsf     0xac, 0x2, 0     	BSF	_TXSTAbits, 2
                                           ;	.line	1154; meter_logger.c	TXSTAbits.SYNC = 0;	// (0 = asynchronous)
005224   98ac     bcf     0xac, 0x4, 0     	BCF	_TXSTAbits, 4
                                           ;	.line	1155; meter_logger.c	BAUDCONbits.BRG16 = 1;
005226   86b8     bsf     0xb8, 0x3, 0     	BSF	_BAUDCONbits, 3
                                           ;	.line	1158; meter_logger.c	RCSTAbits.SPEN = 1; // (1 = serial port enabled)
005228   8eab     bsf     0xab, 0x7, 0     	BSF	_RCSTAbits, 7
                                           ;	.line	1161; meter_logger.c	PIE1bits.TXIE = 0; // (1 = enabled)
00522a   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
                                           ;	.line	1162; meter_logger.c	IPR1bits.TXIP = 0; // USART Tx on low priority interrupt
00522c   989f     bcf     0x9f, 0x4, 0     	BCF	_IPR1bits, 4
                                           ;	.line	1165; meter_logger.c	PIE1bits.RCIE = 1; // (1 = enabled)
00522e   8a9d     bsf     0x9d, 0x5, 0     	BSF	_PIE1bits, 5
                                           ;	.line	1166; meter_logger.c	IPR1bits.RCIP = 0; // USART Rx on low priority interrupt
005230   9a9f     bcf     0x9f, 0x5, 0     	BCF	_IPR1bits, 5
                                           ;	.line	1169; meter_logger.c	TXSTAbits.TX9 = 0; // (0 = 8-bit transmit)
005232   9cac     bcf     0xac, 0x6, 0     	BCF	_TXSTAbits, 6
                                           ;	.line	1172; meter_logger.c	RCSTAbits.RX9 = 0; // (0 = 8-bit reception)
005234   9cab     bcf     0xab, 0x6, 0     	BCF	_RCSTAbits, 6
                                           ;	.line	1175; meter_logger.c	RCSTAbits.CREN = 1; // (1 = Enables receiver)
005236   88ab     bsf     0xab, 0x4, 0     	BSF	_RCSTAbits, 4
                                           ;	.line	1178; meter_logger.c	TXSTAbits.TXEN = 1; // (1 = transmit enabled)
005238   8aac     bsf     0xac, 0x5, 0     	BSF	_TXSTAbits, 5
00523a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00523c   ffd9
00523e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__get_dev_id	code
                                           _get_dev_id:
                                           ;	.line	1134; meter_logger.c	unsigned int get_dev_id() {
004d58   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004d5a   ffe5
004d5c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004d5e   ffd9
004d60   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004d62   ffe5
004d64   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004d66   ffe5
004d68   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004d6a   ffe5
004d6c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004d6e   ffe5
004d70   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004d72   ffe5
004d74   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004d76   ffe5
                                           ;	.line	1137; meter_logger.c	TBLPTRU = __DEVID1 >> 16;
004d78   0e3f     movlw   0x3f             	MOVLW	0x3f
004d7a   6ef8     movwf   0xf8, 0          	MOVWF	_TBLPTRU
                                           ;	.line	1138; meter_logger.c	TBLPTRH = __DEVID1 >> 8;
004d7c   0eff     movlw   0xff             	MOVLW	0xff
004d7e   6ef7     movwf   0xf7, 0          	MOVWF	_TBLPTRH
                                           ;	.line	1139; meter_logger.c	TBLPTRL = __DEVID1;
004d80   0efe     movlw   0xfe             	MOVLW	0xfe
004d82   6ef6     movwf   0xf6, 0          	MOVWF	_TBLPTRL
004d84   0009     tblrd   *+               	tblrd*+
                                           	
                                           ;	.line	1143; meter_logger.c	dev_id_low = TABLAT;
004d86   cff5     movff   0xff5, 0         	MOVFF	_TABLAT, r0x00
004d88   f000
004d8a   0009     tblrd   *+               	tblrd*+
                                           	
                                           ;	.line	1147; meter_logger.c	dev_id_high = TABLAT;
004d8c   cff5     movff   0xff5, 0x1       	MOVFF	_TABLAT, r0x01
004d8e   f001
                                           ;	.line	1148; meter_logger.c	return ((dev_id_high << 8) + dev_id_low) & 0xffe0;	// dont return revision
004d90   6a02     clrf    0x2, 0           	CLRF	r0x02
004d92   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004d94   6e04     movwf   0x4, 0           	MOVWF	r0x04
004d96   6a03     clrf    0x3, 0           	CLRF	r0x03
004d98   6a05     clrf    0x5, 0           	CLRF	r0x05
004d9a   5000     movf    0, 0, 0          	MOVF	r0x00, W
004d9c   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
004d9e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
004da0   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
004da2   0ee0     movlw   0xe0             	MOVLW	0xe0
004da4   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
004da6   c004     movff   0x4, 0xff3       	MOVFF	r0x04, PRODL
004da8   fff3
004daa   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004dac   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
004dae   f005
004db0   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004db2   f004
004db4   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004db6   f003
004db8   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004dba   f002
004dbc   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004dbe   f001
004dc0   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004dc2   f000
004dc4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004dc6   ffd9
004dc8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__init_system	code
                                           _init_system:
                                           ;	.line	1033; meter_logger.c	void init_system() {
004e26   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004e28   ffe5
004e2a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004e2c   ffd9
                                           ;	.line	1035; meter_logger.c	TRIS_COMP1 = INPUT_STATE;		// as input
004e2e   8092     bsf     0x92, 0, 0       	BSF	_TRISAbits, 0
                                           ;	.line	1036; meter_logger.c	TRIS_COMP2 = INPUT_STATE;		// as input
004e30   8292     bsf     0x92, 0x1, 0     	BSF	_TRISAbits, 1
                                           ;	.line	1038; meter_logger.c	TRIS_IR_PIN = INPUT_STATE;		// as input
004e32   8093     bsf     0x93, 0, 0       	BSF	_TRISBbits, 0
                                           ;	.line	1040; meter_logger.c	TRIS_LED_PIN = OUTPUT_STATE;	// as output
004e34   9893     bcf     0x93, 0x4, 0     	BCF	_TRISBbits, 4
                                           ;	.line	1041; meter_logger.c	LED_PIN = 0;					// and clear
004e36   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	1043; meter_logger.c	TRIS_IR_LED_PIN = OUTPUT_STATE;	// as output
004e38   9293     bcf     0x93, 0x1, 0     	BCF	_TRISBbits, 1
                                           ;	.line	1044; meter_logger.c	IR_LED_PIN = 0;					// and clear
004e3a   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1046; meter_logger.c	TRIS_V_SENSE = INPUT_STATE;		// as input
004e3c   8a92     bsf     0x92, 0x5, 0     	BSF	_TRISAbits, 5
                                           ;	.line	1048; meter_logger.c	TRIS_DEBUG_PIN = OUTPUT_STATE;	// as output
004e3e   9493     bcf     0x93, 0x2, 0     	BCF	_TRISBbits, 2
                                           ;	.line	1049; meter_logger.c	DEBUG_PIN = 0;					// and clear
004e40   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	1051; meter_logger.c	TRIS_DEBUG2_PIN = OUTPUT_STATE;	// as output
004e42   9693     bcf     0x93, 0x3, 0     	BCF	_TRISBbits, 3
                                           ;	.line	1052; meter_logger.c	DEBUG2_PIN = 0;					// and clear
004e44   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	1054; meter_logger.c	TRIS_DEBUG3_PIN = OUTPUT_STATE;	// as output
004e46   9893     bcf     0x93, 0x4, 0     	BCF	_TRISBbits, 4
                                           ;	.line	1055; meter_logger.c	DEBUG3_PIN = 0;					// and clear
004e48   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	1059; meter_logger.c	TRIS_PWM_PIN = OUTPUT_STATE;	// enable output from pwm module at init
004e4a   9294     bcf     0x94, 0x1, 0     	BCF	_TRISCbits, 1
                                           ;	.line	1060; meter_logger.c	PWM_PIN = 0;					// and clear
004e4c   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
                                           ;	.line	1063; meter_logger.c	TRIS_RX_PIN = INPUT_STATE;		// as input
004e4e   8e94     bsf     0x94, 0x7, 0     	BSF	_TRISCbits, 7
                                           ;	.line	1064; meter_logger.c	TRIS_TX_PIN = OUTPUT_STATE;		// as input
004e50   9c94     bcf     0x94, 0x6, 0     	BCF	_TRISCbits, 6
                                           ;	.line	1069; meter_logger.c	T1CONbits.TMR1ON = 1;
004e52   80cd     bsf     0xcd, 0, 0       	BSF	_T1CONbits, 0
                                           ;	.line	1070; meter_logger.c	T1CONbits.RD16 = 1;
004e54   8ecd     bsf     0xcd, 0x7, 0     	BSF	_T1CONbits, 7
                                           ;	.line	1071; meter_logger.c	T1CONbits.TMR1CS = 0;   // internal clock source
004e56   92cd     bcf     0xcd, 0x1, 0     	BCF	_T1CONbits, 1
                                           ;	.line	1072; meter_logger.c	T1CONbits.T1OSCEN = 0;  // dont put t1 on pin
004e58   96cd     bcf     0xcd, 0x3, 0     	BCF	_T1CONbits, 3
                                           ;	.line	1073; meter_logger.c	T1CONbits.T1CKPS0 = 0;
004e5a   98cd     bcf     0xcd, 0x4, 0     	BCF	_T1CONbits, 4
                                           ;	.line	1074; meter_logger.c	T1CONbits.T1CKPS1 = 0;
004e5c   9acd     bcf     0xcd, 0x5, 0     	BCF	_T1CONbits, 5
                                           ;	.line	1075; meter_logger.c	IPR1bits.TMR1IP = 0;	// low priority
004e5e   909f     bcf     0x9f, 0, 0       	BCF	_IPR1bits, 0
                                           ;	.line	1076; meter_logger.c	PIE1bits.TMR1IE = 1;	// Ensure that TMR1 Interrupt is enabled
004e60   809d     bsf     0x9d, 0, 0       	BSF	_PIE1bits, 0
                                           ;	.line	1077; meter_logger.c	PIR1bits.TMR1IF = 1;	// Force Instant entry to Timer 1 Interrupt
004e62   809e     bsf     0x9e, 0, 0       	BSF	_PIR1bits, 0
                                           ;	.line	1108; meter_logger.c	RCONbits.IPEN = 1;
004e64   8ed0     bsf     0xd0, 0x7, 0     	BSF	_RCONbits, 7
                                           ;	.line	1110; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int, enabled when ir demodulator is started
004e66   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	1111; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004e68   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
                                           ;	.line	1113; meter_logger.c	INTCONbits.PEIE = 1;
004e6a   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	1114; meter_logger.c	INTCONbits.GIE = 1;	/* Enable Global interrupts   */	
004e6c   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           ;	.line	1119; meter_logger.c	IPR1bits.RCIP = 0;
004e6e   9a9f     bcf     0x9f, 0x5, 0     	BCF	_IPR1bits, 5
                                           ;	.line	1120; meter_logger.c	IPR1bits.TXIP = 0;
004e70   989f     bcf     0x9f, 0x4, 0     	BCF	_IPR1bits, 4
                                           ;	.line	1131; meter_logger.c	my_usart_open();
004e72   ec0b     call    0x5216, 0        	CALL	_my_usart_open
004e74   f029
004e76   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004e78   ffd9
004e7a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__sleep_ms	code
                                           _sleep_ms:
                                           ;	.line	1013; meter_logger.c	void sleep_ms(unsigned int ms) {
004b32   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004b34   ffe5
004b36   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004b38   ffd9
004b3a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004b3c   ffe5
004b3e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004b40   ffe5
004b42   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004b44   ffe5
004b46   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004b48   ffe5
004b4a   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004b4c   ffe5
004b4e   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004b50   ffe5
004b52   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
004b54   ffe5
004b56   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
004b58   ffe5
004b5a   0e02     movlw   0x2              	MOVLW	0x02
004b5c   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004b5e   f000
004b60   0e03     movlw   0x3              	MOVLW	0x03
004b62   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004b64   f001
                                           ;	.line	1016; meter_logger.c	start_timer_1_ms = timer_1_ms;	
004b66   c540     movff   0x540, 0x2       	MOVFF	_timer_1_ms, r0x02
004b68   f002
004b6a   c541     movff   0x541, 0x3       	MOVFF	(_timer_1_ms + 1), r0x03
004b6c   f003
                                           ;	.line	1019; meter_logger.c	do {
004b6e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004b70   08ff     sublw   0xff             	SUBLW	0xff
004b72   6e04     movwf   0x4, 0           	MOVWF	r0x04
004b74   0eff     movlw   0xff             	MOVLW	0xff
004b76   5403     subfwb  0x3, 0, 0        	SUBFWB	r0x03, W
004b78   6e05     movwf   0x5, 0           	MOVWF	r0x05
                                           _00846_DS_:
                                           ;	.line	1020; meter_logger.c	if (start_timer_1_ms <= timer_1_ms) {
004b7a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004b7c   0105     movlb   0x5              	BANKSEL	(_timer_1_ms + 1)
004b7e   5d41     subwf   0x41, 0, 0x1     	SUBWF	(_timer_1_ms + 1), W, B
004b80   e102     bnz     0x4b86           	BNZ	_00857_DS_
004b82   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
004b84   5d40     subwf   0x40, 0, 0x1     	SUBWF	_timer_1_ms, W, B
                                           _00857_DS_:
004b86   e308     bnc     0x4b98           	BNC	_00844_DS_
                                           ;	.line	1021; meter_logger.c	diff = timer_1_ms - start_timer_1_ms;
004b88   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004b8a   0105     movlb   0x5              	BANKSEL	_timer_1_ms
004b8c   5d40     subwf   0x40, 0, 0x1     	SUBWF	_timer_1_ms, W, B
004b8e   6e06     movwf   0x6, 0           	MOVWF	r0x06
004b90   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
004b92   5941     subwfb  0x41, 0, 0x1     	SUBWFB	(_timer_1_ms + 1), W, B
004b94   6e07     movwf   0x7, 0           	MOVWF	r0x07
004b96   d007     bra     0x4ba6           	BRA	_00847_DS_
                                           _00844_DS_:
004b98   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	1025; meter_logger.c	diff = 0xffff - start_timer_1_ms + timer_1_ms;
004b9a   5140     movf    0x40, 0, 0x1     	MOVF	_timer_1_ms, W, B
004b9c   2404     addwf   0x4, 0, 0        	ADDWF	r0x04, W
004b9e   6e06     movwf   0x6, 0           	MOVWF	r0x06
                                           ; removed redundant BANKSEL
004ba0   5141     movf    0x41, 0, 0x1     	MOVF	(_timer_1_ms + 1), W, B
004ba2   2005     addwfc  0x5, 0, 0        	ADDWFC	r0x05, W
004ba4   6e07     movwf   0x7, 0           	MOVWF	r0x07
                                           _00847_DS_:
                                           ;	.line	1027; meter_logger.c	} while (diff < ms);
004ba6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004ba8   5c07     subwf   0x7, 0, 0        	SUBWF	r0x07, W
004baa   e102     bnz     0x4bb0           	BNZ	_00858_DS_
004bac   5000     movf    0, 0, 0          	MOVF	r0x00, W
004bae   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
                                           _00858_DS_:
004bb0   e3e4     bnc     0x4b7a           	BNC	_00846_DS_
004bb2   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
004bb4   f007
004bb6   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
004bb8   f006
004bba   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
004bbc   f005
004bbe   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004bc0   f004
004bc2   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004bc4   f003
004bc6   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004bc8   f002
004bca   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004bcc   f001
004bce   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004bd0   f000
004bd2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004bd4   ffd9
004bd6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__isr_low_prio	code
                                           _isr_low_prio:
                                           ;	.line	981; meter_logger.c	static void isr_low_prio(void) __interrupt 2 {
004a6e   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
004a70   ffe5
004a72   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
004a74   ffe5
004a76   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004a78   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
004a7a   ffe5
004a7c   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
004a7e   ffe5
004a80   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
004a82   ffe5
004a84   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
004a86   ffe5
004a88   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
004a8a   ffe5
004a8c   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
004a8e   ffe5
004a90   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004a92   ffe5
004a94   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004a96   ffd9
004a98   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004a9a   ffe5
004a9c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004a9e   ffe5
                                           ;	.line	984; meter_logger.c	if (PIR1bits.TMR1IF) {
004aa0   a09e     btfss   0x9e, 0, 0       	BTFSS	_PIR1bits, 0
004aa2   d024     bra     0x4aec           	BRA	_00815_DS_
                                           ;	.line	985; meter_logger.c	TMR1H = (unsigned char)(TIMER1_RELOAD >> 8);    // 262,158ms @ 8MHz
004aa4   0ef8     movlw   0xf8             	MOVLW	0xf8
004aa6   6ecf     movwf   0xcf, 0          	MOVWF	_TMR1H
                                           ;	.line	986; meter_logger.c	TMR1L = (unsigned char)TIMER1_RELOAD;
004aa8   0e53     movlw   0x53             	MOVLW	0x53
004aaa   6ece     movwf   0xce, 0          	MOVWF	_TMR1L
                                           ;	.line	988; meter_logger.c	switch (led_flash.state) {
004aac   c54c     movff   0x54c, 0         	MOVFF	_led_flash, r0x00
004aae   f000
004ab0   5000     movf    0, 0, 0          	MOVF	r0x00, W
004ab2   6e01     movwf   0x1, 0           	MOVWF	r0x01
004ab4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004ab6   e004     bz      0x4ac0           	BZ	_00809_DS_
004ab8   5000     movf    0, 0, 0          	MOVF	r0x00, W
004aba   0a01     xorlw   0x1              	XORLW	0x01
004abc   e006     bz      0x4aca           	BZ	_00810_DS_
004abe   d011     bra     0x4ae2           	BRA	_00813_DS_
                                           _00809_DS_:
                                           ;	.line	990; meter_logger.c	LED_PIN = 1;
004ac0   8881     bsf     0x81, 0x4, 0     	BSF	_PORTBbits, 4
                                           ;	.line	991; meter_logger.c	led_flash.state = LED_FLASH_RUNNING;
004ac2   0e01     movlw   0x1              	MOVLW	0x01
004ac4   0105     movlb   0x5              	BANKSEL	_led_flash
004ac6   6f4c     movwf   0x4c, 0x1        	MOVWF	_led_flash, B
                                           ;	.line	992; meter_logger.c	break;
004ac8   d00c     bra     0x4ae2           	BRA	_00813_DS_
                                           _00810_DS_:
                                           ;	.line	994; meter_logger.c	if (led_flash.timer-- == 0) {
004aca   c54d     movff   0x54d, 0         	MOVFF	(_led_flash + 1), r0x00
004acc   f000
004ace   0400     decf    0, 0, 0          	DECF	r0x00, W
004ad0   6e01     movwf   0x1, 0           	MOVWF	r0x01
004ad2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004ad4   0105     movlb   0x5              	BANKSEL	(_led_flash + 1)
004ad6   6f4d     movwf   0x4d, 0x1        	MOVWF	(_led_flash + 1), B
004ad8   5000     movf    0, 0, 0          	MOVF	r0x00, W
004ada   e103     bnz     0x4ae2           	BNZ	_00813_DS_
                                           ;	.line	995; meter_logger.c	LED_PIN = 0;
004adc   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	996; meter_logger.c	led_flash.state = LED_FLASH_STOPPED;
004ade   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
004ae0   6f4c     movwf   0x4c, 0x1        	MOVWF	_led_flash, B
                                           _00813_DS_:
004ae2   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	1000; meter_logger.c	timer_1_ms++;
004ae4   3f40     incfsz  0x40, 0x1, 0x1   	INCFSZ	_timer_1_ms, F, B
004ae6   d001     bra     0x4aea           	BRA	_31215_DS_
                                           ; removed redundant BANKSEL
004ae8   2b41     incf    0x41, 0x1, 0x1   	INCF	(_timer_1_ms + 1), F, B
                                           _31215_DS_:
                                           ;	.line	1001; meter_logger.c	PIR1bits.TMR1IF = 0;    /* Clear the Timer Flag  */
004aea   909e     bcf     0x9e, 0, 0       	BCF	_PIR1bits, 0
                                           _00815_DS_:
                                           ;	.line	1005; meter_logger.c	if (usart_drdy()) {
004aec   ec22     call    0x5444, 0        	CALL	_usart_drdy
004aee   f02a
004af0   6e00     movwf   0, 0             	MOVWF	r0x00
004af2   5000     movf    0, 0, 0          	MOVF	r0x00, W
004af4   e006     bz      0x4b02           	BZ	_00818_DS_
                                           ;	.line	1007; meter_logger.c	c = usart_getc();
004af6   ec20     call    0x5240, 0        	CALL	_usart_getc
004af8   f029
004afa   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	1008; meter_logger.c	usart_putc(c);
004afc   5000     movf    0, 0, 0          	MOVF	r0x00, W
004afe   ec06     call    0x540c, 0        	CALL	_usart_putc
004b00   f02a
                                           _00818_DS_:
004b02   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004b04   f001
004b06   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004b08   f000
004b0a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004b0c   ffd9
004b0e   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
004b10   fffb
004b12   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
004b14   fffa
004b16   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
004b18   ffea
004b1a   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
004b1c   ffe9
004b1e   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
004b20   fff4
004b22   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
004b24   fff3
004b26   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
004b28   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
004b2a   ffe0
004b2c   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
004b2e   ffd8
004b30   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__isr_high_prio	code
                                           _isr_high_prio:
                                           ;	.line	515; meter_logger.c	static void isr_high_prio(void) __interrupt 1 {
00260a   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
00260c   ffe5
00260e   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
002610   ffe5
002612   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002614   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
002616   ffe5
002618   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
00261a   ffe5
00261c   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
00261e   ffe5
002620   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
002622   ffe5
002624   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
002626   ffe5
002628   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
00262a   ffe5
00262c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00262e   ffe5
002630   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002632   ffd9
002634   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002636   ffe5
002638   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00263a   ffe5
00263c   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00263e   ffe5
002640   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002642   ffe5
002644   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002646   ffe5
002648   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00264a   ffe5
                                           ;	.line	517; meter_logger.c	if (INTCONbits.INT0IF && INTCONbits.INT0IE) {
00264c   a2f2     btfss   0xf2, 0x1, 0     	BTFSS	_INTCONbits, 1
00264e   d1a0     bra     0x2990           	BRA	_00389_DS_
002650   a8f2     btfss   0xf2, 0x4, 0     	BTFSS	_INTCONbits, 4
002652   d19e     bra     0x2990           	BRA	_00389_DS_
                                           ;	.line	518; meter_logger.c	timer_0 = (unsigned int)(TMR0L) | ((unsigned int)(TMR0H) << 8);
002654   cfd6     movff   0xfd6, 0         	MOVFF	_TMR0L, r0x00
002656   f000
002658   6a01     clrf    0x1, 0           	CLRF	r0x01
00265a   cfd7     movff   0xfd7, 0x2       	MOVFF	_TMR0H, r0x02
00265c   f002
00265e   6a03     clrf    0x3, 0           	CLRF	r0x03
002660   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002662   6e05     movwf   0x5, 0           	MOVWF	r0x05
002664   6a04     clrf    0x4, 0           	CLRF	r0x04
002666   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002668   1000     iorwf   0, 0, 0          	IORWF	r0x00, W
00266a   0105     movlb   0x5              	BANKSEL	_timer_0
00266c   6f46     movwf   0x46, 0x1        	MOVWF	_timer_0, B
00266e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002670   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
                                           ; removed redundant BANKSEL
002672   6f47     movwf   0x47, 0x1        	MOVWF	(_timer_0 + 1), B
002674   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	519; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
002676   5149     movf    0x49, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
002678   6e00     movwf   0, 0             	MOVWF	r0x00
00267a   6a01     clrf    0x1, 0           	CLRF	r0x01
00267c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00267e   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	520; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
002680   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002682   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
002684   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	522; meter_logger.c	switch (codec_type) {
002686   5151     movf    0x51, 0, 0x1     	MOVF	_codec_type, W, B
002688   0a01     xorlw   0x1              	XORLW	0x01
00268a   e00b     bz      0x26a2           	BZ	_00347_DS_
                                           _00696_DS_:
00268c   0105     movlb   0x5              	BANKSEL	_codec_type
00268e   5151     movf    0x51, 0, 0x1     	MOVF	_codec_type, W, B
002690   0a02     xorlw   0x2              	XORLW	0x02
002692   e101     bnz     0x2696           	BNZ	_00698_DS_
002694   d11d     bra     0x28d0           	BRA	_00381_DS_
                                           _00698_DS_:
002696   0105     movlb   0x5              	BANKSEL	_codec_type
002698   5151     movf    0x51, 0, 0x1     	MOVF	_codec_type, W, B
00269a   0a04     xorlw   0x4              	XORLW	0x04
00269c   e101     bnz     0x26a0           	BNZ	_00700_DS_
00269e   d146     bra     0x292c           	BRA	_00384_DS_
                                           _00700_DS_:
0026a0   d176     bra     0x298e           	BRA	_00387_DS_
                                           _00347_DS_:
                                           ;	.line	524; meter_logger.c	flash_led(100);
0026a2   0e64     movlw   0x64             	MOVLW	0x64
0026a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0026a6   ec48     call    0x5290, 0        	CALL	_flash_led
0026a8   f029
0026aa   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	525; meter_logger.c	switch (testo_ir_proto.state) {
0026ac   c51d     movff   0x51d, 0         	MOVFF	_testo_ir_proto, r0x00
0026ae   f000
0026b0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0026b2   6e01     movwf   0x1, 0           	MOVWF	r0x01
0026b4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0026b6   e008     bz      0x26c8           	BZ	_00348_DS_
0026b8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0026ba   0a02     xorlw   0x2              	XORLW	0x02
0026bc   e00c     bz      0x26d6           	BZ	_00349_DS_
0026be   5000     movf    0, 0, 0          	MOVF	r0x00, W
0026c0   0a04     xorlw   0x4              	XORLW	0x04
0026c2   e101     bnz     0x26c6           	BNZ	_00706_DS_
0026c4   d03b     bra     0x273c           	BRA	_00357_DS_
                                           _00706_DS_:
0026c6   d163     bra     0x298e           	BRA	_00387_DS_
                                           _00348_DS_:
                                           ;	.line	527; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
0026c8   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	528; meter_logger.c	testo_ir_proto.start_bit_len = 1;
0026ca   0e01     movlw   0x1              	MOVLW	0x01
0026cc   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
0026ce   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	529; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
0026d0   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
0026d2   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
                                           ;	.line	530; meter_logger.c	break;
0026d4   d15c     bra     0x298e           	BRA	_00387_DS_
                                           _00349_DS_:
0026d6   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	532; meter_logger.c	if ((TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < TICK + timer0_reload + TICK_ADJ)) {
0026d8   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0026da   0f8f     addlw   0x8f             	ADDLW	0x8f
0026dc   6e00     movwf   0, 0             	MOVWF	r0x00
0026de   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
0026e0   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0026e2   6e01     movwf   0x1, 0           	MOVWF	r0x01
0026e4   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0026e6   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
0026e8   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0026ea   e102     bnz     0x26f0           	BNZ	_00707_DS_
                                           ; removed redundant BANKSEL
0026ec   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
0026ee   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00707_DS_:
0026f0   e21f     bc      0x2730           	BC	_00354_DS_
0026f2   0105     movlb   0x5              	BANKSEL	_timer0_reload
0026f4   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0026f6   0f1f     addlw   0x1f             	ADDLW	0x1f
0026f8   6e00     movwf   0, 0             	MOVWF	r0x00
0026fa   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
0026fc   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0026fe   6e01     movwf   0x1, 0           	MOVWF	r0x01
002700   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002702   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002704   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
002706   e102     bnz     0x270c           	BNZ	_00708_DS_
002708   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00270a   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00708_DS_:
00270c   e211     bc      0x2730           	BC	_00354_DS_
                                           ;	.line	533; meter_logger.c	if (testo_ir_proto.start_bit_len < 2) {
00270e   0e02     movlw   0x2              	MOVLW	0x02
002710   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
002712   5d1f     subwf   0x1f, 0, 0x1     	SUBWF	(_testo_ir_proto + 2), W, B
002714   e206     bc      0x2722           	BC	_00351_DS_
                                           ;	.line	534; meter_logger.c	testo_ir_proto.start_bit_len++;
002716   c51f     movff   0x51f, 0         	MOVFF	(_testo_ir_proto + 2), r0x00
002718   f000
00271a   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
00271c   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00271e   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
002720   d136     bra     0x298e           	BRA	_00387_DS_
                                           _00351_DS_:
002722   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	538; meter_logger.c	testo_ir_proto.data = 0;
002724   6b20     clrf    0x20, 0x1        	CLRF	(_testo_ir_proto + 3), B
                                           ; removed redundant BANKSEL
002726   6b21     clrf    0x21, 0x1        	CLRF	(_testo_ir_proto + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	539; meter_logger.c	testo_ir_proto.data_len = 0;
002728   6b22     clrf    0x22, 0x1        	CLRF	(_testo_ir_proto + 5), B
                                           ;	.line	540; meter_logger.c	testo_ir_proto.state = DATA_WAIT;
00272a   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
00272c   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
00272e   d12f     bra     0x298e           	BRA	_00387_DS_
                                           _00354_DS_:
                                           ;	.line	545; meter_logger.c	testo_ir_proto.start_bit_len = 1;
002730   0e01     movlw   0x1              	MOVLW	0x01
002732   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
002734   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	546; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
002736   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002738   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
                                           ;	.line	548; meter_logger.c	break;
00273a   d129     bra     0x298e           	BRA	_00387_DS_
                                           _00357_DS_:
                                           ;	.line	550; meter_logger.c	if (testo_ir_proto.data_len <= 12) {
00273c   0e0d     movlw   0xd              	MOVLW	0x0d
00273e   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
002740   5d22     subwf   0x22, 0, 0x1     	SUBWF	(_testo_ir_proto + 5), W, B
002742   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002744   d124     bra     0x298e           	BRA	_00387_DS_
002746   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	551; meter_logger.c	if (((TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < TICK + timer0_reload + TICK_ADJ)) || ((3 * TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < 3 * TICK + timer0_reload + TICK_ADJ))) {
002748   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00274a   0f8f     addlw   0x8f             	ADDLW	0x8f
00274c   6e00     movwf   0, 0             	MOVWF	r0x00
00274e   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002750   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002752   6e01     movwf   0x1, 0           	MOVWF	r0x01
002754   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002756   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
002758   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00275a   e102     bnz     0x2760           	BNZ	_00711_DS_
                                           ; removed redundant BANKSEL
00275c   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
00275e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00711_DS_:
002760   e20e     bc      0x277e           	BC	_00373_DS_
002762   0105     movlb   0x5              	BANKSEL	_timer0_reload
002764   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002766   0f1f     addlw   0x1f             	ADDLW	0x1f
002768   6e00     movwf   0, 0             	MOVWF	r0x00
00276a   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
00276c   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
00276e   6e01     movwf   0x1, 0           	MOVWF	r0x01
002770   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002772   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002774   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
002776   e102     bnz     0x277c           	BNZ	_00712_DS_
002778   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00277a   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00712_DS_:
00277c   e31c     bnc     0x27b6           	BNC	_00368_DS_
                                           _00373_DS_:
00277e   0105     movlb   0x5              	BANKSEL	_timer0_reload
002780   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002782   0f3d     addlw   0x3d             	ADDLW	0x3d
002784   6e00     movwf   0, 0             	MOVWF	r0x00
002786   0e09     movlw   0x9              	MOVLW	0x09
                                           ; removed redundant BANKSEL
002788   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
00278a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00278c   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
00278e   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
002790   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002792   e102     bnz     0x2798           	BNZ	_00713_DS_
                                           ; removed redundant BANKSEL
002794   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
002796   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00713_DS_:
002798   e235     bc      0x2804           	BC	_00369_DS_
00279a   0105     movlb   0x5              	BANKSEL	_timer0_reload
00279c   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00279e   0fcd     addlw   0xcd             	ADDLW	0xcd
0027a0   6e00     movwf   0, 0             	MOVWF	r0x00
0027a2   0e0a     movlw   0xa              	MOVLW	0x0a
                                           ; removed redundant BANKSEL
0027a4   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0027a6   6e01     movwf   0x1, 0           	MOVWF	r0x01
0027a8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0027aa   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0027ac   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
0027ae   e102     bnz     0x27b4           	BNZ	_00714_DS_
0027b0   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0027b2   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00714_DS_:
0027b4   e227     bc      0x2804           	BC	_00369_DS_
                                           _00368_DS_:
0027b6   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	553; meter_logger.c	if ((testo_ir_proto.data & 1) != 0) {
0027b8   a120     btfss   0x20, 0, 0x1     	BTFSS	(_testo_ir_proto + 3), 0
0027ba   d00a     bra     0x27d0           	BRA	_00359_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	555; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
0027bc   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0027be   6e00     movwf   0, 0             	MOVWF	r0x00
0027c0   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
0027c2   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
0027c4   6e01     movwf   0x1, 0           	MOVWF	r0x01
0027c6   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0027c8   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
0027ca   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0027cc   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
0027ce   d013     bra     0x27f6           	BRA	_00360_DS_
                                           _00359_DS_:
0027d0   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	559; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
0027d2   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0027d4   6e00     movwf   0, 0             	MOVWF	r0x00
0027d6   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
0027d8   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
0027da   6e01     movwf   0x1, 0           	MOVWF	r0x01
0027dc   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0027de   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
0027e0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0027e2   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           ;	.line	560; meter_logger.c	testo_ir_proto.data |= 1;	// and set bit 0
0027e4   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
0027e6   1120     iorwf   0x20, 0, 0x1     	IORWF	(_testo_ir_proto + 3), W, B
0027e8   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
0027ea   5121     movf    0x21, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
0027ec   6e01     movwf   0x1, 0           	MOVWF	r0x01
0027ee   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0027f0   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
0027f2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0027f4   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           _00360_DS_:
                                           ;	.line	562; meter_logger.c	testo_ir_proto.data_len++;
0027f6   c522     movff   0x522, 0         	MOVFF	(_testo_ir_proto + 5), r0x00
0027f8   f000
0027fa   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0027fc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0027fe   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
002800   6f22     movwf   0x22, 0x1        	MOVWF	(_testo_ir_proto + 5), B
002802   d048     bra     0x2894           	BRA	_00370_DS_
                                           _00369_DS_:
002804   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	564; meter_logger.c	else if ((2 * TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < 2 * TICK + timer0_reload + TICK_ADJ)) {
002806   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002808   0fe6     addlw   0xe6             	ADDLW	0xe6
00280a   6e00     movwf   0, 0             	MOVWF	r0x00
00280c   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
00280e   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002810   6e01     movwf   0x1, 0           	MOVWF	r0x01
002812   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002814   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
002816   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002818   e102     bnz     0x281e           	BNZ	_00717_DS_
                                           ; removed redundant BANKSEL
00281a   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
00281c   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00717_DS_:
00281e   e235     bc      0x288a           	BC	_00365_DS_
002820   0105     movlb   0x5              	BANKSEL	_timer0_reload
002822   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002824   0f76     addlw   0x76             	ADDLW	0x76
002826   6e00     movwf   0, 0             	MOVWF	r0x00
002828   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
00282a   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
00282c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00282e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002830   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002832   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
002834   e102     bnz     0x283a           	BNZ	_00718_DS_
002836   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002838   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00718_DS_:
00283a   e227     bc      0x288a           	BC	_00365_DS_
00283c   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	566; meter_logger.c	if ((testo_ir_proto.data & 1) != 0) {
00283e   a120     btfss   0x20, 0, 0x1     	BTFSS	(_testo_ir_proto + 3), 0
002840   d013     bra     0x2868           	BRA	_00362_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	568; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
002842   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
002844   6e00     movwf   0, 0             	MOVWF	r0x00
002846   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
002848   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
00284a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00284c   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00284e   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002850   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002852   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           ;	.line	569; meter_logger.c	testo_ir_proto.data |= 1;	// and set bit 0
002854   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002856   1120     iorwf   0x20, 0, 0x1     	IORWF	(_testo_ir_proto + 3), W, B
002858   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
00285a   5121     movf    0x21, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
00285c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00285e   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002860   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002862   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002864   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
002866   d00a     bra     0x287c           	BRA	_00363_DS_
                                           _00362_DS_:
002868   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	573; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
00286a   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
00286c   6e00     movwf   0, 0             	MOVWF	r0x00
00286e   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
002870   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
002872   6e01     movwf   0x1, 0           	MOVWF	r0x01
002874   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002876   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002878   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00287a   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           _00363_DS_:
                                           ;	.line	575; meter_logger.c	testo_ir_proto.data_len++;
00287c   c522     movff   0x522, 0         	MOVFF	(_testo_ir_proto + 5), r0x00
00287e   f000
002880   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002882   5000     movf    0, 0, 0          	MOVF	r0x00, W
002884   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
002886   6f22     movwf   0x22, 0x1        	MOVWF	(_testo_ir_proto + 5), B
002888   d005     bra     0x2894           	BRA	_00370_DS_
                                           _00365_DS_:
                                           ;	.line	580; meter_logger.c	testo_ir_proto.start_bit_len = 1;
00288a   0e01     movlw   0x1              	MOVLW	0x01
00288c   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
00288e   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	581; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
002890   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002892   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
                                           _00370_DS_:
002894   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
                                           ;	.line	583; meter_logger.c	if (testo_ir_proto.data_len == 12) {
002896   5122     movf    0x22, 0, 0x1     	MOVF	(_testo_ir_proto + 5), W, B
002898   0a0c     xorlw   0xc              	XORLW	0x0c
00289a   e001     bz      0x289e           	BZ	_00722_DS_
00289c   d078     bra     0x298e           	BRA	_00387_DS_
                                           _00722_DS_:
00289e   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 4)
                                           ;	.line	586; meter_logger.c	if (testo_valid_err_corr(testo_ir_proto.data & 0xffff)) {
0028a0   5121     movf    0x21, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
0028a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0028a4   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0028a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0028a8   ecd8     call    0x3bb0, 0        	CALL	_testo_valid_err_corr
0028aa   f01d
0028ac   6e00     movwf   0, 0             	MOVWF	r0x00
0028ae   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0028b0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0028b2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0028b4   e00a     bz      0x28ca           	BZ	_00375_DS_
0028b6   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	588; meter_logger.c	fifo_put(testo_ir_proto.data & 0xff);
0028b8   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0028ba   6e00     movwf   0, 0             	MOVWF	r0x00
0028bc   6a01     clrf    0x1, 0           	CLRF	r0x01
0028be   5000     movf    0, 0, 0          	MOVF	r0x00, W
0028c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0028c2   ece0     call    0x43c0, 0        	CALL	_fifo_put
0028c4   f021
0028c6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	589; meter_logger.c	LED_PIN = 1;
0028c8   8881     bsf     0x81, 0x4, 0     	BSF	_PORTBbits, 4
                                           _00375_DS_:
0028ca   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	591; meter_logger.c	testo_ir_proto.state = INIT_STATE;
0028cc   6b1d     clrf    0x1d, 0x1        	CLRF	_testo_ir_proto, B
                                           ;	.line	596; meter_logger.c	break;
0028ce   d05f     bra     0x298e           	BRA	_00387_DS_
                                           _00381_DS_:
0028d0   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	598; meter_logger.c	switch (rs232_proto.state) {
0028d2   5123     movf    0x23, 0, 0x1     	MOVF	_rs232_proto, W, B
0028d4   0a02     xorlw   0x2              	XORLW	0x02
0028d6   e001     bz      0x28da           	BZ	_00725_DS_
0028d8   d05a     bra     0x298e           	BRA	_00387_DS_
                                           _00725_DS_:
0028da   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	609; meter_logger.c	TMR0H = (unsigned char)((timer0_reload - ((0xffff - timer0_reload) >> 1)) >> 8);
0028dc   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0028de   08ff     sublw   0xff             	SUBLW	0xff
0028e0   6e00     movwf   0, 0             	MOVWF	r0x00
0028e2   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
0028e4   5549     subfwb  0x49, 0, 0x1     	SUBFWB	(_timer0_reload + 1), W, B
0028e6   6e01     movwf   0x1, 0           	MOVWF	r0x01
0028e8   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0028ea   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
0028ec   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
0028ee   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0028f0   5d48     subwf   0x48, 0, 0x1     	SUBWF	_timer0_reload, W, B
0028f2   6e00     movwf   0, 0             	MOVWF	r0x00
0028f4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0028f6   5949     subwfb  0x49, 0, 0x1     	SUBWFB	(_timer0_reload + 1), W, B
0028f8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0028fa   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0028fc   6e00     movwf   0, 0             	MOVWF	r0x00
0028fe   6a01     clrf    0x1, 0           	CLRF	r0x01
002900   5000     movf    0, 0, 0          	MOVF	r0x00, W
002902   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	610; meter_logger.c	TMR0L = (unsigned char)timer0_reload - ((0xffff - timer0_reload) >> 1);
002904   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002906   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002908   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00290a   08ff     sublw   0xff             	SUBLW	0xff
00290c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00290e   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
002910   5549     subfwb  0x49, 0, 0x1     	SUBFWB	(_timer0_reload + 1), W, B
002912   6e02     movwf   0x2, 0           	MOVWF	r0x02
002914   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002916   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
002918   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
00291a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00291c   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
00291e   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
                                           ;	.line	611; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int while we are using timer to receive data bits
002920   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	612; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
002922   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	613; meter_logger.c	rs232_proto.state = DATA_WAIT;
002924   0e04     movlw   0x4              	MOVLW	0x04
002926   0105     movlb   0x5              	BANKSEL	_rs232_proto
002928   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	616; meter_logger.c	break;
00292a   d031     bra     0x298e           	BRA	_00387_DS_
                                           _00384_DS_:
00292c   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	618; meter_logger.c	switch (rs232_proto.state) {
00292e   5123     movf    0x23, 0, 0x1     	MOVF	_rs232_proto, W, B
002930   0a02     xorlw   0x2              	XORLW	0x02
002932   e12d     bnz     0x298e           	BNZ	_00387_DS_
                                           _00727_DS_:
002934   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	629; meter_logger.c	TMR0H = (unsigned char)((timer0_reload - ((0xffff - timer0_reload) >> 1)) >> 8);
002936   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002938   08ff     sublw   0xff             	SUBLW	0xff
00293a   6e00     movwf   0, 0             	MOVWF	r0x00
00293c   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
00293e   5549     subfwb  0x49, 0, 0x1     	SUBFWB	(_timer0_reload + 1), W, B
002940   6e01     movwf   0x1, 0           	MOVWF	r0x01
002942   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002944   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
002946   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
002948   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00294a   5d48     subwf   0x48, 0, 0x1     	SUBWF	_timer0_reload, W, B
00294c   6e00     movwf   0, 0             	MOVWF	r0x00
00294e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002950   5949     subwfb  0x49, 0, 0x1     	SUBWFB	(_timer0_reload + 1), W, B
002952   6e01     movwf   0x1, 0           	MOVWF	r0x01
002954   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002956   6e00     movwf   0, 0             	MOVWF	r0x00
002958   6a01     clrf    0x1, 0           	CLRF	r0x01
00295a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00295c   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	630; meter_logger.c	TMR0L = (unsigned char)timer0_reload - ((0xffff - timer0_reload) >> 1);
00295e   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002960   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002962   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002964   08ff     sublw   0xff             	SUBLW	0xff
002966   6e01     movwf   0x1, 0           	MOVWF	r0x01
002968   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
00296a   5549     subfwb  0x49, 0, 0x1     	SUBFWB	(_timer0_reload + 1), W, B
00296c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00296e   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002970   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
002972   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
002974   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002976   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002978   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
                                           ;	.line	631; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int while we are using timer to receive data bits
00297a   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	632; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
00297c   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	633; meter_logger.c	rs232_proto.data &= 0x7f;	// 7-bit data
00297e   0e7f     movlw   0x7f             	MOVLW	0x7f
002980   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
002982   1525     andwf   0x25, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
002984   6e00     movwf   0, 0             	MOVWF	r0x00
002986   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002988   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	634; meter_logger.c	rs232_proto.state = DATA_WAIT;
00298a   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
00298c   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           _00387_DS_:
                                           ;	.line	639; meter_logger.c	INTCONbits.INT0IF = 0;	/* Clear Interrupt Flag */
00298e   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           _00389_DS_:
                                           ;	.line	643; meter_logger.c	if (INTCONbits.TMR0IF && INTCONbits.TMR0IE) {
002990   a4f2     btfss   0xf2, 0x2, 0     	BTFSS	_INTCONbits, 2
002992   efd0     goto    0x2da0           	GOTO	_00463_DS_
002994   f016
002996   aaf2     btfss   0xf2, 0x5, 0     	BTFSS	_INTCONbits, 5
002998   efd0     goto    0x2da0           	GOTO	_00463_DS_
00299a   f016
00299c   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	645; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
00299e   5149     movf    0x49, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
0029a0   6e00     movwf   0, 0             	MOVWF	r0x00
0029a2   6a01     clrf    0x1, 0           	CLRF	r0x01
0029a4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0029a6   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	646; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
0029a8   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0029aa   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
                                           ;	.line	648; meter_logger.c	switch (codec_type) {
0029ac   0e01     movlw   0x1              	MOVLW	0x01
0029ae   0105     movlb   0x5              	BANKSEL	_codec_type
0029b0   5d51     subwf   0x51, 0, 0x1     	SUBWF	_codec_type, W, B
0029b2   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
0029b4   efcf     goto    0x2d9e           	GOTO	_00461_DS_
0029b6   f016
0029b8   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
0029ba   5d51     subwf   0x51, 0, 0x1     	SUBWF	_codec_type, W, B
0029bc   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0029be   efcf     goto    0x2d9e           	GOTO	_00461_DS_
0029c0   f016
                                           ; removed redundant BANKSEL
0029c2   0551     decf    0x51, 0, 0x1     	DECF	_codec_type, W, B
0029c4   6e00     movwf   0, 0             	MOVWF	r0x00
0029c6   6afa     clrf    0xfa, 0          	CLRF	PCLATH
0029c8   6afb     clrf    0xfb, 0          	CLRF	PCLATU
0029ca   3400     rlcf    0, 0, 0          	RLCF	r0x00, W
0029cc   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0029ce   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
0029d0   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0029d2   0bfc     andlw   0xfc             	ANDLW	0xfc
0029d4   0fe4     addlw   0xe4             	ADDLW	LOW(_00731_DS_)
0029d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0029d8   0e29     movlw   0x29             	MOVLW	HIGH(_00731_DS_)
0029da   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
0029dc   0e00     movlw   0                	MOVLW	UPPER(_00731_DS_)
0029de   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0029e0   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0029e2   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00731_DS_:
0029e4   ef00     goto    0x2a00           	GOTO	_00391_DS_
0029e6   f015
0029e8   ef4e     goto    0x2a9c           	GOTO	_00403_DS_
0029ea   f015
0029ec   ef05     goto    0x2a0a           	GOTO	_00392_DS_
0029ee   f015
0029f0   eff8     goto    0x2bf0           	GOTO	_00424_DS_
0029f2   f015
0029f4   ef8e     goto    0x2b1c           	GOTO	_00413_DS_
0029f6   f015
0029f8   ef38     goto    0x2c70           	GOTO	_00434_DS_
0029fa   f016
0029fc   ef7a     goto    0x2cf4           	GOTO	_00445_DS_
0029fe   f016
                                           _00391_DS_:
                                           ;	.line	650; meter_logger.c	T0CONbits.TMR0ON = 0;			// Stop TMR0
002a00   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
002a02   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	651; meter_logger.c	testo_ir_proto.state = INIT_STATE;
002a04   6b1d     clrf    0x1d, 0x1        	CLRF	_testo_ir_proto, B
002a06   0003     sleep                    	sleep 
                                           ;	.line	653; meter_logger.c	break;
002a08   d1ca     bra     0x2d9e           	BRA	_00461_DS_
                                           _00392_DS_:
                                           ;	.line	655; meter_logger.c	switch (rs232_proto.state) {
002a0a   c523     movff   0x523, 0         	MOVFF	_rs232_proto, r0x00
002a0c   f000
002a0e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a10   6e01     movwf   0x1, 0           	MOVWF	r0x01
002a12   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002a14   e00a     bz      0x2a2a           	BZ	_00393_DS_
002a16   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a18   0a03     xorlw   0x3              	XORLW	0x03
002a1a   e011     bz      0x2a3e           	BZ	_00396_DS_
002a1c   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a1e   0a0a     xorlw   0xa              	XORLW	0x0a
002a20   e033     bz      0x2a88           	BZ	_00400_DS_
002a22   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a24   0a0b     xorlw   0xb              	XORLW	0x0b
002a26   e035     bz      0x2a92           	BZ	_00401_DS_
002a28   d1ba     bra     0x2d9e           	BRA	_00461_DS_
                                           _00393_DS_:
002a2a   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	657; meter_logger.c	if (rs232_proto.data_len == 8) {
002a2c   5126     movf    0x26, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
002a2e   0a08     xorlw   0x8              	XORLW	0x08
002a30   e001     bz      0x2a34           	BZ	_00741_DS_
002a32   d1b5     bra     0x2d9e           	BRA	_00461_DS_
                                           _00741_DS_:
                                           ;	.line	658; meter_logger.c	IR_LED_PIN = 1;		// inverted rs232 output on ir, start bit = ir light
002a34   8281     bsf     0x81, 0x1, 0     	BSF	_PORTBbits, 1
                                           ;	.line	659; meter_logger.c	rs232_proto.state = START_BIT_SENT;
002a36   0e03     movlw   0x3              	MOVLW	0x03
002a38   0105     movlb   0x5              	BANKSEL	_rs232_proto
002a3a   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	661; meter_logger.c	break;
002a3c   d1b0     bra     0x2d9e           	BRA	_00461_DS_
                                           _00396_DS_:
                                           ;	.line	663; meter_logger.c	if (rs232_proto.data_len >= 1) {
002a3e   0e01     movlw   0x1              	MOVLW	0x01
002a40   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002a42   5d26     subwf   0x26, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002a44   e31c     bnc     0x2a7e           	BNC	_00398_DS_
                                           ;	.line	664; meter_logger.c	IR_LED_PIN = (rs232_proto.data & 1) == 0;	// inverted rs232 output on ir
002a46   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002a48   1525     andwf   0x25, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
002a4a   6e00     movwf   0, 0             	MOVWF	r0x00
002a4c   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a4e   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
002a50   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
002a52   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002a54   6a00     clrf    0, 0             	CLRF	r0x00
002a56   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
002a58   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a5a   0b01     andlw   0x1              	ANDLW	0x01
002a5c   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
002a5e   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
002a60   5081     movf    0x81, 0, 0       	MOVF	_PORTBbits, W
002a62   0bfd     andlw   0xfd             	ANDLW	0xfd
002a64   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
002a66   6e81     movwf   0x81, 0          	MOVWF	_PORTBbits
                                           ; removed redundant BANKSEL
                                           ;	.line	665; meter_logger.c	rs232_proto.data = rs232_proto.data >> 1;
002a68   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002a6a   0b7f     andlw   0x7f             	ANDLW	0x7f
002a6c   6e00     movwf   0, 0             	MOVWF	r0x00
002a6e   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002a70   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	666; meter_logger.c	rs232_proto.data_len--;
002a72   c526     movff   0x526, 0         	MOVFF	(_rs232_proto + 3), r0x00
002a74   f000
002a76   0600     decf    0, 0x1, 0        	DECF	r0x00, F
002a78   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002a7a   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
002a7c   d190     bra     0x2d9e           	BRA	_00461_DS_
                                           _00398_DS_:
                                           ;	.line	669; meter_logger.c	IR_LED_PIN = 0;								// inverted rs232 output on ir					
002a7e   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	670; meter_logger.c	rs232_proto.state = STOP_BIT_SENT;
002a80   0e0a     movlw   0xa              	MOVLW	0x0a
002a82   0105     movlb   0x5              	BANKSEL	_rs232_proto
002a84   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	672; meter_logger.c	break;
002a86   d18b     bra     0x2d9e           	BRA	_00461_DS_
                                           _00400_DS_:
                                           ;	.line	674; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002a88   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	675; meter_logger.c	rs232_proto.state = STOP_BIT2_SENT;
002a8a   0e0b     movlw   0xb              	MOVLW	0x0b
002a8c   0105     movlb   0x5              	BANKSEL	_rs232_proto
002a8e   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	676; meter_logger.c	break;
002a90   d186     bra     0x2d9e           	BRA	_00461_DS_
                                           _00401_DS_:
                                           ;	.line	678; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002a92   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
002a94   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	679; meter_logger.c	rs232_proto.state = INIT_STATE;
002a96   6b23     clrf    0x23, 0x1        	CLRF	_rs232_proto, B
                                           ;	.line	680; meter_logger.c	T0CONbits.TMR0ON = 0;							// stop timer 0
002a98   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	683; meter_logger.c	break;
002a9a   d181     bra     0x2d9e           	BRA	_00461_DS_
                                           _00403_DS_:
                                           ;	.line	685; meter_logger.c	switch (rs232_proto.state) {
002a9c   c523     movff   0x523, 0         	MOVFF	_rs232_proto, r0x00
002a9e   f000
002aa0   5000     movf    0, 0, 0          	MOVF	r0x00, W
002aa2   0a04     xorlw   0x4              	XORLW	0x04
002aa4   e007     bz      0x2ab4           	BZ	_00404_DS_
002aa6   5000     movf    0, 0, 0          	MOVF	r0x00, W
002aa8   0a08     xorlw   0x8              	XORLW	0x08
002aaa   e025     bz      0x2af6           	BZ	_00410_DS_
002aac   5000     movf    0, 0, 0          	MOVF	r0x00, W
002aae   0a09     xorlw   0x9              	XORLW	0x09
002ab0   e026     bz      0x2afe           	BZ	_00411_DS_
002ab2   d175     bra     0x2d9e           	BRA	_00461_DS_
                                           _00404_DS_:
                                           ;	.line	687; meter_logger.c	rs232_proto.data_len++;
002ab4   c526     movff   0x526, 0         	MOVFF	(_rs232_proto + 3), r0x00
002ab6   f000
002ab8   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002aba   5000     movf    0, 0, 0          	MOVF	r0x00, W
002abc   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002abe   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	688; meter_logger.c	if (IR_PIN) {		
002ac0   a081     btfss   0x81, 0, 0       	BTFSS	_PORTBbits, 0
002ac2   d006     bra     0x2ad0           	BRA	_00406_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	690; meter_logger.c	rs232_proto.data >>= 1;
002ac4   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002ac6   0b7f     andlw   0x7f             	ANDLW	0x7f
002ac8   6e00     movwf   0, 0             	MOVWF	r0x00
002aca   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002acc   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
002ace   d00b     bra     0x2ae6           	BRA	_00407_DS_
                                           _00406_DS_:
002ad0   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	702; meter_logger.c	rs232_proto.data >>= 1;
002ad2   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002ad4   0b7f     andlw   0x7f             	ANDLW	0x7f
002ad6   6e00     movwf   0, 0             	MOVWF	r0x00
002ad8   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002ada   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	703; meter_logger.c	rs232_proto.data |= 0x80;
002adc   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
002ade   1125     iorwf   0x25, 0, 0x1     	IORWF	(_rs232_proto + 2), W, B
002ae0   6e00     movwf   0, 0             	MOVWF	r0x00
002ae2   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002ae4   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           _00407_DS_:
                                           ;	.line	723; meter_logger.c	if (rs232_proto.data_len >= 8) {
002ae6   0e08     movlw   0x8              	MOVLW	0x08
002ae8   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002aea   5d26     subwf   0x26, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002aec   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
002aee   d157     bra     0x2d9e           	BRA	_00461_DS_
                                           ;	.line	725; meter_logger.c	rs232_proto.state = STOP_BIT_WAIT;
002af0   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
002af2   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	727; meter_logger.c	break;
002af4   d154     bra     0x2d9e           	BRA	_00461_DS_
                                           _00410_DS_:
                                           ;	.line	729; meter_logger.c	rs232_proto.state = STOP_BIT2_WAIT;
002af6   0e09     movlw   0x9              	MOVLW	0x09
002af8   0105     movlb   0x5              	BANKSEL	_rs232_proto
002afa   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	730; meter_logger.c	break;
002afc   d150     bra     0x2d9e           	BRA	_00461_DS_
                                           _00411_DS_:
002afe   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	732; meter_logger.c	fifo_put(rs232_proto.data);
002b00   5125     movf    0x25, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
002b02   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002b04   ece0     call    0x43c0, 0        	CALL	_fifo_put
002b06   f021
002b08   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002b0a   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	733; meter_logger.c	rs232_proto.data = 0;
002b0c   6b25     clrf    0x25, 0x1        	CLRF	(_rs232_proto + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	734; meter_logger.c	rs232_proto.data_len = 0;
002b0e   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	735; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
002b10   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002b12   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	736; meter_logger.c	T0CONbits.TMR0ON = 0;
002b14   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	737; meter_logger.c	INTCONbits.INT0IF = 0;		// dont enter ext int now
002b16   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           ;	.line	738; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int again
002b18   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	741; meter_logger.c	break;
002b1a   d141     bra     0x2d9e           	BRA	_00461_DS_
                                           _00413_DS_:
                                           ;	.line	743; meter_logger.c	switch (rs232_proto.state) {
002b1c   c523     movff   0x523, 0         	MOVFF	_rs232_proto, r0x00
002b1e   f000
002b20   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b22   6e01     movwf   0x1, 0           	MOVWF	r0x01
002b24   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002b26   e00c     bz      0x2b40           	BZ	_00414_DS_
002b28   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b2a   0a03     xorlw   0x3              	XORLW	0x03
002b2c   e018     bz      0x2b5e           	BZ	_00417_DS_
002b2e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b30   0a06     xorlw   0x6              	XORLW	0x06
002b32   e101     bnz     0x2b36           	BNZ	_00757_DS_
002b34   d053     bra     0x2bdc           	BRA	_00421_DS_
                                           _00757_DS_:
002b36   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b38   0a0a     xorlw   0xa              	XORLW	0x0a
002b3a   e101     bnz     0x2b3e           	BNZ	_00759_DS_
002b3c   d054     bra     0x2be6           	BRA	_00422_DS_
                                           _00759_DS_:
002b3e   d12f     bra     0x2d9e           	BRA	_00461_DS_
                                           _00414_DS_:
002b40   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	745; meter_logger.c	if (rs232_proto.data_len == 7) {
002b42   5126     movf    0x26, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
002b44   0a07     xorlw   0x7              	XORLW	0x07
002b46   e001     bz      0x2b4a           	BZ	_00761_DS_
002b48   d12a     bra     0x2d9e           	BRA	_00461_DS_
                                           _00761_DS_:
                                           ;	.line	746; meter_logger.c	IR_LED_PIN = 1;		// inverted rs232 output on ir, start bit = ir light
002b4a   8281     bsf     0x81, 0x1, 0     	BSF	_PORTBbits, 1
                                           ;	.line	747; meter_logger.c	rs232_proto.parity = rs232_proto.data & 1;
002b4c   0e01     movlw   0x1              	MOVLW	0x01
002b4e   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
002b50   1525     andwf   0x25, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
002b52   6e00     movwf   0, 0             	MOVWF	r0x00
002b54   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002b56   6f27     movwf   0x27, 0x1        	MOVWF	(_rs232_proto + 4), B
                                           ;	.line	748; meter_logger.c	rs232_proto.state = START_BIT_SENT;
002b58   0e03     movlw   0x3              	MOVLW	0x03
                                           ; removed redundant BANKSEL
002b5a   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	750; meter_logger.c	break;
002b5c   d120     bra     0x2d9e           	BRA	_00461_DS_
                                           _00417_DS_:
                                           ;	.line	752; meter_logger.c	if (rs232_proto.data_len >= 1) {
002b5e   0e01     movlw   0x1              	MOVLW	0x01
002b60   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002b62   5d26     subwf   0x26, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002b64   e326     bnc     0x2bb2           	BNC	_00419_DS_
                                           ;	.line	753; meter_logger.c	IR_LED_PIN = (rs232_proto.data & 1) == 0;	// inverted rs232 output on ir
002b66   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002b68   1525     andwf   0x25, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
002b6a   6e00     movwf   0, 0             	MOVWF	r0x00
002b6c   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b6e   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
002b70   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
002b72   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002b74   6a00     clrf    0, 0             	CLRF	r0x00
002b76   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
002b78   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b7a   0b01     andlw   0x1              	ANDLW	0x01
002b7c   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
002b7e   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
002b80   5081     movf    0x81, 0, 0       	MOVF	_PORTBbits, W
002b82   0bfd     andlw   0xfd             	ANDLW	0xfd
002b84   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
002b86   6e81     movwf   0x81, 0          	MOVWF	_PORTBbits
                                           ; removed redundant BANKSEL
                                           ;	.line	754; meter_logger.c	rs232_proto.parity ^= ((rs232_proto.data >> 1) & 1);
002b88   5125     movf    0x25, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
002b8a   0b02     andlw   0x2              	ANDLW	0x02
002b8c   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
002b8e   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002b90   5127     movf    0x27, 0, 0x1     	MOVF	(_rs232_proto + 4), W, B
002b92   6e01     movwf   0x1, 0           	MOVWF	r0x01
002b94   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002b96   1a00     xorwf   0, 0x1, 0        	XORWF	r0x00, F
002b98   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002b9a   6f27     movwf   0x27, 0x1        	MOVWF	(_rs232_proto + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	755; meter_logger.c	rs232_proto.data = rs232_proto.data >> 1;
002b9c   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002b9e   0b7f     andlw   0x7f             	ANDLW	0x7f
002ba0   6e00     movwf   0, 0             	MOVWF	r0x00
002ba2   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002ba4   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	756; meter_logger.c	rs232_proto.data_len--;
002ba6   c526     movff   0x526, 0         	MOVFF	(_rs232_proto + 3), r0x00
002ba8   f000
002baa   0600     decf    0, 0x1, 0        	DECF	r0x00, F
002bac   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002bae   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
002bb0   d0f6     bra     0x2d9e           	BRA	_00461_DS_
                                           _00419_DS_:
                                           ;	.line	759; meter_logger.c	IR_LED_PIN = (rs232_proto.parity & 1) == 0;		// inverted rs232 output on ir					
002bb2   0e01     movlw   0x1              	MOVLW	0x01
002bb4   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 4)
002bb6   1527     andwf   0x27, 0, 0x1     	ANDWF	(_rs232_proto + 4), W, B
002bb8   6e00     movwf   0, 0             	MOVWF	r0x00
002bba   5000     movf    0, 0, 0          	MOVF	r0x00, W
002bbc   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
002bbe   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
002bc0   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002bc2   6a00     clrf    0, 0             	CLRF	r0x00
002bc4   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
002bc6   5000     movf    0, 0, 0          	MOVF	r0x00, W
002bc8   0b01     andlw   0x1              	ANDLW	0x01
002bca   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
002bcc   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
002bce   5081     movf    0x81, 0, 0       	MOVF	_PORTBbits, W
002bd0   0bfd     andlw   0xfd             	ANDLW	0xfd
002bd2   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
002bd4   6e81     movwf   0x81, 0          	MOVWF	_PORTBbits
                                           ;	.line	760; meter_logger.c	rs232_proto.state = PARITY_BIT_SENT;
002bd6   0e06     movlw   0x6              	MOVLW	0x06
                                           ; removed redundant BANKSEL
002bd8   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	762; meter_logger.c	break;
002bda   d0e1     bra     0x2d9e           	BRA	_00461_DS_
                                           _00421_DS_:
                                           ;	.line	764; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002bdc   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	765; meter_logger.c	rs232_proto.state = STOP_BIT_SENT;
002bde   0e0a     movlw   0xa              	MOVLW	0x0a
002be0   0105     movlb   0x5              	BANKSEL	_rs232_proto
002be2   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	766; meter_logger.c	break;
002be4   d0dc     bra     0x2d9e           	BRA	_00461_DS_
                                           _00422_DS_:
                                           ;	.line	768; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002be6   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
002be8   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	769; meter_logger.c	rs232_proto.state = INIT_STATE;
002bea   6b23     clrf    0x23, 0x1        	CLRF	_rs232_proto, B
                                           ;	.line	770; meter_logger.c	T0CONbits.TMR0ON = 0;							// stop timer 0
002bec   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	773; meter_logger.c	break;
002bee   d0d7     bra     0x2d9e           	BRA	_00461_DS_
                                           _00424_DS_:
                                           ;	.line	775; meter_logger.c	switch (rs232_proto.state) {
002bf0   c523     movff   0x523, 0         	MOVFF	_rs232_proto, r0x00
002bf2   f000
002bf4   5000     movf    0, 0, 0          	MOVF	r0x00, W
002bf6   0a04     xorlw   0x4              	XORLW	0x04
002bf8   e007     bz      0x2c08           	BZ	_00425_DS_
002bfa   5000     movf    0, 0, 0          	MOVF	r0x00, W
002bfc   0a07     xorlw   0x7              	XORLW	0x07
002bfe   e025     bz      0x2c4a           	BZ	_00431_DS_
002c00   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c02   0a08     xorlw   0x8              	XORLW	0x08
002c04   e026     bz      0x2c52           	BZ	_00432_DS_
002c06   d0cb     bra     0x2d9e           	BRA	_00461_DS_
                                           _00425_DS_:
                                           ;	.line	777; meter_logger.c	rs232_proto.data_len++;
002c08   c526     movff   0x526, 0         	MOVFF	(_rs232_proto + 3), r0x00
002c0a   f000
002c0c   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002c0e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c10   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002c12   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	778; meter_logger.c	if (IR_PIN) {
002c14   a081     btfss   0x81, 0, 0       	BTFSS	_PORTBbits, 0
002c16   d006     bra     0x2c24           	BRA	_00427_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	780; meter_logger.c	rs232_proto.data >>= 1;
002c18   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002c1a   0b7f     andlw   0x7f             	ANDLW	0x7f
002c1c   6e00     movwf   0, 0             	MOVWF	r0x00
002c1e   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002c20   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
002c22   d00b     bra     0x2c3a           	BRA	_00428_DS_
                                           _00427_DS_:
002c24   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	792; meter_logger.c	rs232_proto.data >>= 1;
002c26   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002c28   0b7f     andlw   0x7f             	ANDLW	0x7f
002c2a   6e00     movwf   0, 0             	MOVWF	r0x00
002c2c   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002c2e   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	793; meter_logger.c	rs232_proto.data |= 0x40;
002c30   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
002c32   1125     iorwf   0x25, 0, 0x1     	IORWF	(_rs232_proto + 2), W, B
002c34   6e00     movwf   0, 0             	MOVWF	r0x00
002c36   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002c38   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           _00428_DS_:
                                           ;	.line	813; meter_logger.c	if (rs232_proto.data_len >= 7) {
002c3a   0e07     movlw   0x7              	MOVLW	0x07
002c3c   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002c3e   5d26     subwf   0x26, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002c40   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
002c42   d0ad     bra     0x2d9e           	BRA	_00461_DS_
                                           ;	.line	815; meter_logger.c	rs232_proto.state = PARITY_BIT_WAIT;
002c44   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
002c46   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	817; meter_logger.c	break;
002c48   d0aa     bra     0x2d9e           	BRA	_00461_DS_
                                           _00431_DS_:
                                           ;	.line	819; meter_logger.c	rs232_proto.state = STOP_BIT_WAIT;
002c4a   0e08     movlw   0x8              	MOVLW	0x08
002c4c   0105     movlb   0x5              	BANKSEL	_rs232_proto
002c4e   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	820; meter_logger.c	break;
002c50   d0a6     bra     0x2d9e           	BRA	_00461_DS_
                                           _00432_DS_:
002c52   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	822; meter_logger.c	fifo_put(rs232_proto.data);
002c54   5125     movf    0x25, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
002c56   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002c58   ece0     call    0x43c0, 0        	CALL	_fifo_put
002c5a   f021
002c5c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002c5e   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	823; meter_logger.c	rs232_proto.data = 0;
002c60   6b25     clrf    0x25, 0x1        	CLRF	(_rs232_proto + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	824; meter_logger.c	rs232_proto.data_len = 0;
002c62   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	825; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
002c64   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002c66   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	826; meter_logger.c	T0CONbits.TMR0ON = 0;
002c68   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	827; meter_logger.c	INTCONbits.INT0IF = 0;		// dont enter ext int now
002c6a   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           ;	.line	828; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int again
002c6c   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	831; meter_logger.c	break;
002c6e   d097     bra     0x2d9e           	BRA	_00461_DS_
                                           _00434_DS_:
                                           ;	.line	833; meter_logger.c	switch (fsk_proto.state) {
002c70   c500     movff   0x500, 0         	MOVFF	_fsk_proto, r0x00
002c72   f000
002c74   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c76   0a04     xorlw   0x4              	XORLW	0x04
002c78   e004     bz      0x2c82           	BZ	_00435_DS_
002c7a   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c7c   0a08     xorlw   0x8              	XORLW	0x08
002c7e   e02e     bz      0x2cdc           	BZ	_00443_DS_
002c80   d08e     bra     0x2d9e           	BRA	_00461_DS_
                                           _00435_DS_:
                                           ;	.line	835; meter_logger.c	fsk_proto.data_len++;						
002c82   c50d     movff   0x50d, 0         	MOVFF	(_fsk_proto + 13), r0x00
002c84   f000
002c86   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002c88   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c8a   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
002c8c   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
                                           ;	.line	836; meter_logger.c	if (fsk_proto.data_len <= 8) {
002c8e   0e09     movlw   0x9              	MOVLW	0x09
                                           ; removed redundant BANKSEL
002c90   5d0d     subwf   0xd, 0, 0x1      	SUBWF	(_fsk_proto + 13), W, B
002c92   e220     bc      0x2cd4           	BC	_00441_DS_
                                           ;	.line	837; meter_logger.c	if ((fsk_proto.diff > 340) && (fsk_proto.diff < 476)) {
002c94   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002c96   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
002c98   e102     bnz     0x2c9e           	BNZ	_00780_DS_
002c9a   0e55     movlw   0x55             	MOVLW	0x55
                                           ; removed redundant BANKSEL
002c9c   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00780_DS_:
002c9e   e30e     bnc     0x2cbc           	BNC	_00437_DS_
002ca0   0e01     movlw   0x1              	MOVLW	0x01
002ca2   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 2)
002ca4   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
002ca6   e102     bnz     0x2cac           	BNZ	_00781_DS_
002ca8   0edc     movlw   0xdc             	MOVLW	0xdc
                                           ; removed redundant BANKSEL
002caa   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00781_DS_:
002cac   e207     bc      0x2cbc           	BC	_00437_DS_
002cae   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	840; meter_logger.c	fsk_proto.data >>= 1;
002cb0   410c     rrncf   0xc, 0, 0x1      	RRNCF	(_fsk_proto + 12), W, B
002cb2   0b7f     andlw   0x7f             	ANDLW	0x7f
002cb4   6e00     movwf   0, 0             	MOVWF	r0x00
002cb6   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002cb8   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
002cba   d071     bra     0x2d9e           	BRA	_00461_DS_
                                           _00437_DS_:
002cbc   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	845; meter_logger.c	fsk_proto.data >>= 1;
002cbe   410c     rrncf   0xc, 0, 0x1      	RRNCF	(_fsk_proto + 12), W, B
002cc0   0b7f     andlw   0x7f             	ANDLW	0x7f
002cc2   6e00     movwf   0, 0             	MOVWF	r0x00
002cc4   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002cc6   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
                                           ;	.line	846; meter_logger.c	fsk_proto.data |= 0x80;
002cc8   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
002cca   110c     iorwf   0xc, 0, 0x1      	IORWF	(_fsk_proto + 12), W, B
002ccc   6e00     movwf   0, 0             	MOVWF	r0x00
002cce   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002cd0   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
002cd2   d065     bra     0x2d9e           	BRA	_00461_DS_
                                           _00441_DS_:
                                           ;	.line	854; meter_logger.c	fsk_proto.state = STOP_BIT_WAIT;
002cd4   0e08     movlw   0x8              	MOVLW	0x08
002cd6   0105     movlb   0x5              	BANKSEL	_fsk_proto
002cd8   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	856; meter_logger.c	break;
002cda   d061     bra     0x2d9e           	BRA	_00461_DS_
                                           _00443_DS_:
002cdc   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	859; meter_logger.c	fifo_put(fsk_proto.data);
002cde   510c     movf    0xc, 0, 0x1      	MOVF	(_fsk_proto + 12), W, B
002ce0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002ce2   ece0     call    0x43c0, 0        	CALL	_fifo_put
002ce4   f021
002ce6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002ce8   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	860; meter_logger.c	fsk_proto.data = 0;
002cea   6b0c     clrf    0xc, 0x1         	CLRF	(_fsk_proto + 12), B
                                           ;	.line	861; meter_logger.c	fsk_proto.state = START_BIT_WAIT;
002cec   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002cee   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	863; meter_logger.c	INTCONbits.TMR0IE = 0;						
002cf0   9af2     bcf     0xf2, 0x5, 0     	BCF	_INTCONbits, 5
                                           ;	.line	866; meter_logger.c	break;
002cf2   d055     bra     0x2d9e           	BRA	_00461_DS_
                                           _00445_DS_:
                                           ;	.line	868; meter_logger.c	switch (fsk_proto.state) {
002cf4   c500     movff   0x500, 0         	MOVFF	_fsk_proto, r0x00
002cf6   f000
002cf8   5000     movf    0, 0, 0          	MOVF	r0x00, W
002cfa   6e01     movwf   0x1, 0           	MOVWF	r0x01
002cfc   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002cfe   e00f     bz      0x2d1e           	BZ	_00446_DS_
002d00   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d02   0a01     xorlw   0x1              	XORLW	0x01
002d04   e015     bz      0x2d30           	BZ	_00449_DS_
002d06   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d08   0a03     xorlw   0x3              	XORLW	0x03
002d0a   e019     bz      0x2d3e           	BZ	_00450_DS_
002d0c   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d0e   0a05     xorlw   0x5              	XORLW	0x05
002d10   e101     bnz     0x2d14           	BNZ	_00790_DS_
002d12   d039     bra     0x2d86           	BRA	_00458_DS_
                                           _00790_DS_:
002d14   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d16   0a0a     xorlw   0xa              	XORLW	0x0a
002d18   e101     bnz     0x2d1c           	BNZ	_00792_DS_
002d1a   d03c     bra     0x2d94           	BRA	_00459_DS_
                                           _00792_DS_:
002d1c   d040     bra     0x2d9e           	BRA	_00461_DS_
                                           _00446_DS_:
002d1e   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	871; meter_logger.c	if (fsk_proto.data_len == 8) {
002d20   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002d22   0a08     xorlw   0x8              	XORLW	0x08
002d24   e103     bnz     0x2d2c           	BNZ	_00448_DS_
                                           ;	.line	872; meter_logger.c	fsk_proto.state = IDLE;
002d26   0e01     movlw   0x1              	MOVLW	0x01
002d28   0105     movlb   0x5              	BANKSEL	_fsk_proto
002d2a   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           _00448_DS_:
                                           ;	.line	875; meter_logger.c	DEBUG_PIN = 0;
002d2c   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	877; meter_logger.c	break;
002d2e   d037     bra     0x2d9e           	BRA	_00461_DS_
                                           _00449_DS_:
                                           ;	.line	879; meter_logger.c	send_fsk_low();
002d30   ec62     call    0x1ac4, 0        	CALL	_send_fsk_low
002d32   f00d
                                           ;	.line	880; meter_logger.c	fsk_proto.state = START_BIT_SENT;
002d34   0e03     movlw   0x3              	MOVLW	0x03
002d36   0105     movlb   0x5              	BANKSEL	_fsk_proto
002d38   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	882; meter_logger.c	DEBUG_PIN = 1;
002d3a   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
                                           ;	.line	884; meter_logger.c	break;
002d3c   d030     bra     0x2d9e           	BRA	_00461_DS_
                                           _00450_DS_:
                                           ;	.line	886; meter_logger.c	if (fsk_proto.data_len--) {
002d3e   c50d     movff   0x50d, 0         	MOVFF	(_fsk_proto + 13), r0x00
002d40   f000
002d42   0400     decf    0, 0, 0          	DECF	r0x00, W
002d44   6e01     movwf   0x1, 0           	MOVWF	r0x01
002d46   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002d48   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
002d4a   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
002d4c   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d4e   e015     bz      0x2d7a           	BZ	_00455_DS_
                                           ;	.line	887; meter_logger.c	if (fsk_proto.data & (0x80 >> fsk_proto.data_len)) {
002d50   0e80     movlw   0x80             	MOVLW	0x80
002d52   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002d54   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002d56   e005     bz      0x2d62           	BZ	_00795_DS_
002d58   6ce8     negf    0xe8, 0          	NEGF	WREG
002d5a   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00796_DS_:
002d5c   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
002d5e   0f01     addlw   0x1              	ADDLW	0x01
002d60   e3fd     bnc     0x2d5c           	BNC	_00796_DS_
                                           _00795_DS_:
002d62   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
002d64   510c     movf    0xc, 0, 0x1      	MOVF	(_fsk_proto + 12), W, B
002d66   1600     andwf   0, 0x1, 0        	ANDWF	r0x00, F
002d68   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d6a   e004     bz      0x2d74           	BZ	_00452_DS_
                                           ;	.line	888; meter_logger.c	send_fsk_high();
002d6c   ec82     call    0xf04, 0         	CALL	_send_fsk_high
002d6e   f007
                                           ;	.line	890; meter_logger.c	DEBUG_PIN = 0;
002d70   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
002d72   d003     bra     0x2d7a           	BRA	_00455_DS_
                                           _00452_DS_:
                                           ;	.line	894; meter_logger.c	send_fsk_low();
002d74   ec62     call    0x1ac4, 0        	CALL	_send_fsk_low
002d76   f00d
                                           ;	.line	896; meter_logger.c	DEBUG_PIN = 1;
002d78   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
                                           _00455_DS_:
002d7a   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	900; meter_logger.c	if (fsk_proto.data_len == 0) {
002d7c   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002d7e   e10f     bnz     0x2d9e           	BNZ	_00461_DS_
                                           ;	.line	901; meter_logger.c	fsk_proto.state = DATA_SENT;
002d80   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
002d82   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	903; meter_logger.c	break;
002d84   d00c     bra     0x2d9e           	BRA	_00461_DS_
                                           _00458_DS_:
                                           ;	.line	905; meter_logger.c	send_fsk_high();
002d86   ec82     call    0xf04, 0         	CALL	_send_fsk_high
002d88   f007
                                           ;	.line	906; meter_logger.c	fsk_proto.state = STOP_BIT_SENT;
002d8a   0e0a     movlw   0xa              	MOVLW	0x0a
002d8c   0105     movlb   0x5              	BANKSEL	_fsk_proto
002d8e   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	908; meter_logger.c	DEBUG_PIN = 0;
002d90   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	910; meter_logger.c	break;
002d92   d005     bra     0x2d9e           	BRA	_00461_DS_
                                           _00459_DS_:
                                           ;	.line	912; meter_logger.c	send_fsk_high();
002d94   ec82     call    0xf04, 0         	CALL	_send_fsk_high
002d96   f007
002d98   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	913; meter_logger.c	fsk_proto.state = INIT_STATE;
002d9a   6b00     clrf    0, 0x1           	CLRF	_fsk_proto, B
                                           ;	.line	915; meter_logger.c	DEBUG_PIN = 0;
002d9c   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           _00461_DS_:
                                           ;	.line	922; meter_logger.c	INTCONbits.TMR0IF = 0;
002d9e   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           _00463_DS_:
                                           ;	.line	925; meter_logger.c	if (PIR2bits.CMIF && PIE2bits.CMIE) {
002da0   aca1     btfss   0xa1, 0x6, 0     	BTFSS	_PIR2bits, 6
002da2   d076     bra     0x2e90           	BRA	_00482_DS_
002da4   aca0     btfss   0xa0, 0x6, 0     	BTFSS	_PIE2bits, 6
002da6   d074     bra     0x2e90           	BRA	_00482_DS_
                                           ;	.line	927; meter_logger.c	if (CMCONbits.C1OUT) {		// rising edge
002da8   acb4     btfss   0xb4, 0x6, 0     	BTFSS	_CMCONbits, 6
002daa   d070     bra     0x2e8c           	BRA	_00477_DS_
                                           ;	.line	928; meter_logger.c	timer_0 = (unsigned int)(TMR0L) | ((unsigned int)(TMR0H) << 8);
002dac   cfd6     movff   0xfd6, 0         	MOVFF	_TMR0L, r0x00
002dae   f000
002db0   6a01     clrf    0x1, 0           	CLRF	r0x01
002db2   cfd7     movff   0xfd7, 0x2       	MOVFF	_TMR0H, r0x02
002db4   f002
002db6   6a03     clrf    0x3, 0           	CLRF	r0x03
002db8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002dba   6e05     movwf   0x5, 0           	MOVWF	r0x05
002dbc   6a04     clrf    0x4, 0           	CLRF	r0x04
002dbe   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002dc0   1000     iorwf   0, 0, 0          	IORWF	r0x00, W
002dc2   0105     movlb   0x5              	BANKSEL	_timer_0
002dc4   6f46     movwf   0x46, 0x1        	MOVWF	_timer_0, B
002dc6   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002dc8   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
                                           ; removed redundant BANKSEL
002dca   6f47     movwf   0x47, 0x1        	MOVWF	(_timer_0 + 1), B
                                           ;	.line	933; meter_logger.c	DEBUG_PIN = 1;
002dcc   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
002dce   0105     movlb   0x5              	BANKSEL	_last_timer_0
                                           ;	.line	935; meter_logger.c	fsk_proto.diff = timer_0 - last_timer_0;
002dd0   514a     movf    0x4a, 0, 0x1     	MOVF	_last_timer_0, W, B
002dd2   0105     movlb   0x5              	BANKSEL	_timer_0
002dd4   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
002dd6   6e00     movwf   0, 0             	MOVWF	r0x00
002dd8   0105     movlb   0x5              	BANKSEL	(_last_timer_0 + 1)
002dda   514b     movf    0x4b, 0, 0x1     	MOVF	(_last_timer_0 + 1), W, B
002ddc   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002dde   5947     subwfb  0x47, 0, 0x1     	SUBWFB	(_timer_0 + 1), W, B
002de0   6e01     movwf   0x1, 0           	MOVWF	r0x01
002de2   5000     movf    0, 0, 0          	MOVF	r0x00, W
002de4   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
002de6   6f01     movwf   0x1, 0x1         	MOVWF	(_fsk_proto + 1), B
002de8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002dea   6f02     movwf   0x2, 0x1         	MOVWF	(_fsk_proto + 2), B
                                           ;	.line	936; meter_logger.c	last_timer_0 = timer_0;
002dec   c546     movff   0x546, 0x54a     	MOVFF	_timer_0, _last_timer_0
002dee   f54a
002df0   c547     movff   0x547, 0x54b     	MOVFF	(_timer_0 + 1), (_last_timer_0 + 1)
002df2   f54b
                                           ;	.line	938; meter_logger.c	if ((fsk_proto.diff > 340) && (fsk_proto.diff < 476)) {
002df4   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002df6   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
002df8   e102     bnz     0x2dfe           	BNZ	_00798_DS_
002dfa   0e55     movlw   0x55             	MOVLW	0x55
                                           ; removed redundant BANKSEL
002dfc   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00798_DS_:
002dfe   e330     bnc     0x2e60           	BNC	_00473_DS_
002e00   0e01     movlw   0x1              	MOVLW	0x01
002e02   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 2)
002e04   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
002e06   e102     bnz     0x2e0c           	BNZ	_00799_DS_
002e08   0edc     movlw   0xdc             	MOVLW	0xdc
                                           ; removed redundant BANKSEL
002e0a   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00799_DS_:
002e0c   e229     bc      0x2e60           	BC	_00473_DS_
002e0e   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
                                           ;	.line	939; meter_logger.c	fsk_proto.low_count += fsk_proto.diff;
002e10   5101     movf    0x1, 0, 0x1      	MOVF	(_fsk_proto + 1), W, B
                                           ; removed redundant BANKSEL
002e12   2505     addwf   0x5, 0, 0x1      	ADDWF	(_fsk_proto + 5), W, B
002e14   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002e16   5102     movf    0x2, 0, 0x1      	MOVF	(_fsk_proto + 2), W, B
                                           ; removed redundant BANKSEL
002e18   2106     addwfc  0x6, 0, 0x1      	ADDWFC	(_fsk_proto + 6), W, B
002e1a   6e01     movwf   0x1, 0           	MOVWF	r0x01
002e1c   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002e1e   6f05     movwf   0x5, 0x1         	MOVWF	(_fsk_proto + 5), B
002e20   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002e22   6f06     movwf   0x6, 0x1         	MOVWF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	940; meter_logger.c	if (fsk_proto.state == START_BIT_WAIT) {
002e24   5100     movf    0, 0, 0x1        	MOVF	_fsk_proto, W, B
002e26   0a02     xorlw   0x2              	XORLW	0x02
002e28   e132     bnz     0x2e8e           	BNZ	_00478_DS_
                                           ;	.line	941; meter_logger.c	if (fsk_proto.low_count >= 800) {								// start bit received
002e2a   0e03     movlw   0x3              	MOVLW	0x03
002e2c   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 6)
002e2e   5d06     subwf   0x6, 0, 0x1      	SUBWF	(_fsk_proto + 6), W, B
002e30   e102     bnz     0x2e36           	BNZ	_00802_DS_
002e32   0e20     movlw   0x20             	MOVLW	0x20
                                           ; removed redundant BANKSEL
002e34   5d05     subwf   0x5, 0, 0x1      	SUBWF	(_fsk_proto + 5), W, B
                                           _00802_DS_:
002e36   e32b     bnc     0x2e8e           	BNC	_00478_DS_
002e38   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	943; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
002e3a   5149     movf    0x49, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
002e3c   6e00     movwf   0, 0             	MOVWF	r0x00
002e3e   6a01     clrf    0x1, 0           	CLRF	r0x01
002e40   5000     movf    0, 0, 0          	MOVF	r0x00, W
002e42   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	944; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
002e44   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002e46   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
002e48   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 5)
                                           ;	.line	945; meter_logger.c	fsk_proto.low_count = 0;
002e4a   6b05     clrf    0x5, 0x1         	CLRF	(_fsk_proto + 5), B
                                           ; removed redundant BANKSEL
002e4c   6b06     clrf    0x6, 0x1         	CLRF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	946; meter_logger.c	fsk_proto.high_count = 0;
002e4e   6b07     clrf    0x7, 0x1         	CLRF	(_fsk_proto + 7), B
                                           ; removed redundant BANKSEL
002e50   6b08     clrf    0x8, 0x1         	CLRF	(_fsk_proto + 8), B
                                           ; removed redundant BANKSEL
                                           ;	.line	948; meter_logger.c	fsk_proto.data_len = 0;
002e52   6b0d     clrf    0xd, 0x1         	CLRF	(_fsk_proto + 13), B
                                           ; removed redundant BANKSEL
                                           ;	.line	949; meter_logger.c	fsk_proto.data = 0;
002e54   6b0c     clrf    0xc, 0x1         	CLRF	(_fsk_proto + 12), B
                                           ;	.line	950; meter_logger.c	fsk_proto.state = DATA_WAIT;
002e56   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
002e58   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	951; meter_logger.c	INTCONbits.TMR0IF = 0;		// clear flag so it dont enter isr now
002e5a   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	952; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
002e5c   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
002e5e   d017     bra     0x2e8e           	BRA	_00478_DS_
                                           _00473_DS_:
002e60   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	958; meter_logger.c	if (fsk_proto.state == START_BIT_WAIT) {
002e62   5100     movf    0, 0, 0x1        	MOVF	_fsk_proto, W, B
002e64   0a02     xorlw   0x2              	XORLW	0x02
002e66   e106     bnz     0x2e74           	BNZ	_00470_DS_
                                           _00804_DS_:
002e68   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 5)
                                           ;	.line	959; meter_logger.c	fsk_proto.low_count = 0;
002e6a   6b05     clrf    0x5, 0x1         	CLRF	(_fsk_proto + 5), B
                                           ; removed redundant BANKSEL
002e6c   6b06     clrf    0x6, 0x1         	CLRF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	960; meter_logger.c	fsk_proto.high_count = 0;
002e6e   6b07     clrf    0x7, 0x1         	CLRF	(_fsk_proto + 7), B
                                           ; removed redundant BANKSEL
002e70   6b08     clrf    0x8, 0x1         	CLRF	(_fsk_proto + 8), B
002e72   d00d     bra     0x2e8e           	BRA	_00478_DS_
                                           _00470_DS_:
002e74   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
                                           ;	.line	963; meter_logger.c	fsk_proto.high_count += fsk_proto.diff;
002e76   5101     movf    0x1, 0, 0x1      	MOVF	(_fsk_proto + 1), W, B
                                           ; removed redundant BANKSEL
002e78   2507     addwf   0x7, 0, 0x1      	ADDWF	(_fsk_proto + 7), W, B
002e7a   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002e7c   5102     movf    0x2, 0, 0x1      	MOVF	(_fsk_proto + 2), W, B
                                           ; removed redundant BANKSEL
002e7e   2108     addwfc  0x8, 0, 0x1      	ADDWFC	(_fsk_proto + 8), W, B
002e80   6e01     movwf   0x1, 0           	MOVWF	r0x01
002e82   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002e84   6f07     movwf   0x7, 0x1         	MOVWF	(_fsk_proto + 7), B
002e86   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002e88   6f08     movwf   0x8, 0x1         	MOVWF	(_fsk_proto + 8), B
002e8a   d001     bra     0x2e8e           	BRA	_00478_DS_
                                           _00477_DS_:
                                           ;	.line	969; meter_logger.c	DEBUG_PIN = 0;
002e8c   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           _00478_DS_:
                                           ;	.line	973; meter_logger.c	PIR2bits.CMIF = 0;
002e8e   9ca1     bcf     0xa1, 0x6, 0     	BCF	_PIR2bits, 6
                                           _00482_DS_:
002e90   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002e92   f005
002e94   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002e96   f004
002e98   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002e9a   f003
002e9c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002e9e   f002
002ea0   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002ea2   f001
002ea4   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002ea6   f000
002ea8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002eaa   ffd9
002eac   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
002eae   fffb
002eb0   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
002eb2   fffa
002eb4   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
002eb6   ffea
002eb8   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
002eba   ffe9
002ebc   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
002ebe   fff4
002ec0   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
002ec2   fff3
002ec4   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002ec6   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
002ec8   ffe0
002eca   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
002ecc   ffd8
002ece   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           __str_0:
002ed0   7250     btg     0x50, 0x1, 0     	DB	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x3a, 0x20, 0x70
002ed2   636f     cpfseq  0x6f, 0x1        
002ed4   7365     btg     0x65, 0x1, 0x1   
002ed6   6f73     movwf   0x73, 0x1        
002ed8   3a72     swapf   0x72, 0x1, 0     
002eda   7020     btg     0x20, 0, 0       
002edc   6369     cpfseq  0x69, 0x1        	DB	0x69, 0x63, 0x31, 0x38, 0x66, 0x32, 0x35, 0x35, 0x30, 0x0a, 0x0d, 0x00
002ede   3831     swapf   0x31, 0, 0       
002ee0   3266     rrcf    0x66, 0x1, 0     
002ee2   3535     rlcf    0x35, 0, 0x1     
002ee4   0a30     xorlw   0x30             
002ee6   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           __str_1:
002ee8   7250     btg     0x50, 0x1, 0     	DB	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x3a, 0x20, 0x70
002eea   636f     cpfseq  0x6f, 0x1        
002eec   7365     btg     0x65, 0x1, 0x1   
002eee   6f73     movwf   0x73, 0x1        
002ef0   3a72     swapf   0x72, 0x1, 0     
002ef2   7020     btg     0x20, 0, 0       
002ef4   6369     cpfseq  0x69, 0x1        	DB	0x69, 0x63, 0x31, 0x38, 0x66, 0x32, 0x35, 0x35, 0x33, 0x0a, 0x0d, 0x00
002ef6   3831     swapf   0x31, 0, 0       
002ef8   3266     rrcf    0x66, 0x1, 0     
002efa   3535     rlcf    0x35, 0, 0x1     
002efc   0a33     xorlw   0x33             
002efe   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           __str_2:
002f00   7250     btg     0x50, 0x1, 0     	DB	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x3a, 0x20, 0x75
002f02   636f     cpfseq  0x6f, 0x1        
002f04   7365     btg     0x65, 0x1, 0x1   
002f06   6f73     movwf   0x73, 0x1        
002f08   3a72     swapf   0x72, 0x1, 0     
002f0a   7520     btg     0x20, 0x2, 0x1   
002f0c   736e     btg     0x6e, 0x1, 0x1   	DB	0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x2c, 0x20
002f0e   7075     btg     0x75, 0, 0       
002f10   6f70     movwf   0x70, 0x1        
002f12   7472     btg     0x72, 0x2, 0     
002f14   6465     cpfsgt  0x65, 0          
002f16   202c     addwfc  0x2c, 0, 0       
002f18   6564     cpfsgt  0x64, 0x1        	DB	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x69, 0x64, 0x3a, 0x20, 0x30
002f1a   6976     setf    0x76, 0x1        
002f1c   6563     cpfsgt  0x63, 0x1        
002f1e   6920     setf    0x20, 0x1        
002f20   3a64     swapf   0x64, 0x1, 0     
002f22   3020     rrcf    0x20, 0, 0       
002f24   2578     addwf   0x78, 0, 0x1     	DB	0x78, 0x25, 0x30, 0x34, 0x78, 0x0a, 0x0d, 0x00
002f26   3430     rlcf    0x30, 0, 0       
002f28   0a78     xorlw   0x78             
002f2a   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           __str_3:
002f2c   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x70, 0x72, 0x69, 0x6e
002f2e   7270     btg     0x70, 0x1, 0     
002f30   7365     btg     0x65, 0x1, 0x1   
002f32   2073     addwfc  0x73, 0, 0       
002f34   7270     btg     0x70, 0x1, 0     
002f36   6e69     movwf   0x69, 0          
002f38   2074     addwfc  0x74, 0, 0       	DB	0x74, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x0a, 0x0d
002f3a   6e6f     movwf   0x6f, 0          
002f3c   7420     btg     0x20, 0x2, 0     
002f3e   7365     btg     0x65, 0x1, 0x1   
002f40   6f74     movwf   0x74, 0x1        
002f42   0d0a     mullw   0xa              
002f44   0000     nop                      	DB	0x00
                                           ; ; Starting pCode block
                                           __str_4:
002f46   2d3c     decfsz  0x3c, 0, 0x1     	DB	0x3c, 0x2d, 0x20, 0x00
002f48   0020     dw      0x20             
                                           ; ; Starting pCode block
                                           __str_5:
002f4a   6425     cpfsgt  0x25, 0          	DB	0x25, 0x64, 0x20, 0x00
002f4c   0020     dw      0x20             
                                           ; ; Starting pCode block
                                           __str_6:
002f4e   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x00
002f50   0000     nop                      
                                           ; ; Starting pCode block
                                           __str_7:
002f52   3e2d     incfsz  0x2d, 0x1, 0     	DB	0x2d, 0x3e, 0x20, 0x00
002f54   0020     dw      0x20             
                                           ; ; Starting pCode block
                                           __str_8:
002f56   6142     cpfslt  0x42, 0x1        	DB	0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x3a, 0x20, 0x25, 0x64, 0x6d
002f58   7474     btg     0x74, 0x2, 0     
002f5a   7265     btg     0x65, 0x1, 0     
002f5c   3a79     swapf   0x79, 0x1, 0     
002f5e   2520     addwf   0x20, 0, 0x1     
002f60   6d64     negf    0x64, 0x1        
002f62   0a56     xorlw   0x56             	DB	0x56, 0x0a, 0x0d, 0x00
002f64   000d     tblwt   *+               
                                           
                                           
                                           ; Statistics:
                                           ; code size:	16186 (0x3f3a) bytes (12.35%)
                                           ;           	 8093 (0x1f9d) words
                                           ; udata size:	 1198 (0x04ae) bytes (66.85%)
                                           ; access size:	   14 (0x000e) bytes
                                           
                                           
                                           	end
