gplink-1.2.0 #980 (Oct 25 2013)
Copyright (c) 1998-2013 gputils project
Listing File Generated: 6-20-2014  19:42:37
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.3.0 #8604 (Oct 27 2013) (Mac OS X x86_64)
                                           ; This file was generated Fri Jun 20 19:42:37 2014
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f2550
                                           	radix	dec
                                           	CONFIG	PLLDIV=2
                                           	CONFIG	CPUDIV=OSC1_PLL2
                                           	CONFIG	USBDIV=1
                                           	CONFIG	FOSC=INTOSC_XT
                                           	CONFIG	FCMEN=OFF
                                           	CONFIG	IESO=OFF
                                           	CONFIG	PWRT=OFF
                                           	CONFIG	BOR=OFF
                                           	CONFIG	BORV=3
                                           	CONFIG	VREGEN=OFF
                                           	CONFIG	WDT=OFF
                                           	CONFIG	WDTPS=32768
                                           	CONFIG	CCP2MX=ON
                                           	CONFIG	PBADEN=OFF
                                           	CONFIG	LPT1OSC=OFF
                                           	CONFIG	MCLRE=ON
                                           	CONFIG	STVREN=ON
                                           	CONFIG	LVP=ON
                                           	CONFIG	XINST=OFF
                                           	CONFIG	CP0=OFF
                                           	CONFIG	CP1=OFF
                                           	CONFIG	CP2=OFF
                                           	CONFIG	CP3=OFF
                                           	CONFIG	CPB=OFF
                                           	CONFIG	CPD=OFF
                                           	CONFIG	WRT0=OFF
                                           	CONFIG	WRT1=OFF
                                           	CONFIG	WRT2=OFF
                                           	CONFIG	WRT3=OFF
                                           	CONFIG	WRTC=OFF
                                           	CONFIG	WRTB=OFF
                                           	CONFIG	WRTD=OFF
                                           	CONFIG	EBTR0=OFF
                                           	CONFIG	EBTR1=OFF
                                           	CONFIG	EBTR2=OFF
                                           	CONFIG	EBTR3=OFF
                                           	CONFIG	EBTRB=OFF
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_c
                                           	global	_sleep_ms
                                           	global	_init_system
                                           	global	_get_dev_id
                                           	global	_my_usart_open
                                           	global	_reverse
                                           	global	_testo_valid_err_corr
                                           	global	_testo_ir_enable
                                           	global	_testo_ir_disable
                                           	global	_rs232_8n2_tx_enable
                                           	global	_rs232_8n2_tx_disable
                                           	global	_rs232_8n2_rx_enable
                                           	global	_rs232_8n2_rx_disable
                                           	global	_rs232_8n2_tx_byte
                                           	global	_rs232_7e1_tx_enable
                                           	global	_rs232_7e1_tx_disable
                                           	global	_rs232_7e1_rx_enable
                                           	global	_rs232_7e1_rx_disable
                                           	global	_rs232_7e1_tx_byte
                                           	global	_fsk_tx_enable
                                           	global	_fsk_tx_disable
                                           	global	_fsk_rx_enable
                                           	global	_fsk_rx_disable
                                           	global	_send_fsk_high
                                           	global	_send_fsk_low
                                           	global	_fsk_tx_byte
                                           	global	_fifo_in_use
                                           	global	_fifo_put
                                           	global	_fifo_get
                                           	global	_fifo_snoop
                                           	global	_get_battery_level
                                           	global	_flash_led
                                           	global	__debug
                                           	global	__debug2
                                           	global	_timer_0
                                           	global	_last_timer_0
                                           	global	_timer_1_ms
                                           	global	_timer0_reload
                                           	global	_debug_buffer
                                           	global	_fifo_head
                                           	global	_fifo_tail
                                           	global	_fifo_buffer_0
                                           	global	_fifo_buffer_1
                                           	global	_fifo_buffer_2
                                           	global	_fifo_buffer_3
                                           	global	_codec_type
                                           	global	_led_flash
                                           	global	_testo_ir_proto
                                           	global	_rs232_proto
                                           	global	_fsk_proto
                                           	global	_main
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrput1
                                           	extern	_UFRMLbits
                                           	extern	_UFRMHbits
                                           	extern	_UIRbits
                                           	extern	_UIEbits
                                           	extern	_UEIRbits
                                           	extern	_UEIEbits
                                           	extern	_USTATbits
                                           	extern	_UCONbits
                                           	extern	_UADDRbits
                                           	extern	_UCFGbits
                                           	extern	_UEP0bits
                                           	extern	_UEP1bits
                                           	extern	_UEP2bits
                                           	extern	_UEP3bits
                                           	extern	_UEP4bits
                                           	extern	_UEP5bits
                                           	extern	_UEP6bits
                                           	extern	_UEP7bits
                                           	extern	_UEP8bits
                                           	extern	_UEP9bits
                                           	extern	_UEP10bits
                                           	extern	_UEP11bits
                                           	extern	_UEP12bits
                                           	extern	_UEP13bits
                                           	extern	_UEP14bits
                                           	extern	_UEP15bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_EECON1bits
                                           	extern	_RCSTAbits
                                           	extern	_TXSTAbits
                                           	extern	_T3CONbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_CCP1ASbits
                                           	extern	_ECCP1ASbits
                                           	extern	_CCP1DELbits
                                           	extern	_ECCP1DELbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCTLbits
                                           	extern	_CCP2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_UFRM
                                           	extern	_UFRML
                                           	extern	_UFRMH
                                           	extern	_UIR
                                           	extern	_UIE
                                           	extern	_UEIR
                                           	extern	_UEIE
                                           	extern	_USTAT
                                           	extern	_UCON
                                           	extern	_UADDR
                                           	extern	_UCFG
                                           	extern	_UEP0
                                           	extern	_UEP1
                                           	extern	_UEP2
                                           	extern	_UEP3
                                           	extern	_UEP4
                                           	extern	_UEP5
                                           	extern	_UEP6
                                           	extern	_UEP7
                                           	extern	_UEP8
                                           	extern	_UEP9
                                           	extern	_UEP10
                                           	extern	_UEP11
                                           	extern	_UEP12
                                           	extern	_UEP13
                                           	extern	_UEP14
                                           	extern	_UEP15
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_OSCTUNE
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_RCSTA
                                           	extern	_TXSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_CCP1AS
                                           	extern	_ECCP1AS
                                           	extern	_CCP1DEL
                                           	extern	_ECCP1DEL
                                           	extern	_BAUDCON
                                           	extern	_BAUDCTL
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_sprintf
                                           	extern	_usart_drdy
                                           	extern	_usart_getc
                                           	extern	_usart_putc
                                           	extern	_usart_puts
                                           	extern	_adc_open
                                           	extern	_adc_close
                                           	extern	_adc_conv
                                           	extern	_adc_busy
                                           	extern	_adc_read
                                           	extern	_adc_setchannel
                                           	extern	__mullong
                                           	extern	__divulong
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           r0x0d	res	1
                                           
                                           udata_meter_logger_0	udata
                                           _c	res	1
                                           
                                           udata_meter_logger_1	udata
                                           _timer_1_ms	res	2
                                           
                                           udata_meter_logger_2	udata
                                           _fifo_head	res	2
                                           
                                           udata_meter_logger_3	udata
                                           _fifo_tail	res	2
                                           
                                           udata_meter_logger_4	udata
                                           _debug_buffer	res	128
                                           
                                           udata_meter_logger_5	udata
                                           _main_cmd_1_90	res	1
                                           
                                           udata_meter_logger_6	udata
                                           _main_sub_cmd_1_90	res	1
                                           
                                           udata_meter_logger_7	udata
                                           _timer_0	res	2
                                           
                                           udata_meter_logger_8	udata
                                           _timer0_reload	res	2
                                           
                                           udata_meter_logger_9	udata
                                           _testo_ir_proto	res	6
                                           
                                           udata_meter_logger_10	udata
                                           _rs232_proto	res	6
                                           
                                           udata_meter_logger_11	udata
                                           _fsk_proto	res	16
                                           
                                           udata_meter_logger_12	udata
                                           _last_timer_0	res	2
                                           
                                           udata_meter_logger_13	udata
                                           _codec_type	res	1
                                           
                                           udata_meter_logger_14	udata
                                           _led_flash	res	2
                                           
                                           udata_meter_logger_15	udata
                                           _fifo_buffer_0	res	256
                                           
                                           udata_meter_logger_16	udata
                                           _fifo_buffer_1	res	256
                                           
                                           udata_meter_logger_17	udata
                                           _fifo_buffer_2	res	256
                                           
                                           udata_meter_logger_18	udata
                                           _fifo_buffer_3	res	256
                                           
                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_meter_logger_ivec_0x1_isr_high_prio	code	0X000008
                                           ivec_0x1_isr_high_prio:
000008   efe9     goto    0x25d2           	GOTO	_isr_high_prio
00000a   f012
                                           
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_meter_logger_ivec_0x2_isr_low_prio	code	0X000018
                                           ivec_0x2_isr_low_prio:
000018   ef1b     goto    0x4a36           	GOTO	_isr_low_prio
00001a   f025
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_meter_logger__main	code
                                           _main:
                                           ;	.line	120; meter_logger.c	OSCCONbits.SCS = 0x10;
00001c   50d3     movf    0xd3, 0, 0       	MOVF	_OSCCONbits, W
00001e   0bfc     andlw   0xfc             	ANDLW	0xfc
000020   6ed3     movwf   0xd3, 0          	MOVWF	_OSCCONbits
                                           ;	.line	122; meter_logger.c	OSCCONbits.IRCF = 0x7;	// 8 MHz
000022   50d3     movf    0xd3, 0, 0       	MOVF	_OSCCONbits, W
000024   0b8f     andlw   0x8f             	ANDLW	0x8f
000026   0970     iorlw   0x70             	IORLW	0x70
000028   6ed3     movwf   0xd3, 0          	MOVWF	_OSCCONbits
00002a   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	125; meter_logger.c	timer_1_ms = 0;
00002c   6b40     clrf    0x40, 0x1        	CLRF	_timer_1_ms, B
                                           ; removed redundant BANKSEL
00002e   6b41     clrf    0x41, 0x1        	CLRF	(_timer_1_ms + 1), B
000030   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	127; meter_logger.c	fifo_head = 0;
000032   6b42     clrf    0x42, 0x1        	CLRF	_fifo_head, B
                                           ; removed redundant BANKSEL
000034   6b43     clrf    0x43, 0x1        	CLRF	(_fifo_head + 1), B
000036   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	128; meter_logger.c	fifo_tail = 0;
000038   6b44     clrf    0x44, 0x1        	CLRF	_fifo_tail, B
                                           ; removed redundant BANKSEL
00003a   6b45     clrf    0x45, 0x1        	CLRF	(_fifo_tail + 1), B
                                           ;	.line	130; meter_logger.c	init_system();	
00003c   ecf7     call    0x4dee, 0        	CALL	_init_system
00003e   f026
                                           ;	.line	131; meter_logger.c	sleep_ms(100);
000040   0e00     movlw   0                	MOVLW	0x00
000042   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000044   0e64     movlw   0x64             	MOVLW	0x64
000046   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000048   ec7d     call    0x4afa, 0        	CALL	_sleep_ms
00004a   f025
00004c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00004e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	138; meter_logger.c	get_battery_level();
000050   ec9d     call    0x373a, 0        	CALL	_get_battery_level
000052   f01b
                                           ;	.line	141; meter_logger.c	dev_id = get_dev_id();
000054   ec90     call    0x4d20, 0        	CALL	_get_dev_id
000056   f026
000058   6e00     movwf   0, 0             	MOVWF	r0x00
00005a   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00005c   f001
                                           ;	.line	143; meter_logger.c	if (dev_id == 0x1240) {
00005e   5000     movf    0, 0, 0          	MOVF	r0x00, W
000060   0a40     xorlw   0x40             	XORLW	0x40
000062   e103     bnz     0x6a             	BNZ	_00325_DS_
000064   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000066   0a12     xorlw   0x12             	XORLW	0x12
000068   e001     bz      0x6c             	BZ	_00326_DS_
                                           _00325_DS_:
00006a   d01d     bra     0xa6             	BRA	_00109_DS_
                                           _00326_DS_:
                                           ;	.line	144; meter_logger.c	sprintf(debug_buffer, "Processor: pic18f2550\n\r");
00006c   0e00     movlw   0                	MOVLW	UPPER(__str_0)
00006e   6e04     movwf   0x4, 0           	MOVWF	r0x04
000070   0e2e     movlw   0x2e             	MOVLW	HIGH(__str_0)
000072   6e03     movwf   0x3, 0           	MOVWF	r0x03
000074   0e98     movlw   0x98             	MOVLW	LOW(__str_0)
000076   6e02     movwf   0x2, 0           	MOVWF	r0x02
000078   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00007a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00007c   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00007e   6e05     movwf   0x5, 0           	MOVWF	r0x05
000080   0e80     movlw   0x80             	MOVLW	0x80
000082   6e07     movwf   0x7, 0           	MOVWF	r0x07
000084   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000086   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000088   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00008a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00008c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00008e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000090   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000092   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000094   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000096   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000098   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00009a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00009c   ecdf     call    0x45be, 0        	CALL	_sprintf
00009e   f022
0000a0   0e06     movlw   0x6              	MOVLW	0x06
0000a2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0000a4   d044     bra     0x12e            	BRA	_00110_DS_
                                           _00109_DS_:
                                           ;	.line	146; meter_logger.c	else if (dev_id == 0x2a40) {
0000a6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0000a8   0a40     xorlw   0x40             	XORLW	0x40
0000aa   e103     bnz     0xb2             	BNZ	_00327_DS_
0000ac   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0000ae   0a2a     xorlw   0x2a             	XORLW	0x2a
0000b0   e001     bz      0xb4             	BZ	_00328_DS_
                                           _00327_DS_:
0000b2   d01d     bra     0xee             	BRA	_00106_DS_
                                           _00328_DS_:
                                           ;	.line	147; meter_logger.c	sprintf(debug_buffer, "Processor: pic18f2553\n\r");
0000b4   0e00     movlw   0                	MOVLW	UPPER(__str_1)
0000b6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0000b8   0e2e     movlw   0x2e             	MOVLW	HIGH(__str_1)
0000ba   6e03     movwf   0x3, 0           	MOVWF	r0x03
0000bc   0eb0     movlw   0xb0             	MOVLW	LOW(__str_1)
0000be   6e02     movwf   0x2, 0           	MOVWF	r0x02
0000c0   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0000c2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0000c4   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0000c6   6e05     movwf   0x5, 0           	MOVWF	r0x05
0000c8   0e80     movlw   0x80             	MOVLW	0x80
0000ca   6e07     movwf   0x7, 0           	MOVWF	r0x07
0000cc   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0000ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000d0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0000d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000d4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0000d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000d8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0000da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000dc   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0000de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000e0   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0000e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000e4   ecdf     call    0x45be, 0        	CALL	_sprintf
0000e6   f022
0000e8   0e06     movlw   0x6              	MOVLW	0x06
0000ea   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0000ec   d020     bra     0x12e            	BRA	_00110_DS_
                                           _00106_DS_:
                                           ;	.line	150; meter_logger.c	sprintf(debug_buffer, "Processor: unsupported, device id: 0x%04x\n\r", dev_id);
0000ee   0e00     movlw   0                	MOVLW	UPPER(__str_2)
0000f0   6e04     movwf   0x4, 0           	MOVWF	r0x04
0000f2   0e2e     movlw   0x2e             	MOVLW	HIGH(__str_2)
0000f4   6e03     movwf   0x3, 0           	MOVWF	r0x03
0000f6   0ec8     movlw   0xc8             	MOVLW	LOW(__str_2)
0000f8   6e02     movwf   0x2, 0           	MOVWF	r0x02
0000fa   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0000fc   6e06     movwf   0x6, 0           	MOVWF	r0x06
0000fe   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000100   6e05     movwf   0x5, 0           	MOVWF	r0x05
000102   0e80     movlw   0x80             	MOVLW	0x80
000104   6e07     movwf   0x7, 0           	MOVWF	r0x07
000106   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000108   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00010a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00010c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00010e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000110   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000112   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000114   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000116   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000118   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00011a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00011c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00011e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000120   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000122   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000124   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000126   ecdf     call    0x45be, 0        	CALL	_sprintf
000128   f022
00012a   0e08     movlw   0x8              	MOVLW	0x08
00012c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _00110_DS_:
                                           ;	.line	152; meter_logger.c	usart_puts(debug_buffer);
00012e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000130   6e01     movwf   0x1, 0           	MOVWF	r0x01
000132   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000134   6e00     movwf   0, 0             	MOVWF	r0x00
000136   0e80     movlw   0x80             	MOVLW	0x80
000138   6e02     movwf   0x2, 0           	MOVWF	r0x02
00013a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00013c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00013e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000140   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000142   5000     movf    0, 0, 0          	MOVF	r0x00, W
000144   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000146   ec54     call    0x4ca8, 0        	CALL	_usart_puts
000148   f026
00014a   0e03     movlw   0x3              	MOVLW	0x03
00014c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	155; meter_logger.c	fsk_rx_enable();
00014e   ecc9     call    0x4d92, 0        	CALL	_fsk_rx_enable
000150   f026
                                           _00168_DS_:
                                           ;	.line	157; meter_logger.c	if (fifo_get(&cmd)) {
000152   0e05     movlw   0x5              	MOVLW	HIGH(_main_cmd_1_90)
000154   6e01     movwf   0x1, 0           	MOVWF	r0x01
000156   0e4f     movlw   0x4f             	MOVLW	LOW(_main_cmd_1_90)
000158   6e00     movwf   0, 0             	MOVWF	r0x00
00015a   0e80     movlw   0x80             	MOVLW	0x80
00015c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00015e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000160   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000162   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000164   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000166   5000     movf    0, 0, 0          	MOVF	r0x00, W
000168   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00016a   ec68     call    0x40d0, 0        	CALL	_fifo_get
00016c   f020
00016e   6e00     movwf   0, 0             	MOVWF	r0x00
000170   0e03     movlw   0x3              	MOVLW	0x03
000172   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000174   5000     movf    0, 0, 0          	MOVF	r0x00, W
000176   e0ed     bz      0x152            	BZ	_00168_DS_
                                           ;	.line	158; meter_logger.c	switch (cmd) {
000178   0efb     movlw   0xfb             	MOVLW	0xfb
00017a   0105     movlb   0x5              	BANKSEL	_main_cmd_1_90
00017c   5d4f     subwf   0x4f, 0, 0x1     	SUBWF	_main_cmd_1_90, W, B
00017e   e3e9     bnc     0x152            	BNC	_00168_DS_
000180   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
000182   254f     addwf   0x4f, 0, 0x1     	ADDWF	_main_cmd_1_90, W, B
000184   6e00     movwf   0, 0             	MOVWF	r0x00
000186   6afa     clrf    0xfa, 0          	CLRF	PCLATH
000188   6afb     clrf    0xfb, 0          	CLRF	PCLATU
00018a   3400     rlcf    0, 0, 0          	RLCF	r0x00, W
00018c   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00018e   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
000190   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
000192   0bfc     andlw   0xfc             	ANDLW	0xfc
000194   0fa4     addlw   0xa4             	ADDLW	LOW(_00330_DS_)
000196   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000198   0e01     movlw   0x1              	MOVLW	HIGH(_00330_DS_)
00019a   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
00019c   0e00     movlw   0                	MOVLW	UPPER(_00330_DS_)
00019e   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0001a0   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0001a2   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00330_DS_:
0001a4   ef5d     goto    0xeba            	GOTO	_00163_DS_
0001a6   f007
0001a8   ef2b     goto    0xa56            	GOTO	_00145_DS_
0001aa   f005
0001ac   eff9     goto    0x5f2            	GOTO	_00127_DS_
0001ae   f002
0001b0   efdc     goto    0x1b8            	GOTO	_00111_DS_
0001b2   f000
0001b4   eff4     goto    0x3e8            	GOTO	_00119_DS_
0001b6   f001
                                           _00111_DS_:
                                           ;	.line	160; meter_logger.c	fsk_rx_disable();
0001b8   eccc     call    0x5398, 0        	CALL	_fsk_rx_disable
0001ba   f029
                                           ;	.line	161; meter_logger.c	usart_puts("\n\rpress print on testo\n\r");
0001bc   0e00     movlw   0                	MOVLW	UPPER(__str_3)
0001be   6e02     movwf   0x2, 0           	MOVWF	r0x02
0001c0   0e2e     movlw   0x2e             	MOVLW	HIGH(__str_3)
0001c2   6e01     movwf   0x1, 0           	MOVWF	r0x01
0001c4   0ef4     movlw   0xf4             	MOVLW	LOW(__str_3)
0001c6   6e00     movwf   0, 0             	MOVWF	r0x00
0001c8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0001ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001cc   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0001ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001d0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0001d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001d4   ec54     call    0x4ca8, 0        	CALL	_usart_puts
0001d6   f026
0001d8   0e03     movlw   0x3              	MOVLW	0x03
0001da   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	162; meter_logger.c	testo_ir_enable();
0001dc   ecc0     call    0x4f80, 0        	CALL	_testo_ir_enable
0001de   f027
                                           ;	.line	164; meter_logger.c	last_fifo_size = 0;
0001e0   6a00     clrf    0, 0             	CLRF	r0x00
0001e2   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	165; meter_logger.c	sleep_ms(10000);						// 10 seconds to start printing
0001e4   0e27     movlw   0x27             	MOVLW	0x27
0001e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001e8   0e10     movlw   0x10             	MOVLW	0x10
0001ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001ec   ec7d     call    0x4afa, 0        	CALL	_sleep_ms
0001ee   f025
0001f0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0001f2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	166; meter_logger.c	fifo_size = fifo_in_use();
0001f4   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
0001f6   f027
0001f8   6e02     movwf   0x2, 0           	MOVWF	r0x02
0001fa   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0001fc   f003
                                           _00112_DS_:
                                           ;	.line	167; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
0001fe   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000200   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000202   e102     bnz     0x208            	BNZ	_00331_DS_
000204   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000206   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00331_DS_:
000208   e212     bc      0x22e            	BC	_00114_DS_
                                           ;	.line	168; meter_logger.c	last_fifo_size = fifo_size;
00020a   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
00020c   f000
00020e   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000210   f001
                                           ;	.line	169; meter_logger.c	sleep_ms(200);						// return data when no data for 200 ms
000212   0e00     movlw   0                	MOVLW	0x00
000214   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000216   0ec8     movlw   0xc8             	MOVLW	0xc8
000218   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00021a   ec7d     call    0x4afa, 0        	CALL	_sleep_ms
00021c   f025
00021e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000220   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	170; meter_logger.c	fifo_size = fifo_in_use();
000222   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
000224   f027
000226   6e02     movwf   0x2, 0           	MOVWF	r0x02
000228   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00022a   f003
00022c   d7e8     bra     0x1fe            	BRA	_00112_DS_
                                           _00114_DS_:
                                           ;	.line	172; meter_logger.c	testo_ir_disable();
00022e   ecd6     call    0x53ac, 0        	CALL	_testo_ir_disable
000230   f029
                                           ;	.line	178; meter_logger.c	sprintf(debug_buffer, "<- ");
000232   0e00     movlw   0                	MOVLW	UPPER(__str_4)
000234   6e06     movwf   0x6, 0           	MOVWF	r0x06
000236   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_4)
000238   6e05     movwf   0x5, 0           	MOVWF	r0x05
00023a   0e0e     movlw   0xe              	MOVLW	LOW(__str_4)
00023c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00023e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000240   6e08     movwf   0x8, 0           	MOVWF	r0x08
000242   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000244   6e07     movwf   0x7, 0           	MOVWF	r0x07
000246   0e80     movlw   0x80             	MOVLW	0x80
000248   6e09     movwf   0x9, 0           	MOVWF	r0x09
00024a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00024c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00024e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000250   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000252   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000254   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000256   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000258   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00025a   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00025c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00025e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000260   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000262   ecdf     call    0x45be, 0        	CALL	_sprintf
000264   f022
000266   0e06     movlw   0x6              	MOVLW	0x06
000268   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	179; meter_logger.c	usart_puts(debug_buffer);
00026a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00026c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00026e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000270   6e04     movwf   0x4, 0           	MOVWF	r0x04
000272   0e80     movlw   0x80             	MOVLW	0x80
000274   6e06     movwf   0x6, 0           	MOVWF	r0x06
000276   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000278   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00027a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00027c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00027e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000280   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000282   ec54     call    0x4ca8, 0        	CALL	_usart_puts
000284   f026
000286   0e03     movlw   0x3              	MOVLW	0x03
000288   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	180; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
00028a   6a04     clrf    0x4, 0           	CLRF	r0x04
00028c   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00171_DS_:
00028e   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
000290   f027
000292   6e06     movwf   0x6, 0           	MOVWF	r0x06
000294   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
000296   f007
000298   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00029a   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
00029c   e102     bnz     0x2a2            	BNZ	_00332_DS_
00029e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0002a0   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00332_DS_:
0002a2   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0002a4   d04c     bra     0x33e            	BRA	_00115_DS_
                                           ;	.line	182; meter_logger.c	fifo_get(&sub_cmd);
0002a6   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0002a8   6e07     movwf   0x7, 0           	MOVWF	r0x07
0002aa   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
0002ac   6e06     movwf   0x6, 0           	MOVWF	r0x06
0002ae   0e80     movlw   0x80             	MOVLW	0x80
0002b0   6e08     movwf   0x8, 0           	MOVWF	r0x08
0002b2   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0002b4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002b6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0002b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002ba   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0002bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002be   ec68     call    0x40d0, 0        	CALL	_fifo_get
0002c0   f020
0002c2   0e03     movlw   0x3              	MOVLW	0x03
0002c4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	184; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
0002c6   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
0002c8   f006
0002ca   6a07     clrf    0x7, 0           	CLRF	r0x07
0002cc   0e00     movlw   0                	MOVLW	UPPER(__str_5)
0002ce   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0002d0   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_5)
0002d2   6e09     movwf   0x9, 0           	MOVWF	r0x09
0002d4   0e12     movlw   0x12             	MOVLW	LOW(__str_5)
0002d6   6e08     movwf   0x8, 0           	MOVWF	r0x08
0002d8   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0002da   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
0002dc   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0002de   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0002e0   0e80     movlw   0x80             	MOVLW	0x80
0002e2   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
0002e4   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0002e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002e8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0002ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002ec   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
0002ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002f0   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0002f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002f4   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0002f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002f8   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
0002fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002fc   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
0002fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000300   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000302   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000304   ecdf     call    0x45be, 0        	CALL	_sprintf
000306   f022
000308   0e08     movlw   0x8              	MOVLW	0x08
00030a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	185; meter_logger.c	usart_puts(debug_buffer);
00030c   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00030e   6e07     movwf   0x7, 0           	MOVWF	r0x07
000310   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000312   6e06     movwf   0x6, 0           	MOVWF	r0x06
000314   0e80     movlw   0x80             	MOVLW	0x80
000316   6e08     movwf   0x8, 0           	MOVWF	r0x08
000318   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00031a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00031c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00031e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000320   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000322   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000324   ec54     call    0x4ca8, 0        	CALL	_usart_puts
000326   f026
000328   0e03     movlw   0x3              	MOVLW	0x03
00032a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00032c   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	187; meter_logger.c	fifo_put(sub_cmd);
00032e   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000330   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000332   ecc4     call    0x4388, 0        	CALL	_fifo_put
000334   f021
000336   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	180; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000338   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
00033a   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
00033c   d7a8     bra     0x28e            	BRA	_00171_DS_
                                           _00115_DS_:
                                           ;	.line	189; meter_logger.c	sprintf(debug_buffer, "\n\r");
00033e   0e00     movlw   0                	MOVLW	UPPER(__str_6)
000340   6e06     movwf   0x6, 0           	MOVWF	r0x06
000342   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_6)
000344   6e05     movwf   0x5, 0           	MOVWF	r0x05
000346   0e16     movlw   0x16             	MOVLW	LOW(__str_6)
000348   6e04     movwf   0x4, 0           	MOVWF	r0x04
00034a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00034c   6e08     movwf   0x8, 0           	MOVWF	r0x08
00034e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000350   6e07     movwf   0x7, 0           	MOVWF	r0x07
000352   0e80     movlw   0x80             	MOVLW	0x80
000354   6e09     movwf   0x9, 0           	MOVWF	r0x09
000356   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000358   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00035a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00035c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00035e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000360   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000362   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000364   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000366   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000368   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00036a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00036c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00036e   ecdf     call    0x45be, 0        	CALL	_sprintf
000370   f022
000372   0e06     movlw   0x6              	MOVLW	0x06
000374   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	190; meter_logger.c	usart_puts(debug_buffer);
000376   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000378   6e05     movwf   0x5, 0           	MOVWF	r0x05
00037a   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00037c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00037e   0e80     movlw   0x80             	MOVLW	0x80
000380   6e06     movwf   0x6, 0           	MOVWF	r0x06
000382   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000384   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000386   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000388   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00038a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00038c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00038e   ec54     call    0x4ca8, 0        	CALL	_usart_puts
000390   f026
000392   0e03     movlw   0x3              	MOVLW	0x03
000394   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	192; meter_logger.c	fsk_tx_enable();
000396   ec32     call    0x5064, 0        	CALL	_fsk_tx_enable
000398   f028
                                           _00116_DS_:
                                           ;	.line	193; meter_logger.c	while (fifo_get(&cmd)) {	// and send them via fsk
00039a   0e05     movlw   0x5              	MOVLW	HIGH(_main_cmd_1_90)
00039c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00039e   0e4f     movlw   0x4f             	MOVLW	LOW(_main_cmd_1_90)
0003a0   6e04     movwf   0x4, 0           	MOVWF	r0x04
0003a2   0e80     movlw   0x80             	MOVLW	0x80
0003a4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0003a6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0003a8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003aa   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0003ac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003ae   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0003b0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003b2   ec68     call    0x40d0, 0        	CALL	_fifo_get
0003b4   f020
0003b6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0003b8   0e03     movlw   0x3              	MOVLW	0x03
0003ba   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0003bc   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0003be   e00f     bz      0x3de            	BZ	_00118_DS_
0003c0   0105     movlb   0x5              	BANKSEL	_main_cmd_1_90
                                           ;	.line	194; meter_logger.c	fsk_tx_byte(cmd);
0003c2   514f     movf    0x4f, 0, 0x1     	MOVF	_main_cmd_1_90, W, B
0003c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003c6   ecc3     call    0x5186, 0        	CALL	_fsk_tx_byte
0003c8   f028
0003ca   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	195; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
0003cc   0e00     movlw   0                	MOVLW	0x00
0003ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003d0   0e04     movlw   0x4              	MOVLW	0x04
0003d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003d4   ec7d     call    0x4afa, 0        	CALL	_sleep_ms
0003d6   f025
0003d8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0003da   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0003dc   d7de     bra     0x39a            	BRA	_00116_DS_
                                           _00118_DS_:
                                           ;	.line	197; meter_logger.c	fsk_tx_disable();
0003de   ec8a     call    0x5314, 0        	CALL	_fsk_tx_disable
0003e0   f029
                                           ;	.line	201; meter_logger.c	fsk_rx_enable();
0003e2   ecc9     call    0x4d92, 0        	CALL	_fsk_rx_enable
0003e4   f026
                                           ;	.line	202; meter_logger.c	break;
0003e6   d6b5     bra     0x152            	BRA	_00168_DS_
                                           _00119_DS_:
                                           ;	.line	212; meter_logger.c	last_fifo_size = 0;
0003e8   6a00     clrf    0, 0             	CLRF	r0x00
0003ea   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	213; meter_logger.c	sleep_ms(1000);							// 1 second
0003ec   0e03     movlw   0x3              	MOVLW	0x03
0003ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003f0   0ee8     movlw   0xe8             	MOVLW	0xe8
0003f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003f4   ec7d     call    0x4afa, 0        	CALL	_sleep_ms
0003f6   f025
0003f8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0003fa   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	214; meter_logger.c	fifo_size = fifo_in_use();
0003fc   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
0003fe   f027
000400   6e02     movwf   0x2, 0           	MOVWF	r0x02
000402   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000404   f003
                                           _00120_DS_:
                                           ;	.line	215; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000406   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000408   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00040a   e102     bnz     0x410            	BNZ	_00333_DS_
00040c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00040e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00333_DS_:
000410   e212     bc      0x436            	BC	_00122_DS_
                                           ;	.line	216; meter_logger.c	last_fifo_size = fifo_size;
000412   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000414   f000
000416   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000418   f001
                                           ;	.line	217; meter_logger.c	sleep_ms(500);						// return data when no data for 500 ms
00041a   0e01     movlw   0x1              	MOVLW	0x01
00041c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00041e   0ef4     movlw   0xf4             	MOVLW	0xf4
000420   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000422   ec7d     call    0x4afa, 0        	CALL	_sleep_ms
000424   f025
000426   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000428   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	218; meter_logger.c	fifo_size = fifo_in_use();
00042a   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
00042c   f027
00042e   6e02     movwf   0x2, 0           	MOVWF	r0x02
000430   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000432   f003
000434   d7e8     bra     0x406            	BRA	_00120_DS_
                                           _00122_DS_:
                                           ;	.line	220; meter_logger.c	fsk_rx_disable();
000436   eccc     call    0x5398, 0        	CALL	_fsk_rx_disable
000438   f029
                                           ;	.line	223; meter_logger.c	sprintf(debug_buffer, "-> ");
00043a   0e00     movlw   0                	MOVLW	UPPER(__str_7)
00043c   6e06     movwf   0x6, 0           	MOVWF	r0x06
00043e   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_7)
000440   6e05     movwf   0x5, 0           	MOVWF	r0x05
000442   0e1a     movlw   0x1a             	MOVLW	LOW(__str_7)
000444   6e04     movwf   0x4, 0           	MOVWF	r0x04
000446   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000448   6e08     movwf   0x8, 0           	MOVWF	r0x08
00044a   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00044c   6e07     movwf   0x7, 0           	MOVWF	r0x07
00044e   0e80     movlw   0x80             	MOVLW	0x80
000450   6e09     movwf   0x9, 0           	MOVWF	r0x09
000452   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000454   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000456   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000458   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00045a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00045c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00045e   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000460   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000462   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000464   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000466   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000468   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00046a   ecdf     call    0x45be, 0        	CALL	_sprintf
00046c   f022
00046e   0e06     movlw   0x6              	MOVLW	0x06
000470   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	224; meter_logger.c	usart_puts(debug_buffer);
000472   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000474   6e05     movwf   0x5, 0           	MOVWF	r0x05
000476   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000478   6e04     movwf   0x4, 0           	MOVWF	r0x04
00047a   0e80     movlw   0x80             	MOVLW	0x80
00047c   6e06     movwf   0x6, 0           	MOVWF	r0x06
00047e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000480   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000482   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000484   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000486   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000488   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00048a   ec54     call    0x4ca8, 0        	CALL	_usart_puts
00048c   f026
00048e   0e03     movlw   0x3              	MOVLW	0x03
000490   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	225; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000492   6a04     clrf    0x4, 0           	CLRF	r0x04
000494   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00174_DS_:
000496   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
000498   f027
00049a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00049c   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
00049e   f007
0004a0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0004a2   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0004a4   e102     bnz     0x4aa            	BNZ	_00334_DS_
0004a6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0004a8   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00334_DS_:
0004aa   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0004ac   d04c     bra     0x546            	BRA	_00123_DS_
                                           ;	.line	227; meter_logger.c	fifo_get(&sub_cmd);
0004ae   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0004b0   6e07     movwf   0x7, 0           	MOVWF	r0x07
0004b2   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
0004b4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0004b6   0e80     movlw   0x80             	MOVLW	0x80
0004b8   6e08     movwf   0x8, 0           	MOVWF	r0x08
0004ba   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0004bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004be   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0004c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004c2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0004c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004c6   ec68     call    0x40d0, 0        	CALL	_fifo_get
0004c8   f020
0004ca   0e03     movlw   0x3              	MOVLW	0x03
0004cc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	229; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
0004ce   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
0004d0   f006
0004d2   6a07     clrf    0x7, 0           	CLRF	r0x07
0004d4   0e00     movlw   0                	MOVLW	UPPER(__str_5)
0004d6   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0004d8   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_5)
0004da   6e09     movwf   0x9, 0           	MOVWF	r0x09
0004dc   0e12     movlw   0x12             	MOVLW	LOW(__str_5)
0004de   6e08     movwf   0x8, 0           	MOVWF	r0x08
0004e0   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0004e2   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
0004e4   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0004e6   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0004e8   0e80     movlw   0x80             	MOVLW	0x80
0004ea   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
0004ec   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0004ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004f0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0004f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004f4   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
0004f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004f8   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0004fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004fc   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0004fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000500   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000502   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000504   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000506   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000508   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
00050a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00050c   ecdf     call    0x45be, 0        	CALL	_sprintf
00050e   f022
000510   0e08     movlw   0x8              	MOVLW	0x08
000512   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	230; meter_logger.c	usart_puts(debug_buffer);
000514   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000516   6e07     movwf   0x7, 0           	MOVWF	r0x07
000518   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00051a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00051c   0e80     movlw   0x80             	MOVLW	0x80
00051e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000520   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000522   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000524   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000526   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000528   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00052a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00052c   ec54     call    0x4ca8, 0        	CALL	_usart_puts
00052e   f026
000530   0e03     movlw   0x3              	MOVLW	0x03
000532   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000534   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	232; meter_logger.c	fifo_put(sub_cmd);
000536   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000538   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00053a   ecc4     call    0x4388, 0        	CALL	_fifo_put
00053c   f021
00053e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	225; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000540   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000542   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000544   d7a8     bra     0x496            	BRA	_00174_DS_
                                           _00123_DS_:
                                           ;	.line	234; meter_logger.c	sprintf(debug_buffer, "\n\r");
000546   0e00     movlw   0                	MOVLW	UPPER(__str_6)
000548   6e06     movwf   0x6, 0           	MOVWF	r0x06
00054a   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_6)
00054c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00054e   0e16     movlw   0x16             	MOVLW	LOW(__str_6)
000550   6e04     movwf   0x4, 0           	MOVWF	r0x04
000552   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000554   6e08     movwf   0x8, 0           	MOVWF	r0x08
000556   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000558   6e07     movwf   0x7, 0           	MOVWF	r0x07
00055a   0e80     movlw   0x80             	MOVLW	0x80
00055c   6e09     movwf   0x9, 0           	MOVWF	r0x09
00055e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000560   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000562   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000564   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000566   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000568   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00056a   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00056c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00056e   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000570   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000572   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000574   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000576   ecdf     call    0x45be, 0        	CALL	_sprintf
000578   f022
00057a   0e06     movlw   0x6              	MOVLW	0x06
00057c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	235; meter_logger.c	usart_puts(debug_buffer);
00057e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000580   6e05     movwf   0x5, 0           	MOVWF	r0x05
000582   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000584   6e04     movwf   0x4, 0           	MOVWF	r0x04
000586   0e80     movlw   0x80             	MOVLW	0x80
000588   6e06     movwf   0x6, 0           	MOVWF	r0x06
00058a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00058c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00058e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000590   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000592   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000594   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000596   ec54     call    0x4ca8, 0        	CALL	_usart_puts
000598   f026
00059a   0e03     movlw   0x3              	MOVLW	0x03
00059c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	239; meter_logger.c	fsk_tx_enable();
00059e   ec32     call    0x5064, 0        	CALL	_fsk_tx_enable
0005a0   f028
                                           _00124_DS_:
                                           ;	.line	240; meter_logger.c	while (fifo_get(&sub_cmd)) {
0005a2   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0005a4   6e05     movwf   0x5, 0           	MOVWF	r0x05
0005a6   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
0005a8   6e04     movwf   0x4, 0           	MOVWF	r0x04
0005aa   0e80     movlw   0x80             	MOVLW	0x80
0005ac   6e06     movwf   0x6, 0           	MOVWF	r0x06
0005ae   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0005b0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005b2   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0005b4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005b6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0005b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005ba   ec68     call    0x40d0, 0        	CALL	_fifo_get
0005bc   f020
0005be   6e04     movwf   0x4, 0           	MOVWF	r0x04
0005c0   0e03     movlw   0x3              	MOVLW	0x03
0005c2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0005c4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0005c6   e00f     bz      0x5e6            	BZ	_00126_DS_
0005c8   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	241; meter_logger.c	fsk_tx_byte(sub_cmd);
0005ca   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
0005cc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005ce   ecc3     call    0x5186, 0        	CALL	_fsk_tx_byte
0005d0   f028
0005d2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	242; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
0005d4   0e00     movlw   0                	MOVLW	0x00
0005d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005d8   0e04     movlw   0x4              	MOVLW	0x04
0005da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005dc   ec7d     call    0x4afa, 0        	CALL	_sleep_ms
0005de   f025
0005e0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0005e2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0005e4   d7de     bra     0x5a2            	BRA	_00124_DS_
                                           _00126_DS_:
                                           ;	.line	244; meter_logger.c	fsk_tx_disable();
0005e6   ec8a     call    0x5314, 0        	CALL	_fsk_tx_disable
0005e8   f029
                                           ;	.line	249; meter_logger.c	fsk_rx_enable();
0005ea   ecc9     call    0x4d92, 0        	CALL	_fsk_rx_enable
0005ec   f026
                                           ;	.line	250; meter_logger.c	break;
0005ee   efa9     goto    0x152            	GOTO	_00168_DS_
0005f0   f000
                                           _00127_DS_:
                                           ;	.line	253; meter_logger.c	fsk_rx_disable();
0005f2   eccc     call    0x5398, 0        	CALL	_fsk_rx_disable
0005f4   f029
                                           ;	.line	259; meter_logger.c	fsk_rx_enable();
0005f6   ecc9     call    0x4d92, 0        	CALL	_fsk_rx_enable
0005f8   f026
                                           ;	.line	260; meter_logger.c	last_fifo_size = 0;
0005fa   6a00     clrf    0, 0             	CLRF	r0x00
0005fc   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	261; meter_logger.c	sleep_ms(400);							// sleep 400 ms to let some data come in
0005fe   0e01     movlw   0x1              	MOVLW	0x01
000600   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000602   0e90     movlw   0x90             	MOVLW	0x90
000604   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000606   ec7d     call    0x4afa, 0        	CALL	_sleep_ms
000608   f025
00060a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00060c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	262; meter_logger.c	fifo_size = fifo_in_use();
00060e   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
000610   f027
000612   6e02     movwf   0x2, 0           	MOVWF	r0x02
000614   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000616   f003
                                           _00128_DS_:
                                           ;	.line	263; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000618   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00061a   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00061c   e102     bnz     0x622            	BNZ	_00335_DS_
00061e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000620   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00335_DS_:
000622   e212     bc      0x648            	BC	_00130_DS_
                                           ;	.line	264; meter_logger.c	last_fifo_size = fifo_size;
000624   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000626   f000
000628   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
00062a   f001
                                           ;	.line	265; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
00062c   0e00     movlw   0                	MOVLW	0x00
00062e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000630   0ec8     movlw   0xc8             	MOVLW	0xc8
000632   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000634   ec7d     call    0x4afa, 0        	CALL	_sleep_ms
000636   f025
000638   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00063a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	266; meter_logger.c	fifo_size = fifo_in_use();
00063c   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
00063e   f027
000640   6e02     movwf   0x2, 0           	MOVWF	r0x02
000642   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000644   f003
000646   d7e8     bra     0x618            	BRA	_00128_DS_
                                           _00130_DS_:
                                           ;	.line	268; meter_logger.c	fsk_rx_disable();
000648   eccc     call    0x5398, 0        	CALL	_fsk_rx_disable
00064a   f029
                                           ;	.line	274; meter_logger.c	sprintf(debug_buffer, "-> ");
00064c   0e00     movlw   0                	MOVLW	UPPER(__str_7)
00064e   6e06     movwf   0x6, 0           	MOVWF	r0x06
000650   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_7)
000652   6e05     movwf   0x5, 0           	MOVWF	r0x05
000654   0e1a     movlw   0x1a             	MOVLW	LOW(__str_7)
000656   6e04     movwf   0x4, 0           	MOVWF	r0x04
000658   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00065a   6e08     movwf   0x8, 0           	MOVWF	r0x08
00065c   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00065e   6e07     movwf   0x7, 0           	MOVWF	r0x07
000660   0e80     movlw   0x80             	MOVLW	0x80
000662   6e09     movwf   0x9, 0           	MOVWF	r0x09
000664   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000666   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000668   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00066a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00066c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00066e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000670   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000672   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000674   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000676   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000678   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00067a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00067c   ecdf     call    0x45be, 0        	CALL	_sprintf
00067e   f022
000680   0e06     movlw   0x6              	MOVLW	0x06
000682   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	275; meter_logger.c	usart_puts(debug_buffer);
000684   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000686   6e05     movwf   0x5, 0           	MOVWF	r0x05
000688   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00068a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00068c   0e80     movlw   0x80             	MOVLW	0x80
00068e   6e06     movwf   0x6, 0           	MOVWF	r0x06
000690   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000692   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000694   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000696   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000698   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00069a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00069c   ec54     call    0x4ca8, 0        	CALL	_usart_puts
00069e   f026
0006a0   0e03     movlw   0x3              	MOVLW	0x03
0006a2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	276; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
0006a4   6a04     clrf    0x4, 0           	CLRF	r0x04
0006a6   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00177_DS_:
0006a8   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
0006aa   f027
0006ac   6e06     movwf   0x6, 0           	MOVWF	r0x06
0006ae   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
0006b0   f007
0006b2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0006b4   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0006b6   e102     bnz     0x6bc            	BNZ	_00336_DS_
0006b8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0006ba   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00336_DS_:
0006bc   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0006be   d04c     bra     0x758            	BRA	_00131_DS_
                                           ;	.line	278; meter_logger.c	fifo_get(&sub_cmd);
0006c0   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0006c2   6e07     movwf   0x7, 0           	MOVWF	r0x07
0006c4   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
0006c6   6e06     movwf   0x6, 0           	MOVWF	r0x06
0006c8   0e80     movlw   0x80             	MOVLW	0x80
0006ca   6e08     movwf   0x8, 0           	MOVWF	r0x08
0006cc   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0006ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006d0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0006d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006d4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0006d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006d8   ec68     call    0x40d0, 0        	CALL	_fifo_get
0006da   f020
0006dc   0e03     movlw   0x3              	MOVLW	0x03
0006de   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	280; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
0006e0   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
0006e2   f006
0006e4   6a07     clrf    0x7, 0           	CLRF	r0x07
0006e6   0e00     movlw   0                	MOVLW	UPPER(__str_5)
0006e8   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0006ea   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_5)
0006ec   6e09     movwf   0x9, 0           	MOVWF	r0x09
0006ee   0e12     movlw   0x12             	MOVLW	LOW(__str_5)
0006f0   6e08     movwf   0x8, 0           	MOVWF	r0x08
0006f2   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0006f4   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
0006f6   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0006f8   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0006fa   0e80     movlw   0x80             	MOVLW	0x80
0006fc   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
0006fe   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000700   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000702   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000704   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000706   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000708   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00070a   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00070c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00070e   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000710   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000712   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000714   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000716   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000718   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00071a   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
00071c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00071e   ecdf     call    0x45be, 0        	CALL	_sprintf
000720   f022
000722   0e08     movlw   0x8              	MOVLW	0x08
000724   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	281; meter_logger.c	usart_puts(debug_buffer);
000726   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000728   6e07     movwf   0x7, 0           	MOVWF	r0x07
00072a   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00072c   6e06     movwf   0x6, 0           	MOVWF	r0x06
00072e   0e80     movlw   0x80             	MOVLW	0x80
000730   6e08     movwf   0x8, 0           	MOVWF	r0x08
000732   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000734   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000736   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000738   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00073a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00073c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00073e   ec54     call    0x4ca8, 0        	CALL	_usart_puts
000740   f026
000742   0e03     movlw   0x3              	MOVLW	0x03
000744   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000746   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	283; meter_logger.c	fifo_put(sub_cmd);
000748   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
00074a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00074c   ecc4     call    0x4388, 0        	CALL	_fifo_put
00074e   f021
000750   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	276; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000752   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000754   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000756   d7a8     bra     0x6a8            	BRA	_00177_DS_
                                           _00131_DS_:
                                           ;	.line	285; meter_logger.c	sprintf(debug_buffer, "\n\r");
000758   0e00     movlw   0                	MOVLW	UPPER(__str_6)
00075a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00075c   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_6)
00075e   6e05     movwf   0x5, 0           	MOVWF	r0x05
000760   0e16     movlw   0x16             	MOVLW	LOW(__str_6)
000762   6e04     movwf   0x4, 0           	MOVWF	r0x04
000764   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000766   6e08     movwf   0x8, 0           	MOVWF	r0x08
000768   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00076a   6e07     movwf   0x7, 0           	MOVWF	r0x07
00076c   0e80     movlw   0x80             	MOVLW	0x80
00076e   6e09     movwf   0x9, 0           	MOVWF	r0x09
000770   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000772   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000774   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000776   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000778   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00077a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00077c   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00077e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000780   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000782   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000784   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000786   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000788   ecdf     call    0x45be, 0        	CALL	_sprintf
00078a   f022
00078c   0e06     movlw   0x6              	MOVLW	0x06
00078e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	286; meter_logger.c	usart_puts(debug_buffer);
000790   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000792   6e05     movwf   0x5, 0           	MOVWF	r0x05
000794   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000796   6e04     movwf   0x4, 0           	MOVWF	r0x04
000798   0e80     movlw   0x80             	MOVLW	0x80
00079a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00079c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00079e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007a0   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0007a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007a4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0007a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007a8   ec54     call    0x4ca8, 0        	CALL	_usart_puts
0007aa   f026
0007ac   0e03     movlw   0x3              	MOVLW	0x03
0007ae   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	289; meter_logger.c	rs232_8n2_tx_enable(TIMER0_RS232_1200);
0007b0   0ef9     movlw   0xf9             	MOVLW	0xf9
0007b2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007b4   0eae     movlw   0xae             	MOVLW	0xae
0007b6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007b8   eca1     call    0x4f42, 0        	CALL	_rs232_8n2_tx_enable
0007ba   f027
0007bc   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0007be   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00132_DS_:
                                           ;	.line	290; meter_logger.c	while (fifo_get(&sub_cmd)) {
0007c0   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0007c2   6e05     movwf   0x5, 0           	MOVWF	r0x05
0007c4   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
0007c6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0007c8   0e80     movlw   0x80             	MOVLW	0x80
0007ca   6e06     movwf   0x6, 0           	MOVWF	r0x06
0007cc   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0007ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007d0   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0007d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007d4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0007d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007d8   ec68     call    0x40d0, 0        	CALL	_fifo_get
0007da   f020
0007dc   6e04     movwf   0x4, 0           	MOVWF	r0x04
0007de   0e03     movlw   0x3              	MOVLW	0x03
0007e0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0007e2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0007e4   e00f     bz      0x804            	BZ	_00134_DS_
0007e6   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	291; meter_logger.c	rs232_8n2_tx_byte(sub_cmd);
0007e8   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
0007ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007ec   ec64     call    0x50c8, 0        	CALL	_rs232_8n2_tx_byte
0007ee   f028
0007f0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	292; meter_logger.c	sleep_ms(RS232_TX_SLEEP);
0007f2   0e00     movlw   0                	MOVLW	0x00
0007f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007f6   0e0c     movlw   0xc              	MOVLW	0x0c
0007f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007fa   ec7d     call    0x4afa, 0        	CALL	_sleep_ms
0007fc   f025
0007fe   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000800   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000802   d7de     bra     0x7c0            	BRA	_00132_DS_
                                           _00134_DS_:
                                           ;	.line	294; meter_logger.c	rs232_8n2_tx_disable();
000804   ecb6     call    0x536c, 0        	CALL	_rs232_8n2_tx_disable
000806   f029
                                           ;	.line	300; meter_logger.c	rs232_8n2_rx_enable(TIMER0_RS232_1200);
000808   0ef9     movlw   0xf9             	MOVLW	0xf9
00080a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00080c   0eae     movlw   0xae             	MOVLW	0xae
00080e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000810   ec42     call    0x4e84, 0        	CALL	_rs232_8n2_rx_enable
000812   f027
000814   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000816   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	301; meter_logger.c	last_fifo_size = 0;
000818   6a00     clrf    0, 0             	CLRF	r0x00
00081a   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	302; meter_logger.c	sleep_ms(400);							// sleep 400 ms to let some data come in
00081c   0e01     movlw   0x1              	MOVLW	0x01
00081e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000820   0e90     movlw   0x90             	MOVLW	0x90
000822   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000824   ec7d     call    0x4afa, 0        	CALL	_sleep_ms
000826   f025
000828   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00082a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	303; meter_logger.c	fifo_size = fifo_in_use();
00082c   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
00082e   f027
000830   6e02     movwf   0x2, 0           	MOVWF	r0x02
000832   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000834   f003
                                           _00135_DS_:
                                           ;	.line	305; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000836   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000838   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00083a   e102     bnz     0x840            	BNZ	_00337_DS_
00083c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00083e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00337_DS_:
000840   e212     bc      0x866            	BC	_00137_DS_
                                           ;	.line	306; meter_logger.c	last_fifo_size = fifo_size;
000842   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000844   f000
000846   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000848   f001
                                           ;	.line	307; meter_logger.c	sleep_ms(200);						// return data when no data for 200 ms
00084a   0e00     movlw   0                	MOVLW	0x00
00084c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00084e   0ec8     movlw   0xc8             	MOVLW	0xc8
000850   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000852   ec7d     call    0x4afa, 0        	CALL	_sleep_ms
000854   f025
000856   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000858   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	308; meter_logger.c	fifo_size = fifo_in_use();
00085a   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
00085c   f027
00085e   6e02     movwf   0x2, 0           	MOVWF	r0x02
000860   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000862   f003
000864   d7e8     bra     0x836            	BRA	_00135_DS_
                                           _00137_DS_:
                                           ;	.line	311; meter_logger.c	rs232_8n2_rx_disable();
000866   ecab     call    0x5356, 0        	CALL	_rs232_8n2_rx_disable
000868   f029
                                           ;	.line	318; meter_logger.c	sprintf(debug_buffer, "<- ");
00086a   0e00     movlw   0                	MOVLW	UPPER(__str_4)
00086c   6e06     movwf   0x6, 0           	MOVWF	r0x06
00086e   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_4)
000870   6e05     movwf   0x5, 0           	MOVWF	r0x05
000872   0e0e     movlw   0xe              	MOVLW	LOW(__str_4)
000874   6e04     movwf   0x4, 0           	MOVWF	r0x04
000876   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000878   6e08     movwf   0x8, 0           	MOVWF	r0x08
00087a   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00087c   6e07     movwf   0x7, 0           	MOVWF	r0x07
00087e   0e80     movlw   0x80             	MOVLW	0x80
000880   6e09     movwf   0x9, 0           	MOVWF	r0x09
000882   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000884   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000886   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000888   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00088a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00088c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00088e   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000890   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000892   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000894   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000896   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000898   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00089a   ecdf     call    0x45be, 0        	CALL	_sprintf
00089c   f022
00089e   0e06     movlw   0x6              	MOVLW	0x06
0008a0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	319; meter_logger.c	usart_puts(debug_buffer);
0008a2   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0008a4   6e05     movwf   0x5, 0           	MOVWF	r0x05
0008a6   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0008a8   6e04     movwf   0x4, 0           	MOVWF	r0x04
0008aa   0e80     movlw   0x80             	MOVLW	0x80
0008ac   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008ae   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0008b0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008b2   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0008b4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008b6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0008b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008ba   ec54     call    0x4ca8, 0        	CALL	_usart_puts
0008bc   f026
0008be   0e03     movlw   0x3              	MOVLW	0x03
0008c0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	320; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
0008c2   6a04     clrf    0x4, 0           	CLRF	r0x04
0008c4   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00180_DS_:
0008c6   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
0008c8   f027
0008ca   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008cc   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
0008ce   f007
0008d0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0008d2   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0008d4   e102     bnz     0x8da            	BNZ	_00338_DS_
0008d6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0008d8   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00338_DS_:
0008da   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0008dc   d04c     bra     0x976            	BRA	_00138_DS_
                                           ;	.line	322; meter_logger.c	fifo_get(&sub_cmd);
0008de   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0008e0   6e07     movwf   0x7, 0           	MOVWF	r0x07
0008e2   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
0008e4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008e6   0e80     movlw   0x80             	MOVLW	0x80
0008e8   6e08     movwf   0x8, 0           	MOVWF	r0x08
0008ea   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0008ec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008ee   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0008f0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008f2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0008f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008f6   ec68     call    0x40d0, 0        	CALL	_fifo_get
0008f8   f020
0008fa   0e03     movlw   0x3              	MOVLW	0x03
0008fc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	324; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
0008fe   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
000900   f006
000902   6a07     clrf    0x7, 0           	CLRF	r0x07
000904   0e00     movlw   0                	MOVLW	UPPER(__str_5)
000906   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000908   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_5)
00090a   6e09     movwf   0x9, 0           	MOVWF	r0x09
00090c   0e12     movlw   0x12             	MOVLW	LOW(__str_5)
00090e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000910   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000912   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
000914   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000916   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
000918   0e80     movlw   0x80             	MOVLW	0x80
00091a   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
00091c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00091e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000920   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000922   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000924   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000926   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000928   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00092a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00092c   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00092e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000930   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000932   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000934   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000936   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000938   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
00093a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00093c   ecdf     call    0x45be, 0        	CALL	_sprintf
00093e   f022
000940   0e08     movlw   0x8              	MOVLW	0x08
000942   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	325; meter_logger.c	usart_puts(debug_buffer);
000944   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000946   6e07     movwf   0x7, 0           	MOVWF	r0x07
000948   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00094a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00094c   0e80     movlw   0x80             	MOVLW	0x80
00094e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000950   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000952   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000954   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000956   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000958   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00095a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00095c   ec54     call    0x4ca8, 0        	CALL	_usart_puts
00095e   f026
000960   0e03     movlw   0x3              	MOVLW	0x03
000962   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000964   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	327; meter_logger.c	fifo_put(sub_cmd);
000966   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000968   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00096a   ecc4     call    0x4388, 0        	CALL	_fifo_put
00096c   f021
00096e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	320; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000970   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000972   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000974   d7a8     bra     0x8c6            	BRA	_00180_DS_
                                           _00138_DS_:
                                           ;	.line	329; meter_logger.c	sprintf(debug_buffer, "\n\r");
000976   0e00     movlw   0                	MOVLW	UPPER(__str_6)
000978   6e06     movwf   0x6, 0           	MOVWF	r0x06
00097a   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_6)
00097c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00097e   0e16     movlw   0x16             	MOVLW	LOW(__str_6)
000980   6e04     movwf   0x4, 0           	MOVWF	r0x04
000982   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000984   6e08     movwf   0x8, 0           	MOVWF	r0x08
000986   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000988   6e07     movwf   0x7, 0           	MOVWF	r0x07
00098a   0e80     movlw   0x80             	MOVLW	0x80
00098c   6e09     movwf   0x9, 0           	MOVWF	r0x09
00098e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000990   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000992   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000994   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000996   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000998   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00099a   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00099c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00099e   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0009a0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009a2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0009a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009a6   ecdf     call    0x45be, 0        	CALL	_sprintf
0009a8   f022
0009aa   0e06     movlw   0x6              	MOVLW	0x06
0009ac   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	330; meter_logger.c	usart_puts(debug_buffer);
0009ae   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0009b0   6e05     movwf   0x5, 0           	MOVWF	r0x05
0009b2   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0009b4   6e04     movwf   0x4, 0           	MOVWF	r0x04
0009b6   0e80     movlw   0x80             	MOVLW	0x80
0009b8   6e06     movwf   0x6, 0           	MOVWF	r0x06
0009ba   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0009bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009be   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0009c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009c2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0009c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009c6   ec54     call    0x4ca8, 0        	CALL	_usart_puts
0009c8   f026
0009ca   0e03     movlw   0x3              	MOVLW	0x03
0009cc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	332; meter_logger.c	if (fifo_in_use()) {
0009ce   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
0009d0   f027
0009d2   6e04     movwf   0x4, 0           	MOVWF	r0x04
0009d4   cff3     movff   0xff3, 0x5       	MOVFF	PRODL, r0x05
0009d6   f005
0009d8   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0009da   1005     iorwf   0x5, 0, 0        	IORWF	r0x05, W
0009dc   e027     bz      0xa2c            	BZ	_00143_DS_
                                           ;	.line	334; meter_logger.c	fsk_tx_enable();
0009de   ec32     call    0x5064, 0        	CALL	_fsk_tx_enable
0009e0   f028
                                           _00139_DS_:
                                           ;	.line	335; meter_logger.c	while (fifo_get(&sub_cmd)) {
0009e2   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0009e4   6e05     movwf   0x5, 0           	MOVWF	r0x05
0009e6   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
0009e8   6e04     movwf   0x4, 0           	MOVWF	r0x04
0009ea   0e80     movlw   0x80             	MOVLW	0x80
0009ec   6e06     movwf   0x6, 0           	MOVWF	r0x06
0009ee   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0009f0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009f2   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0009f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009f6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0009f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009fa   ec68     call    0x40d0, 0        	CALL	_fifo_get
0009fc   f020
0009fe   6e04     movwf   0x4, 0           	MOVWF	r0x04
000a00   0e03     movlw   0x3              	MOVLW	0x03
000a02   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000a04   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000a06   e00f     bz      0xa26            	BZ	_00141_DS_
000a08   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	336; meter_logger.c	fsk_tx_byte(sub_cmd);
000a0a   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000a0c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a0e   ecc3     call    0x5186, 0        	CALL	_fsk_tx_byte
000a10   f028
000a12   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	337; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000a14   0e00     movlw   0                	MOVLW	0x00
000a16   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a18   0e04     movlw   0x4              	MOVLW	0x04
000a1a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a1c   ec7d     call    0x4afa, 0        	CALL	_sleep_ms
000a1e   f025
000a20   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000a22   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000a24   d7de     bra     0x9e2            	BRA	_00139_DS_
                                           _00141_DS_:
                                           ;	.line	339; meter_logger.c	fsk_tx_disable();
000a26   ec8a     call    0x5314, 0        	CALL	_fsk_tx_disable
000a28   f029
000a2a   d011     bra     0xa4e            	BRA	_00144_DS_
                                           _00143_DS_:
                                           ;	.line	347; meter_logger.c	fsk_tx_enable();
000a2c   ec32     call    0x5064, 0        	CALL	_fsk_tx_enable
000a2e   f028
                                           ;	.line	348; meter_logger.c	fsk_tx_byte(0x0d);
000a30   0e0d     movlw   0xd              	MOVLW	0x0d
000a32   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a34   ecc3     call    0x5186, 0        	CALL	_fsk_tx_byte
000a36   f028
000a38   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	349; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000a3a   0e00     movlw   0                	MOVLW	0x00
000a3c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a3e   0e04     movlw   0x4              	MOVLW	0x04
000a40   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a42   ec7d     call    0x4afa, 0        	CALL	_sleep_ms
000a44   f025
000a46   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000a48   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	350; meter_logger.c	fsk_tx_disable();
000a4a   ec8a     call    0x5314, 0        	CALL	_fsk_tx_disable
000a4c   f029
                                           _00144_DS_:
                                           ;	.line	355; meter_logger.c	fsk_rx_enable();
000a4e   ecc9     call    0x4d92, 0        	CALL	_fsk_rx_enable
000a50   f026
                                           ;	.line	356; meter_logger.c	break;
000a52   efa9     goto    0x152            	GOTO	_00168_DS_
000a54   f000
                                           _00145_DS_:
                                           ;	.line	358; meter_logger.c	fsk_rx_disable();
000a56   eccc     call    0x5398, 0        	CALL	_fsk_rx_disable
000a58   f029
                                           ;	.line	364; meter_logger.c	fsk_rx_enable();
000a5a   ecc9     call    0x4d92, 0        	CALL	_fsk_rx_enable
000a5c   f026
                                           ;	.line	365; meter_logger.c	last_fifo_size = 0;
000a5e   6a00     clrf    0, 0             	CLRF	r0x00
000a60   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	366; meter_logger.c	sleep_ms(400);							// sleep 400 ms to let some data come in
000a62   0e01     movlw   0x1              	MOVLW	0x01
000a64   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a66   0e90     movlw   0x90             	MOVLW	0x90
000a68   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a6a   ec7d     call    0x4afa, 0        	CALL	_sleep_ms
000a6c   f025
000a6e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000a70   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	367; meter_logger.c	fifo_size = fifo_in_use();
000a72   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
000a74   f027
000a76   6e02     movwf   0x2, 0           	MOVWF	r0x02
000a78   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000a7a   f003
                                           _00146_DS_:
                                           ;	.line	368; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000a7c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000a7e   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000a80   e102     bnz     0xa86            	BNZ	_00339_DS_
000a82   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000a84   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00339_DS_:
000a86   e212     bc      0xaac            	BC	_00148_DS_
                                           ;	.line	369; meter_logger.c	last_fifo_size = fifo_size;
000a88   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000a8a   f000
000a8c   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000a8e   f001
                                           ;	.line	370; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
000a90   0e00     movlw   0                	MOVLW	0x00
000a92   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a94   0ec8     movlw   0xc8             	MOVLW	0xc8
000a96   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a98   ec7d     call    0x4afa, 0        	CALL	_sleep_ms
000a9a   f025
000a9c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000a9e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	371; meter_logger.c	fifo_size = fifo_in_use();
000aa0   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
000aa2   f027
000aa4   6e02     movwf   0x2, 0           	MOVWF	r0x02
000aa6   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000aa8   f003
000aaa   d7e8     bra     0xa7c            	BRA	_00146_DS_
                                           _00148_DS_:
                                           ;	.line	373; meter_logger.c	fsk_rx_disable();
000aac   eccc     call    0x5398, 0        	CALL	_fsk_rx_disable
000aae   f029
                                           ;	.line	379; meter_logger.c	sprintf(debug_buffer, "-> ");
000ab0   0e00     movlw   0                	MOVLW	UPPER(__str_7)
000ab2   6e06     movwf   0x6, 0           	MOVWF	r0x06
000ab4   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_7)
000ab6   6e05     movwf   0x5, 0           	MOVWF	r0x05
000ab8   0e1a     movlw   0x1a             	MOVLW	LOW(__str_7)
000aba   6e04     movwf   0x4, 0           	MOVWF	r0x04
000abc   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000abe   6e08     movwf   0x8, 0           	MOVWF	r0x08
000ac0   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000ac2   6e07     movwf   0x7, 0           	MOVWF	r0x07
000ac4   0e80     movlw   0x80             	MOVLW	0x80
000ac6   6e09     movwf   0x9, 0           	MOVWF	r0x09
000ac8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000aca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000acc   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000ace   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ad0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000ad2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ad4   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000ad6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ad8   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000ada   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000adc   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000ade   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ae0   ecdf     call    0x45be, 0        	CALL	_sprintf
000ae2   f022
000ae4   0e06     movlw   0x6              	MOVLW	0x06
000ae6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	380; meter_logger.c	usart_puts(debug_buffer);
000ae8   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000aea   6e05     movwf   0x5, 0           	MOVWF	r0x05
000aec   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000aee   6e04     movwf   0x4, 0           	MOVWF	r0x04
000af0   0e80     movlw   0x80             	MOVLW	0x80
000af2   6e06     movwf   0x6, 0           	MOVWF	r0x06
000af4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000af6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000af8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000afa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000afc   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000afe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b00   ec54     call    0x4ca8, 0        	CALL	_usart_puts
000b02   f026
000b04   0e03     movlw   0x3              	MOVLW	0x03
000b06   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	381; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000b08   6a04     clrf    0x4, 0           	CLRF	r0x04
000b0a   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00183_DS_:
000b0c   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
000b0e   f027
000b10   6e06     movwf   0x6, 0           	MOVWF	r0x06
000b12   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
000b14   f007
000b16   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000b18   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000b1a   e102     bnz     0xb20            	BNZ	_00340_DS_
000b1c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000b1e   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00340_DS_:
000b20   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
000b22   d04c     bra     0xbbc            	BRA	_00149_DS_
                                           ;	.line	383; meter_logger.c	fifo_get(&sub_cmd);
000b24   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000b26   6e07     movwf   0x7, 0           	MOVWF	r0x07
000b28   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
000b2a   6e06     movwf   0x6, 0           	MOVWF	r0x06
000b2c   0e80     movlw   0x80             	MOVLW	0x80
000b2e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000b30   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000b32   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b34   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000b36   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b38   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000b3a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b3c   ec68     call    0x40d0, 0        	CALL	_fifo_get
000b3e   f020
000b40   0e03     movlw   0x3              	MOVLW	0x03
000b42   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	385; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
000b44   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
000b46   f006
000b48   6a07     clrf    0x7, 0           	CLRF	r0x07
000b4a   0e00     movlw   0                	MOVLW	UPPER(__str_5)
000b4c   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000b4e   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_5)
000b50   6e09     movwf   0x9, 0           	MOVWF	r0x09
000b52   0e12     movlw   0x12             	MOVLW	LOW(__str_5)
000b54   6e08     movwf   0x8, 0           	MOVWF	r0x08
000b56   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000b58   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
000b5a   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000b5c   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
000b5e   0e80     movlw   0x80             	MOVLW	0x80
000b60   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
000b62   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000b64   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b66   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000b68   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b6a   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000b6c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b6e   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000b70   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b72   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000b74   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b76   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000b78   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b7a   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000b7c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b7e   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000b80   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b82   ecdf     call    0x45be, 0        	CALL	_sprintf
000b84   f022
000b86   0e08     movlw   0x8              	MOVLW	0x08
000b88   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	386; meter_logger.c	usart_puts(debug_buffer);
000b8a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000b8c   6e07     movwf   0x7, 0           	MOVWF	r0x07
000b8e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000b90   6e06     movwf   0x6, 0           	MOVWF	r0x06
000b92   0e80     movlw   0x80             	MOVLW	0x80
000b94   6e08     movwf   0x8, 0           	MOVWF	r0x08
000b96   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000b98   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b9a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000b9c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b9e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000ba0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ba2   ec54     call    0x4ca8, 0        	CALL	_usart_puts
000ba4   f026
000ba6   0e03     movlw   0x3              	MOVLW	0x03
000ba8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000baa   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	388; meter_logger.c	fifo_put(sub_cmd);
000bac   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000bae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bb0   ecc4     call    0x4388, 0        	CALL	_fifo_put
000bb2   f021
000bb4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	381; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000bb6   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000bb8   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000bba   d7a8     bra     0xb0c            	BRA	_00183_DS_
                                           _00149_DS_:
                                           ;	.line	390; meter_logger.c	sprintf(debug_buffer, "\n\r");
000bbc   0e00     movlw   0                	MOVLW	UPPER(__str_6)
000bbe   6e06     movwf   0x6, 0           	MOVWF	r0x06
000bc0   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_6)
000bc2   6e05     movwf   0x5, 0           	MOVWF	r0x05
000bc4   0e16     movlw   0x16             	MOVLW	LOW(__str_6)
000bc6   6e04     movwf   0x4, 0           	MOVWF	r0x04
000bc8   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000bca   6e08     movwf   0x8, 0           	MOVWF	r0x08
000bcc   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000bce   6e07     movwf   0x7, 0           	MOVWF	r0x07
000bd0   0e80     movlw   0x80             	MOVLW	0x80
000bd2   6e09     movwf   0x9, 0           	MOVWF	r0x09
000bd4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000bd6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bd8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000bda   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bdc   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000bde   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000be0   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000be2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000be4   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000be6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000be8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000bea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bec   ecdf     call    0x45be, 0        	CALL	_sprintf
000bee   f022
000bf0   0e06     movlw   0x6              	MOVLW	0x06
000bf2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	391; meter_logger.c	usart_puts(debug_buffer);
000bf4   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000bf6   6e05     movwf   0x5, 0           	MOVWF	r0x05
000bf8   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000bfa   6e04     movwf   0x4, 0           	MOVWF	r0x04
000bfc   0e80     movlw   0x80             	MOVLW	0x80
000bfe   6e06     movwf   0x6, 0           	MOVWF	r0x06
000c00   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000c02   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c04   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000c06   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c08   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000c0a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c0c   ec54     call    0x4ca8, 0        	CALL	_usart_puts
000c0e   f026
000c10   0e03     movlw   0x3              	MOVLW	0x03
000c12   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	393; meter_logger.c	rs232_7e1_tx_enable(TIMER0_RS232_300);
000c14   0ee6     movlw   0xe6             	MOVLW	0xe6
000c16   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c18   0e1b     movlw   0x1b             	MOVLW	0x1b
000c1a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c1c   ec82     call    0x4f04, 0        	CALL	_rs232_7e1_tx_enable
000c1e   f027
000c20   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c22   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00150_DS_:
                                           ;	.line	394; meter_logger.c	while (fifo_get(&sub_cmd)) {
000c24   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000c26   6e05     movwf   0x5, 0           	MOVWF	r0x05
000c28   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
000c2a   6e04     movwf   0x4, 0           	MOVWF	r0x04
000c2c   0e80     movlw   0x80             	MOVLW	0x80
000c2e   6e06     movwf   0x6, 0           	MOVWF	r0x06
000c30   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000c32   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c34   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000c36   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c38   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000c3a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c3c   ec68     call    0x40d0, 0        	CALL	_fifo_get
000c3e   f020
000c40   6e04     movwf   0x4, 0           	MOVWF	r0x04
000c42   0e03     movlw   0x3              	MOVLW	0x03
000c44   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000c46   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000c48   e00f     bz      0xc68            	BZ	_00152_DS_
000c4a   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	395; meter_logger.c	rs232_7e1_tx_byte(sub_cmd);
000c4c   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000c4e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c50   ec4c     call    0x5098, 0        	CALL	_rs232_7e1_tx_byte
000c52   f028
000c54   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	396; meter_logger.c	sleep_ms(RS232_TX_SLEEP);
000c56   0e00     movlw   0                	MOVLW	0x00
000c58   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c5a   0e0c     movlw   0xc              	MOVLW	0x0c
000c5c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c5e   ec7d     call    0x4afa, 0        	CALL	_sleep_ms
000c60   f025
000c62   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c64   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c66   d7de     bra     0xc24            	BRA	_00150_DS_
                                           _00152_DS_:
                                           ;	.line	398; meter_logger.c	rs232_7e1_tx_disable();
000c68   eca0     call    0x5340, 0        	CALL	_rs232_7e1_tx_disable
000c6a   f029
                                           ;	.line	404; meter_logger.c	rs232_7e1_rx_enable(TIMER0_RS232_300);
000c6c   0ee6     movlw   0xe6             	MOVLW	0xe6
000c6e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c70   0e1b     movlw   0x1b             	MOVLW	0x1b
000c72   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c74   ec22     call    0x4e44, 0        	CALL	_rs232_7e1_rx_enable
000c76   f027
000c78   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c7a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	405; meter_logger.c	last_fifo_size = 0;
000c7c   6a00     clrf    0, 0             	CLRF	r0x00
000c7e   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	406; meter_logger.c	sleep_ms(1500);							// sleep 1500 ms to let some data come in
000c80   0e05     movlw   0x5              	MOVLW	0x05
000c82   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c84   0edc     movlw   0xdc             	MOVLW	0xdc
000c86   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c88   ec7d     call    0x4afa, 0        	CALL	_sleep_ms
000c8a   f025
000c8c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c8e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	407; meter_logger.c	fifo_size = fifo_in_use();
000c90   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
000c92   f027
000c94   6e02     movwf   0x2, 0           	MOVWF	r0x02
000c96   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000c98   f003
                                           _00153_DS_:
                                           ;	.line	409; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000c9a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000c9c   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000c9e   e102     bnz     0xca4            	BNZ	_00341_DS_
000ca0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000ca2   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00341_DS_:
000ca4   e212     bc      0xcca            	BC	_00155_DS_
                                           ;	.line	410; meter_logger.c	last_fifo_size = fifo_size;
000ca6   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000ca8   f000
000caa   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000cac   f001
                                           ;	.line	411; meter_logger.c	sleep_ms(600);						// return data when no data for 600 ms
000cae   0e02     movlw   0x2              	MOVLW	0x02
000cb0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cb2   0e58     movlw   0x58             	MOVLW	0x58
000cb4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cb6   ec7d     call    0x4afa, 0        	CALL	_sleep_ms
000cb8   f025
000cba   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000cbc   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	412; meter_logger.c	fifo_size = fifo_in_use();
000cbe   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
000cc0   f027
000cc2   6e02     movwf   0x2, 0           	MOVWF	r0x02
000cc4   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000cc6   f003
000cc8   d7e8     bra     0xc9a            	BRA	_00153_DS_
                                           _00155_DS_:
                                           ;	.line	415; meter_logger.c	rs232_7e1_rx_disable();
000cca   ec95     call    0x532a, 0        	CALL	_rs232_7e1_rx_disable
000ccc   f029
                                           ;	.line	422; meter_logger.c	sprintf(debug_buffer, "<- ");
000cce   0e00     movlw   0                	MOVLW	UPPER(__str_4)
000cd0   6e02     movwf   0x2, 0           	MOVWF	r0x02
000cd2   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_4)
000cd4   6e01     movwf   0x1, 0           	MOVWF	r0x01
000cd6   0e0e     movlw   0xe              	MOVLW	LOW(__str_4)
000cd8   6e00     movwf   0, 0             	MOVWF	r0x00
000cda   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000cdc   6e04     movwf   0x4, 0           	MOVWF	r0x04
000cde   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000ce0   6e03     movwf   0x3, 0           	MOVWF	r0x03
000ce2   0e80     movlw   0x80             	MOVLW	0x80
000ce4   6e05     movwf   0x5, 0           	MOVWF	r0x05
000ce6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000ce8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cea   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000cec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cee   5000     movf    0, 0, 0          	MOVF	r0x00, W
000cf0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cf2   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000cf4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cf6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000cf8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cfa   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000cfc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cfe   ecdf     call    0x45be, 0        	CALL	_sprintf
000d00   f022
000d02   0e06     movlw   0x6              	MOVLW	0x06
000d04   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	423; meter_logger.c	usart_puts(debug_buffer);
000d06   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000d08   6e01     movwf   0x1, 0           	MOVWF	r0x01
000d0a   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000d0c   6e00     movwf   0, 0             	MOVWF	r0x00
000d0e   0e80     movlw   0x80             	MOVLW	0x80
000d10   6e02     movwf   0x2, 0           	MOVWF	r0x02
000d12   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000d14   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d16   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000d18   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d1a   5000     movf    0, 0, 0          	MOVF	r0x00, W
000d1c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d1e   ec54     call    0x4ca8, 0        	CALL	_usart_puts
000d20   f026
000d22   0e03     movlw   0x3              	MOVLW	0x03
000d24   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	424; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000d26   6a00     clrf    0, 0             	CLRF	r0x00
000d28   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00186_DS_:
000d2a   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
000d2c   f027
000d2e   6e02     movwf   0x2, 0           	MOVWF	r0x02
000d30   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000d32   f003
000d34   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000d36   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000d38   e102     bnz     0xd3e            	BNZ	_00342_DS_
000d3a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000d3c   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00342_DS_:
000d3e   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
000d40   d04c     bra     0xdda            	BRA	_00156_DS_
                                           ;	.line	426; meter_logger.c	fifo_get(&sub_cmd);
000d42   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000d44   6e03     movwf   0x3, 0           	MOVWF	r0x03
000d46   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
000d48   6e02     movwf   0x2, 0           	MOVWF	r0x02
000d4a   0e80     movlw   0x80             	MOVLW	0x80
000d4c   6e04     movwf   0x4, 0           	MOVWF	r0x04
000d4e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000d50   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d52   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000d54   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d56   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000d58   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d5a   ec68     call    0x40d0, 0        	CALL	_fifo_get
000d5c   f020
000d5e   0e03     movlw   0x3              	MOVLW	0x03
000d60   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	428; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
000d62   c550     movff   0x550, 0x2       	MOVFF	_main_sub_cmd_1_90, r0x02
000d64   f002
000d66   6a03     clrf    0x3, 0           	CLRF	r0x03
000d68   0e00     movlw   0                	MOVLW	UPPER(__str_5)
000d6a   6e06     movwf   0x6, 0           	MOVWF	r0x06
000d6c   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_5)
000d6e   6e05     movwf   0x5, 0           	MOVWF	r0x05
000d70   0e12     movlw   0x12             	MOVLW	LOW(__str_5)
000d72   6e04     movwf   0x4, 0           	MOVWF	r0x04
000d74   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000d76   6e08     movwf   0x8, 0           	MOVWF	r0x08
000d78   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000d7a   6e07     movwf   0x7, 0           	MOVWF	r0x07
000d7c   0e80     movlw   0x80             	MOVLW	0x80
000d7e   6e09     movwf   0x9, 0           	MOVWF	r0x09
000d80   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000d82   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d84   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000d86   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d88   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000d8a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d8c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000d8e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d90   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000d92   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d94   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000d96   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d98   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000d9a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d9c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000d9e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000da0   ecdf     call    0x45be, 0        	CALL	_sprintf
000da2   f022
000da4   0e08     movlw   0x8              	MOVLW	0x08
000da6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	429; meter_logger.c	usart_puts(debug_buffer);
000da8   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000daa   6e03     movwf   0x3, 0           	MOVWF	r0x03
000dac   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000dae   6e02     movwf   0x2, 0           	MOVWF	r0x02
000db0   0e80     movlw   0x80             	MOVLW	0x80
000db2   6e04     movwf   0x4, 0           	MOVWF	r0x04
000db4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000db6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000db8   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000dba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000dbc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000dbe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000dc0   ec54     call    0x4ca8, 0        	CALL	_usart_puts
000dc2   f026
000dc4   0e03     movlw   0x3              	MOVLW	0x03
000dc6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000dc8   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	431; meter_logger.c	fifo_put(sub_cmd);
000dca   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000dcc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000dce   ecc4     call    0x4388, 0        	CALL	_fifo_put
000dd0   f021
000dd2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	424; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000dd4   4a00     infsnz  0, 0x1, 0        	INFSNZ	r0x00, F
000dd6   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
000dd8   d7a8     bra     0xd2a            	BRA	_00186_DS_
                                           _00156_DS_:
                                           ;	.line	433; meter_logger.c	sprintf(debug_buffer, "\n\r");
000dda   0e00     movlw   0                	MOVLW	UPPER(__str_6)
000ddc   6e02     movwf   0x2, 0           	MOVWF	r0x02
000dde   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_6)
000de0   6e01     movwf   0x1, 0           	MOVWF	r0x01
000de2   0e16     movlw   0x16             	MOVLW	LOW(__str_6)
000de4   6e00     movwf   0, 0             	MOVWF	r0x00
000de6   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000de8   6e04     movwf   0x4, 0           	MOVWF	r0x04
000dea   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000dec   6e03     movwf   0x3, 0           	MOVWF	r0x03
000dee   0e80     movlw   0x80             	MOVLW	0x80
000df0   6e05     movwf   0x5, 0           	MOVWF	r0x05
000df2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000df4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000df6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000df8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000dfa   5000     movf    0, 0, 0          	MOVF	r0x00, W
000dfc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000dfe   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000e00   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e02   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000e04   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e06   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000e08   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e0a   ecdf     call    0x45be, 0        	CALL	_sprintf
000e0c   f022
000e0e   0e06     movlw   0x6              	MOVLW	0x06
000e10   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	434; meter_logger.c	usart_puts(debug_buffer);
000e12   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000e14   6e01     movwf   0x1, 0           	MOVWF	r0x01
000e16   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000e18   6e00     movwf   0, 0             	MOVWF	r0x00
000e1a   0e80     movlw   0x80             	MOVLW	0x80
000e1c   6e02     movwf   0x2, 0           	MOVWF	r0x02
000e1e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000e20   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e22   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000e24   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e26   5000     movf    0, 0, 0          	MOVF	r0x00, W
000e28   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e2a   ec54     call    0x4ca8, 0        	CALL	_usart_puts
000e2c   f026
000e2e   0e03     movlw   0x3              	MOVLW	0x03
000e30   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	436; meter_logger.c	if (fifo_in_use()) {
000e32   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
000e34   f027
000e36   6e00     movwf   0, 0             	MOVWF	r0x00
000e38   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
000e3a   f001
000e3c   5000     movf    0, 0, 0          	MOVF	r0x00, W
000e3e   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
000e40   e027     bz      0xe90            	BZ	_00161_DS_
                                           ;	.line	438; meter_logger.c	fsk_tx_enable();
000e42   ec32     call    0x5064, 0        	CALL	_fsk_tx_enable
000e44   f028
                                           _00157_DS_:
                                           ;	.line	439; meter_logger.c	while (fifo_get(&sub_cmd)) {
000e46   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000e48   6e01     movwf   0x1, 0           	MOVWF	r0x01
000e4a   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
000e4c   6e00     movwf   0, 0             	MOVWF	r0x00
000e4e   0e80     movlw   0x80             	MOVLW	0x80
000e50   6e02     movwf   0x2, 0           	MOVWF	r0x02
000e52   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000e54   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e56   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000e58   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e5a   5000     movf    0, 0, 0          	MOVF	r0x00, W
000e5c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e5e   ec68     call    0x40d0, 0        	CALL	_fifo_get
000e60   f020
000e62   6e00     movwf   0, 0             	MOVWF	r0x00
000e64   0e03     movlw   0x3              	MOVLW	0x03
000e66   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000e68   5000     movf    0, 0, 0          	MOVF	r0x00, W
000e6a   e00f     bz      0xe8a            	BZ	_00159_DS_
000e6c   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	440; meter_logger.c	fsk_tx_byte(sub_cmd);
000e6e   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000e70   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e72   ecc3     call    0x5186, 0        	CALL	_fsk_tx_byte
000e74   f028
000e76   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	441; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000e78   0e00     movlw   0                	MOVLW	0x00
000e7a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e7c   0e04     movlw   0x4              	MOVLW	0x04
000e7e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e80   ec7d     call    0x4afa, 0        	CALL	_sleep_ms
000e82   f025
000e84   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000e86   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000e88   d7de     bra     0xe46            	BRA	_00157_DS_
                                           _00159_DS_:
                                           ;	.line	443; meter_logger.c	fsk_tx_disable();
000e8a   ec8a     call    0x5314, 0        	CALL	_fsk_tx_disable
000e8c   f029
000e8e   d011     bra     0xeb2            	BRA	_00162_DS_
                                           _00161_DS_:
                                           ;	.line	451; meter_logger.c	fsk_tx_enable();
000e90   ec32     call    0x5064, 0        	CALL	_fsk_tx_enable
000e92   f028
                                           ;	.line	452; meter_logger.c	fsk_tx_byte(0x0d);
000e94   0e0d     movlw   0xd              	MOVLW	0x0d
000e96   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000e98   ecc3     call    0x5186, 0        	CALL	_fsk_tx_byte
000e9a   f028
000e9c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	453; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000e9e   0e00     movlw   0                	MOVLW	0x00
000ea0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ea2   0e04     movlw   0x4              	MOVLW	0x04
000ea4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ea6   ec7d     call    0x4afa, 0        	CALL	_sleep_ms
000ea8   f025
000eaa   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000eac   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	454; meter_logger.c	fsk_tx_disable();
000eae   ec8a     call    0x5314, 0        	CALL	_fsk_tx_disable
000eb0   f029
                                           _00162_DS_:
                                           ;	.line	459; meter_logger.c	fsk_rx_enable();
000eb2   ecc9     call    0x4d92, 0        	CALL	_fsk_rx_enable
000eb4   f026
                                           ;	.line	460; meter_logger.c	break;
000eb6   efa9     goto    0x152            	GOTO	_00168_DS_
000eb8   f000
                                           _00163_DS_:
                                           ;	.line	462; meter_logger.c	fsk_rx_disable();
000eba   eccc     call    0x5398, 0        	CALL	_fsk_rx_disable
000ebc   f029
                                           ;	.line	463; meter_logger.c	get_battery_level();
000ebe   ec9d     call    0x373a, 0        	CALL	_get_battery_level
000ec0   f01b
                                           ;	.line	464; meter_logger.c	fsk_rx_enable();
000ec2   ecc9     call    0x4d92, 0        	CALL	_fsk_rx_enable
000ec4   f026
                                           ;	.line	466; meter_logger.c	}
000ec6   efa9     goto    0x152            	GOTO	_00168_DS_
000ec8   f000
000eca   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger___debug2	code
                                           __debug2:
                                           ;	.line	4640; meter_logger.c	void _debug2() {
0047e4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0047e6   ffe5
0047e8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0047ea   ffd9
                                           ;	.line	4641; meter_logger.c	DEBUG2_PIN = 0x1;
0047ec   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
0047ee   0000     nop                      	nop
0047f0   0000     nop                      	nop
0047f2   0000     nop                      	nop
0047f4   0000     nop                      	nop
0047f6   0000     nop                      	nop
0047f8   0000     nop                      	nop
0047fa   0000     nop                      	nop
0047fc   0000     nop                      	nop
0047fe   0000     nop                      	nop
004800   0000     nop                      	nop
004802   0000     nop                      	nop
004804   0000     nop                      	nop
004806   0000     nop                      	nop
004808   0000     nop                      	nop
00480a   0000     nop                      	nop
00480c   0000     nop                      	nop
00480e   0000     nop                      	nop
004810   0000     nop                      	nop
004812   0000     nop                      	nop
004814   0000     nop                      	nop
004816   0000     nop                      	nop
004818   0000     nop                      	nop
00481a   0000     nop                      	nop
00481c   0000     nop                      	nop
00481e   0000     nop                      	nop
004820   0000     nop                      	nop
004822   0000     nop                      	nop
004824   0000     nop                      	nop
004826   0000     nop                      	nop
004828   0000     nop                      	nop
00482a   0000     nop                      	nop
00482c   0000     nop                      	nop
00482e   0000     nop                      	nop
004830   0000     nop                      	nop
004832   0000     nop                      	nop
004834   0000     nop                      	nop
004836   0000     nop                      	nop
004838   0000     nop                      	nop
00483a   0000     nop                      	nop
00483c   0000     nop                      	nop
00483e   0000     nop                      	nop
004840   0000     nop                      	nop
004842   0000     nop                      	nop
004844   0000     nop                      	nop
004846   0000     nop                      	nop
                                           	
                                           ;	.line	4689; meter_logger.c	DEBUG2_PIN = 0x0;
004848   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
00484a   0000     nop                      	nop
00484c   0000     nop                      	nop
00484e   0000     nop                      	nop
004850   0000     nop                      	nop
004852   0000     nop                      	nop
004854   0000     nop                      	nop
004856   0000     nop                      	nop
004858   0000     nop                      	nop
00485a   0000     nop                      	nop
00485c   0000     nop                      	nop
00485e   0000     nop                      	nop
004860   0000     nop                      	nop
004862   0000     nop                      	nop
004864   0000     nop                      	nop
004866   0000     nop                      	nop
004868   0000     nop                      	nop
00486a   0000     nop                      	nop
00486c   0000     nop                      	nop
00486e   0000     nop                      	nop
004870   0000     nop                      	nop
004872   0000     nop                      	nop
004874   0000     nop                      	nop
004876   0000     nop                      	nop
004878   0000     nop                      	nop
00487a   0000     nop                      	nop
00487c   0000     nop                      	nop
00487e   0000     nop                      	nop
004880   0000     nop                      	nop
004882   0000     nop                      	nop
004884   0000     nop                      	nop
004886   0000     nop                      	nop
004888   0000     nop                      	nop
00488a   0000     nop                      	nop
00488c   0000     nop                      	nop
00488e   0000     nop                      	nop
004890   0000     nop                      	nop
004892   0000     nop                      	nop
004894   0000     nop                      	nop
004896   0000     nop                      	nop
004898   0000     nop                      	nop
00489a   0000     nop                      	nop
00489c   0000     nop                      	nop
00489e   0000     nop                      	nop
0048a0   0000     nop                      	nop
0048a2   0000     nop                      	nop
                                           	
0048a4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0048a6   ffd9
0048a8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger___debug	code
                                           __debug:
                                           ;	.line	4540; meter_logger.c	void _debug() {
0048aa   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0048ac   ffe5
0048ae   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0048b0   ffd9
                                           ;	.line	4541; meter_logger.c	DEBUG_PIN = 0x1;
0048b2   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
0048b4   0000     nop                      	nop
0048b6   0000     nop                      	nop
0048b8   0000     nop                      	nop
0048ba   0000     nop                      	nop
0048bc   0000     nop                      	nop
0048be   0000     nop                      	nop
0048c0   0000     nop                      	nop
0048c2   0000     nop                      	nop
0048c4   0000     nop                      	nop
0048c6   0000     nop                      	nop
0048c8   0000     nop                      	nop
0048ca   0000     nop                      	nop
0048cc   0000     nop                      	nop
0048ce   0000     nop                      	nop
0048d0   0000     nop                      	nop
0048d2   0000     nop                      	nop
0048d4   0000     nop                      	nop
0048d6   0000     nop                      	nop
0048d8   0000     nop                      	nop
0048da   0000     nop                      	nop
0048dc   0000     nop                      	nop
0048de   0000     nop                      	nop
0048e0   0000     nop                      	nop
0048e2   0000     nop                      	nop
0048e4   0000     nop                      	nop
0048e6   0000     nop                      	nop
0048e8   0000     nop                      	nop
0048ea   0000     nop                      	nop
0048ec   0000     nop                      	nop
0048ee   0000     nop                      	nop
0048f0   0000     nop                      	nop
0048f2   0000     nop                      	nop
0048f4   0000     nop                      	nop
0048f6   0000     nop                      	nop
0048f8   0000     nop                      	nop
0048fa   0000     nop                      	nop
0048fc   0000     nop                      	nop
0048fe   0000     nop                      	nop
004900   0000     nop                      	nop
004902   0000     nop                      	nop
004904   0000     nop                      	nop
004906   0000     nop                      	nop
004908   0000     nop                      	nop
00490a   0000     nop                      	nop
00490c   0000     nop                      	nop
                                           	
                                           ;	.line	4589; meter_logger.c	DEBUG_PIN = 0x0;
00490e   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
004910   0000     nop                      	nop
004912   0000     nop                      	nop
004914   0000     nop                      	nop
004916   0000     nop                      	nop
004918   0000     nop                      	nop
00491a   0000     nop                      	nop
00491c   0000     nop                      	nop
00491e   0000     nop                      	nop
004920   0000     nop                      	nop
004922   0000     nop                      	nop
004924   0000     nop                      	nop
004926   0000     nop                      	nop
004928   0000     nop                      	nop
00492a   0000     nop                      	nop
00492c   0000     nop                      	nop
00492e   0000     nop                      	nop
004930   0000     nop                      	nop
004932   0000     nop                      	nop
004934   0000     nop                      	nop
004936   0000     nop                      	nop
004938   0000     nop                      	nop
00493a   0000     nop                      	nop
00493c   0000     nop                      	nop
00493e   0000     nop                      	nop
004940   0000     nop                      	nop
004942   0000     nop                      	nop
004944   0000     nop                      	nop
004946   0000     nop                      	nop
004948   0000     nop                      	nop
00494a   0000     nop                      	nop
00494c   0000     nop                      	nop
00494e   0000     nop                      	nop
004950   0000     nop                      	nop
004952   0000     nop                      	nop
004954   0000     nop                      	nop
004956   0000     nop                      	nop
004958   0000     nop                      	nop
00495a   0000     nop                      	nop
00495c   0000     nop                      	nop
00495e   0000     nop                      	nop
004960   0000     nop                      	nop
004962   0000     nop                      	nop
004964   0000     nop                      	nop
004966   0000     nop                      	nop
004968   0000     nop                      	nop
                                           	
00496a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00496c   ffd9
00496e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__flash_led	code
                                           _flash_led:
                                           ;	.line	4535; meter_logger.c	void flash_led(unsigned char ms) {
005258   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00525a   ffe5
00525c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00525e   ffd9
005260   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
005262   ffe5
005264   0e02     movlw   0x2              	MOVLW	0x02
005266   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
005268   f000
                                           ;	.line	4536; meter_logger.c	led_flash.timer = ms;
00526a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00526c   0105     movlb   0x5              	BANKSEL	(_led_flash + 1)
00526e   6f4d     movwf   0x4d, 0x1        	MOVWF	(_led_flash + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	4537; meter_logger.c	led_flash.state = LED_FLASH_RUN;
005270   6b4c     clrf    0x4c, 0x1        	CLRF	_led_flash, B
005272   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
005274   f000
005276   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005278   ffd9
00527a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__get_battery_level	code
                                           _get_battery_level:
                                           ;	.line	4504; meter_logger.c	unsigned int get_battery_level() {
00373a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00373c   ffe5
00373e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003740   ffd9
003742   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003744   ffe5
003746   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003748   ffe5
00374a   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00374c   ffe5
00374e   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003750   ffe5
003752   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003754   ffe5
003756   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003758   ffe5
00375a   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
00375c   ffe5
00375e   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
003760   ffe5
                                           ;	.line	4508; meter_logger.c	adc_open(ADC_CHN_4 , ADC_FOSC_64, ADC_CFG_5A, ADC_FRM_RJUST | ADC_INT_OFF | ADC_VCFG_VDD_VSS);
003762   0e80     movlw   0x80             	MOVLW	0x80
003764   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003766   0e0a     movlw   0xa              	MOVLW	0x0a
003768   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00376a   0e06     movlw   0x6              	MOVLW	0x06
00376c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00376e   0e04     movlw   0x4              	MOVLW	0x04
003770   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003772   ec16     call    0x4c2c, 0        	CALL	_adc_open
003774   f026
003776   0e04     movlw   0x4              	MOVLW	0x04
003778   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4510; meter_logger.c	adc_setchannel(ADC_CHN_4);
00377a   0e04     movlw   0x4              	MOVLW	0x04
00377c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00377e   ecde     call    0x4fbc, 0        	CALL	_adc_setchannel
003780   f027
003782   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	4511; meter_logger.c	adc_conv();
003784   ec0a     call    0x14, 0          	CALL	_adc_conv
003786   f000
                                           _01172_DS_:
                                           ;	.line	4512; meter_logger.c	while(adc_busy()) {
003788   ec02     call    0x5404, 0        	CALL	_adc_busy
00378a   f02a
00378c   6e00     movwf   0, 0             	MOVWF	r0x00
00378e   5000     movf    0, 0, 0          	MOVF	r0x00, W
003790   e1fb     bnz     0x3788           	BNZ	_01172_DS_
                                           ;	.line	4516; meter_logger.c	dev_id = get_dev_id();
003792   ec90     call    0x4d20, 0        	CALL	_get_dev_id
003794   f026
003796   6e00     movwf   0, 0             	MOVWF	r0x00
003798   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00379a   f001
                                           ;	.line	4517; meter_logger.c	if (dev_id == 0x1240) {
00379c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00379e   0a40     xorlw   0x40             	XORLW	0x40
0037a0   e103     bnz     0x37a8           	BNZ	_01195_DS_
0037a2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0037a4   0a12     xorlw   0x12             	XORLW	0x12
0037a6   e001     bz      0x37aa           	BZ	_01196_DS_
                                           _01195_DS_:
0037a8   d041     bra     0x382c           	BRA	_01179_DS_
                                           _01196_DS_:
                                           ;	.line	4519; meter_logger.c	v_level = (unsigned long)1000 * (unsigned long)adc_read() * (unsigned long)833/(unsigned long)93600;
0037aa   ecfa     call    0x53f4, 0        	CALL	_adc_read
0037ac   f029
0037ae   6e02     movwf   0x2, 0           	MOVWF	r0x02
0037b0   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0037b2   f003
0037b4   6ae8     clrf    0xe8, 0          	CLRF	WREG
0037b6   be03     btfsc   0x3, 0x7, 0      	BTFSC	r0x03, 7
0037b8   0eff     movlw   0xff             	MOVLW	0xff
0037ba   6e04     movwf   0x4, 0           	MOVWF	r0x04
0037bc   6e05     movwf   0x5, 0           	MOVWF	r0x05
0037be   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0037c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037c2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0037c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037c6   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0037c8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037ca   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0037cc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037ce   0e00     movlw   0                	MOVLW	0x00
0037d0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037d2   0e0c     movlw   0xc              	MOVLW	0x0c
0037d4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037d6   0eb5     movlw   0xb5             	MOVLW	0xb5
0037d8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037da   0ee8     movlw   0xe8             	MOVLW	0xe8
0037dc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037de   ecb2     call    0x3964, 0        	CALL	__mullong
0037e0   f01c
0037e2   6e02     movwf   0x2, 0           	MOVWF	r0x02
0037e4   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0037e6   f003
0037e8   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
0037ea   f004
0037ec   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
0037ee   f005
0037f0   0e08     movlw   0x8              	MOVLW	0x08
0037f2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0037f4   0e00     movlw   0                	MOVLW	0x00
0037f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037f8   0e01     movlw   0x1              	MOVLW	0x01
0037fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037fc   0e6d     movlw   0x6d             	MOVLW	0x6d
0037fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003800   0ea0     movlw   0xa0             	MOVLW	0xa0
003802   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003804   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003806   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003808   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00380a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00380c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00380e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003810   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003812   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003814   ec53     call    0x44a6, 0        	CALL	__divulong
003816   f022
003818   6e02     movwf   0x2, 0           	MOVWF	r0x02
00381a   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00381c   f003
00381e   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
003820   f004
003822   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
003824   f005
003826   0e08     movlw   0x8              	MOVLW	0x08
003828   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00382a   d054     bra     0x38d4           	BRA	_01180_DS_
                                           _01179_DS_:
                                           ;	.line	4521; meter_logger.c	else if (dev_id == 0x2a40) {
00382c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00382e   0a40     xorlw   0x40             	XORLW	0x40
003830   e103     bnz     0x3838           	BNZ	_01197_DS_
003832   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003834   0a2a     xorlw   0x2a             	XORLW	0x2a
003836   e001     bz      0x383a           	BZ	_01198_DS_
                                           _01197_DS_:
003838   d04b     bra     0x38d0           	BRA	_01176_DS_
                                           _01198_DS_:
                                           ;	.line	4523; meter_logger.c	v_level = (unsigned long)1000 * (unsigned long)(adc_read() >> 2) * (unsigned long)833/(unsigned long)93600;
00383a   ecfa     call    0x53f4, 0        	CALL	_adc_read
00383c   f029
00383e   6e00     movwf   0, 0             	MOVWF	r0x00
003840   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003842   f001
003844   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
003846   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
003848   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
00384a   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
00384c   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
00384e   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
003850   6ae8     clrf    0xe8, 0          	CLRF	WREG
003852   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
003854   0eff     movlw   0xff             	MOVLW	0xff
003856   6e04     movwf   0x4, 0           	MOVWF	r0x04
003858   6e05     movwf   0x5, 0           	MOVWF	r0x05
00385a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00385c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00385e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003860   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003862   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003864   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003866   5000     movf    0, 0, 0          	MOVF	r0x00, W
003868   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00386a   0e00     movlw   0                	MOVLW	0x00
00386c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00386e   0e0c     movlw   0xc              	MOVLW	0x0c
003870   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003872   0eb5     movlw   0xb5             	MOVLW	0xb5
003874   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003876   0ee8     movlw   0xe8             	MOVLW	0xe8
003878   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00387a   ecb2     call    0x3964, 0        	CALL	__mullong
00387c   f01c
00387e   6e00     movwf   0, 0             	MOVWF	r0x00
003880   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003882   f001
003884   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
003886   f004
003888   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
00388a   f005
00388c   0e08     movlw   0x8              	MOVLW	0x08
00388e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003890   0e00     movlw   0                	MOVLW	0x00
003892   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003894   0e01     movlw   0x1              	MOVLW	0x01
003896   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003898   0e6d     movlw   0x6d             	MOVLW	0x6d
00389a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00389c   0ea0     movlw   0xa0             	MOVLW	0xa0
00389e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038a0   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0038a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038a4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0038a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038a8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0038aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038ac   5000     movf    0, 0, 0          	MOVF	r0x00, W
0038ae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038b0   ec53     call    0x44a6, 0        	CALL	__divulong
0038b2   f022
0038b4   6e00     movwf   0, 0             	MOVWF	r0x00
0038b6   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0038b8   f001
0038ba   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
0038bc   f004
0038be   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
0038c0   f005
0038c2   0e08     movlw   0x8              	MOVLW	0x08
0038c4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0038c6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0038c8   6e02     movwf   0x2, 0           	MOVWF	r0x02
0038ca   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0038cc   6e03     movwf   0x3, 0           	MOVWF	r0x03
0038ce   d002     bra     0x38d4           	BRA	_01180_DS_
                                           _01176_DS_:
                                           ;	.line	4526; meter_logger.c	v_level = 0;
0038d0   6a02     clrf    0x2, 0           	CLRF	r0x02
0038d2   6a03     clrf    0x3, 0           	CLRF	r0x03
                                           _01180_DS_:
                                           ;	.line	4528; meter_logger.c	sprintf(debug_buffer, "Battery: %dmV\n\r", v_level);
0038d4   0e00     movlw   0                	MOVLW	UPPER(__str_8)
0038d6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0038d8   0e2f     movlw   0x2f             	MOVLW	HIGH(__str_8)
0038da   6e01     movwf   0x1, 0           	MOVWF	r0x01
0038dc   0e1e     movlw   0x1e             	MOVLW	LOW(__str_8)
0038de   6e00     movwf   0, 0             	MOVWF	r0x00
0038e0   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0038e2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0038e4   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0038e6   6e05     movwf   0x5, 0           	MOVWF	r0x05
0038e8   0e80     movlw   0x80             	MOVLW	0x80
0038ea   6e07     movwf   0x7, 0           	MOVWF	r0x07
0038ec   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0038ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038f0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0038f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038f4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0038f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038f8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0038fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038fc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0038fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003900   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003902   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003904   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003906   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003908   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00390a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00390c   ecdf     call    0x45be, 0        	CALL	_sprintf
00390e   f022
003910   0e08     movlw   0x8              	MOVLW	0x08
003912   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4529; meter_logger.c	usart_puts(debug_buffer);	
003914   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
003916   6e01     movwf   0x1, 0           	MOVWF	r0x01
003918   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00391a   6e00     movwf   0, 0             	MOVWF	r0x00
00391c   0e80     movlw   0x80             	MOVLW	0x80
00391e   6e04     movwf   0x4, 0           	MOVWF	r0x04
003920   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003922   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003924   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003926   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003928   5000     movf    0, 0, 0          	MOVF	r0x00, W
00392a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00392c   ec54     call    0x4ca8, 0        	CALL	_usart_puts
00392e   f026
003930   0e03     movlw   0x3              	MOVLW	0x03
003932   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4531; meter_logger.c	adc_close();
003934   ec0d     call    0x541a, 0        	CALL	_adc_close
003936   f02a
                                           ;	.line	4532; meter_logger.c	return v_level;
003938   c003     movff   0x3, 0xff3       	MOVFF	r0x03, PRODL
00393a   fff3
00393c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00393e   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003940   f007
003942   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003944   f006
003946   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003948   f005
00394a   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00394c   f004
00394e   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003950   f003
003952   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003954   f002
003956   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003958   f001
00395a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00395c   f000
00395e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003960   ffd9
003962   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_snoop	code
                                           _fifo_snoop:
                                           ;	.line	4481; meter_logger.c	unsigned char fifo_snoop(unsigned char *c, unsigned int pos) {
003f30   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003f32   ffe5
003f34   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003f36   ffd9
003f38   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003f3a   ffe5
003f3c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003f3e   ffe5
003f40   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003f42   ffe5
003f44   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003f46   ffe5
003f48   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003f4a   ffe5
003f4c   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003f4e   ffe5
003f50   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003f52   ffe5
003f54   0e02     movlw   0x2              	MOVLW	0x02
003f56   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003f58   f000
003f5a   0e03     movlw   0x3              	MOVLW	0x03
003f5c   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003f5e   f001
003f60   0e04     movlw   0x4              	MOVLW	0x04
003f62   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
003f64   f002
003f66   0e05     movlw   0x5              	MOVLW	0x05
003f68   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
003f6a   f003
003f6c   0e06     movlw   0x6              	MOVLW	0x06
003f6e   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
003f70   f004
                                           ;	.line	4482; meter_logger.c	if (fifo_in_use() > (pos)) {
003f72   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
003f74   f027
003f76   6e05     movwf   0x5, 0           	MOVWF	r0x05
003f78   cff3     movff   0xff3, 0x6       	MOVFF	PRODL, r0x06
003f7a   f006
003f7c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003f7e   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
003f80   e102     bnz     0x3f86           	BNZ	_01165_DS_
003f82   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003f84   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _01165_DS_:
003f86   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003f88   d091     bra     0x40ac           	BRA	_01155_DS_
003f8a   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
                                           ;	.line	4483; meter_logger.c	switch (fifo_tail/QUEUE_SIZE) {
003f8c   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
003f8e   6e05     movwf   0x5, 0           	MOVWF	r0x05
003f90   6a06     clrf    0x6, 0           	CLRF	r0x06
003f92   0e00     movlw   0                	MOVLW	0x00
003f94   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003f96   e102     bnz     0x3f9c           	BNZ	_01166_DS_
003f98   0e04     movlw   0x4              	MOVLW	0x04
003f9a   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
                                           _01166_DS_:
003f9c   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003f9e   d084     bra     0x40a8           	BRA	_01153_DS_
003fa0   6afa     clrf    0xfa, 0          	CLRF	PCLATH
003fa2   6afb     clrf    0xfb, 0          	CLRF	PCLATU
003fa4   3405     rlcf    0x5, 0, 0        	RLCF	r0x05, W
003fa6   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
003fa8   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
003faa   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
003fac   0bfc     andlw   0xfc             	ANDLW	0xfc
003fae   0fbe     addlw   0xbe             	ADDLW	LOW(_01167_DS_)
003fb0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003fb2   0e3f     movlw   0x3f             	MOVLW	HIGH(_01167_DS_)
003fb4   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
003fb6   0e00     movlw   0                	MOVLW	UPPER(_01167_DS_)
003fb8   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
003fba   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
003fbc   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01167_DS_:
003fbe   efe7     goto    0x3fce           	GOTO	_01149_DS_
003fc0   f01f
003fc2   ef03     goto    0x4006           	GOTO	_01150_DS_
003fc4   f020
003fc6   ef1f     goto    0x403e           	GOTO	_01151_DS_
003fc8   f020
003fca   ef3b     goto    0x4076           	GOTO	_01152_DS_
003fcc   f020
                                           _01149_DS_:
                                           ;	.line	4485; meter_logger.c	*c = fifo_buffer_0[(fifo_tail + pos) % QUEUE_SIZE];
003fce   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003fd0   0105     movlb   0x5              	BANKSEL	_fifo_tail
003fd2   2544     addwf   0x44, 0, 0x1     	ADDWF	_fifo_tail, W, B
003fd4   6e05     movwf   0x5, 0           	MOVWF	r0x05
003fd6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
003fd8   2145     addwfc  0x45, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
003fda   6e06     movwf   0x6, 0           	MOVWF	r0x06
003fdc   6a06     clrf    0x6, 0           	CLRF	r0x06
003fde   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
003fe0   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
003fe2   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
003fe4   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
003fe6   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
003fe8   ffe9
003fea   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
003fec   ffea
003fee   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
003ff0   f005
003ff2   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003ff4   ffe5
003ff6   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003ff8   ffe9
003ffa   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003ffc   fff3
003ffe   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004000   ecc1     call    0x5382, 0        	CALL	__gptrput1
004002   f029
                                           ;	.line	4486; meter_logger.c	break;
004004   d051     bra     0x40a8           	BRA	_01153_DS_
                                           _01150_DS_:
                                           ;	.line	4488; meter_logger.c	*c = fifo_buffer_1[(fifo_tail + pos) % QUEUE_SIZE];
004006   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004008   0105     movlb   0x5              	BANKSEL	_fifo_tail
00400a   2544     addwf   0x44, 0, 0x1     	ADDWF	_fifo_tail, W, B
00400c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00400e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
004010   2145     addwfc  0x45, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
004012   6e06     movwf   0x6, 0           	MOVWF	r0x06
004014   6a06     clrf    0x6, 0           	CLRF	r0x06
004016   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
004018   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
00401a   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
00401c   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
00401e   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
004020   ffe9
004022   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
004024   ffea
004026   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
004028   f005
00402a   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00402c   ffe5
00402e   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004030   ffe9
004032   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
004034   fff3
004036   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004038   ecc1     call    0x5382, 0        	CALL	__gptrput1
00403a   f029
                                           ;	.line	4489; meter_logger.c	break;
00403c   d035     bra     0x40a8           	BRA	_01153_DS_
                                           _01151_DS_:
                                           ;	.line	4491; meter_logger.c	*c = fifo_buffer_2[(fifo_tail + pos) % QUEUE_SIZE];
00403e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004040   0105     movlb   0x5              	BANKSEL	_fifo_tail
004042   2544     addwf   0x44, 0, 0x1     	ADDWF	_fifo_tail, W, B
004044   6e05     movwf   0x5, 0           	MOVWF	r0x05
004046   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
004048   2145     addwfc  0x45, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
00404a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00404c   6a06     clrf    0x6, 0           	CLRF	r0x06
00404e   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
004050   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
004052   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
004054   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
004056   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
004058   ffe9
00405a   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
00405c   ffea
00405e   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
004060   f005
004062   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004064   ffe5
004066   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004068   ffe9
00406a   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00406c   fff3
00406e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004070   ecc1     call    0x5382, 0        	CALL	__gptrput1
004072   f029
                                           ;	.line	4492; meter_logger.c	break;
004074   d019     bra     0x40a8           	BRA	_01153_DS_
                                           _01152_DS_:
004076   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4494; meter_logger.c	*c = fifo_buffer_3[(fifo_tail + pos) % QUEUE_SIZE];
004078   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
00407a   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
                                           ; removed redundant BANKSEL
00407c   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
00407e   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
004080   6a04     clrf    0x4, 0           	CLRF	r0x04
004082   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
004084   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
004086   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
004088   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
00408a   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
00408c   ffe9
00408e   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
004090   ffea
004092   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
004094   f003
004096   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004098   ffe5
00409a   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00409c   ffe9
00409e   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0040a0   fff3
0040a2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0040a4   ecc1     call    0x5382, 0        	CALL	__gptrput1
0040a6   f029
                                           _01153_DS_:
                                           ;	.line	4497; meter_logger.c	return 1;
0040a8   0e01     movlw   0x1              	MOVLW	0x01
0040aa   d001     bra     0x40ae           	BRA	_01157_DS_
                                           _01155_DS_:
                                           ;	.line	4500; meter_logger.c	return 0;
0040ac   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _01157_DS_:
0040ae   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
0040b0   f006
0040b2   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0040b4   f005
0040b6   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0040b8   f004
0040ba   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0040bc   f003
0040be   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0040c0   f002
0040c2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0040c4   f001
0040c6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0040c8   f000
0040ca   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0040cc   ffd9
0040ce   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_get	code
                                           _fifo_get:
                                           ;	.line	4453; meter_logger.c	unsigned char fifo_get(unsigned char *c) {
0040d0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0040d2   ffe5
0040d4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0040d6   ffd9
0040d8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0040da   ffe5
0040dc   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0040de   ffe5
0040e0   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0040e2   ffe5
0040e4   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0040e6   ffe5
0040e8   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0040ea   ffe5
0040ec   0e02     movlw   0x2              	MOVLW	0x02
0040ee   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0040f0   f000
0040f2   0e03     movlw   0x3              	MOVLW	0x03
0040f4   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0040f6   f001
0040f8   0e04     movlw   0x4              	MOVLW	0x04
0040fa   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
0040fc   f002
                                           ;	.line	4454; meter_logger.c	if (fifo_in_use() != 0) {
0040fe   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
004100   f027
004102   6e03     movwf   0x3, 0           	MOVWF	r0x03
004104   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
004106   f004
004108   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00410a   1004     iorwf   0x4, 0, 0        	IORWF	r0x04, W
00410c   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
00410e   d091     bra     0x4232           	BRA	_01124_DS_
004110   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
                                           ;	.line	4455; meter_logger.c	switch (fifo_tail/QUEUE_SIZE) {
004112   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
004114   6e03     movwf   0x3, 0           	MOVWF	r0x03
004116   6a04     clrf    0x4, 0           	CLRF	r0x04
004118   0e00     movlw   0                	MOVLW	0x00
00411a   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
00411c   e102     bnz     0x4122           	BNZ	_01137_DS_
00411e   0e04     movlw   0x4              	MOVLW	0x04
004120   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _01137_DS_:
004122   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
004124   d076     bra     0x4212           	BRA	_01120_DS_
004126   6afa     clrf    0xfa, 0          	CLRF	PCLATH
004128   6afb     clrf    0xfb, 0          	CLRF	PCLATU
00412a   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
00412c   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00412e   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
004130   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
004132   0bfc     andlw   0xfc             	ANDLW	0xfc
004134   0f44     addlw   0x44             	ADDLW	LOW(_01138_DS_)
004136   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004138   0e41     movlw   0x41             	MOVLW	HIGH(_01138_DS_)
00413a   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
00413c   0e00     movlw   0                	MOVLW	UPPER(_01138_DS_)
00413e   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
004140   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
004142   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01138_DS_:
004144   efaa     goto    0x4154           	GOTO	_01116_DS_
004146   f020
004148   efc2     goto    0x4184           	GOTO	_01117_DS_
00414a   f020
00414c   efda     goto    0x41b4           	GOTO	_01118_DS_
00414e   f020
004150   eff2     goto    0x41e4           	GOTO	_01119_DS_
004152   f020
                                           _01116_DS_:
004154   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4457; meter_logger.c	*c = fifo_buffer_0[fifo_tail % QUEUE_SIZE];
004156   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
004158   6e03     movwf   0x3, 0           	MOVWF	r0x03
00415a   6a04     clrf    0x4, 0           	CLRF	r0x04
00415c   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
00415e   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
004160   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
004162   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
004164   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
004166   ffe9
004168   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
00416a   ffea
00416c   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
00416e   f003
004170   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004172   ffe5
004174   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004176   ffe9
004178   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00417a   fff3
00417c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00417e   ecc1     call    0x5382, 0        	CALL	__gptrput1
004180   f029
                                           ;	.line	4458; meter_logger.c	break;
004182   d047     bra     0x4212           	BRA	_01120_DS_
                                           _01117_DS_:
004184   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4460; meter_logger.c	*c = fifo_buffer_1[fifo_tail % QUEUE_SIZE];
004186   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
004188   6e03     movwf   0x3, 0           	MOVWF	r0x03
00418a   6a04     clrf    0x4, 0           	CLRF	r0x04
00418c   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
00418e   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
004190   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
004192   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
004194   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
004196   ffe9
004198   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
00419a   ffea
00419c   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
00419e   f003
0041a0   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0041a2   ffe5
0041a4   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0041a6   ffe9
0041a8   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0041aa   fff3
0041ac   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0041ae   ecc1     call    0x5382, 0        	CALL	__gptrput1
0041b0   f029
                                           ;	.line	4461; meter_logger.c	break;
0041b2   d02f     bra     0x4212           	BRA	_01120_DS_
                                           _01118_DS_:
0041b4   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4463; meter_logger.c	*c = fifo_buffer_2[fifo_tail % QUEUE_SIZE];
0041b6   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
0041b8   6e03     movwf   0x3, 0           	MOVWF	r0x03
0041ba   6a04     clrf    0x4, 0           	CLRF	r0x04
0041bc   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
0041be   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
0041c0   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
0041c2   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0041c4   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0041c6   ffe9
0041c8   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0041ca   ffea
0041cc   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
0041ce   f003
0041d0   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0041d2   ffe5
0041d4   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0041d6   ffe9
0041d8   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0041da   fff3
0041dc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0041de   ecc1     call    0x5382, 0        	CALL	__gptrput1
0041e0   f029
                                           ;	.line	4464; meter_logger.c	break;
0041e2   d017     bra     0x4212           	BRA	_01120_DS_
                                           _01119_DS_:
0041e4   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4466; meter_logger.c	*c = fifo_buffer_3[fifo_tail % QUEUE_SIZE];
0041e6   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
0041e8   6e03     movwf   0x3, 0           	MOVWF	r0x03
0041ea   6a04     clrf    0x4, 0           	CLRF	r0x04
0041ec   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
0041ee   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
0041f0   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
0041f2   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0041f4   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0041f6   ffe9
0041f8   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0041fa   ffea
0041fc   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
0041fe   f003
004200   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004202   ffe5
004204   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004206   ffe9
004208   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00420a   fff3
00420c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00420e   ecc1     call    0x5382, 0        	CALL	__gptrput1
004210   f029
                                           _01120_DS_:
004212   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4469; meter_logger.c	fifo_tail++;
004214   3f44     incfsz  0x44, 0x1, 0x1   	INCFSZ	_fifo_tail, F, B
004216   d001     bra     0x421a           	BRA	_11213_DS_
                                           ; removed redundant BANKSEL
004218   2b45     incf    0x45, 0x1, 0x1   	INCF	(_fifo_tail + 1), F, B
                                           _11213_DS_:
00421a   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4471; meter_logger.c	if (fifo_tail == QUEUE_SIZE_COMBINED) {
00421c   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
00421e   e103     bnz     0x4226           	BNZ	_01143_DS_
                                           ; removed redundant BANKSEL
004220   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
004222   0a04     xorlw   0x4              	XORLW	0x04
004224   e001     bz      0x4228           	BZ	_01144_DS_
                                           _01143_DS_:
004226   d003     bra     0x422e           	BRA	_01122_DS_
                                           _01144_DS_:
004228   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4472; meter_logger.c	fifo_tail = 0;
00422a   6b44     clrf    0x44, 0x1        	CLRF	_fifo_tail, B
                                           ; removed redundant BANKSEL
00422c   6b45     clrf    0x45, 0x1        	CLRF	(_fifo_tail + 1), B
                                           _01122_DS_:
                                           ;	.line	4474; meter_logger.c	return 1;
00422e   0e01     movlw   0x1              	MOVLW	0x01
004230   d001     bra     0x4234           	BRA	_01126_DS_
                                           _01124_DS_:
                                           ;	.line	4477; meter_logger.c	return 0;
004232   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _01126_DS_:
004234   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004236   f004
004238   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00423a   f003
00423c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00423e   f002
004240   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004242   f001
004244   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004246   f000
004248   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00424a   ffd9
00424c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_put	code
                                           _fifo_put:
                                           ;	.line	4425; meter_logger.c	unsigned char fifo_put(unsigned char c) {
004388   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00438a   ffe5
00438c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00438e   ffd9
004390   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004392   ffe5
004394   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004396   ffe5
004398   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00439a   ffe5
00439c   0e02     movlw   0x2              	MOVLW	0x02
00439e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0043a0   f000
                                           ;	.line	4426; meter_logger.c	if (fifo_in_use() != QUEUE_SIZE_COMBINED) {
0043a2   ecfb     call    0x4ff6, 0        	CALL	_fifo_in_use
0043a4   f027
0043a6   6e01     movwf   0x1, 0           	MOVWF	r0x01
0043a8   cff3     movff   0xff3, 0x2       	MOVFF	PRODL, r0x02
0043aa   f002
0043ac   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0043ae   e104     bnz     0x43b8           	BNZ	_01103_DS_
0043b0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0043b2   0a04     xorlw   0x4              	XORLW	0x04
0043b4   e101     bnz     0x43b8           	BNZ	_01103_DS_
0043b6   d06d     bra     0x4492           	BRA	_01089_DS_
                                           _01103_DS_:
0043b8   0105     movlb   0x5              	BANKSEL	(_fifo_head + 1)
                                           ;	.line	4427; meter_logger.c	switch (fifo_head/QUEUE_SIZE) {
0043ba   5143     movf    0x43, 0, 0x1     	MOVF	(_fifo_head + 1), W, B
0043bc   6e01     movwf   0x1, 0           	MOVWF	r0x01
0043be   6a02     clrf    0x2, 0           	CLRF	r0x02
0043c0   0e00     movlw   0                	MOVLW	0x00
0043c2   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
0043c4   e102     bnz     0x43ca           	BNZ	_01104_DS_
0043c6   0e04     movlw   0x4              	MOVLW	0x04
0043c8   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
                                           _01104_DS_:
0043ca   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0043cc   d052     bra     0x4472           	BRA	_01085_DS_
0043ce   6afa     clrf    0xfa, 0          	CLRF	PCLATH
0043d0   6afb     clrf    0xfb, 0          	CLRF	PCLATU
0043d2   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
0043d4   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0043d6   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
0043d8   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0043da   0bfc     andlw   0xfc             	ANDLW	0xfc
0043dc   0fec     addlw   0xec             	ADDLW	LOW(_01105_DS_)
0043de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0043e0   0e43     movlw   0x43             	MOVLW	HIGH(_01105_DS_)
0043e2   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
0043e4   0e00     movlw   0                	MOVLW	UPPER(_01105_DS_)
0043e6   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0043e8   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0043ea   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01105_DS_:
0043ec   effe     goto    0x43fc           	GOTO	_01081_DS_
0043ee   f021
0043f0   ef0d     goto    0x441a           	GOTO	_01082_DS_
0043f2   f022
0043f4   ef1c     goto    0x4438           	GOTO	_01083_DS_
0043f6   f022
0043f8   ef2b     goto    0x4456           	GOTO	_01084_DS_
0043fa   f022
                                           _01081_DS_:
0043fc   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4429; meter_logger.c	fifo_buffer_0[fifo_head % QUEUE_SIZE] = c;
0043fe   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
004400   6e01     movwf   0x1, 0           	MOVWF	r0x01
004402   6a02     clrf    0x2, 0           	CLRF	r0x02
004404   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
004406   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
004408   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
00440a   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00440c   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
00440e   ffe9
004410   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
004412   ffea
004414   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
004416   ffef
                                           ;	.line	4430; meter_logger.c	break;
004418   d02c     bra     0x4472           	BRA	_01085_DS_
                                           _01082_DS_:
00441a   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4432; meter_logger.c	fifo_buffer_1[fifo_head % QUEUE_SIZE] = c;
00441c   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
00441e   6e01     movwf   0x1, 0           	MOVWF	r0x01
004420   6a02     clrf    0x2, 0           	CLRF	r0x02
004422   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
004424   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
004426   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
004428   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00442a   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
00442c   ffe9
00442e   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
004430   ffea
004432   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
004434   ffef
                                           ;	.line	4433; meter_logger.c	break;
004436   d01d     bra     0x4472           	BRA	_01085_DS_
                                           _01083_DS_:
004438   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4435; meter_logger.c	fifo_buffer_2[fifo_head % QUEUE_SIZE] = c;
00443a   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
00443c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00443e   6a02     clrf    0x2, 0           	CLRF	r0x02
004440   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
004442   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
004444   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
004446   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
004448   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
00444a   ffe9
00444c   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
00444e   ffea
004450   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
004452   ffef
                                           ;	.line	4436; meter_logger.c	break;
004454   d00e     bra     0x4472           	BRA	_01085_DS_
                                           _01084_DS_:
004456   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4438; meter_logger.c	fifo_buffer_3[fifo_head % QUEUE_SIZE] = c;
004458   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
00445a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00445c   6a02     clrf    0x2, 0           	CLRF	r0x02
00445e   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
004460   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
004462   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
004464   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
004466   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
004468   ffe9
00446a   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
00446c   ffea
00446e   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
004470   ffef
                                           _01085_DS_:
004472   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4441; meter_logger.c	fifo_head++;
004474   3f42     incfsz  0x42, 0x1, 0x1   	INCFSZ	_fifo_head, F, B
004476   d001     bra     0x447a           	BRA	_21214_DS_
                                           ; removed redundant BANKSEL
004478   2b43     incf    0x43, 0x1, 0x1   	INCF	(_fifo_head + 1), F, B
                                           _21214_DS_:
00447a   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4443; meter_logger.c	if (fifo_head == QUEUE_SIZE_COMBINED) {
00447c   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
00447e   e103     bnz     0x4486           	BNZ	_01110_DS_
                                           ; removed redundant BANKSEL
004480   5143     movf    0x43, 0, 0x1     	MOVF	(_fifo_head + 1), W, B
004482   0a04     xorlw   0x4              	XORLW	0x04
004484   e001     bz      0x4488           	BZ	_01111_DS_
                                           _01110_DS_:
004486   d003     bra     0x448e           	BRA	_01087_DS_
                                           _01111_DS_:
004488   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4444; meter_logger.c	fifo_head = 0;
00448a   6b42     clrf    0x42, 0x1        	CLRF	_fifo_head, B
                                           ; removed redundant BANKSEL
00448c   6b43     clrf    0x43, 0x1        	CLRF	(_fifo_head + 1), B
                                           _01087_DS_:
                                           ;	.line	4446; meter_logger.c	return 1;
00448e   0e01     movlw   0x1              	MOVLW	0x01
004490   d001     bra     0x4494           	BRA	_01091_DS_
                                           _01089_DS_:
                                           ;	.line	4449; meter_logger.c	return 0;
004492   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _01091_DS_:
004494   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004496   f002
004498   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00449a   f001
00449c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00449e   f000
0044a0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0044a2   ffd9
0044a4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_in_use	code
                                           _fifo_in_use:
                                           ;	.line	4421; meter_logger.c	unsigned int fifo_in_use() {
004ff6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004ff8   ffe5
004ffa   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004ffc   ffd9
004ffe   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
005000   ffe5
005002   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
005004   ffe5
005006   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4422; meter_logger.c	return fifo_head - fifo_tail;
005008   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
00500a   0105     movlb   0x5              	BANKSEL	_fifo_head
00500c   5d42     subwf   0x42, 0, 0x1     	SUBWF	_fifo_head, W, B
00500e   6e00     movwf   0, 0             	MOVWF	r0x00
005010   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
005012   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
005014   0105     movlb   0x5              	BANKSEL	(_fifo_head + 1)
005016   5943     subwfb  0x43, 0, 0x1     	SUBWFB	(_fifo_head + 1), W, B
005018   6e01     movwf   0x1, 0           	MOVWF	r0x01
00501a   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00501c   fff3
00501e   5000     movf    0, 0, 0          	MOVF	r0x00, W
005020   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
005022   f001
005024   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
005026   f000
005028   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00502a   ffd9
00502c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_byte	code
                                           _fsk_tx_byte:
                                           ;	.line	4413; meter_logger.c	void fsk_tx_byte(unsigned char c) {
005186   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005188   ffe5
00518a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00518c   ffd9
00518e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
005190   ffe5
005192   0e02     movlw   0x2              	MOVLW	0x02
005194   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
005196   f000
                                           ;	.line	4414; meter_logger.c	fsk_proto.data = c;
005198   5000     movf    0, 0, 0          	MOVF	r0x00, W
00519a   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
00519c   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
                                           ;	.line	4415; meter_logger.c	fsk_proto.data_len = 8;
00519e   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
0051a0   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
                                           _01068_DS_:
0051a2   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	4416; meter_logger.c	while (fsk_proto.data_len) {
0051a4   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
0051a6   e1fd     bnz     0x51a2           	BNZ	_01068_DS_
0051a8   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0051aa   f000
0051ac   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0051ae   ffd9
0051b0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__send_fsk_low	code
                                           _send_fsk_low:
                                           ;	.line	2960; meter_logger.c	void send_fsk_low(void) {
001a8c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
001a8e   ffe5
001a90   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
001a92   ffd9
                                           ;	.line	2961; meter_logger.c	PWM_PIN = 1;
001a94   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001a96   0000     nop                      	nop
001a98   0000     nop                      	nop
001a9a   0000     nop                      	nop
001a9c   0000     nop                      	nop
001a9e   0000     nop                      	nop
001aa0   0000     nop                      	nop
001aa2   0000     nop                      	nop
001aa4   0000     nop                      	nop
001aa6   0000     nop                      	nop
001aa8   0000     nop                      	nop
001aaa   0000     nop                      	nop
001aac   0000     nop                      	nop
001aae   0000     nop                      	nop
001ab0   0000     nop                      	nop
001ab2   0000     nop                      	nop
001ab4   0000     nop                      	nop
001ab6   0000     nop                      	nop
001ab8   0000     nop                      	nop
001aba   0000     nop                      	nop
001abc   0000     nop                      	nop
001abe   0000     nop                      	nop
001ac0   0000     nop                      	nop
001ac2   0000     nop                      	nop
001ac4   0000     nop                      	nop
001ac6   0000     nop                      	nop
001ac8   0000     nop                      	nop
001aca   0000     nop                      	nop
001acc   0000     nop                      	nop
001ace   0000     nop                      	nop
001ad0   0000     nop                      	nop
001ad2   0000     nop                      	nop
001ad4   0000     nop                      	nop
001ad6   0000     nop                      	nop
001ad8   0000     nop                      	nop
001ada   0000     nop                      	nop
001adc   0000     nop                      	nop
001ade   0000     nop                      	nop
001ae0   0000     nop                      	nop
001ae2   0000     nop                      	nop
001ae4   0000     nop                      	nop
001ae6   0000     nop                      	nop
001ae8   0000     nop                      	nop
001aea   0000     nop                      	nop
001aec   0000     nop                      	nop
001aee   0000     nop                      	nop
001af0   0000     nop                      	nop
001af2   0000     nop                      	nop
001af4   0000     nop                      	nop
001af6   0000     nop                      	nop
001af8   0000     nop                      	nop
001afa   0000     nop                      	nop
001afc   0000     nop                      	nop
001afe   0000     nop                      	nop
001b00   0000     nop                      	nop
001b02   0000     nop                      	nop
001b04   0000     nop                      	nop
001b06   0000     nop                      	nop
001b08   0000     nop                      	nop
001b0a   0000     nop                      	nop
001b0c   0000     nop                      	nop
001b0e   0000     nop                      	nop
001b10   0000     nop                      	nop
001b12   0000     nop                      	nop
001b14   0000     nop                      	nop
001b16   0000     nop                      	nop
001b18   0000     nop                      	nop
001b1a   0000     nop                      	nop
001b1c   0000     nop                      	nop
001b1e   0000     nop                      	nop
001b20   0000     nop                      	nop
001b22   0000     nop                      	nop
001b24   0000     nop                      	nop
001b26   0000     nop                      	nop
001b28   0000     nop                      	nop
001b2a   0000     nop                      	nop
001b2c   0000     nop                      	nop
001b2e   0000     nop                      	nop
001b30   0000     nop                      	nop
001b32   0000     nop                      	nop
001b34   0000     nop                      	nop
001b36   0000     nop                      	nop
001b38   0000     nop                      	nop
001b3a   0000     nop                      	nop
001b3c   0000     nop                      	nop
001b3e   0000     nop                      	nop
001b40   0000     nop                      	nop
001b42   0000     nop                      	nop
001b44   0000     nop                      	nop
001b46   0000     nop                      	nop
001b48   0000     nop                      	nop
001b4a   0000     nop                      	nop
001b4c   0000     nop                      	nop
001b4e   0000     nop                      	nop
001b50   0000     nop                      	nop
001b52   0000     nop                      	nop
001b54   0000     nop                      	nop
001b56   0000     nop                      	nop
001b58   0000     nop                      	nop
001b5a   0000     nop                      	nop
001b5c   0000     nop                      	nop
001b5e   0000     nop                      	nop
001b60   0000     nop                      	nop
001b62   0000     nop                      	nop
001b64   0000     nop                      	nop
001b66   0000     nop                      	nop
001b68   0000     nop                      	nop
001b6a   0000     nop                      	nop
001b6c   0000     nop                      	nop
001b6e   0000     nop                      	nop
001b70   0000     nop                      	nop
001b72   0000     nop                      	nop
001b74   0000     nop                      	nop
001b76   0000     nop                      	nop
001b78   0000     nop                      	nop
001b7a   0000     nop                      	nop
001b7c   0000     nop                      	nop
001b7e   0000     nop                      	nop
001b80   0000     nop                      	nop
001b82   0000     nop                      	nop
001b84   0000     nop                      	nop
001b86   0000     nop                      	nop
001b88   0000     nop                      	nop
001b8a   0000     nop                      	nop
001b8c   0000     nop                      	nop
001b8e   0000     nop                      	nop
001b90   0000     nop                      	nop
001b92   0000     nop                      	nop
001b94   0000     nop                      	nop
001b96   0000     nop                      	nop
001b98   0000     nop                      	nop
001b9a   0000     nop                      	nop
001b9c   0000     nop                      	nop
001b9e   0000     nop                      	nop
001ba0   0000     nop                      	nop
001ba2   0000     nop                      	nop
001ba4   0000     nop                      	nop
001ba6   0000     nop                      	nop
001ba8   0000     nop                      	nop
001baa   0000     nop                      	nop
001bac   0000     nop                      	nop
001bae   0000     nop                      	nop
001bb0   0000     nop                      	nop
001bb2   0000     nop                      	nop
001bb4   0000     nop                      	nop
001bb6   0000     nop                      	nop
001bb8   0000     nop                      	nop
001bba   0000     nop                      	nop
001bbc   0000     nop                      	nop
001bbe   0000     nop                      	nop
001bc0   0000     nop                      	nop
001bc2   0000     nop                      	nop
001bc4   0000     nop                      	nop
001bc6   0000     nop                      	nop
001bc8   0000     nop                      	nop
001bca   0000     nop                      	nop
001bcc   0000     nop                      	nop
001bce   0000     nop                      	nop
001bd0   0000     nop                      	nop
001bd2   0000     nop                      	nop
001bd4   0000     nop                      	nop
001bd6   0000     nop                      	nop
001bd8   0000     nop                      	nop
001bda   0000     nop                      	nop
001bdc   0000     nop                      	nop
001bde   0000     nop                      	nop
001be0   0000     nop                      	nop
001be2   0000     nop                      	nop
001be4   0000     nop                      	nop
001be6   0000     nop                      	nop
001be8   0000     nop                      	nop
001bea   0000     nop                      	nop
001bec   0000     nop                      	nop
001bee   0000     nop                      	nop
001bf0   0000     nop                      	nop
001bf2   0000     nop                      	nop
001bf4   0000     nop                      	nop
001bf6   0000     nop                      	nop
001bf8   0000     nop                      	nop
001bfa   0000     nop                      	nop
001bfc   0000     nop                      	nop
001bfe   0000     nop                      	nop
001c00   0000     nop                      	nop
001c02   0000     nop                      	nop
001c04   0000     nop                      	nop
001c06   0000     nop                      	nop
001c08   0000     nop                      	nop
001c0a   0000     nop                      	nop
001c0c   0000     nop                      	nop
001c0e   0000     nop                      	nop
001c10   0000     nop                      	nop
001c12   0000     nop                      	nop
001c14   0000     nop                      	nop
001c16   0000     nop                      	nop
001c18   0000     nop                      	nop
001c1a   0000     nop                      	nop
001c1c   0000     nop                      	nop
001c1e   0000     nop                      	nop
001c20   0000     nop                      	nop
001c22   0000     nop                      	nop
001c24   0000     nop                      	nop
001c26   0000     nop                      	nop
001c28   0000     nop                      	nop
001c2a   0000     nop                      	nop
001c2c   0000     nop                      	nop
                                           	
                                           ;	.line	3168; meter_logger.c	PWM_PIN = 0;
001c2e   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001c30   0000     nop                      	nop
001c32   0000     nop                      	nop
001c34   0000     nop                      	nop
001c36   0000     nop                      	nop
001c38   0000     nop                      	nop
001c3a   0000     nop                      	nop
001c3c   0000     nop                      	nop
001c3e   0000     nop                      	nop
001c40   0000     nop                      	nop
001c42   0000     nop                      	nop
001c44   0000     nop                      	nop
001c46   0000     nop                      	nop
001c48   0000     nop                      	nop
001c4a   0000     nop                      	nop
001c4c   0000     nop                      	nop
001c4e   0000     nop                      	nop
001c50   0000     nop                      	nop
001c52   0000     nop                      	nop
001c54   0000     nop                      	nop
001c56   0000     nop                      	nop
001c58   0000     nop                      	nop
001c5a   0000     nop                      	nop
001c5c   0000     nop                      	nop
001c5e   0000     nop                      	nop
001c60   0000     nop                      	nop
001c62   0000     nop                      	nop
001c64   0000     nop                      	nop
001c66   0000     nop                      	nop
001c68   0000     nop                      	nop
001c6a   0000     nop                      	nop
001c6c   0000     nop                      	nop
001c6e   0000     nop                      	nop
001c70   0000     nop                      	nop
001c72   0000     nop                      	nop
001c74   0000     nop                      	nop
001c76   0000     nop                      	nop
001c78   0000     nop                      	nop
001c7a   0000     nop                      	nop
001c7c   0000     nop                      	nop
001c7e   0000     nop                      	nop
001c80   0000     nop                      	nop
001c82   0000     nop                      	nop
001c84   0000     nop                      	nop
001c86   0000     nop                      	nop
001c88   0000     nop                      	nop
001c8a   0000     nop                      	nop
001c8c   0000     nop                      	nop
001c8e   0000     nop                      	nop
001c90   0000     nop                      	nop
001c92   0000     nop                      	nop
001c94   0000     nop                      	nop
001c96   0000     nop                      	nop
001c98   0000     nop                      	nop
001c9a   0000     nop                      	nop
001c9c   0000     nop                      	nop
001c9e   0000     nop                      	nop
001ca0   0000     nop                      	nop
001ca2   0000     nop                      	nop
001ca4   0000     nop                      	nop
001ca6   0000     nop                      	nop
001ca8   0000     nop                      	nop
001caa   0000     nop                      	nop
001cac   0000     nop                      	nop
001cae   0000     nop                      	nop
001cb0   0000     nop                      	nop
001cb2   0000     nop                      	nop
001cb4   0000     nop                      	nop
001cb6   0000     nop                      	nop
001cb8   0000     nop                      	nop
001cba   0000     nop                      	nop
001cbc   0000     nop                      	nop
001cbe   0000     nop                      	nop
001cc0   0000     nop                      	nop
001cc2   0000     nop                      	nop
001cc4   0000     nop                      	nop
001cc6   0000     nop                      	nop
001cc8   0000     nop                      	nop
001cca   0000     nop                      	nop
001ccc   0000     nop                      	nop
001cce   0000     nop                      	nop
001cd0   0000     nop                      	nop
001cd2   0000     nop                      	nop
001cd4   0000     nop                      	nop
001cd6   0000     nop                      	nop
001cd8   0000     nop                      	nop
001cda   0000     nop                      	nop
001cdc   0000     nop                      	nop
001cde   0000     nop                      	nop
001ce0   0000     nop                      	nop
001ce2   0000     nop                      	nop
001ce4   0000     nop                      	nop
001ce6   0000     nop                      	nop
001ce8   0000     nop                      	nop
001cea   0000     nop                      	nop
001cec   0000     nop                      	nop
001cee   0000     nop                      	nop
001cf0   0000     nop                      	nop
001cf2   0000     nop                      	nop
001cf4   0000     nop                      	nop
001cf6   0000     nop                      	nop
001cf8   0000     nop                      	nop
001cfa   0000     nop                      	nop
001cfc   0000     nop                      	nop
001cfe   0000     nop                      	nop
001d00   0000     nop                      	nop
001d02   0000     nop                      	nop
001d04   0000     nop                      	nop
001d06   0000     nop                      	nop
001d08   0000     nop                      	nop
001d0a   0000     nop                      	nop
001d0c   0000     nop                      	nop
001d0e   0000     nop                      	nop
001d10   0000     nop                      	nop
001d12   0000     nop                      	nop
001d14   0000     nop                      	nop
001d16   0000     nop                      	nop
001d18   0000     nop                      	nop
001d1a   0000     nop                      	nop
001d1c   0000     nop                      	nop
001d1e   0000     nop                      	nop
001d20   0000     nop                      	nop
001d22   0000     nop                      	nop
001d24   0000     nop                      	nop
001d26   0000     nop                      	nop
001d28   0000     nop                      	nop
001d2a   0000     nop                      	nop
001d2c   0000     nop                      	nop
001d2e   0000     nop                      	nop
001d30   0000     nop                      	nop
001d32   0000     nop                      	nop
001d34   0000     nop                      	nop
001d36   0000     nop                      	nop
001d38   0000     nop                      	nop
001d3a   0000     nop                      	nop
001d3c   0000     nop                      	nop
001d3e   0000     nop                      	nop
001d40   0000     nop                      	nop
001d42   0000     nop                      	nop
001d44   0000     nop                      	nop
001d46   0000     nop                      	nop
001d48   0000     nop                      	nop
001d4a   0000     nop                      	nop
001d4c   0000     nop                      	nop
001d4e   0000     nop                      	nop
001d50   0000     nop                      	nop
001d52   0000     nop                      	nop
001d54   0000     nop                      	nop
001d56   0000     nop                      	nop
001d58   0000     nop                      	nop
001d5a   0000     nop                      	nop
001d5c   0000     nop                      	nop
001d5e   0000     nop                      	nop
001d60   0000     nop                      	nop
001d62   0000     nop                      	nop
001d64   0000     nop                      	nop
001d66   0000     nop                      	nop
001d68   0000     nop                      	nop
001d6a   0000     nop                      	nop
001d6c   0000     nop                      	nop
001d6e   0000     nop                      	nop
001d70   0000     nop                      	nop
001d72   0000     nop                      	nop
001d74   0000     nop                      	nop
001d76   0000     nop                      	nop
001d78   0000     nop                      	nop
001d7a   0000     nop                      	nop
001d7c   0000     nop                      	nop
001d7e   0000     nop                      	nop
001d80   0000     nop                      	nop
001d82   0000     nop                      	nop
001d84   0000     nop                      	nop
001d86   0000     nop                      	nop
001d88   0000     nop                      	nop
001d8a   0000     nop                      	nop
001d8c   0000     nop                      	nop
001d8e   0000     nop                      	nop
001d90   0000     nop                      	nop
001d92   0000     nop                      	nop
001d94   0000     nop                      	nop
001d96   0000     nop                      	nop
001d98   0000     nop                      	nop
001d9a   0000     nop                      	nop
001d9c   0000     nop                      	nop
001d9e   0000     nop                      	nop
001da0   0000     nop                      	nop
001da2   0000     nop                      	nop
001da4   0000     nop                      	nop
001da6   0000     nop                      	nop
001da8   0000     nop                      	nop
001daa   0000     nop                      	nop
001dac   0000     nop                      	nop
001dae   0000     nop                      	nop
001db0   0000     nop                      	nop
001db2   0000     nop                      	nop
001db4   0000     nop                      	nop
001db6   0000     nop                      	nop
001db8   0000     nop                      	nop
001dba   0000     nop                      	nop
001dbc   0000     nop                      	nop
001dbe   0000     nop                      	nop
001dc0   0000     nop                      	nop
001dc2   0000     nop                      	nop
001dc4   0000     nop                      	nop
001dc6   0000     nop                      	nop
                                           	
                                           ;	.line	3375; meter_logger.c	PWM_PIN = 1;
001dc8   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001dca   0000     nop                      	nop
001dcc   0000     nop                      	nop
001dce   0000     nop                      	nop
001dd0   0000     nop                      	nop
001dd2   0000     nop                      	nop
001dd4   0000     nop                      	nop
001dd6   0000     nop                      	nop
001dd8   0000     nop                      	nop
001dda   0000     nop                      	nop
001ddc   0000     nop                      	nop
001dde   0000     nop                      	nop
001de0   0000     nop                      	nop
001de2   0000     nop                      	nop
001de4   0000     nop                      	nop
001de6   0000     nop                      	nop
001de8   0000     nop                      	nop
001dea   0000     nop                      	nop
001dec   0000     nop                      	nop
001dee   0000     nop                      	nop
001df0   0000     nop                      	nop
001df2   0000     nop                      	nop
001df4   0000     nop                      	nop
001df6   0000     nop                      	nop
001df8   0000     nop                      	nop
001dfa   0000     nop                      	nop
001dfc   0000     nop                      	nop
001dfe   0000     nop                      	nop
001e00   0000     nop                      	nop
001e02   0000     nop                      	nop
001e04   0000     nop                      	nop
001e06   0000     nop                      	nop
001e08   0000     nop                      	nop
001e0a   0000     nop                      	nop
001e0c   0000     nop                      	nop
001e0e   0000     nop                      	nop
001e10   0000     nop                      	nop
001e12   0000     nop                      	nop
001e14   0000     nop                      	nop
001e16   0000     nop                      	nop
001e18   0000     nop                      	nop
001e1a   0000     nop                      	nop
001e1c   0000     nop                      	nop
001e1e   0000     nop                      	nop
001e20   0000     nop                      	nop
001e22   0000     nop                      	nop
001e24   0000     nop                      	nop
001e26   0000     nop                      	nop
001e28   0000     nop                      	nop
001e2a   0000     nop                      	nop
001e2c   0000     nop                      	nop
001e2e   0000     nop                      	nop
001e30   0000     nop                      	nop
001e32   0000     nop                      	nop
001e34   0000     nop                      	nop
001e36   0000     nop                      	nop
001e38   0000     nop                      	nop
001e3a   0000     nop                      	nop
001e3c   0000     nop                      	nop
001e3e   0000     nop                      	nop
001e40   0000     nop                      	nop
001e42   0000     nop                      	nop
001e44   0000     nop                      	nop
001e46   0000     nop                      	nop
001e48   0000     nop                      	nop
001e4a   0000     nop                      	nop
001e4c   0000     nop                      	nop
001e4e   0000     nop                      	nop
001e50   0000     nop                      	nop
001e52   0000     nop                      	nop
001e54   0000     nop                      	nop
001e56   0000     nop                      	nop
001e58   0000     nop                      	nop
001e5a   0000     nop                      	nop
001e5c   0000     nop                      	nop
001e5e   0000     nop                      	nop
001e60   0000     nop                      	nop
001e62   0000     nop                      	nop
001e64   0000     nop                      	nop
001e66   0000     nop                      	nop
001e68   0000     nop                      	nop
001e6a   0000     nop                      	nop
001e6c   0000     nop                      	nop
001e6e   0000     nop                      	nop
001e70   0000     nop                      	nop
001e72   0000     nop                      	nop
001e74   0000     nop                      	nop
001e76   0000     nop                      	nop
001e78   0000     nop                      	nop
001e7a   0000     nop                      	nop
001e7c   0000     nop                      	nop
001e7e   0000     nop                      	nop
001e80   0000     nop                      	nop
001e82   0000     nop                      	nop
001e84   0000     nop                      	nop
001e86   0000     nop                      	nop
001e88   0000     nop                      	nop
001e8a   0000     nop                      	nop
001e8c   0000     nop                      	nop
001e8e   0000     nop                      	nop
001e90   0000     nop                      	nop
001e92   0000     nop                      	nop
001e94   0000     nop                      	nop
001e96   0000     nop                      	nop
001e98   0000     nop                      	nop
001e9a   0000     nop                      	nop
001e9c   0000     nop                      	nop
001e9e   0000     nop                      	nop
001ea0   0000     nop                      	nop
001ea2   0000     nop                      	nop
001ea4   0000     nop                      	nop
001ea6   0000     nop                      	nop
001ea8   0000     nop                      	nop
001eaa   0000     nop                      	nop
001eac   0000     nop                      	nop
001eae   0000     nop                      	nop
001eb0   0000     nop                      	nop
001eb2   0000     nop                      	nop
001eb4   0000     nop                      	nop
001eb6   0000     nop                      	nop
001eb8   0000     nop                      	nop
001eba   0000     nop                      	nop
001ebc   0000     nop                      	nop
001ebe   0000     nop                      	nop
001ec0   0000     nop                      	nop
001ec2   0000     nop                      	nop
001ec4   0000     nop                      	nop
001ec6   0000     nop                      	nop
001ec8   0000     nop                      	nop
001eca   0000     nop                      	nop
001ecc   0000     nop                      	nop
001ece   0000     nop                      	nop
001ed0   0000     nop                      	nop
001ed2   0000     nop                      	nop
001ed4   0000     nop                      	nop
001ed6   0000     nop                      	nop
001ed8   0000     nop                      	nop
001eda   0000     nop                      	nop
001edc   0000     nop                      	nop
001ede   0000     nop                      	nop
001ee0   0000     nop                      	nop
001ee2   0000     nop                      	nop
001ee4   0000     nop                      	nop
001ee6   0000     nop                      	nop
001ee8   0000     nop                      	nop
001eea   0000     nop                      	nop
001eec   0000     nop                      	nop
001eee   0000     nop                      	nop
001ef0   0000     nop                      	nop
001ef2   0000     nop                      	nop
001ef4   0000     nop                      	nop
001ef6   0000     nop                      	nop
001ef8   0000     nop                      	nop
001efa   0000     nop                      	nop
001efc   0000     nop                      	nop
001efe   0000     nop                      	nop
001f00   0000     nop                      	nop
001f02   0000     nop                      	nop
001f04   0000     nop                      	nop
001f06   0000     nop                      	nop
001f08   0000     nop                      	nop
001f0a   0000     nop                      	nop
001f0c   0000     nop                      	nop
001f0e   0000     nop                      	nop
001f10   0000     nop                      	nop
001f12   0000     nop                      	nop
001f14   0000     nop                      	nop
001f16   0000     nop                      	nop
001f18   0000     nop                      	nop
001f1a   0000     nop                      	nop
001f1c   0000     nop                      	nop
001f1e   0000     nop                      	nop
001f20   0000     nop                      	nop
001f22   0000     nop                      	nop
001f24   0000     nop                      	nop
001f26   0000     nop                      	nop
001f28   0000     nop                      	nop
001f2a   0000     nop                      	nop
001f2c   0000     nop                      	nop
001f2e   0000     nop                      	nop
001f30   0000     nop                      	nop
001f32   0000     nop                      	nop
001f34   0000     nop                      	nop
001f36   0000     nop                      	nop
001f38   0000     nop                      	nop
001f3a   0000     nop                      	nop
001f3c   0000     nop                      	nop
001f3e   0000     nop                      	nop
001f40   0000     nop                      	nop
001f42   0000     nop                      	nop
001f44   0000     nop                      	nop
001f46   0000     nop                      	nop
001f48   0000     nop                      	nop
001f4a   0000     nop                      	nop
001f4c   0000     nop                      	nop
001f4e   0000     nop                      	nop
001f50   0000     nop                      	nop
001f52   0000     nop                      	nop
001f54   0000     nop                      	nop
001f56   0000     nop                      	nop
001f58   0000     nop                      	nop
001f5a   0000     nop                      	nop
001f5c   0000     nop                      	nop
001f5e   0000     nop                      	nop
001f60   0000     nop                      	nop
                                           	
                                           ;	.line	3582; meter_logger.c	PWM_PIN = 0;
001f62   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001f64   0000     nop                      	nop
001f66   0000     nop                      	nop
001f68   0000     nop                      	nop
001f6a   0000     nop                      	nop
001f6c   0000     nop                      	nop
001f6e   0000     nop                      	nop
001f70   0000     nop                      	nop
001f72   0000     nop                      	nop
001f74   0000     nop                      	nop
001f76   0000     nop                      	nop
001f78   0000     nop                      	nop
001f7a   0000     nop                      	nop
001f7c   0000     nop                      	nop
001f7e   0000     nop                      	nop
001f80   0000     nop                      	nop
001f82   0000     nop                      	nop
001f84   0000     nop                      	nop
001f86   0000     nop                      	nop
001f88   0000     nop                      	nop
001f8a   0000     nop                      	nop
001f8c   0000     nop                      	nop
001f8e   0000     nop                      	nop
001f90   0000     nop                      	nop
001f92   0000     nop                      	nop
001f94   0000     nop                      	nop
001f96   0000     nop                      	nop
001f98   0000     nop                      	nop
001f9a   0000     nop                      	nop
001f9c   0000     nop                      	nop
001f9e   0000     nop                      	nop
001fa0   0000     nop                      	nop
001fa2   0000     nop                      	nop
001fa4   0000     nop                      	nop
001fa6   0000     nop                      	nop
001fa8   0000     nop                      	nop
001faa   0000     nop                      	nop
001fac   0000     nop                      	nop
001fae   0000     nop                      	nop
001fb0   0000     nop                      	nop
001fb2   0000     nop                      	nop
001fb4   0000     nop                      	nop
001fb6   0000     nop                      	nop
001fb8   0000     nop                      	nop
001fba   0000     nop                      	nop
001fbc   0000     nop                      	nop
001fbe   0000     nop                      	nop
001fc0   0000     nop                      	nop
001fc2   0000     nop                      	nop
001fc4   0000     nop                      	nop
001fc6   0000     nop                      	nop
001fc8   0000     nop                      	nop
001fca   0000     nop                      	nop
001fcc   0000     nop                      	nop
001fce   0000     nop                      	nop
001fd0   0000     nop                      	nop
001fd2   0000     nop                      	nop
001fd4   0000     nop                      	nop
001fd6   0000     nop                      	nop
001fd8   0000     nop                      	nop
001fda   0000     nop                      	nop
001fdc   0000     nop                      	nop
001fde   0000     nop                      	nop
001fe0   0000     nop                      	nop
001fe2   0000     nop                      	nop
001fe4   0000     nop                      	nop
001fe6   0000     nop                      	nop
001fe8   0000     nop                      	nop
001fea   0000     nop                      	nop
001fec   0000     nop                      	nop
001fee   0000     nop                      	nop
001ff0   0000     nop                      	nop
001ff2   0000     nop                      	nop
001ff4   0000     nop                      	nop
001ff6   0000     nop                      	nop
001ff8   0000     nop                      	nop
001ffa   0000     nop                      	nop
001ffc   0000     nop                      	nop
001ffe   0000     nop                      	nop
002000   0000     nop                      	nop
002002   0000     nop                      	nop
002004   0000     nop                      	nop
002006   0000     nop                      	nop
002008   0000     nop                      	nop
00200a   0000     nop                      	nop
00200c   0000     nop                      	nop
00200e   0000     nop                      	nop
002010   0000     nop                      	nop
002012   0000     nop                      	nop
002014   0000     nop                      	nop
002016   0000     nop                      	nop
002018   0000     nop                      	nop
00201a   0000     nop                      	nop
00201c   0000     nop                      	nop
00201e   0000     nop                      	nop
002020   0000     nop                      	nop
002022   0000     nop                      	nop
002024   0000     nop                      	nop
002026   0000     nop                      	nop
002028   0000     nop                      	nop
00202a   0000     nop                      	nop
00202c   0000     nop                      	nop
00202e   0000     nop                      	nop
002030   0000     nop                      	nop
002032   0000     nop                      	nop
002034   0000     nop                      	nop
002036   0000     nop                      	nop
002038   0000     nop                      	nop
00203a   0000     nop                      	nop
00203c   0000     nop                      	nop
00203e   0000     nop                      	nop
002040   0000     nop                      	nop
002042   0000     nop                      	nop
002044   0000     nop                      	nop
002046   0000     nop                      	nop
002048   0000     nop                      	nop
00204a   0000     nop                      	nop
00204c   0000     nop                      	nop
00204e   0000     nop                      	nop
002050   0000     nop                      	nop
002052   0000     nop                      	nop
002054   0000     nop                      	nop
002056   0000     nop                      	nop
002058   0000     nop                      	nop
00205a   0000     nop                      	nop
00205c   0000     nop                      	nop
00205e   0000     nop                      	nop
002060   0000     nop                      	nop
002062   0000     nop                      	nop
002064   0000     nop                      	nop
002066   0000     nop                      	nop
002068   0000     nop                      	nop
00206a   0000     nop                      	nop
00206c   0000     nop                      	nop
00206e   0000     nop                      	nop
002070   0000     nop                      	nop
002072   0000     nop                      	nop
002074   0000     nop                      	nop
002076   0000     nop                      	nop
002078   0000     nop                      	nop
00207a   0000     nop                      	nop
00207c   0000     nop                      	nop
00207e   0000     nop                      	nop
002080   0000     nop                      	nop
002082   0000     nop                      	nop
002084   0000     nop                      	nop
002086   0000     nop                      	nop
002088   0000     nop                      	nop
00208a   0000     nop                      	nop
00208c   0000     nop                      	nop
00208e   0000     nop                      	nop
002090   0000     nop                      	nop
002092   0000     nop                      	nop
002094   0000     nop                      	nop
002096   0000     nop                      	nop
002098   0000     nop                      	nop
00209a   0000     nop                      	nop
00209c   0000     nop                      	nop
00209e   0000     nop                      	nop
0020a0   0000     nop                      	nop
0020a2   0000     nop                      	nop
0020a4   0000     nop                      	nop
0020a6   0000     nop                      	nop
0020a8   0000     nop                      	nop
0020aa   0000     nop                      	nop
0020ac   0000     nop                      	nop
0020ae   0000     nop                      	nop
0020b0   0000     nop                      	nop
0020b2   0000     nop                      	nop
0020b4   0000     nop                      	nop
0020b6   0000     nop                      	nop
0020b8   0000     nop                      	nop
0020ba   0000     nop                      	nop
0020bc   0000     nop                      	nop
0020be   0000     nop                      	nop
0020c0   0000     nop                      	nop
0020c2   0000     nop                      	nop
0020c4   0000     nop                      	nop
0020c6   0000     nop                      	nop
0020c8   0000     nop                      	nop
0020ca   0000     nop                      	nop
0020cc   0000     nop                      	nop
0020ce   0000     nop                      	nop
0020d0   0000     nop                      	nop
0020d2   0000     nop                      	nop
0020d4   0000     nop                      	nop
0020d6   0000     nop                      	nop
0020d8   0000     nop                      	nop
0020da   0000     nop                      	nop
0020dc   0000     nop                      	nop
0020de   0000     nop                      	nop
0020e0   0000     nop                      	nop
0020e2   0000     nop                      	nop
0020e4   0000     nop                      	nop
0020e6   0000     nop                      	nop
0020e8   0000     nop                      	nop
0020ea   0000     nop                      	nop
0020ec   0000     nop                      	nop
0020ee   0000     nop                      	nop
0020f0   0000     nop                      	nop
0020f2   0000     nop                      	nop
0020f4   0000     nop                      	nop
0020f6   0000     nop                      	nop
0020f8   0000     nop                      	nop
0020fa   0000     nop                      	nop
                                           	
                                           ;	.line	3789; meter_logger.c	PWM_PIN = 1;
0020fc   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
0020fe   0000     nop                      	nop
002100   0000     nop                      	nop
002102   0000     nop                      	nop
002104   0000     nop                      	nop
002106   0000     nop                      	nop
002108   0000     nop                      	nop
00210a   0000     nop                      	nop
00210c   0000     nop                      	nop
00210e   0000     nop                      	nop
002110   0000     nop                      	nop
002112   0000     nop                      	nop
002114   0000     nop                      	nop
002116   0000     nop                      	nop
002118   0000     nop                      	nop
00211a   0000     nop                      	nop
00211c   0000     nop                      	nop
00211e   0000     nop                      	nop
002120   0000     nop                      	nop
002122   0000     nop                      	nop
002124   0000     nop                      	nop
002126   0000     nop                      	nop
002128   0000     nop                      	nop
00212a   0000     nop                      	nop
00212c   0000     nop                      	nop
00212e   0000     nop                      	nop
002130   0000     nop                      	nop
002132   0000     nop                      	nop
002134   0000     nop                      	nop
002136   0000     nop                      	nop
002138   0000     nop                      	nop
00213a   0000     nop                      	nop
00213c   0000     nop                      	nop
00213e   0000     nop                      	nop
002140   0000     nop                      	nop
002142   0000     nop                      	nop
002144   0000     nop                      	nop
002146   0000     nop                      	nop
002148   0000     nop                      	nop
00214a   0000     nop                      	nop
00214c   0000     nop                      	nop
00214e   0000     nop                      	nop
002150   0000     nop                      	nop
002152   0000     nop                      	nop
002154   0000     nop                      	nop
002156   0000     nop                      	nop
002158   0000     nop                      	nop
00215a   0000     nop                      	nop
00215c   0000     nop                      	nop
00215e   0000     nop                      	nop
002160   0000     nop                      	nop
002162   0000     nop                      	nop
002164   0000     nop                      	nop
002166   0000     nop                      	nop
002168   0000     nop                      	nop
00216a   0000     nop                      	nop
00216c   0000     nop                      	nop
00216e   0000     nop                      	nop
002170   0000     nop                      	nop
002172   0000     nop                      	nop
002174   0000     nop                      	nop
002176   0000     nop                      	nop
002178   0000     nop                      	nop
00217a   0000     nop                      	nop
00217c   0000     nop                      	nop
00217e   0000     nop                      	nop
002180   0000     nop                      	nop
002182   0000     nop                      	nop
002184   0000     nop                      	nop
002186   0000     nop                      	nop
002188   0000     nop                      	nop
00218a   0000     nop                      	nop
00218c   0000     nop                      	nop
00218e   0000     nop                      	nop
002190   0000     nop                      	nop
002192   0000     nop                      	nop
002194   0000     nop                      	nop
002196   0000     nop                      	nop
002198   0000     nop                      	nop
00219a   0000     nop                      	nop
00219c   0000     nop                      	nop
00219e   0000     nop                      	nop
0021a0   0000     nop                      	nop
0021a2   0000     nop                      	nop
0021a4   0000     nop                      	nop
0021a6   0000     nop                      	nop
0021a8   0000     nop                      	nop
0021aa   0000     nop                      	nop
0021ac   0000     nop                      	nop
0021ae   0000     nop                      	nop
0021b0   0000     nop                      	nop
0021b2   0000     nop                      	nop
0021b4   0000     nop                      	nop
0021b6   0000     nop                      	nop
0021b8   0000     nop                      	nop
0021ba   0000     nop                      	nop
0021bc   0000     nop                      	nop
0021be   0000     nop                      	nop
0021c0   0000     nop                      	nop
0021c2   0000     nop                      	nop
0021c4   0000     nop                      	nop
0021c6   0000     nop                      	nop
0021c8   0000     nop                      	nop
0021ca   0000     nop                      	nop
0021cc   0000     nop                      	nop
0021ce   0000     nop                      	nop
0021d0   0000     nop                      	nop
0021d2   0000     nop                      	nop
0021d4   0000     nop                      	nop
0021d6   0000     nop                      	nop
0021d8   0000     nop                      	nop
0021da   0000     nop                      	nop
0021dc   0000     nop                      	nop
0021de   0000     nop                      	nop
0021e0   0000     nop                      	nop
0021e2   0000     nop                      	nop
0021e4   0000     nop                      	nop
0021e6   0000     nop                      	nop
0021e8   0000     nop                      	nop
0021ea   0000     nop                      	nop
0021ec   0000     nop                      	nop
0021ee   0000     nop                      	nop
0021f0   0000     nop                      	nop
0021f2   0000     nop                      	nop
0021f4   0000     nop                      	nop
0021f6   0000     nop                      	nop
0021f8   0000     nop                      	nop
0021fa   0000     nop                      	nop
0021fc   0000     nop                      	nop
0021fe   0000     nop                      	nop
002200   0000     nop                      	nop
002202   0000     nop                      	nop
002204   0000     nop                      	nop
002206   0000     nop                      	nop
002208   0000     nop                      	nop
00220a   0000     nop                      	nop
00220c   0000     nop                      	nop
00220e   0000     nop                      	nop
002210   0000     nop                      	nop
002212   0000     nop                      	nop
002214   0000     nop                      	nop
002216   0000     nop                      	nop
002218   0000     nop                      	nop
00221a   0000     nop                      	nop
00221c   0000     nop                      	nop
00221e   0000     nop                      	nop
002220   0000     nop                      	nop
002222   0000     nop                      	nop
002224   0000     nop                      	nop
002226   0000     nop                      	nop
002228   0000     nop                      	nop
00222a   0000     nop                      	nop
00222c   0000     nop                      	nop
00222e   0000     nop                      	nop
002230   0000     nop                      	nop
002232   0000     nop                      	nop
002234   0000     nop                      	nop
002236   0000     nop                      	nop
002238   0000     nop                      	nop
00223a   0000     nop                      	nop
00223c   0000     nop                      	nop
00223e   0000     nop                      	nop
002240   0000     nop                      	nop
002242   0000     nop                      	nop
002244   0000     nop                      	nop
002246   0000     nop                      	nop
002248   0000     nop                      	nop
00224a   0000     nop                      	nop
00224c   0000     nop                      	nop
00224e   0000     nop                      	nop
002250   0000     nop                      	nop
002252   0000     nop                      	nop
002254   0000     nop                      	nop
002256   0000     nop                      	nop
002258   0000     nop                      	nop
00225a   0000     nop                      	nop
00225c   0000     nop                      	nop
00225e   0000     nop                      	nop
002260   0000     nop                      	nop
002262   0000     nop                      	nop
002264   0000     nop                      	nop
002266   0000     nop                      	nop
002268   0000     nop                      	nop
00226a   0000     nop                      	nop
00226c   0000     nop                      	nop
00226e   0000     nop                      	nop
002270   0000     nop                      	nop
002272   0000     nop                      	nop
002274   0000     nop                      	nop
002276   0000     nop                      	nop
002278   0000     nop                      	nop
00227a   0000     nop                      	nop
00227c   0000     nop                      	nop
00227e   0000     nop                      	nop
002280   0000     nop                      	nop
002282   0000     nop                      	nop
002284   0000     nop                      	nop
002286   0000     nop                      	nop
002288   0000     nop                      	nop
00228a   0000     nop                      	nop
00228c   0000     nop                      	nop
00228e   0000     nop                      	nop
002290   0000     nop                      	nop
002292   0000     nop                      	nop
002294   0000     nop                      	nop
                                           	
                                           ;	.line	3996; meter_logger.c	PWM_PIN = 0;
002296   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
002298   0000     nop                      	nop
00229a   0000     nop                      	nop
00229c   0000     nop                      	nop
00229e   0000     nop                      	nop
0022a0   0000     nop                      	nop
0022a2   0000     nop                      	nop
0022a4   0000     nop                      	nop
0022a6   0000     nop                      	nop
0022a8   0000     nop                      	nop
0022aa   0000     nop                      	nop
0022ac   0000     nop                      	nop
0022ae   0000     nop                      	nop
0022b0   0000     nop                      	nop
0022b2   0000     nop                      	nop
0022b4   0000     nop                      	nop
0022b6   0000     nop                      	nop
0022b8   0000     nop                      	nop
0022ba   0000     nop                      	nop
0022bc   0000     nop                      	nop
0022be   0000     nop                      	nop
0022c0   0000     nop                      	nop
0022c2   0000     nop                      	nop
0022c4   0000     nop                      	nop
0022c6   0000     nop                      	nop
0022c8   0000     nop                      	nop
0022ca   0000     nop                      	nop
0022cc   0000     nop                      	nop
0022ce   0000     nop                      	nop
0022d0   0000     nop                      	nop
0022d2   0000     nop                      	nop
0022d4   0000     nop                      	nop
0022d6   0000     nop                      	nop
0022d8   0000     nop                      	nop
0022da   0000     nop                      	nop
0022dc   0000     nop                      	nop
0022de   0000     nop                      	nop
0022e0   0000     nop                      	nop
0022e2   0000     nop                      	nop
0022e4   0000     nop                      	nop
0022e6   0000     nop                      	nop
0022e8   0000     nop                      	nop
0022ea   0000     nop                      	nop
0022ec   0000     nop                      	nop
0022ee   0000     nop                      	nop
0022f0   0000     nop                      	nop
0022f2   0000     nop                      	nop
0022f4   0000     nop                      	nop
0022f6   0000     nop                      	nop
0022f8   0000     nop                      	nop
0022fa   0000     nop                      	nop
0022fc   0000     nop                      	nop
0022fe   0000     nop                      	nop
002300   0000     nop                      	nop
002302   0000     nop                      	nop
002304   0000     nop                      	nop
002306   0000     nop                      	nop
002308   0000     nop                      	nop
00230a   0000     nop                      	nop
00230c   0000     nop                      	nop
00230e   0000     nop                      	nop
002310   0000     nop                      	nop
002312   0000     nop                      	nop
002314   0000     nop                      	nop
002316   0000     nop                      	nop
002318   0000     nop                      	nop
00231a   0000     nop                      	nop
00231c   0000     nop                      	nop
00231e   0000     nop                      	nop
002320   0000     nop                      	nop
002322   0000     nop                      	nop
002324   0000     nop                      	nop
002326   0000     nop                      	nop
002328   0000     nop                      	nop
00232a   0000     nop                      	nop
00232c   0000     nop                      	nop
00232e   0000     nop                      	nop
002330   0000     nop                      	nop
002332   0000     nop                      	nop
002334   0000     nop                      	nop
002336   0000     nop                      	nop
002338   0000     nop                      	nop
00233a   0000     nop                      	nop
00233c   0000     nop                      	nop
00233e   0000     nop                      	nop
002340   0000     nop                      	nop
002342   0000     nop                      	nop
002344   0000     nop                      	nop
002346   0000     nop                      	nop
002348   0000     nop                      	nop
00234a   0000     nop                      	nop
00234c   0000     nop                      	nop
00234e   0000     nop                      	nop
002350   0000     nop                      	nop
002352   0000     nop                      	nop
002354   0000     nop                      	nop
002356   0000     nop                      	nop
002358   0000     nop                      	nop
00235a   0000     nop                      	nop
00235c   0000     nop                      	nop
00235e   0000     nop                      	nop
002360   0000     nop                      	nop
002362   0000     nop                      	nop
002364   0000     nop                      	nop
002366   0000     nop                      	nop
002368   0000     nop                      	nop
00236a   0000     nop                      	nop
00236c   0000     nop                      	nop
00236e   0000     nop                      	nop
002370   0000     nop                      	nop
002372   0000     nop                      	nop
002374   0000     nop                      	nop
002376   0000     nop                      	nop
002378   0000     nop                      	nop
00237a   0000     nop                      	nop
00237c   0000     nop                      	nop
00237e   0000     nop                      	nop
002380   0000     nop                      	nop
002382   0000     nop                      	nop
002384   0000     nop                      	nop
002386   0000     nop                      	nop
002388   0000     nop                      	nop
00238a   0000     nop                      	nop
00238c   0000     nop                      	nop
00238e   0000     nop                      	nop
002390   0000     nop                      	nop
002392   0000     nop                      	nop
002394   0000     nop                      	nop
002396   0000     nop                      	nop
002398   0000     nop                      	nop
00239a   0000     nop                      	nop
00239c   0000     nop                      	nop
00239e   0000     nop                      	nop
0023a0   0000     nop                      	nop
0023a2   0000     nop                      	nop
0023a4   0000     nop                      	nop
0023a6   0000     nop                      	nop
0023a8   0000     nop                      	nop
0023aa   0000     nop                      	nop
0023ac   0000     nop                      	nop
0023ae   0000     nop                      	nop
0023b0   0000     nop                      	nop
0023b2   0000     nop                      	nop
0023b4   0000     nop                      	nop
0023b6   0000     nop                      	nop
0023b8   0000     nop                      	nop
0023ba   0000     nop                      	nop
0023bc   0000     nop                      	nop
0023be   0000     nop                      	nop
0023c0   0000     nop                      	nop
0023c2   0000     nop                      	nop
0023c4   0000     nop                      	nop
0023c6   0000     nop                      	nop
0023c8   0000     nop                      	nop
0023ca   0000     nop                      	nop
0023cc   0000     nop                      	nop
0023ce   0000     nop                      	nop
0023d0   0000     nop                      	nop
0023d2   0000     nop                      	nop
0023d4   0000     nop                      	nop
0023d6   0000     nop                      	nop
0023d8   0000     nop                      	nop
0023da   0000     nop                      	nop
0023dc   0000     nop                      	nop
0023de   0000     nop                      	nop
0023e0   0000     nop                      	nop
0023e2   0000     nop                      	nop
0023e4   0000     nop                      	nop
0023e6   0000     nop                      	nop
0023e8   0000     nop                      	nop
0023ea   0000     nop                      	nop
0023ec   0000     nop                      	nop
0023ee   0000     nop                      	nop
0023f0   0000     nop                      	nop
0023f2   0000     nop                      	nop
0023f4   0000     nop                      	nop
0023f6   0000     nop                      	nop
0023f8   0000     nop                      	nop
0023fa   0000     nop                      	nop
0023fc   0000     nop                      	nop
0023fe   0000     nop                      	nop
002400   0000     nop                      	nop
002402   0000     nop                      	nop
002404   0000     nop                      	nop
002406   0000     nop                      	nop
002408   0000     nop                      	nop
00240a   0000     nop                      	nop
00240c   0000     nop                      	nop
00240e   0000     nop                      	nop
002410   0000     nop                      	nop
002412   0000     nop                      	nop
002414   0000     nop                      	nop
002416   0000     nop                      	nop
002418   0000     nop                      	nop
00241a   0000     nop                      	nop
00241c   0000     nop                      	nop
00241e   0000     nop                      	nop
002420   0000     nop                      	nop
002422   0000     nop                      	nop
002424   0000     nop                      	nop
002426   0000     nop                      	nop
002428   0000     nop                      	nop
00242a   0000     nop                      	nop
00242c   0000     nop                      	nop
00242e   0000     nop                      	nop
                                           	
                                           ;	.line	4203; meter_logger.c	PWM_PIN = 1;
002430   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
002432   0000     nop                      	nop
002434   0000     nop                      	nop
002436   0000     nop                      	nop
002438   0000     nop                      	nop
00243a   0000     nop                      	nop
00243c   0000     nop                      	nop
00243e   0000     nop                      	nop
002440   0000     nop                      	nop
002442   0000     nop                      	nop
002444   0000     nop                      	nop
002446   0000     nop                      	nop
002448   0000     nop                      	nop
00244a   0000     nop                      	nop
00244c   0000     nop                      	nop
00244e   0000     nop                      	nop
002450   0000     nop                      	nop
002452   0000     nop                      	nop
002454   0000     nop                      	nop
002456   0000     nop                      	nop
002458   0000     nop                      	nop
00245a   0000     nop                      	nop
00245c   0000     nop                      	nop
00245e   0000     nop                      	nop
002460   0000     nop                      	nop
002462   0000     nop                      	nop
002464   0000     nop                      	nop
002466   0000     nop                      	nop
002468   0000     nop                      	nop
00246a   0000     nop                      	nop
00246c   0000     nop                      	nop
00246e   0000     nop                      	nop
002470   0000     nop                      	nop
002472   0000     nop                      	nop
002474   0000     nop                      	nop
002476   0000     nop                      	nop
002478   0000     nop                      	nop
00247a   0000     nop                      	nop
00247c   0000     nop                      	nop
00247e   0000     nop                      	nop
002480   0000     nop                      	nop
002482   0000     nop                      	nop
002484   0000     nop                      	nop
002486   0000     nop                      	nop
002488   0000     nop                      	nop
00248a   0000     nop                      	nop
00248c   0000     nop                      	nop
00248e   0000     nop                      	nop
002490   0000     nop                      	nop
002492   0000     nop                      	nop
002494   0000     nop                      	nop
002496   0000     nop                      	nop
002498   0000     nop                      	nop
00249a   0000     nop                      	nop
00249c   0000     nop                      	nop
00249e   0000     nop                      	nop
0024a0   0000     nop                      	nop
0024a2   0000     nop                      	nop
0024a4   0000     nop                      	nop
0024a6   0000     nop                      	nop
0024a8   0000     nop                      	nop
0024aa   0000     nop                      	nop
0024ac   0000     nop                      	nop
0024ae   0000     nop                      	nop
0024b0   0000     nop                      	nop
0024b2   0000     nop                      	nop
0024b4   0000     nop                      	nop
0024b6   0000     nop                      	nop
0024b8   0000     nop                      	nop
0024ba   0000     nop                      	nop
0024bc   0000     nop                      	nop
0024be   0000     nop                      	nop
0024c0   0000     nop                      	nop
0024c2   0000     nop                      	nop
0024c4   0000     nop                      	nop
0024c6   0000     nop                      	nop
0024c8   0000     nop                      	nop
0024ca   0000     nop                      	nop
0024cc   0000     nop                      	nop
0024ce   0000     nop                      	nop
0024d0   0000     nop                      	nop
0024d2   0000     nop                      	nop
0024d4   0000     nop                      	nop
0024d6   0000     nop                      	nop
0024d8   0000     nop                      	nop
0024da   0000     nop                      	nop
0024dc   0000     nop                      	nop
0024de   0000     nop                      	nop
0024e0   0000     nop                      	nop
0024e2   0000     nop                      	nop
0024e4   0000     nop                      	nop
0024e6   0000     nop                      	nop
0024e8   0000     nop                      	nop
0024ea   0000     nop                      	nop
0024ec   0000     nop                      	nop
0024ee   0000     nop                      	nop
0024f0   0000     nop                      	nop
0024f2   0000     nop                      	nop
0024f4   0000     nop                      	nop
0024f6   0000     nop                      	nop
0024f8   0000     nop                      	nop
0024fa   0000     nop                      	nop
0024fc   0000     nop                      	nop
0024fe   0000     nop                      	nop
002500   0000     nop                      	nop
002502   0000     nop                      	nop
002504   0000     nop                      	nop
002506   0000     nop                      	nop
002508   0000     nop                      	nop
00250a   0000     nop                      	nop
00250c   0000     nop                      	nop
00250e   0000     nop                      	nop
002510   0000     nop                      	nop
002512   0000     nop                      	nop
002514   0000     nop                      	nop
002516   0000     nop                      	nop
002518   0000     nop                      	nop
00251a   0000     nop                      	nop
00251c   0000     nop                      	nop
00251e   0000     nop                      	nop
002520   0000     nop                      	nop
002522   0000     nop                      	nop
002524   0000     nop                      	nop
002526   0000     nop                      	nop
002528   0000     nop                      	nop
00252a   0000     nop                      	nop
00252c   0000     nop                      	nop
00252e   0000     nop                      	nop
002530   0000     nop                      	nop
002532   0000     nop                      	nop
002534   0000     nop                      	nop
002536   0000     nop                      	nop
002538   0000     nop                      	nop
00253a   0000     nop                      	nop
00253c   0000     nop                      	nop
00253e   0000     nop                      	nop
002540   0000     nop                      	nop
002542   0000     nop                      	nop
002544   0000     nop                      	nop
002546   0000     nop                      	nop
002548   0000     nop                      	nop
00254a   0000     nop                      	nop
00254c   0000     nop                      	nop
00254e   0000     nop                      	nop
002550   0000     nop                      	nop
002552   0000     nop                      	nop
002554   0000     nop                      	nop
002556   0000     nop                      	nop
002558   0000     nop                      	nop
00255a   0000     nop                      	nop
00255c   0000     nop                      	nop
00255e   0000     nop                      	nop
002560   0000     nop                      	nop
002562   0000     nop                      	nop
002564   0000     nop                      	nop
002566   0000     nop                      	nop
002568   0000     nop                      	nop
00256a   0000     nop                      	nop
00256c   0000     nop                      	nop
00256e   0000     nop                      	nop
002570   0000     nop                      	nop
002572   0000     nop                      	nop
002574   0000     nop                      	nop
002576   0000     nop                      	nop
002578   0000     nop                      	nop
00257a   0000     nop                      	nop
00257c   0000     nop                      	nop
00257e   0000     nop                      	nop
002580   0000     nop                      	nop
002582   0000     nop                      	nop
002584   0000     nop                      	nop
002586   0000     nop                      	nop
002588   0000     nop                      	nop
00258a   0000     nop                      	nop
00258c   0000     nop                      	nop
00258e   0000     nop                      	nop
002590   0000     nop                      	nop
002592   0000     nop                      	nop
002594   0000     nop                      	nop
002596   0000     nop                      	nop
002598   0000     nop                      	nop
00259a   0000     nop                      	nop
00259c   0000     nop                      	nop
00259e   0000     nop                      	nop
0025a0   0000     nop                      	nop
0025a2   0000     nop                      	nop
0025a4   0000     nop                      	nop
0025a6   0000     nop                      	nop
0025a8   0000     nop                      	nop
0025aa   0000     nop                      	nop
0025ac   0000     nop                      	nop
0025ae   0000     nop                      	nop
0025b0   0000     nop                      	nop
0025b2   0000     nop                      	nop
0025b4   0000     nop                      	nop
0025b6   0000     nop                      	nop
0025b8   0000     nop                      	nop
0025ba   0000     nop                      	nop
0025bc   0000     nop                      	nop
0025be   0000     nop                      	nop
0025c0   0000     nop                      	nop
0025c2   0000     nop                      	nop
0025c4   0000     nop                      	nop
0025c6   0000     nop                      	nop
0025c8   0000     nop                      	nop
                                           	
                                           ;	.line	4410; meter_logger.c	PWM_PIN = 0;
0025ca   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
0025cc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0025ce   ffd9
0025d0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__send_fsk_high	code
                                           _send_fsk_high:
                                           ;	.line	1438; meter_logger.c	void send_fsk_high(void) {
000ecc   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000ece   ffe5
000ed0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000ed2   ffd9
                                           ;	.line	1439; meter_logger.c	PWM_PIN = 1;
000ed4   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
000ed6   0000     nop                      	nop
000ed8   0000     nop                      	nop
000eda   0000     nop                      	nop
000edc   0000     nop                      	nop
000ede   0000     nop                      	nop
000ee0   0000     nop                      	nop
000ee2   0000     nop                      	nop
000ee4   0000     nop                      	nop
000ee6   0000     nop                      	nop
000ee8   0000     nop                      	nop
000eea   0000     nop                      	nop
000eec   0000     nop                      	nop
000eee   0000     nop                      	nop
000ef0   0000     nop                      	nop
000ef2   0000     nop                      	nop
000ef4   0000     nop                      	nop
000ef6   0000     nop                      	nop
000ef8   0000     nop                      	nop
000efa   0000     nop                      	nop
000efc   0000     nop                      	nop
000efe   0000     nop                      	nop
000f00   0000     nop                      	nop
000f02   0000     nop                      	nop
000f04   0000     nop                      	nop
000f06   0000     nop                      	nop
000f08   0000     nop                      	nop
000f0a   0000     nop                      	nop
000f0c   0000     nop                      	nop
000f0e   0000     nop                      	nop
000f10   0000     nop                      	nop
000f12   0000     nop                      	nop
000f14   0000     nop                      	nop
000f16   0000     nop                      	nop
000f18   0000     nop                      	nop
000f1a   0000     nop                      	nop
000f1c   0000     nop                      	nop
000f1e   0000     nop                      	nop
000f20   0000     nop                      	nop
000f22   0000     nop                      	nop
000f24   0000     nop                      	nop
000f26   0000     nop                      	nop
000f28   0000     nop                      	nop
000f2a   0000     nop                      	nop
000f2c   0000     nop                      	nop
000f2e   0000     nop                      	nop
000f30   0000     nop                      	nop
000f32   0000     nop                      	nop
000f34   0000     nop                      	nop
000f36   0000     nop                      	nop
000f38   0000     nop                      	nop
000f3a   0000     nop                      	nop
000f3c   0000     nop                      	nop
000f3e   0000     nop                      	nop
000f40   0000     nop                      	nop
000f42   0000     nop                      	nop
000f44   0000     nop                      	nop
000f46   0000     nop                      	nop
000f48   0000     nop                      	nop
000f4a   0000     nop                      	nop
000f4c   0000     nop                      	nop
000f4e   0000     nop                      	nop
000f50   0000     nop                      	nop
000f52   0000     nop                      	nop
000f54   0000     nop                      	nop
000f56   0000     nop                      	nop
000f58   0000     nop                      	nop
000f5a   0000     nop                      	nop
000f5c   0000     nop                      	nop
000f5e   0000     nop                      	nop
000f60   0000     nop                      	nop
000f62   0000     nop                      	nop
000f64   0000     nop                      	nop
000f66   0000     nop                      	nop
000f68   0000     nop                      	nop
000f6a   0000     nop                      	nop
000f6c   0000     nop                      	nop
000f6e   0000     nop                      	nop
000f70   0000     nop                      	nop
000f72   0000     nop                      	nop
000f74   0000     nop                      	nop
000f76   0000     nop                      	nop
000f78   0000     nop                      	nop
000f7a   0000     nop                      	nop
000f7c   0000     nop                      	nop
000f7e   0000     nop                      	nop
000f80   0000     nop                      	nop
000f82   0000     nop                      	nop
000f84   0000     nop                      	nop
000f86   0000     nop                      	nop
000f88   0000     nop                      	nop
000f8a   0000     nop                      	nop
000f8c   0000     nop                      	nop
000f8e   0000     nop                      	nop
000f90   0000     nop                      	nop
000f92   0000     nop                      	nop
000f94   0000     nop                      	nop
000f96   0000     nop                      	nop
000f98   0000     nop                      	nop
000f9a   0000     nop                      	nop
000f9c   0000     nop                      	nop
000f9e   0000     nop                      	nop
000fa0   0000     nop                      	nop
000fa2   0000     nop                      	nop
000fa4   0000     nop                      	nop
000fa6   0000     nop                      	nop
000fa8   0000     nop                      	nop
000faa   0000     nop                      	nop
000fac   0000     nop                      	nop
000fae   0000     nop                      	nop
000fb0   0000     nop                      	nop
000fb2   0000     nop                      	nop
000fb4   0000     nop                      	nop
000fb6   0000     nop                      	nop
000fb8   0000     nop                      	nop
000fba   0000     nop                      	nop
000fbc   0000     nop                      	nop
000fbe   0000     nop                      	nop
000fc0   0000     nop                      	nop
000fc2   0000     nop                      	nop
000fc4   0000     nop                      	nop
000fc6   0000     nop                      	nop
000fc8   0000     nop                      	nop
000fca   0000     nop                      	nop
000fcc   0000     nop                      	nop
000fce   0000     nop                      	nop
000fd0   0000     nop                      	nop
000fd2   0000     nop                      	nop
000fd4   0000     nop                      	nop
000fd6   0000     nop                      	nop
000fd8   0000     nop                      	nop
000fda   0000     nop                      	nop
000fdc   0000     nop                      	nop
000fde   0000     nop                      	nop
000fe0   0000     nop                      	nop
000fe2   0000     nop                      	nop
                                           	
                                           ;	.line	1577; meter_logger.c	PWM_PIN = 0;
000fe4   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
000fe6   0000     nop                      	nop
000fe8   0000     nop                      	nop
000fea   0000     nop                      	nop
000fec   0000     nop                      	nop
000fee   0000     nop                      	nop
000ff0   0000     nop                      	nop
000ff2   0000     nop                      	nop
000ff4   0000     nop                      	nop
000ff6   0000     nop                      	nop
000ff8   0000     nop                      	nop
000ffa   0000     nop                      	nop
000ffc   0000     nop                      	nop
000ffe   0000     nop                      	nop
001000   0000     nop                      	nop
001002   0000     nop                      	nop
001004   0000     nop                      	nop
001006   0000     nop                      	nop
001008   0000     nop                      	nop
00100a   0000     nop                      	nop
00100c   0000     nop                      	nop
00100e   0000     nop                      	nop
001010   0000     nop                      	nop
001012   0000     nop                      	nop
001014   0000     nop                      	nop
001016   0000     nop                      	nop
001018   0000     nop                      	nop
00101a   0000     nop                      	nop
00101c   0000     nop                      	nop
00101e   0000     nop                      	nop
001020   0000     nop                      	nop
001022   0000     nop                      	nop
001024   0000     nop                      	nop
001026   0000     nop                      	nop
001028   0000     nop                      	nop
00102a   0000     nop                      	nop
00102c   0000     nop                      	nop
00102e   0000     nop                      	nop
001030   0000     nop                      	nop
001032   0000     nop                      	nop
001034   0000     nop                      	nop
001036   0000     nop                      	nop
001038   0000     nop                      	nop
00103a   0000     nop                      	nop
00103c   0000     nop                      	nop
00103e   0000     nop                      	nop
001040   0000     nop                      	nop
001042   0000     nop                      	nop
001044   0000     nop                      	nop
001046   0000     nop                      	nop
001048   0000     nop                      	nop
00104a   0000     nop                      	nop
00104c   0000     nop                      	nop
00104e   0000     nop                      	nop
001050   0000     nop                      	nop
001052   0000     nop                      	nop
001054   0000     nop                      	nop
001056   0000     nop                      	nop
001058   0000     nop                      	nop
00105a   0000     nop                      	nop
00105c   0000     nop                      	nop
00105e   0000     nop                      	nop
001060   0000     nop                      	nop
001062   0000     nop                      	nop
001064   0000     nop                      	nop
001066   0000     nop                      	nop
001068   0000     nop                      	nop
00106a   0000     nop                      	nop
00106c   0000     nop                      	nop
00106e   0000     nop                      	nop
001070   0000     nop                      	nop
001072   0000     nop                      	nop
001074   0000     nop                      	nop
001076   0000     nop                      	nop
001078   0000     nop                      	nop
00107a   0000     nop                      	nop
00107c   0000     nop                      	nop
00107e   0000     nop                      	nop
001080   0000     nop                      	nop
001082   0000     nop                      	nop
001084   0000     nop                      	nop
001086   0000     nop                      	nop
001088   0000     nop                      	nop
00108a   0000     nop                      	nop
00108c   0000     nop                      	nop
00108e   0000     nop                      	nop
001090   0000     nop                      	nop
001092   0000     nop                      	nop
001094   0000     nop                      	nop
001096   0000     nop                      	nop
001098   0000     nop                      	nop
00109a   0000     nop                      	nop
00109c   0000     nop                      	nop
00109e   0000     nop                      	nop
0010a0   0000     nop                      	nop
0010a2   0000     nop                      	nop
0010a4   0000     nop                      	nop
0010a6   0000     nop                      	nop
0010a8   0000     nop                      	nop
0010aa   0000     nop                      	nop
0010ac   0000     nop                      	nop
0010ae   0000     nop                      	nop
0010b0   0000     nop                      	nop
0010b2   0000     nop                      	nop
0010b4   0000     nop                      	nop
0010b6   0000     nop                      	nop
0010b8   0000     nop                      	nop
0010ba   0000     nop                      	nop
0010bc   0000     nop                      	nop
0010be   0000     nop                      	nop
0010c0   0000     nop                      	nop
0010c2   0000     nop                      	nop
0010c4   0000     nop                      	nop
0010c6   0000     nop                      	nop
0010c8   0000     nop                      	nop
0010ca   0000     nop                      	nop
0010cc   0000     nop                      	nop
0010ce   0000     nop                      	nop
0010d0   0000     nop                      	nop
0010d2   0000     nop                      	nop
0010d4   0000     nop                      	nop
0010d6   0000     nop                      	nop
0010d8   0000     nop                      	nop
0010da   0000     nop                      	nop
0010dc   0000     nop                      	nop
0010de   0000     nop                      	nop
0010e0   0000     nop                      	nop
0010e2   0000     nop                      	nop
0010e4   0000     nop                      	nop
0010e6   0000     nop                      	nop
0010e8   0000     nop                      	nop
0010ea   0000     nop                      	nop
0010ec   0000     nop                      	nop
0010ee   0000     nop                      	nop
0010f0   0000     nop                      	nop
0010f2   0000     nop                      	nop
                                           	
                                           ;	.line	1715; meter_logger.c	PWM_PIN = 1;
0010f4   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
0010f6   0000     nop                      	nop
0010f8   0000     nop                      	nop
0010fa   0000     nop                      	nop
0010fc   0000     nop                      	nop
0010fe   0000     nop                      	nop
001100   0000     nop                      	nop
001102   0000     nop                      	nop
001104   0000     nop                      	nop
001106   0000     nop                      	nop
001108   0000     nop                      	nop
00110a   0000     nop                      	nop
00110c   0000     nop                      	nop
00110e   0000     nop                      	nop
001110   0000     nop                      	nop
001112   0000     nop                      	nop
001114   0000     nop                      	nop
001116   0000     nop                      	nop
001118   0000     nop                      	nop
00111a   0000     nop                      	nop
00111c   0000     nop                      	nop
00111e   0000     nop                      	nop
001120   0000     nop                      	nop
001122   0000     nop                      	nop
001124   0000     nop                      	nop
001126   0000     nop                      	nop
001128   0000     nop                      	nop
00112a   0000     nop                      	nop
00112c   0000     nop                      	nop
00112e   0000     nop                      	nop
001130   0000     nop                      	nop
001132   0000     nop                      	nop
001134   0000     nop                      	nop
001136   0000     nop                      	nop
001138   0000     nop                      	nop
00113a   0000     nop                      	nop
00113c   0000     nop                      	nop
00113e   0000     nop                      	nop
001140   0000     nop                      	nop
001142   0000     nop                      	nop
001144   0000     nop                      	nop
001146   0000     nop                      	nop
001148   0000     nop                      	nop
00114a   0000     nop                      	nop
00114c   0000     nop                      	nop
00114e   0000     nop                      	nop
001150   0000     nop                      	nop
001152   0000     nop                      	nop
001154   0000     nop                      	nop
001156   0000     nop                      	nop
001158   0000     nop                      	nop
00115a   0000     nop                      	nop
00115c   0000     nop                      	nop
00115e   0000     nop                      	nop
001160   0000     nop                      	nop
001162   0000     nop                      	nop
001164   0000     nop                      	nop
001166   0000     nop                      	nop
001168   0000     nop                      	nop
00116a   0000     nop                      	nop
00116c   0000     nop                      	nop
00116e   0000     nop                      	nop
001170   0000     nop                      	nop
001172   0000     nop                      	nop
001174   0000     nop                      	nop
001176   0000     nop                      	nop
001178   0000     nop                      	nop
00117a   0000     nop                      	nop
00117c   0000     nop                      	nop
00117e   0000     nop                      	nop
001180   0000     nop                      	nop
001182   0000     nop                      	nop
001184   0000     nop                      	nop
001186   0000     nop                      	nop
001188   0000     nop                      	nop
00118a   0000     nop                      	nop
00118c   0000     nop                      	nop
00118e   0000     nop                      	nop
001190   0000     nop                      	nop
001192   0000     nop                      	nop
001194   0000     nop                      	nop
001196   0000     nop                      	nop
001198   0000     nop                      	nop
00119a   0000     nop                      	nop
00119c   0000     nop                      	nop
00119e   0000     nop                      	nop
0011a0   0000     nop                      	nop
0011a2   0000     nop                      	nop
0011a4   0000     nop                      	nop
0011a6   0000     nop                      	nop
0011a8   0000     nop                      	nop
0011aa   0000     nop                      	nop
0011ac   0000     nop                      	nop
0011ae   0000     nop                      	nop
0011b0   0000     nop                      	nop
0011b2   0000     nop                      	nop
0011b4   0000     nop                      	nop
0011b6   0000     nop                      	nop
0011b8   0000     nop                      	nop
0011ba   0000     nop                      	nop
0011bc   0000     nop                      	nop
0011be   0000     nop                      	nop
0011c0   0000     nop                      	nop
0011c2   0000     nop                      	nop
0011c4   0000     nop                      	nop
0011c6   0000     nop                      	nop
0011c8   0000     nop                      	nop
0011ca   0000     nop                      	nop
0011cc   0000     nop                      	nop
0011ce   0000     nop                      	nop
0011d0   0000     nop                      	nop
0011d2   0000     nop                      	nop
0011d4   0000     nop                      	nop
0011d6   0000     nop                      	nop
0011d8   0000     nop                      	nop
0011da   0000     nop                      	nop
0011dc   0000     nop                      	nop
0011de   0000     nop                      	nop
0011e0   0000     nop                      	nop
0011e2   0000     nop                      	nop
0011e4   0000     nop                      	nop
0011e6   0000     nop                      	nop
0011e8   0000     nop                      	nop
0011ea   0000     nop                      	nop
0011ec   0000     nop                      	nop
0011ee   0000     nop                      	nop
0011f0   0000     nop                      	nop
0011f2   0000     nop                      	nop
0011f4   0000     nop                      	nop
0011f6   0000     nop                      	nop
0011f8   0000     nop                      	nop
0011fa   0000     nop                      	nop
0011fc   0000     nop                      	nop
0011fe   0000     nop                      	nop
001200   0000     nop                      	nop
001202   0000     nop                      	nop
                                           	
                                           ;	.line	1853; meter_logger.c	PWM_PIN = 0;
001204   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001206   0000     nop                      	nop
001208   0000     nop                      	nop
00120a   0000     nop                      	nop
00120c   0000     nop                      	nop
00120e   0000     nop                      	nop
001210   0000     nop                      	nop
001212   0000     nop                      	nop
001214   0000     nop                      	nop
001216   0000     nop                      	nop
001218   0000     nop                      	nop
00121a   0000     nop                      	nop
00121c   0000     nop                      	nop
00121e   0000     nop                      	nop
001220   0000     nop                      	nop
001222   0000     nop                      	nop
001224   0000     nop                      	nop
001226   0000     nop                      	nop
001228   0000     nop                      	nop
00122a   0000     nop                      	nop
00122c   0000     nop                      	nop
00122e   0000     nop                      	nop
001230   0000     nop                      	nop
001232   0000     nop                      	nop
001234   0000     nop                      	nop
001236   0000     nop                      	nop
001238   0000     nop                      	nop
00123a   0000     nop                      	nop
00123c   0000     nop                      	nop
00123e   0000     nop                      	nop
001240   0000     nop                      	nop
001242   0000     nop                      	nop
001244   0000     nop                      	nop
001246   0000     nop                      	nop
001248   0000     nop                      	nop
00124a   0000     nop                      	nop
00124c   0000     nop                      	nop
00124e   0000     nop                      	nop
001250   0000     nop                      	nop
001252   0000     nop                      	nop
001254   0000     nop                      	nop
001256   0000     nop                      	nop
001258   0000     nop                      	nop
00125a   0000     nop                      	nop
00125c   0000     nop                      	nop
00125e   0000     nop                      	nop
001260   0000     nop                      	nop
001262   0000     nop                      	nop
001264   0000     nop                      	nop
001266   0000     nop                      	nop
001268   0000     nop                      	nop
00126a   0000     nop                      	nop
00126c   0000     nop                      	nop
00126e   0000     nop                      	nop
001270   0000     nop                      	nop
001272   0000     nop                      	nop
001274   0000     nop                      	nop
001276   0000     nop                      	nop
001278   0000     nop                      	nop
00127a   0000     nop                      	nop
00127c   0000     nop                      	nop
00127e   0000     nop                      	nop
001280   0000     nop                      	nop
001282   0000     nop                      	nop
001284   0000     nop                      	nop
001286   0000     nop                      	nop
001288   0000     nop                      	nop
00128a   0000     nop                      	nop
00128c   0000     nop                      	nop
00128e   0000     nop                      	nop
001290   0000     nop                      	nop
001292   0000     nop                      	nop
001294   0000     nop                      	nop
001296   0000     nop                      	nop
001298   0000     nop                      	nop
00129a   0000     nop                      	nop
00129c   0000     nop                      	nop
00129e   0000     nop                      	nop
0012a0   0000     nop                      	nop
0012a2   0000     nop                      	nop
0012a4   0000     nop                      	nop
0012a6   0000     nop                      	nop
0012a8   0000     nop                      	nop
0012aa   0000     nop                      	nop
0012ac   0000     nop                      	nop
0012ae   0000     nop                      	nop
0012b0   0000     nop                      	nop
0012b2   0000     nop                      	nop
0012b4   0000     nop                      	nop
0012b6   0000     nop                      	nop
0012b8   0000     nop                      	nop
0012ba   0000     nop                      	nop
0012bc   0000     nop                      	nop
0012be   0000     nop                      	nop
0012c0   0000     nop                      	nop
0012c2   0000     nop                      	nop
0012c4   0000     nop                      	nop
0012c6   0000     nop                      	nop
0012c8   0000     nop                      	nop
0012ca   0000     nop                      	nop
0012cc   0000     nop                      	nop
0012ce   0000     nop                      	nop
0012d0   0000     nop                      	nop
0012d2   0000     nop                      	nop
0012d4   0000     nop                      	nop
0012d6   0000     nop                      	nop
0012d8   0000     nop                      	nop
0012da   0000     nop                      	nop
0012dc   0000     nop                      	nop
0012de   0000     nop                      	nop
0012e0   0000     nop                      	nop
0012e2   0000     nop                      	nop
0012e4   0000     nop                      	nop
0012e6   0000     nop                      	nop
0012e8   0000     nop                      	nop
0012ea   0000     nop                      	nop
0012ec   0000     nop                      	nop
0012ee   0000     nop                      	nop
0012f0   0000     nop                      	nop
0012f2   0000     nop                      	nop
0012f4   0000     nop                      	nop
0012f6   0000     nop                      	nop
0012f8   0000     nop                      	nop
0012fa   0000     nop                      	nop
0012fc   0000     nop                      	nop
0012fe   0000     nop                      	nop
001300   0000     nop                      	nop
001302   0000     nop                      	nop
001304   0000     nop                      	nop
001306   0000     nop                      	nop
001308   0000     nop                      	nop
00130a   0000     nop                      	nop
00130c   0000     nop                      	nop
00130e   0000     nop                      	nop
001310   0000     nop                      	nop
001312   0000     nop                      	nop
                                           	
                                           ;	.line	1991; meter_logger.c	PWM_PIN = 1;
001314   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001316   0000     nop                      	nop
001318   0000     nop                      	nop
00131a   0000     nop                      	nop
00131c   0000     nop                      	nop
00131e   0000     nop                      	nop
001320   0000     nop                      	nop
001322   0000     nop                      	nop
001324   0000     nop                      	nop
001326   0000     nop                      	nop
001328   0000     nop                      	nop
00132a   0000     nop                      	nop
00132c   0000     nop                      	nop
00132e   0000     nop                      	nop
001330   0000     nop                      	nop
001332   0000     nop                      	nop
001334   0000     nop                      	nop
001336   0000     nop                      	nop
001338   0000     nop                      	nop
00133a   0000     nop                      	nop
00133c   0000     nop                      	nop
00133e   0000     nop                      	nop
001340   0000     nop                      	nop
001342   0000     nop                      	nop
001344   0000     nop                      	nop
001346   0000     nop                      	nop
001348   0000     nop                      	nop
00134a   0000     nop                      	nop
00134c   0000     nop                      	nop
00134e   0000     nop                      	nop
001350   0000     nop                      	nop
001352   0000     nop                      	nop
001354   0000     nop                      	nop
001356   0000     nop                      	nop
001358   0000     nop                      	nop
00135a   0000     nop                      	nop
00135c   0000     nop                      	nop
00135e   0000     nop                      	nop
001360   0000     nop                      	nop
001362   0000     nop                      	nop
001364   0000     nop                      	nop
001366   0000     nop                      	nop
001368   0000     nop                      	nop
00136a   0000     nop                      	nop
00136c   0000     nop                      	nop
00136e   0000     nop                      	nop
001370   0000     nop                      	nop
001372   0000     nop                      	nop
001374   0000     nop                      	nop
001376   0000     nop                      	nop
001378   0000     nop                      	nop
00137a   0000     nop                      	nop
00137c   0000     nop                      	nop
00137e   0000     nop                      	nop
001380   0000     nop                      	nop
001382   0000     nop                      	nop
001384   0000     nop                      	nop
001386   0000     nop                      	nop
001388   0000     nop                      	nop
00138a   0000     nop                      	nop
00138c   0000     nop                      	nop
00138e   0000     nop                      	nop
001390   0000     nop                      	nop
001392   0000     nop                      	nop
001394   0000     nop                      	nop
001396   0000     nop                      	nop
001398   0000     nop                      	nop
00139a   0000     nop                      	nop
00139c   0000     nop                      	nop
00139e   0000     nop                      	nop
0013a0   0000     nop                      	nop
0013a2   0000     nop                      	nop
0013a4   0000     nop                      	nop
0013a6   0000     nop                      	nop
0013a8   0000     nop                      	nop
0013aa   0000     nop                      	nop
0013ac   0000     nop                      	nop
0013ae   0000     nop                      	nop
0013b0   0000     nop                      	nop
0013b2   0000     nop                      	nop
0013b4   0000     nop                      	nop
0013b6   0000     nop                      	nop
0013b8   0000     nop                      	nop
0013ba   0000     nop                      	nop
0013bc   0000     nop                      	nop
0013be   0000     nop                      	nop
0013c0   0000     nop                      	nop
0013c2   0000     nop                      	nop
0013c4   0000     nop                      	nop
0013c6   0000     nop                      	nop
0013c8   0000     nop                      	nop
0013ca   0000     nop                      	nop
0013cc   0000     nop                      	nop
0013ce   0000     nop                      	nop
0013d0   0000     nop                      	nop
0013d2   0000     nop                      	nop
0013d4   0000     nop                      	nop
0013d6   0000     nop                      	nop
0013d8   0000     nop                      	nop
0013da   0000     nop                      	nop
0013dc   0000     nop                      	nop
0013de   0000     nop                      	nop
0013e0   0000     nop                      	nop
0013e2   0000     nop                      	nop
0013e4   0000     nop                      	nop
0013e6   0000     nop                      	nop
0013e8   0000     nop                      	nop
0013ea   0000     nop                      	nop
0013ec   0000     nop                      	nop
0013ee   0000     nop                      	nop
0013f0   0000     nop                      	nop
0013f2   0000     nop                      	nop
0013f4   0000     nop                      	nop
0013f6   0000     nop                      	nop
0013f8   0000     nop                      	nop
0013fa   0000     nop                      	nop
0013fc   0000     nop                      	nop
0013fe   0000     nop                      	nop
001400   0000     nop                      	nop
001402   0000     nop                      	nop
001404   0000     nop                      	nop
001406   0000     nop                      	nop
001408   0000     nop                      	nop
00140a   0000     nop                      	nop
00140c   0000     nop                      	nop
00140e   0000     nop                      	nop
001410   0000     nop                      	nop
001412   0000     nop                      	nop
001414   0000     nop                      	nop
001416   0000     nop                      	nop
001418   0000     nop                      	nop
00141a   0000     nop                      	nop
00141c   0000     nop                      	nop
00141e   0000     nop                      	nop
001420   0000     nop                      	nop
001422   0000     nop                      	nop
                                           	
                                           ;	.line	2129; meter_logger.c	PWM_PIN = 0;
001424   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001426   0000     nop                      	nop
001428   0000     nop                      	nop
00142a   0000     nop                      	nop
00142c   0000     nop                      	nop
00142e   0000     nop                      	nop
001430   0000     nop                      	nop
001432   0000     nop                      	nop
001434   0000     nop                      	nop
001436   0000     nop                      	nop
001438   0000     nop                      	nop
00143a   0000     nop                      	nop
00143c   0000     nop                      	nop
00143e   0000     nop                      	nop
001440   0000     nop                      	nop
001442   0000     nop                      	nop
001444   0000     nop                      	nop
001446   0000     nop                      	nop
001448   0000     nop                      	nop
00144a   0000     nop                      	nop
00144c   0000     nop                      	nop
00144e   0000     nop                      	nop
001450   0000     nop                      	nop
001452   0000     nop                      	nop
001454   0000     nop                      	nop
001456   0000     nop                      	nop
001458   0000     nop                      	nop
00145a   0000     nop                      	nop
00145c   0000     nop                      	nop
00145e   0000     nop                      	nop
001460   0000     nop                      	nop
001462   0000     nop                      	nop
001464   0000     nop                      	nop
001466   0000     nop                      	nop
001468   0000     nop                      	nop
00146a   0000     nop                      	nop
00146c   0000     nop                      	nop
00146e   0000     nop                      	nop
001470   0000     nop                      	nop
001472   0000     nop                      	nop
001474   0000     nop                      	nop
001476   0000     nop                      	nop
001478   0000     nop                      	nop
00147a   0000     nop                      	nop
00147c   0000     nop                      	nop
00147e   0000     nop                      	nop
001480   0000     nop                      	nop
001482   0000     nop                      	nop
001484   0000     nop                      	nop
001486   0000     nop                      	nop
001488   0000     nop                      	nop
00148a   0000     nop                      	nop
00148c   0000     nop                      	nop
00148e   0000     nop                      	nop
001490   0000     nop                      	nop
001492   0000     nop                      	nop
001494   0000     nop                      	nop
001496   0000     nop                      	nop
001498   0000     nop                      	nop
00149a   0000     nop                      	nop
00149c   0000     nop                      	nop
00149e   0000     nop                      	nop
0014a0   0000     nop                      	nop
0014a2   0000     nop                      	nop
0014a4   0000     nop                      	nop
0014a6   0000     nop                      	nop
0014a8   0000     nop                      	nop
0014aa   0000     nop                      	nop
0014ac   0000     nop                      	nop
0014ae   0000     nop                      	nop
0014b0   0000     nop                      	nop
0014b2   0000     nop                      	nop
0014b4   0000     nop                      	nop
0014b6   0000     nop                      	nop
0014b8   0000     nop                      	nop
0014ba   0000     nop                      	nop
0014bc   0000     nop                      	nop
0014be   0000     nop                      	nop
0014c0   0000     nop                      	nop
0014c2   0000     nop                      	nop
0014c4   0000     nop                      	nop
0014c6   0000     nop                      	nop
0014c8   0000     nop                      	nop
0014ca   0000     nop                      	nop
0014cc   0000     nop                      	nop
0014ce   0000     nop                      	nop
0014d0   0000     nop                      	nop
0014d2   0000     nop                      	nop
0014d4   0000     nop                      	nop
0014d6   0000     nop                      	nop
0014d8   0000     nop                      	nop
0014da   0000     nop                      	nop
0014dc   0000     nop                      	nop
0014de   0000     nop                      	nop
0014e0   0000     nop                      	nop
0014e2   0000     nop                      	nop
0014e4   0000     nop                      	nop
0014e6   0000     nop                      	nop
0014e8   0000     nop                      	nop
0014ea   0000     nop                      	nop
0014ec   0000     nop                      	nop
0014ee   0000     nop                      	nop
0014f0   0000     nop                      	nop
0014f2   0000     nop                      	nop
0014f4   0000     nop                      	nop
0014f6   0000     nop                      	nop
0014f8   0000     nop                      	nop
0014fa   0000     nop                      	nop
0014fc   0000     nop                      	nop
0014fe   0000     nop                      	nop
001500   0000     nop                      	nop
001502   0000     nop                      	nop
001504   0000     nop                      	nop
001506   0000     nop                      	nop
001508   0000     nop                      	nop
00150a   0000     nop                      	nop
00150c   0000     nop                      	nop
00150e   0000     nop                      	nop
001510   0000     nop                      	nop
001512   0000     nop                      	nop
001514   0000     nop                      	nop
001516   0000     nop                      	nop
001518   0000     nop                      	nop
00151a   0000     nop                      	nop
00151c   0000     nop                      	nop
00151e   0000     nop                      	nop
001520   0000     nop                      	nop
001522   0000     nop                      	nop
001524   0000     nop                      	nop
001526   0000     nop                      	nop
001528   0000     nop                      	nop
00152a   0000     nop                      	nop
00152c   0000     nop                      	nop
00152e   0000     nop                      	nop
001530   0000     nop                      	nop
001532   0000     nop                      	nop
                                           	
                                           ;	.line	2267; meter_logger.c	PWM_PIN = 1;
001534   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001536   0000     nop                      	nop
001538   0000     nop                      	nop
00153a   0000     nop                      	nop
00153c   0000     nop                      	nop
00153e   0000     nop                      	nop
001540   0000     nop                      	nop
001542   0000     nop                      	nop
001544   0000     nop                      	nop
001546   0000     nop                      	nop
001548   0000     nop                      	nop
00154a   0000     nop                      	nop
00154c   0000     nop                      	nop
00154e   0000     nop                      	nop
001550   0000     nop                      	nop
001552   0000     nop                      	nop
001554   0000     nop                      	nop
001556   0000     nop                      	nop
001558   0000     nop                      	nop
00155a   0000     nop                      	nop
00155c   0000     nop                      	nop
00155e   0000     nop                      	nop
001560   0000     nop                      	nop
001562   0000     nop                      	nop
001564   0000     nop                      	nop
001566   0000     nop                      	nop
001568   0000     nop                      	nop
00156a   0000     nop                      	nop
00156c   0000     nop                      	nop
00156e   0000     nop                      	nop
001570   0000     nop                      	nop
001572   0000     nop                      	nop
001574   0000     nop                      	nop
001576   0000     nop                      	nop
001578   0000     nop                      	nop
00157a   0000     nop                      	nop
00157c   0000     nop                      	nop
00157e   0000     nop                      	nop
001580   0000     nop                      	nop
001582   0000     nop                      	nop
001584   0000     nop                      	nop
001586   0000     nop                      	nop
001588   0000     nop                      	nop
00158a   0000     nop                      	nop
00158c   0000     nop                      	nop
00158e   0000     nop                      	nop
001590   0000     nop                      	nop
001592   0000     nop                      	nop
001594   0000     nop                      	nop
001596   0000     nop                      	nop
001598   0000     nop                      	nop
00159a   0000     nop                      	nop
00159c   0000     nop                      	nop
00159e   0000     nop                      	nop
0015a0   0000     nop                      	nop
0015a2   0000     nop                      	nop
0015a4   0000     nop                      	nop
0015a6   0000     nop                      	nop
0015a8   0000     nop                      	nop
0015aa   0000     nop                      	nop
0015ac   0000     nop                      	nop
0015ae   0000     nop                      	nop
0015b0   0000     nop                      	nop
0015b2   0000     nop                      	nop
0015b4   0000     nop                      	nop
0015b6   0000     nop                      	nop
0015b8   0000     nop                      	nop
0015ba   0000     nop                      	nop
0015bc   0000     nop                      	nop
0015be   0000     nop                      	nop
0015c0   0000     nop                      	nop
0015c2   0000     nop                      	nop
0015c4   0000     nop                      	nop
0015c6   0000     nop                      	nop
0015c8   0000     nop                      	nop
0015ca   0000     nop                      	nop
0015cc   0000     nop                      	nop
0015ce   0000     nop                      	nop
0015d0   0000     nop                      	nop
0015d2   0000     nop                      	nop
0015d4   0000     nop                      	nop
0015d6   0000     nop                      	nop
0015d8   0000     nop                      	nop
0015da   0000     nop                      	nop
0015dc   0000     nop                      	nop
0015de   0000     nop                      	nop
0015e0   0000     nop                      	nop
0015e2   0000     nop                      	nop
0015e4   0000     nop                      	nop
0015e6   0000     nop                      	nop
0015e8   0000     nop                      	nop
0015ea   0000     nop                      	nop
0015ec   0000     nop                      	nop
0015ee   0000     nop                      	nop
0015f0   0000     nop                      	nop
0015f2   0000     nop                      	nop
0015f4   0000     nop                      	nop
0015f6   0000     nop                      	nop
0015f8   0000     nop                      	nop
0015fa   0000     nop                      	nop
0015fc   0000     nop                      	nop
0015fe   0000     nop                      	nop
001600   0000     nop                      	nop
001602   0000     nop                      	nop
001604   0000     nop                      	nop
001606   0000     nop                      	nop
001608   0000     nop                      	nop
00160a   0000     nop                      	nop
00160c   0000     nop                      	nop
00160e   0000     nop                      	nop
001610   0000     nop                      	nop
001612   0000     nop                      	nop
001614   0000     nop                      	nop
001616   0000     nop                      	nop
001618   0000     nop                      	nop
00161a   0000     nop                      	nop
00161c   0000     nop                      	nop
00161e   0000     nop                      	nop
001620   0000     nop                      	nop
001622   0000     nop                      	nop
001624   0000     nop                      	nop
001626   0000     nop                      	nop
001628   0000     nop                      	nop
00162a   0000     nop                      	nop
00162c   0000     nop                      	nop
00162e   0000     nop                      	nop
001630   0000     nop                      	nop
001632   0000     nop                      	nop
001634   0000     nop                      	nop
001636   0000     nop                      	nop
001638   0000     nop                      	nop
00163a   0000     nop                      	nop
00163c   0000     nop                      	nop
00163e   0000     nop                      	nop
001640   0000     nop                      	nop
001642   0000     nop                      	nop
                                           	
                                           ;	.line	2405; meter_logger.c	PWM_PIN = 0;
001644   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001646   0000     nop                      	nop
001648   0000     nop                      	nop
00164a   0000     nop                      	nop
00164c   0000     nop                      	nop
00164e   0000     nop                      	nop
001650   0000     nop                      	nop
001652   0000     nop                      	nop
001654   0000     nop                      	nop
001656   0000     nop                      	nop
001658   0000     nop                      	nop
00165a   0000     nop                      	nop
00165c   0000     nop                      	nop
00165e   0000     nop                      	nop
001660   0000     nop                      	nop
001662   0000     nop                      	nop
001664   0000     nop                      	nop
001666   0000     nop                      	nop
001668   0000     nop                      	nop
00166a   0000     nop                      	nop
00166c   0000     nop                      	nop
00166e   0000     nop                      	nop
001670   0000     nop                      	nop
001672   0000     nop                      	nop
001674   0000     nop                      	nop
001676   0000     nop                      	nop
001678   0000     nop                      	nop
00167a   0000     nop                      	nop
00167c   0000     nop                      	nop
00167e   0000     nop                      	nop
001680   0000     nop                      	nop
001682   0000     nop                      	nop
001684   0000     nop                      	nop
001686   0000     nop                      	nop
001688   0000     nop                      	nop
00168a   0000     nop                      	nop
00168c   0000     nop                      	nop
00168e   0000     nop                      	nop
001690   0000     nop                      	nop
001692   0000     nop                      	nop
001694   0000     nop                      	nop
001696   0000     nop                      	nop
001698   0000     nop                      	nop
00169a   0000     nop                      	nop
00169c   0000     nop                      	nop
00169e   0000     nop                      	nop
0016a0   0000     nop                      	nop
0016a2   0000     nop                      	nop
0016a4   0000     nop                      	nop
0016a6   0000     nop                      	nop
0016a8   0000     nop                      	nop
0016aa   0000     nop                      	nop
0016ac   0000     nop                      	nop
0016ae   0000     nop                      	nop
0016b0   0000     nop                      	nop
0016b2   0000     nop                      	nop
0016b4   0000     nop                      	nop
0016b6   0000     nop                      	nop
0016b8   0000     nop                      	nop
0016ba   0000     nop                      	nop
0016bc   0000     nop                      	nop
0016be   0000     nop                      	nop
0016c0   0000     nop                      	nop
0016c2   0000     nop                      	nop
0016c4   0000     nop                      	nop
0016c6   0000     nop                      	nop
0016c8   0000     nop                      	nop
0016ca   0000     nop                      	nop
0016cc   0000     nop                      	nop
0016ce   0000     nop                      	nop
0016d0   0000     nop                      	nop
0016d2   0000     nop                      	nop
0016d4   0000     nop                      	nop
0016d6   0000     nop                      	nop
0016d8   0000     nop                      	nop
0016da   0000     nop                      	nop
0016dc   0000     nop                      	nop
0016de   0000     nop                      	nop
0016e0   0000     nop                      	nop
0016e2   0000     nop                      	nop
0016e4   0000     nop                      	nop
0016e6   0000     nop                      	nop
0016e8   0000     nop                      	nop
0016ea   0000     nop                      	nop
0016ec   0000     nop                      	nop
0016ee   0000     nop                      	nop
0016f0   0000     nop                      	nop
0016f2   0000     nop                      	nop
0016f4   0000     nop                      	nop
0016f6   0000     nop                      	nop
0016f8   0000     nop                      	nop
0016fa   0000     nop                      	nop
0016fc   0000     nop                      	nop
0016fe   0000     nop                      	nop
001700   0000     nop                      	nop
001702   0000     nop                      	nop
001704   0000     nop                      	nop
001706   0000     nop                      	nop
001708   0000     nop                      	nop
00170a   0000     nop                      	nop
00170c   0000     nop                      	nop
00170e   0000     nop                      	nop
001710   0000     nop                      	nop
001712   0000     nop                      	nop
001714   0000     nop                      	nop
001716   0000     nop                      	nop
001718   0000     nop                      	nop
00171a   0000     nop                      	nop
00171c   0000     nop                      	nop
00171e   0000     nop                      	nop
001720   0000     nop                      	nop
001722   0000     nop                      	nop
001724   0000     nop                      	nop
001726   0000     nop                      	nop
001728   0000     nop                      	nop
00172a   0000     nop                      	nop
00172c   0000     nop                      	nop
00172e   0000     nop                      	nop
001730   0000     nop                      	nop
001732   0000     nop                      	nop
001734   0000     nop                      	nop
001736   0000     nop                      	nop
001738   0000     nop                      	nop
00173a   0000     nop                      	nop
00173c   0000     nop                      	nop
00173e   0000     nop                      	nop
001740   0000     nop                      	nop
001742   0000     nop                      	nop
001744   0000     nop                      	nop
001746   0000     nop                      	nop
001748   0000     nop                      	nop
00174a   0000     nop                      	nop
00174c   0000     nop                      	nop
00174e   0000     nop                      	nop
001750   0000     nop                      	nop
001752   0000     nop                      	nop
                                           	
                                           ;	.line	2543; meter_logger.c	PWM_PIN = 1;
001754   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001756   0000     nop                      	nop
001758   0000     nop                      	nop
00175a   0000     nop                      	nop
00175c   0000     nop                      	nop
00175e   0000     nop                      	nop
001760   0000     nop                      	nop
001762   0000     nop                      	nop
001764   0000     nop                      	nop
001766   0000     nop                      	nop
001768   0000     nop                      	nop
00176a   0000     nop                      	nop
00176c   0000     nop                      	nop
00176e   0000     nop                      	nop
001770   0000     nop                      	nop
001772   0000     nop                      	nop
001774   0000     nop                      	nop
001776   0000     nop                      	nop
001778   0000     nop                      	nop
00177a   0000     nop                      	nop
00177c   0000     nop                      	nop
00177e   0000     nop                      	nop
001780   0000     nop                      	nop
001782   0000     nop                      	nop
001784   0000     nop                      	nop
001786   0000     nop                      	nop
001788   0000     nop                      	nop
00178a   0000     nop                      	nop
00178c   0000     nop                      	nop
00178e   0000     nop                      	nop
001790   0000     nop                      	nop
001792   0000     nop                      	nop
001794   0000     nop                      	nop
001796   0000     nop                      	nop
001798   0000     nop                      	nop
00179a   0000     nop                      	nop
00179c   0000     nop                      	nop
00179e   0000     nop                      	nop
0017a0   0000     nop                      	nop
0017a2   0000     nop                      	nop
0017a4   0000     nop                      	nop
0017a6   0000     nop                      	nop
0017a8   0000     nop                      	nop
0017aa   0000     nop                      	nop
0017ac   0000     nop                      	nop
0017ae   0000     nop                      	nop
0017b0   0000     nop                      	nop
0017b2   0000     nop                      	nop
0017b4   0000     nop                      	nop
0017b6   0000     nop                      	nop
0017b8   0000     nop                      	nop
0017ba   0000     nop                      	nop
0017bc   0000     nop                      	nop
0017be   0000     nop                      	nop
0017c0   0000     nop                      	nop
0017c2   0000     nop                      	nop
0017c4   0000     nop                      	nop
0017c6   0000     nop                      	nop
0017c8   0000     nop                      	nop
0017ca   0000     nop                      	nop
0017cc   0000     nop                      	nop
0017ce   0000     nop                      	nop
0017d0   0000     nop                      	nop
0017d2   0000     nop                      	nop
0017d4   0000     nop                      	nop
0017d6   0000     nop                      	nop
0017d8   0000     nop                      	nop
0017da   0000     nop                      	nop
0017dc   0000     nop                      	nop
0017de   0000     nop                      	nop
0017e0   0000     nop                      	nop
0017e2   0000     nop                      	nop
0017e4   0000     nop                      	nop
0017e6   0000     nop                      	nop
0017e8   0000     nop                      	nop
0017ea   0000     nop                      	nop
0017ec   0000     nop                      	nop
0017ee   0000     nop                      	nop
0017f0   0000     nop                      	nop
0017f2   0000     nop                      	nop
0017f4   0000     nop                      	nop
0017f6   0000     nop                      	nop
0017f8   0000     nop                      	nop
0017fa   0000     nop                      	nop
0017fc   0000     nop                      	nop
0017fe   0000     nop                      	nop
001800   0000     nop                      	nop
001802   0000     nop                      	nop
001804   0000     nop                      	nop
001806   0000     nop                      	nop
001808   0000     nop                      	nop
00180a   0000     nop                      	nop
00180c   0000     nop                      	nop
00180e   0000     nop                      	nop
001810   0000     nop                      	nop
001812   0000     nop                      	nop
001814   0000     nop                      	nop
001816   0000     nop                      	nop
001818   0000     nop                      	nop
00181a   0000     nop                      	nop
00181c   0000     nop                      	nop
00181e   0000     nop                      	nop
001820   0000     nop                      	nop
001822   0000     nop                      	nop
001824   0000     nop                      	nop
001826   0000     nop                      	nop
001828   0000     nop                      	nop
00182a   0000     nop                      	nop
00182c   0000     nop                      	nop
00182e   0000     nop                      	nop
001830   0000     nop                      	nop
001832   0000     nop                      	nop
001834   0000     nop                      	nop
001836   0000     nop                      	nop
001838   0000     nop                      	nop
00183a   0000     nop                      	nop
00183c   0000     nop                      	nop
00183e   0000     nop                      	nop
001840   0000     nop                      	nop
001842   0000     nop                      	nop
001844   0000     nop                      	nop
001846   0000     nop                      	nop
001848   0000     nop                      	nop
00184a   0000     nop                      	nop
00184c   0000     nop                      	nop
00184e   0000     nop                      	nop
001850   0000     nop                      	nop
001852   0000     nop                      	nop
001854   0000     nop                      	nop
001856   0000     nop                      	nop
001858   0000     nop                      	nop
00185a   0000     nop                      	nop
00185c   0000     nop                      	nop
00185e   0000     nop                      	nop
001860   0000     nop                      	nop
001862   0000     nop                      	nop
                                           	
                                           ;	.line	2681; meter_logger.c	PWM_PIN = 0;
001864   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001866   0000     nop                      	nop
001868   0000     nop                      	nop
00186a   0000     nop                      	nop
00186c   0000     nop                      	nop
00186e   0000     nop                      	nop
001870   0000     nop                      	nop
001872   0000     nop                      	nop
001874   0000     nop                      	nop
001876   0000     nop                      	nop
001878   0000     nop                      	nop
00187a   0000     nop                      	nop
00187c   0000     nop                      	nop
00187e   0000     nop                      	nop
001880   0000     nop                      	nop
001882   0000     nop                      	nop
001884   0000     nop                      	nop
001886   0000     nop                      	nop
001888   0000     nop                      	nop
00188a   0000     nop                      	nop
00188c   0000     nop                      	nop
00188e   0000     nop                      	nop
001890   0000     nop                      	nop
001892   0000     nop                      	nop
001894   0000     nop                      	nop
001896   0000     nop                      	nop
001898   0000     nop                      	nop
00189a   0000     nop                      	nop
00189c   0000     nop                      	nop
00189e   0000     nop                      	nop
0018a0   0000     nop                      	nop
0018a2   0000     nop                      	nop
0018a4   0000     nop                      	nop
0018a6   0000     nop                      	nop
0018a8   0000     nop                      	nop
0018aa   0000     nop                      	nop
0018ac   0000     nop                      	nop
0018ae   0000     nop                      	nop
0018b0   0000     nop                      	nop
0018b2   0000     nop                      	nop
0018b4   0000     nop                      	nop
0018b6   0000     nop                      	nop
0018b8   0000     nop                      	nop
0018ba   0000     nop                      	nop
0018bc   0000     nop                      	nop
0018be   0000     nop                      	nop
0018c0   0000     nop                      	nop
0018c2   0000     nop                      	nop
0018c4   0000     nop                      	nop
0018c6   0000     nop                      	nop
0018c8   0000     nop                      	nop
0018ca   0000     nop                      	nop
0018cc   0000     nop                      	nop
0018ce   0000     nop                      	nop
0018d0   0000     nop                      	nop
0018d2   0000     nop                      	nop
0018d4   0000     nop                      	nop
0018d6   0000     nop                      	nop
0018d8   0000     nop                      	nop
0018da   0000     nop                      	nop
0018dc   0000     nop                      	nop
0018de   0000     nop                      	nop
0018e0   0000     nop                      	nop
0018e2   0000     nop                      	nop
0018e4   0000     nop                      	nop
0018e6   0000     nop                      	nop
0018e8   0000     nop                      	nop
0018ea   0000     nop                      	nop
0018ec   0000     nop                      	nop
0018ee   0000     nop                      	nop
0018f0   0000     nop                      	nop
0018f2   0000     nop                      	nop
0018f4   0000     nop                      	nop
0018f6   0000     nop                      	nop
0018f8   0000     nop                      	nop
0018fa   0000     nop                      	nop
0018fc   0000     nop                      	nop
0018fe   0000     nop                      	nop
001900   0000     nop                      	nop
001902   0000     nop                      	nop
001904   0000     nop                      	nop
001906   0000     nop                      	nop
001908   0000     nop                      	nop
00190a   0000     nop                      	nop
00190c   0000     nop                      	nop
00190e   0000     nop                      	nop
001910   0000     nop                      	nop
001912   0000     nop                      	nop
001914   0000     nop                      	nop
001916   0000     nop                      	nop
001918   0000     nop                      	nop
00191a   0000     nop                      	nop
00191c   0000     nop                      	nop
00191e   0000     nop                      	nop
001920   0000     nop                      	nop
001922   0000     nop                      	nop
001924   0000     nop                      	nop
001926   0000     nop                      	nop
001928   0000     nop                      	nop
00192a   0000     nop                      	nop
00192c   0000     nop                      	nop
00192e   0000     nop                      	nop
001930   0000     nop                      	nop
001932   0000     nop                      	nop
001934   0000     nop                      	nop
001936   0000     nop                      	nop
001938   0000     nop                      	nop
00193a   0000     nop                      	nop
00193c   0000     nop                      	nop
00193e   0000     nop                      	nop
001940   0000     nop                      	nop
001942   0000     nop                      	nop
001944   0000     nop                      	nop
001946   0000     nop                      	nop
001948   0000     nop                      	nop
00194a   0000     nop                      	nop
00194c   0000     nop                      	nop
00194e   0000     nop                      	nop
001950   0000     nop                      	nop
001952   0000     nop                      	nop
001954   0000     nop                      	nop
001956   0000     nop                      	nop
001958   0000     nop                      	nop
00195a   0000     nop                      	nop
00195c   0000     nop                      	nop
00195e   0000     nop                      	nop
001960   0000     nop                      	nop
001962   0000     nop                      	nop
001964   0000     nop                      	nop
001966   0000     nop                      	nop
001968   0000     nop                      	nop
00196a   0000     nop                      	nop
00196c   0000     nop                      	nop
00196e   0000     nop                      	nop
001970   0000     nop                      	nop
001972   0000     nop                      	nop
                                           	
                                           ;	.line	2819; meter_logger.c	PWM_PIN = 1;
001974   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001976   0000     nop                      	nop
001978   0000     nop                      	nop
00197a   0000     nop                      	nop
00197c   0000     nop                      	nop
00197e   0000     nop                      	nop
001980   0000     nop                      	nop
001982   0000     nop                      	nop
001984   0000     nop                      	nop
001986   0000     nop                      	nop
001988   0000     nop                      	nop
00198a   0000     nop                      	nop
00198c   0000     nop                      	nop
00198e   0000     nop                      	nop
001990   0000     nop                      	nop
001992   0000     nop                      	nop
001994   0000     nop                      	nop
001996   0000     nop                      	nop
001998   0000     nop                      	nop
00199a   0000     nop                      	nop
00199c   0000     nop                      	nop
00199e   0000     nop                      	nop
0019a0   0000     nop                      	nop
0019a2   0000     nop                      	nop
0019a4   0000     nop                      	nop
0019a6   0000     nop                      	nop
0019a8   0000     nop                      	nop
0019aa   0000     nop                      	nop
0019ac   0000     nop                      	nop
0019ae   0000     nop                      	nop
0019b0   0000     nop                      	nop
0019b2   0000     nop                      	nop
0019b4   0000     nop                      	nop
0019b6   0000     nop                      	nop
0019b8   0000     nop                      	nop
0019ba   0000     nop                      	nop
0019bc   0000     nop                      	nop
0019be   0000     nop                      	nop
0019c0   0000     nop                      	nop
0019c2   0000     nop                      	nop
0019c4   0000     nop                      	nop
0019c6   0000     nop                      	nop
0019c8   0000     nop                      	nop
0019ca   0000     nop                      	nop
0019cc   0000     nop                      	nop
0019ce   0000     nop                      	nop
0019d0   0000     nop                      	nop
0019d2   0000     nop                      	nop
0019d4   0000     nop                      	nop
0019d6   0000     nop                      	nop
0019d8   0000     nop                      	nop
0019da   0000     nop                      	nop
0019dc   0000     nop                      	nop
0019de   0000     nop                      	nop
0019e0   0000     nop                      	nop
0019e2   0000     nop                      	nop
0019e4   0000     nop                      	nop
0019e6   0000     nop                      	nop
0019e8   0000     nop                      	nop
0019ea   0000     nop                      	nop
0019ec   0000     nop                      	nop
0019ee   0000     nop                      	nop
0019f0   0000     nop                      	nop
0019f2   0000     nop                      	nop
0019f4   0000     nop                      	nop
0019f6   0000     nop                      	nop
0019f8   0000     nop                      	nop
0019fa   0000     nop                      	nop
0019fc   0000     nop                      	nop
0019fe   0000     nop                      	nop
001a00   0000     nop                      	nop
001a02   0000     nop                      	nop
001a04   0000     nop                      	nop
001a06   0000     nop                      	nop
001a08   0000     nop                      	nop
001a0a   0000     nop                      	nop
001a0c   0000     nop                      	nop
001a0e   0000     nop                      	nop
001a10   0000     nop                      	nop
001a12   0000     nop                      	nop
001a14   0000     nop                      	nop
001a16   0000     nop                      	nop
001a18   0000     nop                      	nop
001a1a   0000     nop                      	nop
001a1c   0000     nop                      	nop
001a1e   0000     nop                      	nop
001a20   0000     nop                      	nop
001a22   0000     nop                      	nop
001a24   0000     nop                      	nop
001a26   0000     nop                      	nop
001a28   0000     nop                      	nop
001a2a   0000     nop                      	nop
001a2c   0000     nop                      	nop
001a2e   0000     nop                      	nop
001a30   0000     nop                      	nop
001a32   0000     nop                      	nop
001a34   0000     nop                      	nop
001a36   0000     nop                      	nop
001a38   0000     nop                      	nop
001a3a   0000     nop                      	nop
001a3c   0000     nop                      	nop
001a3e   0000     nop                      	nop
001a40   0000     nop                      	nop
001a42   0000     nop                      	nop
001a44   0000     nop                      	nop
001a46   0000     nop                      	nop
001a48   0000     nop                      	nop
001a4a   0000     nop                      	nop
001a4c   0000     nop                      	nop
001a4e   0000     nop                      	nop
001a50   0000     nop                      	nop
001a52   0000     nop                      	nop
001a54   0000     nop                      	nop
001a56   0000     nop                      	nop
001a58   0000     nop                      	nop
001a5a   0000     nop                      	nop
001a5c   0000     nop                      	nop
001a5e   0000     nop                      	nop
001a60   0000     nop                      	nop
001a62   0000     nop                      	nop
001a64   0000     nop                      	nop
001a66   0000     nop                      	nop
001a68   0000     nop                      	nop
001a6a   0000     nop                      	nop
001a6c   0000     nop                      	nop
001a6e   0000     nop                      	nop
001a70   0000     nop                      	nop
001a72   0000     nop                      	nop
001a74   0000     nop                      	nop
001a76   0000     nop                      	nop
001a78   0000     nop                      	nop
001a7a   0000     nop                      	nop
001a7c   0000     nop                      	nop
001a7e   0000     nop                      	nop
001a80   0000     nop                      	nop
001a82   0000     nop                      	nop
                                           	
                                           ;	.line	2957; meter_logger.c	PWM_PIN = 0;
001a84   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001a86   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
001a88   ffd9
001a8a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_rx_disable	code
                                           _fsk_rx_disable:
                                           ;	.line	1433; meter_logger.c	void fsk_rx_disable() {
005398   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00539a   ffe5
00539c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00539e   ffd9
                                           ;	.line	1434; meter_logger.c	PIE2bits.CMIE = 0;		// Disable comparator interrupt
0053a0   9ca0     bcf     0xa0, 0x6, 0     	BCF	_PIE2bits, 6
0053a2   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1435; meter_logger.c	codec_type = NONE;
0053a4   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
0053a6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0053a8   ffd9
0053aa   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_rx_enable	code
                                           _fsk_rx_enable:
                                           ;	.line	1397; meter_logger.c	void fsk_rx_enable() {
004d92   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004d94   ffe5
004d96   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004d98   ffd9
                                           ;	.line	1398; meter_logger.c	fsk_proto.state = START_BIT_WAIT;
004d9a   0e02     movlw   0x2              	MOVLW	0x02
004d9c   0105     movlb   0x5              	BANKSEL	_fsk_proto
004d9e   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1399; meter_logger.c	fsk_proto.start_bit_time = 0;
004da0   6b0a     clrf    0xa, 0x1         	CLRF	(_fsk_proto + 10), B
                                           ; removed redundant BANKSEL
004da2   6b0b     clrf    0xb, 0x1         	CLRF	(_fsk_proto + 11), B
                                           ;	.line	1401; meter_logger.c	timer0_reload = TIMER0_FSK;
004da4   0e9f     movlw   0x9f             	MOVLW	0x9f
004da6   0105     movlb   0x5              	BANKSEL	_timer0_reload
004da8   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
004daa   0ef9     movlw   0xf9             	MOVLW	0xf9
                                           ; removed redundant BANKSEL
004dac   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
                                           ;	.line	1403; meter_logger.c	codec_type = FSK_RX;
004dae   0e06     movlw   0x6              	MOVLW	0x06
004db0   0105     movlb   0x5              	BANKSEL	_codec_type
004db2   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1406; meter_logger.c	T0CONbits.TMR0ON = 1;
004db4   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1407; meter_logger.c	T0CONbits.T0PS0 = 0;
004db6   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1408; meter_logger.c	T0CONbits.T0PS1 = 0;
004db8   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1409; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004dba   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1410; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004dbc   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1411; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004dbe   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1412; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004dc0   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1413; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004dc2   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1414; meter_logger.c	INTCONbits.TMR0IE = 0;		// Dont enable TMR0 Interrupt
004dc4   9af2     bcf     0xf2, 0x5, 0     	BCF	_INTCONbits, 5
                                           ;	.line	1417; meter_logger.c	CVRCONbits.CVREF = 0xf;	// 0V
004dc6   88b5     bsf     0xb5, 0x4, 0     	BSF	_CVRCONbits, 4
                                           ;	.line	1419; meter_logger.c	CVRCONbits.CVRSS = 0;	// VDD – VSS
004dc8   98b5     bcf     0xb5, 0x4, 0     	BCF	_CVRCONbits, 4
                                           ;	.line	1420; meter_logger.c	CVRCONbits.CVRR = 0;	// high range, 0.25 CVRSRC to 0.75 CVRSRC, with CVRSRC/32 step size
004dca   9ab5     bcf     0xb5, 0x5, 0     	BCF	_CVRCONbits, 5
                                           ;	.line	1421; meter_logger.c	CVRCONbits.CVR = 9;		// 2,65625 V
004dcc   50b5     movf    0xb5, 0, 0       	MOVF	_CVRCONbits, W
004dce   0bf0     andlw   0xf0             	ANDLW	0xf0
004dd0   0909     iorlw   0x9              	IORLW	0x09
004dd2   6eb5     movwf   0xb5, 0          	MOVWF	_CVRCONbits
                                           ;	.line	1422; meter_logger.c	CVRCONbits.CVROE = 0;	// Comparator VREF Output disabled, CVREF voltage is disconnected from the RA2/AN2/VREF-/CVREF pin
004dd4   9cb5     bcf     0xb5, 0x6, 0     	BCF	_CVRCONbits, 6
                                           ;	.line	1423; meter_logger.c	CVRCONbits.CVREN = 1;	// Comparator Voltage Reference Enable bit
004dd6   8eb5     bsf     0xb5, 0x7, 0     	BSF	_CVRCONbits, 7
                                           ;	.line	1425; meter_logger.c	CMCONbits.CM = 0x6;		// four inputs multiplexed to two comparators
004dd8   50b4     movf    0xb4, 0, 0       	MOVF	_CMCONbits, W
004dda   0bf8     andlw   0xf8             	ANDLW	0xf8
004ddc   0906     iorlw   0x6              	IORLW	0x06
004dde   6eb4     movwf   0xb4, 0          	MOVWF	_CMCONbits
                                           ;	.line	1426; meter_logger.c	CMCONbits.CIS = 0;		// multiplexed to RA0/AN0 and RA1/AN1
004de0   96b4     bcf     0xb4, 0x3, 0     	BCF	_CMCONbits, 3
                                           ;	.line	1427; meter_logger.c	CMCONbits.C1INV = 1;	// inverted output, C1 VIN+ < C1 VIN-
004de2   88b4     bsf     0xb4, 0x4, 0     	BSF	_CMCONbits, 4
                                           ;	.line	1429; meter_logger.c	IPR2bits.CMIP = 1;		// high priority
004de4   8ca2     bsf     0xa2, 0x6, 0     	BSF	_IPR2bits, 6
                                           ;	.line	1430; meter_logger.c	PIE2bits.CMIE = 1;		// Enable comparator interrupt
004de6   8ca0     bsf     0xa0, 0x6, 0     	BSF	_PIE2bits, 6
004de8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004dea   ffd9
004dec   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_disable	code
                                           _fsk_tx_disable:
                                           ;	.line	1391; meter_logger.c	void fsk_tx_disable() {
005314   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005316   ffe5
005318   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00531a   ffd9
00531c   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1392; meter_logger.c	codec_type = NONE;
00531e   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1393; meter_logger.c	T0CONbits.TMR0ON = 0;	// Disable TMR0 
005320   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1394; meter_logger.c	PIE2bits.CMIE = 1;		// Disable comparator interrupt
005322   8ca0     bsf     0xa0, 0x6, 0     	BSF	_PIE2bits, 6
005324   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005326   ffd9
005328   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_enable	code
                                           _fsk_tx_enable:
                                           ;	.line	1373; meter_logger.c	void fsk_tx_enable() {
005064   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005066   ffe5
005068   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00506a   ffd9
                                           ;	.line	1374; meter_logger.c	timer0_reload = TIMER0_FSK;
00506c   0e9f     movlw   0x9f             	MOVLW	0x9f
00506e   0105     movlb   0x5              	BANKSEL	_timer0_reload
005070   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
005072   0ef9     movlw   0xf9             	MOVLW	0xf9
                                           ; removed redundant BANKSEL
005074   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
005076   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	1376; meter_logger.c	fsk_proto.state = INIT_STATE;
005078   6b00     clrf    0, 0x1           	CLRF	_fsk_proto, B
                                           ;	.line	1377; meter_logger.c	codec_type = FSK_TX;
00507a   0e07     movlw   0x7              	MOVLW	0x07
00507c   0105     movlb   0x5              	BANKSEL	_codec_type
00507e   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1380; meter_logger.c	T0CONbits.TMR0ON = 1;
005080   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1381; meter_logger.c	T0CONbits.T0PS0 = 0;
005082   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1382; meter_logger.c	T0CONbits.T0PS1 = 0;
005084   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1383; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
005086   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1384; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
005088   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1385; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
00508a   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1386; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
00508c   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1387; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
00508e   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1388; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
005090   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
005092   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005094   ffd9
005096   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_tx_byte	code
                                           _rs232_7e1_tx_byte:
                                           ;	.line	1363; meter_logger.c	void rs232_7e1_tx_byte(unsigned char c) {
005098   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00509a   ffe5
00509c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00509e   ffd9
0050a0   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0050a2   ffe5
0050a4   0e02     movlw   0x2              	MOVLW	0x02
0050a6   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0050a8   f000
                                           ;	.line	1364; meter_logger.c	rs232_proto.data = c;
0050aa   5000     movf    0, 0, 0          	MOVF	r0x00, W
0050ac   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
0050ae   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	1365; meter_logger.c	rs232_proto.data_len = 7;
0050b0   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
0050b2   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	1366; meter_logger.c	T0CONbits.TMR0ON = 1;		// start timer 0
0050b4   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1367; meter_logger.c	INTCONbits.TMR0IF = 1;		// enter timer interrupt handler now
0050b6   84f2     bsf     0xf2, 0x2, 0     	BSF	_INTCONbits, 2
                                           _01030_DS_:
0050b8   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	1368; meter_logger.c	while (rs232_proto.data_len) {
0050ba   5126     movf    0x26, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
0050bc   e1fd     bnz     0x50b8           	BNZ	_01030_DS_
0050be   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0050c0   f000
0050c2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0050c4   ffd9
0050c6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_rx_disable	code
                                           _rs232_7e1_rx_disable:
                                           ;	.line	1357; meter_logger.c	void rs232_7e1_rx_disable() {
00532a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00532c   ffe5
00532e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005330   ffd9
                                           ;	.line	1358; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
005332   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
005334   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1359; meter_logger.c	codec_type = NONE;
005336   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1360; meter_logger.c	T0CONbits.TMR0ON = 0;
005338   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
00533a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00533c   ffd9
00533e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_rx_enable	code
                                           _rs232_7e1_rx_enable:
                                           ;	.line	1333; meter_logger.c	void rs232_7e1_rx_enable(unsigned int t) {
004e44   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004e46   ffe5
004e48   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004e4a   ffd9
004e4c   0e02     movlw   0x2              	MOVLW	0x02
004e4e   cfdb     movff   0xfdb, 0x548     	MOVFF	PLUSW2, _timer0_reload
004e50   f548
004e52   0e03     movlw   0x3              	MOVLW	0x03
004e54   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, (_timer0_reload + 1)
004e56   f549
                                           ;	.line	1334; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
004e58   0e02     movlw   0x2              	MOVLW	0x02
004e5a   0105     movlb   0x5              	BANKSEL	_rs232_proto
004e5c   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1335; meter_logger.c	rs232_proto.data_len = 0;
004e5e   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1339; meter_logger.c	codec_type = RS232_7E1_RX;
004e60   0e04     movlw   0x4              	MOVLW	0x04
004e62   0105     movlb   0x5              	BANKSEL	_codec_type
004e64   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1342; meter_logger.c	T0CONbits.TMR0ON = 0;
004e66   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1343; meter_logger.c	T0CONbits.T0PS0 = 0;
004e68   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1344; meter_logger.c	T0CONbits.T0PS1 = 0;
004e6a   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1345; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004e6c   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1346; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004e6e   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1347; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004e70   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1348; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004e72   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1349; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004e74   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1350; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004e76   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1351; meter_logger.c	INTCONbits.TMR0IF = 0;
004e78   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1353; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
004e7a   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1354; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004e7c   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
004e7e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004e80   ffd9
004e82   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_tx_disable	code
                                           _rs232_7e1_tx_disable:
                                           ;	.line	1327; meter_logger.c	void rs232_7e1_tx_disable() {
005340   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005342   ffe5
005344   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005346   ffd9
005348   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1328; meter_logger.c	codec_type = NONE;
00534a   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1329; meter_logger.c	IR_LED_PIN = 0;				// no need to set it to inverted idle
00534c   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1330; meter_logger.c	T0CONbits.TMR0ON = 0;
00534e   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
005350   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005352   ffd9
005354   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_tx_enable	code
                                           _rs232_7e1_tx_enable:
                                           ;	.line	1301; meter_logger.c	void rs232_7e1_tx_enable(unsigned int t) {
004f04   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004f06   ffe5
004f08   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004f0a   ffd9
004f0c   0e02     movlw   0x2              	MOVLW	0x02
004f0e   cfdb     movff   0xfdb, 0x548     	MOVFF	PLUSW2, _timer0_reload
004f10   f548
004f12   0e03     movlw   0x3              	MOVLW	0x03
004f14   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, (_timer0_reload + 1)
004f16   f549
004f18   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	1304; meter_logger.c	rs232_proto.state = INIT_STATE;
004f1a   6b23     clrf    0x23, 0x1        	CLRF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1305; meter_logger.c	rs232_proto.data_len = 0;
004f1c   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1307; meter_logger.c	IR_LED_PIN = 0;				// inverted rs232 output on ir, idle = no ir light
004f1e   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1309; meter_logger.c	codec_type = RS232_7E1_TX;
004f20   0e05     movlw   0x5              	MOVLW	0x05
004f22   0105     movlb   0x5              	BANKSEL	_codec_type
004f24   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1312; meter_logger.c	T0CONbits.TMR0ON = 0;
004f26   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1313; meter_logger.c	T0CONbits.T0PS0 = 0;
004f28   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1314; meter_logger.c	T0CONbits.T0PS1 = 0;
004f2a   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1315; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004f2c   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1316; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004f2e   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1317; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004f30   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1318; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004f32   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1319; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004f34   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1320; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004f36   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1321; meter_logger.c	INTCONbits.TMR0IF = 0;
004f38   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1324; meter_logger.c	T0CONbits.TMR0ON = 0;		// timer 0 started in rs232_8n2_tx_byte()
004f3a   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
004f3c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004f3e   ffd9
004f40   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_tx_byte	code
                                           _rs232_8n2_tx_byte:
                                           ;	.line	1291; meter_logger.c	void rs232_8n2_tx_byte(unsigned char c) {
0050c8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0050ca   ffe5
0050cc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0050ce   ffd9
0050d0   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0050d2   ffe5
0050d4   0e02     movlw   0x2              	MOVLW	0x02
0050d6   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0050d8   f000
                                           ;	.line	1292; meter_logger.c	rs232_proto.data = c;
0050da   5000     movf    0, 0, 0          	MOVF	r0x00, W
0050dc   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
0050de   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	1293; meter_logger.c	rs232_proto.data_len = 8;
0050e0   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
0050e2   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	1294; meter_logger.c	T0CONbits.TMR0ON = 1;		// start timer 0
0050e4   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1295; meter_logger.c	INTCONbits.TMR0IF = 1;		// enter timer interrupt handler now
0050e6   84f2     bsf     0xf2, 0x2, 0     	BSF	_INTCONbits, 2
                                           _01002_DS_:
0050e8   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	1296; meter_logger.c	while (rs232_proto.data_len) {
0050ea   5126     movf    0x26, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
0050ec   e1fd     bnz     0x50e8           	BNZ	_01002_DS_
0050ee   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0050f0   f000
0050f2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0050f4   ffd9
0050f6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_rx_disable	code
                                           _rs232_8n2_rx_disable:
                                           ;	.line	1285; meter_logger.c	void rs232_8n2_rx_disable() {
005356   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005358   ffe5
00535a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00535c   ffd9
                                           ;	.line	1286; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
00535e   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
005360   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1287; meter_logger.c	codec_type = NONE;
005362   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1288; meter_logger.c	T0CONbits.TMR0ON = 0;
005364   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
005366   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005368   ffd9
00536a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_rx_enable	code
                                           _rs232_8n2_rx_enable:
                                           ;	.line	1261; meter_logger.c	void rs232_8n2_rx_enable(unsigned int t) {
004e84   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004e86   ffe5
004e88   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004e8a   ffd9
004e8c   0e02     movlw   0x2              	MOVLW	0x02
004e8e   cfdb     movff   0xfdb, 0x548     	MOVFF	PLUSW2, _timer0_reload
004e90   f548
004e92   0e03     movlw   0x3              	MOVLW	0x03
004e94   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, (_timer0_reload + 1)
004e96   f549
                                           ;	.line	1262; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
004e98   0e02     movlw   0x2              	MOVLW	0x02
004e9a   0105     movlb   0x5              	BANKSEL	_rs232_proto
004e9c   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1263; meter_logger.c	rs232_proto.data_len = 0;
004e9e   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1267; meter_logger.c	codec_type = RS232_8N2_RX;
004ea0   0e02     movlw   0x2              	MOVLW	0x02
004ea2   0105     movlb   0x5              	BANKSEL	_codec_type
004ea4   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1270; meter_logger.c	T0CONbits.TMR0ON = 0;
004ea6   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1271; meter_logger.c	T0CONbits.T0PS0 = 0;
004ea8   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1272; meter_logger.c	T0CONbits.T0PS1 = 0;
004eaa   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1273; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004eac   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1274; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004eae   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1275; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004eb0   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1276; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004eb2   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1277; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004eb4   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1278; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004eb6   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1279; meter_logger.c	INTCONbits.TMR0IF = 0;
004eb8   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1281; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
004eba   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1282; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004ebc   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
004ebe   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004ec0   ffd9
004ec2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_tx_disable	code
                                           _rs232_8n2_tx_disable:
                                           ;	.line	1255; meter_logger.c	void rs232_8n2_tx_disable() {
00536c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00536e   ffe5
005370   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005372   ffd9
005374   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1256; meter_logger.c	codec_type = NONE;
005376   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1257; meter_logger.c	IR_LED_PIN = 0;				// no need to set it to inverted idle
005378   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1258; meter_logger.c	T0CONbits.TMR0ON = 0;
00537a   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
00537c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00537e   ffd9
005380   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_tx_enable	code
                                           _rs232_8n2_tx_enable:
                                           ;	.line	1229; meter_logger.c	void rs232_8n2_tx_enable(unsigned int t) {
004f42   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004f44   ffe5
004f46   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004f48   ffd9
004f4a   0e02     movlw   0x2              	MOVLW	0x02
004f4c   cfdb     movff   0xfdb, 0x548     	MOVFF	PLUSW2, _timer0_reload
004f4e   f548
004f50   0e03     movlw   0x3              	MOVLW	0x03
004f52   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, (_timer0_reload + 1)
004f54   f549
004f56   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	1232; meter_logger.c	rs232_proto.state = INIT_STATE;
004f58   6b23     clrf    0x23, 0x1        	CLRF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1233; meter_logger.c	rs232_proto.data_len = 0;
004f5a   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1235; meter_logger.c	IR_LED_PIN = 0;				// inverted rs232 output on ir, idle = no ir light
004f5c   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1237; meter_logger.c	codec_type = RS232_8N2_TX;
004f5e   0e03     movlw   0x3              	MOVLW	0x03
004f60   0105     movlb   0x5              	BANKSEL	_codec_type
004f62   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1240; meter_logger.c	T0CONbits.TMR0ON = 0;
004f64   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1241; meter_logger.c	T0CONbits.T0PS0 = 0;
004f66   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1242; meter_logger.c	T0CONbits.T0PS1 = 0;
004f68   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1243; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004f6a   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1244; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004f6c   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1245; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004f6e   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1246; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004f70   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1247; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004f72   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1248; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004f74   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1249; meter_logger.c	INTCONbits.TMR0IF = 0;
004f76   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1252; meter_logger.c	T0CONbits.TMR0ON = 0;		// timer 0 started in rs232_8n2_tx_byte()
004f78   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
004f7a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004f7c   ffd9
004f7e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_ir_disable	code
                                           _testo_ir_disable:
                                           ;	.line	1224; meter_logger.c	void testo_ir_disable() {
0053ac   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0053ae   ffe5
0053b0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0053b2   ffd9
0053b4   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1225; meter_logger.c	codec_type = NONE;
0053b6   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1226; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
0053b8   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
0053ba   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0053bc   ffd9
0053be   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_ir_enable	code
                                           _testo_ir_enable:
                                           ;	.line	1200; meter_logger.c	void testo_ir_enable() {
004f80   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004f82   ffe5
004f84   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004f86   ffd9
004f88   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	1201; meter_logger.c	testo_ir_proto.state = INIT_STATE;
004f8a   6b1d     clrf    0x1d, 0x1        	CLRF	_testo_ir_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1202; meter_logger.c	testo_ir_proto.start_bit_len = 0;
004f8c   6b1f     clrf    0x1f, 0x1        	CLRF	(_testo_ir_proto + 2), B
                                           ;	.line	1204; meter_logger.c	timer0_reload = TIMER0_TESTO;
004f8e   0e23     movlw   0x23             	MOVLW	0x23
004f90   0105     movlb   0x5              	BANKSEL	_timer0_reload
004f92   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
004f94   0ef3     movlw   0xf3             	MOVLW	0xf3
                                           ; removed redundant BANKSEL
004f96   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
                                           ;	.line	1206; meter_logger.c	codec_type = TESTO;
004f98   0e01     movlw   0x1              	MOVLW	0x01
004f9a   0105     movlb   0x5              	BANKSEL	_codec_type
004f9c   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1209; meter_logger.c	T0CONbits.TMR0ON = 0;
004f9e   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1210; meter_logger.c	T0CONbits.T0PS0 = 0;
004fa0   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1211; meter_logger.c	T0CONbits.T0PS1 = 0;
004fa2   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1212; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004fa4   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1213; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004fa6   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1214; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004fa8   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1215; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004faa   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1216; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004fac   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1217; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004fae   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1218; meter_logger.c	INTCONbits.TMR0IF = 0;
004fb0   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1220; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
004fb2   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1221; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004fb4   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
004fb6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004fb8   ffd9
004fba   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_valid_err_corr	code
                                           _testo_valid_err_corr:
                                           ;	.line	1145; meter_logger.c	unsigned char testo_valid_err_corr(unsigned int c) {
003b78   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003b7a   ffe5
003b7c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003b7e   ffd9
003b80   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003b82   ffe5
003b84   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003b86   ffe5
003b88   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003b8a   ffe5
003b8c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003b8e   ffe5
003b90   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003b92   ffe5
003b94   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003b96   ffe5
003b98   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003b9a   ffe5
003b9c   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
003b9e   ffe5
003ba0   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
003ba2   ffe5
003ba4   0e02     movlw   0x2              	MOVLW	0x02
003ba6   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003ba8   f000
003baa   0e03     movlw   0x3              	MOVLW	0x03
003bac   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003bae   f001
                                           ;	.line	1152; meter_logger.c	calculated_err_corr_bit = 0;
003bb0   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1153; meter_logger.c	for (i = 0; i < 8; i++) {
003bb2   0e78     movlw   0x78             	MOVLW	0x78
003bb4   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003bb6   6e03     movwf   0x3, 0           	MOVWF	r0x03
003bb8   6a04     clrf    0x4, 0           	CLRF	r0x04
003bba   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00890_DS_:
                                           ;	.line	1154; meter_logger.c	calculated_err_corr_bit ^= (((c & 0x78) & (1 << i)) != 0);   // 0b01111000
003bbc   0e01     movlw   0x1              	MOVLW	0x01
003bbe   6e06     movwf   0x6, 0           	MOVWF	r0x06
003bc0   0e00     movlw   0                	MOVLW	0x00
003bc2   6e07     movwf   0x7, 0           	MOVWF	r0x07
003bc4   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003bc6   e006     bz      0x3bd4           	BZ	_00932_DS_
003bc8   6ce8     negf    0xe8, 0          	NEGF	WREG
003bca   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00933_DS_:
003bcc   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
003bce   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003bd0   0f01     addlw   0x1              	ADDLW	0x01
003bd2   e3fc     bnc     0x3bcc           	BNC	_00933_DS_
                                           _00932_DS_:
003bd4   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003bd6   1606     andwf   0x6, 0x1, 0      	ANDWF	r0x06, F
003bd8   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003bda   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003bdc   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003bde   e105     bnz     0x3bea           	BNZ	_00935_DS_
003be0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003be2   e103     bnz     0x3bea           	BNZ	_00935_DS_
003be4   6a06     clrf    0x6, 0           	CLRF	r0x06
003be6   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003be8   d001     bra     0x3bec           	BRA	_00936_DS_
                                           _00935_DS_:
003bea   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00936_DS_:
003bec   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003bee   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003bf0   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003bf2   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003bf4   6a06     clrf    0x6, 0           	CLRF	r0x06
003bf6   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
003bf8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003bfa   6e07     movwf   0x7, 0           	MOVWF	r0x07
003bfc   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003bfe   1807     xorwf   0x7, 0, 0        	XORWF	r0x07, W
003c00   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1153; meter_logger.c	for (i = 0; i < 8; i++) {
003c02   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
003c04   0e08     movlw   0x8              	MOVLW	0x08
003c06   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
003c08   e3d9     bnc     0x3bbc           	BNC	_00890_DS_
                                           ;	.line	1157; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003c0a   4402     rlncf   0x2, 0, 0        	RLNCF	r0x02, W
003c0c   0bfe     andlw   0xfe             	ANDLW	0xfe
003c0e   6e03     movwf   0x3, 0           	MOVWF	r0x03
                                           ;	.line	1160; meter_logger.c	calculated_err_corr_bit = 0;
003c10   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1161; meter_logger.c	for (i = 0; i < 8; i++) {
003c12   0ee6     movlw   0xe6             	MOVLW	0xe6
003c14   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003c16   6e04     movwf   0x4, 0           	MOVWF	r0x04
003c18   6a05     clrf    0x5, 0           	CLRF	r0x05
003c1a   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00892_DS_:
                                           ;	.line	1162; meter_logger.c	calculated_err_corr_bit ^= (((c & 0xe6) & (1 << i)) != 0);   // 0b11100110
003c1c   0e01     movlw   0x1              	MOVLW	0x01
003c1e   6e07     movwf   0x7, 0           	MOVWF	r0x07
003c20   0e00     movlw   0                	MOVLW	0x00
003c22   6e08     movwf   0x8, 0           	MOVWF	r0x08
003c24   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003c26   e006     bz      0x3c34           	BZ	_00940_DS_
003c28   6ce8     negf    0xe8, 0          	NEGF	WREG
003c2a   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00941_DS_:
003c2c   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003c2e   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003c30   0f01     addlw   0x1              	ADDLW	0x01
003c32   e3fc     bnc     0x3c2c           	BNC	_00941_DS_
                                           _00940_DS_:
003c34   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003c36   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003c38   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003c3a   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003c3c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003c3e   e105     bnz     0x3c4a           	BNZ	_00943_DS_
003c40   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003c42   e103     bnz     0x3c4a           	BNZ	_00943_DS_
003c44   6a07     clrf    0x7, 0           	CLRF	r0x07
003c46   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003c48   d001     bra     0x3c4c           	BRA	_00944_DS_
                                           _00943_DS_:
003c4a   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00944_DS_:
003c4c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003c4e   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003c50   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003c52   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003c54   6a07     clrf    0x7, 0           	CLRF	r0x07
003c56   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003c58   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003c5a   6e08     movwf   0x8, 0           	MOVWF	r0x08
003c5c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003c5e   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003c60   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1161; meter_logger.c	for (i = 0; i < 8; i++) {
003c62   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003c64   0e08     movlw   0x8              	MOVLW	0x08
003c66   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003c68   e3d9     bnc     0x3c1c           	BNC	_00892_DS_
                                           ;	.line	1164; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003c6a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003c6c   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1165; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003c6e   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003c70   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
                                           ;	.line	1168; meter_logger.c	calculated_err_corr_bit = 0;
003c72   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1169; meter_logger.c	for (i = 0; i < 8; i++) {
003c74   0ed5     movlw   0xd5             	MOVLW	0xd5
003c76   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003c78   6e04     movwf   0x4, 0           	MOVWF	r0x04
003c7a   6a05     clrf    0x5, 0           	CLRF	r0x05
003c7c   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00894_DS_:
                                           ;	.line	1170; meter_logger.c	calculated_err_corr_bit ^= (((c & 0xd5) & (1 << i)) != 0);   // 0b11010101
003c7e   0e01     movlw   0x1              	MOVLW	0x01
003c80   6e07     movwf   0x7, 0           	MOVWF	r0x07
003c82   0e00     movlw   0                	MOVLW	0x00
003c84   6e08     movwf   0x8, 0           	MOVWF	r0x08
003c86   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003c88   e006     bz      0x3c96           	BZ	_00949_DS_
003c8a   6ce8     negf    0xe8, 0          	NEGF	WREG
003c8c   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00950_DS_:
003c8e   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003c90   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003c92   0f01     addlw   0x1              	ADDLW	0x01
003c94   e3fc     bnc     0x3c8e           	BNC	_00950_DS_
                                           _00949_DS_:
003c96   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003c98   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003c9a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003c9c   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003c9e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003ca0   e105     bnz     0x3cac           	BNZ	_00952_DS_
003ca2   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003ca4   e103     bnz     0x3cac           	BNZ	_00952_DS_
003ca6   6a07     clrf    0x7, 0           	CLRF	r0x07
003ca8   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003caa   d001     bra     0x3cae           	BRA	_00953_DS_
                                           _00952_DS_:
003cac   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00953_DS_:
003cae   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003cb0   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003cb2   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003cb4   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003cb6   6a07     clrf    0x7, 0           	CLRF	r0x07
003cb8   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003cba   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003cbc   6e08     movwf   0x8, 0           	MOVWF	r0x08
003cbe   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003cc0   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003cc2   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1169; meter_logger.c	for (i = 0; i < 8; i++) {
003cc4   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003cc6   0e08     movlw   0x8              	MOVLW	0x08
003cc8   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003cca   e3d9     bnc     0x3c7e           	BNC	_00894_DS_
                                           ;	.line	1172; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003ccc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003cce   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1173; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003cd0   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003cd2   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
                                           ;	.line	1176; meter_logger.c	calculated_err_corr_bit = 0;
003cd4   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1177; meter_logger.c	for (i = 0; i < 8; i++) {
003cd6   0e8b     movlw   0x8b             	MOVLW	0x8b
003cd8   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003cda   6e04     movwf   0x4, 0           	MOVWF	r0x04
003cdc   6a05     clrf    0x5, 0           	CLRF	r0x05
003cde   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00896_DS_:
                                           ;	.line	1178; meter_logger.c	calculated_err_corr_bit ^= (((c & 0x8b) & (1 << i)) != 0);   // 0b10001011
003ce0   0e01     movlw   0x1              	MOVLW	0x01
003ce2   6e07     movwf   0x7, 0           	MOVWF	r0x07
003ce4   0e00     movlw   0                	MOVLW	0x00
003ce6   6e08     movwf   0x8, 0           	MOVWF	r0x08
003ce8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003cea   e006     bz      0x3cf8           	BZ	_00958_DS_
003cec   6ce8     negf    0xe8, 0          	NEGF	WREG
003cee   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00959_DS_:
003cf0   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003cf2   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003cf4   0f01     addlw   0x1              	ADDLW	0x01
003cf6   e3fc     bnc     0x3cf0           	BNC	_00959_DS_
                                           _00958_DS_:
003cf8   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003cfa   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003cfc   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003cfe   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003d00   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003d02   e105     bnz     0x3d0e           	BNZ	_00961_DS_
003d04   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003d06   e103     bnz     0x3d0e           	BNZ	_00961_DS_
003d08   6a07     clrf    0x7, 0           	CLRF	r0x07
003d0a   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003d0c   d001     bra     0x3d10           	BRA	_00962_DS_
                                           _00961_DS_:
003d0e   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00962_DS_:
003d10   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003d12   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003d14   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003d16   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003d18   6a07     clrf    0x7, 0           	CLRF	r0x07
003d1a   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003d1c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003d1e   6e08     movwf   0x8, 0           	MOVWF	r0x08
003d20   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003d22   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003d24   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1177; meter_logger.c	for (i = 0; i < 8; i++) {
003d26   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003d28   0e08     movlw   0x8              	MOVLW	0x08
003d2a   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003d2c   e3d9     bnc     0x3ce0           	BNC	_00896_DS_
                                           ;	.line	1180; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003d2e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003d30   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1191; meter_logger.c	if ((c >> 8) == calculated_err_corr) {
003d32   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003d34   6e00     movwf   0, 0             	MOVWF	r0x00
003d36   6a01     clrf    0x1, 0           	CLRF	r0x01
003d38   6a02     clrf    0x2, 0           	CLRF	r0x02
003d3a   5000     movf    0, 0, 0          	MOVF	r0x00, W
003d3c   1803     xorwf   0x3, 0, 0        	XORWF	r0x03, W
003d3e   e103     bnz     0x3d46           	BNZ	_00966_DS_
003d40   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003d42   1802     xorwf   0x2, 0, 0        	XORWF	r0x02, W
003d44   e001     bz      0x3d48           	BZ	_00967_DS_
                                           _00966_DS_:
003d46   d002     bra     0x3d4c           	BRA	_00888_DS_
                                           _00967_DS_:
                                           ;	.line	1192; meter_logger.c	return 1;
003d48   0e01     movlw   0x1              	MOVLW	0x01
003d4a   d001     bra     0x3d4e           	BRA	_00898_DS_
                                           _00888_DS_:
                                           ;	.line	1195; meter_logger.c	return 0;
003d4c   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00898_DS_:
003d4e   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
003d50   f008
003d52   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003d54   f007
003d56   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003d58   f006
003d5a   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003d5c   f005
003d5e   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003d60   f004
003d62   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003d64   f003
003d66   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003d68   f002
003d6a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003d6c   f001
003d6e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003d70   f000
003d72   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003d74   ffd9
003d76   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__reverse	code
                                           _reverse:
                                           ;	.line	1137; meter_logger.c	unsigned char reverse(unsigned char b) {
004ba0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004ba2   ffe5
004ba4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004ba6   ffd9
004ba8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004baa   ffe5
004bac   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004bae   ffe5
004bb0   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004bb2   ffe5
004bb4   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004bb6   ffe5
004bb8   0e02     movlw   0x2              	MOVLW	0x02
004bba   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004bbc   f000
                                           ;	.line	1139; meter_logger.c	c  = ((b >>  1) & 0x55) | ((b <<  1) & 0xaa);
004bbe   4000     rrncf   0, 0, 0          	RRNCF	r0x00, W
004bc0   0b7f     andlw   0x7f             	ANDLW	0x7f
004bc2   6e01     movwf   0x1, 0           	MOVWF	r0x01
004bc4   0e55     movlw   0x55             	MOVLW	0x55
004bc6   1601     andwf   0x1, 0x1, 0      	ANDWF	r0x01, F
004bc8   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
004bca   0bfe     andlw   0xfe             	ANDLW	0xfe
004bcc   6e02     movwf   0x2, 0           	MOVWF	r0x02
004bce   0eaa     movlw   0xaa             	MOVLW	0xaa
004bd0   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004bd2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004bd4   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1140; meter_logger.c	c |= ((b >>  2) & 0x33) | ((b <<  2) & 0xcc);
004bd6   4000     rrncf   0, 0, 0          	RRNCF	r0x00, W
004bd8   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
004bda   0b3f     andlw   0x3f             	ANDLW	0x3f
004bdc   6e02     movwf   0x2, 0           	MOVWF	r0x02
004bde   0e33     movlw   0x33             	MOVLW	0x33
004be0   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004be2   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
004be4   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
004be6   0bfc     andlw   0xfc             	ANDLW	0xfc
004be8   6e03     movwf   0x3, 0           	MOVWF	r0x03
004bea   0ecc     movlw   0xcc             	MOVLW	0xcc
004bec   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
004bee   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004bf0   1202     iorwf   0x2, 0x1, 0      	IORWF	r0x02, F
004bf2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004bf4   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1141; meter_logger.c	c |= ((b >>  4) & 0x0f) | ((b <<  4) & 0xf0);
004bf6   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
004bf8   0b0f     andlw   0xf              	ANDLW	0x0f
004bfa   6e02     movwf   0x2, 0           	MOVWF	r0x02
004bfc   0e0f     movlw   0xf              	MOVLW	0x0f
004bfe   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004c00   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
004c02   0bf0     andlw   0xf0             	ANDLW	0xf0
004c04   6e03     movwf   0x3, 0           	MOVWF	r0x03
004c06   0ef0     movlw   0xf0             	MOVLW	0xf0
004c08   1403     andwf   0x3, 0, 0        	ANDWF	r0x03, W
004c0a   6e00     movwf   0, 0             	MOVWF	r0x00
004c0c   5000     movf    0, 0, 0          	MOVF	r0x00, W
004c0e   1202     iorwf   0x2, 0x1, 0      	IORWF	r0x02, F
004c10   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004c12   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1142; meter_logger.c	return(c);
004c14   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004c16   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004c18   f003
004c1a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004c1c   f002
004c1e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004c20   f001
004c22   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004c24   f000
004c26   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004c28   ffd9
004c2a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__my_usart_open	code
                                           _my_usart_open:
                                           ;	.line	1107; meter_logger.c	void my_usart_open() {
0051de   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0051e0   ffe5
0051e2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0051e4   ffd9
                                           ;	.line	1108; meter_logger.c	SPBRG = 103;					// 8MHz => 19230 baud
0051e6   0e67     movlw   0x67             	MOVLW	0x67
0051e8   6eaf     movwf   0xaf, 0          	MOVWF	_SPBRG
                                           ;	.line	1109; meter_logger.c	TXSTAbits.BRGH = 1;	// (0 = low speed)
0051ea   84ac     bsf     0xac, 0x2, 0     	BSF	_TXSTAbits, 2
                                           ;	.line	1110; meter_logger.c	TXSTAbits.SYNC = 0;	// (0 = asynchronous)
0051ec   98ac     bcf     0xac, 0x4, 0     	BCF	_TXSTAbits, 4
                                           ;	.line	1111; meter_logger.c	BAUDCONbits.BRG16 = 1;
0051ee   86b8     bsf     0xb8, 0x3, 0     	BSF	_BAUDCONbits, 3
                                           ;	.line	1114; meter_logger.c	RCSTAbits.SPEN = 1; // (1 = serial port enabled)
0051f0   8eab     bsf     0xab, 0x7, 0     	BSF	_RCSTAbits, 7
                                           ;	.line	1117; meter_logger.c	PIE1bits.TXIE = 0; // (1 = enabled)
0051f2   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
                                           ;	.line	1118; meter_logger.c	IPR1bits.TXIP = 0; // USART Tx on low priority interrupt
0051f4   989f     bcf     0x9f, 0x4, 0     	BCF	_IPR1bits, 4
                                           ;	.line	1121; meter_logger.c	PIE1bits.RCIE = 1; // (1 = enabled)
0051f6   8a9d     bsf     0x9d, 0x5, 0     	BSF	_PIE1bits, 5
                                           ;	.line	1122; meter_logger.c	IPR1bits.RCIP = 0; // USART Rx on low priority interrupt
0051f8   9a9f     bcf     0x9f, 0x5, 0     	BCF	_IPR1bits, 5
                                           ;	.line	1125; meter_logger.c	TXSTAbits.TX9 = 0; // (0 = 8-bit transmit)
0051fa   9cac     bcf     0xac, 0x6, 0     	BCF	_TXSTAbits, 6
                                           ;	.line	1128; meter_logger.c	RCSTAbits.RX9 = 0; // (0 = 8-bit reception)
0051fc   9cab     bcf     0xab, 0x6, 0     	BCF	_RCSTAbits, 6
                                           ;	.line	1131; meter_logger.c	RCSTAbits.CREN = 1; // (1 = Enables receiver)
0051fe   88ab     bsf     0xab, 0x4, 0     	BSF	_RCSTAbits, 4
                                           ;	.line	1134; meter_logger.c	TXSTAbits.TXEN = 1; // (1 = transmit enabled)
005200   8aac     bsf     0xac, 0x5, 0     	BSF	_TXSTAbits, 5
005202   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005204   ffd9
005206   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__get_dev_id	code
                                           _get_dev_id:
                                           ;	.line	1090; meter_logger.c	unsigned int get_dev_id() {
004d20   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004d22   ffe5
004d24   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004d26   ffd9
004d28   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004d2a   ffe5
004d2c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004d2e   ffe5
004d30   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004d32   ffe5
004d34   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004d36   ffe5
004d38   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004d3a   ffe5
004d3c   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004d3e   ffe5
                                           ;	.line	1093; meter_logger.c	TBLPTRU = __DEVID1 >> 16;
004d40   0e3f     movlw   0x3f             	MOVLW	0x3f
004d42   6ef8     movwf   0xf8, 0          	MOVWF	_TBLPTRU
                                           ;	.line	1094; meter_logger.c	TBLPTRH = __DEVID1 >> 8;
004d44   0eff     movlw   0xff             	MOVLW	0xff
004d46   6ef7     movwf   0xf7, 0          	MOVWF	_TBLPTRH
                                           ;	.line	1095; meter_logger.c	TBLPTRL = __DEVID1;
004d48   0efe     movlw   0xfe             	MOVLW	0xfe
004d4a   6ef6     movwf   0xf6, 0          	MOVWF	_TBLPTRL
004d4c   0009     tblrd   *+               	tblrd*+
                                           	
                                           ;	.line	1099; meter_logger.c	dev_id_low = TABLAT;
004d4e   cff5     movff   0xff5, 0         	MOVFF	_TABLAT, r0x00
004d50   f000
004d52   0009     tblrd   *+               	tblrd*+
                                           	
                                           ;	.line	1103; meter_logger.c	dev_id_high = TABLAT;
004d54   cff5     movff   0xff5, 0x1       	MOVFF	_TABLAT, r0x01
004d56   f001
                                           ;	.line	1104; meter_logger.c	return ((dev_id_high << 8) + dev_id_low) & 0xffe0;	// dont return revision
004d58   6a02     clrf    0x2, 0           	CLRF	r0x02
004d5a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004d5c   6e04     movwf   0x4, 0           	MOVWF	r0x04
004d5e   6a03     clrf    0x3, 0           	CLRF	r0x03
004d60   6a05     clrf    0x5, 0           	CLRF	r0x05
004d62   5000     movf    0, 0, 0          	MOVF	r0x00, W
004d64   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
004d66   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
004d68   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
004d6a   0ee0     movlw   0xe0             	MOVLW	0xe0
004d6c   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
004d6e   c004     movff   0x4, 0xff3       	MOVFF	r0x04, PRODL
004d70   fff3
004d72   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004d74   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
004d76   f005
004d78   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004d7a   f004
004d7c   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004d7e   f003
004d80   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004d82   f002
004d84   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004d86   f001
004d88   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004d8a   f000
004d8c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004d8e   ffd9
004d90   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__init_system	code
                                           _init_system:
                                           ;	.line	989; meter_logger.c	void init_system() {
004dee   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004df0   ffe5
004df2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004df4   ffd9
                                           ;	.line	991; meter_logger.c	TRIS_COMP1 = INPUT_STATE;		// as input
004df6   8092     bsf     0x92, 0, 0       	BSF	_TRISAbits, 0
                                           ;	.line	992; meter_logger.c	TRIS_COMP2 = INPUT_STATE;		// as input
004df8   8292     bsf     0x92, 0x1, 0     	BSF	_TRISAbits, 1
                                           ;	.line	994; meter_logger.c	TRIS_IR_PIN = INPUT_STATE;		// as input
004dfa   8093     bsf     0x93, 0, 0       	BSF	_TRISBbits, 0
                                           ;	.line	996; meter_logger.c	TRIS_LED_PIN = OUTPUT_STATE;	// as output
004dfc   9893     bcf     0x93, 0x4, 0     	BCF	_TRISBbits, 4
                                           ;	.line	997; meter_logger.c	LED_PIN = 0;					// and clear
004dfe   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	999; meter_logger.c	TRIS_IR_LED_PIN = OUTPUT_STATE;	// as output
004e00   9293     bcf     0x93, 0x1, 0     	BCF	_TRISBbits, 1
                                           ;	.line	1000; meter_logger.c	IR_LED_PIN = 0;					// and clear
004e02   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1002; meter_logger.c	TRIS_V_SENSE = INPUT_STATE;		// as input
004e04   8a92     bsf     0x92, 0x5, 0     	BSF	_TRISAbits, 5
                                           ;	.line	1004; meter_logger.c	TRIS_DEBUG_PIN = OUTPUT_STATE;	// as output
004e06   9493     bcf     0x93, 0x2, 0     	BCF	_TRISBbits, 2
                                           ;	.line	1005; meter_logger.c	DEBUG_PIN = 0;					// and clear
004e08   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	1007; meter_logger.c	TRIS_DEBUG2_PIN = OUTPUT_STATE;	// as output
004e0a   9693     bcf     0x93, 0x3, 0     	BCF	_TRISBbits, 3
                                           ;	.line	1008; meter_logger.c	DEBUG2_PIN = 0;					// and clear
004e0c   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	1010; meter_logger.c	TRIS_DEBUG3_PIN = OUTPUT_STATE;	// as output
004e0e   9893     bcf     0x93, 0x4, 0     	BCF	_TRISBbits, 4
                                           ;	.line	1011; meter_logger.c	DEBUG3_PIN = 0;					// and clear
004e10   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	1015; meter_logger.c	TRIS_PWM_PIN = OUTPUT_STATE;	// enable output from pwm module at init
004e12   9294     bcf     0x94, 0x1, 0     	BCF	_TRISCbits, 1
                                           ;	.line	1016; meter_logger.c	PWM_PIN = 0;					// and clear
004e14   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
                                           ;	.line	1019; meter_logger.c	TRIS_RX_PIN = INPUT_STATE;		// as input
004e16   8e94     bsf     0x94, 0x7, 0     	BSF	_TRISCbits, 7
                                           ;	.line	1020; meter_logger.c	TRIS_TX_PIN = OUTPUT_STATE;		// as input
004e18   9c94     bcf     0x94, 0x6, 0     	BCF	_TRISCbits, 6
                                           ;	.line	1025; meter_logger.c	T1CONbits.TMR1ON = 1;
004e1a   80cd     bsf     0xcd, 0, 0       	BSF	_T1CONbits, 0
                                           ;	.line	1026; meter_logger.c	T1CONbits.RD16 = 1;
004e1c   8ecd     bsf     0xcd, 0x7, 0     	BSF	_T1CONbits, 7
                                           ;	.line	1027; meter_logger.c	T1CONbits.TMR1CS = 0;   // internal clock source
004e1e   92cd     bcf     0xcd, 0x1, 0     	BCF	_T1CONbits, 1
                                           ;	.line	1028; meter_logger.c	T1CONbits.T1OSCEN = 0;  // dont put t1 on pin
004e20   96cd     bcf     0xcd, 0x3, 0     	BCF	_T1CONbits, 3
                                           ;	.line	1029; meter_logger.c	T1CONbits.T1CKPS0 = 0;
004e22   98cd     bcf     0xcd, 0x4, 0     	BCF	_T1CONbits, 4
                                           ;	.line	1030; meter_logger.c	T1CONbits.T1CKPS1 = 0;
004e24   9acd     bcf     0xcd, 0x5, 0     	BCF	_T1CONbits, 5
                                           ;	.line	1031; meter_logger.c	IPR1bits.TMR1IP = 0;	// low priority
004e26   909f     bcf     0x9f, 0, 0       	BCF	_IPR1bits, 0
                                           ;	.line	1032; meter_logger.c	PIE1bits.TMR1IE = 1;	// Ensure that TMR1 Interrupt is enabled
004e28   809d     bsf     0x9d, 0, 0       	BSF	_PIE1bits, 0
                                           ;	.line	1033; meter_logger.c	PIR1bits.TMR1IF = 1;	// Force Instant entry to Timer 1 Interrupt
004e2a   809e     bsf     0x9e, 0, 0       	BSF	_PIR1bits, 0
                                           ;	.line	1064; meter_logger.c	RCONbits.IPEN = 1;
004e2c   8ed0     bsf     0xd0, 0x7, 0     	BSF	_RCONbits, 7
                                           ;	.line	1066; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int, enabled when ir demodulator is started
004e2e   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	1067; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004e30   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
                                           ;	.line	1069; meter_logger.c	INTCONbits.PEIE = 1;
004e32   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	1070; meter_logger.c	INTCONbits.GIE = 1;	/* Enable Global interrupts   */	
004e34   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           ;	.line	1075; meter_logger.c	IPR1bits.RCIP = 0;
004e36   9a9f     bcf     0x9f, 0x5, 0     	BCF	_IPR1bits, 5
                                           ;	.line	1076; meter_logger.c	IPR1bits.TXIP = 0;
004e38   989f     bcf     0x9f, 0x4, 0     	BCF	_IPR1bits, 4
                                           ;	.line	1087; meter_logger.c	my_usart_open();
004e3a   ecef     call    0x51de, 0        	CALL	_my_usart_open
004e3c   f028
004e3e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004e40   ffd9
004e42   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__sleep_ms	code
                                           _sleep_ms:
                                           ;	.line	969; meter_logger.c	void sleep_ms(unsigned int ms) {
004afa   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004afc   ffe5
004afe   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004b00   ffd9
004b02   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004b04   ffe5
004b06   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004b08   ffe5
004b0a   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004b0c   ffe5
004b0e   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004b10   ffe5
004b12   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004b14   ffe5
004b16   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004b18   ffe5
004b1a   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
004b1c   ffe5
004b1e   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
004b20   ffe5
004b22   0e02     movlw   0x2              	MOVLW	0x02
004b24   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004b26   f000
004b28   0e03     movlw   0x3              	MOVLW	0x03
004b2a   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004b2c   f001
                                           ;	.line	972; meter_logger.c	start_timer_1_ms = timer_1_ms;	
004b2e   c540     movff   0x540, 0x2       	MOVFF	_timer_1_ms, r0x02
004b30   f002
004b32   c541     movff   0x541, 0x3       	MOVFF	(_timer_1_ms + 1), r0x03
004b34   f003
                                           ;	.line	975; meter_logger.c	do {
004b36   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004b38   08ff     sublw   0xff             	SUBLW	0xff
004b3a   6e04     movwf   0x4, 0           	MOVWF	r0x04
004b3c   0eff     movlw   0xff             	MOVLW	0xff
004b3e   5403     subfwb  0x3, 0, 0        	SUBFWB	r0x03, W
004b40   6e05     movwf   0x5, 0           	MOVWF	r0x05
                                           _00846_DS_:
                                           ;	.line	976; meter_logger.c	if (start_timer_1_ms <= timer_1_ms) {
004b42   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004b44   0105     movlb   0x5              	BANKSEL	(_timer_1_ms + 1)
004b46   5d41     subwf   0x41, 0, 0x1     	SUBWF	(_timer_1_ms + 1), W, B
004b48   e102     bnz     0x4b4e           	BNZ	_00857_DS_
004b4a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
004b4c   5d40     subwf   0x40, 0, 0x1     	SUBWF	_timer_1_ms, W, B
                                           _00857_DS_:
004b4e   e308     bnc     0x4b60           	BNC	_00844_DS_
                                           ;	.line	977; meter_logger.c	diff = timer_1_ms - start_timer_1_ms;
004b50   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004b52   0105     movlb   0x5              	BANKSEL	_timer_1_ms
004b54   5d40     subwf   0x40, 0, 0x1     	SUBWF	_timer_1_ms, W, B
004b56   6e06     movwf   0x6, 0           	MOVWF	r0x06
004b58   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
004b5a   5941     subwfb  0x41, 0, 0x1     	SUBWFB	(_timer_1_ms + 1), W, B
004b5c   6e07     movwf   0x7, 0           	MOVWF	r0x07
004b5e   d007     bra     0x4b6e           	BRA	_00847_DS_
                                           _00844_DS_:
004b60   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	981; meter_logger.c	diff = 0xffff - start_timer_1_ms + timer_1_ms;
004b62   5140     movf    0x40, 0, 0x1     	MOVF	_timer_1_ms, W, B
004b64   2404     addwf   0x4, 0, 0        	ADDWF	r0x04, W
004b66   6e06     movwf   0x6, 0           	MOVWF	r0x06
                                           ; removed redundant BANKSEL
004b68   5141     movf    0x41, 0, 0x1     	MOVF	(_timer_1_ms + 1), W, B
004b6a   2005     addwfc  0x5, 0, 0        	ADDWFC	r0x05, W
004b6c   6e07     movwf   0x7, 0           	MOVWF	r0x07
                                           _00847_DS_:
                                           ;	.line	983; meter_logger.c	} while (diff < ms);
004b6e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004b70   5c07     subwf   0x7, 0, 0        	SUBWF	r0x07, W
004b72   e102     bnz     0x4b78           	BNZ	_00858_DS_
004b74   5000     movf    0, 0, 0          	MOVF	r0x00, W
004b76   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
                                           _00858_DS_:
004b78   e3e4     bnc     0x4b42           	BNC	_00846_DS_
004b7a   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
004b7c   f007
004b7e   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
004b80   f006
004b82   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
004b84   f005
004b86   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004b88   f004
004b8a   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004b8c   f003
004b8e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004b90   f002
004b92   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004b94   f001
004b96   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004b98   f000
004b9a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004b9c   ffd9
004b9e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__isr_low_prio	code
                                           _isr_low_prio:
                                           ;	.line	937; meter_logger.c	static void isr_low_prio(void) __interrupt 2 {
004a36   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
004a38   ffe5
004a3a   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
004a3c   ffe5
004a3e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004a40   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
004a42   ffe5
004a44   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
004a46   ffe5
004a48   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
004a4a   ffe5
004a4c   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
004a4e   ffe5
004a50   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
004a52   ffe5
004a54   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
004a56   ffe5
004a58   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004a5a   ffe5
004a5c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004a5e   ffd9
004a60   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004a62   ffe5
004a64   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004a66   ffe5
                                           ;	.line	940; meter_logger.c	if (PIR1bits.TMR1IF) {
004a68   a09e     btfss   0x9e, 0, 0       	BTFSS	_PIR1bits, 0
004a6a   d024     bra     0x4ab4           	BRA	_00815_DS_
                                           ;	.line	941; meter_logger.c	TMR1H = (unsigned char)(TIMER1_RELOAD >> 8);    // 262,158ms @ 8MHz
004a6c   0ef8     movlw   0xf8             	MOVLW	0xf8
004a6e   6ecf     movwf   0xcf, 0          	MOVWF	_TMR1H
                                           ;	.line	942; meter_logger.c	TMR1L = (unsigned char)TIMER1_RELOAD;
004a70   0e53     movlw   0x53             	MOVLW	0x53
004a72   6ece     movwf   0xce, 0          	MOVWF	_TMR1L
                                           ;	.line	944; meter_logger.c	switch (led_flash.state) {
004a74   c54c     movff   0x54c, 0         	MOVFF	_led_flash, r0x00
004a76   f000
004a78   5000     movf    0, 0, 0          	MOVF	r0x00, W
004a7a   6e01     movwf   0x1, 0           	MOVWF	r0x01
004a7c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004a7e   e004     bz      0x4a88           	BZ	_00809_DS_
004a80   5000     movf    0, 0, 0          	MOVF	r0x00, W
004a82   0a01     xorlw   0x1              	XORLW	0x01
004a84   e006     bz      0x4a92           	BZ	_00810_DS_
004a86   d011     bra     0x4aaa           	BRA	_00813_DS_
                                           _00809_DS_:
                                           ;	.line	946; meter_logger.c	LED_PIN = 1;
004a88   8881     bsf     0x81, 0x4, 0     	BSF	_PORTBbits, 4
                                           ;	.line	947; meter_logger.c	led_flash.state = LED_FLASH_RUNNING;
004a8a   0e01     movlw   0x1              	MOVLW	0x01
004a8c   0105     movlb   0x5              	BANKSEL	_led_flash
004a8e   6f4c     movwf   0x4c, 0x1        	MOVWF	_led_flash, B
                                           ;	.line	948; meter_logger.c	break;
004a90   d00c     bra     0x4aaa           	BRA	_00813_DS_
                                           _00810_DS_:
                                           ;	.line	950; meter_logger.c	if (led_flash.timer-- == 0) {
004a92   c54d     movff   0x54d, 0         	MOVFF	(_led_flash + 1), r0x00
004a94   f000
004a96   0400     decf    0, 0, 0          	DECF	r0x00, W
004a98   6e01     movwf   0x1, 0           	MOVWF	r0x01
004a9a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004a9c   0105     movlb   0x5              	BANKSEL	(_led_flash + 1)
004a9e   6f4d     movwf   0x4d, 0x1        	MOVWF	(_led_flash + 1), B
004aa0   5000     movf    0, 0, 0          	MOVF	r0x00, W
004aa2   e103     bnz     0x4aaa           	BNZ	_00813_DS_
                                           ;	.line	951; meter_logger.c	LED_PIN = 0;
004aa4   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	952; meter_logger.c	led_flash.state = LED_FLASH_STOPPED;
004aa6   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
004aa8   6f4c     movwf   0x4c, 0x1        	MOVWF	_led_flash, B
                                           _00813_DS_:
004aaa   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	956; meter_logger.c	timer_1_ms++;
004aac   3f40     incfsz  0x40, 0x1, 0x1   	INCFSZ	_timer_1_ms, F, B
004aae   d001     bra     0x4ab2           	BRA	_31215_DS_
                                           ; removed redundant BANKSEL
004ab0   2b41     incf    0x41, 0x1, 0x1   	INCF	(_timer_1_ms + 1), F, B
                                           _31215_DS_:
                                           ;	.line	957; meter_logger.c	PIR1bits.TMR1IF = 0;    /* Clear the Timer Flag  */
004ab2   909e     bcf     0x9e, 0, 0       	BCF	_PIR1bits, 0
                                           _00815_DS_:
                                           ;	.line	961; meter_logger.c	if (usart_drdy()) {
004ab4   ec06     call    0x540c, 0        	CALL	_usart_drdy
004ab6   f02a
004ab8   6e00     movwf   0, 0             	MOVWF	r0x00
004aba   5000     movf    0, 0, 0          	MOVF	r0x00, W
004abc   e006     bz      0x4aca           	BZ	_00818_DS_
                                           ;	.line	963; meter_logger.c	c = usart_getc();
004abe   ec04     call    0x5208, 0        	CALL	_usart_getc
004ac0   f029
004ac2   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	964; meter_logger.c	usart_putc(c);
004ac4   5000     movf    0, 0, 0          	MOVF	r0x00, W
004ac6   ecea     call    0x53d4, 0        	CALL	_usart_putc
004ac8   f029
                                           _00818_DS_:
004aca   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004acc   f001
004ace   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004ad0   f000
004ad2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004ad4   ffd9
004ad6   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
004ad8   fffb
004ada   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
004adc   fffa
004ade   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
004ae0   ffea
004ae2   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
004ae4   ffe9
004ae6   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
004ae8   fff4
004aea   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
004aec   fff3
004aee   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
004af0   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
004af2   ffe0
004af4   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
004af6   ffd8
004af8   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__isr_high_prio	code
                                           _isr_high_prio:
                                           ;	.line	471; meter_logger.c	static void isr_high_prio(void) __interrupt 1 {
0025d2   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
0025d4   ffe5
0025d6   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
0025d8   ffe5
0025da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0025dc   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
0025de   ffe5
0025e0   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
0025e2   ffe5
0025e4   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
0025e6   ffe5
0025e8   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
0025ea   ffe5
0025ec   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
0025ee   ffe5
0025f0   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
0025f2   ffe5
0025f4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0025f6   ffe5
0025f8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0025fa   ffd9
0025fc   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0025fe   ffe5
002600   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002602   ffe5
002604   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002606   ffe5
002608   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00260a   ffe5
00260c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00260e   ffe5
002610   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002612   ffe5
                                           ;	.line	473; meter_logger.c	if (INTCONbits.INT0IF && INTCONbits.INT0IE) {
002614   a2f2     btfss   0xf2, 0x1, 0     	BTFSS	_INTCONbits, 1
002616   d1a0     bra     0x2958           	BRA	_00389_DS_
002618   a8f2     btfss   0xf2, 0x4, 0     	BTFSS	_INTCONbits, 4
00261a   d19e     bra     0x2958           	BRA	_00389_DS_
                                           ;	.line	474; meter_logger.c	timer_0 = (unsigned int)(TMR0L) | ((unsigned int)(TMR0H) << 8);
00261c   cfd6     movff   0xfd6, 0         	MOVFF	_TMR0L, r0x00
00261e   f000
002620   6a01     clrf    0x1, 0           	CLRF	r0x01
002622   cfd7     movff   0xfd7, 0x2       	MOVFF	_TMR0H, r0x02
002624   f002
002626   6a03     clrf    0x3, 0           	CLRF	r0x03
002628   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00262a   6e05     movwf   0x5, 0           	MOVWF	r0x05
00262c   6a04     clrf    0x4, 0           	CLRF	r0x04
00262e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002630   1000     iorwf   0, 0, 0          	IORWF	r0x00, W
002632   0105     movlb   0x5              	BANKSEL	_timer_0
002634   6f46     movwf   0x46, 0x1        	MOVWF	_timer_0, B
002636   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002638   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
                                           ; removed redundant BANKSEL
00263a   6f47     movwf   0x47, 0x1        	MOVWF	(_timer_0 + 1), B
00263c   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	475; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
00263e   5149     movf    0x49, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
002640   6e00     movwf   0, 0             	MOVWF	r0x00
002642   6a01     clrf    0x1, 0           	CLRF	r0x01
002644   5000     movf    0, 0, 0          	MOVF	r0x00, W
002646   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	476; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
002648   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00264a   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
00264c   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	478; meter_logger.c	switch (codec_type) {
00264e   5151     movf    0x51, 0, 0x1     	MOVF	_codec_type, W, B
002650   0a01     xorlw   0x1              	XORLW	0x01
002652   e00b     bz      0x266a           	BZ	_00347_DS_
                                           _00696_DS_:
002654   0105     movlb   0x5              	BANKSEL	_codec_type
002656   5151     movf    0x51, 0, 0x1     	MOVF	_codec_type, W, B
002658   0a02     xorlw   0x2              	XORLW	0x02
00265a   e101     bnz     0x265e           	BNZ	_00698_DS_
00265c   d11d     bra     0x2898           	BRA	_00381_DS_
                                           _00698_DS_:
00265e   0105     movlb   0x5              	BANKSEL	_codec_type
002660   5151     movf    0x51, 0, 0x1     	MOVF	_codec_type, W, B
002662   0a04     xorlw   0x4              	XORLW	0x04
002664   e101     bnz     0x2668           	BNZ	_00700_DS_
002666   d146     bra     0x28f4           	BRA	_00384_DS_
                                           _00700_DS_:
002668   d176     bra     0x2956           	BRA	_00387_DS_
                                           _00347_DS_:
                                           ;	.line	480; meter_logger.c	flash_led(100);
00266a   0e64     movlw   0x64             	MOVLW	0x64
00266c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00266e   ec2c     call    0x5258, 0        	CALL	_flash_led
002670   f029
002672   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	481; meter_logger.c	switch (testo_ir_proto.state) {
002674   c51d     movff   0x51d, 0         	MOVFF	_testo_ir_proto, r0x00
002676   f000
002678   5000     movf    0, 0, 0          	MOVF	r0x00, W
00267a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00267c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00267e   e008     bz      0x2690           	BZ	_00348_DS_
002680   5000     movf    0, 0, 0          	MOVF	r0x00, W
002682   0a02     xorlw   0x2              	XORLW	0x02
002684   e00c     bz      0x269e           	BZ	_00349_DS_
002686   5000     movf    0, 0, 0          	MOVF	r0x00, W
002688   0a04     xorlw   0x4              	XORLW	0x04
00268a   e101     bnz     0x268e           	BNZ	_00706_DS_
00268c   d03b     bra     0x2704           	BRA	_00357_DS_
                                           _00706_DS_:
00268e   d163     bra     0x2956           	BRA	_00387_DS_
                                           _00348_DS_:
                                           ;	.line	483; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
002690   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	484; meter_logger.c	testo_ir_proto.start_bit_len = 1;
002692   0e01     movlw   0x1              	MOVLW	0x01
002694   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
002696   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	485; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
002698   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
00269a   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
                                           ;	.line	486; meter_logger.c	break;
00269c   d15c     bra     0x2956           	BRA	_00387_DS_
                                           _00349_DS_:
00269e   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	488; meter_logger.c	if ((TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < TICK + timer0_reload + TICK_ADJ)) {
0026a0   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0026a2   0f8f     addlw   0x8f             	ADDLW	0x8f
0026a4   6e00     movwf   0, 0             	MOVWF	r0x00
0026a6   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
0026a8   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0026aa   6e01     movwf   0x1, 0           	MOVWF	r0x01
0026ac   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0026ae   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
0026b0   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0026b2   e102     bnz     0x26b8           	BNZ	_00707_DS_
                                           ; removed redundant BANKSEL
0026b4   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
0026b6   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00707_DS_:
0026b8   e21f     bc      0x26f8           	BC	_00354_DS_
0026ba   0105     movlb   0x5              	BANKSEL	_timer0_reload
0026bc   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0026be   0f1f     addlw   0x1f             	ADDLW	0x1f
0026c0   6e00     movwf   0, 0             	MOVWF	r0x00
0026c2   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
0026c4   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0026c6   6e01     movwf   0x1, 0           	MOVWF	r0x01
0026c8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0026ca   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0026cc   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
0026ce   e102     bnz     0x26d4           	BNZ	_00708_DS_
0026d0   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0026d2   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00708_DS_:
0026d4   e211     bc      0x26f8           	BC	_00354_DS_
                                           ;	.line	489; meter_logger.c	if (testo_ir_proto.start_bit_len < 2) {
0026d6   0e02     movlw   0x2              	MOVLW	0x02
0026d8   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
0026da   5d1f     subwf   0x1f, 0, 0x1     	SUBWF	(_testo_ir_proto + 2), W, B
0026dc   e206     bc      0x26ea           	BC	_00351_DS_
                                           ;	.line	490; meter_logger.c	testo_ir_proto.start_bit_len++;
0026de   c51f     movff   0x51f, 0         	MOVFF	(_testo_ir_proto + 2), r0x00
0026e0   f000
0026e2   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0026e4   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0026e6   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
0026e8   d136     bra     0x2956           	BRA	_00387_DS_
                                           _00351_DS_:
0026ea   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	494; meter_logger.c	testo_ir_proto.data = 0;
0026ec   6b20     clrf    0x20, 0x1        	CLRF	(_testo_ir_proto + 3), B
                                           ; removed redundant BANKSEL
0026ee   6b21     clrf    0x21, 0x1        	CLRF	(_testo_ir_proto + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	495; meter_logger.c	testo_ir_proto.data_len = 0;
0026f0   6b22     clrf    0x22, 0x1        	CLRF	(_testo_ir_proto + 5), B
                                           ;	.line	496; meter_logger.c	testo_ir_proto.state = DATA_WAIT;
0026f2   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
0026f4   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
0026f6   d12f     bra     0x2956           	BRA	_00387_DS_
                                           _00354_DS_:
                                           ;	.line	501; meter_logger.c	testo_ir_proto.start_bit_len = 1;
0026f8   0e01     movlw   0x1              	MOVLW	0x01
0026fa   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
0026fc   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	502; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
0026fe   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002700   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
                                           ;	.line	504; meter_logger.c	break;
002702   d129     bra     0x2956           	BRA	_00387_DS_
                                           _00357_DS_:
                                           ;	.line	506; meter_logger.c	if (testo_ir_proto.data_len <= 12) {
002704   0e0d     movlw   0xd              	MOVLW	0x0d
002706   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
002708   5d22     subwf   0x22, 0, 0x1     	SUBWF	(_testo_ir_proto + 5), W, B
00270a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00270c   d124     bra     0x2956           	BRA	_00387_DS_
00270e   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	507; meter_logger.c	if (((TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < TICK + timer0_reload + TICK_ADJ)) || ((3 * TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < 3 * TICK + timer0_reload + TICK_ADJ))) {
002710   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002712   0f8f     addlw   0x8f             	ADDLW	0x8f
002714   6e00     movwf   0, 0             	MOVWF	r0x00
002716   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002718   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
00271a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00271c   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
00271e   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
002720   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002722   e102     bnz     0x2728           	BNZ	_00711_DS_
                                           ; removed redundant BANKSEL
002724   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
002726   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00711_DS_:
002728   e20e     bc      0x2746           	BC	_00373_DS_
00272a   0105     movlb   0x5              	BANKSEL	_timer0_reload
00272c   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00272e   0f1f     addlw   0x1f             	ADDLW	0x1f
002730   6e00     movwf   0, 0             	MOVWF	r0x00
002732   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
002734   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002736   6e01     movwf   0x1, 0           	MOVWF	r0x01
002738   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00273a   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
00273c   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
00273e   e102     bnz     0x2744           	BNZ	_00712_DS_
002740   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002742   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00712_DS_:
002744   e31c     bnc     0x277e           	BNC	_00368_DS_
                                           _00373_DS_:
002746   0105     movlb   0x5              	BANKSEL	_timer0_reload
002748   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00274a   0f3d     addlw   0x3d             	ADDLW	0x3d
00274c   6e00     movwf   0, 0             	MOVWF	r0x00
00274e   0e09     movlw   0x9              	MOVLW	0x09
                                           ; removed redundant BANKSEL
002750   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002752   6e01     movwf   0x1, 0           	MOVWF	r0x01
002754   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002756   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
002758   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00275a   e102     bnz     0x2760           	BNZ	_00713_DS_
                                           ; removed redundant BANKSEL
00275c   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
00275e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00713_DS_:
002760   e235     bc      0x27cc           	BC	_00369_DS_
002762   0105     movlb   0x5              	BANKSEL	_timer0_reload
002764   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002766   0fcd     addlw   0xcd             	ADDLW	0xcd
002768   6e00     movwf   0, 0             	MOVWF	r0x00
00276a   0e0a     movlw   0xa              	MOVLW	0x0a
                                           ; removed redundant BANKSEL
00276c   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
00276e   6e01     movwf   0x1, 0           	MOVWF	r0x01
002770   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002772   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002774   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
002776   e102     bnz     0x277c           	BNZ	_00714_DS_
002778   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00277a   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00714_DS_:
00277c   e227     bc      0x27cc           	BC	_00369_DS_
                                           _00368_DS_:
00277e   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	509; meter_logger.c	if ((testo_ir_proto.data & 1) != 0) {
002780   a120     btfss   0x20, 0, 0x1     	BTFSS	(_testo_ir_proto + 3), 0
002782   d00a     bra     0x2798           	BRA	_00359_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	511; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
002784   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
002786   6e00     movwf   0, 0             	MOVWF	r0x00
002788   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
00278a   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
00278c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00278e   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002790   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002792   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002794   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
002796   d013     bra     0x27be           	BRA	_00360_DS_
                                           _00359_DS_:
002798   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	515; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
00279a   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
00279c   6e00     movwf   0, 0             	MOVWF	r0x00
00279e   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
0027a0   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
0027a2   6e01     movwf   0x1, 0           	MOVWF	r0x01
0027a4   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0027a6   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
0027a8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0027aa   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           ;	.line	516; meter_logger.c	testo_ir_proto.data |= 1;	// and set bit 0
0027ac   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
0027ae   1120     iorwf   0x20, 0, 0x1     	IORWF	(_testo_ir_proto + 3), W, B
0027b0   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
0027b2   5121     movf    0x21, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
0027b4   6e01     movwf   0x1, 0           	MOVWF	r0x01
0027b6   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0027b8   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
0027ba   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0027bc   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           _00360_DS_:
                                           ;	.line	518; meter_logger.c	testo_ir_proto.data_len++;
0027be   c522     movff   0x522, 0         	MOVFF	(_testo_ir_proto + 5), r0x00
0027c0   f000
0027c2   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0027c4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0027c6   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
0027c8   6f22     movwf   0x22, 0x1        	MOVWF	(_testo_ir_proto + 5), B
0027ca   d048     bra     0x285c           	BRA	_00370_DS_
                                           _00369_DS_:
0027cc   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	520; meter_logger.c	else if ((2 * TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < 2 * TICK + timer0_reload + TICK_ADJ)) {
0027ce   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0027d0   0fe6     addlw   0xe6             	ADDLW	0xe6
0027d2   6e00     movwf   0, 0             	MOVWF	r0x00
0027d4   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
0027d6   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0027d8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0027da   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0027dc   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
0027de   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0027e0   e102     bnz     0x27e6           	BNZ	_00717_DS_
                                           ; removed redundant BANKSEL
0027e2   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
0027e4   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00717_DS_:
0027e6   e235     bc      0x2852           	BC	_00365_DS_
0027e8   0105     movlb   0x5              	BANKSEL	_timer0_reload
0027ea   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0027ec   0f76     addlw   0x76             	ADDLW	0x76
0027ee   6e00     movwf   0, 0             	MOVWF	r0x00
0027f0   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
0027f2   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0027f4   6e01     movwf   0x1, 0           	MOVWF	r0x01
0027f6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0027f8   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0027fa   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
0027fc   e102     bnz     0x2802           	BNZ	_00718_DS_
0027fe   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002800   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00718_DS_:
002802   e227     bc      0x2852           	BC	_00365_DS_
002804   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	522; meter_logger.c	if ((testo_ir_proto.data & 1) != 0) {
002806   a120     btfss   0x20, 0, 0x1     	BTFSS	(_testo_ir_proto + 3), 0
002808   d013     bra     0x2830           	BRA	_00362_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	524; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
00280a   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
00280c   6e00     movwf   0, 0             	MOVWF	r0x00
00280e   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
002810   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
002812   6e01     movwf   0x1, 0           	MOVWF	r0x01
002814   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002816   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002818   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00281a   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           ;	.line	525; meter_logger.c	testo_ir_proto.data |= 1;	// and set bit 0
00281c   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
00281e   1120     iorwf   0x20, 0, 0x1     	IORWF	(_testo_ir_proto + 3), W, B
002820   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002822   5121     movf    0x21, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
002824   6e01     movwf   0x1, 0           	MOVWF	r0x01
002826   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002828   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
00282a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00282c   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
00282e   d00a     bra     0x2844           	BRA	_00363_DS_
                                           _00362_DS_:
002830   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	529; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
002832   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
002834   6e00     movwf   0, 0             	MOVWF	r0x00
002836   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
002838   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
00283a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00283c   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00283e   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002840   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002842   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           _00363_DS_:
                                           ;	.line	531; meter_logger.c	testo_ir_proto.data_len++;
002844   c522     movff   0x522, 0         	MOVFF	(_testo_ir_proto + 5), r0x00
002846   f000
002848   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
00284a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00284c   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
00284e   6f22     movwf   0x22, 0x1        	MOVWF	(_testo_ir_proto + 5), B
002850   d005     bra     0x285c           	BRA	_00370_DS_
                                           _00365_DS_:
                                           ;	.line	536; meter_logger.c	testo_ir_proto.start_bit_len = 1;
002852   0e01     movlw   0x1              	MOVLW	0x01
002854   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
002856   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	537; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
002858   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
00285a   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
                                           _00370_DS_:
00285c   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
                                           ;	.line	539; meter_logger.c	if (testo_ir_proto.data_len == 12) {
00285e   5122     movf    0x22, 0, 0x1     	MOVF	(_testo_ir_proto + 5), W, B
002860   0a0c     xorlw   0xc              	XORLW	0x0c
002862   e001     bz      0x2866           	BZ	_00722_DS_
002864   d078     bra     0x2956           	BRA	_00387_DS_
                                           _00722_DS_:
002866   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 4)
                                           ;	.line	542; meter_logger.c	if (testo_valid_err_corr(testo_ir_proto.data & 0xffff)) {
002868   5121     movf    0x21, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
00286a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
00286c   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
00286e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002870   ecbc     call    0x3b78, 0        	CALL	_testo_valid_err_corr
002872   f01d
002874   6e00     movwf   0, 0             	MOVWF	r0x00
002876   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002878   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00287a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00287c   e00a     bz      0x2892           	BZ	_00375_DS_
00287e   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	544; meter_logger.c	fifo_put(testo_ir_proto.data & 0xff);
002880   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
002882   6e00     movwf   0, 0             	MOVWF	r0x00
002884   6a01     clrf    0x1, 0           	CLRF	r0x01
002886   5000     movf    0, 0, 0          	MOVF	r0x00, W
002888   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00288a   ecc4     call    0x4388, 0        	CALL	_fifo_put
00288c   f021
00288e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	545; meter_logger.c	LED_PIN = 1;
002890   8881     bsf     0x81, 0x4, 0     	BSF	_PORTBbits, 4
                                           _00375_DS_:
002892   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	547; meter_logger.c	testo_ir_proto.state = INIT_STATE;
002894   6b1d     clrf    0x1d, 0x1        	CLRF	_testo_ir_proto, B
                                           ;	.line	552; meter_logger.c	break;
002896   d05f     bra     0x2956           	BRA	_00387_DS_
                                           _00381_DS_:
002898   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	554; meter_logger.c	switch (rs232_proto.state) {
00289a   5123     movf    0x23, 0, 0x1     	MOVF	_rs232_proto, W, B
00289c   0a02     xorlw   0x2              	XORLW	0x02
00289e   e001     bz      0x28a2           	BZ	_00725_DS_
0028a0   d05a     bra     0x2956           	BRA	_00387_DS_
                                           _00725_DS_:
0028a2   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	565; meter_logger.c	TMR0H = (unsigned char)((timer0_reload - ((0xffff - timer0_reload) >> 1)) >> 8);
0028a4   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0028a6   08ff     sublw   0xff             	SUBLW	0xff
0028a8   6e00     movwf   0, 0             	MOVWF	r0x00
0028aa   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
0028ac   5549     subfwb  0x49, 0, 0x1     	SUBFWB	(_timer0_reload + 1), W, B
0028ae   6e01     movwf   0x1, 0           	MOVWF	r0x01
0028b0   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0028b2   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
0028b4   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
0028b6   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0028b8   5d48     subwf   0x48, 0, 0x1     	SUBWF	_timer0_reload, W, B
0028ba   6e00     movwf   0, 0             	MOVWF	r0x00
0028bc   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0028be   5949     subwfb  0x49, 0, 0x1     	SUBWFB	(_timer0_reload + 1), W, B
0028c0   6e01     movwf   0x1, 0           	MOVWF	r0x01
0028c2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0028c4   6e00     movwf   0, 0             	MOVWF	r0x00
0028c6   6a01     clrf    0x1, 0           	CLRF	r0x01
0028c8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0028ca   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	566; meter_logger.c	TMR0L = (unsigned char)timer0_reload - ((0xffff - timer0_reload) >> 1);
0028cc   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0028ce   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
0028d0   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0028d2   08ff     sublw   0xff             	SUBLW	0xff
0028d4   6e01     movwf   0x1, 0           	MOVWF	r0x01
0028d6   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
0028d8   5549     subfwb  0x49, 0, 0x1     	SUBFWB	(_timer0_reload + 1), W, B
0028da   6e02     movwf   0x2, 0           	MOVWF	r0x02
0028dc   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0028de   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
0028e0   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
0028e2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0028e4   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0028e6   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
                                           ;	.line	567; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int while we are using timer to receive data bits
0028e8   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	568; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
0028ea   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	569; meter_logger.c	rs232_proto.state = DATA_WAIT;
0028ec   0e04     movlw   0x4              	MOVLW	0x04
0028ee   0105     movlb   0x5              	BANKSEL	_rs232_proto
0028f0   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	572; meter_logger.c	break;
0028f2   d031     bra     0x2956           	BRA	_00387_DS_
                                           _00384_DS_:
0028f4   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	574; meter_logger.c	switch (rs232_proto.state) {
0028f6   5123     movf    0x23, 0, 0x1     	MOVF	_rs232_proto, W, B
0028f8   0a02     xorlw   0x2              	XORLW	0x02
0028fa   e12d     bnz     0x2956           	BNZ	_00387_DS_
                                           _00727_DS_:
0028fc   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	585; meter_logger.c	TMR0H = (unsigned char)((timer0_reload - ((0xffff - timer0_reload) >> 1)) >> 8);
0028fe   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002900   08ff     sublw   0xff             	SUBLW	0xff
002902   6e00     movwf   0, 0             	MOVWF	r0x00
002904   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
002906   5549     subfwb  0x49, 0, 0x1     	SUBFWB	(_timer0_reload + 1), W, B
002908   6e01     movwf   0x1, 0           	MOVWF	r0x01
00290a   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
00290c   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
00290e   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
002910   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002912   5d48     subwf   0x48, 0, 0x1     	SUBWF	_timer0_reload, W, B
002914   6e00     movwf   0, 0             	MOVWF	r0x00
002916   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002918   5949     subwfb  0x49, 0, 0x1     	SUBWFB	(_timer0_reload + 1), W, B
00291a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00291c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00291e   6e00     movwf   0, 0             	MOVWF	r0x00
002920   6a01     clrf    0x1, 0           	CLRF	r0x01
002922   5000     movf    0, 0, 0          	MOVF	r0x00, W
002924   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	586; meter_logger.c	TMR0L = (unsigned char)timer0_reload - ((0xffff - timer0_reload) >> 1);
002926   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002928   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
00292a   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00292c   08ff     sublw   0xff             	SUBLW	0xff
00292e   6e01     movwf   0x1, 0           	MOVWF	r0x01
002930   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
002932   5549     subfwb  0x49, 0, 0x1     	SUBFWB	(_timer0_reload + 1), W, B
002934   6e02     movwf   0x2, 0           	MOVWF	r0x02
002936   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002938   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
00293a   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
00293c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00293e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002940   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
                                           ;	.line	587; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int while we are using timer to receive data bits
002942   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	588; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
002944   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	589; meter_logger.c	rs232_proto.data &= 0x7f;	// 7-bit data
002946   0e7f     movlw   0x7f             	MOVLW	0x7f
002948   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
00294a   1525     andwf   0x25, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
00294c   6e00     movwf   0, 0             	MOVWF	r0x00
00294e   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002950   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	590; meter_logger.c	rs232_proto.state = DATA_WAIT;
002952   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
002954   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           _00387_DS_:
                                           ;	.line	595; meter_logger.c	INTCONbits.INT0IF = 0;	/* Clear Interrupt Flag */
002956   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           _00389_DS_:
                                           ;	.line	599; meter_logger.c	if (INTCONbits.TMR0IF && INTCONbits.TMR0IE) {
002958   a4f2     btfss   0xf2, 0x2, 0     	BTFSS	_INTCONbits, 2
00295a   efb4     goto    0x2d68           	GOTO	_00463_DS_
00295c   f016
00295e   aaf2     btfss   0xf2, 0x5, 0     	BTFSS	_INTCONbits, 5
002960   efb4     goto    0x2d68           	GOTO	_00463_DS_
002962   f016
002964   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	601; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
002966   5149     movf    0x49, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
002968   6e00     movwf   0, 0             	MOVWF	r0x00
00296a   6a01     clrf    0x1, 0           	CLRF	r0x01
00296c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00296e   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	602; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
002970   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002972   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
                                           ;	.line	604; meter_logger.c	switch (codec_type) {
002974   0e01     movlw   0x1              	MOVLW	0x01
002976   0105     movlb   0x5              	BANKSEL	_codec_type
002978   5d51     subwf   0x51, 0, 0x1     	SUBWF	_codec_type, W, B
00297a   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
00297c   efb3     goto    0x2d66           	GOTO	_00461_DS_
00297e   f016
002980   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
002982   5d51     subwf   0x51, 0, 0x1     	SUBWF	_codec_type, W, B
002984   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002986   efb3     goto    0x2d66           	GOTO	_00461_DS_
002988   f016
                                           ; removed redundant BANKSEL
00298a   0551     decf    0x51, 0, 0x1     	DECF	_codec_type, W, B
00298c   6e00     movwf   0, 0             	MOVWF	r0x00
00298e   6afa     clrf    0xfa, 0          	CLRF	PCLATH
002990   6afb     clrf    0xfb, 0          	CLRF	PCLATU
002992   3400     rlcf    0, 0, 0          	RLCF	r0x00, W
002994   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
002996   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
002998   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00299a   0bfc     andlw   0xfc             	ANDLW	0xfc
00299c   0fac     addlw   0xac             	ADDLW	LOW(_00731_DS_)
00299e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0029a0   0e29     movlw   0x29             	MOVLW	HIGH(_00731_DS_)
0029a2   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
0029a4   0e00     movlw   0                	MOVLW	UPPER(_00731_DS_)
0029a6   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0029a8   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0029aa   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00731_DS_:
0029ac   efe4     goto    0x29c8           	GOTO	_00391_DS_
0029ae   f014
0029b0   ef32     goto    0x2a64           	GOTO	_00403_DS_
0029b2   f015
0029b4   efe9     goto    0x29d2           	GOTO	_00392_DS_
0029b6   f014
0029b8   efdc     goto    0x2bb8           	GOTO	_00424_DS_
0029ba   f015
0029bc   ef72     goto    0x2ae4           	GOTO	_00413_DS_
0029be   f015
0029c0   ef1c     goto    0x2c38           	GOTO	_00434_DS_
0029c2   f016
0029c4   ef5e     goto    0x2cbc           	GOTO	_00445_DS_
0029c6   f016
                                           _00391_DS_:
                                           ;	.line	606; meter_logger.c	T0CONbits.TMR0ON = 0;			// Stop TMR0
0029c8   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
0029ca   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	607; meter_logger.c	testo_ir_proto.state = INIT_STATE;
0029cc   6b1d     clrf    0x1d, 0x1        	CLRF	_testo_ir_proto, B
0029ce   0003     sleep                    	sleep 
                                           ;	.line	609; meter_logger.c	break;
0029d0   d1ca     bra     0x2d66           	BRA	_00461_DS_
                                           _00392_DS_:
                                           ;	.line	611; meter_logger.c	switch (rs232_proto.state) {
0029d2   c523     movff   0x523, 0         	MOVFF	_rs232_proto, r0x00
0029d4   f000
0029d6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0029d8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0029da   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0029dc   e00a     bz      0x29f2           	BZ	_00393_DS_
0029de   5000     movf    0, 0, 0          	MOVF	r0x00, W
0029e0   0a03     xorlw   0x3              	XORLW	0x03
0029e2   e011     bz      0x2a06           	BZ	_00396_DS_
0029e4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0029e6   0a0a     xorlw   0xa              	XORLW	0x0a
0029e8   e033     bz      0x2a50           	BZ	_00400_DS_
0029ea   5000     movf    0, 0, 0          	MOVF	r0x00, W
0029ec   0a0b     xorlw   0xb              	XORLW	0x0b
0029ee   e035     bz      0x2a5a           	BZ	_00401_DS_
0029f0   d1ba     bra     0x2d66           	BRA	_00461_DS_
                                           _00393_DS_:
0029f2   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	613; meter_logger.c	if (rs232_proto.data_len == 8) {
0029f4   5126     movf    0x26, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
0029f6   0a08     xorlw   0x8              	XORLW	0x08
0029f8   e001     bz      0x29fc           	BZ	_00741_DS_
0029fa   d1b5     bra     0x2d66           	BRA	_00461_DS_
                                           _00741_DS_:
                                           ;	.line	614; meter_logger.c	IR_LED_PIN = 1;		// inverted rs232 output on ir, start bit = ir light
0029fc   8281     bsf     0x81, 0x1, 0     	BSF	_PORTBbits, 1
                                           ;	.line	615; meter_logger.c	rs232_proto.state = START_BIT_SENT;
0029fe   0e03     movlw   0x3              	MOVLW	0x03
002a00   0105     movlb   0x5              	BANKSEL	_rs232_proto
002a02   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	617; meter_logger.c	break;
002a04   d1b0     bra     0x2d66           	BRA	_00461_DS_
                                           _00396_DS_:
                                           ;	.line	619; meter_logger.c	if (rs232_proto.data_len >= 1) {
002a06   0e01     movlw   0x1              	MOVLW	0x01
002a08   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002a0a   5d26     subwf   0x26, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002a0c   e31c     bnc     0x2a46           	BNC	_00398_DS_
                                           ;	.line	620; meter_logger.c	IR_LED_PIN = (rs232_proto.data & 1) == 0;	// inverted rs232 output on ir
002a0e   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002a10   1525     andwf   0x25, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
002a12   6e00     movwf   0, 0             	MOVWF	r0x00
002a14   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a16   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
002a18   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
002a1a   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002a1c   6a00     clrf    0, 0             	CLRF	r0x00
002a1e   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
002a20   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a22   0b01     andlw   0x1              	ANDLW	0x01
002a24   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
002a26   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
002a28   5081     movf    0x81, 0, 0       	MOVF	_PORTBbits, W
002a2a   0bfd     andlw   0xfd             	ANDLW	0xfd
002a2c   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
002a2e   6e81     movwf   0x81, 0          	MOVWF	_PORTBbits
                                           ; removed redundant BANKSEL
                                           ;	.line	621; meter_logger.c	rs232_proto.data = rs232_proto.data >> 1;
002a30   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002a32   0b7f     andlw   0x7f             	ANDLW	0x7f
002a34   6e00     movwf   0, 0             	MOVWF	r0x00
002a36   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002a38   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	622; meter_logger.c	rs232_proto.data_len--;
002a3a   c526     movff   0x526, 0         	MOVFF	(_rs232_proto + 3), r0x00
002a3c   f000
002a3e   0600     decf    0, 0x1, 0        	DECF	r0x00, F
002a40   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002a42   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
002a44   d190     bra     0x2d66           	BRA	_00461_DS_
                                           _00398_DS_:
                                           ;	.line	625; meter_logger.c	IR_LED_PIN = 0;								// inverted rs232 output on ir					
002a46   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	626; meter_logger.c	rs232_proto.state = STOP_BIT_SENT;
002a48   0e0a     movlw   0xa              	MOVLW	0x0a
002a4a   0105     movlb   0x5              	BANKSEL	_rs232_proto
002a4c   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	628; meter_logger.c	break;
002a4e   d18b     bra     0x2d66           	BRA	_00461_DS_
                                           _00400_DS_:
                                           ;	.line	630; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002a50   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	631; meter_logger.c	rs232_proto.state = STOP_BIT2_SENT;
002a52   0e0b     movlw   0xb              	MOVLW	0x0b
002a54   0105     movlb   0x5              	BANKSEL	_rs232_proto
002a56   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	632; meter_logger.c	break;
002a58   d186     bra     0x2d66           	BRA	_00461_DS_
                                           _00401_DS_:
                                           ;	.line	634; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002a5a   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
002a5c   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	635; meter_logger.c	rs232_proto.state = INIT_STATE;
002a5e   6b23     clrf    0x23, 0x1        	CLRF	_rs232_proto, B
                                           ;	.line	636; meter_logger.c	T0CONbits.TMR0ON = 0;							// stop timer 0
002a60   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	639; meter_logger.c	break;
002a62   d181     bra     0x2d66           	BRA	_00461_DS_
                                           _00403_DS_:
                                           ;	.line	641; meter_logger.c	switch (rs232_proto.state) {
002a64   c523     movff   0x523, 0         	MOVFF	_rs232_proto, r0x00
002a66   f000
002a68   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a6a   0a04     xorlw   0x4              	XORLW	0x04
002a6c   e007     bz      0x2a7c           	BZ	_00404_DS_
002a6e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a70   0a08     xorlw   0x8              	XORLW	0x08
002a72   e025     bz      0x2abe           	BZ	_00410_DS_
002a74   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a76   0a09     xorlw   0x9              	XORLW	0x09
002a78   e026     bz      0x2ac6           	BZ	_00411_DS_
002a7a   d175     bra     0x2d66           	BRA	_00461_DS_
                                           _00404_DS_:
                                           ;	.line	643; meter_logger.c	rs232_proto.data_len++;
002a7c   c526     movff   0x526, 0         	MOVFF	(_rs232_proto + 3), r0x00
002a7e   f000
002a80   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002a82   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a84   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002a86   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	644; meter_logger.c	if (IR_PIN) {		
002a88   a081     btfss   0x81, 0, 0       	BTFSS	_PORTBbits, 0
002a8a   d006     bra     0x2a98           	BRA	_00406_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	646; meter_logger.c	rs232_proto.data >>= 1;
002a8c   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002a8e   0b7f     andlw   0x7f             	ANDLW	0x7f
002a90   6e00     movwf   0, 0             	MOVWF	r0x00
002a92   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002a94   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
002a96   d00b     bra     0x2aae           	BRA	_00407_DS_
                                           _00406_DS_:
002a98   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	658; meter_logger.c	rs232_proto.data >>= 1;
002a9a   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002a9c   0b7f     andlw   0x7f             	ANDLW	0x7f
002a9e   6e00     movwf   0, 0             	MOVWF	r0x00
002aa0   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002aa2   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	659; meter_logger.c	rs232_proto.data |= 0x80;
002aa4   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
002aa6   1125     iorwf   0x25, 0, 0x1     	IORWF	(_rs232_proto + 2), W, B
002aa8   6e00     movwf   0, 0             	MOVWF	r0x00
002aaa   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002aac   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           _00407_DS_:
                                           ;	.line	679; meter_logger.c	if (rs232_proto.data_len >= 8) {
002aae   0e08     movlw   0x8              	MOVLW	0x08
002ab0   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002ab2   5d26     subwf   0x26, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002ab4   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
002ab6   d157     bra     0x2d66           	BRA	_00461_DS_
                                           ;	.line	681; meter_logger.c	rs232_proto.state = STOP_BIT_WAIT;
002ab8   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
002aba   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	683; meter_logger.c	break;
002abc   d154     bra     0x2d66           	BRA	_00461_DS_
                                           _00410_DS_:
                                           ;	.line	685; meter_logger.c	rs232_proto.state = STOP_BIT2_WAIT;
002abe   0e09     movlw   0x9              	MOVLW	0x09
002ac0   0105     movlb   0x5              	BANKSEL	_rs232_proto
002ac2   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	686; meter_logger.c	break;
002ac4   d150     bra     0x2d66           	BRA	_00461_DS_
                                           _00411_DS_:
002ac6   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	688; meter_logger.c	fifo_put(rs232_proto.data);
002ac8   5125     movf    0x25, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
002aca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002acc   ecc4     call    0x4388, 0        	CALL	_fifo_put
002ace   f021
002ad0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002ad2   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	689; meter_logger.c	rs232_proto.data = 0;
002ad4   6b25     clrf    0x25, 0x1        	CLRF	(_rs232_proto + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	690; meter_logger.c	rs232_proto.data_len = 0;
002ad6   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	691; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
002ad8   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002ada   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	692; meter_logger.c	T0CONbits.TMR0ON = 0;
002adc   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	693; meter_logger.c	INTCONbits.INT0IF = 0;		// dont enter ext int now
002ade   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           ;	.line	694; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int again
002ae0   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	697; meter_logger.c	break;
002ae2   d141     bra     0x2d66           	BRA	_00461_DS_
                                           _00413_DS_:
                                           ;	.line	699; meter_logger.c	switch (rs232_proto.state) {
002ae4   c523     movff   0x523, 0         	MOVFF	_rs232_proto, r0x00
002ae6   f000
002ae8   5000     movf    0, 0, 0          	MOVF	r0x00, W
002aea   6e01     movwf   0x1, 0           	MOVWF	r0x01
002aec   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002aee   e00c     bz      0x2b08           	BZ	_00414_DS_
002af0   5000     movf    0, 0, 0          	MOVF	r0x00, W
002af2   0a03     xorlw   0x3              	XORLW	0x03
002af4   e018     bz      0x2b26           	BZ	_00417_DS_
002af6   5000     movf    0, 0, 0          	MOVF	r0x00, W
002af8   0a06     xorlw   0x6              	XORLW	0x06
002afa   e101     bnz     0x2afe           	BNZ	_00757_DS_
002afc   d053     bra     0x2ba4           	BRA	_00421_DS_
                                           _00757_DS_:
002afe   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b00   0a0a     xorlw   0xa              	XORLW	0x0a
002b02   e101     bnz     0x2b06           	BNZ	_00759_DS_
002b04   d054     bra     0x2bae           	BRA	_00422_DS_
                                           _00759_DS_:
002b06   d12f     bra     0x2d66           	BRA	_00461_DS_
                                           _00414_DS_:
002b08   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	701; meter_logger.c	if (rs232_proto.data_len == 7) {
002b0a   5126     movf    0x26, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
002b0c   0a07     xorlw   0x7              	XORLW	0x07
002b0e   e001     bz      0x2b12           	BZ	_00761_DS_
002b10   d12a     bra     0x2d66           	BRA	_00461_DS_
                                           _00761_DS_:
                                           ;	.line	702; meter_logger.c	IR_LED_PIN = 1;		// inverted rs232 output on ir, start bit = ir light
002b12   8281     bsf     0x81, 0x1, 0     	BSF	_PORTBbits, 1
                                           ;	.line	703; meter_logger.c	rs232_proto.parity = rs232_proto.data & 1;
002b14   0e01     movlw   0x1              	MOVLW	0x01
002b16   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
002b18   1525     andwf   0x25, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
002b1a   6e00     movwf   0, 0             	MOVWF	r0x00
002b1c   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002b1e   6f27     movwf   0x27, 0x1        	MOVWF	(_rs232_proto + 4), B
                                           ;	.line	704; meter_logger.c	rs232_proto.state = START_BIT_SENT;
002b20   0e03     movlw   0x3              	MOVLW	0x03
                                           ; removed redundant BANKSEL
002b22   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	706; meter_logger.c	break;
002b24   d120     bra     0x2d66           	BRA	_00461_DS_
                                           _00417_DS_:
                                           ;	.line	708; meter_logger.c	if (rs232_proto.data_len >= 1) {
002b26   0e01     movlw   0x1              	MOVLW	0x01
002b28   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002b2a   5d26     subwf   0x26, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002b2c   e326     bnc     0x2b7a           	BNC	_00419_DS_
                                           ;	.line	709; meter_logger.c	IR_LED_PIN = (rs232_proto.data & 1) == 0;	// inverted rs232 output on ir
002b2e   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002b30   1525     andwf   0x25, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
002b32   6e00     movwf   0, 0             	MOVWF	r0x00
002b34   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b36   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
002b38   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
002b3a   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002b3c   6a00     clrf    0, 0             	CLRF	r0x00
002b3e   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
002b40   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b42   0b01     andlw   0x1              	ANDLW	0x01
002b44   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
002b46   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
002b48   5081     movf    0x81, 0, 0       	MOVF	_PORTBbits, W
002b4a   0bfd     andlw   0xfd             	ANDLW	0xfd
002b4c   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
002b4e   6e81     movwf   0x81, 0          	MOVWF	_PORTBbits
                                           ; removed redundant BANKSEL
                                           ;	.line	710; meter_logger.c	rs232_proto.parity ^= ((rs232_proto.data >> 1) & 1);
002b50   5125     movf    0x25, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
002b52   0b02     andlw   0x2              	ANDLW	0x02
002b54   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
002b56   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002b58   5127     movf    0x27, 0, 0x1     	MOVF	(_rs232_proto + 4), W, B
002b5a   6e01     movwf   0x1, 0           	MOVWF	r0x01
002b5c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002b5e   1a00     xorwf   0, 0x1, 0        	XORWF	r0x00, F
002b60   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002b62   6f27     movwf   0x27, 0x1        	MOVWF	(_rs232_proto + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	711; meter_logger.c	rs232_proto.data = rs232_proto.data >> 1;
002b64   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002b66   0b7f     andlw   0x7f             	ANDLW	0x7f
002b68   6e00     movwf   0, 0             	MOVWF	r0x00
002b6a   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002b6c   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	712; meter_logger.c	rs232_proto.data_len--;
002b6e   c526     movff   0x526, 0         	MOVFF	(_rs232_proto + 3), r0x00
002b70   f000
002b72   0600     decf    0, 0x1, 0        	DECF	r0x00, F
002b74   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002b76   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
002b78   d0f6     bra     0x2d66           	BRA	_00461_DS_
                                           _00419_DS_:
                                           ;	.line	715; meter_logger.c	IR_LED_PIN = (rs232_proto.parity & 1) == 0;		// inverted rs232 output on ir					
002b7a   0e01     movlw   0x1              	MOVLW	0x01
002b7c   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 4)
002b7e   1527     andwf   0x27, 0, 0x1     	ANDWF	(_rs232_proto + 4), W, B
002b80   6e00     movwf   0, 0             	MOVWF	r0x00
002b82   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b84   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
002b86   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
002b88   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002b8a   6a00     clrf    0, 0             	CLRF	r0x00
002b8c   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
002b8e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b90   0b01     andlw   0x1              	ANDLW	0x01
002b92   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
002b94   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
002b96   5081     movf    0x81, 0, 0       	MOVF	_PORTBbits, W
002b98   0bfd     andlw   0xfd             	ANDLW	0xfd
002b9a   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
002b9c   6e81     movwf   0x81, 0          	MOVWF	_PORTBbits
                                           ;	.line	716; meter_logger.c	rs232_proto.state = PARITY_BIT_SENT;
002b9e   0e06     movlw   0x6              	MOVLW	0x06
                                           ; removed redundant BANKSEL
002ba0   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	718; meter_logger.c	break;
002ba2   d0e1     bra     0x2d66           	BRA	_00461_DS_
                                           _00421_DS_:
                                           ;	.line	720; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002ba4   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	721; meter_logger.c	rs232_proto.state = STOP_BIT_SENT;
002ba6   0e0a     movlw   0xa              	MOVLW	0x0a
002ba8   0105     movlb   0x5              	BANKSEL	_rs232_proto
002baa   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	722; meter_logger.c	break;
002bac   d0dc     bra     0x2d66           	BRA	_00461_DS_
                                           _00422_DS_:
                                           ;	.line	724; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002bae   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
002bb0   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	725; meter_logger.c	rs232_proto.state = INIT_STATE;
002bb2   6b23     clrf    0x23, 0x1        	CLRF	_rs232_proto, B
                                           ;	.line	726; meter_logger.c	T0CONbits.TMR0ON = 0;							// stop timer 0
002bb4   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	729; meter_logger.c	break;
002bb6   d0d7     bra     0x2d66           	BRA	_00461_DS_
                                           _00424_DS_:
                                           ;	.line	731; meter_logger.c	switch (rs232_proto.state) {
002bb8   c523     movff   0x523, 0         	MOVFF	_rs232_proto, r0x00
002bba   f000
002bbc   5000     movf    0, 0, 0          	MOVF	r0x00, W
002bbe   0a04     xorlw   0x4              	XORLW	0x04
002bc0   e007     bz      0x2bd0           	BZ	_00425_DS_
002bc2   5000     movf    0, 0, 0          	MOVF	r0x00, W
002bc4   0a07     xorlw   0x7              	XORLW	0x07
002bc6   e025     bz      0x2c12           	BZ	_00431_DS_
002bc8   5000     movf    0, 0, 0          	MOVF	r0x00, W
002bca   0a08     xorlw   0x8              	XORLW	0x08
002bcc   e026     bz      0x2c1a           	BZ	_00432_DS_
002bce   d0cb     bra     0x2d66           	BRA	_00461_DS_
                                           _00425_DS_:
                                           ;	.line	733; meter_logger.c	rs232_proto.data_len++;
002bd0   c526     movff   0x526, 0         	MOVFF	(_rs232_proto + 3), r0x00
002bd2   f000
002bd4   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002bd6   5000     movf    0, 0, 0          	MOVF	r0x00, W
002bd8   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002bda   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	734; meter_logger.c	if (IR_PIN) {
002bdc   a081     btfss   0x81, 0, 0       	BTFSS	_PORTBbits, 0
002bde   d006     bra     0x2bec           	BRA	_00427_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	736; meter_logger.c	rs232_proto.data >>= 1;
002be0   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002be2   0b7f     andlw   0x7f             	ANDLW	0x7f
002be4   6e00     movwf   0, 0             	MOVWF	r0x00
002be6   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002be8   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
002bea   d00b     bra     0x2c02           	BRA	_00428_DS_
                                           _00427_DS_:
002bec   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	748; meter_logger.c	rs232_proto.data >>= 1;
002bee   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002bf0   0b7f     andlw   0x7f             	ANDLW	0x7f
002bf2   6e00     movwf   0, 0             	MOVWF	r0x00
002bf4   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002bf6   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	749; meter_logger.c	rs232_proto.data |= 0x40;
002bf8   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
002bfa   1125     iorwf   0x25, 0, 0x1     	IORWF	(_rs232_proto + 2), W, B
002bfc   6e00     movwf   0, 0             	MOVWF	r0x00
002bfe   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002c00   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           _00428_DS_:
                                           ;	.line	769; meter_logger.c	if (rs232_proto.data_len >= 7) {
002c02   0e07     movlw   0x7              	MOVLW	0x07
002c04   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002c06   5d26     subwf   0x26, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002c08   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
002c0a   d0ad     bra     0x2d66           	BRA	_00461_DS_
                                           ;	.line	771; meter_logger.c	rs232_proto.state = PARITY_BIT_WAIT;
002c0c   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
002c0e   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	773; meter_logger.c	break;
002c10   d0aa     bra     0x2d66           	BRA	_00461_DS_
                                           _00431_DS_:
                                           ;	.line	775; meter_logger.c	rs232_proto.state = STOP_BIT_WAIT;
002c12   0e08     movlw   0x8              	MOVLW	0x08
002c14   0105     movlb   0x5              	BANKSEL	_rs232_proto
002c16   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	776; meter_logger.c	break;
002c18   d0a6     bra     0x2d66           	BRA	_00461_DS_
                                           _00432_DS_:
002c1a   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	778; meter_logger.c	fifo_put(rs232_proto.data);
002c1c   5125     movf    0x25, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
002c1e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002c20   ecc4     call    0x4388, 0        	CALL	_fifo_put
002c22   f021
002c24   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002c26   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	779; meter_logger.c	rs232_proto.data = 0;
002c28   6b25     clrf    0x25, 0x1        	CLRF	(_rs232_proto + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	780; meter_logger.c	rs232_proto.data_len = 0;
002c2a   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	781; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
002c2c   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002c2e   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	782; meter_logger.c	T0CONbits.TMR0ON = 0;
002c30   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	783; meter_logger.c	INTCONbits.INT0IF = 0;		// dont enter ext int now
002c32   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           ;	.line	784; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int again
002c34   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	787; meter_logger.c	break;
002c36   d097     bra     0x2d66           	BRA	_00461_DS_
                                           _00434_DS_:
                                           ;	.line	789; meter_logger.c	switch (fsk_proto.state) {
002c38   c500     movff   0x500, 0         	MOVFF	_fsk_proto, r0x00
002c3a   f000
002c3c   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c3e   0a04     xorlw   0x4              	XORLW	0x04
002c40   e004     bz      0x2c4a           	BZ	_00435_DS_
002c42   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c44   0a08     xorlw   0x8              	XORLW	0x08
002c46   e02e     bz      0x2ca4           	BZ	_00443_DS_
002c48   d08e     bra     0x2d66           	BRA	_00461_DS_
                                           _00435_DS_:
                                           ;	.line	791; meter_logger.c	fsk_proto.data_len++;						
002c4a   c50d     movff   0x50d, 0         	MOVFF	(_fsk_proto + 13), r0x00
002c4c   f000
002c4e   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002c50   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c52   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
002c54   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
                                           ;	.line	792; meter_logger.c	if (fsk_proto.data_len <= 8) {
002c56   0e09     movlw   0x9              	MOVLW	0x09
                                           ; removed redundant BANKSEL
002c58   5d0d     subwf   0xd, 0, 0x1      	SUBWF	(_fsk_proto + 13), W, B
002c5a   e220     bc      0x2c9c           	BC	_00441_DS_
                                           ;	.line	793; meter_logger.c	if ((fsk_proto.diff > 340) && (fsk_proto.diff < 476)) {
002c5c   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002c5e   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
002c60   e102     bnz     0x2c66           	BNZ	_00780_DS_
002c62   0e55     movlw   0x55             	MOVLW	0x55
                                           ; removed redundant BANKSEL
002c64   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00780_DS_:
002c66   e30e     bnc     0x2c84           	BNC	_00437_DS_
002c68   0e01     movlw   0x1              	MOVLW	0x01
002c6a   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 2)
002c6c   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
002c6e   e102     bnz     0x2c74           	BNZ	_00781_DS_
002c70   0edc     movlw   0xdc             	MOVLW	0xdc
                                           ; removed redundant BANKSEL
002c72   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00781_DS_:
002c74   e207     bc      0x2c84           	BC	_00437_DS_
002c76   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	796; meter_logger.c	fsk_proto.data >>= 1;
002c78   410c     rrncf   0xc, 0, 0x1      	RRNCF	(_fsk_proto + 12), W, B
002c7a   0b7f     andlw   0x7f             	ANDLW	0x7f
002c7c   6e00     movwf   0, 0             	MOVWF	r0x00
002c7e   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002c80   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
002c82   d071     bra     0x2d66           	BRA	_00461_DS_
                                           _00437_DS_:
002c84   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	801; meter_logger.c	fsk_proto.data >>= 1;
002c86   410c     rrncf   0xc, 0, 0x1      	RRNCF	(_fsk_proto + 12), W, B
002c88   0b7f     andlw   0x7f             	ANDLW	0x7f
002c8a   6e00     movwf   0, 0             	MOVWF	r0x00
002c8c   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002c8e   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
                                           ;	.line	802; meter_logger.c	fsk_proto.data |= 0x80;
002c90   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
002c92   110c     iorwf   0xc, 0, 0x1      	IORWF	(_fsk_proto + 12), W, B
002c94   6e00     movwf   0, 0             	MOVWF	r0x00
002c96   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002c98   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
002c9a   d065     bra     0x2d66           	BRA	_00461_DS_
                                           _00441_DS_:
                                           ;	.line	810; meter_logger.c	fsk_proto.state = STOP_BIT_WAIT;
002c9c   0e08     movlw   0x8              	MOVLW	0x08
002c9e   0105     movlb   0x5              	BANKSEL	_fsk_proto
002ca0   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	812; meter_logger.c	break;
002ca2   d061     bra     0x2d66           	BRA	_00461_DS_
                                           _00443_DS_:
002ca4   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	815; meter_logger.c	fifo_put(fsk_proto.data);
002ca6   510c     movf    0xc, 0, 0x1      	MOVF	(_fsk_proto + 12), W, B
002ca8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002caa   ecc4     call    0x4388, 0        	CALL	_fifo_put
002cac   f021
002cae   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002cb0   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	816; meter_logger.c	fsk_proto.data = 0;
002cb2   6b0c     clrf    0xc, 0x1         	CLRF	(_fsk_proto + 12), B
                                           ;	.line	817; meter_logger.c	fsk_proto.state = START_BIT_WAIT;
002cb4   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002cb6   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	819; meter_logger.c	INTCONbits.TMR0IE = 0;						
002cb8   9af2     bcf     0xf2, 0x5, 0     	BCF	_INTCONbits, 5
                                           ;	.line	822; meter_logger.c	break;
002cba   d055     bra     0x2d66           	BRA	_00461_DS_
                                           _00445_DS_:
                                           ;	.line	824; meter_logger.c	switch (fsk_proto.state) {
002cbc   c500     movff   0x500, 0         	MOVFF	_fsk_proto, r0x00
002cbe   f000
002cc0   5000     movf    0, 0, 0          	MOVF	r0x00, W
002cc2   6e01     movwf   0x1, 0           	MOVWF	r0x01
002cc4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002cc6   e00f     bz      0x2ce6           	BZ	_00446_DS_
002cc8   5000     movf    0, 0, 0          	MOVF	r0x00, W
002cca   0a01     xorlw   0x1              	XORLW	0x01
002ccc   e015     bz      0x2cf8           	BZ	_00449_DS_
002cce   5000     movf    0, 0, 0          	MOVF	r0x00, W
002cd0   0a03     xorlw   0x3              	XORLW	0x03
002cd2   e019     bz      0x2d06           	BZ	_00450_DS_
002cd4   5000     movf    0, 0, 0          	MOVF	r0x00, W
002cd6   0a05     xorlw   0x5              	XORLW	0x05
002cd8   e101     bnz     0x2cdc           	BNZ	_00790_DS_
002cda   d039     bra     0x2d4e           	BRA	_00458_DS_
                                           _00790_DS_:
002cdc   5000     movf    0, 0, 0          	MOVF	r0x00, W
002cde   0a0a     xorlw   0xa              	XORLW	0x0a
002ce0   e101     bnz     0x2ce4           	BNZ	_00792_DS_
002ce2   d03c     bra     0x2d5c           	BRA	_00459_DS_
                                           _00792_DS_:
002ce4   d040     bra     0x2d66           	BRA	_00461_DS_
                                           _00446_DS_:
002ce6   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	827; meter_logger.c	if (fsk_proto.data_len == 8) {
002ce8   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002cea   0a08     xorlw   0x8              	XORLW	0x08
002cec   e103     bnz     0x2cf4           	BNZ	_00448_DS_
                                           ;	.line	828; meter_logger.c	fsk_proto.state = IDLE;
002cee   0e01     movlw   0x1              	MOVLW	0x01
002cf0   0105     movlb   0x5              	BANKSEL	_fsk_proto
002cf2   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           _00448_DS_:
                                           ;	.line	831; meter_logger.c	DEBUG_PIN = 0;
002cf4   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	833; meter_logger.c	break;
002cf6   d037     bra     0x2d66           	BRA	_00461_DS_
                                           _00449_DS_:
                                           ;	.line	835; meter_logger.c	send_fsk_low();
002cf8   ec46     call    0x1a8c, 0        	CALL	_send_fsk_low
002cfa   f00d
                                           ;	.line	836; meter_logger.c	fsk_proto.state = START_BIT_SENT;
002cfc   0e03     movlw   0x3              	MOVLW	0x03
002cfe   0105     movlb   0x5              	BANKSEL	_fsk_proto
002d00   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	838; meter_logger.c	DEBUG_PIN = 1;
002d02   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
                                           ;	.line	840; meter_logger.c	break;
002d04   d030     bra     0x2d66           	BRA	_00461_DS_
                                           _00450_DS_:
                                           ;	.line	842; meter_logger.c	if (fsk_proto.data_len--) {
002d06   c50d     movff   0x50d, 0         	MOVFF	(_fsk_proto + 13), r0x00
002d08   f000
002d0a   0400     decf    0, 0, 0          	DECF	r0x00, W
002d0c   6e01     movwf   0x1, 0           	MOVWF	r0x01
002d0e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002d10   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
002d12   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
002d14   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d16   e015     bz      0x2d42           	BZ	_00455_DS_
                                           ;	.line	843; meter_logger.c	if (fsk_proto.data & (0x80 >> fsk_proto.data_len)) {
002d18   0e80     movlw   0x80             	MOVLW	0x80
002d1a   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002d1c   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002d1e   e005     bz      0x2d2a           	BZ	_00795_DS_
002d20   6ce8     negf    0xe8, 0          	NEGF	WREG
002d22   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00796_DS_:
002d24   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
002d26   0f01     addlw   0x1              	ADDLW	0x01
002d28   e3fd     bnc     0x2d24           	BNC	_00796_DS_
                                           _00795_DS_:
002d2a   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
002d2c   510c     movf    0xc, 0, 0x1      	MOVF	(_fsk_proto + 12), W, B
002d2e   1600     andwf   0, 0x1, 0        	ANDWF	r0x00, F
002d30   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d32   e004     bz      0x2d3c           	BZ	_00452_DS_
                                           ;	.line	844; meter_logger.c	send_fsk_high();
002d34   ec66     call    0xecc, 0         	CALL	_send_fsk_high
002d36   f007
                                           ;	.line	846; meter_logger.c	DEBUG_PIN = 0;
002d38   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
002d3a   d003     bra     0x2d42           	BRA	_00455_DS_
                                           _00452_DS_:
                                           ;	.line	850; meter_logger.c	send_fsk_low();
002d3c   ec46     call    0x1a8c, 0        	CALL	_send_fsk_low
002d3e   f00d
                                           ;	.line	852; meter_logger.c	DEBUG_PIN = 1;
002d40   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
                                           _00455_DS_:
002d42   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	856; meter_logger.c	if (fsk_proto.data_len == 0) {
002d44   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002d46   e10f     bnz     0x2d66           	BNZ	_00461_DS_
                                           ;	.line	857; meter_logger.c	fsk_proto.state = DATA_SENT;
002d48   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
002d4a   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	859; meter_logger.c	break;
002d4c   d00c     bra     0x2d66           	BRA	_00461_DS_
                                           _00458_DS_:
                                           ;	.line	861; meter_logger.c	send_fsk_high();
002d4e   ec66     call    0xecc, 0         	CALL	_send_fsk_high
002d50   f007
                                           ;	.line	862; meter_logger.c	fsk_proto.state = STOP_BIT_SENT;
002d52   0e0a     movlw   0xa              	MOVLW	0x0a
002d54   0105     movlb   0x5              	BANKSEL	_fsk_proto
002d56   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	864; meter_logger.c	DEBUG_PIN = 0;
002d58   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	866; meter_logger.c	break;
002d5a   d005     bra     0x2d66           	BRA	_00461_DS_
                                           _00459_DS_:
                                           ;	.line	868; meter_logger.c	send_fsk_high();
002d5c   ec66     call    0xecc, 0         	CALL	_send_fsk_high
002d5e   f007
002d60   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	869; meter_logger.c	fsk_proto.state = INIT_STATE;
002d62   6b00     clrf    0, 0x1           	CLRF	_fsk_proto, B
                                           ;	.line	871; meter_logger.c	DEBUG_PIN = 0;
002d64   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           _00461_DS_:
                                           ;	.line	878; meter_logger.c	INTCONbits.TMR0IF = 0;
002d66   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           _00463_DS_:
                                           ;	.line	881; meter_logger.c	if (PIR2bits.CMIF && PIE2bits.CMIE) {
002d68   aca1     btfss   0xa1, 0x6, 0     	BTFSS	_PIR2bits, 6
002d6a   d076     bra     0x2e58           	BRA	_00482_DS_
002d6c   aca0     btfss   0xa0, 0x6, 0     	BTFSS	_PIE2bits, 6
002d6e   d074     bra     0x2e58           	BRA	_00482_DS_
                                           ;	.line	883; meter_logger.c	if (CMCONbits.C1OUT) {		// rising edge
002d70   acb4     btfss   0xb4, 0x6, 0     	BTFSS	_CMCONbits, 6
002d72   d070     bra     0x2e54           	BRA	_00477_DS_
                                           ;	.line	884; meter_logger.c	timer_0 = (unsigned int)(TMR0L) | ((unsigned int)(TMR0H) << 8);
002d74   cfd6     movff   0xfd6, 0         	MOVFF	_TMR0L, r0x00
002d76   f000
002d78   6a01     clrf    0x1, 0           	CLRF	r0x01
002d7a   cfd7     movff   0xfd7, 0x2       	MOVFF	_TMR0H, r0x02
002d7c   f002
002d7e   6a03     clrf    0x3, 0           	CLRF	r0x03
002d80   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002d82   6e05     movwf   0x5, 0           	MOVWF	r0x05
002d84   6a04     clrf    0x4, 0           	CLRF	r0x04
002d86   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002d88   1000     iorwf   0, 0, 0          	IORWF	r0x00, W
002d8a   0105     movlb   0x5              	BANKSEL	_timer_0
002d8c   6f46     movwf   0x46, 0x1        	MOVWF	_timer_0, B
002d8e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002d90   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
                                           ; removed redundant BANKSEL
002d92   6f47     movwf   0x47, 0x1        	MOVWF	(_timer_0 + 1), B
                                           ;	.line	889; meter_logger.c	DEBUG_PIN = 1;
002d94   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
002d96   0105     movlb   0x5              	BANKSEL	_last_timer_0
                                           ;	.line	891; meter_logger.c	fsk_proto.diff = timer_0 - last_timer_0;
002d98   514a     movf    0x4a, 0, 0x1     	MOVF	_last_timer_0, W, B
002d9a   0105     movlb   0x5              	BANKSEL	_timer_0
002d9c   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
002d9e   6e00     movwf   0, 0             	MOVWF	r0x00
002da0   0105     movlb   0x5              	BANKSEL	(_last_timer_0 + 1)
002da2   514b     movf    0x4b, 0, 0x1     	MOVF	(_last_timer_0 + 1), W, B
002da4   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002da6   5947     subwfb  0x47, 0, 0x1     	SUBWFB	(_timer_0 + 1), W, B
002da8   6e01     movwf   0x1, 0           	MOVWF	r0x01
002daa   5000     movf    0, 0, 0          	MOVF	r0x00, W
002dac   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
002dae   6f01     movwf   0x1, 0x1         	MOVWF	(_fsk_proto + 1), B
002db0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002db2   6f02     movwf   0x2, 0x1         	MOVWF	(_fsk_proto + 2), B
                                           ;	.line	892; meter_logger.c	last_timer_0 = timer_0;
002db4   c546     movff   0x546, 0x54a     	MOVFF	_timer_0, _last_timer_0
002db6   f54a
002db8   c547     movff   0x547, 0x54b     	MOVFF	(_timer_0 + 1), (_last_timer_0 + 1)
002dba   f54b
                                           ;	.line	894; meter_logger.c	if ((fsk_proto.diff > 340) && (fsk_proto.diff < 476)) {
002dbc   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002dbe   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
002dc0   e102     bnz     0x2dc6           	BNZ	_00798_DS_
002dc2   0e55     movlw   0x55             	MOVLW	0x55
                                           ; removed redundant BANKSEL
002dc4   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00798_DS_:
002dc6   e330     bnc     0x2e28           	BNC	_00473_DS_
002dc8   0e01     movlw   0x1              	MOVLW	0x01
002dca   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 2)
002dcc   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
002dce   e102     bnz     0x2dd4           	BNZ	_00799_DS_
002dd0   0edc     movlw   0xdc             	MOVLW	0xdc
                                           ; removed redundant BANKSEL
002dd2   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00799_DS_:
002dd4   e229     bc      0x2e28           	BC	_00473_DS_
002dd6   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
                                           ;	.line	895; meter_logger.c	fsk_proto.low_count += fsk_proto.diff;
002dd8   5101     movf    0x1, 0, 0x1      	MOVF	(_fsk_proto + 1), W, B
                                           ; removed redundant BANKSEL
002dda   2505     addwf   0x5, 0, 0x1      	ADDWF	(_fsk_proto + 5), W, B
002ddc   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002dde   5102     movf    0x2, 0, 0x1      	MOVF	(_fsk_proto + 2), W, B
                                           ; removed redundant BANKSEL
002de0   2106     addwfc  0x6, 0, 0x1      	ADDWFC	(_fsk_proto + 6), W, B
002de2   6e01     movwf   0x1, 0           	MOVWF	r0x01
002de4   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002de6   6f05     movwf   0x5, 0x1         	MOVWF	(_fsk_proto + 5), B
002de8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002dea   6f06     movwf   0x6, 0x1         	MOVWF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	896; meter_logger.c	if (fsk_proto.state == START_BIT_WAIT) {
002dec   5100     movf    0, 0, 0x1        	MOVF	_fsk_proto, W, B
002dee   0a02     xorlw   0x2              	XORLW	0x02
002df0   e132     bnz     0x2e56           	BNZ	_00478_DS_
                                           ;	.line	897; meter_logger.c	if (fsk_proto.low_count >= 800) {								// start bit received
002df2   0e03     movlw   0x3              	MOVLW	0x03
002df4   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 6)
002df6   5d06     subwf   0x6, 0, 0x1      	SUBWF	(_fsk_proto + 6), W, B
002df8   e102     bnz     0x2dfe           	BNZ	_00802_DS_
002dfa   0e20     movlw   0x20             	MOVLW	0x20
                                           ; removed redundant BANKSEL
002dfc   5d05     subwf   0x5, 0, 0x1      	SUBWF	(_fsk_proto + 5), W, B
                                           _00802_DS_:
002dfe   e32b     bnc     0x2e56           	BNC	_00478_DS_
002e00   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	899; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
002e02   5149     movf    0x49, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
002e04   6e00     movwf   0, 0             	MOVWF	r0x00
002e06   6a01     clrf    0x1, 0           	CLRF	r0x01
002e08   5000     movf    0, 0, 0          	MOVF	r0x00, W
002e0a   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	900; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
002e0c   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002e0e   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
002e10   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 5)
                                           ;	.line	901; meter_logger.c	fsk_proto.low_count = 0;
002e12   6b05     clrf    0x5, 0x1         	CLRF	(_fsk_proto + 5), B
                                           ; removed redundant BANKSEL
002e14   6b06     clrf    0x6, 0x1         	CLRF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	902; meter_logger.c	fsk_proto.high_count = 0;
002e16   6b07     clrf    0x7, 0x1         	CLRF	(_fsk_proto + 7), B
                                           ; removed redundant BANKSEL
002e18   6b08     clrf    0x8, 0x1         	CLRF	(_fsk_proto + 8), B
                                           ; removed redundant BANKSEL
                                           ;	.line	904; meter_logger.c	fsk_proto.data_len = 0;
002e1a   6b0d     clrf    0xd, 0x1         	CLRF	(_fsk_proto + 13), B
                                           ; removed redundant BANKSEL
                                           ;	.line	905; meter_logger.c	fsk_proto.data = 0;
002e1c   6b0c     clrf    0xc, 0x1         	CLRF	(_fsk_proto + 12), B
                                           ;	.line	906; meter_logger.c	fsk_proto.state = DATA_WAIT;
002e1e   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
002e20   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	907; meter_logger.c	INTCONbits.TMR0IF = 0;		// clear flag so it dont enter isr now
002e22   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	908; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
002e24   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
002e26   d017     bra     0x2e56           	BRA	_00478_DS_
                                           _00473_DS_:
002e28   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	914; meter_logger.c	if (fsk_proto.state == START_BIT_WAIT) {
002e2a   5100     movf    0, 0, 0x1        	MOVF	_fsk_proto, W, B
002e2c   0a02     xorlw   0x2              	XORLW	0x02
002e2e   e106     bnz     0x2e3c           	BNZ	_00470_DS_
                                           _00804_DS_:
002e30   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 5)
                                           ;	.line	915; meter_logger.c	fsk_proto.low_count = 0;
002e32   6b05     clrf    0x5, 0x1         	CLRF	(_fsk_proto + 5), B
                                           ; removed redundant BANKSEL
002e34   6b06     clrf    0x6, 0x1         	CLRF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	916; meter_logger.c	fsk_proto.high_count = 0;
002e36   6b07     clrf    0x7, 0x1         	CLRF	(_fsk_proto + 7), B
                                           ; removed redundant BANKSEL
002e38   6b08     clrf    0x8, 0x1         	CLRF	(_fsk_proto + 8), B
002e3a   d00d     bra     0x2e56           	BRA	_00478_DS_
                                           _00470_DS_:
002e3c   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
                                           ;	.line	919; meter_logger.c	fsk_proto.high_count += fsk_proto.diff;
002e3e   5101     movf    0x1, 0, 0x1      	MOVF	(_fsk_proto + 1), W, B
                                           ; removed redundant BANKSEL
002e40   2507     addwf   0x7, 0, 0x1      	ADDWF	(_fsk_proto + 7), W, B
002e42   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002e44   5102     movf    0x2, 0, 0x1      	MOVF	(_fsk_proto + 2), W, B
                                           ; removed redundant BANKSEL
002e46   2108     addwfc  0x8, 0, 0x1      	ADDWFC	(_fsk_proto + 8), W, B
002e48   6e01     movwf   0x1, 0           	MOVWF	r0x01
002e4a   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002e4c   6f07     movwf   0x7, 0x1         	MOVWF	(_fsk_proto + 7), B
002e4e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002e50   6f08     movwf   0x8, 0x1         	MOVWF	(_fsk_proto + 8), B
002e52   d001     bra     0x2e56           	BRA	_00478_DS_
                                           _00477_DS_:
                                           ;	.line	925; meter_logger.c	DEBUG_PIN = 0;
002e54   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           _00478_DS_:
                                           ;	.line	929; meter_logger.c	PIR2bits.CMIF = 0;
002e56   9ca1     bcf     0xa1, 0x6, 0     	BCF	_PIR2bits, 6
                                           _00482_DS_:
002e58   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002e5a   f005
002e5c   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002e5e   f004
002e60   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002e62   f003
002e64   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002e66   f002
002e68   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002e6a   f001
002e6c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002e6e   f000
002e70   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002e72   ffd9
002e74   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
002e76   fffb
002e78   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
002e7a   fffa
002e7c   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
002e7e   ffea
002e80   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
002e82   ffe9
002e84   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
002e86   fff4
002e88   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
002e8a   fff3
002e8c   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002e8e   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
002e90   ffe0
002e92   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
002e94   ffd8
002e96   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           __str_0:
002e98   7250     btg     0x50, 0x1, 0     	DB	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x3a, 0x20, 0x70
002e9a   636f     cpfseq  0x6f, 0x1        
002e9c   7365     btg     0x65, 0x1, 0x1   
002e9e   6f73     movwf   0x73, 0x1        
002ea0   3a72     swapf   0x72, 0x1, 0     
002ea2   7020     btg     0x20, 0, 0       
002ea4   6369     cpfseq  0x69, 0x1        	DB	0x69, 0x63, 0x31, 0x38, 0x66, 0x32, 0x35, 0x35, 0x30, 0x0a, 0x0d, 0x00
002ea6   3831     swapf   0x31, 0, 0       
002ea8   3266     rrcf    0x66, 0x1, 0     
002eaa   3535     rlcf    0x35, 0, 0x1     
002eac   0a30     xorlw   0x30             
002eae   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           __str_1:
002eb0   7250     btg     0x50, 0x1, 0     	DB	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x3a, 0x20, 0x70
002eb2   636f     cpfseq  0x6f, 0x1        
002eb4   7365     btg     0x65, 0x1, 0x1   
002eb6   6f73     movwf   0x73, 0x1        
002eb8   3a72     swapf   0x72, 0x1, 0     
002eba   7020     btg     0x20, 0, 0       
002ebc   6369     cpfseq  0x69, 0x1        	DB	0x69, 0x63, 0x31, 0x38, 0x66, 0x32, 0x35, 0x35, 0x33, 0x0a, 0x0d, 0x00
002ebe   3831     swapf   0x31, 0, 0       
002ec0   3266     rrcf    0x66, 0x1, 0     
002ec2   3535     rlcf    0x35, 0, 0x1     
002ec4   0a33     xorlw   0x33             
002ec6   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           __str_2:
002ec8   7250     btg     0x50, 0x1, 0     	DB	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x3a, 0x20, 0x75
002eca   636f     cpfseq  0x6f, 0x1        
002ecc   7365     btg     0x65, 0x1, 0x1   
002ece   6f73     movwf   0x73, 0x1        
002ed0   3a72     swapf   0x72, 0x1, 0     
002ed2   7520     btg     0x20, 0x2, 0x1   
002ed4   736e     btg     0x6e, 0x1, 0x1   	DB	0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x2c, 0x20
002ed6   7075     btg     0x75, 0, 0       
002ed8   6f70     movwf   0x70, 0x1        
002eda   7472     btg     0x72, 0x2, 0     
002edc   6465     cpfsgt  0x65, 0          
002ede   202c     addwfc  0x2c, 0, 0       
002ee0   6564     cpfsgt  0x64, 0x1        	DB	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x69, 0x64, 0x3a, 0x20, 0x30
002ee2   6976     setf    0x76, 0x1        
002ee4   6563     cpfsgt  0x63, 0x1        
002ee6   6920     setf    0x20, 0x1        
002ee8   3a64     swapf   0x64, 0x1, 0     
002eea   3020     rrcf    0x20, 0, 0       
002eec   2578     addwf   0x78, 0, 0x1     	DB	0x78, 0x25, 0x30, 0x34, 0x78, 0x0a, 0x0d, 0x00
002eee   3430     rlcf    0x30, 0, 0       
002ef0   0a78     xorlw   0x78             
002ef2   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           __str_3:
002ef4   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x70, 0x72, 0x69, 0x6e
002ef6   7270     btg     0x70, 0x1, 0     
002ef8   7365     btg     0x65, 0x1, 0x1   
002efa   2073     addwfc  0x73, 0, 0       
002efc   7270     btg     0x70, 0x1, 0     
002efe   6e69     movwf   0x69, 0          
002f00   2074     addwfc  0x74, 0, 0       	DB	0x74, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x0a, 0x0d
002f02   6e6f     movwf   0x6f, 0          
002f04   7420     btg     0x20, 0x2, 0     
002f06   7365     btg     0x65, 0x1, 0x1   
002f08   6f74     movwf   0x74, 0x1        
002f0a   0d0a     mullw   0xa              
002f0c   0000     nop                      	DB	0x00
                                           ; ; Starting pCode block
                                           __str_4:
002f0e   2d3c     decfsz  0x3c, 0, 0x1     	DB	0x3c, 0x2d, 0x20, 0x00
002f10   0020     dw      0x20             
                                           ; ; Starting pCode block
                                           __str_5:
002f12   6425     cpfsgt  0x25, 0          	DB	0x25, 0x64, 0x20, 0x00
002f14   0020     dw      0x20             
                                           ; ; Starting pCode block
                                           __str_6:
002f16   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x00
002f18   0000     nop                      
                                           ; ; Starting pCode block
                                           __str_7:
002f1a   3e2d     incfsz  0x2d, 0x1, 0     	DB	0x2d, 0x3e, 0x20, 0x00
002f1c   0020     dw      0x20             
                                           ; ; Starting pCode block
                                           __str_8:
002f1e   6142     cpfslt  0x42, 0x1        	DB	0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x3a, 0x20, 0x25, 0x64, 0x6d
002f20   7474     btg     0x74, 0x2, 0     
002f22   7265     btg     0x65, 0x1, 0     
002f24   3a79     swapf   0x79, 0x1, 0     
002f26   2520     addwf   0x20, 0, 0x1     
002f28   6d64     negf    0x64, 0x1        
002f2a   0a56     xorlw   0x56             	DB	0x56, 0x0a, 0x0d, 0x00
002f2c   000d     tblwt   *+               
                                           
                                           
                                           ; Statistics:
                                           ; code size:	16114 (0x3ef2) bytes (12.29%)
                                           ;           	 8057 (0x1f79) words
                                           ; udata size:	 1198 (0x04ae) bytes (66.85%)
                                           ; access size:	   14 (0x000e) bytes
                                           
                                           
                                           	end
