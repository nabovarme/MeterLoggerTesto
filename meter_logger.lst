gplink-1.2.0 #980 (Jul 31 2013)
Copyright (c) 1998-2013 gputils project
Listing File Generated: 6-18-2014  02:22:45
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.4.0 #8981 (Jun  6 2014) (Mac OS X x86_64)
                                           ; This file was generated Wed Jun 18 02:22:45 2014
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f2550
                                           	radix	dec
                                           	CONFIG	PLLDIV=2
                                           	CONFIG	CPUDIV=OSC1_PLL2
                                           	CONFIG	USBDIV=1
                                           	CONFIG	FOSC=INTOSC_XT
                                           	CONFIG	FCMEN=OFF
                                           	CONFIG	IESO=OFF
                                           	CONFIG	PWRT=OFF
                                           	CONFIG	BOR=OFF
                                           	CONFIG	BORV=3
                                           	CONFIG	VREGEN=OFF
                                           	CONFIG	WDT=OFF
                                           	CONFIG	WDTPS=32768
                                           	CONFIG	CCP2MX=ON
                                           	CONFIG	PBADEN=OFF
                                           	CONFIG	LPT1OSC=OFF
                                           	CONFIG	MCLRE=ON
                                           	CONFIG	STVREN=ON
                                           	CONFIG	LVP=ON
                                           	CONFIG	XINST=OFF
                                           	CONFIG	CP0=OFF
                                           	CONFIG	CP1=OFF
                                           	CONFIG	CP2=OFF
                                           	CONFIG	CP3=OFF
                                           	CONFIG	CPB=OFF
                                           	CONFIG	CPD=OFF
                                           	CONFIG	WRT0=OFF
                                           	CONFIG	WRT1=OFF
                                           	CONFIG	WRT2=OFF
                                           	CONFIG	WRT3=OFF
                                           	CONFIG	WRTC=OFF
                                           	CONFIG	WRTB=OFF
                                           	CONFIG	WRTD=OFF
                                           	CONFIG	EBTR0=OFF
                                           	CONFIG	EBTR1=OFF
                                           	CONFIG	EBTR2=OFF
                                           	CONFIG	EBTR3=OFF
                                           	CONFIG	EBTRB=OFF
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_c
                                           	global	_sleep_ms
                                           	global	_init_system
                                           	global	_get_dev_id
                                           	global	_my_usart_open
                                           	global	_reverse
                                           	global	_testo_valid_err_corr
                                           	global	_testo_ir_enable
                                           	global	_testo_ir_disable
                                           	global	_rs232_8n2_tx_enable
                                           	global	_rs232_8n2_tx_disable
                                           	global	_rs232_8n2_rx_enable
                                           	global	_rs232_8n2_rx_disable
                                           	global	_rs232_8n2_tx_byte
                                           	global	_rs232_7e1_tx_enable
                                           	global	_rs232_7e1_tx_disable
                                           	global	_rs232_7e1_rx_enable
                                           	global	_rs232_7e1_rx_disable
                                           	global	_rs232_7e1_tx_byte
                                           	global	_fsk_tx_enable
                                           	global	_fsk_tx_disable
                                           	global	_fsk_rx_enable
                                           	global	_fsk_rx_disable
                                           	global	_send_fsk_high
                                           	global	_send_fsk_low
                                           	global	_fsk_tx_byte
                                           	global	_fifo_in_use
                                           	global	_fifo_put
                                           	global	_fifo_get
                                           	global	_fifo_snoop
                                           	global	_get_battery_level
                                           	global	_flash_led
                                           	global	__debug
                                           	global	__debug2
                                           	global	_timer_0
                                           	global	_last_timer_0
                                           	global	_timer_1_ms
                                           	global	_timer0_reload
                                           	global	_debug_buffer
                                           	global	_fifo_head
                                           	global	_fifo_tail
                                           	global	_fifo_buffer_0
                                           	global	_fifo_buffer_1
                                           	global	_fifo_buffer_2
                                           	global	_fifo_buffer_3
                                           	global	_codec_type
                                           	global	_led_flash
                                           	global	_testo_ir_proto
                                           	global	_rs232_proto
                                           	global	_fsk_proto
                                           	global	_main
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrput1
                                           	extern	_UFRMLbits
                                           	extern	_UFRMHbits
                                           	extern	_UIRbits
                                           	extern	_UIEbits
                                           	extern	_UEIRbits
                                           	extern	_UEIEbits
                                           	extern	_USTATbits
                                           	extern	_UCONbits
                                           	extern	_UADDRbits
                                           	extern	_UCFGbits
                                           	extern	_UEP0bits
                                           	extern	_UEP1bits
                                           	extern	_UEP2bits
                                           	extern	_UEP3bits
                                           	extern	_UEP4bits
                                           	extern	_UEP5bits
                                           	extern	_UEP6bits
                                           	extern	_UEP7bits
                                           	extern	_UEP8bits
                                           	extern	_UEP9bits
                                           	extern	_UEP10bits
                                           	extern	_UEP11bits
                                           	extern	_UEP12bits
                                           	extern	_UEP13bits
                                           	extern	_UEP14bits
                                           	extern	_UEP15bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_EECON1bits
                                           	extern	_RCSTAbits
                                           	extern	_TXSTAbits
                                           	extern	_T3CONbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_CCP1ASbits
                                           	extern	_ECCP1ASbits
                                           	extern	_CCP1DELbits
                                           	extern	_ECCP1DELbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCTLbits
                                           	extern	_CCP2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_UFRM
                                           	extern	_UFRML
                                           	extern	_UFRMH
                                           	extern	_UIR
                                           	extern	_UIE
                                           	extern	_UEIR
                                           	extern	_UEIE
                                           	extern	_USTAT
                                           	extern	_UCON
                                           	extern	_UADDR
                                           	extern	_UCFG
                                           	extern	_UEP0
                                           	extern	_UEP1
                                           	extern	_UEP2
                                           	extern	_UEP3
                                           	extern	_UEP4
                                           	extern	_UEP5
                                           	extern	_UEP6
                                           	extern	_UEP7
                                           	extern	_UEP8
                                           	extern	_UEP9
                                           	extern	_UEP10
                                           	extern	_UEP11
                                           	extern	_UEP12
                                           	extern	_UEP13
                                           	extern	_UEP14
                                           	extern	_UEP15
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_OSCTUNE
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_RCSTA
                                           	extern	_TXSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_CCP1AS
                                           	extern	_ECCP1AS
                                           	extern	_CCP1DEL
                                           	extern	_ECCP1DEL
                                           	extern	_BAUDCON
                                           	extern	_BAUDCTL
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_sprintf
                                           	extern	_usart_drdy
                                           	extern	_usart_getc
                                           	extern	_usart_putc
                                           	extern	_usart_puts
                                           	extern	_adc_open
                                           	extern	_adc_close
                                           	extern	_adc_conv
                                           	extern	_adc_busy
                                           	extern	_adc_read
                                           	extern	_adc_setchannel
                                           	extern	__mullong
                                           	extern	__divulong
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           r0x0d	res	1
                                           
                                           udata_meter_logger_0	udata
                                           _c	res	1
                                           
                                           udata_meter_logger_1	udata
                                           _timer_1_ms	res	2
                                           
                                           udata_meter_logger_2	udata
                                           _fifo_head	res	2
                                           
                                           udata_meter_logger_3	udata
                                           _fifo_tail	res	2
                                           
                                           udata_meter_logger_4	udata
                                           _debug_buffer	res	128
                                           
                                           udata_meter_logger_5	udata
                                           _main_cmd_1_90	res	1
                                           
                                           udata_meter_logger_6	udata
                                           _main_sub_cmd_1_90	res	1
                                           
                                           udata_meter_logger_7	udata
                                           _timer_0	res	2
                                           
                                           udata_meter_logger_8	udata
                                           _timer0_reload	res	2
                                           
                                           udata_meter_logger_9	udata
                                           _testo_ir_proto	res	6
                                           
                                           udata_meter_logger_10	udata
                                           _rs232_proto	res	6
                                           
                                           udata_meter_logger_11	udata
                                           _fsk_proto	res	16
                                           
                                           udata_meter_logger_12	udata
                                           _last_timer_0	res	2
                                           
                                           udata_meter_logger_13	udata
                                           _codec_type	res	1
                                           
                                           udata_meter_logger_14	udata
                                           _led_flash	res	2
                                           
                                           udata_meter_logger_15	udata
                                           _fifo_buffer_0	res	256
                                           
                                           udata_meter_logger_16	udata
                                           _fifo_buffer_1	res	256
                                           
                                           udata_meter_logger_17	udata
                                           _fifo_buffer_2	res	256
                                           
                                           udata_meter_logger_18	udata
                                           _fifo_buffer_3	res	256
                                           
                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_meter_logger_ivec_0x1_isr_high_prio	code	0X000008
                                           ivec_0x1_isr_high_prio:
000008   ef20     goto    0x2440           	GOTO	_isr_high_prio
00000a   f012
                                           
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_meter_logger_ivec_0x2_isr_low_prio	code	0X000018
                                           ivec_0x2_isr_low_prio:
000018   efba     goto    0x4974           	GOTO	_isr_low_prio
00001a   f024
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_meter_logger__main	code
                                           _main:
                                           ;	.line	118; meter_logger.c	OSCCONbits.SCS = 0x10;
00001c   50d3     movf    0xd3, 0, 0       	MOVF	_OSCCONbits, W
00001e   0bfc     andlw   0xfc             	ANDLW	0xfc
000020   6ed3     movwf   0xd3, 0          	MOVWF	_OSCCONbits
                                           ;	.line	120; meter_logger.c	OSCCONbits.IRCF = 0x7;	// 8 MHz
000022   50d3     movf    0xd3, 0, 0       	MOVF	_OSCCONbits, W
000024   0b8f     andlw   0x8f             	ANDLW	0x8f
000026   0970     iorlw   0x70             	IORLW	0x70
000028   6ed3     movwf   0xd3, 0          	MOVWF	_OSCCONbits
00002a   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	123; meter_logger.c	timer_1_ms = 0;
00002c   6b40     clrf    0x40, 0x1        	CLRF	_timer_1_ms, B
                                           ; removed redundant BANKSEL
00002e   6b41     clrf    0x41, 0x1        	CLRF	(_timer_1_ms + 1), B
000030   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	125; meter_logger.c	fifo_head = 0;
000032   6b42     clrf    0x42, 0x1        	CLRF	_fifo_head, B
                                           ; removed redundant BANKSEL
000034   6b43     clrf    0x43, 0x1        	CLRF	(_fifo_head + 1), B
000036   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	126; meter_logger.c	fifo_tail = 0;
000038   6b44     clrf    0x44, 0x1        	CLRF	_fifo_tail, B
                                           ; removed redundant BANKSEL
00003a   6b45     clrf    0x45, 0x1        	CLRF	(_fifo_tail + 1), B
                                           ;	.line	128; meter_logger.c	init_system();	
00003c   ec96     call    0x4d2c, 0        	CALL	_init_system
00003e   f026
                                           ;	.line	129; meter_logger.c	sleep_ms(100);
000040   0e00     movlw   0                	MOVLW	0x00
000042   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000044   0e64     movlw   0x64             	MOVLW	0x64
000046   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000048   ec1c     call    0x4a38, 0        	CALL	_sleep_ms
00004a   f025
00004c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00004e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	132; meter_logger.c	usart_puts("\n\rMeterLogger... serial working\n\r");
000050   0e00     movlw   0                	MOVLW	UPPER(___str_0)
000052   6e02     movwf   0x2, 0           	MOVWF	r0x02
000054   0e2c     movlw   0x2c             	MOVLW	HIGH(___str_0)
000056   6e01     movwf   0x1, 0           	MOVWF	r0x01
000058   0e5c     movlw   0x5c             	MOVLW	LOW(___str_0)
00005a   6e00     movwf   0, 0             	MOVWF	r0x00
00005c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00005e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000060   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000062   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000064   5000     movf    0, 0, 0          	MOVF	r0x00, W
000066   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000068   ecf3     call    0x4be6, 0        	CALL	_usart_puts
00006a   f025
00006c   0e03     movlw   0x3              	MOVLW	0x03
00006e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	136; meter_logger.c	get_battery_level();
000070   ec3c     call    0x3678, 0        	CALL	_get_battery_level
000072   f01b
                                           ;	.line	139; meter_logger.c	dev_id = get_dev_id();
000074   ec2f     call    0x4c5e, 0        	CALL	_get_dev_id
000076   f026
000078   6e00     movwf   0, 0             	MOVWF	r0x00
00007a   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00007c   f001
                                           ;	.line	141; meter_logger.c	if (dev_id == 0x1240) {
00007e   5000     movf    0, 0, 0          	MOVF	r0x00, W
000080   0a40     xorlw   0x40             	XORLW	0x40
000082   e103     bnz     0x8a             	BNZ	_00325_DS_
000084   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000086   0a12     xorlw   0x12             	XORLW	0x12
000088   e001     bz      0x8c             	BZ	_00326_DS_
                                           _00325_DS_:
00008a   d01d     bra     0xc6             	BRA	_00109_DS_
                                           _00326_DS_:
                                           ;	.line	142; meter_logger.c	sprintf(debug_buffer, "Processor: pic18f2550\n\r");
00008c   0e00     movlw   0                	MOVLW	UPPER(___str_1)
00008e   6e04     movwf   0x4, 0           	MOVWF	r0x04
000090   0e2c     movlw   0x2c             	MOVLW	HIGH(___str_1)
000092   6e03     movwf   0x3, 0           	MOVWF	r0x03
000094   0e7e     movlw   0x7e             	MOVLW	LOW(___str_1)
000096   6e02     movwf   0x2, 0           	MOVWF	r0x02
000098   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00009a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00009c   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00009e   6e05     movwf   0x5, 0           	MOVWF	r0x05
0000a0   0e80     movlw   0x80             	MOVLW	0x80
0000a2   6e07     movwf   0x7, 0           	MOVWF	r0x07
0000a4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0000a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000a8   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0000aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000ac   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0000ae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000b0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0000b2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000b4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0000b6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000b8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0000ba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000bc   ec7e     call    0x44fc, 0        	CALL	_sprintf
0000be   f022
0000c0   0e06     movlw   0x6              	MOVLW	0x06
0000c2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0000c4   d044     bra     0x14e            	BRA	_00110_DS_
                                           _00109_DS_:
                                           ;	.line	144; meter_logger.c	else if (dev_id == 0x2a40) {
0000c6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0000c8   0a40     xorlw   0x40             	XORLW	0x40
0000ca   e103     bnz     0xd2             	BNZ	_00327_DS_
0000cc   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0000ce   0a2a     xorlw   0x2a             	XORLW	0x2a
0000d0   e001     bz      0xd4             	BZ	_00328_DS_
                                           _00327_DS_:
0000d2   d01d     bra     0x10e            	BRA	_00106_DS_
                                           _00328_DS_:
                                           ;	.line	145; meter_logger.c	sprintf(debug_buffer, "Processor: pic18f2553\n\r");
0000d4   0e00     movlw   0                	MOVLW	UPPER(___str_2)
0000d6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0000d8   0e2c     movlw   0x2c             	MOVLW	HIGH(___str_2)
0000da   6e03     movwf   0x3, 0           	MOVWF	r0x03
0000dc   0e96     movlw   0x96             	MOVLW	LOW(___str_2)
0000de   6e02     movwf   0x2, 0           	MOVWF	r0x02
0000e0   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0000e2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0000e4   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0000e6   6e05     movwf   0x5, 0           	MOVWF	r0x05
0000e8   0e80     movlw   0x80             	MOVLW	0x80
0000ea   6e07     movwf   0x7, 0           	MOVWF	r0x07
0000ec   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0000ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000f0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0000f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000f4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0000f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000f8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0000fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0000fc   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0000fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000100   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000102   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000104   ec7e     call    0x44fc, 0        	CALL	_sprintf
000106   f022
000108   0e06     movlw   0x6              	MOVLW	0x06
00010a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00010c   d020     bra     0x14e            	BRA	_00110_DS_
                                           _00106_DS_:
                                           ;	.line	148; meter_logger.c	sprintf(debug_buffer, "Processor: unsupported, device id: 0x%04x\n\r", dev_id);
00010e   0e00     movlw   0                	MOVLW	UPPER(___str_3)
000110   6e04     movwf   0x4, 0           	MOVWF	r0x04
000112   0e2c     movlw   0x2c             	MOVLW	HIGH(___str_3)
000114   6e03     movwf   0x3, 0           	MOVWF	r0x03
000116   0eae     movlw   0xae             	MOVLW	LOW(___str_3)
000118   6e02     movwf   0x2, 0           	MOVWF	r0x02
00011a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00011c   6e06     movwf   0x6, 0           	MOVWF	r0x06
00011e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000120   6e05     movwf   0x5, 0           	MOVWF	r0x05
000122   0e80     movlw   0x80             	MOVLW	0x80
000124   6e07     movwf   0x7, 0           	MOVWF	r0x07
000126   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000128   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00012a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00012c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00012e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000130   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000132   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000134   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000136   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000138   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00013a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00013c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00013e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000140   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000142   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000144   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000146   ec7e     call    0x44fc, 0        	CALL	_sprintf
000148   f022
00014a   0e08     movlw   0x8              	MOVLW	0x08
00014c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _00110_DS_:
                                           ;	.line	150; meter_logger.c	usart_puts(debug_buffer);
00014e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000150   6e01     movwf   0x1, 0           	MOVWF	r0x01
000152   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000154   6e00     movwf   0, 0             	MOVWF	r0x00
000156   0e80     movlw   0x80             	MOVLW	0x80
000158   6e02     movwf   0x2, 0           	MOVWF	r0x02
00015a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00015c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00015e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000160   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000162   5000     movf    0, 0, 0          	MOVF	r0x00, W
000164   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000166   ecf3     call    0x4be6, 0        	CALL	_usart_puts
000168   f025
00016a   0e03     movlw   0x3              	MOVLW	0x03
00016c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	153; meter_logger.c	fsk_rx_enable();
00016e   ec68     call    0x4cd0, 0        	CALL	_fsk_rx_enable
000170   f026
                                           _00168_DS_:
                                           ;	.line	155; meter_logger.c	if (fifo_get(&cmd)) {
000172   0e05     movlw   0x5              	MOVLW	HIGH(_main_cmd_1_90)
000174   6e01     movwf   0x1, 0           	MOVWF	r0x01
000176   0e4f     movlw   0x4f             	MOVLW	LOW(_main_cmd_1_90)
000178   6e00     movwf   0, 0             	MOVWF	r0x00
00017a   0e80     movlw   0x80             	MOVLW	0x80
00017c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00017e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000180   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000182   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000184   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000186   5000     movf    0, 0, 0          	MOVF	r0x00, W
000188   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00018a   ec07     call    0x400e, 0        	CALL	_fifo_get
00018c   f020
00018e   6e00     movwf   0, 0             	MOVWF	r0x00
000190   0e03     movlw   0x3              	MOVLW	0x03
000192   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000194   5000     movf    0, 0, 0          	MOVF	r0x00, W
000196   e0ed     bz      0x172            	BZ	_00168_DS_
                                           ;	.line	156; meter_logger.c	switch (cmd) {
000198   0efb     movlw   0xfb             	MOVLW	0xfb
00019a   0105     movlb   0x5              	BANKSEL	_main_cmd_1_90
00019c   5d4f     subwf   0x4f, 0, 0x1     	SUBWF	_main_cmd_1_90, W, B
00019e   e3e9     bnc     0x172            	BNC	_00168_DS_
0001a0   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
0001a2   254f     addwf   0x4f, 0, 0x1     	ADDWF	_main_cmd_1_90, W, B
0001a4   6e00     movwf   0, 0             	MOVWF	r0x00
0001a6   6afa     clrf    0xfa, 0          	CLRF	PCLATH
0001a8   6afb     clrf    0xfb, 0          	CLRF	PCLATU
0001aa   3400     rlcf    0, 0, 0          	RLCF	r0x00, W
0001ac   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0001ae   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
0001b0   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0001b2   0bfc     andlw   0xfc             	ANDLW	0xfc
0001b4   0fc4     addlw   0xc4             	ADDLW	LOW(_00330_DS_)
0001b6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001b8   0e01     movlw   0x1              	MOVLW	HIGH(_00330_DS_)
0001ba   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
0001bc   0e00     movlw   0                	MOVLW	UPPER(_00330_DS_)
0001be   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0001c0   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0001c2   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00330_DS_:
0001c4   ef94     goto    0xd28            	GOTO	_00163_DS_
0001c6   f006
0001c8   ef98     goto    0x930            	GOTO	_00145_DS_
0001ca   f004
0001cc   ef9c     goto    0x538            	GOTO	_00127_DS_
0001ce   f002
0001d0   efec     goto    0x1d8            	GOTO	_00111_DS_
0001d2   f000
0001d4   efcc     goto    0x398            	GOTO	_00119_DS_
0001d6   f001
                                           _00111_DS_:
                                           ;	.line	158; meter_logger.c	fsk_rx_disable();
0001d8   ec6b     call    0x52d6, 0        	CALL	_fsk_rx_disable
0001da   f029
                                           ;	.line	159; meter_logger.c	usart_puts("\n\rpress print on testo\n\r");
0001dc   0e00     movlw   0                	MOVLW	UPPER(___str_4)
0001de   6e02     movwf   0x2, 0           	MOVWF	r0x02
0001e0   0e2c     movlw   0x2c             	MOVLW	HIGH(___str_4)
0001e2   6e01     movwf   0x1, 0           	MOVWF	r0x01
0001e4   0eda     movlw   0xda             	MOVLW	LOW(___str_4)
0001e6   6e00     movwf   0, 0             	MOVWF	r0x00
0001e8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0001ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001ec   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0001ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001f0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0001f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0001f4   ecf3     call    0x4be6, 0        	CALL	_usart_puts
0001f6   f025
0001f8   0e03     movlw   0x3              	MOVLW	0x03
0001fa   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	160; meter_logger.c	testo_ir_enable();
0001fc   ec5f     call    0x4ebe, 0        	CALL	_testo_ir_enable
0001fe   f027
                                           ;	.line	162; meter_logger.c	last_fifo_size = 0;
000200   6a00     clrf    0, 0             	CLRF	r0x00
000202   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	163; meter_logger.c	sleep_ms(10000);						// 10 seconds to start printing
000204   0e27     movlw   0x27             	MOVLW	0x27
000206   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000208   0e10     movlw   0x10             	MOVLW	0x10
00020a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00020c   ec1c     call    0x4a38, 0        	CALL	_sleep_ms
00020e   f025
000210   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000212   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	164; meter_logger.c	fifo_size = fifo_in_use();
000214   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
000216   f027
000218   6e02     movwf   0x2, 0           	MOVWF	r0x02
00021a   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00021c   f003
                                           _00112_DS_:
                                           ;	.line	165; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
00021e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000220   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000222   e102     bnz     0x228            	BNZ	_00331_DS_
000224   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000226   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00331_DS_:
000228   e212     bc      0x24e            	BC	_00114_DS_
                                           ;	.line	166; meter_logger.c	last_fifo_size = fifo_size;
00022a   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
00022c   f000
00022e   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000230   f001
                                           ;	.line	167; meter_logger.c	sleep_ms(200);						// return data when no data for 200 ms
000232   0e00     movlw   0                	MOVLW	0x00
000234   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000236   0ec8     movlw   0xc8             	MOVLW	0xc8
000238   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00023a   ec1c     call    0x4a38, 0        	CALL	_sleep_ms
00023c   f025
00023e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000240   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	168; meter_logger.c	fifo_size = fifo_in_use();
000242   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
000244   f027
000246   6e02     movwf   0x2, 0           	MOVWF	r0x02
000248   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00024a   f003
00024c   d7e8     bra     0x21e            	BRA	_00112_DS_
                                           _00114_DS_:
                                           ;	.line	170; meter_logger.c	testo_ir_disable();
00024e   ec75     call    0x52ea, 0        	CALL	_testo_ir_disable
000250   f029
                                           ;	.line	173; meter_logger.c	usart_puts("\n\rdone receiving - sending via serial/fsk\n\r");
000252   0e00     movlw   0                	MOVLW	UPPER(___str_5)
000254   6e06     movwf   0x6, 0           	MOVWF	r0x06
000256   0e2c     movlw   0x2c             	MOVLW	HIGH(___str_5)
000258   6e05     movwf   0x5, 0           	MOVWF	r0x05
00025a   0ef4     movlw   0xf4             	MOVLW	LOW(___str_5)
00025c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00025e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000260   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000262   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000264   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000266   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000268   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00026a   ecf3     call    0x4be6, 0        	CALL	_usart_puts
00026c   f025
00026e   0e03     movlw   0x3              	MOVLW	0x03
000270   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	176; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000272   6a04     clrf    0x4, 0           	CLRF	r0x04
000274   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00171_DS_:
000276   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
000278   f027
00027a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00027c   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
00027e   f007
000280   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000282   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000284   e102     bnz     0x28a            	BNZ	_00332_DS_
000286   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000288   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00332_DS_:
00028a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00028c   d04c     bra     0x326            	BRA	_00115_DS_
                                           ;	.line	178; meter_logger.c	fifo_get(&sub_cmd);
00028e   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000290   6e07     movwf   0x7, 0           	MOVWF	r0x07
000292   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
000294   6e06     movwf   0x6, 0           	MOVWF	r0x06
000296   0e80     movlw   0x80             	MOVLW	0x80
000298   6e08     movwf   0x8, 0           	MOVWF	r0x08
00029a   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00029c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00029e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0002a0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002a2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0002a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002a6   ec07     call    0x400e, 0        	CALL	_fifo_get
0002a8   f020
0002aa   0e03     movlw   0x3              	MOVLW	0x03
0002ac   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	180; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
0002ae   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
0002b0   f006
0002b2   6a07     clrf    0x7, 0           	CLRF	r0x07
0002b4   0e00     movlw   0                	MOVLW	UPPER(___str_6)
0002b6   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0002b8   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_6)
0002ba   6e09     movwf   0x9, 0           	MOVWF	r0x09
0002bc   0e20     movlw   0x20             	MOVLW	LOW(___str_6)
0002be   6e08     movwf   0x8, 0           	MOVWF	r0x08
0002c0   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0002c2   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
0002c4   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0002c6   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0002c8   0e80     movlw   0x80             	MOVLW	0x80
0002ca   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
0002cc   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0002ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002d0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0002d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002d4   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
0002d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002d8   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0002da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002dc   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0002de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002e0   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
0002e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002e4   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
0002e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002e8   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
0002ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0002ec   ec7e     call    0x44fc, 0        	CALL	_sprintf
0002ee   f022
0002f0   0e08     movlw   0x8              	MOVLW	0x08
0002f2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	181; meter_logger.c	usart_puts(debug_buffer);
0002f4   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0002f6   6e07     movwf   0x7, 0           	MOVWF	r0x07
0002f8   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0002fa   6e06     movwf   0x6, 0           	MOVWF	r0x06
0002fc   0e80     movlw   0x80             	MOVLW	0x80
0002fe   6e08     movwf   0x8, 0           	MOVWF	r0x08
000300   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000302   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000304   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000306   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000308   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00030a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00030c   ecf3     call    0x4be6, 0        	CALL	_usart_puts
00030e   f025
000310   0e03     movlw   0x3              	MOVLW	0x03
000312   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000314   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	183; meter_logger.c	fifo_put(sub_cmd);
000316   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000318   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00031a   ec63     call    0x42c6, 0        	CALL	_fifo_put
00031c   f021
00031e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	176; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000320   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000322   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000324   d7a8     bra     0x276            	BRA	_00171_DS_
                                           _00115_DS_:
                                           ;	.line	186; meter_logger.c	fsk_tx_enable();
000326   ecd1     call    0x4fa2, 0        	CALL	_fsk_tx_enable
000328   f027
                                           _00116_DS_:
                                           ;	.line	187; meter_logger.c	while (fifo_get(&cmd)) {	// and print them to serial
00032a   0e05     movlw   0x5              	MOVLW	HIGH(_main_cmd_1_90)
00032c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00032e   0e4f     movlw   0x4f             	MOVLW	LOW(_main_cmd_1_90)
000330   6e04     movwf   0x4, 0           	MOVWF	r0x04
000332   0e80     movlw   0x80             	MOVLW	0x80
000334   6e06     movwf   0x6, 0           	MOVWF	r0x06
000336   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000338   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00033a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00033c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00033e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000340   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000342   ec07     call    0x400e, 0        	CALL	_fifo_get
000344   f020
000346   6e04     movwf   0x4, 0           	MOVWF	r0x04
000348   0e03     movlw   0x3              	MOVLW	0x03
00034a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00034c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00034e   e00f     bz      0x36e            	BZ	_00118_DS_
000350   0105     movlb   0x5              	BANKSEL	_main_cmd_1_90
                                           ;	.line	188; meter_logger.c	fsk_tx_byte(cmd);
000352   514f     movf    0x4f, 0, 0x1     	MOVF	_main_cmd_1_90, W, B
000354   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000356   ec62     call    0x50c4, 0        	CALL	_fsk_tx_byte
000358   f028
00035a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	189; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
00035c   0e00     movlw   0                	MOVLW	0x00
00035e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000360   0e02     movlw   0x2              	MOVLW	0x02
000362   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000364   ec1c     call    0x4a38, 0        	CALL	_sleep_ms
000366   f025
000368   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00036a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00036c   d7de     bra     0x32a            	BRA	_00116_DS_
                                           _00118_DS_:
                                           ;	.line	191; meter_logger.c	fsk_tx_disable();
00036e   ec29     call    0x5252, 0        	CALL	_fsk_tx_disable
000370   f029
                                           ;	.line	193; meter_logger.c	usart_puts("\n\rwaiting for new command\n\r");
000372   0e00     movlw   0                	MOVLW	UPPER(___str_7)
000374   6e06     movwf   0x6, 0           	MOVWF	r0x06
000376   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_7)
000378   6e05     movwf   0x5, 0           	MOVWF	r0x05
00037a   0e24     movlw   0x24             	MOVLW	LOW(___str_7)
00037c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00037e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000380   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000382   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000384   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000386   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000388   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00038a   ecf3     call    0x4be6, 0        	CALL	_usart_puts
00038c   f025
00038e   0e03     movlw   0x3              	MOVLW	0x03
000390   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	195; meter_logger.c	fsk_rx_enable();
000392   ec68     call    0x4cd0, 0        	CALL	_fsk_rx_enable
000394   f026
                                           ;	.line	196; meter_logger.c	break;
000396   d6ed     bra     0x172            	BRA	_00168_DS_
                                           _00119_DS_:
                                           ;	.line	200; meter_logger.c	fsk_rx_disable();
000398   ec6b     call    0x52d6, 0        	CALL	_fsk_rx_disable
00039a   f029
                                           ;	.line	201; meter_logger.c	usart_puts("\n\recho test - send some data\n\r");
00039c   0e00     movlw   0                	MOVLW	UPPER(___str_8)
00039e   6e06     movwf   0x6, 0           	MOVWF	r0x06
0003a0   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_8)
0003a2   6e05     movwf   0x5, 0           	MOVWF	r0x05
0003a4   0e40     movlw   0x40             	MOVLW	LOW(___str_8)
0003a6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0003a8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0003aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003ac   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0003ae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003b0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0003b2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003b4   ecf3     call    0x4be6, 0        	CALL	_usart_puts
0003b6   f025
0003b8   0e03     movlw   0x3              	MOVLW	0x03
0003ba   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	202; meter_logger.c	fsk_rx_enable();
0003bc   ec68     call    0x4cd0, 0        	CALL	_fsk_rx_enable
0003be   f026
                                           ;	.line	206; meter_logger.c	last_fifo_size = 0;
0003c0   6a00     clrf    0, 0             	CLRF	r0x00
0003c2   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	207; meter_logger.c	sleep_ms(1000);							// 1 second
0003c4   0e03     movlw   0x3              	MOVLW	0x03
0003c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003c8   0ee8     movlw   0xe8             	MOVLW	0xe8
0003ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003cc   ec1c     call    0x4a38, 0        	CALL	_sleep_ms
0003ce   f025
0003d0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0003d2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	208; meter_logger.c	fifo_size = fifo_in_use();
0003d4   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
0003d6   f027
0003d8   6e02     movwf   0x2, 0           	MOVWF	r0x02
0003da   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0003dc   f003
                                           _00120_DS_:
                                           ;	.line	209; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
0003de   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0003e0   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0003e2   e102     bnz     0x3e8            	BNZ	_00333_DS_
0003e4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0003e6   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00333_DS_:
0003e8   e212     bc      0x40e            	BC	_00122_DS_
                                           ;	.line	210; meter_logger.c	last_fifo_size = fifo_size;
0003ea   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
0003ec   f000
0003ee   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
0003f0   f001
                                           ;	.line	211; meter_logger.c	sleep_ms(500);						// return data when no data for 500 ms
0003f2   0e01     movlw   0x1              	MOVLW	0x01
0003f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003f6   0ef4     movlw   0xf4             	MOVLW	0xf4
0003f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0003fa   ec1c     call    0x4a38, 0        	CALL	_sleep_ms
0003fc   f025
0003fe   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000400   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	212; meter_logger.c	fifo_size = fifo_in_use();
000402   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
000404   f027
000406   6e02     movwf   0x2, 0           	MOVWF	r0x02
000408   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00040a   f003
00040c   d7e8     bra     0x3de            	BRA	_00120_DS_
                                           _00122_DS_:
                                           ;	.line	214; meter_logger.c	fsk_rx_disable();
00040e   ec6b     call    0x52d6, 0        	CALL	_fsk_rx_disable
000410   f029
                                           ;	.line	217; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000412   6a04     clrf    0x4, 0           	CLRF	r0x04
000414   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00174_DS_:
000416   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
000418   f027
00041a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00041c   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
00041e   f007
000420   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000422   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000424   e102     bnz     0x42a            	BNZ	_00334_DS_
000426   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000428   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00334_DS_:
00042a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00042c   d04c     bra     0x4c6            	BRA	_00123_DS_
                                           ;	.line	219; meter_logger.c	fifo_get(&sub_cmd);
00042e   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000430   6e07     movwf   0x7, 0           	MOVWF	r0x07
000432   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
000434   6e06     movwf   0x6, 0           	MOVWF	r0x06
000436   0e80     movlw   0x80             	MOVLW	0x80
000438   6e08     movwf   0x8, 0           	MOVWF	r0x08
00043a   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00043c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00043e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000440   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000442   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000444   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000446   ec07     call    0x400e, 0        	CALL	_fifo_get
000448   f020
00044a   0e03     movlw   0x3              	MOVLW	0x03
00044c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	221; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
00044e   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
000450   f006
000452   6a07     clrf    0x7, 0           	CLRF	r0x07
000454   0e00     movlw   0                	MOVLW	UPPER(___str_6)
000456   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000458   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_6)
00045a   6e09     movwf   0x9, 0           	MOVWF	r0x09
00045c   0e20     movlw   0x20             	MOVLW	LOW(___str_6)
00045e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000460   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000462   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
000464   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000466   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
000468   0e80     movlw   0x80             	MOVLW	0x80
00046a   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
00046c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00046e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000470   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000472   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000474   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000476   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000478   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00047a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00047c   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00047e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000480   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000482   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000484   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000486   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000488   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
00048a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00048c   ec7e     call    0x44fc, 0        	CALL	_sprintf
00048e   f022
000490   0e08     movlw   0x8              	MOVLW	0x08
000492   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	222; meter_logger.c	usart_puts(debug_buffer);
000494   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000496   6e07     movwf   0x7, 0           	MOVWF	r0x07
000498   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00049a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00049c   0e80     movlw   0x80             	MOVLW	0x80
00049e   6e08     movwf   0x8, 0           	MOVWF	r0x08
0004a0   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0004a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004a4   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0004a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004a8   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0004aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004ac   ecf3     call    0x4be6, 0        	CALL	_usart_puts
0004ae   f025
0004b0   0e03     movlw   0x3              	MOVLW	0x03
0004b2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0004b4   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	224; meter_logger.c	fifo_put(sub_cmd);
0004b6   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
0004b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004ba   ec63     call    0x42c6, 0        	CALL	_fifo_put
0004bc   f021
0004be   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	217; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
0004c0   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
0004c2   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
0004c4   d7a8     bra     0x416            	BRA	_00174_DS_
                                           _00123_DS_:
                                           ;	.line	229; meter_logger.c	fsk_tx_enable();
0004c6   ecd1     call    0x4fa2, 0        	CALL	_fsk_tx_enable
0004c8   f027
                                           _00124_DS_:
                                           ;	.line	230; meter_logger.c	while (fifo_get(&sub_cmd)) {
0004ca   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0004cc   6e05     movwf   0x5, 0           	MOVWF	r0x05
0004ce   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
0004d0   6e04     movwf   0x4, 0           	MOVWF	r0x04
0004d2   0e80     movlw   0x80             	MOVLW	0x80
0004d4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0004d6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0004d8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004da   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0004dc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004de   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0004e0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004e2   ec07     call    0x400e, 0        	CALL	_fifo_get
0004e4   f020
0004e6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0004e8   0e03     movlw   0x3              	MOVLW	0x03
0004ea   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0004ec   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0004ee   e00f     bz      0x50e            	BZ	_00126_DS_
0004f0   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	231; meter_logger.c	fsk_tx_byte(sub_cmd);
0004f2   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
0004f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0004f6   ec62     call    0x50c4, 0        	CALL	_fsk_tx_byte
0004f8   f028
0004fa   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	232; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
0004fc   0e00     movlw   0                	MOVLW	0x00
0004fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000500   0e02     movlw   0x2              	MOVLW	0x02
000502   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000504   ec1c     call    0x4a38, 0        	CALL	_sleep_ms
000506   f025
000508   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00050a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00050c   d7de     bra     0x4ca            	BRA	_00124_DS_
                                           _00126_DS_:
                                           ;	.line	234; meter_logger.c	fsk_tx_disable();
00050e   ec29     call    0x5252, 0        	CALL	_fsk_tx_disable
000510   f029
                                           ;	.line	237; meter_logger.c	usart_puts("\n\rwaiting for new command\n\r");
000512   0e00     movlw   0                	MOVLW	UPPER(___str_7)
000514   6e06     movwf   0x6, 0           	MOVWF	r0x06
000516   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_7)
000518   6e05     movwf   0x5, 0           	MOVWF	r0x05
00051a   0e24     movlw   0x24             	MOVLW	LOW(___str_7)
00051c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00051e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000520   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000522   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000524   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000526   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000528   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00052a   ecf3     call    0x4be6, 0        	CALL	_usart_puts
00052c   f025
00052e   0e03     movlw   0x3              	MOVLW	0x03
000530   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	239; meter_logger.c	fsk_rx_enable();
000532   ec68     call    0x4cd0, 0        	CALL	_fsk_rx_enable
000534   f026
                                           ;	.line	240; meter_logger.c	break;
000536   d61d     bra     0x172            	BRA	_00168_DS_
                                           _00127_DS_:
                                           ;	.line	243; meter_logger.c	fsk_rx_disable();
000538   ec6b     call    0x52d6, 0        	CALL	_fsk_rx_disable
00053a   f029
                                           ;	.line	245; meter_logger.c	usart_puts("\n\rkamstrup - send kmp frame data\n\r");
00053c   0e00     movlw   0                	MOVLW	UPPER(___str_9)
00053e   6e06     movwf   0x6, 0           	MOVWF	r0x06
000540   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_9)
000542   6e05     movwf   0x5, 0           	MOVWF	r0x05
000544   0e60     movlw   0x60             	MOVLW	LOW(___str_9)
000546   6e04     movwf   0x4, 0           	MOVWF	r0x04
000548   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00054a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00054c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00054e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000550   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000552   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000554   ecf3     call    0x4be6, 0        	CALL	_usart_puts
000556   f025
000558   0e03     movlw   0x3              	MOVLW	0x03
00055a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	249; meter_logger.c	fsk_rx_enable();
00055c   ec68     call    0x4cd0, 0        	CALL	_fsk_rx_enable
00055e   f026
                                           ;	.line	250; meter_logger.c	last_fifo_size = 0;
000560   6a00     clrf    0, 0             	CLRF	r0x00
000562   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	251; meter_logger.c	sleep_ms(400);							// sleep 400 ms to let some data come in
000564   0e01     movlw   0x1              	MOVLW	0x01
000566   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000568   0e90     movlw   0x90             	MOVLW	0x90
00056a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00056c   ec1c     call    0x4a38, 0        	CALL	_sleep_ms
00056e   f025
000570   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000572   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	252; meter_logger.c	fifo_size = fifo_in_use();
000574   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
000576   f027
000578   6e02     movwf   0x2, 0           	MOVWF	r0x02
00057a   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00057c   f003
                                           _00128_DS_:
                                           ;	.line	253; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
00057e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000580   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000582   e102     bnz     0x588            	BNZ	_00335_DS_
000584   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000586   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00335_DS_:
000588   e212     bc      0x5ae            	BC	_00130_DS_
                                           ;	.line	254; meter_logger.c	last_fifo_size = fifo_size;
00058a   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
00058c   f000
00058e   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000590   f001
                                           ;	.line	255; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
000592   0e00     movlw   0                	MOVLW	0x00
000594   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000596   0ec8     movlw   0xc8             	MOVLW	0xc8
000598   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00059a   ec1c     call    0x4a38, 0        	CALL	_sleep_ms
00059c   f025
00059e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0005a0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	256; meter_logger.c	fifo_size = fifo_in_use();
0005a2   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
0005a4   f027
0005a6   6e02     movwf   0x2, 0           	MOVWF	r0x02
0005a8   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0005aa   f003
0005ac   d7e8     bra     0x57e            	BRA	_00128_DS_
                                           _00130_DS_:
                                           ;	.line	258; meter_logger.c	fsk_rx_disable();
0005ae   ec6b     call    0x52d6, 0        	CALL	_fsk_rx_disable
0005b0   f029
                                           ;	.line	261; meter_logger.c	usart_puts("\n\rkamstrup - kmp frame received:\n\r");
0005b2   0e00     movlw   0                	MOVLW	UPPER(___str_10)
0005b4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0005b6   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_10)
0005b8   6e05     movwf   0x5, 0           	MOVWF	r0x05
0005ba   0e84     movlw   0x84             	MOVLW	LOW(___str_10)
0005bc   6e04     movwf   0x4, 0           	MOVWF	r0x04
0005be   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0005c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005c2   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0005c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005c6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0005c8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005ca   ecf3     call    0x4be6, 0        	CALL	_usart_puts
0005cc   f025
0005ce   0e03     movlw   0x3              	MOVLW	0x03
0005d0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	264; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
0005d2   6a04     clrf    0x4, 0           	CLRF	r0x04
0005d4   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00177_DS_:
0005d6   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
0005d8   f027
0005da   6e06     movwf   0x6, 0           	MOVWF	r0x06
0005dc   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
0005de   f007
0005e0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0005e2   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0005e4   e102     bnz     0x5ea            	BNZ	_00336_DS_
0005e6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0005e8   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00336_DS_:
0005ea   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0005ec   d04c     bra     0x686            	BRA	_00131_DS_
                                           ;	.line	266; meter_logger.c	fifo_get(&sub_cmd);
0005ee   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0005f0   6e07     movwf   0x7, 0           	MOVWF	r0x07
0005f2   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
0005f4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0005f6   0e80     movlw   0x80             	MOVLW	0x80
0005f8   6e08     movwf   0x8, 0           	MOVWF	r0x08
0005fa   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0005fc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0005fe   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000600   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000602   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000604   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000606   ec07     call    0x400e, 0        	CALL	_fifo_get
000608   f020
00060a   0e03     movlw   0x3              	MOVLW	0x03
00060c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	268; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
00060e   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
000610   f006
000612   6a07     clrf    0x7, 0           	CLRF	r0x07
000614   0e00     movlw   0                	MOVLW	UPPER(___str_6)
000616   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000618   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_6)
00061a   6e09     movwf   0x9, 0           	MOVWF	r0x09
00061c   0e20     movlw   0x20             	MOVLW	LOW(___str_6)
00061e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000620   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000622   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
000624   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000626   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
000628   0e80     movlw   0x80             	MOVLW	0x80
00062a   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
00062c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00062e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000630   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000632   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000634   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000636   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000638   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00063a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00063c   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00063e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000640   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000642   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000644   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000646   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000648   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
00064a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00064c   ec7e     call    0x44fc, 0        	CALL	_sprintf
00064e   f022
000650   0e08     movlw   0x8              	MOVLW	0x08
000652   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	269; meter_logger.c	usart_puts(debug_buffer);
000654   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000656   6e07     movwf   0x7, 0           	MOVWF	r0x07
000658   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
00065a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00065c   0e80     movlw   0x80             	MOVLW	0x80
00065e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000660   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000662   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000664   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000666   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000668   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00066a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00066c   ecf3     call    0x4be6, 0        	CALL	_usart_puts
00066e   f025
000670   0e03     movlw   0x3              	MOVLW	0x03
000672   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000674   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	271; meter_logger.c	fifo_put(sub_cmd);
000676   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000678   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00067a   ec63     call    0x42c6, 0        	CALL	_fifo_put
00067c   f021
00067e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	264; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000680   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000682   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000684   d7a8     bra     0x5d6            	BRA	_00177_DS_
                                           _00131_DS_:
                                           ;	.line	275; meter_logger.c	rs232_8n2_tx_enable(TIMER0_RS232_1200);
000686   0ef9     movlw   0xf9             	MOVLW	0xf9
000688   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00068a   0eae     movlw   0xae             	MOVLW	0xae
00068c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00068e   ec40     call    0x4e80, 0        	CALL	_rs232_8n2_tx_enable
000690   f027
000692   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000694   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00132_DS_:
                                           ;	.line	276; meter_logger.c	while (fifo_get(&sub_cmd)) {
000696   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000698   6e05     movwf   0x5, 0           	MOVWF	r0x05
00069a   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
00069c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00069e   0e80     movlw   0x80             	MOVLW	0x80
0006a0   6e06     movwf   0x6, 0           	MOVWF	r0x06
0006a2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0006a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006a6   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0006a8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006aa   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0006ac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006ae   ec07     call    0x400e, 0        	CALL	_fifo_get
0006b0   f020
0006b2   6e04     movwf   0x4, 0           	MOVWF	r0x04
0006b4   0e03     movlw   0x3              	MOVLW	0x03
0006b6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0006b8   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0006ba   e00f     bz      0x6da            	BZ	_00134_DS_
0006bc   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	277; meter_logger.c	rs232_8n2_tx_byte(sub_cmd);
0006be   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
0006c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006c2   ec03     call    0x5006, 0        	CALL	_rs232_8n2_tx_byte
0006c4   f028
0006c6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	278; meter_logger.c	sleep_ms(RS232_TX_SLEEP);
0006c8   0e00     movlw   0                	MOVLW	0x00
0006ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006cc   0e0c     movlw   0xc              	MOVLW	0x0c
0006ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006d0   ec1c     call    0x4a38, 0        	CALL	_sleep_ms
0006d2   f025
0006d4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0006d6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0006d8   d7de     bra     0x696            	BRA	_00132_DS_
                                           _00134_DS_:
                                           ;	.line	280; meter_logger.c	rs232_8n2_tx_disable();
0006da   ec55     call    0x52aa, 0        	CALL	_rs232_8n2_tx_disable
0006dc   f029
                                           ;	.line	286; meter_logger.c	rs232_8n2_rx_enable(TIMER0_RS232_1200);
0006de   0ef9     movlw   0xf9             	MOVLW	0xf9
0006e0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006e2   0eae     movlw   0xae             	MOVLW	0xae
0006e4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006e6   ece1     call    0x4dc2, 0        	CALL	_rs232_8n2_rx_enable
0006e8   f026
0006ea   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0006ec   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	287; meter_logger.c	last_fifo_size = 0;
0006ee   6a00     clrf    0, 0             	CLRF	r0x00
0006f0   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	288; meter_logger.c	sleep_ms(400);							// sleep 200 ms to let some data come in
0006f2   0e01     movlw   0x1              	MOVLW	0x01
0006f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006f6   0e90     movlw   0x90             	MOVLW	0x90
0006f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0006fa   ec1c     call    0x4a38, 0        	CALL	_sleep_ms
0006fc   f025
0006fe   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000700   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	289; meter_logger.c	fifo_size = fifo_in_use();
000702   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
000704   f027
000706   6e02     movwf   0x2, 0           	MOVWF	r0x02
000708   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00070a   f003
                                           _00135_DS_:
                                           ;	.line	291; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
00070c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00070e   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000710   e102     bnz     0x716            	BNZ	_00337_DS_
000712   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000714   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00337_DS_:
000716   e212     bc      0x73c            	BC	_00137_DS_
                                           ;	.line	292; meter_logger.c	last_fifo_size = fifo_size;
000718   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
00071a   f000
00071c   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
00071e   f001
                                           ;	.line	293; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
000720   0e00     movlw   0                	MOVLW	0x00
000722   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000724   0ec8     movlw   0xc8             	MOVLW	0xc8
000726   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000728   ec1c     call    0x4a38, 0        	CALL	_sleep_ms
00072a   f025
00072c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00072e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	294; meter_logger.c	fifo_size = fifo_in_use();
000730   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
000732   f027
000734   6e02     movwf   0x2, 0           	MOVWF	r0x02
000736   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000738   f003
00073a   d7e8     bra     0x70c            	BRA	_00135_DS_
                                           _00137_DS_:
                                           ;	.line	297; meter_logger.c	rs232_8n2_rx_disable();
00073c   ec4a     call    0x5294, 0        	CALL	_rs232_8n2_rx_disable
00073e   f029
                                           ;	.line	301; meter_logger.c	usart_puts("\n\rkamstrup - kmp reply received:\n\r");
000740   0e00     movlw   0                	MOVLW	UPPER(___str_11)
000742   6e06     movwf   0x6, 0           	MOVWF	r0x06
000744   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_11)
000746   6e05     movwf   0x5, 0           	MOVWF	r0x05
000748   0ea8     movlw   0xa8             	MOVLW	LOW(___str_11)
00074a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00074c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00074e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000750   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000752   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000754   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000756   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000758   ecf3     call    0x4be6, 0        	CALL	_usart_puts
00075a   f025
00075c   0e03     movlw   0x3              	MOVLW	0x03
00075e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	304; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000760   6a04     clrf    0x4, 0           	CLRF	r0x04
000762   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00180_DS_:
000764   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
000766   f027
000768   6e06     movwf   0x6, 0           	MOVWF	r0x06
00076a   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
00076c   f007
00076e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000770   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000772   e102     bnz     0x778            	BNZ	_00338_DS_
000774   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000776   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00338_DS_:
000778   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00077a   d04c     bra     0x814            	BRA	_00138_DS_
                                           ;	.line	306; meter_logger.c	fifo_get(&sub_cmd);
00077c   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
00077e   6e07     movwf   0x7, 0           	MOVWF	r0x07
000780   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
000782   6e06     movwf   0x6, 0           	MOVWF	r0x06
000784   0e80     movlw   0x80             	MOVLW	0x80
000786   6e08     movwf   0x8, 0           	MOVWF	r0x08
000788   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00078a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00078c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00078e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000790   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000792   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000794   ec07     call    0x400e, 0        	CALL	_fifo_get
000796   f020
000798   0e03     movlw   0x3              	MOVLW	0x03
00079a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	308; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
00079c   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
00079e   f006
0007a0   6a07     clrf    0x7, 0           	CLRF	r0x07
0007a2   0e00     movlw   0                	MOVLW	UPPER(___str_6)
0007a4   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0007a6   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_6)
0007a8   6e09     movwf   0x9, 0           	MOVWF	r0x09
0007aa   0e20     movlw   0x20             	MOVLW	LOW(___str_6)
0007ac   6e08     movwf   0x8, 0           	MOVWF	r0x08
0007ae   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0007b0   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
0007b2   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0007b4   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0007b6   0e80     movlw   0x80             	MOVLW	0x80
0007b8   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
0007ba   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0007bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007be   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0007c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007c2   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
0007c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007c6   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0007c8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007ca   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0007cc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007ce   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
0007d0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007d2   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
0007d4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007d6   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
0007d8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007da   ec7e     call    0x44fc, 0        	CALL	_sprintf
0007dc   f022
0007de   0e08     movlw   0x8              	MOVLW	0x08
0007e0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	309; meter_logger.c	usart_puts(debug_buffer);
0007e2   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0007e4   6e07     movwf   0x7, 0           	MOVWF	r0x07
0007e6   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0007e8   6e06     movwf   0x6, 0           	MOVWF	r0x06
0007ea   0e80     movlw   0x80             	MOVLW	0x80
0007ec   6e08     movwf   0x8, 0           	MOVWF	r0x08
0007ee   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0007f0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007f2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0007f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007f6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0007f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0007fa   ecf3     call    0x4be6, 0        	CALL	_usart_puts
0007fc   f025
0007fe   0e03     movlw   0x3              	MOVLW	0x03
000800   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000802   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	311; meter_logger.c	fifo_put(sub_cmd);
000804   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000806   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000808   ec63     call    0x42c6, 0        	CALL	_fifo_put
00080a   f021
00080c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	304; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
00080e   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000810   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000812   d7a8     bra     0x764            	BRA	_00180_DS_
                                           _00138_DS_:
                                           ;	.line	314; meter_logger.c	if (fifo_in_use()) {
000814   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
000816   f027
000818   6e04     movwf   0x4, 0           	MOVWF	r0x04
00081a   cff3     movff   0xff3, 0x5       	MOVFF	PRODL, r0x05
00081c   f005
00081e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000820   1005     iorwf   0x5, 0, 0        	IORWF	r0x05, W
000822   e02b     bz      0x87a            	BZ	_00143_DS_
                                           ;	.line	316; meter_logger.c	DEBUG2_PIN = 1;
000824   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000826   0000     nop                      	nop
000828   0000     nop                      	nop
                                           	
                                           ;	.line	321; meter_logger.c	DEBUG2_PIN = 0;
00082a   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	322; meter_logger.c	fsk_tx_enable();
00082c   ecd1     call    0x4fa2, 0        	CALL	_fsk_tx_enable
00082e   f027
                                           _00139_DS_:
                                           ;	.line	323; meter_logger.c	while (fifo_get(&sub_cmd)) {
000830   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000832   6e05     movwf   0x5, 0           	MOVWF	r0x05
000834   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
000836   6e04     movwf   0x4, 0           	MOVWF	r0x04
000838   0e80     movlw   0x80             	MOVLW	0x80
00083a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00083c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00083e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000840   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000842   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000844   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000846   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000848   ec07     call    0x400e, 0        	CALL	_fifo_get
00084a   f020
00084c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00084e   0e03     movlw   0x3              	MOVLW	0x03
000850   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000852   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000854   e00f     bz      0x874            	BZ	_00141_DS_
000856   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	324; meter_logger.c	fsk_tx_byte(sub_cmd);
000858   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
00085a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00085c   ec62     call    0x50c4, 0        	CALL	_fsk_tx_byte
00085e   f028
000860   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	325; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000862   0e00     movlw   0                	MOVLW	0x00
000864   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000866   0e02     movlw   0x2              	MOVLW	0x02
000868   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00086a   ec1c     call    0x4a38, 0        	CALL	_sleep_ms
00086c   f025
00086e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000870   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000872   d7de     bra     0x830            	BRA	_00139_DS_
                                           _00141_DS_:
                                           ;	.line	327; meter_logger.c	fsk_tx_disable();
000874   ec29     call    0x5252, 0        	CALL	_fsk_tx_disable
000876   f029
000878   d047     bra     0x908            	BRA	_00144_DS_
                                           _00143_DS_:
                                           ;	.line	331; meter_logger.c	DEBUG2_PIN = 1;
00087a   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
00087c   0000     nop                      	nop
00087e   0000     nop                      	nop
                                           	
                                           ;	.line	336; meter_logger.c	DEBUG2_PIN = 0;
000880   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
000882   0000     nop                      	nop
000884   0000     nop                      	nop
                                           	
                                           ;	.line	341; meter_logger.c	DEBUG2_PIN = 1;
000886   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000888   0000     nop                      	nop
00088a   0000     nop                      	nop
                                           	
                                           ;	.line	346; meter_logger.c	DEBUG2_PIN = 0;
00088c   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	348; meter_logger.c	sprintf(debug_buffer, "\n\rno reply from meter\n\r");
00088e   0e00     movlw   0                	MOVLW	UPPER(___str_12)
000890   6e06     movwf   0x6, 0           	MOVWF	r0x06
000892   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_12)
000894   6e05     movwf   0x5, 0           	MOVWF	r0x05
000896   0ecc     movlw   0xcc             	MOVLW	LOW(___str_12)
000898   6e04     movwf   0x4, 0           	MOVWF	r0x04
00089a   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
00089c   6e08     movwf   0x8, 0           	MOVWF	r0x08
00089e   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0008a0   6e07     movwf   0x7, 0           	MOVWF	r0x07
0008a2   0e80     movlw   0x80             	MOVLW	0x80
0008a4   6e09     movwf   0x9, 0           	MOVWF	r0x09
0008a6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0008a8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008aa   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0008ac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008ae   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0008b0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008b2   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0008b4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008b6   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0008b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008ba   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0008bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008be   ec7e     call    0x44fc, 0        	CALL	_sprintf
0008c0   f022
0008c2   0e06     movlw   0x6              	MOVLW	0x06
0008c4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	349; meter_logger.c	usart_puts(debug_buffer);
0008c6   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
0008c8   6e05     movwf   0x5, 0           	MOVWF	r0x05
0008ca   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
0008cc   6e04     movwf   0x4, 0           	MOVWF	r0x04
0008ce   0e80     movlw   0x80             	MOVLW	0x80
0008d0   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008d2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0008d4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008d6   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0008d8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008da   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0008dc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008de   ecf3     call    0x4be6, 0        	CALL	_usart_puts
0008e0   f025
0008e2   0e03     movlw   0x3              	MOVLW	0x03
0008e4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	351; meter_logger.c	fsk_tx_enable();
0008e6   ecd1     call    0x4fa2, 0        	CALL	_fsk_tx_enable
0008e8   f027
                                           ;	.line	352; meter_logger.c	fsk_tx_byte(0x0d);
0008ea   0e0d     movlw   0xd              	MOVLW	0x0d
0008ec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008ee   ec62     call    0x50c4, 0        	CALL	_fsk_tx_byte
0008f0   f028
0008f2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	353; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
0008f4   0e00     movlw   0                	MOVLW	0x00
0008f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008f8   0e02     movlw   0x2              	MOVLW	0x02
0008fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0008fc   ec1c     call    0x4a38, 0        	CALL	_sleep_ms
0008fe   f025
000900   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000902   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	354; meter_logger.c	fsk_tx_disable();
000904   ec29     call    0x5252, 0        	CALL	_fsk_tx_disable
000906   f029
                                           _00144_DS_:
                                           ;	.line	357; meter_logger.c	usart_puts("\n\rwaiting for new command\n\r");
000908   0e00     movlw   0                	MOVLW	UPPER(___str_7)
00090a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00090c   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_7)
00090e   6e05     movwf   0x5, 0           	MOVWF	r0x05
000910   0e24     movlw   0x24             	MOVLW	LOW(___str_7)
000912   6e04     movwf   0x4, 0           	MOVWF	r0x04
000914   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000916   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000918   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00091a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00091c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00091e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000920   ecf3     call    0x4be6, 0        	CALL	_usart_puts
000922   f025
000924   0e03     movlw   0x3              	MOVLW	0x03
000926   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	359; meter_logger.c	fsk_rx_enable();
000928   ec68     call    0x4cd0, 0        	CALL	_fsk_rx_enable
00092a   f026
                                           ;	.line	360; meter_logger.c	break;
00092c   efb9     goto    0x172            	GOTO	_00168_DS_
00092e   f000
                                           _00145_DS_:
                                           ;	.line	362; meter_logger.c	fsk_rx_disable();
000930   ec6b     call    0x52d6, 0        	CALL	_fsk_rx_disable
000932   f029
                                           ;	.line	364; meter_logger.c	usart_puts("\n\rkamstrup - send IEC61107 frame data\n\r");
000934   0e00     movlw   0                	MOVLW	UPPER(___str_13)
000936   6e06     movwf   0x6, 0           	MOVWF	r0x06
000938   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_13)
00093a   6e05     movwf   0x5, 0           	MOVWF	r0x05
00093c   0ee4     movlw   0xe4             	MOVLW	LOW(___str_13)
00093e   6e04     movwf   0x4, 0           	MOVWF	r0x04
000940   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000942   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000944   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000946   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000948   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00094a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00094c   ecf3     call    0x4be6, 0        	CALL	_usart_puts
00094e   f025
000950   0e03     movlw   0x3              	MOVLW	0x03
000952   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	368; meter_logger.c	fsk_rx_enable();
000954   ec68     call    0x4cd0, 0        	CALL	_fsk_rx_enable
000956   f026
                                           ;	.line	369; meter_logger.c	last_fifo_size = 0;
000958   6a00     clrf    0, 0             	CLRF	r0x00
00095a   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	370; meter_logger.c	sleep_ms(400);							// sleep 400 ms to let some data come in
00095c   0e01     movlw   0x1              	MOVLW	0x01
00095e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000960   0e90     movlw   0x90             	MOVLW	0x90
000962   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000964   ec1c     call    0x4a38, 0        	CALL	_sleep_ms
000966   f025
000968   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00096a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	371; meter_logger.c	fifo_size = fifo_in_use();
00096c   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
00096e   f027
000970   6e02     movwf   0x2, 0           	MOVWF	r0x02
000972   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000974   f003
                                           _00146_DS_:
                                           ;	.line	372; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000976   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000978   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00097a   e102     bnz     0x980            	BNZ	_00339_DS_
00097c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00097e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00339_DS_:
000980   e212     bc      0x9a6            	BC	_00148_DS_
                                           ;	.line	373; meter_logger.c	last_fifo_size = fifo_size;
000982   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000984   f000
000986   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000988   f001
                                           ;	.line	374; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
00098a   0e00     movlw   0                	MOVLW	0x00
00098c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00098e   0ec8     movlw   0xc8             	MOVLW	0xc8
000990   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000992   ec1c     call    0x4a38, 0        	CALL	_sleep_ms
000994   f025
000996   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000998   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	375; meter_logger.c	fifo_size = fifo_in_use();
00099a   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
00099c   f027
00099e   6e02     movwf   0x2, 0           	MOVWF	r0x02
0009a0   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0009a2   f003
0009a4   d7e8     bra     0x976            	BRA	_00146_DS_
                                           _00148_DS_:
                                           ;	.line	377; meter_logger.c	fsk_rx_disable();
0009a6   ec6b     call    0x52d6, 0        	CALL	_fsk_rx_disable
0009a8   f029
                                           ;	.line	380; meter_logger.c	usart_puts("\n\rkamstrup - IEC61107 frame received:\n\r");
0009aa   0e00     movlw   0                	MOVLW	UPPER(___str_14)
0009ac   6e06     movwf   0x6, 0           	MOVWF	r0x06
0009ae   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_14)
0009b0   6e05     movwf   0x5, 0           	MOVWF	r0x05
0009b2   0e0c     movlw   0xc              	MOVLW	LOW(___str_14)
0009b4   6e04     movwf   0x4, 0           	MOVWF	r0x04
0009b6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0009b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009ba   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0009bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009be   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0009c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009c2   ecf3     call    0x4be6, 0        	CALL	_usart_puts
0009c4   f025
0009c6   0e03     movlw   0x3              	MOVLW	0x03
0009c8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	383; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
0009ca   6a04     clrf    0x4, 0           	CLRF	r0x04
0009cc   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00183_DS_:
0009ce   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
0009d0   f027
0009d2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0009d4   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
0009d6   f007
0009d8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0009da   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0009dc   e102     bnz     0x9e2            	BNZ	_00340_DS_
0009de   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0009e0   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00340_DS_:
0009e2   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0009e4   d04c     bra     0xa7e            	BRA	_00149_DS_
                                           ;	.line	385; meter_logger.c	fifo_get(&sub_cmd);
0009e6   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
0009e8   6e07     movwf   0x7, 0           	MOVWF	r0x07
0009ea   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
0009ec   6e06     movwf   0x6, 0           	MOVWF	r0x06
0009ee   0e80     movlw   0x80             	MOVLW	0x80
0009f0   6e08     movwf   0x8, 0           	MOVWF	r0x08
0009f2   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0009f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009f6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0009f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009fa   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0009fc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009fe   ec07     call    0x400e, 0        	CALL	_fifo_get
000a00   f020
000a02   0e03     movlw   0x3              	MOVLW	0x03
000a04   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	387; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
000a06   c550     movff   0x550, 0x6       	MOVFF	_main_sub_cmd_1_90, r0x06
000a08   f006
000a0a   6a07     clrf    0x7, 0           	CLRF	r0x07
000a0c   0e00     movlw   0                	MOVLW	UPPER(___str_6)
000a0e   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000a10   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_6)
000a12   6e09     movwf   0x9, 0           	MOVWF	r0x09
000a14   0e20     movlw   0x20             	MOVLW	LOW(___str_6)
000a16   6e08     movwf   0x8, 0           	MOVWF	r0x08
000a18   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000a1a   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
000a1c   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000a1e   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
000a20   0e80     movlw   0x80             	MOVLW	0x80
000a22   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
000a24   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000a26   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a28   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000a2a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a2c   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000a2e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a30   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000a32   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a34   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000a36   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a38   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
000a3a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a3c   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000a3e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a40   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000a42   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a44   ec7e     call    0x44fc, 0        	CALL	_sprintf
000a46   f022
000a48   0e08     movlw   0x8              	MOVLW	0x08
000a4a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	388; meter_logger.c	usart_puts(debug_buffer);
000a4c   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000a4e   6e07     movwf   0x7, 0           	MOVWF	r0x07
000a50   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000a52   6e06     movwf   0x6, 0           	MOVWF	r0x06
000a54   0e80     movlw   0x80             	MOVLW	0x80
000a56   6e08     movwf   0x8, 0           	MOVWF	r0x08
000a58   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000a5a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a5c   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000a5e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a60   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000a62   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a64   ecf3     call    0x4be6, 0        	CALL	_usart_puts
000a66   f025
000a68   0e03     movlw   0x3              	MOVLW	0x03
000a6a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000a6c   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	390; meter_logger.c	fifo_put(sub_cmd);
000a6e   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000a70   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a72   ec63     call    0x42c6, 0        	CALL	_fifo_put
000a74   f021
000a76   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	383; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000a78   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
000a7a   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
000a7c   d7a8     bra     0x9ce            	BRA	_00183_DS_
                                           _00149_DS_:
                                           ;	.line	393; meter_logger.c	rs232_7e1_tx_enable(TIMER0_RS232_300);
000a7e   0ee6     movlw   0xe6             	MOVLW	0xe6
000a80   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a82   0e1b     movlw   0x1b             	MOVLW	0x1b
000a84   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a86   ec21     call    0x4e42, 0        	CALL	_rs232_7e1_tx_enable
000a88   f027
000a8a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000a8c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00150_DS_:
                                           ;	.line	394; meter_logger.c	while (fifo_get(&sub_cmd)) {
000a8e   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000a90   6e05     movwf   0x5, 0           	MOVWF	r0x05
000a92   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
000a94   6e04     movwf   0x4, 0           	MOVWF	r0x04
000a96   0e80     movlw   0x80             	MOVLW	0x80
000a98   6e06     movwf   0x6, 0           	MOVWF	r0x06
000a9a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000a9c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000a9e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000aa0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000aa2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000aa4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000aa6   ec07     call    0x400e, 0        	CALL	_fifo_get
000aa8   f020
000aaa   6e04     movwf   0x4, 0           	MOVWF	r0x04
000aac   0e03     movlw   0x3              	MOVLW	0x03
000aae   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000ab0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000ab2   e00f     bz      0xad2            	BZ	_00152_DS_
000ab4   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	395; meter_logger.c	rs232_7e1_tx_byte(sub_cmd);
000ab6   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000ab8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000aba   eceb     call    0x4fd6, 0        	CALL	_rs232_7e1_tx_byte
000abc   f027
000abe   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	396; meter_logger.c	sleep_ms(RS232_TX_SLEEP);
000ac0   0e00     movlw   0                	MOVLW	0x00
000ac2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ac4   0e0c     movlw   0xc              	MOVLW	0x0c
000ac6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ac8   ec1c     call    0x4a38, 0        	CALL	_sleep_ms
000aca   f025
000acc   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000ace   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000ad0   d7de     bra     0xa8e            	BRA	_00150_DS_
                                           _00152_DS_:
                                           ;	.line	398; meter_logger.c	rs232_7e1_tx_disable();
000ad2   ec3f     call    0x527e, 0        	CALL	_rs232_7e1_tx_disable
000ad4   f029
                                           ;	.line	404; meter_logger.c	rs232_7e1_rx_enable(TIMER0_RS232_300);
000ad6   0ee6     movlw   0xe6             	MOVLW	0xe6
000ad8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ada   0e1b     movlw   0x1b             	MOVLW	0x1b
000adc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ade   ecc1     call    0x4d82, 0        	CALL	_rs232_7e1_rx_enable
000ae0   f026
000ae2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000ae4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	405; meter_logger.c	last_fifo_size = 0;
000ae6   6a00     clrf    0, 0             	CLRF	r0x00
000ae8   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	406; meter_logger.c	sleep_ms(400);							// sleep 200 ms to let some data come in
000aea   0e01     movlw   0x1              	MOVLW	0x01
000aec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000aee   0e90     movlw   0x90             	MOVLW	0x90
000af0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000af2   ec1c     call    0x4a38, 0        	CALL	_sleep_ms
000af4   f025
000af6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000af8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	407; meter_logger.c	fifo_size = fifo_in_use();
000afa   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
000afc   f027
000afe   6e02     movwf   0x2, 0           	MOVWF	r0x02
000b00   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000b02   f003
                                           _00153_DS_:
                                           ;	.line	409; meter_logger.c	while (fifo_size > last_fifo_size) {	// and wait while we are still receiving data
000b04   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000b06   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000b08   e102     bnz     0xb0e            	BNZ	_00341_DS_
000b0a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000b0c   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00341_DS_:
000b0e   e212     bc      0xb34            	BC	_00155_DS_
                                           ;	.line	410; meter_logger.c	last_fifo_size = fifo_size;
000b10   c002     movff   0x2, 0           	MOVFF	r0x02, r0x00
000b12   f000
000b14   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
000b16   f001
                                           ;	.line	411; meter_logger.c	sleep_ms(200);						// return data when no data for 100 ms
000b18   0e00     movlw   0                	MOVLW	0x00
000b1a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b1c   0ec8     movlw   0xc8             	MOVLW	0xc8
000b1e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b20   ec1c     call    0x4a38, 0        	CALL	_sleep_ms
000b22   f025
000b24   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000b26   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	412; meter_logger.c	fifo_size = fifo_in_use();
000b28   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
000b2a   f027
000b2c   6e02     movwf   0x2, 0           	MOVWF	r0x02
000b2e   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000b30   f003
000b32   d7e8     bra     0xb04            	BRA	_00153_DS_
                                           _00155_DS_:
                                           ;	.line	415; meter_logger.c	rs232_7e1_rx_disable();
000b34   ec34     call    0x5268, 0        	CALL	_rs232_7e1_rx_disable
000b36   f029
                                           ;	.line	419; meter_logger.c	usart_puts("\n\rkamstrup - IEC61107 reply received:\n\r");
000b38   0e00     movlw   0                	MOVLW	UPPER(___str_15)
000b3a   6e02     movwf   0x2, 0           	MOVWF	r0x02
000b3c   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_15)
000b3e   6e01     movwf   0x1, 0           	MOVWF	r0x01
000b40   0e34     movlw   0x34             	MOVLW	LOW(___str_15)
000b42   6e00     movwf   0, 0             	MOVWF	r0x00
000b44   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000b46   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b48   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000b4a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b4c   5000     movf    0, 0, 0          	MOVF	r0x00, W
000b4e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b50   ecf3     call    0x4be6, 0        	CALL	_usart_puts
000b52   f025
000b54   0e03     movlw   0x3              	MOVLW	0x03
000b56   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	422; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000b58   6a00     clrf    0, 0             	CLRF	r0x00
000b5a   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00186_DS_:
000b5c   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
000b5e   f027
000b60   6e02     movwf   0x2, 0           	MOVWF	r0x02
000b62   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000b64   f003
000b66   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000b68   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
000b6a   e102     bnz     0xb70            	BNZ	_00342_DS_
000b6c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000b6e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00342_DS_:
000b70   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
000b72   d04c     bra     0xc0c            	BRA	_00156_DS_
                                           ;	.line	424; meter_logger.c	fifo_get(&sub_cmd);
000b74   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000b76   6e03     movwf   0x3, 0           	MOVWF	r0x03
000b78   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
000b7a   6e02     movwf   0x2, 0           	MOVWF	r0x02
000b7c   0e80     movlw   0x80             	MOVLW	0x80
000b7e   6e04     movwf   0x4, 0           	MOVWF	r0x04
000b80   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000b82   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b84   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000b86   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b88   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000b8a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000b8c   ec07     call    0x400e, 0        	CALL	_fifo_get
000b8e   f020
000b90   0e03     movlw   0x3              	MOVLW	0x03
000b92   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	426; meter_logger.c	sprintf(debug_buffer, "%d ", sub_cmd);
000b94   c550     movff   0x550, 0x2       	MOVFF	_main_sub_cmd_1_90, r0x02
000b96   f002
000b98   6a03     clrf    0x3, 0           	CLRF	r0x03
000b9a   0e00     movlw   0                	MOVLW	UPPER(___str_6)
000b9c   6e06     movwf   0x6, 0           	MOVWF	r0x06
000b9e   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_6)
000ba0   6e05     movwf   0x5, 0           	MOVWF	r0x05
000ba2   0e20     movlw   0x20             	MOVLW	LOW(___str_6)
000ba4   6e04     movwf   0x4, 0           	MOVWF	r0x04
000ba6   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000ba8   6e08     movwf   0x8, 0           	MOVWF	r0x08
000baa   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000bac   6e07     movwf   0x7, 0           	MOVWF	r0x07
000bae   0e80     movlw   0x80             	MOVLW	0x80
000bb0   6e09     movwf   0x9, 0           	MOVWF	r0x09
000bb2   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000bb4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bb6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000bb8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bba   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000bbc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bbe   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000bc0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bc2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000bc4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bc6   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000bc8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bca   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000bcc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bce   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000bd0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bd2   ec7e     call    0x44fc, 0        	CALL	_sprintf
000bd4   f022
000bd6   0e08     movlw   0x8              	MOVLW	0x08
000bd8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	427; meter_logger.c	usart_puts(debug_buffer);
000bda   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000bdc   6e03     movwf   0x3, 0           	MOVWF	r0x03
000bde   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000be0   6e02     movwf   0x2, 0           	MOVWF	r0x02
000be2   0e80     movlw   0x80             	MOVLW	0x80
000be4   6e04     movwf   0x4, 0           	MOVWF	r0x04
000be6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000be8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bea   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000bec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bee   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000bf0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000bf2   ecf3     call    0x4be6, 0        	CALL	_usart_puts
000bf4   f025
000bf6   0e03     movlw   0x3              	MOVLW	0x03
000bf8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000bfa   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	429; meter_logger.c	fifo_put(sub_cmd);
000bfc   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000bfe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c00   ec63     call    0x42c6, 0        	CALL	_fifo_put
000c02   f021
000c04   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	422; meter_logger.c	for (i = 0; i < fifo_in_use(); i++) {
000c06   4a00     infsnz  0, 0x1, 0        	INFSNZ	r0x00, F
000c08   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
000c0a   d7a8     bra     0xb5c            	BRA	_00186_DS_
                                           _00156_DS_:
                                           ;	.line	432; meter_logger.c	if (fifo_in_use()) {
000c0c   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
000c0e   f027
000c10   6e00     movwf   0, 0             	MOVWF	r0x00
000c12   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
000c14   f001
000c16   5000     movf    0, 0, 0          	MOVF	r0x00, W
000c18   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
000c1a   e02b     bz      0xc72            	BZ	_00161_DS_
                                           ;	.line	434; meter_logger.c	DEBUG2_PIN = 1;
000c1c   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000c1e   0000     nop                      	nop
000c20   0000     nop                      	nop
                                           	
                                           ;	.line	439; meter_logger.c	DEBUG2_PIN = 0;
000c22   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	440; meter_logger.c	fsk_tx_enable();
000c24   ecd1     call    0x4fa2, 0        	CALL	_fsk_tx_enable
000c26   f027
                                           _00157_DS_:
                                           ;	.line	441; meter_logger.c	while (fifo_get(&sub_cmd)) {
000c28   0e05     movlw   0x5              	MOVLW	HIGH(_main_sub_cmd_1_90)
000c2a   6e01     movwf   0x1, 0           	MOVWF	r0x01
000c2c   0e50     movlw   0x50             	MOVLW	LOW(_main_sub_cmd_1_90)
000c2e   6e00     movwf   0, 0             	MOVWF	r0x00
000c30   0e80     movlw   0x80             	MOVLW	0x80
000c32   6e02     movwf   0x2, 0           	MOVWF	r0x02
000c34   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000c36   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c38   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000c3a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c3c   5000     movf    0, 0, 0          	MOVF	r0x00, W
000c3e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c40   ec07     call    0x400e, 0        	CALL	_fifo_get
000c42   f020
000c44   6e00     movwf   0, 0             	MOVWF	r0x00
000c46   0e03     movlw   0x3              	MOVLW	0x03
000c48   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000c4a   5000     movf    0, 0, 0          	MOVF	r0x00, W
000c4c   e00f     bz      0xc6c            	BZ	_00159_DS_
000c4e   0105     movlb   0x5              	BANKSEL	_main_sub_cmd_1_90
                                           ;	.line	442; meter_logger.c	fsk_tx_byte(sub_cmd);
000c50   5150     movf    0x50, 0, 0x1     	MOVF	_main_sub_cmd_1_90, W, B
000c52   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c54   ec62     call    0x50c4, 0        	CALL	_fsk_tx_byte
000c56   f028
000c58   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	443; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000c5a   0e00     movlw   0                	MOVLW	0x00
000c5c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c5e   0e02     movlw   0x2              	MOVLW	0x02
000c60   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c62   ec1c     call    0x4a38, 0        	CALL	_sleep_ms
000c64   f025
000c66   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c68   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000c6a   d7de     bra     0xc28            	BRA	_00157_DS_
                                           _00159_DS_:
                                           ;	.line	445; meter_logger.c	fsk_tx_disable();
000c6c   ec29     call    0x5252, 0        	CALL	_fsk_tx_disable
000c6e   f029
000c70   d047     bra     0xd00            	BRA	_00162_DS_
                                           _00161_DS_:
                                           ;	.line	449; meter_logger.c	DEBUG2_PIN = 1;
000c72   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000c74   0000     nop                      	nop
000c76   0000     nop                      	nop
                                           	
                                           ;	.line	454; meter_logger.c	DEBUG2_PIN = 0;
000c78   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
000c7a   0000     nop                      	nop
000c7c   0000     nop                      	nop
                                           	
                                           ;	.line	459; meter_logger.c	DEBUG2_PIN = 1;
000c7e   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
000c80   0000     nop                      	nop
000c82   0000     nop                      	nop
                                           	
                                           ;	.line	464; meter_logger.c	DEBUG2_PIN = 0;
000c84   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	466; meter_logger.c	sprintf(debug_buffer, "\n\rno reply from meter\n\r");
000c86   0e00     movlw   0                	MOVLW	UPPER(___str_12)
000c88   6e02     movwf   0x2, 0           	MOVWF	r0x02
000c8a   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_12)
000c8c   6e01     movwf   0x1, 0           	MOVWF	r0x01
000c8e   0ecc     movlw   0xcc             	MOVLW	LOW(___str_12)
000c90   6e00     movwf   0, 0             	MOVWF	r0x00
000c92   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000c94   6e04     movwf   0x4, 0           	MOVWF	r0x04
000c96   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000c98   6e03     movwf   0x3, 0           	MOVWF	r0x03
000c9a   0e80     movlw   0x80             	MOVLW	0x80
000c9c   6e05     movwf   0x5, 0           	MOVWF	r0x05
000c9e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000ca0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ca2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000ca4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ca6   5000     movf    0, 0, 0          	MOVF	r0x00, W
000ca8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000caa   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000cac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cae   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000cb0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cb2   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000cb4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cb6   ec7e     call    0x44fc, 0        	CALL	_sprintf
000cb8   f022
000cba   0e06     movlw   0x6              	MOVLW	0x06
000cbc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	467; meter_logger.c	usart_puts(debug_buffer);
000cbe   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
000cc0   6e01     movwf   0x1, 0           	MOVWF	r0x01
000cc2   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
000cc4   6e00     movwf   0, 0             	MOVWF	r0x00
000cc6   0e80     movlw   0x80             	MOVLW	0x80
000cc8   6e02     movwf   0x2, 0           	MOVWF	r0x02
000cca   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000ccc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cce   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000cd0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cd2   5000     movf    0, 0, 0          	MOVF	r0x00, W
000cd4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cd6   ecf3     call    0x4be6, 0        	CALL	_usart_puts
000cd8   f025
000cda   0e03     movlw   0x3              	MOVLW	0x03
000cdc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	469; meter_logger.c	fsk_tx_enable();
000cde   ecd1     call    0x4fa2, 0        	CALL	_fsk_tx_enable
000ce0   f027
                                           ;	.line	470; meter_logger.c	fsk_tx_byte(0x0d);
000ce2   0e0d     movlw   0xd              	MOVLW	0x0d
000ce4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000ce6   ec62     call    0x50c4, 0        	CALL	_fsk_tx_byte
000ce8   f028
000cea   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	471; meter_logger.c	sleep_ms(FSK_TX_SLEEP);
000cec   0e00     movlw   0                	MOVLW	0x00
000cee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cf0   0e02     movlw   0x2              	MOVLW	0x02
000cf2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000cf4   ec1c     call    0x4a38, 0        	CALL	_sleep_ms
000cf6   f025
000cf8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
000cfa   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	472; meter_logger.c	fsk_tx_disable();
000cfc   ec29     call    0x5252, 0        	CALL	_fsk_tx_disable
000cfe   f029
                                           _00162_DS_:
                                           ;	.line	475; meter_logger.c	usart_puts("\n\rwaiting for new command\n\r");
000d00   0e00     movlw   0                	MOVLW	UPPER(___str_7)
000d02   6e02     movwf   0x2, 0           	MOVWF	r0x02
000d04   0e2d     movlw   0x2d             	MOVLW	HIGH(___str_7)
000d06   6e01     movwf   0x1, 0           	MOVWF	r0x01
000d08   0e24     movlw   0x24             	MOVLW	LOW(___str_7)
000d0a   6e00     movwf   0, 0             	MOVWF	r0x00
000d0c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000d0e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d10   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000d12   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d14   5000     movf    0, 0, 0          	MOVF	r0x00, W
000d16   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000d18   ecf3     call    0x4be6, 0        	CALL	_usart_puts
000d1a   f025
000d1c   0e03     movlw   0x3              	MOVLW	0x03
000d1e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	477; meter_logger.c	fsk_rx_enable();
000d20   ec68     call    0x4cd0, 0        	CALL	_fsk_rx_enable
000d22   f026
                                           ;	.line	478; meter_logger.c	break;
000d24   efb9     goto    0x172            	GOTO	_00168_DS_
000d26   f000
                                           _00163_DS_:
                                           ;	.line	480; meter_logger.c	fsk_rx_disable();
000d28   ec6b     call    0x52d6, 0        	CALL	_fsk_rx_disable
000d2a   f029
                                           ;	.line	481; meter_logger.c	get_battery_level();
000d2c   ec3c     call    0x3678, 0        	CALL	_get_battery_level
000d2e   f01b
                                           ;	.line	482; meter_logger.c	fsk_rx_enable();
000d30   ec68     call    0x4cd0, 0        	CALL	_fsk_rx_enable
000d32   f026
                                           ;	.line	484; meter_logger.c	}
000d34   efb9     goto    0x172            	GOTO	_00168_DS_
000d36   f000
000d38   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger___debug2	code
                                           __debug2:
                                           ;	.line	4663; meter_logger.c	void _debug2() {
004722   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004724   ffe5
004726   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004728   ffd9
                                           ;	.line	4664; meter_logger.c	DEBUG2_PIN = 0x1;
00472a   8681     bsf     0x81, 0x3, 0     	BSF	_PORTBbits, 3
00472c   0000     nop                      	nop
00472e   0000     nop                      	nop
004730   0000     nop                      	nop
004732   0000     nop                      	nop
004734   0000     nop                      	nop
004736   0000     nop                      	nop
004738   0000     nop                      	nop
00473a   0000     nop                      	nop
00473c   0000     nop                      	nop
00473e   0000     nop                      	nop
004740   0000     nop                      	nop
004742   0000     nop                      	nop
004744   0000     nop                      	nop
004746   0000     nop                      	nop
004748   0000     nop                      	nop
00474a   0000     nop                      	nop
00474c   0000     nop                      	nop
00474e   0000     nop                      	nop
004750   0000     nop                      	nop
004752   0000     nop                      	nop
004754   0000     nop                      	nop
004756   0000     nop                      	nop
004758   0000     nop                      	nop
00475a   0000     nop                      	nop
00475c   0000     nop                      	nop
00475e   0000     nop                      	nop
004760   0000     nop                      	nop
004762   0000     nop                      	nop
004764   0000     nop                      	nop
004766   0000     nop                      	nop
004768   0000     nop                      	nop
00476a   0000     nop                      	nop
00476c   0000     nop                      	nop
00476e   0000     nop                      	nop
004770   0000     nop                      	nop
004772   0000     nop                      	nop
004774   0000     nop                      	nop
004776   0000     nop                      	nop
004778   0000     nop                      	nop
00477a   0000     nop                      	nop
00477c   0000     nop                      	nop
00477e   0000     nop                      	nop
004780   0000     nop                      	nop
004782   0000     nop                      	nop
004784   0000     nop                      	nop
                                           	
                                           ;	.line	4712; meter_logger.c	DEBUG2_PIN = 0x0;
004786   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
004788   0000     nop                      	nop
00478a   0000     nop                      	nop
00478c   0000     nop                      	nop
00478e   0000     nop                      	nop
004790   0000     nop                      	nop
004792   0000     nop                      	nop
004794   0000     nop                      	nop
004796   0000     nop                      	nop
004798   0000     nop                      	nop
00479a   0000     nop                      	nop
00479c   0000     nop                      	nop
00479e   0000     nop                      	nop
0047a0   0000     nop                      	nop
0047a2   0000     nop                      	nop
0047a4   0000     nop                      	nop
0047a6   0000     nop                      	nop
0047a8   0000     nop                      	nop
0047aa   0000     nop                      	nop
0047ac   0000     nop                      	nop
0047ae   0000     nop                      	nop
0047b0   0000     nop                      	nop
0047b2   0000     nop                      	nop
0047b4   0000     nop                      	nop
0047b6   0000     nop                      	nop
0047b8   0000     nop                      	nop
0047ba   0000     nop                      	nop
0047bc   0000     nop                      	nop
0047be   0000     nop                      	nop
0047c0   0000     nop                      	nop
0047c2   0000     nop                      	nop
0047c4   0000     nop                      	nop
0047c6   0000     nop                      	nop
0047c8   0000     nop                      	nop
0047ca   0000     nop                      	nop
0047cc   0000     nop                      	nop
0047ce   0000     nop                      	nop
0047d0   0000     nop                      	nop
0047d2   0000     nop                      	nop
0047d4   0000     nop                      	nop
0047d6   0000     nop                      	nop
0047d8   0000     nop                      	nop
0047da   0000     nop                      	nop
0047dc   0000     nop                      	nop
0047de   0000     nop                      	nop
0047e0   0000     nop                      	nop
                                           	
0047e2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0047e4   ffd9
0047e6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger___debug	code
                                           __debug:
                                           ;	.line	4563; meter_logger.c	void _debug() {
0047e8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0047ea   ffe5
0047ec   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0047ee   ffd9
                                           ;	.line	4564; meter_logger.c	DEBUG_PIN = 0x1;
0047f0   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
0047f2   0000     nop                      	nop
0047f4   0000     nop                      	nop
0047f6   0000     nop                      	nop
0047f8   0000     nop                      	nop
0047fa   0000     nop                      	nop
0047fc   0000     nop                      	nop
0047fe   0000     nop                      	nop
004800   0000     nop                      	nop
004802   0000     nop                      	nop
004804   0000     nop                      	nop
004806   0000     nop                      	nop
004808   0000     nop                      	nop
00480a   0000     nop                      	nop
00480c   0000     nop                      	nop
00480e   0000     nop                      	nop
004810   0000     nop                      	nop
004812   0000     nop                      	nop
004814   0000     nop                      	nop
004816   0000     nop                      	nop
004818   0000     nop                      	nop
00481a   0000     nop                      	nop
00481c   0000     nop                      	nop
00481e   0000     nop                      	nop
004820   0000     nop                      	nop
004822   0000     nop                      	nop
004824   0000     nop                      	nop
004826   0000     nop                      	nop
004828   0000     nop                      	nop
00482a   0000     nop                      	nop
00482c   0000     nop                      	nop
00482e   0000     nop                      	nop
004830   0000     nop                      	nop
004832   0000     nop                      	nop
004834   0000     nop                      	nop
004836   0000     nop                      	nop
004838   0000     nop                      	nop
00483a   0000     nop                      	nop
00483c   0000     nop                      	nop
00483e   0000     nop                      	nop
004840   0000     nop                      	nop
004842   0000     nop                      	nop
004844   0000     nop                      	nop
004846   0000     nop                      	nop
004848   0000     nop                      	nop
00484a   0000     nop                      	nop
                                           	
                                           ;	.line	4612; meter_logger.c	DEBUG_PIN = 0x0;
00484c   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
00484e   0000     nop                      	nop
004850   0000     nop                      	nop
004852   0000     nop                      	nop
004854   0000     nop                      	nop
004856   0000     nop                      	nop
004858   0000     nop                      	nop
00485a   0000     nop                      	nop
00485c   0000     nop                      	nop
00485e   0000     nop                      	nop
004860   0000     nop                      	nop
004862   0000     nop                      	nop
004864   0000     nop                      	nop
004866   0000     nop                      	nop
004868   0000     nop                      	nop
00486a   0000     nop                      	nop
00486c   0000     nop                      	nop
00486e   0000     nop                      	nop
004870   0000     nop                      	nop
004872   0000     nop                      	nop
004874   0000     nop                      	nop
004876   0000     nop                      	nop
004878   0000     nop                      	nop
00487a   0000     nop                      	nop
00487c   0000     nop                      	nop
00487e   0000     nop                      	nop
004880   0000     nop                      	nop
004882   0000     nop                      	nop
004884   0000     nop                      	nop
004886   0000     nop                      	nop
004888   0000     nop                      	nop
00488a   0000     nop                      	nop
00488c   0000     nop                      	nop
00488e   0000     nop                      	nop
004890   0000     nop                      	nop
004892   0000     nop                      	nop
004894   0000     nop                      	nop
004896   0000     nop                      	nop
004898   0000     nop                      	nop
00489a   0000     nop                      	nop
00489c   0000     nop                      	nop
00489e   0000     nop                      	nop
0048a0   0000     nop                      	nop
0048a2   0000     nop                      	nop
0048a4   0000     nop                      	nop
0048a6   0000     nop                      	nop
                                           	
0048a8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0048aa   ffd9
0048ac   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__flash_led	code
                                           _flash_led:
                                           ;	.line	4558; meter_logger.c	void flash_led(unsigned char ms) {
005196   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005198   ffe5
00519a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00519c   ffd9
00519e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0051a0   ffe5
0051a2   0e02     movlw   0x2              	MOVLW	0x02
0051a4   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0051a6   f000
                                           ;	.line	4559; meter_logger.c	led_flash.timer = ms;
0051a8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0051aa   0105     movlb   0x5              	BANKSEL	(_led_flash + 1)
0051ac   6f4d     movwf   0x4d, 0x1        	MOVWF	(_led_flash + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	4560; meter_logger.c	led_flash.state = LED_FLASH_RUN;
0051ae   6b4c     clrf    0x4c, 0x1        	CLRF	_led_flash, B
0051b0   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0051b2   f000
0051b4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0051b6   ffd9
0051b8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__get_battery_level	code
                                           _get_battery_level:
                                           ;	.line	4527; meter_logger.c	unsigned int get_battery_level() {
003678   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00367a   ffe5
00367c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00367e   ffd9
003680   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003682   ffe5
003684   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003686   ffe5
003688   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00368a   ffe5
00368c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00368e   ffe5
003690   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003692   ffe5
003694   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003696   ffe5
003698   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
00369a   ffe5
00369c   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
00369e   ffe5
                                           ;	.line	4531; meter_logger.c	adc_open(ADC_CHN_4 , ADC_FOSC_64, ADC_CFG_5A, ADC_FRM_RJUST | ADC_INT_OFF | ADC_VCFG_VDD_VSS);
0036a0   0e80     movlw   0x80             	MOVLW	0x80
0036a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0036a4   0e0a     movlw   0xa              	MOVLW	0x0a
0036a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0036a8   0e06     movlw   0x6              	MOVLW	0x06
0036aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0036ac   0e04     movlw   0x4              	MOVLW	0x04
0036ae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0036b0   ecb5     call    0x4b6a, 0        	CALL	_adc_open
0036b2   f025
0036b4   0e04     movlw   0x4              	MOVLW	0x04
0036b6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4533; meter_logger.c	adc_setchannel(ADC_CHN_4);
0036b8   0e04     movlw   0x4              	MOVLW	0x04
0036ba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0036bc   ec7d     call    0x4efa, 0        	CALL	_adc_setchannel
0036be   f027
0036c0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	4534; meter_logger.c	adc_conv();
0036c2   ec0a     call    0x14, 0          	CALL	_adc_conv
0036c4   f000
                                           _01161_DS_:
                                           ;	.line	4535; meter_logger.c	while(adc_busy()) {
0036c6   eca1     call    0x5342, 0        	CALL	_adc_busy
0036c8   f029
0036ca   6e00     movwf   0, 0             	MOVWF	r0x00
0036cc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0036ce   e1fb     bnz     0x36c6           	BNZ	_01161_DS_
                                           ;	.line	4539; meter_logger.c	dev_id = get_dev_id();
0036d0   ec2f     call    0x4c5e, 0        	CALL	_get_dev_id
0036d2   f026
0036d4   6e00     movwf   0, 0             	MOVWF	r0x00
0036d6   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0036d8   f001
                                           ;	.line	4540; meter_logger.c	if (dev_id == 0x1240) {
0036da   5000     movf    0, 0, 0          	MOVF	r0x00, W
0036dc   0a40     xorlw   0x40             	XORLW	0x40
0036de   e103     bnz     0x36e6           	BNZ	_01184_DS_
0036e0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0036e2   0a12     xorlw   0x12             	XORLW	0x12
0036e4   e001     bz      0x36e8           	BZ	_01185_DS_
                                           _01184_DS_:
0036e6   d041     bra     0x376a           	BRA	_01168_DS_
                                           _01185_DS_:
                                           ;	.line	4542; meter_logger.c	v_level = (unsigned long)1000 * (unsigned long)adc_read() * (unsigned long)833/(unsigned long)93600;
0036e8   ec99     call    0x5332, 0        	CALL	_adc_read
0036ea   f029
0036ec   6e02     movwf   0x2, 0           	MOVWF	r0x02
0036ee   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0036f0   f003
0036f2   6ae8     clrf    0xe8, 0          	CLRF	WREG
0036f4   be03     btfsc   0x3, 0x7, 0      	BTFSC	r0x03, 7
0036f6   0eff     movlw   0xff             	MOVLW	0xff
0036f8   6e04     movwf   0x4, 0           	MOVWF	r0x04
0036fa   6e05     movwf   0x5, 0           	MOVWF	r0x05
0036fc   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0036fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003700   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003702   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003704   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003706   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003708   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00370a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00370c   0e00     movlw   0                	MOVLW	0x00
00370e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003710   0e0c     movlw   0xc              	MOVLW	0x0c
003712   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003714   0eb5     movlw   0xb5             	MOVLW	0xb5
003716   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003718   0ee8     movlw   0xe8             	MOVLW	0xe8
00371a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00371c   ec51     call    0x38a2, 0        	CALL	__mullong
00371e   f01c
003720   6e02     movwf   0x2, 0           	MOVWF	r0x02
003722   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
003724   f003
003726   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
003728   f004
00372a   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
00372c   f005
00372e   0e08     movlw   0x8              	MOVLW	0x08
003730   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003732   0e00     movlw   0                	MOVLW	0x00
003734   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003736   0e01     movlw   0x1              	MOVLW	0x01
003738   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00373a   0e6d     movlw   0x6d             	MOVLW	0x6d
00373c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00373e   0ea0     movlw   0xa0             	MOVLW	0xa0
003740   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003742   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003744   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003746   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003748   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00374a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00374c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00374e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003750   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003752   ecf2     call    0x43e4, 0        	CALL	__divulong
003754   f021
003756   6e02     movwf   0x2, 0           	MOVWF	r0x02
003758   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00375a   f003
00375c   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
00375e   f004
003760   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
003762   f005
003764   0e08     movlw   0x8              	MOVLW	0x08
003766   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003768   d054     bra     0x3812           	BRA	_01169_DS_
                                           _01168_DS_:
                                           ;	.line	4544; meter_logger.c	else if (dev_id == 0x2a40) {
00376a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00376c   0a40     xorlw   0x40             	XORLW	0x40
00376e   e103     bnz     0x3776           	BNZ	_01186_DS_
003770   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003772   0a2a     xorlw   0x2a             	XORLW	0x2a
003774   e001     bz      0x3778           	BZ	_01187_DS_
                                           _01186_DS_:
003776   d04b     bra     0x380e           	BRA	_01165_DS_
                                           _01187_DS_:
                                           ;	.line	4546; meter_logger.c	v_level = (unsigned long)1000 * (unsigned long)(adc_read() >> 2) * (unsigned long)833/(unsigned long)93600;
003778   ec99     call    0x5332, 0        	CALL	_adc_read
00377a   f029
00377c   6e00     movwf   0, 0             	MOVWF	r0x00
00377e   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003780   f001
003782   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
003784   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
003786   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
003788   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
00378a   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
00378c   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
00378e   6ae8     clrf    0xe8, 0          	CLRF	WREG
003790   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
003792   0eff     movlw   0xff             	MOVLW	0xff
003794   6e04     movwf   0x4, 0           	MOVWF	r0x04
003796   6e05     movwf   0x5, 0           	MOVWF	r0x05
003798   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00379a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00379c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00379e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037a0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0037a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037a4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0037a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037a8   0e00     movlw   0                	MOVLW	0x00
0037aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037ac   0e0c     movlw   0xc              	MOVLW	0x0c
0037ae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037b0   0eb5     movlw   0xb5             	MOVLW	0xb5
0037b2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037b4   0ee8     movlw   0xe8             	MOVLW	0xe8
0037b6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037b8   ec51     call    0x38a2, 0        	CALL	__mullong
0037ba   f01c
0037bc   6e00     movwf   0, 0             	MOVWF	r0x00
0037be   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0037c0   f001
0037c2   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
0037c4   f004
0037c6   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
0037c8   f005
0037ca   0e08     movlw   0x8              	MOVLW	0x08
0037cc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0037ce   0e00     movlw   0                	MOVLW	0x00
0037d0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037d2   0e01     movlw   0x1              	MOVLW	0x01
0037d4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037d6   0e6d     movlw   0x6d             	MOVLW	0x6d
0037d8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037da   0ea0     movlw   0xa0             	MOVLW	0xa0
0037dc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037de   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0037e0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037e2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0037e4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037e6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0037e8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037ea   5000     movf    0, 0, 0          	MOVF	r0x00, W
0037ec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0037ee   ecf2     call    0x43e4, 0        	CALL	__divulong
0037f0   f021
0037f2   6e00     movwf   0, 0             	MOVWF	r0x00
0037f4   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0037f6   f001
0037f8   cff4     movff   0xff4, 0x4       	MOVFF	PRODH, r0x04
0037fa   f004
0037fc   cfe9     movff   0xfe9, 0x5       	MOVFF	FSR0L, r0x05
0037fe   f005
003800   0e08     movlw   0x8              	MOVLW	0x08
003802   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003804   5000     movf    0, 0, 0          	MOVF	r0x00, W
003806   6e02     movwf   0x2, 0           	MOVWF	r0x02
003808   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00380a   6e03     movwf   0x3, 0           	MOVWF	r0x03
00380c   d002     bra     0x3812           	BRA	_01169_DS_
                                           _01165_DS_:
                                           ;	.line	4549; meter_logger.c	v_level = 0;
00380e   6a02     clrf    0x2, 0           	CLRF	r0x02
003810   6a03     clrf    0x3, 0           	CLRF	r0x03
                                           _01169_DS_:
                                           ;	.line	4551; meter_logger.c	sprintf(debug_buffer, "Battery: %dmV\n\r", v_level);
003812   0e00     movlw   0                	MOVLW	UPPER(___str_16)
003814   6e04     movwf   0x4, 0           	MOVWF	r0x04
003816   0e2e     movlw   0x2e             	MOVLW	HIGH(___str_16)
003818   6e01     movwf   0x1, 0           	MOVWF	r0x01
00381a   0e5c     movlw   0x5c             	MOVLW	LOW(___str_16)
00381c   6e00     movwf   0, 0             	MOVWF	r0x00
00381e   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
003820   6e06     movwf   0x6, 0           	MOVWF	r0x06
003822   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
003824   6e05     movwf   0x5, 0           	MOVWF	r0x05
003826   0e80     movlw   0x80             	MOVLW	0x80
003828   6e07     movwf   0x7, 0           	MOVWF	r0x07
00382a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00382c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00382e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003830   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003832   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003834   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003836   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003838   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00383a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00383c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00383e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003840   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003842   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003844   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003846   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003848   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00384a   ec7e     call    0x44fc, 0        	CALL	_sprintf
00384c   f022
00384e   0e08     movlw   0x8              	MOVLW	0x08
003850   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4552; meter_logger.c	usart_puts(debug_buffer);	
003852   0e00     movlw   0                	MOVLW	HIGH(_debug_buffer)
003854   6e01     movwf   0x1, 0           	MOVWF	r0x01
003856   0e60     movlw   0x60             	MOVLW	LOW(_debug_buffer)
003858   6e00     movwf   0, 0             	MOVWF	r0x00
00385a   0e80     movlw   0x80             	MOVLW	0x80
00385c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00385e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003860   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003862   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003864   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003866   5000     movf    0, 0, 0          	MOVF	r0x00, W
003868   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00386a   ecf3     call    0x4be6, 0        	CALL	_usart_puts
00386c   f025
00386e   0e03     movlw   0x3              	MOVLW	0x03
003870   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	4554; meter_logger.c	adc_close();
003872   ecac     call    0x5358, 0        	CALL	_adc_close
003874   f029
                                           ;	.line	4555; meter_logger.c	return v_level;
003876   c003     movff   0x3, 0xff3       	MOVFF	r0x03, PRODL
003878   fff3
00387a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00387c   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
00387e   f007
003880   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003882   f006
003884   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003886   f005
003888   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00388a   f004
00388c   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00388e   f003
003890   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003892   f002
003894   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003896   f001
003898   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00389a   f000
00389c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00389e   ffd9
0038a0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_snoop	code
                                           _fifo_snoop:
                                           ;	.line	4504; meter_logger.c	unsigned char fifo_snoop(unsigned char *c, unsigned int pos) {
003e6e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003e70   ffe5
003e72   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003e74   ffd9
003e76   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003e78   ffe5
003e7a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003e7c   ffe5
003e7e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003e80   ffe5
003e82   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003e84   ffe5
003e86   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003e88   ffe5
003e8a   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003e8c   ffe5
003e8e   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003e90   ffe5
003e92   0e02     movlw   0x2              	MOVLW	0x02
003e94   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003e96   f000
003e98   0e03     movlw   0x3              	MOVLW	0x03
003e9a   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003e9c   f001
003e9e   0e04     movlw   0x4              	MOVLW	0x04
003ea0   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
003ea2   f002
003ea4   0e05     movlw   0x5              	MOVLW	0x05
003ea6   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
003ea8   f003
003eaa   0e06     movlw   0x6              	MOVLW	0x06
003eac   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
003eae   f004
                                           ;	.line	4505; meter_logger.c	if (fifo_in_use() > (pos)) {
003eb0   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
003eb2   f027
003eb4   6e05     movwf   0x5, 0           	MOVWF	r0x05
003eb6   cff3     movff   0xff3, 0x6       	MOVFF	PRODL, r0x06
003eb8   f006
003eba   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003ebc   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
003ebe   e102     bnz     0x3ec4           	BNZ	_01154_DS_
003ec0   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003ec2   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _01154_DS_:
003ec4   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003ec6   d091     bra     0x3fea           	BRA	_01144_DS_
003ec8   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
                                           ;	.line	4506; meter_logger.c	switch (fifo_tail/QUEUE_SIZE) {
003eca   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
003ecc   6e05     movwf   0x5, 0           	MOVWF	r0x05
003ece   6a06     clrf    0x6, 0           	CLRF	r0x06
003ed0   0e00     movlw   0                	MOVLW	0x00
003ed2   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003ed4   e102     bnz     0x3eda           	BNZ	_01155_DS_
003ed6   0e04     movlw   0x4              	MOVLW	0x04
003ed8   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
                                           _01155_DS_:
003eda   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003edc   d084     bra     0x3fe6           	BRA	_01142_DS_
003ede   6afa     clrf    0xfa, 0          	CLRF	PCLATH
003ee0   6afb     clrf    0xfb, 0          	CLRF	PCLATU
003ee2   3405     rlcf    0x5, 0, 0        	RLCF	r0x05, W
003ee4   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
003ee6   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
003ee8   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
003eea   0bfc     andlw   0xfc             	ANDLW	0xfc
003eec   0ffc     addlw   0xfc             	ADDLW	LOW(_01156_DS_)
003eee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003ef0   0e3e     movlw   0x3e             	MOVLW	HIGH(_01156_DS_)
003ef2   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
003ef4   0e00     movlw   0                	MOVLW	UPPER(_01156_DS_)
003ef6   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
003ef8   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
003efa   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01156_DS_:
003efc   ef86     goto    0x3f0c           	GOTO	_01138_DS_
003efe   f01f
003f00   efa2     goto    0x3f44           	GOTO	_01139_DS_
003f02   f01f
003f04   efbe     goto    0x3f7c           	GOTO	_01140_DS_
003f06   f01f
003f08   efda     goto    0x3fb4           	GOTO	_01141_DS_
003f0a   f01f
                                           _01138_DS_:
                                           ;	.line	4508; meter_logger.c	*c = fifo_buffer_0[(fifo_tail + pos) % QUEUE_SIZE];
003f0c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003f0e   0105     movlb   0x5              	BANKSEL	_fifo_tail
003f10   2544     addwf   0x44, 0, 0x1     	ADDWF	_fifo_tail, W, B
003f12   6e05     movwf   0x5, 0           	MOVWF	r0x05
003f14   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
003f16   2145     addwfc  0x45, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
003f18   6e06     movwf   0x6, 0           	MOVWF	r0x06
003f1a   6a06     clrf    0x6, 0           	CLRF	r0x06
003f1c   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
003f1e   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
003f20   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
003f22   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
003f24   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
003f26   ffe9
003f28   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
003f2a   ffea
003f2c   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
003f2e   f005
003f30   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003f32   ffe5
003f34   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003f36   ffe9
003f38   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003f3a   fff3
003f3c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003f3e   ec60     call    0x52c0, 0        	CALL	__gptrput1
003f40   f029
                                           ;	.line	4509; meter_logger.c	break;
003f42   d051     bra     0x3fe6           	BRA	_01142_DS_
                                           _01139_DS_:
                                           ;	.line	4511; meter_logger.c	*c = fifo_buffer_1[(fifo_tail + pos) % QUEUE_SIZE];
003f44   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003f46   0105     movlb   0x5              	BANKSEL	_fifo_tail
003f48   2544     addwf   0x44, 0, 0x1     	ADDWF	_fifo_tail, W, B
003f4a   6e05     movwf   0x5, 0           	MOVWF	r0x05
003f4c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
003f4e   2145     addwfc  0x45, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
003f50   6e06     movwf   0x6, 0           	MOVWF	r0x06
003f52   6a06     clrf    0x6, 0           	CLRF	r0x06
003f54   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
003f56   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
003f58   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
003f5a   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
003f5c   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
003f5e   ffe9
003f60   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
003f62   ffea
003f64   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
003f66   f005
003f68   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003f6a   ffe5
003f6c   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003f6e   ffe9
003f70   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003f72   fff3
003f74   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003f76   ec60     call    0x52c0, 0        	CALL	__gptrput1
003f78   f029
                                           ;	.line	4512; meter_logger.c	break;
003f7a   d035     bra     0x3fe6           	BRA	_01142_DS_
                                           _01140_DS_:
                                           ;	.line	4514; meter_logger.c	*c = fifo_buffer_2[(fifo_tail + pos) % QUEUE_SIZE];
003f7c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003f7e   0105     movlb   0x5              	BANKSEL	_fifo_tail
003f80   2544     addwf   0x44, 0, 0x1     	ADDWF	_fifo_tail, W, B
003f82   6e05     movwf   0x5, 0           	MOVWF	r0x05
003f84   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
003f86   2145     addwfc  0x45, 0, 0x1     	ADDWFC	(_fifo_tail + 1), W, B
003f88   6e06     movwf   0x6, 0           	MOVWF	r0x06
003f8a   6a06     clrf    0x6, 0           	CLRF	r0x06
003f8c   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
003f8e   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
003f90   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
003f92   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
003f94   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
003f96   ffe9
003f98   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
003f9a   ffea
003f9c   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
003f9e   f005
003fa0   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003fa2   ffe5
003fa4   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003fa6   ffe9
003fa8   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003faa   fff3
003fac   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003fae   ec60     call    0x52c0, 0        	CALL	__gptrput1
003fb0   f029
                                           ;	.line	4515; meter_logger.c	break;
003fb2   d019     bra     0x3fe6           	BRA	_01142_DS_
                                           _01141_DS_:
003fb4   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4517; meter_logger.c	*c = fifo_buffer_3[(fifo_tail + pos) % QUEUE_SIZE];
003fb6   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
003fb8   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
                                           ; removed redundant BANKSEL
003fba   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
003fbc   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
003fbe   6a04     clrf    0x4, 0           	CLRF	r0x04
003fc0   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
003fc2   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
003fc4   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
003fc6   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
003fc8   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
003fca   ffe9
003fcc   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
003fce   ffea
003fd0   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
003fd2   f003
003fd4   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003fd6   ffe5
003fd8   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003fda   ffe9
003fdc   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003fde   fff3
003fe0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003fe2   ec60     call    0x52c0, 0        	CALL	__gptrput1
003fe4   f029
                                           _01142_DS_:
                                           ;	.line	4520; meter_logger.c	return 1;
003fe6   0e01     movlw   0x1              	MOVLW	0x01
003fe8   d001     bra     0x3fec           	BRA	_01146_DS_
                                           _01144_DS_:
                                           ;	.line	4523; meter_logger.c	return 0;
003fea   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _01146_DS_:
003fec   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003fee   f006
003ff0   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003ff2   f005
003ff4   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003ff6   f004
003ff8   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003ffa   f003
003ffc   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003ffe   f002
004000   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004002   f001
004004   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004006   f000
004008   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00400a   ffd9
00400c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_get	code
                                           _fifo_get:
                                           ;	.line	4476; meter_logger.c	unsigned char fifo_get(unsigned char *c) {
00400e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004010   ffe5
004012   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004014   ffd9
004016   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004018   ffe5
00401a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00401c   ffe5
00401e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004020   ffe5
004022   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004024   ffe5
004026   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004028   ffe5
00402a   0e02     movlw   0x2              	MOVLW	0x02
00402c   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00402e   f000
004030   0e03     movlw   0x3              	MOVLW	0x03
004032   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004034   f001
004036   0e04     movlw   0x4              	MOVLW	0x04
004038   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
00403a   f002
                                           ;	.line	4477; meter_logger.c	if (fifo_in_use() != 0) {
00403c   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
00403e   f027
004040   6e03     movwf   0x3, 0           	MOVWF	r0x03
004042   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
004044   f004
004046   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004048   1004     iorwf   0x4, 0, 0        	IORWF	r0x04, W
00404a   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
00404c   d091     bra     0x4170           	BRA	_01113_DS_
00404e   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
                                           ;	.line	4478; meter_logger.c	switch (fifo_tail/QUEUE_SIZE) {
004050   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
004052   6e03     movwf   0x3, 0           	MOVWF	r0x03
004054   6a04     clrf    0x4, 0           	CLRF	r0x04
004056   0e00     movlw   0                	MOVLW	0x00
004058   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
00405a   e102     bnz     0x4060           	BNZ	_01126_DS_
00405c   0e04     movlw   0x4              	MOVLW	0x04
00405e   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _01126_DS_:
004060   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
004062   d076     bra     0x4150           	BRA	_01109_DS_
004064   6afa     clrf    0xfa, 0          	CLRF	PCLATH
004066   6afb     clrf    0xfb, 0          	CLRF	PCLATU
004068   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
00406a   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00406c   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
00406e   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
004070   0bfc     andlw   0xfc             	ANDLW	0xfc
004072   0f82     addlw   0x82             	ADDLW	LOW(_01127_DS_)
004074   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004076   0e40     movlw   0x40             	MOVLW	HIGH(_01127_DS_)
004078   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
00407a   0e00     movlw   0                	MOVLW	UPPER(_01127_DS_)
00407c   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
00407e   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
004080   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01127_DS_:
004082   ef49     goto    0x4092           	GOTO	_01105_DS_
004084   f020
004086   ef61     goto    0x40c2           	GOTO	_01106_DS_
004088   f020
00408a   ef79     goto    0x40f2           	GOTO	_01107_DS_
00408c   f020
00408e   ef91     goto    0x4122           	GOTO	_01108_DS_
004090   f020
                                           _01105_DS_:
004092   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4480; meter_logger.c	*c = fifo_buffer_0[fifo_tail % QUEUE_SIZE];
004094   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
004096   6e03     movwf   0x3, 0           	MOVWF	r0x03
004098   6a04     clrf    0x4, 0           	CLRF	r0x04
00409a   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
00409c   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
00409e   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
0040a0   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0040a2   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0040a4   ffe9
0040a6   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0040a8   ffea
0040aa   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
0040ac   f003
0040ae   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0040b0   ffe5
0040b2   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0040b4   ffe9
0040b6   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0040b8   fff3
0040ba   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0040bc   ec60     call    0x52c0, 0        	CALL	__gptrput1
0040be   f029
                                           ;	.line	4481; meter_logger.c	break;
0040c0   d047     bra     0x4150           	BRA	_01109_DS_
                                           _01106_DS_:
0040c2   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4483; meter_logger.c	*c = fifo_buffer_1[fifo_tail % QUEUE_SIZE];
0040c4   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
0040c6   6e03     movwf   0x3, 0           	MOVWF	r0x03
0040c8   6a04     clrf    0x4, 0           	CLRF	r0x04
0040ca   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
0040cc   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
0040ce   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
0040d0   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0040d2   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0040d4   ffe9
0040d6   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0040d8   ffea
0040da   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
0040dc   f003
0040de   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0040e0   ffe5
0040e2   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0040e4   ffe9
0040e6   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0040e8   fff3
0040ea   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0040ec   ec60     call    0x52c0, 0        	CALL	__gptrput1
0040ee   f029
                                           ;	.line	4484; meter_logger.c	break;
0040f0   d02f     bra     0x4150           	BRA	_01109_DS_
                                           _01107_DS_:
0040f2   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4486; meter_logger.c	*c = fifo_buffer_2[fifo_tail % QUEUE_SIZE];
0040f4   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
0040f6   6e03     movwf   0x3, 0           	MOVWF	r0x03
0040f8   6a04     clrf    0x4, 0           	CLRF	r0x04
0040fa   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
0040fc   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
0040fe   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
004100   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
004102   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
004104   ffe9
004106   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
004108   ffea
00410a   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
00410c   f003
00410e   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004110   ffe5
004112   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004114   ffe9
004116   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
004118   fff3
00411a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00411c   ec60     call    0x52c0, 0        	CALL	__gptrput1
00411e   f029
                                           ;	.line	4487; meter_logger.c	break;
004120   d017     bra     0x4150           	BRA	_01109_DS_
                                           _01108_DS_:
004122   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4489; meter_logger.c	*c = fifo_buffer_3[fifo_tail % QUEUE_SIZE];
004124   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
004126   6e03     movwf   0x3, 0           	MOVWF	r0x03
004128   6a04     clrf    0x4, 0           	CLRF	r0x04
00412a   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
00412c   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
00412e   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
004130   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
004132   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
004134   ffe9
004136   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
004138   ffea
00413a   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
00413c   f003
00413e   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004140   ffe5
004142   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004144   ffe9
004146   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
004148   fff3
00414a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00414c   ec60     call    0x52c0, 0        	CALL	__gptrput1
00414e   f029
                                           _01109_DS_:
004150   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4492; meter_logger.c	fifo_tail++;
004152   3f44     incfsz  0x44, 0x1, 0x1   	INCFSZ	_fifo_tail, F, B
004154   d001     bra     0x4158           	BRA	_11202_DS_
                                           ; removed redundant BANKSEL
004156   2b45     incf    0x45, 0x1, 0x1   	INCF	(_fifo_tail + 1), F, B
                                           _11202_DS_:
004158   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4494; meter_logger.c	if (fifo_tail == QUEUE_SIZE_COMBINED) {
00415a   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
00415c   e103     bnz     0x4164           	BNZ	_01132_DS_
                                           ; removed redundant BANKSEL
00415e   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
004160   0a04     xorlw   0x4              	XORLW	0x04
004162   e001     bz      0x4166           	BZ	_01133_DS_
                                           _01132_DS_:
004164   d003     bra     0x416c           	BRA	_01111_DS_
                                           _01133_DS_:
004166   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4495; meter_logger.c	fifo_tail = 0;
004168   6b44     clrf    0x44, 0x1        	CLRF	_fifo_tail, B
                                           ; removed redundant BANKSEL
00416a   6b45     clrf    0x45, 0x1        	CLRF	(_fifo_tail + 1), B
                                           _01111_DS_:
                                           ;	.line	4497; meter_logger.c	return 1;
00416c   0e01     movlw   0x1              	MOVLW	0x01
00416e   d001     bra     0x4172           	BRA	_01115_DS_
                                           _01113_DS_:
                                           ;	.line	4500; meter_logger.c	return 0;
004170   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _01115_DS_:
004172   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004174   f004
004176   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004178   f003
00417a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00417c   f002
00417e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004180   f001
004182   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004184   f000
004186   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004188   ffd9
00418a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_put	code
                                           _fifo_put:
                                           ;	.line	4448; meter_logger.c	unsigned char fifo_put(unsigned char c) {
0042c6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0042c8   ffe5
0042ca   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0042cc   ffd9
0042ce   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0042d0   ffe5
0042d2   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0042d4   ffe5
0042d6   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0042d8   ffe5
0042da   0e02     movlw   0x2              	MOVLW	0x02
0042dc   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0042de   f000
                                           ;	.line	4449; meter_logger.c	if (fifo_in_use() != QUEUE_SIZE_COMBINED) {
0042e0   ec9a     call    0x4f34, 0        	CALL	_fifo_in_use
0042e2   f027
0042e4   6e01     movwf   0x1, 0           	MOVWF	r0x01
0042e6   cff3     movff   0xff3, 0x2       	MOVFF	PRODL, r0x02
0042e8   f002
0042ea   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0042ec   e104     bnz     0x42f6           	BNZ	_01092_DS_
0042ee   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0042f0   0a04     xorlw   0x4              	XORLW	0x04
0042f2   e101     bnz     0x42f6           	BNZ	_01092_DS_
0042f4   d06d     bra     0x43d0           	BRA	_01078_DS_
                                           _01092_DS_:
0042f6   0105     movlb   0x5              	BANKSEL	(_fifo_head + 1)
                                           ;	.line	4450; meter_logger.c	switch (fifo_head/QUEUE_SIZE) {
0042f8   5143     movf    0x43, 0, 0x1     	MOVF	(_fifo_head + 1), W, B
0042fa   6e01     movwf   0x1, 0           	MOVWF	r0x01
0042fc   6a02     clrf    0x2, 0           	CLRF	r0x02
0042fe   0e00     movlw   0                	MOVLW	0x00
004300   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
004302   e102     bnz     0x4308           	BNZ	_01093_DS_
004304   0e04     movlw   0x4              	MOVLW	0x04
004306   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
                                           _01093_DS_:
004308   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00430a   d052     bra     0x43b0           	BRA	_01074_DS_
00430c   6afa     clrf    0xfa, 0          	CLRF	PCLATH
00430e   6afb     clrf    0xfb, 0          	CLRF	PCLATU
004310   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
004312   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
004314   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
004316   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
004318   0bfc     andlw   0xfc             	ANDLW	0xfc
00431a   0f2a     addlw   0x2a             	ADDLW	LOW(_01094_DS_)
00431c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00431e   0e43     movlw   0x43             	MOVLW	HIGH(_01094_DS_)
004320   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
004322   0e00     movlw   0                	MOVLW	UPPER(_01094_DS_)
004324   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
004326   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
004328   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01094_DS_:
00432a   ef9d     goto    0x433a           	GOTO	_01070_DS_
00432c   f021
00432e   efac     goto    0x4358           	GOTO	_01071_DS_
004330   f021
004332   efbb     goto    0x4376           	GOTO	_01072_DS_
004334   f021
004336   efca     goto    0x4394           	GOTO	_01073_DS_
004338   f021
                                           _01070_DS_:
00433a   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4452; meter_logger.c	fifo_buffer_0[fifo_head % QUEUE_SIZE] = c;
00433c   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
00433e   6e01     movwf   0x1, 0           	MOVWF	r0x01
004340   6a02     clrf    0x2, 0           	CLRF	r0x02
004342   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_0)
004344   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
004346   0e07     movlw   0x7              	MOVLW	HIGH(_fifo_buffer_0)
004348   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00434a   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
00434c   ffe9
00434e   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
004350   ffea
004352   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
004354   ffef
                                           ;	.line	4453; meter_logger.c	break;
004356   d02c     bra     0x43b0           	BRA	_01074_DS_
                                           _01071_DS_:
004358   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4455; meter_logger.c	fifo_buffer_1[fifo_head % QUEUE_SIZE] = c;
00435a   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
00435c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00435e   6a02     clrf    0x2, 0           	CLRF	r0x02
004360   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_1)
004362   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
004364   0e01     movlw   0x1              	MOVLW	HIGH(_fifo_buffer_1)
004366   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
004368   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
00436a   ffe9
00436c   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
00436e   ffea
004370   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
004372   ffef
                                           ;	.line	4456; meter_logger.c	break;
004374   d01d     bra     0x43b0           	BRA	_01074_DS_
                                           _01072_DS_:
004376   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4458; meter_logger.c	fifo_buffer_2[fifo_head % QUEUE_SIZE] = c;
004378   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
00437a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00437c   6a02     clrf    0x2, 0           	CLRF	r0x02
00437e   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_2)
004380   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
004382   0e02     movlw   0x2              	MOVLW	HIGH(_fifo_buffer_2)
004384   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
004386   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
004388   ffe9
00438a   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
00438c   ffea
00438e   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
004390   ffef
                                           ;	.line	4459; meter_logger.c	break;
004392   d00e     bra     0x43b0           	BRA	_01074_DS_
                                           _01073_DS_:
004394   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4461; meter_logger.c	fifo_buffer_3[fifo_head % QUEUE_SIZE] = c;
004396   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
004398   6e01     movwf   0x1, 0           	MOVWF	r0x01
00439a   6a02     clrf    0x2, 0           	CLRF	r0x02
00439c   0e00     movlw   0                	MOVLW	LOW(_fifo_buffer_3)
00439e   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
0043a0   0e03     movlw   0x3              	MOVLW	HIGH(_fifo_buffer_3)
0043a2   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0043a4   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0043a6   ffe9
0043a8   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0043aa   ffea
0043ac   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
0043ae   ffef
                                           _01074_DS_:
0043b0   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4464; meter_logger.c	fifo_head++;
0043b2   3f42     incfsz  0x42, 0x1, 0x1   	INCFSZ	_fifo_head, F, B
0043b4   d001     bra     0x43b8           	BRA	_21203_DS_
                                           ; removed redundant BANKSEL
0043b6   2b43     incf    0x43, 0x1, 0x1   	INCF	(_fifo_head + 1), F, B
                                           _21203_DS_:
0043b8   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4466; meter_logger.c	if (fifo_head == QUEUE_SIZE_COMBINED) {
0043ba   5142     movf    0x42, 0, 0x1     	MOVF	_fifo_head, W, B
0043bc   e103     bnz     0x43c4           	BNZ	_01099_DS_
                                           ; removed redundant BANKSEL
0043be   5143     movf    0x43, 0, 0x1     	MOVF	(_fifo_head + 1), W, B
0043c0   0a04     xorlw   0x4              	XORLW	0x04
0043c2   e001     bz      0x43c6           	BZ	_01100_DS_
                                           _01099_DS_:
0043c4   d003     bra     0x43cc           	BRA	_01076_DS_
                                           _01100_DS_:
0043c6   0105     movlb   0x5              	BANKSEL	_fifo_head
                                           ;	.line	4467; meter_logger.c	fifo_head = 0;
0043c8   6b42     clrf    0x42, 0x1        	CLRF	_fifo_head, B
                                           ; removed redundant BANKSEL
0043ca   6b43     clrf    0x43, 0x1        	CLRF	(_fifo_head + 1), B
                                           _01076_DS_:
                                           ;	.line	4469; meter_logger.c	return 1;
0043cc   0e01     movlw   0x1              	MOVLW	0x01
0043ce   d001     bra     0x43d2           	BRA	_01080_DS_
                                           _01078_DS_:
                                           ;	.line	4472; meter_logger.c	return 0;
0043d0   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _01080_DS_:
0043d2   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0043d4   f002
0043d6   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0043d8   f001
0043da   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0043dc   f000
0043de   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0043e0   ffd9
0043e2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fifo_in_use	code
                                           _fifo_in_use:
                                           ;	.line	4444; meter_logger.c	unsigned int fifo_in_use() {
004f34   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004f36   ffe5
004f38   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004f3a   ffd9
004f3c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004f3e   ffe5
004f40   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004f42   ffe5
004f44   0105     movlb   0x5              	BANKSEL	_fifo_tail
                                           ;	.line	4445; meter_logger.c	return fifo_head - fifo_tail;
004f46   5144     movf    0x44, 0, 0x1     	MOVF	_fifo_tail, W, B
004f48   0105     movlb   0x5              	BANKSEL	_fifo_head
004f4a   5d42     subwf   0x42, 0, 0x1     	SUBWF	_fifo_head, W, B
004f4c   6e00     movwf   0, 0             	MOVWF	r0x00
004f4e   0105     movlb   0x5              	BANKSEL	(_fifo_tail + 1)
004f50   5145     movf    0x45, 0, 0x1     	MOVF	(_fifo_tail + 1), W, B
004f52   0105     movlb   0x5              	BANKSEL	(_fifo_head + 1)
004f54   5943     subwfb  0x43, 0, 0x1     	SUBWFB	(_fifo_head + 1), W, B
004f56   6e01     movwf   0x1, 0           	MOVWF	r0x01
004f58   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
004f5a   fff3
004f5c   5000     movf    0, 0, 0          	MOVF	r0x00, W
004f5e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004f60   f001
004f62   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004f64   f000
004f66   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004f68   ffd9
004f6a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_byte	code
                                           _fsk_tx_byte:
                                           ;	.line	4436; meter_logger.c	void fsk_tx_byte(unsigned char c) {
0050c4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0050c6   ffe5
0050c8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0050ca   ffd9
0050cc   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0050ce   ffe5
0050d0   0e02     movlw   0x2              	MOVLW	0x02
0050d2   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0050d4   f000
                                           ;	.line	4437; meter_logger.c	fsk_proto.data = c;
0050d6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0050d8   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
0050da   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
                                           ;	.line	4438; meter_logger.c	fsk_proto.data_len = 8;
0050dc   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
0050de   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
                                           _01057_DS_:
0050e0   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	4439; meter_logger.c	while (fsk_proto.data_len) {
0050e2   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
0050e4   e1fd     bnz     0x50e0           	BNZ	_01057_DS_
0050e6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0050e8   f000
0050ea   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0050ec   ffd9
0050ee   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__send_fsk_low	code
                                           _send_fsk_low:
                                           ;	.line	2983; meter_logger.c	void send_fsk_low(void) {
0018fa   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0018fc   ffe5
0018fe   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
001900   ffd9
                                           ;	.line	2984; meter_logger.c	PWM_PIN = 1;
001902   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001904   0000     nop                      	nop
001906   0000     nop                      	nop
001908   0000     nop                      	nop
00190a   0000     nop                      	nop
00190c   0000     nop                      	nop
00190e   0000     nop                      	nop
001910   0000     nop                      	nop
001912   0000     nop                      	nop
001914   0000     nop                      	nop
001916   0000     nop                      	nop
001918   0000     nop                      	nop
00191a   0000     nop                      	nop
00191c   0000     nop                      	nop
00191e   0000     nop                      	nop
001920   0000     nop                      	nop
001922   0000     nop                      	nop
001924   0000     nop                      	nop
001926   0000     nop                      	nop
001928   0000     nop                      	nop
00192a   0000     nop                      	nop
00192c   0000     nop                      	nop
00192e   0000     nop                      	nop
001930   0000     nop                      	nop
001932   0000     nop                      	nop
001934   0000     nop                      	nop
001936   0000     nop                      	nop
001938   0000     nop                      	nop
00193a   0000     nop                      	nop
00193c   0000     nop                      	nop
00193e   0000     nop                      	nop
001940   0000     nop                      	nop
001942   0000     nop                      	nop
001944   0000     nop                      	nop
001946   0000     nop                      	nop
001948   0000     nop                      	nop
00194a   0000     nop                      	nop
00194c   0000     nop                      	nop
00194e   0000     nop                      	nop
001950   0000     nop                      	nop
001952   0000     nop                      	nop
001954   0000     nop                      	nop
001956   0000     nop                      	nop
001958   0000     nop                      	nop
00195a   0000     nop                      	nop
00195c   0000     nop                      	nop
00195e   0000     nop                      	nop
001960   0000     nop                      	nop
001962   0000     nop                      	nop
001964   0000     nop                      	nop
001966   0000     nop                      	nop
001968   0000     nop                      	nop
00196a   0000     nop                      	nop
00196c   0000     nop                      	nop
00196e   0000     nop                      	nop
001970   0000     nop                      	nop
001972   0000     nop                      	nop
001974   0000     nop                      	nop
001976   0000     nop                      	nop
001978   0000     nop                      	nop
00197a   0000     nop                      	nop
00197c   0000     nop                      	nop
00197e   0000     nop                      	nop
001980   0000     nop                      	nop
001982   0000     nop                      	nop
001984   0000     nop                      	nop
001986   0000     nop                      	nop
001988   0000     nop                      	nop
00198a   0000     nop                      	nop
00198c   0000     nop                      	nop
00198e   0000     nop                      	nop
001990   0000     nop                      	nop
001992   0000     nop                      	nop
001994   0000     nop                      	nop
001996   0000     nop                      	nop
001998   0000     nop                      	nop
00199a   0000     nop                      	nop
00199c   0000     nop                      	nop
00199e   0000     nop                      	nop
0019a0   0000     nop                      	nop
0019a2   0000     nop                      	nop
0019a4   0000     nop                      	nop
0019a6   0000     nop                      	nop
0019a8   0000     nop                      	nop
0019aa   0000     nop                      	nop
0019ac   0000     nop                      	nop
0019ae   0000     nop                      	nop
0019b0   0000     nop                      	nop
0019b2   0000     nop                      	nop
0019b4   0000     nop                      	nop
0019b6   0000     nop                      	nop
0019b8   0000     nop                      	nop
0019ba   0000     nop                      	nop
0019bc   0000     nop                      	nop
0019be   0000     nop                      	nop
0019c0   0000     nop                      	nop
0019c2   0000     nop                      	nop
0019c4   0000     nop                      	nop
0019c6   0000     nop                      	nop
0019c8   0000     nop                      	nop
0019ca   0000     nop                      	nop
0019cc   0000     nop                      	nop
0019ce   0000     nop                      	nop
0019d0   0000     nop                      	nop
0019d2   0000     nop                      	nop
0019d4   0000     nop                      	nop
0019d6   0000     nop                      	nop
0019d8   0000     nop                      	nop
0019da   0000     nop                      	nop
0019dc   0000     nop                      	nop
0019de   0000     nop                      	nop
0019e0   0000     nop                      	nop
0019e2   0000     nop                      	nop
0019e4   0000     nop                      	nop
0019e6   0000     nop                      	nop
0019e8   0000     nop                      	nop
0019ea   0000     nop                      	nop
0019ec   0000     nop                      	nop
0019ee   0000     nop                      	nop
0019f0   0000     nop                      	nop
0019f2   0000     nop                      	nop
0019f4   0000     nop                      	nop
0019f6   0000     nop                      	nop
0019f8   0000     nop                      	nop
0019fa   0000     nop                      	nop
0019fc   0000     nop                      	nop
0019fe   0000     nop                      	nop
001a00   0000     nop                      	nop
001a02   0000     nop                      	nop
001a04   0000     nop                      	nop
001a06   0000     nop                      	nop
001a08   0000     nop                      	nop
001a0a   0000     nop                      	nop
001a0c   0000     nop                      	nop
001a0e   0000     nop                      	nop
001a10   0000     nop                      	nop
001a12   0000     nop                      	nop
001a14   0000     nop                      	nop
001a16   0000     nop                      	nop
001a18   0000     nop                      	nop
001a1a   0000     nop                      	nop
001a1c   0000     nop                      	nop
001a1e   0000     nop                      	nop
001a20   0000     nop                      	nop
001a22   0000     nop                      	nop
001a24   0000     nop                      	nop
001a26   0000     nop                      	nop
001a28   0000     nop                      	nop
001a2a   0000     nop                      	nop
001a2c   0000     nop                      	nop
001a2e   0000     nop                      	nop
001a30   0000     nop                      	nop
001a32   0000     nop                      	nop
001a34   0000     nop                      	nop
001a36   0000     nop                      	nop
001a38   0000     nop                      	nop
001a3a   0000     nop                      	nop
001a3c   0000     nop                      	nop
001a3e   0000     nop                      	nop
001a40   0000     nop                      	nop
001a42   0000     nop                      	nop
001a44   0000     nop                      	nop
001a46   0000     nop                      	nop
001a48   0000     nop                      	nop
001a4a   0000     nop                      	nop
001a4c   0000     nop                      	nop
001a4e   0000     nop                      	nop
001a50   0000     nop                      	nop
001a52   0000     nop                      	nop
001a54   0000     nop                      	nop
001a56   0000     nop                      	nop
001a58   0000     nop                      	nop
001a5a   0000     nop                      	nop
001a5c   0000     nop                      	nop
001a5e   0000     nop                      	nop
001a60   0000     nop                      	nop
001a62   0000     nop                      	nop
001a64   0000     nop                      	nop
001a66   0000     nop                      	nop
001a68   0000     nop                      	nop
001a6a   0000     nop                      	nop
001a6c   0000     nop                      	nop
001a6e   0000     nop                      	nop
001a70   0000     nop                      	nop
001a72   0000     nop                      	nop
001a74   0000     nop                      	nop
001a76   0000     nop                      	nop
001a78   0000     nop                      	nop
001a7a   0000     nop                      	nop
001a7c   0000     nop                      	nop
001a7e   0000     nop                      	nop
001a80   0000     nop                      	nop
001a82   0000     nop                      	nop
001a84   0000     nop                      	nop
001a86   0000     nop                      	nop
001a88   0000     nop                      	nop
001a8a   0000     nop                      	nop
001a8c   0000     nop                      	nop
001a8e   0000     nop                      	nop
001a90   0000     nop                      	nop
001a92   0000     nop                      	nop
001a94   0000     nop                      	nop
001a96   0000     nop                      	nop
001a98   0000     nop                      	nop
001a9a   0000     nop                      	nop
                                           	
                                           ;	.line	3191; meter_logger.c	PWM_PIN = 0;
001a9c   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001a9e   0000     nop                      	nop
001aa0   0000     nop                      	nop
001aa2   0000     nop                      	nop
001aa4   0000     nop                      	nop
001aa6   0000     nop                      	nop
001aa8   0000     nop                      	nop
001aaa   0000     nop                      	nop
001aac   0000     nop                      	nop
001aae   0000     nop                      	nop
001ab0   0000     nop                      	nop
001ab2   0000     nop                      	nop
001ab4   0000     nop                      	nop
001ab6   0000     nop                      	nop
001ab8   0000     nop                      	nop
001aba   0000     nop                      	nop
001abc   0000     nop                      	nop
001abe   0000     nop                      	nop
001ac0   0000     nop                      	nop
001ac2   0000     nop                      	nop
001ac4   0000     nop                      	nop
001ac6   0000     nop                      	nop
001ac8   0000     nop                      	nop
001aca   0000     nop                      	nop
001acc   0000     nop                      	nop
001ace   0000     nop                      	nop
001ad0   0000     nop                      	nop
001ad2   0000     nop                      	nop
001ad4   0000     nop                      	nop
001ad6   0000     nop                      	nop
001ad8   0000     nop                      	nop
001ada   0000     nop                      	nop
001adc   0000     nop                      	nop
001ade   0000     nop                      	nop
001ae0   0000     nop                      	nop
001ae2   0000     nop                      	nop
001ae4   0000     nop                      	nop
001ae6   0000     nop                      	nop
001ae8   0000     nop                      	nop
001aea   0000     nop                      	nop
001aec   0000     nop                      	nop
001aee   0000     nop                      	nop
001af0   0000     nop                      	nop
001af2   0000     nop                      	nop
001af4   0000     nop                      	nop
001af6   0000     nop                      	nop
001af8   0000     nop                      	nop
001afa   0000     nop                      	nop
001afc   0000     nop                      	nop
001afe   0000     nop                      	nop
001b00   0000     nop                      	nop
001b02   0000     nop                      	nop
001b04   0000     nop                      	nop
001b06   0000     nop                      	nop
001b08   0000     nop                      	nop
001b0a   0000     nop                      	nop
001b0c   0000     nop                      	nop
001b0e   0000     nop                      	nop
001b10   0000     nop                      	nop
001b12   0000     nop                      	nop
001b14   0000     nop                      	nop
001b16   0000     nop                      	nop
001b18   0000     nop                      	nop
001b1a   0000     nop                      	nop
001b1c   0000     nop                      	nop
001b1e   0000     nop                      	nop
001b20   0000     nop                      	nop
001b22   0000     nop                      	nop
001b24   0000     nop                      	nop
001b26   0000     nop                      	nop
001b28   0000     nop                      	nop
001b2a   0000     nop                      	nop
001b2c   0000     nop                      	nop
001b2e   0000     nop                      	nop
001b30   0000     nop                      	nop
001b32   0000     nop                      	nop
001b34   0000     nop                      	nop
001b36   0000     nop                      	nop
001b38   0000     nop                      	nop
001b3a   0000     nop                      	nop
001b3c   0000     nop                      	nop
001b3e   0000     nop                      	nop
001b40   0000     nop                      	nop
001b42   0000     nop                      	nop
001b44   0000     nop                      	nop
001b46   0000     nop                      	nop
001b48   0000     nop                      	nop
001b4a   0000     nop                      	nop
001b4c   0000     nop                      	nop
001b4e   0000     nop                      	nop
001b50   0000     nop                      	nop
001b52   0000     nop                      	nop
001b54   0000     nop                      	nop
001b56   0000     nop                      	nop
001b58   0000     nop                      	nop
001b5a   0000     nop                      	nop
001b5c   0000     nop                      	nop
001b5e   0000     nop                      	nop
001b60   0000     nop                      	nop
001b62   0000     nop                      	nop
001b64   0000     nop                      	nop
001b66   0000     nop                      	nop
001b68   0000     nop                      	nop
001b6a   0000     nop                      	nop
001b6c   0000     nop                      	nop
001b6e   0000     nop                      	nop
001b70   0000     nop                      	nop
001b72   0000     nop                      	nop
001b74   0000     nop                      	nop
001b76   0000     nop                      	nop
001b78   0000     nop                      	nop
001b7a   0000     nop                      	nop
001b7c   0000     nop                      	nop
001b7e   0000     nop                      	nop
001b80   0000     nop                      	nop
001b82   0000     nop                      	nop
001b84   0000     nop                      	nop
001b86   0000     nop                      	nop
001b88   0000     nop                      	nop
001b8a   0000     nop                      	nop
001b8c   0000     nop                      	nop
001b8e   0000     nop                      	nop
001b90   0000     nop                      	nop
001b92   0000     nop                      	nop
001b94   0000     nop                      	nop
001b96   0000     nop                      	nop
001b98   0000     nop                      	nop
001b9a   0000     nop                      	nop
001b9c   0000     nop                      	nop
001b9e   0000     nop                      	nop
001ba0   0000     nop                      	nop
001ba2   0000     nop                      	nop
001ba4   0000     nop                      	nop
001ba6   0000     nop                      	nop
001ba8   0000     nop                      	nop
001baa   0000     nop                      	nop
001bac   0000     nop                      	nop
001bae   0000     nop                      	nop
001bb0   0000     nop                      	nop
001bb2   0000     nop                      	nop
001bb4   0000     nop                      	nop
001bb6   0000     nop                      	nop
001bb8   0000     nop                      	nop
001bba   0000     nop                      	nop
001bbc   0000     nop                      	nop
001bbe   0000     nop                      	nop
001bc0   0000     nop                      	nop
001bc2   0000     nop                      	nop
001bc4   0000     nop                      	nop
001bc6   0000     nop                      	nop
001bc8   0000     nop                      	nop
001bca   0000     nop                      	nop
001bcc   0000     nop                      	nop
001bce   0000     nop                      	nop
001bd0   0000     nop                      	nop
001bd2   0000     nop                      	nop
001bd4   0000     nop                      	nop
001bd6   0000     nop                      	nop
001bd8   0000     nop                      	nop
001bda   0000     nop                      	nop
001bdc   0000     nop                      	nop
001bde   0000     nop                      	nop
001be0   0000     nop                      	nop
001be2   0000     nop                      	nop
001be4   0000     nop                      	nop
001be6   0000     nop                      	nop
001be8   0000     nop                      	nop
001bea   0000     nop                      	nop
001bec   0000     nop                      	nop
001bee   0000     nop                      	nop
001bf0   0000     nop                      	nop
001bf2   0000     nop                      	nop
001bf4   0000     nop                      	nop
001bf6   0000     nop                      	nop
001bf8   0000     nop                      	nop
001bfa   0000     nop                      	nop
001bfc   0000     nop                      	nop
001bfe   0000     nop                      	nop
001c00   0000     nop                      	nop
001c02   0000     nop                      	nop
001c04   0000     nop                      	nop
001c06   0000     nop                      	nop
001c08   0000     nop                      	nop
001c0a   0000     nop                      	nop
001c0c   0000     nop                      	nop
001c0e   0000     nop                      	nop
001c10   0000     nop                      	nop
001c12   0000     nop                      	nop
001c14   0000     nop                      	nop
001c16   0000     nop                      	nop
001c18   0000     nop                      	nop
001c1a   0000     nop                      	nop
001c1c   0000     nop                      	nop
001c1e   0000     nop                      	nop
001c20   0000     nop                      	nop
001c22   0000     nop                      	nop
001c24   0000     nop                      	nop
001c26   0000     nop                      	nop
001c28   0000     nop                      	nop
001c2a   0000     nop                      	nop
001c2c   0000     nop                      	nop
001c2e   0000     nop                      	nop
001c30   0000     nop                      	nop
001c32   0000     nop                      	nop
001c34   0000     nop                      	nop
                                           	
                                           ;	.line	3398; meter_logger.c	PWM_PIN = 1;
001c36   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001c38   0000     nop                      	nop
001c3a   0000     nop                      	nop
001c3c   0000     nop                      	nop
001c3e   0000     nop                      	nop
001c40   0000     nop                      	nop
001c42   0000     nop                      	nop
001c44   0000     nop                      	nop
001c46   0000     nop                      	nop
001c48   0000     nop                      	nop
001c4a   0000     nop                      	nop
001c4c   0000     nop                      	nop
001c4e   0000     nop                      	nop
001c50   0000     nop                      	nop
001c52   0000     nop                      	nop
001c54   0000     nop                      	nop
001c56   0000     nop                      	nop
001c58   0000     nop                      	nop
001c5a   0000     nop                      	nop
001c5c   0000     nop                      	nop
001c5e   0000     nop                      	nop
001c60   0000     nop                      	nop
001c62   0000     nop                      	nop
001c64   0000     nop                      	nop
001c66   0000     nop                      	nop
001c68   0000     nop                      	nop
001c6a   0000     nop                      	nop
001c6c   0000     nop                      	nop
001c6e   0000     nop                      	nop
001c70   0000     nop                      	nop
001c72   0000     nop                      	nop
001c74   0000     nop                      	nop
001c76   0000     nop                      	nop
001c78   0000     nop                      	nop
001c7a   0000     nop                      	nop
001c7c   0000     nop                      	nop
001c7e   0000     nop                      	nop
001c80   0000     nop                      	nop
001c82   0000     nop                      	nop
001c84   0000     nop                      	nop
001c86   0000     nop                      	nop
001c88   0000     nop                      	nop
001c8a   0000     nop                      	nop
001c8c   0000     nop                      	nop
001c8e   0000     nop                      	nop
001c90   0000     nop                      	nop
001c92   0000     nop                      	nop
001c94   0000     nop                      	nop
001c96   0000     nop                      	nop
001c98   0000     nop                      	nop
001c9a   0000     nop                      	nop
001c9c   0000     nop                      	nop
001c9e   0000     nop                      	nop
001ca0   0000     nop                      	nop
001ca2   0000     nop                      	nop
001ca4   0000     nop                      	nop
001ca6   0000     nop                      	nop
001ca8   0000     nop                      	nop
001caa   0000     nop                      	nop
001cac   0000     nop                      	nop
001cae   0000     nop                      	nop
001cb0   0000     nop                      	nop
001cb2   0000     nop                      	nop
001cb4   0000     nop                      	nop
001cb6   0000     nop                      	nop
001cb8   0000     nop                      	nop
001cba   0000     nop                      	nop
001cbc   0000     nop                      	nop
001cbe   0000     nop                      	nop
001cc0   0000     nop                      	nop
001cc2   0000     nop                      	nop
001cc4   0000     nop                      	nop
001cc6   0000     nop                      	nop
001cc8   0000     nop                      	nop
001cca   0000     nop                      	nop
001ccc   0000     nop                      	nop
001cce   0000     nop                      	nop
001cd0   0000     nop                      	nop
001cd2   0000     nop                      	nop
001cd4   0000     nop                      	nop
001cd6   0000     nop                      	nop
001cd8   0000     nop                      	nop
001cda   0000     nop                      	nop
001cdc   0000     nop                      	nop
001cde   0000     nop                      	nop
001ce0   0000     nop                      	nop
001ce2   0000     nop                      	nop
001ce4   0000     nop                      	nop
001ce6   0000     nop                      	nop
001ce8   0000     nop                      	nop
001cea   0000     nop                      	nop
001cec   0000     nop                      	nop
001cee   0000     nop                      	nop
001cf0   0000     nop                      	nop
001cf2   0000     nop                      	nop
001cf4   0000     nop                      	nop
001cf6   0000     nop                      	nop
001cf8   0000     nop                      	nop
001cfa   0000     nop                      	nop
001cfc   0000     nop                      	nop
001cfe   0000     nop                      	nop
001d00   0000     nop                      	nop
001d02   0000     nop                      	nop
001d04   0000     nop                      	nop
001d06   0000     nop                      	nop
001d08   0000     nop                      	nop
001d0a   0000     nop                      	nop
001d0c   0000     nop                      	nop
001d0e   0000     nop                      	nop
001d10   0000     nop                      	nop
001d12   0000     nop                      	nop
001d14   0000     nop                      	nop
001d16   0000     nop                      	nop
001d18   0000     nop                      	nop
001d1a   0000     nop                      	nop
001d1c   0000     nop                      	nop
001d1e   0000     nop                      	nop
001d20   0000     nop                      	nop
001d22   0000     nop                      	nop
001d24   0000     nop                      	nop
001d26   0000     nop                      	nop
001d28   0000     nop                      	nop
001d2a   0000     nop                      	nop
001d2c   0000     nop                      	nop
001d2e   0000     nop                      	nop
001d30   0000     nop                      	nop
001d32   0000     nop                      	nop
001d34   0000     nop                      	nop
001d36   0000     nop                      	nop
001d38   0000     nop                      	nop
001d3a   0000     nop                      	nop
001d3c   0000     nop                      	nop
001d3e   0000     nop                      	nop
001d40   0000     nop                      	nop
001d42   0000     nop                      	nop
001d44   0000     nop                      	nop
001d46   0000     nop                      	nop
001d48   0000     nop                      	nop
001d4a   0000     nop                      	nop
001d4c   0000     nop                      	nop
001d4e   0000     nop                      	nop
001d50   0000     nop                      	nop
001d52   0000     nop                      	nop
001d54   0000     nop                      	nop
001d56   0000     nop                      	nop
001d58   0000     nop                      	nop
001d5a   0000     nop                      	nop
001d5c   0000     nop                      	nop
001d5e   0000     nop                      	nop
001d60   0000     nop                      	nop
001d62   0000     nop                      	nop
001d64   0000     nop                      	nop
001d66   0000     nop                      	nop
001d68   0000     nop                      	nop
001d6a   0000     nop                      	nop
001d6c   0000     nop                      	nop
001d6e   0000     nop                      	nop
001d70   0000     nop                      	nop
001d72   0000     nop                      	nop
001d74   0000     nop                      	nop
001d76   0000     nop                      	nop
001d78   0000     nop                      	nop
001d7a   0000     nop                      	nop
001d7c   0000     nop                      	nop
001d7e   0000     nop                      	nop
001d80   0000     nop                      	nop
001d82   0000     nop                      	nop
001d84   0000     nop                      	nop
001d86   0000     nop                      	nop
001d88   0000     nop                      	nop
001d8a   0000     nop                      	nop
001d8c   0000     nop                      	nop
001d8e   0000     nop                      	nop
001d90   0000     nop                      	nop
001d92   0000     nop                      	nop
001d94   0000     nop                      	nop
001d96   0000     nop                      	nop
001d98   0000     nop                      	nop
001d9a   0000     nop                      	nop
001d9c   0000     nop                      	nop
001d9e   0000     nop                      	nop
001da0   0000     nop                      	nop
001da2   0000     nop                      	nop
001da4   0000     nop                      	nop
001da6   0000     nop                      	nop
001da8   0000     nop                      	nop
001daa   0000     nop                      	nop
001dac   0000     nop                      	nop
001dae   0000     nop                      	nop
001db0   0000     nop                      	nop
001db2   0000     nop                      	nop
001db4   0000     nop                      	nop
001db6   0000     nop                      	nop
001db8   0000     nop                      	nop
001dba   0000     nop                      	nop
001dbc   0000     nop                      	nop
001dbe   0000     nop                      	nop
001dc0   0000     nop                      	nop
001dc2   0000     nop                      	nop
001dc4   0000     nop                      	nop
001dc6   0000     nop                      	nop
001dc8   0000     nop                      	nop
001dca   0000     nop                      	nop
001dcc   0000     nop                      	nop
001dce   0000     nop                      	nop
                                           	
                                           ;	.line	3605; meter_logger.c	PWM_PIN = 0;
001dd0   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001dd2   0000     nop                      	nop
001dd4   0000     nop                      	nop
001dd6   0000     nop                      	nop
001dd8   0000     nop                      	nop
001dda   0000     nop                      	nop
001ddc   0000     nop                      	nop
001dde   0000     nop                      	nop
001de0   0000     nop                      	nop
001de2   0000     nop                      	nop
001de4   0000     nop                      	nop
001de6   0000     nop                      	nop
001de8   0000     nop                      	nop
001dea   0000     nop                      	nop
001dec   0000     nop                      	nop
001dee   0000     nop                      	nop
001df0   0000     nop                      	nop
001df2   0000     nop                      	nop
001df4   0000     nop                      	nop
001df6   0000     nop                      	nop
001df8   0000     nop                      	nop
001dfa   0000     nop                      	nop
001dfc   0000     nop                      	nop
001dfe   0000     nop                      	nop
001e00   0000     nop                      	nop
001e02   0000     nop                      	nop
001e04   0000     nop                      	nop
001e06   0000     nop                      	nop
001e08   0000     nop                      	nop
001e0a   0000     nop                      	nop
001e0c   0000     nop                      	nop
001e0e   0000     nop                      	nop
001e10   0000     nop                      	nop
001e12   0000     nop                      	nop
001e14   0000     nop                      	nop
001e16   0000     nop                      	nop
001e18   0000     nop                      	nop
001e1a   0000     nop                      	nop
001e1c   0000     nop                      	nop
001e1e   0000     nop                      	nop
001e20   0000     nop                      	nop
001e22   0000     nop                      	nop
001e24   0000     nop                      	nop
001e26   0000     nop                      	nop
001e28   0000     nop                      	nop
001e2a   0000     nop                      	nop
001e2c   0000     nop                      	nop
001e2e   0000     nop                      	nop
001e30   0000     nop                      	nop
001e32   0000     nop                      	nop
001e34   0000     nop                      	nop
001e36   0000     nop                      	nop
001e38   0000     nop                      	nop
001e3a   0000     nop                      	nop
001e3c   0000     nop                      	nop
001e3e   0000     nop                      	nop
001e40   0000     nop                      	nop
001e42   0000     nop                      	nop
001e44   0000     nop                      	nop
001e46   0000     nop                      	nop
001e48   0000     nop                      	nop
001e4a   0000     nop                      	nop
001e4c   0000     nop                      	nop
001e4e   0000     nop                      	nop
001e50   0000     nop                      	nop
001e52   0000     nop                      	nop
001e54   0000     nop                      	nop
001e56   0000     nop                      	nop
001e58   0000     nop                      	nop
001e5a   0000     nop                      	nop
001e5c   0000     nop                      	nop
001e5e   0000     nop                      	nop
001e60   0000     nop                      	nop
001e62   0000     nop                      	nop
001e64   0000     nop                      	nop
001e66   0000     nop                      	nop
001e68   0000     nop                      	nop
001e6a   0000     nop                      	nop
001e6c   0000     nop                      	nop
001e6e   0000     nop                      	nop
001e70   0000     nop                      	nop
001e72   0000     nop                      	nop
001e74   0000     nop                      	nop
001e76   0000     nop                      	nop
001e78   0000     nop                      	nop
001e7a   0000     nop                      	nop
001e7c   0000     nop                      	nop
001e7e   0000     nop                      	nop
001e80   0000     nop                      	nop
001e82   0000     nop                      	nop
001e84   0000     nop                      	nop
001e86   0000     nop                      	nop
001e88   0000     nop                      	nop
001e8a   0000     nop                      	nop
001e8c   0000     nop                      	nop
001e8e   0000     nop                      	nop
001e90   0000     nop                      	nop
001e92   0000     nop                      	nop
001e94   0000     nop                      	nop
001e96   0000     nop                      	nop
001e98   0000     nop                      	nop
001e9a   0000     nop                      	nop
001e9c   0000     nop                      	nop
001e9e   0000     nop                      	nop
001ea0   0000     nop                      	nop
001ea2   0000     nop                      	nop
001ea4   0000     nop                      	nop
001ea6   0000     nop                      	nop
001ea8   0000     nop                      	nop
001eaa   0000     nop                      	nop
001eac   0000     nop                      	nop
001eae   0000     nop                      	nop
001eb0   0000     nop                      	nop
001eb2   0000     nop                      	nop
001eb4   0000     nop                      	nop
001eb6   0000     nop                      	nop
001eb8   0000     nop                      	nop
001eba   0000     nop                      	nop
001ebc   0000     nop                      	nop
001ebe   0000     nop                      	nop
001ec0   0000     nop                      	nop
001ec2   0000     nop                      	nop
001ec4   0000     nop                      	nop
001ec6   0000     nop                      	nop
001ec8   0000     nop                      	nop
001eca   0000     nop                      	nop
001ecc   0000     nop                      	nop
001ece   0000     nop                      	nop
001ed0   0000     nop                      	nop
001ed2   0000     nop                      	nop
001ed4   0000     nop                      	nop
001ed6   0000     nop                      	nop
001ed8   0000     nop                      	nop
001eda   0000     nop                      	nop
001edc   0000     nop                      	nop
001ede   0000     nop                      	nop
001ee0   0000     nop                      	nop
001ee2   0000     nop                      	nop
001ee4   0000     nop                      	nop
001ee6   0000     nop                      	nop
001ee8   0000     nop                      	nop
001eea   0000     nop                      	nop
001eec   0000     nop                      	nop
001eee   0000     nop                      	nop
001ef0   0000     nop                      	nop
001ef2   0000     nop                      	nop
001ef4   0000     nop                      	nop
001ef6   0000     nop                      	nop
001ef8   0000     nop                      	nop
001efa   0000     nop                      	nop
001efc   0000     nop                      	nop
001efe   0000     nop                      	nop
001f00   0000     nop                      	nop
001f02   0000     nop                      	nop
001f04   0000     nop                      	nop
001f06   0000     nop                      	nop
001f08   0000     nop                      	nop
001f0a   0000     nop                      	nop
001f0c   0000     nop                      	nop
001f0e   0000     nop                      	nop
001f10   0000     nop                      	nop
001f12   0000     nop                      	nop
001f14   0000     nop                      	nop
001f16   0000     nop                      	nop
001f18   0000     nop                      	nop
001f1a   0000     nop                      	nop
001f1c   0000     nop                      	nop
001f1e   0000     nop                      	nop
001f20   0000     nop                      	nop
001f22   0000     nop                      	nop
001f24   0000     nop                      	nop
001f26   0000     nop                      	nop
001f28   0000     nop                      	nop
001f2a   0000     nop                      	nop
001f2c   0000     nop                      	nop
001f2e   0000     nop                      	nop
001f30   0000     nop                      	nop
001f32   0000     nop                      	nop
001f34   0000     nop                      	nop
001f36   0000     nop                      	nop
001f38   0000     nop                      	nop
001f3a   0000     nop                      	nop
001f3c   0000     nop                      	nop
001f3e   0000     nop                      	nop
001f40   0000     nop                      	nop
001f42   0000     nop                      	nop
001f44   0000     nop                      	nop
001f46   0000     nop                      	nop
001f48   0000     nop                      	nop
001f4a   0000     nop                      	nop
001f4c   0000     nop                      	nop
001f4e   0000     nop                      	nop
001f50   0000     nop                      	nop
001f52   0000     nop                      	nop
001f54   0000     nop                      	nop
001f56   0000     nop                      	nop
001f58   0000     nop                      	nop
001f5a   0000     nop                      	nop
001f5c   0000     nop                      	nop
001f5e   0000     nop                      	nop
001f60   0000     nop                      	nop
001f62   0000     nop                      	nop
001f64   0000     nop                      	nop
001f66   0000     nop                      	nop
001f68   0000     nop                      	nop
                                           	
                                           ;	.line	3812; meter_logger.c	PWM_PIN = 1;
001f6a   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001f6c   0000     nop                      	nop
001f6e   0000     nop                      	nop
001f70   0000     nop                      	nop
001f72   0000     nop                      	nop
001f74   0000     nop                      	nop
001f76   0000     nop                      	nop
001f78   0000     nop                      	nop
001f7a   0000     nop                      	nop
001f7c   0000     nop                      	nop
001f7e   0000     nop                      	nop
001f80   0000     nop                      	nop
001f82   0000     nop                      	nop
001f84   0000     nop                      	nop
001f86   0000     nop                      	nop
001f88   0000     nop                      	nop
001f8a   0000     nop                      	nop
001f8c   0000     nop                      	nop
001f8e   0000     nop                      	nop
001f90   0000     nop                      	nop
001f92   0000     nop                      	nop
001f94   0000     nop                      	nop
001f96   0000     nop                      	nop
001f98   0000     nop                      	nop
001f9a   0000     nop                      	nop
001f9c   0000     nop                      	nop
001f9e   0000     nop                      	nop
001fa0   0000     nop                      	nop
001fa2   0000     nop                      	nop
001fa4   0000     nop                      	nop
001fa6   0000     nop                      	nop
001fa8   0000     nop                      	nop
001faa   0000     nop                      	nop
001fac   0000     nop                      	nop
001fae   0000     nop                      	nop
001fb0   0000     nop                      	nop
001fb2   0000     nop                      	nop
001fb4   0000     nop                      	nop
001fb6   0000     nop                      	nop
001fb8   0000     nop                      	nop
001fba   0000     nop                      	nop
001fbc   0000     nop                      	nop
001fbe   0000     nop                      	nop
001fc0   0000     nop                      	nop
001fc2   0000     nop                      	nop
001fc4   0000     nop                      	nop
001fc6   0000     nop                      	nop
001fc8   0000     nop                      	nop
001fca   0000     nop                      	nop
001fcc   0000     nop                      	nop
001fce   0000     nop                      	nop
001fd0   0000     nop                      	nop
001fd2   0000     nop                      	nop
001fd4   0000     nop                      	nop
001fd6   0000     nop                      	nop
001fd8   0000     nop                      	nop
001fda   0000     nop                      	nop
001fdc   0000     nop                      	nop
001fde   0000     nop                      	nop
001fe0   0000     nop                      	nop
001fe2   0000     nop                      	nop
001fe4   0000     nop                      	nop
001fe6   0000     nop                      	nop
001fe8   0000     nop                      	nop
001fea   0000     nop                      	nop
001fec   0000     nop                      	nop
001fee   0000     nop                      	nop
001ff0   0000     nop                      	nop
001ff2   0000     nop                      	nop
001ff4   0000     nop                      	nop
001ff6   0000     nop                      	nop
001ff8   0000     nop                      	nop
001ffa   0000     nop                      	nop
001ffc   0000     nop                      	nop
001ffe   0000     nop                      	nop
002000   0000     nop                      	nop
002002   0000     nop                      	nop
002004   0000     nop                      	nop
002006   0000     nop                      	nop
002008   0000     nop                      	nop
00200a   0000     nop                      	nop
00200c   0000     nop                      	nop
00200e   0000     nop                      	nop
002010   0000     nop                      	nop
002012   0000     nop                      	nop
002014   0000     nop                      	nop
002016   0000     nop                      	nop
002018   0000     nop                      	nop
00201a   0000     nop                      	nop
00201c   0000     nop                      	nop
00201e   0000     nop                      	nop
002020   0000     nop                      	nop
002022   0000     nop                      	nop
002024   0000     nop                      	nop
002026   0000     nop                      	nop
002028   0000     nop                      	nop
00202a   0000     nop                      	nop
00202c   0000     nop                      	nop
00202e   0000     nop                      	nop
002030   0000     nop                      	nop
002032   0000     nop                      	nop
002034   0000     nop                      	nop
002036   0000     nop                      	nop
002038   0000     nop                      	nop
00203a   0000     nop                      	nop
00203c   0000     nop                      	nop
00203e   0000     nop                      	nop
002040   0000     nop                      	nop
002042   0000     nop                      	nop
002044   0000     nop                      	nop
002046   0000     nop                      	nop
002048   0000     nop                      	nop
00204a   0000     nop                      	nop
00204c   0000     nop                      	nop
00204e   0000     nop                      	nop
002050   0000     nop                      	nop
002052   0000     nop                      	nop
002054   0000     nop                      	nop
002056   0000     nop                      	nop
002058   0000     nop                      	nop
00205a   0000     nop                      	nop
00205c   0000     nop                      	nop
00205e   0000     nop                      	nop
002060   0000     nop                      	nop
002062   0000     nop                      	nop
002064   0000     nop                      	nop
002066   0000     nop                      	nop
002068   0000     nop                      	nop
00206a   0000     nop                      	nop
00206c   0000     nop                      	nop
00206e   0000     nop                      	nop
002070   0000     nop                      	nop
002072   0000     nop                      	nop
002074   0000     nop                      	nop
002076   0000     nop                      	nop
002078   0000     nop                      	nop
00207a   0000     nop                      	nop
00207c   0000     nop                      	nop
00207e   0000     nop                      	nop
002080   0000     nop                      	nop
002082   0000     nop                      	nop
002084   0000     nop                      	nop
002086   0000     nop                      	nop
002088   0000     nop                      	nop
00208a   0000     nop                      	nop
00208c   0000     nop                      	nop
00208e   0000     nop                      	nop
002090   0000     nop                      	nop
002092   0000     nop                      	nop
002094   0000     nop                      	nop
002096   0000     nop                      	nop
002098   0000     nop                      	nop
00209a   0000     nop                      	nop
00209c   0000     nop                      	nop
00209e   0000     nop                      	nop
0020a0   0000     nop                      	nop
0020a2   0000     nop                      	nop
0020a4   0000     nop                      	nop
0020a6   0000     nop                      	nop
0020a8   0000     nop                      	nop
0020aa   0000     nop                      	nop
0020ac   0000     nop                      	nop
0020ae   0000     nop                      	nop
0020b0   0000     nop                      	nop
0020b2   0000     nop                      	nop
0020b4   0000     nop                      	nop
0020b6   0000     nop                      	nop
0020b8   0000     nop                      	nop
0020ba   0000     nop                      	nop
0020bc   0000     nop                      	nop
0020be   0000     nop                      	nop
0020c0   0000     nop                      	nop
0020c2   0000     nop                      	nop
0020c4   0000     nop                      	nop
0020c6   0000     nop                      	nop
0020c8   0000     nop                      	nop
0020ca   0000     nop                      	nop
0020cc   0000     nop                      	nop
0020ce   0000     nop                      	nop
0020d0   0000     nop                      	nop
0020d2   0000     nop                      	nop
0020d4   0000     nop                      	nop
0020d6   0000     nop                      	nop
0020d8   0000     nop                      	nop
0020da   0000     nop                      	nop
0020dc   0000     nop                      	nop
0020de   0000     nop                      	nop
0020e0   0000     nop                      	nop
0020e2   0000     nop                      	nop
0020e4   0000     nop                      	nop
0020e6   0000     nop                      	nop
0020e8   0000     nop                      	nop
0020ea   0000     nop                      	nop
0020ec   0000     nop                      	nop
0020ee   0000     nop                      	nop
0020f0   0000     nop                      	nop
0020f2   0000     nop                      	nop
0020f4   0000     nop                      	nop
0020f6   0000     nop                      	nop
0020f8   0000     nop                      	nop
0020fa   0000     nop                      	nop
0020fc   0000     nop                      	nop
0020fe   0000     nop                      	nop
002100   0000     nop                      	nop
002102   0000     nop                      	nop
                                           	
                                           ;	.line	4019; meter_logger.c	PWM_PIN = 0;
002104   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
002106   0000     nop                      	nop
002108   0000     nop                      	nop
00210a   0000     nop                      	nop
00210c   0000     nop                      	nop
00210e   0000     nop                      	nop
002110   0000     nop                      	nop
002112   0000     nop                      	nop
002114   0000     nop                      	nop
002116   0000     nop                      	nop
002118   0000     nop                      	nop
00211a   0000     nop                      	nop
00211c   0000     nop                      	nop
00211e   0000     nop                      	nop
002120   0000     nop                      	nop
002122   0000     nop                      	nop
002124   0000     nop                      	nop
002126   0000     nop                      	nop
002128   0000     nop                      	nop
00212a   0000     nop                      	nop
00212c   0000     nop                      	nop
00212e   0000     nop                      	nop
002130   0000     nop                      	nop
002132   0000     nop                      	nop
002134   0000     nop                      	nop
002136   0000     nop                      	nop
002138   0000     nop                      	nop
00213a   0000     nop                      	nop
00213c   0000     nop                      	nop
00213e   0000     nop                      	nop
002140   0000     nop                      	nop
002142   0000     nop                      	nop
002144   0000     nop                      	nop
002146   0000     nop                      	nop
002148   0000     nop                      	nop
00214a   0000     nop                      	nop
00214c   0000     nop                      	nop
00214e   0000     nop                      	nop
002150   0000     nop                      	nop
002152   0000     nop                      	nop
002154   0000     nop                      	nop
002156   0000     nop                      	nop
002158   0000     nop                      	nop
00215a   0000     nop                      	nop
00215c   0000     nop                      	nop
00215e   0000     nop                      	nop
002160   0000     nop                      	nop
002162   0000     nop                      	nop
002164   0000     nop                      	nop
002166   0000     nop                      	nop
002168   0000     nop                      	nop
00216a   0000     nop                      	nop
00216c   0000     nop                      	nop
00216e   0000     nop                      	nop
002170   0000     nop                      	nop
002172   0000     nop                      	nop
002174   0000     nop                      	nop
002176   0000     nop                      	nop
002178   0000     nop                      	nop
00217a   0000     nop                      	nop
00217c   0000     nop                      	nop
00217e   0000     nop                      	nop
002180   0000     nop                      	nop
002182   0000     nop                      	nop
002184   0000     nop                      	nop
002186   0000     nop                      	nop
002188   0000     nop                      	nop
00218a   0000     nop                      	nop
00218c   0000     nop                      	nop
00218e   0000     nop                      	nop
002190   0000     nop                      	nop
002192   0000     nop                      	nop
002194   0000     nop                      	nop
002196   0000     nop                      	nop
002198   0000     nop                      	nop
00219a   0000     nop                      	nop
00219c   0000     nop                      	nop
00219e   0000     nop                      	nop
0021a0   0000     nop                      	nop
0021a2   0000     nop                      	nop
0021a4   0000     nop                      	nop
0021a6   0000     nop                      	nop
0021a8   0000     nop                      	nop
0021aa   0000     nop                      	nop
0021ac   0000     nop                      	nop
0021ae   0000     nop                      	nop
0021b0   0000     nop                      	nop
0021b2   0000     nop                      	nop
0021b4   0000     nop                      	nop
0021b6   0000     nop                      	nop
0021b8   0000     nop                      	nop
0021ba   0000     nop                      	nop
0021bc   0000     nop                      	nop
0021be   0000     nop                      	nop
0021c0   0000     nop                      	nop
0021c2   0000     nop                      	nop
0021c4   0000     nop                      	nop
0021c6   0000     nop                      	nop
0021c8   0000     nop                      	nop
0021ca   0000     nop                      	nop
0021cc   0000     nop                      	nop
0021ce   0000     nop                      	nop
0021d0   0000     nop                      	nop
0021d2   0000     nop                      	nop
0021d4   0000     nop                      	nop
0021d6   0000     nop                      	nop
0021d8   0000     nop                      	nop
0021da   0000     nop                      	nop
0021dc   0000     nop                      	nop
0021de   0000     nop                      	nop
0021e0   0000     nop                      	nop
0021e2   0000     nop                      	nop
0021e4   0000     nop                      	nop
0021e6   0000     nop                      	nop
0021e8   0000     nop                      	nop
0021ea   0000     nop                      	nop
0021ec   0000     nop                      	nop
0021ee   0000     nop                      	nop
0021f0   0000     nop                      	nop
0021f2   0000     nop                      	nop
0021f4   0000     nop                      	nop
0021f6   0000     nop                      	nop
0021f8   0000     nop                      	nop
0021fa   0000     nop                      	nop
0021fc   0000     nop                      	nop
0021fe   0000     nop                      	nop
002200   0000     nop                      	nop
002202   0000     nop                      	nop
002204   0000     nop                      	nop
002206   0000     nop                      	nop
002208   0000     nop                      	nop
00220a   0000     nop                      	nop
00220c   0000     nop                      	nop
00220e   0000     nop                      	nop
002210   0000     nop                      	nop
002212   0000     nop                      	nop
002214   0000     nop                      	nop
002216   0000     nop                      	nop
002218   0000     nop                      	nop
00221a   0000     nop                      	nop
00221c   0000     nop                      	nop
00221e   0000     nop                      	nop
002220   0000     nop                      	nop
002222   0000     nop                      	nop
002224   0000     nop                      	nop
002226   0000     nop                      	nop
002228   0000     nop                      	nop
00222a   0000     nop                      	nop
00222c   0000     nop                      	nop
00222e   0000     nop                      	nop
002230   0000     nop                      	nop
002232   0000     nop                      	nop
002234   0000     nop                      	nop
002236   0000     nop                      	nop
002238   0000     nop                      	nop
00223a   0000     nop                      	nop
00223c   0000     nop                      	nop
00223e   0000     nop                      	nop
002240   0000     nop                      	nop
002242   0000     nop                      	nop
002244   0000     nop                      	nop
002246   0000     nop                      	nop
002248   0000     nop                      	nop
00224a   0000     nop                      	nop
00224c   0000     nop                      	nop
00224e   0000     nop                      	nop
002250   0000     nop                      	nop
002252   0000     nop                      	nop
002254   0000     nop                      	nop
002256   0000     nop                      	nop
002258   0000     nop                      	nop
00225a   0000     nop                      	nop
00225c   0000     nop                      	nop
00225e   0000     nop                      	nop
002260   0000     nop                      	nop
002262   0000     nop                      	nop
002264   0000     nop                      	nop
002266   0000     nop                      	nop
002268   0000     nop                      	nop
00226a   0000     nop                      	nop
00226c   0000     nop                      	nop
00226e   0000     nop                      	nop
002270   0000     nop                      	nop
002272   0000     nop                      	nop
002274   0000     nop                      	nop
002276   0000     nop                      	nop
002278   0000     nop                      	nop
00227a   0000     nop                      	nop
00227c   0000     nop                      	nop
00227e   0000     nop                      	nop
002280   0000     nop                      	nop
002282   0000     nop                      	nop
002284   0000     nop                      	nop
002286   0000     nop                      	nop
002288   0000     nop                      	nop
00228a   0000     nop                      	nop
00228c   0000     nop                      	nop
00228e   0000     nop                      	nop
002290   0000     nop                      	nop
002292   0000     nop                      	nop
002294   0000     nop                      	nop
002296   0000     nop                      	nop
002298   0000     nop                      	nop
00229a   0000     nop                      	nop
00229c   0000     nop                      	nop
                                           	
                                           ;	.line	4226; meter_logger.c	PWM_PIN = 1;
00229e   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
0022a0   0000     nop                      	nop
0022a2   0000     nop                      	nop
0022a4   0000     nop                      	nop
0022a6   0000     nop                      	nop
0022a8   0000     nop                      	nop
0022aa   0000     nop                      	nop
0022ac   0000     nop                      	nop
0022ae   0000     nop                      	nop
0022b0   0000     nop                      	nop
0022b2   0000     nop                      	nop
0022b4   0000     nop                      	nop
0022b6   0000     nop                      	nop
0022b8   0000     nop                      	nop
0022ba   0000     nop                      	nop
0022bc   0000     nop                      	nop
0022be   0000     nop                      	nop
0022c0   0000     nop                      	nop
0022c2   0000     nop                      	nop
0022c4   0000     nop                      	nop
0022c6   0000     nop                      	nop
0022c8   0000     nop                      	nop
0022ca   0000     nop                      	nop
0022cc   0000     nop                      	nop
0022ce   0000     nop                      	nop
0022d0   0000     nop                      	nop
0022d2   0000     nop                      	nop
0022d4   0000     nop                      	nop
0022d6   0000     nop                      	nop
0022d8   0000     nop                      	nop
0022da   0000     nop                      	nop
0022dc   0000     nop                      	nop
0022de   0000     nop                      	nop
0022e0   0000     nop                      	nop
0022e2   0000     nop                      	nop
0022e4   0000     nop                      	nop
0022e6   0000     nop                      	nop
0022e8   0000     nop                      	nop
0022ea   0000     nop                      	nop
0022ec   0000     nop                      	nop
0022ee   0000     nop                      	nop
0022f0   0000     nop                      	nop
0022f2   0000     nop                      	nop
0022f4   0000     nop                      	nop
0022f6   0000     nop                      	nop
0022f8   0000     nop                      	nop
0022fa   0000     nop                      	nop
0022fc   0000     nop                      	nop
0022fe   0000     nop                      	nop
002300   0000     nop                      	nop
002302   0000     nop                      	nop
002304   0000     nop                      	nop
002306   0000     nop                      	nop
002308   0000     nop                      	nop
00230a   0000     nop                      	nop
00230c   0000     nop                      	nop
00230e   0000     nop                      	nop
002310   0000     nop                      	nop
002312   0000     nop                      	nop
002314   0000     nop                      	nop
002316   0000     nop                      	nop
002318   0000     nop                      	nop
00231a   0000     nop                      	nop
00231c   0000     nop                      	nop
00231e   0000     nop                      	nop
002320   0000     nop                      	nop
002322   0000     nop                      	nop
002324   0000     nop                      	nop
002326   0000     nop                      	nop
002328   0000     nop                      	nop
00232a   0000     nop                      	nop
00232c   0000     nop                      	nop
00232e   0000     nop                      	nop
002330   0000     nop                      	nop
002332   0000     nop                      	nop
002334   0000     nop                      	nop
002336   0000     nop                      	nop
002338   0000     nop                      	nop
00233a   0000     nop                      	nop
00233c   0000     nop                      	nop
00233e   0000     nop                      	nop
002340   0000     nop                      	nop
002342   0000     nop                      	nop
002344   0000     nop                      	nop
002346   0000     nop                      	nop
002348   0000     nop                      	nop
00234a   0000     nop                      	nop
00234c   0000     nop                      	nop
00234e   0000     nop                      	nop
002350   0000     nop                      	nop
002352   0000     nop                      	nop
002354   0000     nop                      	nop
002356   0000     nop                      	nop
002358   0000     nop                      	nop
00235a   0000     nop                      	nop
00235c   0000     nop                      	nop
00235e   0000     nop                      	nop
002360   0000     nop                      	nop
002362   0000     nop                      	nop
002364   0000     nop                      	nop
002366   0000     nop                      	nop
002368   0000     nop                      	nop
00236a   0000     nop                      	nop
00236c   0000     nop                      	nop
00236e   0000     nop                      	nop
002370   0000     nop                      	nop
002372   0000     nop                      	nop
002374   0000     nop                      	nop
002376   0000     nop                      	nop
002378   0000     nop                      	nop
00237a   0000     nop                      	nop
00237c   0000     nop                      	nop
00237e   0000     nop                      	nop
002380   0000     nop                      	nop
002382   0000     nop                      	nop
002384   0000     nop                      	nop
002386   0000     nop                      	nop
002388   0000     nop                      	nop
00238a   0000     nop                      	nop
00238c   0000     nop                      	nop
00238e   0000     nop                      	nop
002390   0000     nop                      	nop
002392   0000     nop                      	nop
002394   0000     nop                      	nop
002396   0000     nop                      	nop
002398   0000     nop                      	nop
00239a   0000     nop                      	nop
00239c   0000     nop                      	nop
00239e   0000     nop                      	nop
0023a0   0000     nop                      	nop
0023a2   0000     nop                      	nop
0023a4   0000     nop                      	nop
0023a6   0000     nop                      	nop
0023a8   0000     nop                      	nop
0023aa   0000     nop                      	nop
0023ac   0000     nop                      	nop
0023ae   0000     nop                      	nop
0023b0   0000     nop                      	nop
0023b2   0000     nop                      	nop
0023b4   0000     nop                      	nop
0023b6   0000     nop                      	nop
0023b8   0000     nop                      	nop
0023ba   0000     nop                      	nop
0023bc   0000     nop                      	nop
0023be   0000     nop                      	nop
0023c0   0000     nop                      	nop
0023c2   0000     nop                      	nop
0023c4   0000     nop                      	nop
0023c6   0000     nop                      	nop
0023c8   0000     nop                      	nop
0023ca   0000     nop                      	nop
0023cc   0000     nop                      	nop
0023ce   0000     nop                      	nop
0023d0   0000     nop                      	nop
0023d2   0000     nop                      	nop
0023d4   0000     nop                      	nop
0023d6   0000     nop                      	nop
0023d8   0000     nop                      	nop
0023da   0000     nop                      	nop
0023dc   0000     nop                      	nop
0023de   0000     nop                      	nop
0023e0   0000     nop                      	nop
0023e2   0000     nop                      	nop
0023e4   0000     nop                      	nop
0023e6   0000     nop                      	nop
0023e8   0000     nop                      	nop
0023ea   0000     nop                      	nop
0023ec   0000     nop                      	nop
0023ee   0000     nop                      	nop
0023f0   0000     nop                      	nop
0023f2   0000     nop                      	nop
0023f4   0000     nop                      	nop
0023f6   0000     nop                      	nop
0023f8   0000     nop                      	nop
0023fa   0000     nop                      	nop
0023fc   0000     nop                      	nop
0023fe   0000     nop                      	nop
002400   0000     nop                      	nop
002402   0000     nop                      	nop
002404   0000     nop                      	nop
002406   0000     nop                      	nop
002408   0000     nop                      	nop
00240a   0000     nop                      	nop
00240c   0000     nop                      	nop
00240e   0000     nop                      	nop
002410   0000     nop                      	nop
002412   0000     nop                      	nop
002414   0000     nop                      	nop
002416   0000     nop                      	nop
002418   0000     nop                      	nop
00241a   0000     nop                      	nop
00241c   0000     nop                      	nop
00241e   0000     nop                      	nop
002420   0000     nop                      	nop
002422   0000     nop                      	nop
002424   0000     nop                      	nop
002426   0000     nop                      	nop
002428   0000     nop                      	nop
00242a   0000     nop                      	nop
00242c   0000     nop                      	nop
00242e   0000     nop                      	nop
002430   0000     nop                      	nop
002432   0000     nop                      	nop
002434   0000     nop                      	nop
002436   0000     nop                      	nop
                                           	
                                           ;	.line	4433; meter_logger.c	PWM_PIN = 0;
002438   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
00243a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00243c   ffd9
00243e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__send_fsk_high	code
                                           _send_fsk_high:
                                           ;	.line	1461; meter_logger.c	void send_fsk_high(void) {
000d3a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000d3c   ffe5
000d3e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000d40   ffd9
                                           ;	.line	1462; meter_logger.c	PWM_PIN = 1;
000d42   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
000d44   0000     nop                      	nop
000d46   0000     nop                      	nop
000d48   0000     nop                      	nop
000d4a   0000     nop                      	nop
000d4c   0000     nop                      	nop
000d4e   0000     nop                      	nop
000d50   0000     nop                      	nop
000d52   0000     nop                      	nop
000d54   0000     nop                      	nop
000d56   0000     nop                      	nop
000d58   0000     nop                      	nop
000d5a   0000     nop                      	nop
000d5c   0000     nop                      	nop
000d5e   0000     nop                      	nop
000d60   0000     nop                      	nop
000d62   0000     nop                      	nop
000d64   0000     nop                      	nop
000d66   0000     nop                      	nop
000d68   0000     nop                      	nop
000d6a   0000     nop                      	nop
000d6c   0000     nop                      	nop
000d6e   0000     nop                      	nop
000d70   0000     nop                      	nop
000d72   0000     nop                      	nop
000d74   0000     nop                      	nop
000d76   0000     nop                      	nop
000d78   0000     nop                      	nop
000d7a   0000     nop                      	nop
000d7c   0000     nop                      	nop
000d7e   0000     nop                      	nop
000d80   0000     nop                      	nop
000d82   0000     nop                      	nop
000d84   0000     nop                      	nop
000d86   0000     nop                      	nop
000d88   0000     nop                      	nop
000d8a   0000     nop                      	nop
000d8c   0000     nop                      	nop
000d8e   0000     nop                      	nop
000d90   0000     nop                      	nop
000d92   0000     nop                      	nop
000d94   0000     nop                      	nop
000d96   0000     nop                      	nop
000d98   0000     nop                      	nop
000d9a   0000     nop                      	nop
000d9c   0000     nop                      	nop
000d9e   0000     nop                      	nop
000da0   0000     nop                      	nop
000da2   0000     nop                      	nop
000da4   0000     nop                      	nop
000da6   0000     nop                      	nop
000da8   0000     nop                      	nop
000daa   0000     nop                      	nop
000dac   0000     nop                      	nop
000dae   0000     nop                      	nop
000db0   0000     nop                      	nop
000db2   0000     nop                      	nop
000db4   0000     nop                      	nop
000db6   0000     nop                      	nop
000db8   0000     nop                      	nop
000dba   0000     nop                      	nop
000dbc   0000     nop                      	nop
000dbe   0000     nop                      	nop
000dc0   0000     nop                      	nop
000dc2   0000     nop                      	nop
000dc4   0000     nop                      	nop
000dc6   0000     nop                      	nop
000dc8   0000     nop                      	nop
000dca   0000     nop                      	nop
000dcc   0000     nop                      	nop
000dce   0000     nop                      	nop
000dd0   0000     nop                      	nop
000dd2   0000     nop                      	nop
000dd4   0000     nop                      	nop
000dd6   0000     nop                      	nop
000dd8   0000     nop                      	nop
000dda   0000     nop                      	nop
000ddc   0000     nop                      	nop
000dde   0000     nop                      	nop
000de0   0000     nop                      	nop
000de2   0000     nop                      	nop
000de4   0000     nop                      	nop
000de6   0000     nop                      	nop
000de8   0000     nop                      	nop
000dea   0000     nop                      	nop
000dec   0000     nop                      	nop
000dee   0000     nop                      	nop
000df0   0000     nop                      	nop
000df2   0000     nop                      	nop
000df4   0000     nop                      	nop
000df6   0000     nop                      	nop
000df8   0000     nop                      	nop
000dfa   0000     nop                      	nop
000dfc   0000     nop                      	nop
000dfe   0000     nop                      	nop
000e00   0000     nop                      	nop
000e02   0000     nop                      	nop
000e04   0000     nop                      	nop
000e06   0000     nop                      	nop
000e08   0000     nop                      	nop
000e0a   0000     nop                      	nop
000e0c   0000     nop                      	nop
000e0e   0000     nop                      	nop
000e10   0000     nop                      	nop
000e12   0000     nop                      	nop
000e14   0000     nop                      	nop
000e16   0000     nop                      	nop
000e18   0000     nop                      	nop
000e1a   0000     nop                      	nop
000e1c   0000     nop                      	nop
000e1e   0000     nop                      	nop
000e20   0000     nop                      	nop
000e22   0000     nop                      	nop
000e24   0000     nop                      	nop
000e26   0000     nop                      	nop
000e28   0000     nop                      	nop
000e2a   0000     nop                      	nop
000e2c   0000     nop                      	nop
000e2e   0000     nop                      	nop
000e30   0000     nop                      	nop
000e32   0000     nop                      	nop
000e34   0000     nop                      	nop
000e36   0000     nop                      	nop
000e38   0000     nop                      	nop
000e3a   0000     nop                      	nop
000e3c   0000     nop                      	nop
000e3e   0000     nop                      	nop
000e40   0000     nop                      	nop
000e42   0000     nop                      	nop
000e44   0000     nop                      	nop
000e46   0000     nop                      	nop
000e48   0000     nop                      	nop
000e4a   0000     nop                      	nop
000e4c   0000     nop                      	nop
000e4e   0000     nop                      	nop
000e50   0000     nop                      	nop
                                           	
                                           ;	.line	1600; meter_logger.c	PWM_PIN = 0;
000e52   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
000e54   0000     nop                      	nop
000e56   0000     nop                      	nop
000e58   0000     nop                      	nop
000e5a   0000     nop                      	nop
000e5c   0000     nop                      	nop
000e5e   0000     nop                      	nop
000e60   0000     nop                      	nop
000e62   0000     nop                      	nop
000e64   0000     nop                      	nop
000e66   0000     nop                      	nop
000e68   0000     nop                      	nop
000e6a   0000     nop                      	nop
000e6c   0000     nop                      	nop
000e6e   0000     nop                      	nop
000e70   0000     nop                      	nop
000e72   0000     nop                      	nop
000e74   0000     nop                      	nop
000e76   0000     nop                      	nop
000e78   0000     nop                      	nop
000e7a   0000     nop                      	nop
000e7c   0000     nop                      	nop
000e7e   0000     nop                      	nop
000e80   0000     nop                      	nop
000e82   0000     nop                      	nop
000e84   0000     nop                      	nop
000e86   0000     nop                      	nop
000e88   0000     nop                      	nop
000e8a   0000     nop                      	nop
000e8c   0000     nop                      	nop
000e8e   0000     nop                      	nop
000e90   0000     nop                      	nop
000e92   0000     nop                      	nop
000e94   0000     nop                      	nop
000e96   0000     nop                      	nop
000e98   0000     nop                      	nop
000e9a   0000     nop                      	nop
000e9c   0000     nop                      	nop
000e9e   0000     nop                      	nop
000ea0   0000     nop                      	nop
000ea2   0000     nop                      	nop
000ea4   0000     nop                      	nop
000ea6   0000     nop                      	nop
000ea8   0000     nop                      	nop
000eaa   0000     nop                      	nop
000eac   0000     nop                      	nop
000eae   0000     nop                      	nop
000eb0   0000     nop                      	nop
000eb2   0000     nop                      	nop
000eb4   0000     nop                      	nop
000eb6   0000     nop                      	nop
000eb8   0000     nop                      	nop
000eba   0000     nop                      	nop
000ebc   0000     nop                      	nop
000ebe   0000     nop                      	nop
000ec0   0000     nop                      	nop
000ec2   0000     nop                      	nop
000ec4   0000     nop                      	nop
000ec6   0000     nop                      	nop
000ec8   0000     nop                      	nop
000eca   0000     nop                      	nop
000ecc   0000     nop                      	nop
000ece   0000     nop                      	nop
000ed0   0000     nop                      	nop
000ed2   0000     nop                      	nop
000ed4   0000     nop                      	nop
000ed6   0000     nop                      	nop
000ed8   0000     nop                      	nop
000eda   0000     nop                      	nop
000edc   0000     nop                      	nop
000ede   0000     nop                      	nop
000ee0   0000     nop                      	nop
000ee2   0000     nop                      	nop
000ee4   0000     nop                      	nop
000ee6   0000     nop                      	nop
000ee8   0000     nop                      	nop
000eea   0000     nop                      	nop
000eec   0000     nop                      	nop
000eee   0000     nop                      	nop
000ef0   0000     nop                      	nop
000ef2   0000     nop                      	nop
000ef4   0000     nop                      	nop
000ef6   0000     nop                      	nop
000ef8   0000     nop                      	nop
000efa   0000     nop                      	nop
000efc   0000     nop                      	nop
000efe   0000     nop                      	nop
000f00   0000     nop                      	nop
000f02   0000     nop                      	nop
000f04   0000     nop                      	nop
000f06   0000     nop                      	nop
000f08   0000     nop                      	nop
000f0a   0000     nop                      	nop
000f0c   0000     nop                      	nop
000f0e   0000     nop                      	nop
000f10   0000     nop                      	nop
000f12   0000     nop                      	nop
000f14   0000     nop                      	nop
000f16   0000     nop                      	nop
000f18   0000     nop                      	nop
000f1a   0000     nop                      	nop
000f1c   0000     nop                      	nop
000f1e   0000     nop                      	nop
000f20   0000     nop                      	nop
000f22   0000     nop                      	nop
000f24   0000     nop                      	nop
000f26   0000     nop                      	nop
000f28   0000     nop                      	nop
000f2a   0000     nop                      	nop
000f2c   0000     nop                      	nop
000f2e   0000     nop                      	nop
000f30   0000     nop                      	nop
000f32   0000     nop                      	nop
000f34   0000     nop                      	nop
000f36   0000     nop                      	nop
000f38   0000     nop                      	nop
000f3a   0000     nop                      	nop
000f3c   0000     nop                      	nop
000f3e   0000     nop                      	nop
000f40   0000     nop                      	nop
000f42   0000     nop                      	nop
000f44   0000     nop                      	nop
000f46   0000     nop                      	nop
000f48   0000     nop                      	nop
000f4a   0000     nop                      	nop
000f4c   0000     nop                      	nop
000f4e   0000     nop                      	nop
000f50   0000     nop                      	nop
000f52   0000     nop                      	nop
000f54   0000     nop                      	nop
000f56   0000     nop                      	nop
000f58   0000     nop                      	nop
000f5a   0000     nop                      	nop
000f5c   0000     nop                      	nop
000f5e   0000     nop                      	nop
000f60   0000     nop                      	nop
                                           	
                                           ;	.line	1738; meter_logger.c	PWM_PIN = 1;
000f62   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
000f64   0000     nop                      	nop
000f66   0000     nop                      	nop
000f68   0000     nop                      	nop
000f6a   0000     nop                      	nop
000f6c   0000     nop                      	nop
000f6e   0000     nop                      	nop
000f70   0000     nop                      	nop
000f72   0000     nop                      	nop
000f74   0000     nop                      	nop
000f76   0000     nop                      	nop
000f78   0000     nop                      	nop
000f7a   0000     nop                      	nop
000f7c   0000     nop                      	nop
000f7e   0000     nop                      	nop
000f80   0000     nop                      	nop
000f82   0000     nop                      	nop
000f84   0000     nop                      	nop
000f86   0000     nop                      	nop
000f88   0000     nop                      	nop
000f8a   0000     nop                      	nop
000f8c   0000     nop                      	nop
000f8e   0000     nop                      	nop
000f90   0000     nop                      	nop
000f92   0000     nop                      	nop
000f94   0000     nop                      	nop
000f96   0000     nop                      	nop
000f98   0000     nop                      	nop
000f9a   0000     nop                      	nop
000f9c   0000     nop                      	nop
000f9e   0000     nop                      	nop
000fa0   0000     nop                      	nop
000fa2   0000     nop                      	nop
000fa4   0000     nop                      	nop
000fa6   0000     nop                      	nop
000fa8   0000     nop                      	nop
000faa   0000     nop                      	nop
000fac   0000     nop                      	nop
000fae   0000     nop                      	nop
000fb0   0000     nop                      	nop
000fb2   0000     nop                      	nop
000fb4   0000     nop                      	nop
000fb6   0000     nop                      	nop
000fb8   0000     nop                      	nop
000fba   0000     nop                      	nop
000fbc   0000     nop                      	nop
000fbe   0000     nop                      	nop
000fc0   0000     nop                      	nop
000fc2   0000     nop                      	nop
000fc4   0000     nop                      	nop
000fc6   0000     nop                      	nop
000fc8   0000     nop                      	nop
000fca   0000     nop                      	nop
000fcc   0000     nop                      	nop
000fce   0000     nop                      	nop
000fd0   0000     nop                      	nop
000fd2   0000     nop                      	nop
000fd4   0000     nop                      	nop
000fd6   0000     nop                      	nop
000fd8   0000     nop                      	nop
000fda   0000     nop                      	nop
000fdc   0000     nop                      	nop
000fde   0000     nop                      	nop
000fe0   0000     nop                      	nop
000fe2   0000     nop                      	nop
000fe4   0000     nop                      	nop
000fe6   0000     nop                      	nop
000fe8   0000     nop                      	nop
000fea   0000     nop                      	nop
000fec   0000     nop                      	nop
000fee   0000     nop                      	nop
000ff0   0000     nop                      	nop
000ff2   0000     nop                      	nop
000ff4   0000     nop                      	nop
000ff6   0000     nop                      	nop
000ff8   0000     nop                      	nop
000ffa   0000     nop                      	nop
000ffc   0000     nop                      	nop
000ffe   0000     nop                      	nop
001000   0000     nop                      	nop
001002   0000     nop                      	nop
001004   0000     nop                      	nop
001006   0000     nop                      	nop
001008   0000     nop                      	nop
00100a   0000     nop                      	nop
00100c   0000     nop                      	nop
00100e   0000     nop                      	nop
001010   0000     nop                      	nop
001012   0000     nop                      	nop
001014   0000     nop                      	nop
001016   0000     nop                      	nop
001018   0000     nop                      	nop
00101a   0000     nop                      	nop
00101c   0000     nop                      	nop
00101e   0000     nop                      	nop
001020   0000     nop                      	nop
001022   0000     nop                      	nop
001024   0000     nop                      	nop
001026   0000     nop                      	nop
001028   0000     nop                      	nop
00102a   0000     nop                      	nop
00102c   0000     nop                      	nop
00102e   0000     nop                      	nop
001030   0000     nop                      	nop
001032   0000     nop                      	nop
001034   0000     nop                      	nop
001036   0000     nop                      	nop
001038   0000     nop                      	nop
00103a   0000     nop                      	nop
00103c   0000     nop                      	nop
00103e   0000     nop                      	nop
001040   0000     nop                      	nop
001042   0000     nop                      	nop
001044   0000     nop                      	nop
001046   0000     nop                      	nop
001048   0000     nop                      	nop
00104a   0000     nop                      	nop
00104c   0000     nop                      	nop
00104e   0000     nop                      	nop
001050   0000     nop                      	nop
001052   0000     nop                      	nop
001054   0000     nop                      	nop
001056   0000     nop                      	nop
001058   0000     nop                      	nop
00105a   0000     nop                      	nop
00105c   0000     nop                      	nop
00105e   0000     nop                      	nop
001060   0000     nop                      	nop
001062   0000     nop                      	nop
001064   0000     nop                      	nop
001066   0000     nop                      	nop
001068   0000     nop                      	nop
00106a   0000     nop                      	nop
00106c   0000     nop                      	nop
00106e   0000     nop                      	nop
001070   0000     nop                      	nop
                                           	
                                           ;	.line	1876; meter_logger.c	PWM_PIN = 0;
001072   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001074   0000     nop                      	nop
001076   0000     nop                      	nop
001078   0000     nop                      	nop
00107a   0000     nop                      	nop
00107c   0000     nop                      	nop
00107e   0000     nop                      	nop
001080   0000     nop                      	nop
001082   0000     nop                      	nop
001084   0000     nop                      	nop
001086   0000     nop                      	nop
001088   0000     nop                      	nop
00108a   0000     nop                      	nop
00108c   0000     nop                      	nop
00108e   0000     nop                      	nop
001090   0000     nop                      	nop
001092   0000     nop                      	nop
001094   0000     nop                      	nop
001096   0000     nop                      	nop
001098   0000     nop                      	nop
00109a   0000     nop                      	nop
00109c   0000     nop                      	nop
00109e   0000     nop                      	nop
0010a0   0000     nop                      	nop
0010a2   0000     nop                      	nop
0010a4   0000     nop                      	nop
0010a6   0000     nop                      	nop
0010a8   0000     nop                      	nop
0010aa   0000     nop                      	nop
0010ac   0000     nop                      	nop
0010ae   0000     nop                      	nop
0010b0   0000     nop                      	nop
0010b2   0000     nop                      	nop
0010b4   0000     nop                      	nop
0010b6   0000     nop                      	nop
0010b8   0000     nop                      	nop
0010ba   0000     nop                      	nop
0010bc   0000     nop                      	nop
0010be   0000     nop                      	nop
0010c0   0000     nop                      	nop
0010c2   0000     nop                      	nop
0010c4   0000     nop                      	nop
0010c6   0000     nop                      	nop
0010c8   0000     nop                      	nop
0010ca   0000     nop                      	nop
0010cc   0000     nop                      	nop
0010ce   0000     nop                      	nop
0010d0   0000     nop                      	nop
0010d2   0000     nop                      	nop
0010d4   0000     nop                      	nop
0010d6   0000     nop                      	nop
0010d8   0000     nop                      	nop
0010da   0000     nop                      	nop
0010dc   0000     nop                      	nop
0010de   0000     nop                      	nop
0010e0   0000     nop                      	nop
0010e2   0000     nop                      	nop
0010e4   0000     nop                      	nop
0010e6   0000     nop                      	nop
0010e8   0000     nop                      	nop
0010ea   0000     nop                      	nop
0010ec   0000     nop                      	nop
0010ee   0000     nop                      	nop
0010f0   0000     nop                      	nop
0010f2   0000     nop                      	nop
0010f4   0000     nop                      	nop
0010f6   0000     nop                      	nop
0010f8   0000     nop                      	nop
0010fa   0000     nop                      	nop
0010fc   0000     nop                      	nop
0010fe   0000     nop                      	nop
001100   0000     nop                      	nop
001102   0000     nop                      	nop
001104   0000     nop                      	nop
001106   0000     nop                      	nop
001108   0000     nop                      	nop
00110a   0000     nop                      	nop
00110c   0000     nop                      	nop
00110e   0000     nop                      	nop
001110   0000     nop                      	nop
001112   0000     nop                      	nop
001114   0000     nop                      	nop
001116   0000     nop                      	nop
001118   0000     nop                      	nop
00111a   0000     nop                      	nop
00111c   0000     nop                      	nop
00111e   0000     nop                      	nop
001120   0000     nop                      	nop
001122   0000     nop                      	nop
001124   0000     nop                      	nop
001126   0000     nop                      	nop
001128   0000     nop                      	nop
00112a   0000     nop                      	nop
00112c   0000     nop                      	nop
00112e   0000     nop                      	nop
001130   0000     nop                      	nop
001132   0000     nop                      	nop
001134   0000     nop                      	nop
001136   0000     nop                      	nop
001138   0000     nop                      	nop
00113a   0000     nop                      	nop
00113c   0000     nop                      	nop
00113e   0000     nop                      	nop
001140   0000     nop                      	nop
001142   0000     nop                      	nop
001144   0000     nop                      	nop
001146   0000     nop                      	nop
001148   0000     nop                      	nop
00114a   0000     nop                      	nop
00114c   0000     nop                      	nop
00114e   0000     nop                      	nop
001150   0000     nop                      	nop
001152   0000     nop                      	nop
001154   0000     nop                      	nop
001156   0000     nop                      	nop
001158   0000     nop                      	nop
00115a   0000     nop                      	nop
00115c   0000     nop                      	nop
00115e   0000     nop                      	nop
001160   0000     nop                      	nop
001162   0000     nop                      	nop
001164   0000     nop                      	nop
001166   0000     nop                      	nop
001168   0000     nop                      	nop
00116a   0000     nop                      	nop
00116c   0000     nop                      	nop
00116e   0000     nop                      	nop
001170   0000     nop                      	nop
001172   0000     nop                      	nop
001174   0000     nop                      	nop
001176   0000     nop                      	nop
001178   0000     nop                      	nop
00117a   0000     nop                      	nop
00117c   0000     nop                      	nop
00117e   0000     nop                      	nop
001180   0000     nop                      	nop
                                           	
                                           ;	.line	2014; meter_logger.c	PWM_PIN = 1;
001182   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
001184   0000     nop                      	nop
001186   0000     nop                      	nop
001188   0000     nop                      	nop
00118a   0000     nop                      	nop
00118c   0000     nop                      	nop
00118e   0000     nop                      	nop
001190   0000     nop                      	nop
001192   0000     nop                      	nop
001194   0000     nop                      	nop
001196   0000     nop                      	nop
001198   0000     nop                      	nop
00119a   0000     nop                      	nop
00119c   0000     nop                      	nop
00119e   0000     nop                      	nop
0011a0   0000     nop                      	nop
0011a2   0000     nop                      	nop
0011a4   0000     nop                      	nop
0011a6   0000     nop                      	nop
0011a8   0000     nop                      	nop
0011aa   0000     nop                      	nop
0011ac   0000     nop                      	nop
0011ae   0000     nop                      	nop
0011b0   0000     nop                      	nop
0011b2   0000     nop                      	nop
0011b4   0000     nop                      	nop
0011b6   0000     nop                      	nop
0011b8   0000     nop                      	nop
0011ba   0000     nop                      	nop
0011bc   0000     nop                      	nop
0011be   0000     nop                      	nop
0011c0   0000     nop                      	nop
0011c2   0000     nop                      	nop
0011c4   0000     nop                      	nop
0011c6   0000     nop                      	nop
0011c8   0000     nop                      	nop
0011ca   0000     nop                      	nop
0011cc   0000     nop                      	nop
0011ce   0000     nop                      	nop
0011d0   0000     nop                      	nop
0011d2   0000     nop                      	nop
0011d4   0000     nop                      	nop
0011d6   0000     nop                      	nop
0011d8   0000     nop                      	nop
0011da   0000     nop                      	nop
0011dc   0000     nop                      	nop
0011de   0000     nop                      	nop
0011e0   0000     nop                      	nop
0011e2   0000     nop                      	nop
0011e4   0000     nop                      	nop
0011e6   0000     nop                      	nop
0011e8   0000     nop                      	nop
0011ea   0000     nop                      	nop
0011ec   0000     nop                      	nop
0011ee   0000     nop                      	nop
0011f0   0000     nop                      	nop
0011f2   0000     nop                      	nop
0011f4   0000     nop                      	nop
0011f6   0000     nop                      	nop
0011f8   0000     nop                      	nop
0011fa   0000     nop                      	nop
0011fc   0000     nop                      	nop
0011fe   0000     nop                      	nop
001200   0000     nop                      	nop
001202   0000     nop                      	nop
001204   0000     nop                      	nop
001206   0000     nop                      	nop
001208   0000     nop                      	nop
00120a   0000     nop                      	nop
00120c   0000     nop                      	nop
00120e   0000     nop                      	nop
001210   0000     nop                      	nop
001212   0000     nop                      	nop
001214   0000     nop                      	nop
001216   0000     nop                      	nop
001218   0000     nop                      	nop
00121a   0000     nop                      	nop
00121c   0000     nop                      	nop
00121e   0000     nop                      	nop
001220   0000     nop                      	nop
001222   0000     nop                      	nop
001224   0000     nop                      	nop
001226   0000     nop                      	nop
001228   0000     nop                      	nop
00122a   0000     nop                      	nop
00122c   0000     nop                      	nop
00122e   0000     nop                      	nop
001230   0000     nop                      	nop
001232   0000     nop                      	nop
001234   0000     nop                      	nop
001236   0000     nop                      	nop
001238   0000     nop                      	nop
00123a   0000     nop                      	nop
00123c   0000     nop                      	nop
00123e   0000     nop                      	nop
001240   0000     nop                      	nop
001242   0000     nop                      	nop
001244   0000     nop                      	nop
001246   0000     nop                      	nop
001248   0000     nop                      	nop
00124a   0000     nop                      	nop
00124c   0000     nop                      	nop
00124e   0000     nop                      	nop
001250   0000     nop                      	nop
001252   0000     nop                      	nop
001254   0000     nop                      	nop
001256   0000     nop                      	nop
001258   0000     nop                      	nop
00125a   0000     nop                      	nop
00125c   0000     nop                      	nop
00125e   0000     nop                      	nop
001260   0000     nop                      	nop
001262   0000     nop                      	nop
001264   0000     nop                      	nop
001266   0000     nop                      	nop
001268   0000     nop                      	nop
00126a   0000     nop                      	nop
00126c   0000     nop                      	nop
00126e   0000     nop                      	nop
001270   0000     nop                      	nop
001272   0000     nop                      	nop
001274   0000     nop                      	nop
001276   0000     nop                      	nop
001278   0000     nop                      	nop
00127a   0000     nop                      	nop
00127c   0000     nop                      	nop
00127e   0000     nop                      	nop
001280   0000     nop                      	nop
001282   0000     nop                      	nop
001284   0000     nop                      	nop
001286   0000     nop                      	nop
001288   0000     nop                      	nop
00128a   0000     nop                      	nop
00128c   0000     nop                      	nop
00128e   0000     nop                      	nop
001290   0000     nop                      	nop
                                           	
                                           ;	.line	2152; meter_logger.c	PWM_PIN = 0;
001292   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
001294   0000     nop                      	nop
001296   0000     nop                      	nop
001298   0000     nop                      	nop
00129a   0000     nop                      	nop
00129c   0000     nop                      	nop
00129e   0000     nop                      	nop
0012a0   0000     nop                      	nop
0012a2   0000     nop                      	nop
0012a4   0000     nop                      	nop
0012a6   0000     nop                      	nop
0012a8   0000     nop                      	nop
0012aa   0000     nop                      	nop
0012ac   0000     nop                      	nop
0012ae   0000     nop                      	nop
0012b0   0000     nop                      	nop
0012b2   0000     nop                      	nop
0012b4   0000     nop                      	nop
0012b6   0000     nop                      	nop
0012b8   0000     nop                      	nop
0012ba   0000     nop                      	nop
0012bc   0000     nop                      	nop
0012be   0000     nop                      	nop
0012c0   0000     nop                      	nop
0012c2   0000     nop                      	nop
0012c4   0000     nop                      	nop
0012c6   0000     nop                      	nop
0012c8   0000     nop                      	nop
0012ca   0000     nop                      	nop
0012cc   0000     nop                      	nop
0012ce   0000     nop                      	nop
0012d0   0000     nop                      	nop
0012d2   0000     nop                      	nop
0012d4   0000     nop                      	nop
0012d6   0000     nop                      	nop
0012d8   0000     nop                      	nop
0012da   0000     nop                      	nop
0012dc   0000     nop                      	nop
0012de   0000     nop                      	nop
0012e0   0000     nop                      	nop
0012e2   0000     nop                      	nop
0012e4   0000     nop                      	nop
0012e6   0000     nop                      	nop
0012e8   0000     nop                      	nop
0012ea   0000     nop                      	nop
0012ec   0000     nop                      	nop
0012ee   0000     nop                      	nop
0012f0   0000     nop                      	nop
0012f2   0000     nop                      	nop
0012f4   0000     nop                      	nop
0012f6   0000     nop                      	nop
0012f8   0000     nop                      	nop
0012fa   0000     nop                      	nop
0012fc   0000     nop                      	nop
0012fe   0000     nop                      	nop
001300   0000     nop                      	nop
001302   0000     nop                      	nop
001304   0000     nop                      	nop
001306   0000     nop                      	nop
001308   0000     nop                      	nop
00130a   0000     nop                      	nop
00130c   0000     nop                      	nop
00130e   0000     nop                      	nop
001310   0000     nop                      	nop
001312   0000     nop                      	nop
001314   0000     nop                      	nop
001316   0000     nop                      	nop
001318   0000     nop                      	nop
00131a   0000     nop                      	nop
00131c   0000     nop                      	nop
00131e   0000     nop                      	nop
001320   0000     nop                      	nop
001322   0000     nop                      	nop
001324   0000     nop                      	nop
001326   0000     nop                      	nop
001328   0000     nop                      	nop
00132a   0000     nop                      	nop
00132c   0000     nop                      	nop
00132e   0000     nop                      	nop
001330   0000     nop                      	nop
001332   0000     nop                      	nop
001334   0000     nop                      	nop
001336   0000     nop                      	nop
001338   0000     nop                      	nop
00133a   0000     nop                      	nop
00133c   0000     nop                      	nop
00133e   0000     nop                      	nop
001340   0000     nop                      	nop
001342   0000     nop                      	nop
001344   0000     nop                      	nop
001346   0000     nop                      	nop
001348   0000     nop                      	nop
00134a   0000     nop                      	nop
00134c   0000     nop                      	nop
00134e   0000     nop                      	nop
001350   0000     nop                      	nop
001352   0000     nop                      	nop
001354   0000     nop                      	nop
001356   0000     nop                      	nop
001358   0000     nop                      	nop
00135a   0000     nop                      	nop
00135c   0000     nop                      	nop
00135e   0000     nop                      	nop
001360   0000     nop                      	nop
001362   0000     nop                      	nop
001364   0000     nop                      	nop
001366   0000     nop                      	nop
001368   0000     nop                      	nop
00136a   0000     nop                      	nop
00136c   0000     nop                      	nop
00136e   0000     nop                      	nop
001370   0000     nop                      	nop
001372   0000     nop                      	nop
001374   0000     nop                      	nop
001376   0000     nop                      	nop
001378   0000     nop                      	nop
00137a   0000     nop                      	nop
00137c   0000     nop                      	nop
00137e   0000     nop                      	nop
001380   0000     nop                      	nop
001382   0000     nop                      	nop
001384   0000     nop                      	nop
001386   0000     nop                      	nop
001388   0000     nop                      	nop
00138a   0000     nop                      	nop
00138c   0000     nop                      	nop
00138e   0000     nop                      	nop
001390   0000     nop                      	nop
001392   0000     nop                      	nop
001394   0000     nop                      	nop
001396   0000     nop                      	nop
001398   0000     nop                      	nop
00139a   0000     nop                      	nop
00139c   0000     nop                      	nop
00139e   0000     nop                      	nop
0013a0   0000     nop                      	nop
                                           	
                                           ;	.line	2290; meter_logger.c	PWM_PIN = 1;
0013a2   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
0013a4   0000     nop                      	nop
0013a6   0000     nop                      	nop
0013a8   0000     nop                      	nop
0013aa   0000     nop                      	nop
0013ac   0000     nop                      	nop
0013ae   0000     nop                      	nop
0013b0   0000     nop                      	nop
0013b2   0000     nop                      	nop
0013b4   0000     nop                      	nop
0013b6   0000     nop                      	nop
0013b8   0000     nop                      	nop
0013ba   0000     nop                      	nop
0013bc   0000     nop                      	nop
0013be   0000     nop                      	nop
0013c0   0000     nop                      	nop
0013c2   0000     nop                      	nop
0013c4   0000     nop                      	nop
0013c6   0000     nop                      	nop
0013c8   0000     nop                      	nop
0013ca   0000     nop                      	nop
0013cc   0000     nop                      	nop
0013ce   0000     nop                      	nop
0013d0   0000     nop                      	nop
0013d2   0000     nop                      	nop
0013d4   0000     nop                      	nop
0013d6   0000     nop                      	nop
0013d8   0000     nop                      	nop
0013da   0000     nop                      	nop
0013dc   0000     nop                      	nop
0013de   0000     nop                      	nop
0013e0   0000     nop                      	nop
0013e2   0000     nop                      	nop
0013e4   0000     nop                      	nop
0013e6   0000     nop                      	nop
0013e8   0000     nop                      	nop
0013ea   0000     nop                      	nop
0013ec   0000     nop                      	nop
0013ee   0000     nop                      	nop
0013f0   0000     nop                      	nop
0013f2   0000     nop                      	nop
0013f4   0000     nop                      	nop
0013f6   0000     nop                      	nop
0013f8   0000     nop                      	nop
0013fa   0000     nop                      	nop
0013fc   0000     nop                      	nop
0013fe   0000     nop                      	nop
001400   0000     nop                      	nop
001402   0000     nop                      	nop
001404   0000     nop                      	nop
001406   0000     nop                      	nop
001408   0000     nop                      	nop
00140a   0000     nop                      	nop
00140c   0000     nop                      	nop
00140e   0000     nop                      	nop
001410   0000     nop                      	nop
001412   0000     nop                      	nop
001414   0000     nop                      	nop
001416   0000     nop                      	nop
001418   0000     nop                      	nop
00141a   0000     nop                      	nop
00141c   0000     nop                      	nop
00141e   0000     nop                      	nop
001420   0000     nop                      	nop
001422   0000     nop                      	nop
001424   0000     nop                      	nop
001426   0000     nop                      	nop
001428   0000     nop                      	nop
00142a   0000     nop                      	nop
00142c   0000     nop                      	nop
00142e   0000     nop                      	nop
001430   0000     nop                      	nop
001432   0000     nop                      	nop
001434   0000     nop                      	nop
001436   0000     nop                      	nop
001438   0000     nop                      	nop
00143a   0000     nop                      	nop
00143c   0000     nop                      	nop
00143e   0000     nop                      	nop
001440   0000     nop                      	nop
001442   0000     nop                      	nop
001444   0000     nop                      	nop
001446   0000     nop                      	nop
001448   0000     nop                      	nop
00144a   0000     nop                      	nop
00144c   0000     nop                      	nop
00144e   0000     nop                      	nop
001450   0000     nop                      	nop
001452   0000     nop                      	nop
001454   0000     nop                      	nop
001456   0000     nop                      	nop
001458   0000     nop                      	nop
00145a   0000     nop                      	nop
00145c   0000     nop                      	nop
00145e   0000     nop                      	nop
001460   0000     nop                      	nop
001462   0000     nop                      	nop
001464   0000     nop                      	nop
001466   0000     nop                      	nop
001468   0000     nop                      	nop
00146a   0000     nop                      	nop
00146c   0000     nop                      	nop
00146e   0000     nop                      	nop
001470   0000     nop                      	nop
001472   0000     nop                      	nop
001474   0000     nop                      	nop
001476   0000     nop                      	nop
001478   0000     nop                      	nop
00147a   0000     nop                      	nop
00147c   0000     nop                      	nop
00147e   0000     nop                      	nop
001480   0000     nop                      	nop
001482   0000     nop                      	nop
001484   0000     nop                      	nop
001486   0000     nop                      	nop
001488   0000     nop                      	nop
00148a   0000     nop                      	nop
00148c   0000     nop                      	nop
00148e   0000     nop                      	nop
001490   0000     nop                      	nop
001492   0000     nop                      	nop
001494   0000     nop                      	nop
001496   0000     nop                      	nop
001498   0000     nop                      	nop
00149a   0000     nop                      	nop
00149c   0000     nop                      	nop
00149e   0000     nop                      	nop
0014a0   0000     nop                      	nop
0014a2   0000     nop                      	nop
0014a4   0000     nop                      	nop
0014a6   0000     nop                      	nop
0014a8   0000     nop                      	nop
0014aa   0000     nop                      	nop
0014ac   0000     nop                      	nop
0014ae   0000     nop                      	nop
0014b0   0000     nop                      	nop
                                           	
                                           ;	.line	2428; meter_logger.c	PWM_PIN = 0;
0014b2   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
0014b4   0000     nop                      	nop
0014b6   0000     nop                      	nop
0014b8   0000     nop                      	nop
0014ba   0000     nop                      	nop
0014bc   0000     nop                      	nop
0014be   0000     nop                      	nop
0014c0   0000     nop                      	nop
0014c2   0000     nop                      	nop
0014c4   0000     nop                      	nop
0014c6   0000     nop                      	nop
0014c8   0000     nop                      	nop
0014ca   0000     nop                      	nop
0014cc   0000     nop                      	nop
0014ce   0000     nop                      	nop
0014d0   0000     nop                      	nop
0014d2   0000     nop                      	nop
0014d4   0000     nop                      	nop
0014d6   0000     nop                      	nop
0014d8   0000     nop                      	nop
0014da   0000     nop                      	nop
0014dc   0000     nop                      	nop
0014de   0000     nop                      	nop
0014e0   0000     nop                      	nop
0014e2   0000     nop                      	nop
0014e4   0000     nop                      	nop
0014e6   0000     nop                      	nop
0014e8   0000     nop                      	nop
0014ea   0000     nop                      	nop
0014ec   0000     nop                      	nop
0014ee   0000     nop                      	nop
0014f0   0000     nop                      	nop
0014f2   0000     nop                      	nop
0014f4   0000     nop                      	nop
0014f6   0000     nop                      	nop
0014f8   0000     nop                      	nop
0014fa   0000     nop                      	nop
0014fc   0000     nop                      	nop
0014fe   0000     nop                      	nop
001500   0000     nop                      	nop
001502   0000     nop                      	nop
001504   0000     nop                      	nop
001506   0000     nop                      	nop
001508   0000     nop                      	nop
00150a   0000     nop                      	nop
00150c   0000     nop                      	nop
00150e   0000     nop                      	nop
001510   0000     nop                      	nop
001512   0000     nop                      	nop
001514   0000     nop                      	nop
001516   0000     nop                      	nop
001518   0000     nop                      	nop
00151a   0000     nop                      	nop
00151c   0000     nop                      	nop
00151e   0000     nop                      	nop
001520   0000     nop                      	nop
001522   0000     nop                      	nop
001524   0000     nop                      	nop
001526   0000     nop                      	nop
001528   0000     nop                      	nop
00152a   0000     nop                      	nop
00152c   0000     nop                      	nop
00152e   0000     nop                      	nop
001530   0000     nop                      	nop
001532   0000     nop                      	nop
001534   0000     nop                      	nop
001536   0000     nop                      	nop
001538   0000     nop                      	nop
00153a   0000     nop                      	nop
00153c   0000     nop                      	nop
00153e   0000     nop                      	nop
001540   0000     nop                      	nop
001542   0000     nop                      	nop
001544   0000     nop                      	nop
001546   0000     nop                      	nop
001548   0000     nop                      	nop
00154a   0000     nop                      	nop
00154c   0000     nop                      	nop
00154e   0000     nop                      	nop
001550   0000     nop                      	nop
001552   0000     nop                      	nop
001554   0000     nop                      	nop
001556   0000     nop                      	nop
001558   0000     nop                      	nop
00155a   0000     nop                      	nop
00155c   0000     nop                      	nop
00155e   0000     nop                      	nop
001560   0000     nop                      	nop
001562   0000     nop                      	nop
001564   0000     nop                      	nop
001566   0000     nop                      	nop
001568   0000     nop                      	nop
00156a   0000     nop                      	nop
00156c   0000     nop                      	nop
00156e   0000     nop                      	nop
001570   0000     nop                      	nop
001572   0000     nop                      	nop
001574   0000     nop                      	nop
001576   0000     nop                      	nop
001578   0000     nop                      	nop
00157a   0000     nop                      	nop
00157c   0000     nop                      	nop
00157e   0000     nop                      	nop
001580   0000     nop                      	nop
001582   0000     nop                      	nop
001584   0000     nop                      	nop
001586   0000     nop                      	nop
001588   0000     nop                      	nop
00158a   0000     nop                      	nop
00158c   0000     nop                      	nop
00158e   0000     nop                      	nop
001590   0000     nop                      	nop
001592   0000     nop                      	nop
001594   0000     nop                      	nop
001596   0000     nop                      	nop
001598   0000     nop                      	nop
00159a   0000     nop                      	nop
00159c   0000     nop                      	nop
00159e   0000     nop                      	nop
0015a0   0000     nop                      	nop
0015a2   0000     nop                      	nop
0015a4   0000     nop                      	nop
0015a6   0000     nop                      	nop
0015a8   0000     nop                      	nop
0015aa   0000     nop                      	nop
0015ac   0000     nop                      	nop
0015ae   0000     nop                      	nop
0015b0   0000     nop                      	nop
0015b2   0000     nop                      	nop
0015b4   0000     nop                      	nop
0015b6   0000     nop                      	nop
0015b8   0000     nop                      	nop
0015ba   0000     nop                      	nop
0015bc   0000     nop                      	nop
0015be   0000     nop                      	nop
0015c0   0000     nop                      	nop
                                           	
                                           ;	.line	2566; meter_logger.c	PWM_PIN = 1;
0015c2   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
0015c4   0000     nop                      	nop
0015c6   0000     nop                      	nop
0015c8   0000     nop                      	nop
0015ca   0000     nop                      	nop
0015cc   0000     nop                      	nop
0015ce   0000     nop                      	nop
0015d0   0000     nop                      	nop
0015d2   0000     nop                      	nop
0015d4   0000     nop                      	nop
0015d6   0000     nop                      	nop
0015d8   0000     nop                      	nop
0015da   0000     nop                      	nop
0015dc   0000     nop                      	nop
0015de   0000     nop                      	nop
0015e0   0000     nop                      	nop
0015e2   0000     nop                      	nop
0015e4   0000     nop                      	nop
0015e6   0000     nop                      	nop
0015e8   0000     nop                      	nop
0015ea   0000     nop                      	nop
0015ec   0000     nop                      	nop
0015ee   0000     nop                      	nop
0015f0   0000     nop                      	nop
0015f2   0000     nop                      	nop
0015f4   0000     nop                      	nop
0015f6   0000     nop                      	nop
0015f8   0000     nop                      	nop
0015fa   0000     nop                      	nop
0015fc   0000     nop                      	nop
0015fe   0000     nop                      	nop
001600   0000     nop                      	nop
001602   0000     nop                      	nop
001604   0000     nop                      	nop
001606   0000     nop                      	nop
001608   0000     nop                      	nop
00160a   0000     nop                      	nop
00160c   0000     nop                      	nop
00160e   0000     nop                      	nop
001610   0000     nop                      	nop
001612   0000     nop                      	nop
001614   0000     nop                      	nop
001616   0000     nop                      	nop
001618   0000     nop                      	nop
00161a   0000     nop                      	nop
00161c   0000     nop                      	nop
00161e   0000     nop                      	nop
001620   0000     nop                      	nop
001622   0000     nop                      	nop
001624   0000     nop                      	nop
001626   0000     nop                      	nop
001628   0000     nop                      	nop
00162a   0000     nop                      	nop
00162c   0000     nop                      	nop
00162e   0000     nop                      	nop
001630   0000     nop                      	nop
001632   0000     nop                      	nop
001634   0000     nop                      	nop
001636   0000     nop                      	nop
001638   0000     nop                      	nop
00163a   0000     nop                      	nop
00163c   0000     nop                      	nop
00163e   0000     nop                      	nop
001640   0000     nop                      	nop
001642   0000     nop                      	nop
001644   0000     nop                      	nop
001646   0000     nop                      	nop
001648   0000     nop                      	nop
00164a   0000     nop                      	nop
00164c   0000     nop                      	nop
00164e   0000     nop                      	nop
001650   0000     nop                      	nop
001652   0000     nop                      	nop
001654   0000     nop                      	nop
001656   0000     nop                      	nop
001658   0000     nop                      	nop
00165a   0000     nop                      	nop
00165c   0000     nop                      	nop
00165e   0000     nop                      	nop
001660   0000     nop                      	nop
001662   0000     nop                      	nop
001664   0000     nop                      	nop
001666   0000     nop                      	nop
001668   0000     nop                      	nop
00166a   0000     nop                      	nop
00166c   0000     nop                      	nop
00166e   0000     nop                      	nop
001670   0000     nop                      	nop
001672   0000     nop                      	nop
001674   0000     nop                      	nop
001676   0000     nop                      	nop
001678   0000     nop                      	nop
00167a   0000     nop                      	nop
00167c   0000     nop                      	nop
00167e   0000     nop                      	nop
001680   0000     nop                      	nop
001682   0000     nop                      	nop
001684   0000     nop                      	nop
001686   0000     nop                      	nop
001688   0000     nop                      	nop
00168a   0000     nop                      	nop
00168c   0000     nop                      	nop
00168e   0000     nop                      	nop
001690   0000     nop                      	nop
001692   0000     nop                      	nop
001694   0000     nop                      	nop
001696   0000     nop                      	nop
001698   0000     nop                      	nop
00169a   0000     nop                      	nop
00169c   0000     nop                      	nop
00169e   0000     nop                      	nop
0016a0   0000     nop                      	nop
0016a2   0000     nop                      	nop
0016a4   0000     nop                      	nop
0016a6   0000     nop                      	nop
0016a8   0000     nop                      	nop
0016aa   0000     nop                      	nop
0016ac   0000     nop                      	nop
0016ae   0000     nop                      	nop
0016b0   0000     nop                      	nop
0016b2   0000     nop                      	nop
0016b4   0000     nop                      	nop
0016b6   0000     nop                      	nop
0016b8   0000     nop                      	nop
0016ba   0000     nop                      	nop
0016bc   0000     nop                      	nop
0016be   0000     nop                      	nop
0016c0   0000     nop                      	nop
0016c2   0000     nop                      	nop
0016c4   0000     nop                      	nop
0016c6   0000     nop                      	nop
0016c8   0000     nop                      	nop
0016ca   0000     nop                      	nop
0016cc   0000     nop                      	nop
0016ce   0000     nop                      	nop
0016d0   0000     nop                      	nop
                                           	
                                           ;	.line	2704; meter_logger.c	PWM_PIN = 0;
0016d2   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
0016d4   0000     nop                      	nop
0016d6   0000     nop                      	nop
0016d8   0000     nop                      	nop
0016da   0000     nop                      	nop
0016dc   0000     nop                      	nop
0016de   0000     nop                      	nop
0016e0   0000     nop                      	nop
0016e2   0000     nop                      	nop
0016e4   0000     nop                      	nop
0016e6   0000     nop                      	nop
0016e8   0000     nop                      	nop
0016ea   0000     nop                      	nop
0016ec   0000     nop                      	nop
0016ee   0000     nop                      	nop
0016f0   0000     nop                      	nop
0016f2   0000     nop                      	nop
0016f4   0000     nop                      	nop
0016f6   0000     nop                      	nop
0016f8   0000     nop                      	nop
0016fa   0000     nop                      	nop
0016fc   0000     nop                      	nop
0016fe   0000     nop                      	nop
001700   0000     nop                      	nop
001702   0000     nop                      	nop
001704   0000     nop                      	nop
001706   0000     nop                      	nop
001708   0000     nop                      	nop
00170a   0000     nop                      	nop
00170c   0000     nop                      	nop
00170e   0000     nop                      	nop
001710   0000     nop                      	nop
001712   0000     nop                      	nop
001714   0000     nop                      	nop
001716   0000     nop                      	nop
001718   0000     nop                      	nop
00171a   0000     nop                      	nop
00171c   0000     nop                      	nop
00171e   0000     nop                      	nop
001720   0000     nop                      	nop
001722   0000     nop                      	nop
001724   0000     nop                      	nop
001726   0000     nop                      	nop
001728   0000     nop                      	nop
00172a   0000     nop                      	nop
00172c   0000     nop                      	nop
00172e   0000     nop                      	nop
001730   0000     nop                      	nop
001732   0000     nop                      	nop
001734   0000     nop                      	nop
001736   0000     nop                      	nop
001738   0000     nop                      	nop
00173a   0000     nop                      	nop
00173c   0000     nop                      	nop
00173e   0000     nop                      	nop
001740   0000     nop                      	nop
001742   0000     nop                      	nop
001744   0000     nop                      	nop
001746   0000     nop                      	nop
001748   0000     nop                      	nop
00174a   0000     nop                      	nop
00174c   0000     nop                      	nop
00174e   0000     nop                      	nop
001750   0000     nop                      	nop
001752   0000     nop                      	nop
001754   0000     nop                      	nop
001756   0000     nop                      	nop
001758   0000     nop                      	nop
00175a   0000     nop                      	nop
00175c   0000     nop                      	nop
00175e   0000     nop                      	nop
001760   0000     nop                      	nop
001762   0000     nop                      	nop
001764   0000     nop                      	nop
001766   0000     nop                      	nop
001768   0000     nop                      	nop
00176a   0000     nop                      	nop
00176c   0000     nop                      	nop
00176e   0000     nop                      	nop
001770   0000     nop                      	nop
001772   0000     nop                      	nop
001774   0000     nop                      	nop
001776   0000     nop                      	nop
001778   0000     nop                      	nop
00177a   0000     nop                      	nop
00177c   0000     nop                      	nop
00177e   0000     nop                      	nop
001780   0000     nop                      	nop
001782   0000     nop                      	nop
001784   0000     nop                      	nop
001786   0000     nop                      	nop
001788   0000     nop                      	nop
00178a   0000     nop                      	nop
00178c   0000     nop                      	nop
00178e   0000     nop                      	nop
001790   0000     nop                      	nop
001792   0000     nop                      	nop
001794   0000     nop                      	nop
001796   0000     nop                      	nop
001798   0000     nop                      	nop
00179a   0000     nop                      	nop
00179c   0000     nop                      	nop
00179e   0000     nop                      	nop
0017a0   0000     nop                      	nop
0017a2   0000     nop                      	nop
0017a4   0000     nop                      	nop
0017a6   0000     nop                      	nop
0017a8   0000     nop                      	nop
0017aa   0000     nop                      	nop
0017ac   0000     nop                      	nop
0017ae   0000     nop                      	nop
0017b0   0000     nop                      	nop
0017b2   0000     nop                      	nop
0017b4   0000     nop                      	nop
0017b6   0000     nop                      	nop
0017b8   0000     nop                      	nop
0017ba   0000     nop                      	nop
0017bc   0000     nop                      	nop
0017be   0000     nop                      	nop
0017c0   0000     nop                      	nop
0017c2   0000     nop                      	nop
0017c4   0000     nop                      	nop
0017c6   0000     nop                      	nop
0017c8   0000     nop                      	nop
0017ca   0000     nop                      	nop
0017cc   0000     nop                      	nop
0017ce   0000     nop                      	nop
0017d0   0000     nop                      	nop
0017d2   0000     nop                      	nop
0017d4   0000     nop                      	nop
0017d6   0000     nop                      	nop
0017d8   0000     nop                      	nop
0017da   0000     nop                      	nop
0017dc   0000     nop                      	nop
0017de   0000     nop                      	nop
0017e0   0000     nop                      	nop
                                           	
                                           ;	.line	2842; meter_logger.c	PWM_PIN = 1;
0017e2   8282     bsf     0x82, 0x1, 0     	BSF	_PORTCbits, 1
0017e4   0000     nop                      	nop
0017e6   0000     nop                      	nop
0017e8   0000     nop                      	nop
0017ea   0000     nop                      	nop
0017ec   0000     nop                      	nop
0017ee   0000     nop                      	nop
0017f0   0000     nop                      	nop
0017f2   0000     nop                      	nop
0017f4   0000     nop                      	nop
0017f6   0000     nop                      	nop
0017f8   0000     nop                      	nop
0017fa   0000     nop                      	nop
0017fc   0000     nop                      	nop
0017fe   0000     nop                      	nop
001800   0000     nop                      	nop
001802   0000     nop                      	nop
001804   0000     nop                      	nop
001806   0000     nop                      	nop
001808   0000     nop                      	nop
00180a   0000     nop                      	nop
00180c   0000     nop                      	nop
00180e   0000     nop                      	nop
001810   0000     nop                      	nop
001812   0000     nop                      	nop
001814   0000     nop                      	nop
001816   0000     nop                      	nop
001818   0000     nop                      	nop
00181a   0000     nop                      	nop
00181c   0000     nop                      	nop
00181e   0000     nop                      	nop
001820   0000     nop                      	nop
001822   0000     nop                      	nop
001824   0000     nop                      	nop
001826   0000     nop                      	nop
001828   0000     nop                      	nop
00182a   0000     nop                      	nop
00182c   0000     nop                      	nop
00182e   0000     nop                      	nop
001830   0000     nop                      	nop
001832   0000     nop                      	nop
001834   0000     nop                      	nop
001836   0000     nop                      	nop
001838   0000     nop                      	nop
00183a   0000     nop                      	nop
00183c   0000     nop                      	nop
00183e   0000     nop                      	nop
001840   0000     nop                      	nop
001842   0000     nop                      	nop
001844   0000     nop                      	nop
001846   0000     nop                      	nop
001848   0000     nop                      	nop
00184a   0000     nop                      	nop
00184c   0000     nop                      	nop
00184e   0000     nop                      	nop
001850   0000     nop                      	nop
001852   0000     nop                      	nop
001854   0000     nop                      	nop
001856   0000     nop                      	nop
001858   0000     nop                      	nop
00185a   0000     nop                      	nop
00185c   0000     nop                      	nop
00185e   0000     nop                      	nop
001860   0000     nop                      	nop
001862   0000     nop                      	nop
001864   0000     nop                      	nop
001866   0000     nop                      	nop
001868   0000     nop                      	nop
00186a   0000     nop                      	nop
00186c   0000     nop                      	nop
00186e   0000     nop                      	nop
001870   0000     nop                      	nop
001872   0000     nop                      	nop
001874   0000     nop                      	nop
001876   0000     nop                      	nop
001878   0000     nop                      	nop
00187a   0000     nop                      	nop
00187c   0000     nop                      	nop
00187e   0000     nop                      	nop
001880   0000     nop                      	nop
001882   0000     nop                      	nop
001884   0000     nop                      	nop
001886   0000     nop                      	nop
001888   0000     nop                      	nop
00188a   0000     nop                      	nop
00188c   0000     nop                      	nop
00188e   0000     nop                      	nop
001890   0000     nop                      	nop
001892   0000     nop                      	nop
001894   0000     nop                      	nop
001896   0000     nop                      	nop
001898   0000     nop                      	nop
00189a   0000     nop                      	nop
00189c   0000     nop                      	nop
00189e   0000     nop                      	nop
0018a0   0000     nop                      	nop
0018a2   0000     nop                      	nop
0018a4   0000     nop                      	nop
0018a6   0000     nop                      	nop
0018a8   0000     nop                      	nop
0018aa   0000     nop                      	nop
0018ac   0000     nop                      	nop
0018ae   0000     nop                      	nop
0018b0   0000     nop                      	nop
0018b2   0000     nop                      	nop
0018b4   0000     nop                      	nop
0018b6   0000     nop                      	nop
0018b8   0000     nop                      	nop
0018ba   0000     nop                      	nop
0018bc   0000     nop                      	nop
0018be   0000     nop                      	nop
0018c0   0000     nop                      	nop
0018c2   0000     nop                      	nop
0018c4   0000     nop                      	nop
0018c6   0000     nop                      	nop
0018c8   0000     nop                      	nop
0018ca   0000     nop                      	nop
0018cc   0000     nop                      	nop
0018ce   0000     nop                      	nop
0018d0   0000     nop                      	nop
0018d2   0000     nop                      	nop
0018d4   0000     nop                      	nop
0018d6   0000     nop                      	nop
0018d8   0000     nop                      	nop
0018da   0000     nop                      	nop
0018dc   0000     nop                      	nop
0018de   0000     nop                      	nop
0018e0   0000     nop                      	nop
0018e2   0000     nop                      	nop
0018e4   0000     nop                      	nop
0018e6   0000     nop                      	nop
0018e8   0000     nop                      	nop
0018ea   0000     nop                      	nop
0018ec   0000     nop                      	nop
0018ee   0000     nop                      	nop
0018f0   0000     nop                      	nop
                                           	
                                           ;	.line	2980; meter_logger.c	PWM_PIN = 0;
0018f2   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
0018f4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0018f6   ffd9
0018f8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_rx_disable	code
                                           _fsk_rx_disable:
                                           ;	.line	1456; meter_logger.c	void fsk_rx_disable() {
0052d6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0052d8   ffe5
0052da   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0052dc   ffd9
                                           ;	.line	1457; meter_logger.c	PIE2bits.CMIE = 0;		// Disable comparator interrupt
0052de   9ca0     bcf     0xa0, 0x6, 0     	BCF	_PIE2bits, 6
0052e0   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1458; meter_logger.c	codec_type = NONE;
0052e2   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
0052e4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0052e6   ffd9
0052e8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_rx_enable	code
                                           _fsk_rx_enable:
                                           ;	.line	1420; meter_logger.c	void fsk_rx_enable() {
004cd0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004cd2   ffe5
004cd4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004cd6   ffd9
                                           ;	.line	1421; meter_logger.c	fsk_proto.state = START_BIT_WAIT;
004cd8   0e02     movlw   0x2              	MOVLW	0x02
004cda   0105     movlb   0x5              	BANKSEL	_fsk_proto
004cdc   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1422; meter_logger.c	fsk_proto.start_bit_time = 0;
004cde   6b0a     clrf    0xa, 0x1         	CLRF	(_fsk_proto + 10), B
                                           ; removed redundant BANKSEL
004ce0   6b0b     clrf    0xb, 0x1         	CLRF	(_fsk_proto + 11), B
                                           ;	.line	1424; meter_logger.c	timer0_reload = TIMER0_FSK;
004ce2   0e9f     movlw   0x9f             	MOVLW	0x9f
004ce4   0105     movlb   0x5              	BANKSEL	_timer0_reload
004ce6   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
004ce8   0ef9     movlw   0xf9             	MOVLW	0xf9
                                           ; removed redundant BANKSEL
004cea   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
                                           ;	.line	1426; meter_logger.c	codec_type = FSK_RX;
004cec   0e06     movlw   0x6              	MOVLW	0x06
004cee   0105     movlb   0x5              	BANKSEL	_codec_type
004cf0   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1429; meter_logger.c	T0CONbits.TMR0ON = 1;
004cf2   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1430; meter_logger.c	T0CONbits.T0PS0 = 0;
004cf4   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1431; meter_logger.c	T0CONbits.T0PS1 = 0;
004cf6   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1432; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004cf8   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1433; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004cfa   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1434; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004cfc   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1435; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004cfe   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1436; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004d00   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1437; meter_logger.c	INTCONbits.TMR0IE = 0;		// Dont enable TMR0 Interrupt
004d02   9af2     bcf     0xf2, 0x5, 0     	BCF	_INTCONbits, 5
                                           ;	.line	1440; meter_logger.c	CVRCONbits.CVREF = 0xf;	// 0V
004d04   88b5     bsf     0xb5, 0x4, 0     	BSF	_CVRCONbits, 4
                                           ;	.line	1442; meter_logger.c	CVRCONbits.CVRSS = 0;	// VDD – VSS
004d06   98b5     bcf     0xb5, 0x4, 0     	BCF	_CVRCONbits, 4
                                           ;	.line	1443; meter_logger.c	CVRCONbits.CVRR = 0;	// high range, 0.25 CVRSRC to 0.75 CVRSRC, with CVRSRC/32 step size
004d08   9ab5     bcf     0xb5, 0x5, 0     	BCF	_CVRCONbits, 5
                                           ;	.line	1444; meter_logger.c	CVRCONbits.CVR = 9;		// 2,65625 V
004d0a   50b5     movf    0xb5, 0, 0       	MOVF	_CVRCONbits, W
004d0c   0bf0     andlw   0xf0             	ANDLW	0xf0
004d0e   0909     iorlw   0x9              	IORLW	0x09
004d10   6eb5     movwf   0xb5, 0          	MOVWF	_CVRCONbits
                                           ;	.line	1445; meter_logger.c	CVRCONbits.CVROE = 0;	// Comparator VREF Output disabled, CVREF voltage is disconnected from the RA2/AN2/VREF-/CVREF pin
004d12   9cb5     bcf     0xb5, 0x6, 0     	BCF	_CVRCONbits, 6
                                           ;	.line	1446; meter_logger.c	CVRCONbits.CVREN = 1;	// Comparator Voltage Reference Enable bit
004d14   8eb5     bsf     0xb5, 0x7, 0     	BSF	_CVRCONbits, 7
                                           ;	.line	1448; meter_logger.c	CMCONbits.CM = 0x6;		// four inputs multiplexed to two comparators
004d16   50b4     movf    0xb4, 0, 0       	MOVF	_CMCONbits, W
004d18   0bf8     andlw   0xf8             	ANDLW	0xf8
004d1a   0906     iorlw   0x6              	IORLW	0x06
004d1c   6eb4     movwf   0xb4, 0          	MOVWF	_CMCONbits
                                           ;	.line	1449; meter_logger.c	CMCONbits.CIS = 0;		// multiplexed to RA0/AN0 and RA1/AN1
004d1e   96b4     bcf     0xb4, 0x3, 0     	BCF	_CMCONbits, 3
                                           ;	.line	1450; meter_logger.c	CMCONbits.C1INV = 1;	// inverted output, C1 VIN+ < C1 VIN-
004d20   88b4     bsf     0xb4, 0x4, 0     	BSF	_CMCONbits, 4
                                           ;	.line	1452; meter_logger.c	IPR2bits.CMIP = 1;		// high priority
004d22   8ca2     bsf     0xa2, 0x6, 0     	BSF	_IPR2bits, 6
                                           ;	.line	1453; meter_logger.c	PIE2bits.CMIE = 1;		// Enable comparator interrupt
004d24   8ca0     bsf     0xa0, 0x6, 0     	BSF	_PIE2bits, 6
004d26   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004d28   ffd9
004d2a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_disable	code
                                           _fsk_tx_disable:
                                           ;	.line	1414; meter_logger.c	void fsk_tx_disable() {
005252   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005254   ffe5
005256   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005258   ffd9
00525a   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1415; meter_logger.c	codec_type = NONE;
00525c   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1416; meter_logger.c	T0CONbits.TMR0ON = 0;	// Disable TMR0 
00525e   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1417; meter_logger.c	PIE2bits.CMIE = 1;		// Disable comparator interrupt
005260   8ca0     bsf     0xa0, 0x6, 0     	BSF	_PIE2bits, 6
005262   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005264   ffd9
005266   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__fsk_tx_enable	code
                                           _fsk_tx_enable:
                                           ;	.line	1396; meter_logger.c	void fsk_tx_enable() {
004fa2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004fa4   ffe5
004fa6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004fa8   ffd9
                                           ;	.line	1397; meter_logger.c	timer0_reload = TIMER0_FSK;
004faa   0e9f     movlw   0x9f             	MOVLW	0x9f
004fac   0105     movlb   0x5              	BANKSEL	_timer0_reload
004fae   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
004fb0   0ef9     movlw   0xf9             	MOVLW	0xf9
                                           ; removed redundant BANKSEL
004fb2   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
004fb4   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	1399; meter_logger.c	fsk_proto.state = INIT_STATE;
004fb6   6b00     clrf    0, 0x1           	CLRF	_fsk_proto, B
                                           ;	.line	1400; meter_logger.c	codec_type = FSK_TX;
004fb8   0e07     movlw   0x7              	MOVLW	0x07
004fba   0105     movlb   0x5              	BANKSEL	_codec_type
004fbc   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1403; meter_logger.c	T0CONbits.TMR0ON = 1;
004fbe   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1404; meter_logger.c	T0CONbits.T0PS0 = 0;
004fc0   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1405; meter_logger.c	T0CONbits.T0PS1 = 0;
004fc2   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1406; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004fc4   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1407; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004fc6   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1408; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004fc8   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1409; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004fca   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1410; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004fcc   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1411; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004fce   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
004fd0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004fd2   ffd9
004fd4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_tx_byte	code
                                           _rs232_7e1_tx_byte:
                                           ;	.line	1386; meter_logger.c	void rs232_7e1_tx_byte(unsigned char c) {
004fd6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004fd8   ffe5
004fda   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004fdc   ffd9
004fde   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004fe0   ffe5
004fe2   0e02     movlw   0x2              	MOVLW	0x02
004fe4   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004fe6   f000
                                           ;	.line	1387; meter_logger.c	rs232_proto.data = c;
004fe8   5000     movf    0, 0, 0          	MOVF	r0x00, W
004fea   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
004fec   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	1388; meter_logger.c	rs232_proto.data_len = 7;
004fee   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
004ff0   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	1389; meter_logger.c	T0CONbits.TMR0ON = 1;		// start timer 0
004ff2   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1390; meter_logger.c	INTCONbits.TMR0IF = 1;		// enter timer interrupt handler now
004ff4   84f2     bsf     0xf2, 0x2, 0     	BSF	_INTCONbits, 2
                                           _01019_DS_:
004ff6   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	1391; meter_logger.c	while (rs232_proto.data_len) {
004ff8   5126     movf    0x26, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
004ffa   e1fd     bnz     0x4ff6           	BNZ	_01019_DS_
004ffc   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004ffe   f000
005000   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005002   ffd9
005004   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_rx_disable	code
                                           _rs232_7e1_rx_disable:
                                           ;	.line	1380; meter_logger.c	void rs232_7e1_rx_disable() {
005268   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00526a   ffe5
00526c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00526e   ffd9
                                           ;	.line	1381; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
005270   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
005272   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1382; meter_logger.c	codec_type = NONE;
005274   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1383; meter_logger.c	T0CONbits.TMR0ON = 0;
005276   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
005278   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00527a   ffd9
00527c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_rx_enable	code
                                           _rs232_7e1_rx_enable:
                                           ;	.line	1356; meter_logger.c	void rs232_7e1_rx_enable(unsigned int t) {
004d82   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004d84   ffe5
004d86   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004d88   ffd9
004d8a   0e02     movlw   0x2              	MOVLW	0x02
004d8c   cfdb     movff   0xfdb, 0x548     	MOVFF	PLUSW2, _timer0_reload
004d8e   f548
004d90   0e03     movlw   0x3              	MOVLW	0x03
004d92   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, (_timer0_reload + 1)
004d94   f549
                                           ;	.line	1357; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
004d96   0e02     movlw   0x2              	MOVLW	0x02
004d98   0105     movlb   0x5              	BANKSEL	_rs232_proto
004d9a   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1358; meter_logger.c	rs232_proto.data_len = 0;
004d9c   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1362; meter_logger.c	codec_type = RS232_7E1_RX;
004d9e   0e04     movlw   0x4              	MOVLW	0x04
004da0   0105     movlb   0x5              	BANKSEL	_codec_type
004da2   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1365; meter_logger.c	T0CONbits.TMR0ON = 0;
004da4   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1366; meter_logger.c	T0CONbits.T0PS0 = 0;
004da6   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1367; meter_logger.c	T0CONbits.T0PS1 = 0;
004da8   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1368; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004daa   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1369; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004dac   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1370; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004dae   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1371; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004db0   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1372; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004db2   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1373; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004db4   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1374; meter_logger.c	INTCONbits.TMR0IF = 0;
004db6   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1376; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
004db8   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1377; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004dba   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
004dbc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004dbe   ffd9
004dc0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_tx_disable	code
                                           _rs232_7e1_tx_disable:
                                           ;	.line	1350; meter_logger.c	void rs232_7e1_tx_disable() {
00527e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005280   ffe5
005282   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005284   ffd9
005286   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1351; meter_logger.c	codec_type = NONE;
005288   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1352; meter_logger.c	IR_LED_PIN = 0;				// no need to set it to inverted idle
00528a   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1353; meter_logger.c	T0CONbits.TMR0ON = 0;
00528c   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
00528e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005290   ffd9
005292   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_7e1_tx_enable	code
                                           _rs232_7e1_tx_enable:
                                           ;	.line	1324; meter_logger.c	void rs232_7e1_tx_enable(unsigned int t) {
004e42   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004e44   ffe5
004e46   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004e48   ffd9
004e4a   0e02     movlw   0x2              	MOVLW	0x02
004e4c   cfdb     movff   0xfdb, 0x548     	MOVFF	PLUSW2, _timer0_reload
004e4e   f548
004e50   0e03     movlw   0x3              	MOVLW	0x03
004e52   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, (_timer0_reload + 1)
004e54   f549
004e56   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	1327; meter_logger.c	rs232_proto.state = INIT_STATE;
004e58   6b23     clrf    0x23, 0x1        	CLRF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1328; meter_logger.c	rs232_proto.data_len = 0;
004e5a   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1330; meter_logger.c	IR_LED_PIN = 0;				// inverted rs232 output on ir, idle = no ir light
004e5c   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1332; meter_logger.c	codec_type = RS232_7E1_TX;
004e5e   0e05     movlw   0x5              	MOVLW	0x05
004e60   0105     movlb   0x5              	BANKSEL	_codec_type
004e62   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1335; meter_logger.c	T0CONbits.TMR0ON = 0;
004e64   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1336; meter_logger.c	T0CONbits.T0PS0 = 0;
004e66   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1337; meter_logger.c	T0CONbits.T0PS1 = 0;
004e68   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1338; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004e6a   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1339; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004e6c   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1340; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004e6e   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1341; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004e70   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1342; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004e72   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1343; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004e74   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1344; meter_logger.c	INTCONbits.TMR0IF = 0;
004e76   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1347; meter_logger.c	T0CONbits.TMR0ON = 0;		// timer 0 started in rs232_8n2_tx_byte()
004e78   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
004e7a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004e7c   ffd9
004e7e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_tx_byte	code
                                           _rs232_8n2_tx_byte:
                                           ;	.line	1314; meter_logger.c	void rs232_8n2_tx_byte(unsigned char c) {
005006   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005008   ffe5
00500a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00500c   ffd9
00500e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
005010   ffe5
005012   0e02     movlw   0x2              	MOVLW	0x02
005014   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
005016   f000
                                           ;	.line	1315; meter_logger.c	rs232_proto.data = c;
005018   5000     movf    0, 0, 0          	MOVF	r0x00, W
00501a   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
00501c   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	1316; meter_logger.c	rs232_proto.data_len = 8;
00501e   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
005020   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	1317; meter_logger.c	T0CONbits.TMR0ON = 1;		// start timer 0
005022   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	1318; meter_logger.c	INTCONbits.TMR0IF = 1;		// enter timer interrupt handler now
005024   84f2     bsf     0xf2, 0x2, 0     	BSF	_INTCONbits, 2
                                           _00991_DS_:
005026   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	1319; meter_logger.c	while (rs232_proto.data_len) {
005028   5126     movf    0x26, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
00502a   e1fd     bnz     0x5026           	BNZ	_00991_DS_
00502c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00502e   f000
005030   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005032   ffd9
005034   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_rx_disable	code
                                           _rs232_8n2_rx_disable:
                                           ;	.line	1308; meter_logger.c	void rs232_8n2_rx_disable() {
005294   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005296   ffe5
005298   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00529a   ffd9
                                           ;	.line	1309; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
00529c   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
00529e   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1310; meter_logger.c	codec_type = NONE;
0052a0   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1311; meter_logger.c	T0CONbits.TMR0ON = 0;
0052a2   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
0052a4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0052a6   ffd9
0052a8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_rx_enable	code
                                           _rs232_8n2_rx_enable:
                                           ;	.line	1284; meter_logger.c	void rs232_8n2_rx_enable(unsigned int t) {
004dc2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004dc4   ffe5
004dc6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004dc8   ffd9
004dca   0e02     movlw   0x2              	MOVLW	0x02
004dcc   cfdb     movff   0xfdb, 0x548     	MOVFF	PLUSW2, _timer0_reload
004dce   f548
004dd0   0e03     movlw   0x3              	MOVLW	0x03
004dd2   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, (_timer0_reload + 1)
004dd4   f549
                                           ;	.line	1285; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
004dd6   0e02     movlw   0x2              	MOVLW	0x02
004dd8   0105     movlb   0x5              	BANKSEL	_rs232_proto
004dda   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1286; meter_logger.c	rs232_proto.data_len = 0;
004ddc   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1290; meter_logger.c	codec_type = RS232_8N2_RX;
004dde   0e02     movlw   0x2              	MOVLW	0x02
004de0   0105     movlb   0x5              	BANKSEL	_codec_type
004de2   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1293; meter_logger.c	T0CONbits.TMR0ON = 0;
004de4   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1294; meter_logger.c	T0CONbits.T0PS0 = 0;
004de6   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1295; meter_logger.c	T0CONbits.T0PS1 = 0;
004de8   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1296; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004dea   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1297; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004dec   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1298; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004dee   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1299; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004df0   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1300; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004df2   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1301; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004df4   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1302; meter_logger.c	INTCONbits.TMR0IF = 0;
004df6   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1304; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
004df8   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1305; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004dfa   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
004dfc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004dfe   ffd9
004e00   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_tx_disable	code
                                           _rs232_8n2_tx_disable:
                                           ;	.line	1278; meter_logger.c	void rs232_8n2_tx_disable() {
0052aa   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0052ac   ffe5
0052ae   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0052b0   ffd9
0052b2   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1279; meter_logger.c	codec_type = NONE;
0052b4   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1280; meter_logger.c	IR_LED_PIN = 0;				// no need to set it to inverted idle
0052b6   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1281; meter_logger.c	T0CONbits.TMR0ON = 0;
0052b8   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
0052ba   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0052bc   ffd9
0052be   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__rs232_8n2_tx_enable	code
                                           _rs232_8n2_tx_enable:
                                           ;	.line	1252; meter_logger.c	void rs232_8n2_tx_enable(unsigned int t) {
004e80   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004e82   ffe5
004e84   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004e86   ffd9
004e88   0e02     movlw   0x2              	MOVLW	0x02
004e8a   cfdb     movff   0xfdb, 0x548     	MOVFF	PLUSW2, _timer0_reload
004e8c   f548
004e8e   0e03     movlw   0x3              	MOVLW	0x03
004e90   cfdb     movff   0xfdb, 0x549     	MOVFF	PLUSW2, (_timer0_reload + 1)
004e92   f549
004e94   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	1255; meter_logger.c	rs232_proto.state = INIT_STATE;
004e96   6b23     clrf    0x23, 0x1        	CLRF	_rs232_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1256; meter_logger.c	rs232_proto.data_len = 0;
004e98   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	1258; meter_logger.c	IR_LED_PIN = 0;				// inverted rs232 output on ir, idle = no ir light
004e9a   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1260; meter_logger.c	codec_type = RS232_8N2_TX;
004e9c   0e03     movlw   0x3              	MOVLW	0x03
004e9e   0105     movlb   0x5              	BANKSEL	_codec_type
004ea0   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1263; meter_logger.c	T0CONbits.TMR0ON = 0;
004ea2   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1264; meter_logger.c	T0CONbits.T0PS0 = 0;
004ea4   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1265; meter_logger.c	T0CONbits.T0PS1 = 0;
004ea6   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1266; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004ea8   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1267; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004eaa   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1268; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004eac   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1269; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004eae   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1270; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004eb0   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1271; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004eb2   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1272; meter_logger.c	INTCONbits.TMR0IF = 0;
004eb4   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1275; meter_logger.c	T0CONbits.TMR0ON = 0;		// timer 0 started in rs232_8n2_tx_byte()
004eb6   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
004eb8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004eba   ffd9
004ebc   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_ir_disable	code
                                           _testo_ir_disable:
                                           ;	.line	1247; meter_logger.c	void testo_ir_disable() {
0052ea   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0052ec   ffe5
0052ee   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0052f0   ffd9
0052f2   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	1248; meter_logger.c	codec_type = NONE;
0052f4   6b51     clrf    0x51, 0x1        	CLRF	_codec_type, B
                                           ;	.line	1249; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int
0052f6   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
0052f8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0052fa   ffd9
0052fc   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_ir_enable	code
                                           _testo_ir_enable:
                                           ;	.line	1223; meter_logger.c	void testo_ir_enable() {
004ebe   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004ec0   ffe5
004ec2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004ec4   ffd9
004ec6   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	1224; meter_logger.c	testo_ir_proto.state = INIT_STATE;
004ec8   6b1d     clrf    0x1d, 0x1        	CLRF	_testo_ir_proto, B
                                           ; removed redundant BANKSEL
                                           ;	.line	1225; meter_logger.c	testo_ir_proto.start_bit_len = 0;
004eca   6b1f     clrf    0x1f, 0x1        	CLRF	(_testo_ir_proto + 2), B
                                           ;	.line	1227; meter_logger.c	timer0_reload = TIMER0_TESTO;
004ecc   0e23     movlw   0x23             	MOVLW	0x23
004ece   0105     movlb   0x5              	BANKSEL	_timer0_reload
004ed0   6f48     movwf   0x48, 0x1        	MOVWF	_timer0_reload, B
004ed2   0ef3     movlw   0xf3             	MOVLW	0xf3
                                           ; removed redundant BANKSEL
004ed4   6f49     movwf   0x49, 0x1        	MOVWF	(_timer0_reload + 1), B
                                           ;	.line	1229; meter_logger.c	codec_type = TESTO;
004ed6   0e01     movlw   0x1              	MOVLW	0x01
004ed8   0105     movlb   0x5              	BANKSEL	_codec_type
004eda   6f51     movwf   0x51, 0x1        	MOVWF	_codec_type, B
                                           ;	.line	1232; meter_logger.c	T0CONbits.TMR0ON = 0;
004edc   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	1233; meter_logger.c	T0CONbits.T0PS0 = 0;
004ede   90d5     bcf     0xd5, 0, 0       	BCF	_T0CONbits, 0
                                           ;	.line	1234; meter_logger.c	T0CONbits.T0PS1 = 0;
004ee0   92d5     bcf     0xd5, 0x1, 0     	BCF	_T0CONbits, 1
                                           ;	.line	1235; meter_logger.c	T0CONbits.T0PS2 = 0;		// prescaler 1:2
004ee2   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	1236; meter_logger.c	T0CONbits.T08BIT = 0;		// use timer0 16-bit counter
004ee4   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	1237; meter_logger.c	T0CONbits.T0CS = 0;			// internal clock source
004ee6   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	1238; meter_logger.c	T0CONbits.PSA = 1;			// disable timer0 prescaler
004ee8   86d5     bsf     0xd5, 0x3, 0     	BSF	_T0CONbits, 3
                                           ;	.line	1239; meter_logger.c	INTCON2bits.TMR0IP = 1;		// high priority
004eea   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	1240; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
004eec   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	1241; meter_logger.c	INTCONbits.TMR0IF = 0;
004eee   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	1243; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int
004ef0   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	1244; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004ef2   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
004ef4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004ef6   ffd9
004ef8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__testo_valid_err_corr	code
                                           _testo_valid_err_corr:
                                           ;	.line	1168; meter_logger.c	unsigned char testo_valid_err_corr(unsigned int c) {
003ab6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003ab8   ffe5
003aba   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003abc   ffd9
003abe   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003ac0   ffe5
003ac2   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003ac4   ffe5
003ac6   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003ac8   ffe5
003aca   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003acc   ffe5
003ace   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003ad0   ffe5
003ad2   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003ad4   ffe5
003ad6   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003ad8   ffe5
003ada   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
003adc   ffe5
003ade   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
003ae0   ffe5
003ae2   0e02     movlw   0x2              	MOVLW	0x02
003ae4   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003ae6   f000
003ae8   0e03     movlw   0x3              	MOVLW	0x03
003aea   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003aec   f001
                                           ;	.line	1175; meter_logger.c	calculated_err_corr_bit = 0;
003aee   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1176; meter_logger.c	for (i = 0; i < 8; i++) {
003af0   0e78     movlw   0x78             	MOVLW	0x78
003af2   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003af4   6e03     movwf   0x3, 0           	MOVWF	r0x03
003af6   6a04     clrf    0x4, 0           	CLRF	r0x04
003af8   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00879_DS_:
                                           ;	.line	1177; meter_logger.c	calculated_err_corr_bit ^= (((c & 0x78) & (1 << i)) != 0);   // 0b01111000
003afa   0e01     movlw   0x1              	MOVLW	0x01
003afc   6e06     movwf   0x6, 0           	MOVWF	r0x06
003afe   0e00     movlw   0                	MOVLW	0x00
003b00   6e07     movwf   0x7, 0           	MOVWF	r0x07
003b02   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003b04   e006     bz      0x3b12           	BZ	_00921_DS_
003b06   6ce8     negf    0xe8, 0          	NEGF	WREG
003b08   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00922_DS_:
003b0a   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
003b0c   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003b0e   0f01     addlw   0x1              	ADDLW	0x01
003b10   e3fc     bnc     0x3b0a           	BNC	_00922_DS_
                                           _00921_DS_:
003b12   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003b14   1606     andwf   0x6, 0x1, 0      	ANDWF	r0x06, F
003b16   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003b18   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003b1a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003b1c   e105     bnz     0x3b28           	BNZ	_00924_DS_
003b1e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003b20   e103     bnz     0x3b28           	BNZ	_00924_DS_
003b22   6a06     clrf    0x6, 0           	CLRF	r0x06
003b24   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003b26   d001     bra     0x3b2a           	BRA	_00925_DS_
                                           _00924_DS_:
003b28   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00925_DS_:
003b2a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003b2c   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003b2e   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003b30   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003b32   6a06     clrf    0x6, 0           	CLRF	r0x06
003b34   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
003b36   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003b38   6e07     movwf   0x7, 0           	MOVWF	r0x07
003b3a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003b3c   1807     xorwf   0x7, 0, 0        	XORWF	r0x07, W
003b3e   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1176; meter_logger.c	for (i = 0; i < 8; i++) {
003b40   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
003b42   0e08     movlw   0x8              	MOVLW	0x08
003b44   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
003b46   e3d9     bnc     0x3afa           	BNC	_00879_DS_
                                           ;	.line	1180; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003b48   4402     rlncf   0x2, 0, 0        	RLNCF	r0x02, W
003b4a   0bfe     andlw   0xfe             	ANDLW	0xfe
003b4c   6e03     movwf   0x3, 0           	MOVWF	r0x03
                                           ;	.line	1183; meter_logger.c	calculated_err_corr_bit = 0;
003b4e   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1184; meter_logger.c	for (i = 0; i < 8; i++) {
003b50   0ee6     movlw   0xe6             	MOVLW	0xe6
003b52   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003b54   6e04     movwf   0x4, 0           	MOVWF	r0x04
003b56   6a05     clrf    0x5, 0           	CLRF	r0x05
003b58   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00881_DS_:
                                           ;	.line	1185; meter_logger.c	calculated_err_corr_bit ^= (((c & 0xe6) & (1 << i)) != 0);   // 0b11100110
003b5a   0e01     movlw   0x1              	MOVLW	0x01
003b5c   6e07     movwf   0x7, 0           	MOVWF	r0x07
003b5e   0e00     movlw   0                	MOVLW	0x00
003b60   6e08     movwf   0x8, 0           	MOVWF	r0x08
003b62   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003b64   e006     bz      0x3b72           	BZ	_00929_DS_
003b66   6ce8     negf    0xe8, 0          	NEGF	WREG
003b68   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00930_DS_:
003b6a   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003b6c   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003b6e   0f01     addlw   0x1              	ADDLW	0x01
003b70   e3fc     bnc     0x3b6a           	BNC	_00930_DS_
                                           _00929_DS_:
003b72   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003b74   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003b76   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003b78   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003b7a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003b7c   e105     bnz     0x3b88           	BNZ	_00932_DS_
003b7e   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003b80   e103     bnz     0x3b88           	BNZ	_00932_DS_
003b82   6a07     clrf    0x7, 0           	CLRF	r0x07
003b84   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003b86   d001     bra     0x3b8a           	BRA	_00933_DS_
                                           _00932_DS_:
003b88   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00933_DS_:
003b8a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003b8c   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003b8e   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003b90   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003b92   6a07     clrf    0x7, 0           	CLRF	r0x07
003b94   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003b96   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003b98   6e08     movwf   0x8, 0           	MOVWF	r0x08
003b9a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003b9c   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003b9e   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1184; meter_logger.c	for (i = 0; i < 8; i++) {
003ba0   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003ba2   0e08     movlw   0x8              	MOVLW	0x08
003ba4   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003ba6   e3d9     bnc     0x3b5a           	BNC	_00881_DS_
                                           ;	.line	1187; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003ba8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003baa   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1188; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003bac   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003bae   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
                                           ;	.line	1191; meter_logger.c	calculated_err_corr_bit = 0;
003bb0   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1192; meter_logger.c	for (i = 0; i < 8; i++) {
003bb2   0ed5     movlw   0xd5             	MOVLW	0xd5
003bb4   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003bb6   6e04     movwf   0x4, 0           	MOVWF	r0x04
003bb8   6a05     clrf    0x5, 0           	CLRF	r0x05
003bba   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00883_DS_:
                                           ;	.line	1193; meter_logger.c	calculated_err_corr_bit ^= (((c & 0xd5) & (1 << i)) != 0);   // 0b11010101
003bbc   0e01     movlw   0x1              	MOVLW	0x01
003bbe   6e07     movwf   0x7, 0           	MOVWF	r0x07
003bc0   0e00     movlw   0                	MOVLW	0x00
003bc2   6e08     movwf   0x8, 0           	MOVWF	r0x08
003bc4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003bc6   e006     bz      0x3bd4           	BZ	_00938_DS_
003bc8   6ce8     negf    0xe8, 0          	NEGF	WREG
003bca   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00939_DS_:
003bcc   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003bce   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003bd0   0f01     addlw   0x1              	ADDLW	0x01
003bd2   e3fc     bnc     0x3bcc           	BNC	_00939_DS_
                                           _00938_DS_:
003bd4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003bd6   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003bd8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003bda   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003bdc   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003bde   e105     bnz     0x3bea           	BNZ	_00941_DS_
003be0   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003be2   e103     bnz     0x3bea           	BNZ	_00941_DS_
003be4   6a07     clrf    0x7, 0           	CLRF	r0x07
003be6   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003be8   d001     bra     0x3bec           	BRA	_00942_DS_
                                           _00941_DS_:
003bea   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00942_DS_:
003bec   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003bee   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003bf0   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003bf2   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003bf4   6a07     clrf    0x7, 0           	CLRF	r0x07
003bf6   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003bf8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003bfa   6e08     movwf   0x8, 0           	MOVWF	r0x08
003bfc   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003bfe   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003c00   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1192; meter_logger.c	for (i = 0; i < 8; i++) {
003c02   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003c04   0e08     movlw   0x8              	MOVLW	0x08
003c06   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003c08   e3d9     bnc     0x3bbc           	BNC	_00883_DS_
                                           ;	.line	1195; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003c0a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003c0c   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1196; meter_logger.c	calculated_err_corr = calculated_err_corr << 1;
003c0e   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003c10   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
                                           ;	.line	1199; meter_logger.c	calculated_err_corr_bit = 0;
003c12   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	1200; meter_logger.c	for (i = 0; i < 8; i++) {
003c14   0e8b     movlw   0x8b             	MOVLW	0x8b
003c16   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003c18   6e04     movwf   0x4, 0           	MOVWF	r0x04
003c1a   6a05     clrf    0x5, 0           	CLRF	r0x05
003c1c   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           _00885_DS_:
                                           ;	.line	1201; meter_logger.c	calculated_err_corr_bit ^= (((c & 0x8b) & (1 << i)) != 0);   // 0b10001011
003c1e   0e01     movlw   0x1              	MOVLW	0x01
003c20   6e07     movwf   0x7, 0           	MOVWF	r0x07
003c22   0e00     movlw   0                	MOVLW	0x00
003c24   6e08     movwf   0x8, 0           	MOVWF	r0x08
003c26   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003c28   e006     bz      0x3c36           	BZ	_00947_DS_
003c2a   6ce8     negf    0xe8, 0          	NEGF	WREG
003c2c   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00948_DS_:
003c2e   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003c30   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
003c32   0f01     addlw   0x1              	ADDLW	0x01
003c34   e3fc     bnc     0x3c2e           	BNC	_00948_DS_
                                           _00947_DS_:
003c36   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003c38   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
003c3a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003c3c   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
003c3e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003c40   e105     bnz     0x3c4c           	BNZ	_00950_DS_
003c42   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003c44   e103     bnz     0x3c4c           	BNZ	_00950_DS_
003c46   6a07     clrf    0x7, 0           	CLRF	r0x07
003c48   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
003c4a   d001     bra     0x3c4e           	BRA	_00951_DS_
                                           _00950_DS_:
003c4c   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00951_DS_:
003c4e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003c50   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003c52   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003c54   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003c56   6a07     clrf    0x7, 0           	CLRF	r0x07
003c58   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
003c5a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003c5c   6e08     movwf   0x8, 0           	MOVWF	r0x08
003c5e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003c60   1808     xorwf   0x8, 0, 0        	XORWF	r0x08, W
003c62   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	1200; meter_logger.c	for (i = 0; i < 8; i++) {
003c64   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
003c66   0e08     movlw   0x8              	MOVLW	0x08
003c68   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003c6a   e3d9     bnc     0x3c1e           	BNC	_00885_DS_
                                           ;	.line	1203; meter_logger.c	calculated_err_corr |= calculated_err_corr_bit;
003c6c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003c6e   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
                                           ;	.line	1214; meter_logger.c	if ((c >> 8) == calculated_err_corr) {
003c70   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003c72   6e00     movwf   0, 0             	MOVWF	r0x00
003c74   6a01     clrf    0x1, 0           	CLRF	r0x01
003c76   6a02     clrf    0x2, 0           	CLRF	r0x02
003c78   5000     movf    0, 0, 0          	MOVF	r0x00, W
003c7a   1803     xorwf   0x3, 0, 0        	XORWF	r0x03, W
003c7c   e103     bnz     0x3c84           	BNZ	_00955_DS_
003c7e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003c80   1802     xorwf   0x2, 0, 0        	XORWF	r0x02, W
003c82   e001     bz      0x3c86           	BZ	_00956_DS_
                                           _00955_DS_:
003c84   d002     bra     0x3c8a           	BRA	_00877_DS_
                                           _00956_DS_:
                                           ;	.line	1215; meter_logger.c	return 1;
003c86   0e01     movlw   0x1              	MOVLW	0x01
003c88   d001     bra     0x3c8c           	BRA	_00887_DS_
                                           _00877_DS_:
                                           ;	.line	1218; meter_logger.c	return 0;
003c8a   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00887_DS_:
003c8c   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
003c8e   f008
003c90   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003c92   f007
003c94   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003c96   f006
003c98   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003c9a   f005
003c9c   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003c9e   f004
003ca0   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003ca2   f003
003ca4   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003ca6   f002
003ca8   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003caa   f001
003cac   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003cae   f000
003cb0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003cb2   ffd9
003cb4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__reverse	code
                                           _reverse:
                                           ;	.line	1160; meter_logger.c	unsigned char reverse(unsigned char b) {
004ade   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004ae0   ffe5
004ae2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004ae4   ffd9
004ae6   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004ae8   ffe5
004aea   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004aec   ffe5
004aee   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004af0   ffe5
004af2   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004af4   ffe5
004af6   0e02     movlw   0x2              	MOVLW	0x02
004af8   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004afa   f000
                                           ;	.line	1162; meter_logger.c	c  = ((b >>  1) & 0x55) | ((b <<  1) & 0xaa);
004afc   4000     rrncf   0, 0, 0          	RRNCF	r0x00, W
004afe   0b7f     andlw   0x7f             	ANDLW	0x7f
004b00   6e01     movwf   0x1, 0           	MOVWF	r0x01
004b02   0e55     movlw   0x55             	MOVLW	0x55
004b04   1601     andwf   0x1, 0x1, 0      	ANDWF	r0x01, F
004b06   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
004b08   0bfe     andlw   0xfe             	ANDLW	0xfe
004b0a   6e02     movwf   0x2, 0           	MOVWF	r0x02
004b0c   0eaa     movlw   0xaa             	MOVLW	0xaa
004b0e   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004b10   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004b12   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1163; meter_logger.c	c |= ((b >>  2) & 0x33) | ((b <<  2) & 0xcc);
004b14   4000     rrncf   0, 0, 0          	RRNCF	r0x00, W
004b16   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
004b18   0b3f     andlw   0x3f             	ANDLW	0x3f
004b1a   6e02     movwf   0x2, 0           	MOVWF	r0x02
004b1c   0e33     movlw   0x33             	MOVLW	0x33
004b1e   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004b20   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
004b22   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
004b24   0bfc     andlw   0xfc             	ANDLW	0xfc
004b26   6e03     movwf   0x3, 0           	MOVWF	r0x03
004b28   0ecc     movlw   0xcc             	MOVLW	0xcc
004b2a   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
004b2c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004b2e   1202     iorwf   0x2, 0x1, 0      	IORWF	r0x02, F
004b30   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004b32   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1164; meter_logger.c	c |= ((b >>  4) & 0x0f) | ((b <<  4) & 0xf0);
004b34   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
004b36   0b0f     andlw   0xf              	ANDLW	0x0f
004b38   6e02     movwf   0x2, 0           	MOVWF	r0x02
004b3a   0e0f     movlw   0xf              	MOVLW	0x0f
004b3c   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
004b3e   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
004b40   0bf0     andlw   0xf0             	ANDLW	0xf0
004b42   6e03     movwf   0x3, 0           	MOVWF	r0x03
004b44   0ef0     movlw   0xf0             	MOVLW	0xf0
004b46   1403     andwf   0x3, 0, 0        	ANDWF	r0x03, W
004b48   6e00     movwf   0, 0             	MOVWF	r0x00
004b4a   5000     movf    0, 0, 0          	MOVF	r0x00, W
004b4c   1202     iorwf   0x2, 0x1, 0      	IORWF	r0x02, F
004b4e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004b50   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	1165; meter_logger.c	return(c);
004b52   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004b54   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004b56   f003
004b58   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004b5a   f002
004b5c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004b5e   f001
004b60   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004b62   f000
004b64   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004b66   ffd9
004b68   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__my_usart_open	code
                                           _my_usart_open:
                                           ;	.line	1130; meter_logger.c	void my_usart_open() {
00511c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00511e   ffe5
005120   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005122   ffd9
                                           ;	.line	1131; meter_logger.c	SPBRG = 103;					// 8MHz => 19230 baud
005124   0e67     movlw   0x67             	MOVLW	0x67
005126   6eaf     movwf   0xaf, 0          	MOVWF	_SPBRG
                                           ;	.line	1132; meter_logger.c	TXSTAbits.BRGH = 1;	// (0 = low speed)
005128   84ac     bsf     0xac, 0x2, 0     	BSF	_TXSTAbits, 2
                                           ;	.line	1133; meter_logger.c	TXSTAbits.SYNC = 0;	// (0 = asynchronous)
00512a   98ac     bcf     0xac, 0x4, 0     	BCF	_TXSTAbits, 4
                                           ;	.line	1134; meter_logger.c	BAUDCONbits.BRG16 = 1;
00512c   86b8     bsf     0xb8, 0x3, 0     	BSF	_BAUDCONbits, 3
                                           ;	.line	1137; meter_logger.c	RCSTAbits.SPEN = 1; // (1 = serial port enabled)
00512e   8eab     bsf     0xab, 0x7, 0     	BSF	_RCSTAbits, 7
                                           ;	.line	1140; meter_logger.c	PIE1bits.TXIE = 0; // (1 = enabled)
005130   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
                                           ;	.line	1141; meter_logger.c	IPR1bits.TXIP = 0; // USART Tx on low priority interrupt
005132   989f     bcf     0x9f, 0x4, 0     	BCF	_IPR1bits, 4
                                           ;	.line	1144; meter_logger.c	PIE1bits.RCIE = 1; // (1 = enabled)
005134   8a9d     bsf     0x9d, 0x5, 0     	BSF	_PIE1bits, 5
                                           ;	.line	1145; meter_logger.c	IPR1bits.RCIP = 0; // USART Rx on low priority interrupt
005136   9a9f     bcf     0x9f, 0x5, 0     	BCF	_IPR1bits, 5
                                           ;	.line	1148; meter_logger.c	TXSTAbits.TX9 = 0; // (0 = 8-bit transmit)
005138   9cac     bcf     0xac, 0x6, 0     	BCF	_TXSTAbits, 6
                                           ;	.line	1151; meter_logger.c	RCSTAbits.RX9 = 0; // (0 = 8-bit reception)
00513a   9cab     bcf     0xab, 0x6, 0     	BCF	_RCSTAbits, 6
                                           ;	.line	1154; meter_logger.c	RCSTAbits.CREN = 1; // (1 = Enables receiver)
00513c   88ab     bsf     0xab, 0x4, 0     	BSF	_RCSTAbits, 4
                                           ;	.line	1157; meter_logger.c	TXSTAbits.TXEN = 1; // (1 = transmit enabled)
00513e   8aac     bsf     0xac, 0x5, 0     	BSF	_TXSTAbits, 5
005140   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005142   ffd9
005144   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__get_dev_id	code
                                           _get_dev_id:
                                           ;	.line	1113; meter_logger.c	unsigned int get_dev_id() {
004c5e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004c60   ffe5
004c62   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004c64   ffd9
004c66   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004c68   ffe5
004c6a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004c6c   ffe5
004c6e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004c70   ffe5
004c72   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004c74   ffe5
004c76   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004c78   ffe5
004c7a   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004c7c   ffe5
                                           ;	.line	1116; meter_logger.c	TBLPTRU = __DEVID1 >> 16;
004c7e   0e3f     movlw   0x3f             	MOVLW	0x3f
004c80   6ef8     movwf   0xf8, 0          	MOVWF	_TBLPTRU
                                           ;	.line	1117; meter_logger.c	TBLPTRH = __DEVID1 >> 8;
004c82   0eff     movlw   0xff             	MOVLW	0xff
004c84   6ef7     movwf   0xf7, 0          	MOVWF	_TBLPTRH
                                           ;	.line	1118; meter_logger.c	TBLPTRL = __DEVID1;
004c86   0efe     movlw   0xfe             	MOVLW	0xfe
004c88   6ef6     movwf   0xf6, 0          	MOVWF	_TBLPTRL
004c8a   0009     tblrd   *+               	tblrd*+
                                           	
                                           ;	.line	1122; meter_logger.c	dev_id_low = TABLAT;
004c8c   cff5     movff   0xff5, 0         	MOVFF	_TABLAT, r0x00
004c8e   f000
004c90   0009     tblrd   *+               	tblrd*+
                                           	
                                           ;	.line	1126; meter_logger.c	dev_id_high = TABLAT;
004c92   cff5     movff   0xff5, 0x1       	MOVFF	_TABLAT, r0x01
004c94   f001
                                           ;	.line	1127; meter_logger.c	return ((dev_id_high << 8) + dev_id_low) & 0xffe0;	// dont return revision
004c96   6a02     clrf    0x2, 0           	CLRF	r0x02
004c98   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004c9a   6e04     movwf   0x4, 0           	MOVWF	r0x04
004c9c   6a03     clrf    0x3, 0           	CLRF	r0x03
004c9e   6a05     clrf    0x5, 0           	CLRF	r0x05
004ca0   5000     movf    0, 0, 0          	MOVF	r0x00, W
004ca2   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
004ca4   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
004ca6   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
004ca8   0ee0     movlw   0xe0             	MOVLW	0xe0
004caa   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
004cac   c004     movff   0x4, 0xff3       	MOVFF	r0x04, PRODL
004cae   fff3
004cb0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004cb2   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
004cb4   f005
004cb6   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004cb8   f004
004cba   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004cbc   f003
004cbe   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004cc0   f002
004cc2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004cc4   f001
004cc6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004cc8   f000
004cca   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004ccc   ffd9
004cce   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__init_system	code
                                           _init_system:
                                           ;	.line	1012; meter_logger.c	void init_system() {
004d2c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004d2e   ffe5
004d30   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004d32   ffd9
                                           ;	.line	1014; meter_logger.c	TRIS_COMP1 = INPUT_STATE;		// as input
004d34   8092     bsf     0x92, 0, 0       	BSF	_TRISAbits, 0
                                           ;	.line	1015; meter_logger.c	TRIS_COMP2 = INPUT_STATE;		// as input
004d36   8292     bsf     0x92, 0x1, 0     	BSF	_TRISAbits, 1
                                           ;	.line	1017; meter_logger.c	TRIS_IR_PIN = INPUT_STATE;		// as input
004d38   8093     bsf     0x93, 0, 0       	BSF	_TRISBbits, 0
                                           ;	.line	1019; meter_logger.c	TRIS_LED_PIN = OUTPUT_STATE;	// as output
004d3a   9893     bcf     0x93, 0x4, 0     	BCF	_TRISBbits, 4
                                           ;	.line	1020; meter_logger.c	LED_PIN = 0;					// and clear
004d3c   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	1022; meter_logger.c	TRIS_IR_LED_PIN = OUTPUT_STATE;	// as output
004d3e   9293     bcf     0x93, 0x1, 0     	BCF	_TRISBbits, 1
                                           ;	.line	1023; meter_logger.c	IR_LED_PIN = 0;					// and clear
004d40   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	1025; meter_logger.c	TRIS_V_SENSE = INPUT_STATE;		// as input
004d42   8a92     bsf     0x92, 0x5, 0     	BSF	_TRISAbits, 5
                                           ;	.line	1027; meter_logger.c	TRIS_DEBUG_PIN = OUTPUT_STATE;	// as output
004d44   9493     bcf     0x93, 0x2, 0     	BCF	_TRISBbits, 2
                                           ;	.line	1028; meter_logger.c	DEBUG_PIN = 0;					// and clear
004d46   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	1030; meter_logger.c	TRIS_DEBUG2_PIN = OUTPUT_STATE;	// as output
004d48   9693     bcf     0x93, 0x3, 0     	BCF	_TRISBbits, 3
                                           ;	.line	1031; meter_logger.c	DEBUG2_PIN = 0;					// and clear
004d4a   9681     bcf     0x81, 0x3, 0     	BCF	_PORTBbits, 3
                                           ;	.line	1033; meter_logger.c	TRIS_DEBUG3_PIN = OUTPUT_STATE;	// as output
004d4c   9893     bcf     0x93, 0x4, 0     	BCF	_TRISBbits, 4
                                           ;	.line	1034; meter_logger.c	DEBUG3_PIN = 0;					// and clear
004d4e   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	1038; meter_logger.c	TRIS_PWM_PIN = OUTPUT_STATE;	// enable output from pwm module at init
004d50   9294     bcf     0x94, 0x1, 0     	BCF	_TRISCbits, 1
                                           ;	.line	1039; meter_logger.c	PWM_PIN = 0;					// and clear
004d52   9282     bcf     0x82, 0x1, 0     	BCF	_PORTCbits, 1
                                           ;	.line	1042; meter_logger.c	TRIS_RX_PIN = INPUT_STATE;		// as input
004d54   8e94     bsf     0x94, 0x7, 0     	BSF	_TRISCbits, 7
                                           ;	.line	1043; meter_logger.c	TRIS_TX_PIN = OUTPUT_STATE;		// as input
004d56   9c94     bcf     0x94, 0x6, 0     	BCF	_TRISCbits, 6
                                           ;	.line	1048; meter_logger.c	T1CONbits.TMR1ON = 1;
004d58   80cd     bsf     0xcd, 0, 0       	BSF	_T1CONbits, 0
                                           ;	.line	1049; meter_logger.c	T1CONbits.RD16 = 1;
004d5a   8ecd     bsf     0xcd, 0x7, 0     	BSF	_T1CONbits, 7
                                           ;	.line	1050; meter_logger.c	T1CONbits.TMR1CS = 0;   // internal clock source
004d5c   92cd     bcf     0xcd, 0x1, 0     	BCF	_T1CONbits, 1
                                           ;	.line	1051; meter_logger.c	T1CONbits.T1OSCEN = 0;  // dont put t1 on pin
004d5e   96cd     bcf     0xcd, 0x3, 0     	BCF	_T1CONbits, 3
                                           ;	.line	1052; meter_logger.c	T1CONbits.T1CKPS0 = 0;
004d60   98cd     bcf     0xcd, 0x4, 0     	BCF	_T1CONbits, 4
                                           ;	.line	1053; meter_logger.c	T1CONbits.T1CKPS1 = 0;
004d62   9acd     bcf     0xcd, 0x5, 0     	BCF	_T1CONbits, 5
                                           ;	.line	1054; meter_logger.c	IPR1bits.TMR1IP = 0;	// low priority
004d64   909f     bcf     0x9f, 0, 0       	BCF	_IPR1bits, 0
                                           ;	.line	1055; meter_logger.c	PIE1bits.TMR1IE = 1;	// Ensure that TMR1 Interrupt is enabled
004d66   809d     bsf     0x9d, 0, 0       	BSF	_PIE1bits, 0
                                           ;	.line	1056; meter_logger.c	PIR1bits.TMR1IF = 1;	// Force Instant entry to Timer 1 Interrupt
004d68   809e     bsf     0x9e, 0, 0       	BSF	_PIR1bits, 0
                                           ;	.line	1087; meter_logger.c	RCONbits.IPEN = 1;
004d6a   8ed0     bsf     0xd0, 0x7, 0     	BSF	_RCONbits, 7
                                           ;	.line	1089; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int, enabled when ir demodulator is started
004d6c   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	1090; meter_logger.c	INTCON2bits.INTEDG0 = 1;	// rising edge
004d6e   8cf1     bsf     0xf1, 0x6, 0     	BSF	_INTCON2bits, 6
                                           ;	.line	1092; meter_logger.c	INTCONbits.PEIE = 1;
004d70   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	1093; meter_logger.c	INTCONbits.GIE = 1;	/* Enable Global interrupts   */	
004d72   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           ;	.line	1098; meter_logger.c	IPR1bits.RCIP = 0;
004d74   9a9f     bcf     0x9f, 0x5, 0     	BCF	_IPR1bits, 5
                                           ;	.line	1099; meter_logger.c	IPR1bits.TXIP = 0;
004d76   989f     bcf     0x9f, 0x4, 0     	BCF	_IPR1bits, 4
                                           ;	.line	1110; meter_logger.c	my_usart_open();
004d78   ec8e     call    0x511c, 0        	CALL	_my_usart_open
004d7a   f028
004d7c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004d7e   ffd9
004d80   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__sleep_ms	code
                                           _sleep_ms:
                                           ;	.line	992; meter_logger.c	void sleep_ms(unsigned int ms) {
004a38   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004a3a   ffe5
004a3c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004a3e   ffd9
004a40   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004a42   ffe5
004a44   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004a46   ffe5
004a48   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004a4a   ffe5
004a4c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004a4e   ffe5
004a50   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004a52   ffe5
004a54   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004a56   ffe5
004a58   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
004a5a   ffe5
004a5c   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
004a5e   ffe5
004a60   0e02     movlw   0x2              	MOVLW	0x02
004a62   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004a64   f000
004a66   0e03     movlw   0x3              	MOVLW	0x03
004a68   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004a6a   f001
                                           ;	.line	995; meter_logger.c	start_timer_1_ms = timer_1_ms;	
004a6c   c540     movff   0x540, 0x2       	MOVFF	_timer_1_ms, r0x02
004a6e   f002
004a70   c541     movff   0x541, 0x3       	MOVFF	(_timer_1_ms + 1), r0x03
004a72   f003
                                           ;	.line	998; meter_logger.c	do {
004a74   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004a76   08ff     sublw   0xff             	SUBLW	0xff
004a78   6e04     movwf   0x4, 0           	MOVWF	r0x04
004a7a   0eff     movlw   0xff             	MOVLW	0xff
004a7c   5403     subfwb  0x3, 0, 0        	SUBFWB	r0x03, W
004a7e   6e05     movwf   0x5, 0           	MOVWF	r0x05
                                           _00835_DS_:
                                           ;	.line	999; meter_logger.c	if (start_timer_1_ms <= timer_1_ms) {
004a80   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004a82   0105     movlb   0x5              	BANKSEL	(_timer_1_ms + 1)
004a84   5d41     subwf   0x41, 0, 0x1     	SUBWF	(_timer_1_ms + 1), W, B
004a86   e102     bnz     0x4a8c           	BNZ	_00846_DS_
004a88   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
004a8a   5d40     subwf   0x40, 0, 0x1     	SUBWF	_timer_1_ms, W, B
                                           _00846_DS_:
004a8c   e308     bnc     0x4a9e           	BNC	_00833_DS_
                                           ;	.line	1000; meter_logger.c	diff = timer_1_ms - start_timer_1_ms;
004a8e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004a90   0105     movlb   0x5              	BANKSEL	_timer_1_ms
004a92   5d40     subwf   0x40, 0, 0x1     	SUBWF	_timer_1_ms, W, B
004a94   6e06     movwf   0x6, 0           	MOVWF	r0x06
004a96   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
004a98   5941     subwfb  0x41, 0, 0x1     	SUBWFB	(_timer_1_ms + 1), W, B
004a9a   6e07     movwf   0x7, 0           	MOVWF	r0x07
004a9c   d007     bra     0x4aac           	BRA	_00836_DS_
                                           _00833_DS_:
004a9e   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	1004; meter_logger.c	diff = 0xffff - start_timer_1_ms + timer_1_ms;
004aa0   5140     movf    0x40, 0, 0x1     	MOVF	_timer_1_ms, W, B
004aa2   2404     addwf   0x4, 0, 0        	ADDWF	r0x04, W
004aa4   6e06     movwf   0x6, 0           	MOVWF	r0x06
                                           ; removed redundant BANKSEL
004aa6   5141     movf    0x41, 0, 0x1     	MOVF	(_timer_1_ms + 1), W, B
004aa8   2005     addwfc  0x5, 0, 0        	ADDWFC	r0x05, W
004aaa   6e07     movwf   0x7, 0           	MOVWF	r0x07
                                           _00836_DS_:
                                           ;	.line	1006; meter_logger.c	} while (diff < ms);
004aac   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004aae   5c07     subwf   0x7, 0, 0        	SUBWF	r0x07, W
004ab0   e102     bnz     0x4ab6           	BNZ	_00847_DS_
004ab2   5000     movf    0, 0, 0          	MOVF	r0x00, W
004ab4   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
                                           _00847_DS_:
004ab6   e3e4     bnc     0x4a80           	BNC	_00835_DS_
004ab8   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
004aba   f007
004abc   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
004abe   f006
004ac0   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
004ac2   f005
004ac4   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004ac6   f004
004ac8   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004aca   f003
004acc   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004ace   f002
004ad0   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004ad2   f001
004ad4   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004ad6   f000
004ad8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004ada   ffd9
004adc   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__isr_low_prio	code
                                           _isr_low_prio:
                                           ;	.line	960; meter_logger.c	static void isr_low_prio(void) __interrupt 2 {
004974   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
004976   ffe5
004978   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
00497a   ffe5
00497c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00497e   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
004980   ffe5
004982   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
004984   ffe5
004986   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
004988   ffe5
00498a   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
00498c   ffe5
00498e   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
004990   ffe5
004992   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
004994   ffe5
004996   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004998   ffe5
00499a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00499c   ffd9
00499e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0049a0   ffe5
0049a2   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0049a4   ffe5
                                           ;	.line	963; meter_logger.c	if (PIR1bits.TMR1IF) {
0049a6   a09e     btfss   0x9e, 0, 0       	BTFSS	_PIR1bits, 0
0049a8   d024     bra     0x49f2           	BRA	_00804_DS_
                                           ;	.line	964; meter_logger.c	TMR1H = (unsigned char)(TIMER1_RELOAD >> 8);    // 262,158ms @ 8MHz
0049aa   0ef8     movlw   0xf8             	MOVLW	0xf8
0049ac   6ecf     movwf   0xcf, 0          	MOVWF	_TMR1H
                                           ;	.line	965; meter_logger.c	TMR1L = (unsigned char)TIMER1_RELOAD;
0049ae   0e53     movlw   0x53             	MOVLW	0x53
0049b0   6ece     movwf   0xce, 0          	MOVWF	_TMR1L
                                           ;	.line	967; meter_logger.c	switch (led_flash.state) {
0049b2   c54c     movff   0x54c, 0         	MOVFF	_led_flash, r0x00
0049b4   f000
0049b6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0049b8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0049ba   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0049bc   e004     bz      0x49c6           	BZ	_00798_DS_
0049be   5000     movf    0, 0, 0          	MOVF	r0x00, W
0049c0   0a01     xorlw   0x1              	XORLW	0x01
0049c2   e006     bz      0x49d0           	BZ	_00799_DS_
0049c4   d011     bra     0x49e8           	BRA	_00802_DS_
                                           _00798_DS_:
                                           ;	.line	969; meter_logger.c	LED_PIN = 1;
0049c6   8881     bsf     0x81, 0x4, 0     	BSF	_PORTBbits, 4
                                           ;	.line	970; meter_logger.c	led_flash.state = LED_FLASH_RUNNING;
0049c8   0e01     movlw   0x1              	MOVLW	0x01
0049ca   0105     movlb   0x5              	BANKSEL	_led_flash
0049cc   6f4c     movwf   0x4c, 0x1        	MOVWF	_led_flash, B
                                           ;	.line	971; meter_logger.c	break;
0049ce   d00c     bra     0x49e8           	BRA	_00802_DS_
                                           _00799_DS_:
                                           ;	.line	973; meter_logger.c	if (led_flash.timer-- == 0) {
0049d0   c54d     movff   0x54d, 0         	MOVFF	(_led_flash + 1), r0x00
0049d2   f000
0049d4   0400     decf    0, 0, 0          	DECF	r0x00, W
0049d6   6e01     movwf   0x1, 0           	MOVWF	r0x01
0049d8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0049da   0105     movlb   0x5              	BANKSEL	(_led_flash + 1)
0049dc   6f4d     movwf   0x4d, 0x1        	MOVWF	(_led_flash + 1), B
0049de   5000     movf    0, 0, 0          	MOVF	r0x00, W
0049e0   e103     bnz     0x49e8           	BNZ	_00802_DS_
                                           ;	.line	974; meter_logger.c	LED_PIN = 0;
0049e2   9881     bcf     0x81, 0x4, 0     	BCF	_PORTBbits, 4
                                           ;	.line	975; meter_logger.c	led_flash.state = LED_FLASH_STOPPED;
0049e4   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
0049e6   6f4c     movwf   0x4c, 0x1        	MOVWF	_led_flash, B
                                           _00802_DS_:
0049e8   0105     movlb   0x5              	BANKSEL	_timer_1_ms
                                           ;	.line	979; meter_logger.c	timer_1_ms++;
0049ea   3f40     incfsz  0x40, 0x1, 0x1   	INCFSZ	_timer_1_ms, F, B
0049ec   d001     bra     0x49f0           	BRA	_31204_DS_
                                           ; removed redundant BANKSEL
0049ee   2b41     incf    0x41, 0x1, 0x1   	INCF	(_timer_1_ms + 1), F, B
                                           _31204_DS_:
                                           ;	.line	980; meter_logger.c	PIR1bits.TMR1IF = 0;    /* Clear the Timer Flag  */
0049f0   909e     bcf     0x9e, 0, 0       	BCF	_PIR1bits, 0
                                           _00804_DS_:
                                           ;	.line	984; meter_logger.c	if (usart_drdy()) {
0049f2   eca5     call    0x534a, 0        	CALL	_usart_drdy
0049f4   f029
0049f6   6e00     movwf   0, 0             	MOVWF	r0x00
0049f8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0049fa   e006     bz      0x4a08           	BZ	_00807_DS_
                                           ;	.line	986; meter_logger.c	c = usart_getc();
0049fc   eca3     call    0x5146, 0        	CALL	_usart_getc
0049fe   f028
004a00   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	987; meter_logger.c	usart_putc(c);
004a02   5000     movf    0, 0, 0          	MOVF	r0x00, W
004a04   ec89     call    0x5312, 0        	CALL	_usart_putc
004a06   f029
                                           _00807_DS_:
004a08   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004a0a   f001
004a0c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004a0e   f000
004a10   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004a12   ffd9
004a14   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
004a16   fffb
004a18   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
004a1a   fffa
004a1c   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
004a1e   ffea
004a20   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
004a22   ffe9
004a24   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
004a26   fff4
004a28   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
004a2a   fff3
004a2c   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
004a2e   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
004a30   ffe0
004a32   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
004a34   ffd8
004a36   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_meter_logger__isr_high_prio	code
                                           _isr_high_prio:
                                           ;	.line	489; meter_logger.c	static void isr_high_prio(void) __interrupt 1 {
002440   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
002442   ffe5
002444   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
002446   ffe5
002448   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00244a   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
00244c   ffe5
00244e   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
002450   ffe5
002452   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
002454   ffe5
002456   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
002458   ffe5
00245a   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
00245c   ffe5
00245e   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
002460   ffe5
002462   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002464   ffe5
002466   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002468   ffd9
00246a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00246c   ffe5
00246e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002470   ffe5
002472   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002474   ffe5
002476   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002478   ffe5
00247a   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00247c   ffe5
00247e   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002480   ffe5
                                           ;	.line	491; meter_logger.c	if (INTCONbits.INT0IF && INTCONbits.INT0IE) {
002482   a2f2     btfss   0xf2, 0x1, 0     	BTFSS	_INTCONbits, 1
002484   d159     bra     0x2738           	BRA	_00389_DS_
002486   a8f2     btfss   0xf2, 0x4, 0     	BTFSS	_INTCONbits, 4
002488   d157     bra     0x2738           	BRA	_00389_DS_
                                           ;	.line	492; meter_logger.c	timer_0 = (unsigned int)(TMR0L) | ((unsigned int)(TMR0H) << 8);
00248a   cfd6     movff   0xfd6, 0         	MOVFF	_TMR0L, r0x00
00248c   f000
00248e   6a01     clrf    0x1, 0           	CLRF	r0x01
002490   cfd7     movff   0xfd7, 0x2       	MOVFF	_TMR0H, r0x02
002492   f002
002494   6a03     clrf    0x3, 0           	CLRF	r0x03
002496   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002498   6e05     movwf   0x5, 0           	MOVWF	r0x05
00249a   6a04     clrf    0x4, 0           	CLRF	r0x04
00249c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00249e   1000     iorwf   0, 0, 0          	IORWF	r0x00, W
0024a0   0105     movlb   0x5              	BANKSEL	_timer_0
0024a2   6f46     movwf   0x46, 0x1        	MOVWF	_timer_0, B
0024a4   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0024a6   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
                                           ; removed redundant BANKSEL
0024a8   6f47     movwf   0x47, 0x1        	MOVWF	(_timer_0 + 1), B
0024aa   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	493; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
0024ac   5149     movf    0x49, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
0024ae   6e00     movwf   0, 0             	MOVWF	r0x00
0024b0   6a01     clrf    0x1, 0           	CLRF	r0x01
0024b2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0024b4   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	494; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
0024b6   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0024b8   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
0024ba   0105     movlb   0x5              	BANKSEL	_codec_type
                                           ;	.line	496; meter_logger.c	switch (codec_type) {
0024bc   5151     movf    0x51, 0, 0x1     	MOVF	_codec_type, W, B
0024be   0a01     xorlw   0x1              	XORLW	0x01
0024c0   e00b     bz      0x24d8           	BZ	_00347_DS_
                                           _00690_DS_:
0024c2   0105     movlb   0x5              	BANKSEL	_codec_type
0024c4   5151     movf    0x51, 0, 0x1     	MOVF	_codec_type, W, B
0024c6   0a02     xorlw   0x2              	XORLW	0x02
0024c8   e101     bnz     0x24cc           	BNZ	_00692_DS_
0024ca   d11c     bra     0x2704           	BRA	_00381_DS_
                                           _00692_DS_:
0024cc   0105     movlb   0x5              	BANKSEL	_codec_type
0024ce   5151     movf    0x51, 0, 0x1     	MOVF	_codec_type, W, B
0024d0   0a04     xorlw   0x4              	XORLW	0x04
0024d2   e101     bnz     0x24d6           	BNZ	_00694_DS_
0024d4   d124     bra     0x271e           	BRA	_00384_DS_
                                           _00694_DS_:
0024d6   d12f     bra     0x2736           	BRA	_00387_DS_
                                           _00347_DS_:
                                           ;	.line	498; meter_logger.c	flash_led(100);
0024d8   0e64     movlw   0x64             	MOVLW	0x64
0024da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0024dc   eccb     call    0x5196, 0        	CALL	_flash_led
0024de   f028
0024e0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	499; meter_logger.c	switch (testo_ir_proto.state) {
0024e2   c51d     movff   0x51d, 0         	MOVFF	_testo_ir_proto, r0x00
0024e4   f000
0024e6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0024e8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0024ea   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0024ec   e008     bz      0x24fe           	BZ	_00348_DS_
0024ee   5000     movf    0, 0, 0          	MOVF	r0x00, W
0024f0   0a02     xorlw   0x2              	XORLW	0x02
0024f2   e00c     bz      0x250c           	BZ	_00349_DS_
0024f4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0024f6   0a04     xorlw   0x4              	XORLW	0x04
0024f8   e101     bnz     0x24fc           	BNZ	_00700_DS_
0024fa   d03b     bra     0x2572           	BRA	_00357_DS_
                                           _00700_DS_:
0024fc   d11c     bra     0x2736           	BRA	_00387_DS_
                                           _00348_DS_:
                                           ;	.line	501; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
0024fe   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	502; meter_logger.c	testo_ir_proto.start_bit_len = 1;
002500   0e01     movlw   0x1              	MOVLW	0x01
002502   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
002504   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	503; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
002506   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002508   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
                                           ;	.line	504; meter_logger.c	break;
00250a   d115     bra     0x2736           	BRA	_00387_DS_
                                           _00349_DS_:
00250c   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	506; meter_logger.c	if ((TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < TICK + timer0_reload + TICK_ADJ)) {
00250e   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002510   0f8f     addlw   0x8f             	ADDLW	0x8f
002512   6e00     movwf   0, 0             	MOVWF	r0x00
002514   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002516   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002518   6e01     movwf   0x1, 0           	MOVWF	r0x01
00251a   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
00251c   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
00251e   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002520   e102     bnz     0x2526           	BNZ	_00701_DS_
                                           ; removed redundant BANKSEL
002522   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
002524   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00701_DS_:
002526   e21f     bc      0x2566           	BC	_00354_DS_
002528   0105     movlb   0x5              	BANKSEL	_timer0_reload
00252a   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00252c   0f1f     addlw   0x1f             	ADDLW	0x1f
00252e   6e00     movwf   0, 0             	MOVWF	r0x00
002530   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
002532   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002534   6e01     movwf   0x1, 0           	MOVWF	r0x01
002536   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002538   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
00253a   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
00253c   e102     bnz     0x2542           	BNZ	_00702_DS_
00253e   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002540   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00702_DS_:
002542   e211     bc      0x2566           	BC	_00354_DS_
                                           ;	.line	507; meter_logger.c	if (testo_ir_proto.start_bit_len < 2) {
002544   0e02     movlw   0x2              	MOVLW	0x02
002546   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
002548   5d1f     subwf   0x1f, 0, 0x1     	SUBWF	(_testo_ir_proto + 2), W, B
00254a   e206     bc      0x2558           	BC	_00351_DS_
                                           ;	.line	508; meter_logger.c	testo_ir_proto.start_bit_len++;
00254c   c51f     movff   0x51f, 0         	MOVFF	(_testo_ir_proto + 2), r0x00
00254e   f000
002550   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002552   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002554   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
002556   d0ef     bra     0x2736           	BRA	_00387_DS_
                                           _00351_DS_:
002558   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	512; meter_logger.c	testo_ir_proto.data = 0;
00255a   6b20     clrf    0x20, 0x1        	CLRF	(_testo_ir_proto + 3), B
                                           ; removed redundant BANKSEL
00255c   6b21     clrf    0x21, 0x1        	CLRF	(_testo_ir_proto + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	513; meter_logger.c	testo_ir_proto.data_len = 0;
00255e   6b22     clrf    0x22, 0x1        	CLRF	(_testo_ir_proto + 5), B
                                           ;	.line	514; meter_logger.c	testo_ir_proto.state = DATA_WAIT;
002560   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
002562   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
002564   d0e8     bra     0x2736           	BRA	_00387_DS_
                                           _00354_DS_:
                                           ;	.line	519; meter_logger.c	testo_ir_proto.start_bit_len = 1;
002566   0e01     movlw   0x1              	MOVLW	0x01
002568   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
00256a   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	520; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
00256c   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
00256e   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
                                           ;	.line	522; meter_logger.c	break;
002570   d0e2     bra     0x2736           	BRA	_00387_DS_
                                           _00357_DS_:
                                           ;	.line	524; meter_logger.c	if (testo_ir_proto.data_len <= 12) {
002572   0e0d     movlw   0xd              	MOVLW	0x0d
002574   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
002576   5d22     subwf   0x22, 0, 0x1     	SUBWF	(_testo_ir_proto + 5), W, B
002578   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00257a   d0dd     bra     0x2736           	BRA	_00387_DS_
00257c   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	525; meter_logger.c	if (((TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < TICK + timer0_reload + TICK_ADJ)) || ((3 * TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < 3 * TICK + timer0_reload + TICK_ADJ))) {
00257e   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002580   0f8f     addlw   0x8f             	ADDLW	0x8f
002582   6e00     movwf   0, 0             	MOVWF	r0x00
002584   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002586   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002588   6e01     movwf   0x1, 0           	MOVWF	r0x01
00258a   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
00258c   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
00258e   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002590   e102     bnz     0x2596           	BNZ	_00705_DS_
                                           ; removed redundant BANKSEL
002592   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
002594   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00705_DS_:
002596   e20e     bc      0x25b4           	BC	_00373_DS_
002598   0105     movlb   0x5              	BANKSEL	_timer0_reload
00259a   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00259c   0f1f     addlw   0x1f             	ADDLW	0x1f
00259e   6e00     movwf   0, 0             	MOVWF	r0x00
0025a0   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
0025a2   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0025a4   6e01     movwf   0x1, 0           	MOVWF	r0x01
0025a6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0025a8   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0025aa   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
0025ac   e102     bnz     0x25b2           	BNZ	_00706_DS_
0025ae   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0025b0   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00706_DS_:
0025b2   e31c     bnc     0x25ec           	BNC	_00368_DS_
                                           _00373_DS_:
0025b4   0105     movlb   0x5              	BANKSEL	_timer0_reload
0025b6   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0025b8   0f3d     addlw   0x3d             	ADDLW	0x3d
0025ba   6e00     movwf   0, 0             	MOVWF	r0x00
0025bc   0e09     movlw   0x9              	MOVLW	0x09
                                           ; removed redundant BANKSEL
0025be   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0025c0   6e01     movwf   0x1, 0           	MOVWF	r0x01
0025c2   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0025c4   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
0025c6   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0025c8   e102     bnz     0x25ce           	BNZ	_00707_DS_
                                           ; removed redundant BANKSEL
0025ca   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
0025cc   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00707_DS_:
0025ce   e235     bc      0x263a           	BC	_00369_DS_
0025d0   0105     movlb   0x5              	BANKSEL	_timer0_reload
0025d2   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
0025d4   0fcd     addlw   0xcd             	ADDLW	0xcd
0025d6   6e00     movwf   0, 0             	MOVWF	r0x00
0025d8   0e0a     movlw   0xa              	MOVLW	0x0a
                                           ; removed redundant BANKSEL
0025da   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
0025dc   6e01     movwf   0x1, 0           	MOVWF	r0x01
0025de   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0025e0   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
0025e2   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
0025e4   e102     bnz     0x25ea           	BNZ	_00708_DS_
0025e6   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0025e8   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00708_DS_:
0025ea   e227     bc      0x263a           	BC	_00369_DS_
                                           _00368_DS_:
0025ec   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	527; meter_logger.c	if ((testo_ir_proto.data & 1) != 0) {
0025ee   a120     btfss   0x20, 0, 0x1     	BTFSS	(_testo_ir_proto + 3), 0
0025f0   d00a     bra     0x2606           	BRA	_00359_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	529; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
0025f2   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0025f4   6e00     movwf   0, 0             	MOVWF	r0x00
0025f6   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
0025f8   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
0025fa   6e01     movwf   0x1, 0           	MOVWF	r0x01
0025fc   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0025fe   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002600   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002602   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
002604   d013     bra     0x262c           	BRA	_00360_DS_
                                           _00359_DS_:
002606   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	534; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
002608   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
00260a   6e00     movwf   0, 0             	MOVWF	r0x00
00260c   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
00260e   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
002610   6e01     movwf   0x1, 0           	MOVWF	r0x01
002612   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002614   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002616   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002618   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           ;	.line	535; meter_logger.c	testo_ir_proto.data |= 1;	// and set bit 0
00261a   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
00261c   1120     iorwf   0x20, 0, 0x1     	IORWF	(_testo_ir_proto + 3), W, B
00261e   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002620   5121     movf    0x21, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
002622   6e01     movwf   0x1, 0           	MOVWF	r0x01
002624   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002626   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002628   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00262a   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           _00360_DS_:
                                           ;	.line	537; meter_logger.c	testo_ir_proto.data_len++;
00262c   c522     movff   0x522, 0         	MOVFF	(_testo_ir_proto + 5), r0x00
00262e   f000
002630   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002632   5000     movf    0, 0, 0          	MOVF	r0x00, W
002634   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
002636   6f22     movwf   0x22, 0x1        	MOVWF	(_testo_ir_proto + 5), B
002638   d048     bra     0x26ca           	BRA	_00370_DS_
                                           _00369_DS_:
00263a   0105     movlb   0x5              	BANKSEL	_timer0_reload
                                           ;	.line	539; meter_logger.c	else if ((2 * TICK + timer0_reload - TICK_ADJ < timer_0) && (timer_0 < 2 * TICK + timer0_reload + TICK_ADJ)) {
00263c   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00263e   0fe6     addlw   0xe6             	ADDLW	0xe6
002640   6e00     movwf   0, 0             	MOVWF	r0x00
002642   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
002644   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002646   6e01     movwf   0x1, 0           	MOVWF	r0x01
002648   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
00264a   5147     movf    0x47, 0, 0x1     	MOVF	(_timer_0 + 1), W, B
00264c   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00264e   e102     bnz     0x2654           	BNZ	_00711_DS_
                                           ; removed redundant BANKSEL
002650   5146     movf    0x46, 0, 0x1     	MOVF	_timer_0, W, B
002652   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00711_DS_:
002654   e235     bc      0x26c0           	BC	_00365_DS_
002656   0105     movlb   0x5              	BANKSEL	_timer0_reload
002658   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
00265a   0f76     addlw   0x76             	ADDLW	0x76
00265c   6e00     movwf   0, 0             	MOVWF	r0x00
00265e   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
002660   2149     addwfc  0x49, 0, 0x1     	ADDWFC	(_timer0_reload + 1), W, B
002662   6e01     movwf   0x1, 0           	MOVWF	r0x01
002664   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002666   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002668   5d47     subwf   0x47, 0, 0x1     	SUBWF	(_timer_0 + 1), W, B
00266a   e102     bnz     0x2670           	BNZ	_00712_DS_
00266c   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00266e   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
                                           _00712_DS_:
002670   e227     bc      0x26c0           	BC	_00365_DS_
002672   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	541; meter_logger.c	if ((testo_ir_proto.data & 1) != 0) {
002674   a120     btfss   0x20, 0, 0x1     	BTFSS	(_testo_ir_proto + 3), 0
002676   d013     bra     0x269e           	BRA	_00362_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	543; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
002678   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
00267a   6e00     movwf   0, 0             	MOVWF	r0x00
00267c   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
00267e   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
002680   6e01     movwf   0x1, 0           	MOVWF	r0x01
002682   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002684   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002686   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002688   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           ;	.line	544; meter_logger.c	testo_ir_proto.data |= 1;	// and set bit 0
00268a   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
00268c   1120     iorwf   0x20, 0, 0x1     	IORWF	(_testo_ir_proto + 3), W, B
00268e   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002690   5121     movf    0x21, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
002692   6e01     movwf   0x1, 0           	MOVWF	r0x01
002694   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002696   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
002698   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00269a   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
00269c   d00a     bra     0x26b2           	BRA	_00363_DS_
                                           _00362_DS_:
00269e   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	548; meter_logger.c	testo_ir_proto.data <<= 1;		// bitshift once to left
0026a0   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0026a2   6e00     movwf   0, 0             	MOVWF	r0x00
0026a4   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
0026a6   3521     rlcf    0x21, 0, 0x1     	RLCF	(_testo_ir_proto + 4), W, B
0026a8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0026aa   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0026ac   6f20     movwf   0x20, 0x1        	MOVWF	(_testo_ir_proto + 3), B
0026ae   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0026b0   6f21     movwf   0x21, 0x1        	MOVWF	(_testo_ir_proto + 4), B
                                           _00363_DS_:
                                           ;	.line	551; meter_logger.c	testo_ir_proto.data_len++;
0026b2   c522     movff   0x522, 0         	MOVFF	(_testo_ir_proto + 5), r0x00
0026b4   f000
0026b6   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0026b8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0026ba   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
0026bc   6f22     movwf   0x22, 0x1        	MOVWF	(_testo_ir_proto + 5), B
0026be   d005     bra     0x26ca           	BRA	_00370_DS_
                                           _00365_DS_:
                                           ;	.line	556; meter_logger.c	testo_ir_proto.start_bit_len = 1;
0026c0   0e01     movlw   0x1              	MOVLW	0x01
0026c2   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 2)
0026c4   6f1f     movwf   0x1f, 0x1        	MOVWF	(_testo_ir_proto + 2), B
                                           ;	.line	557; meter_logger.c	testo_ir_proto.state = START_BIT_WAIT;
0026c6   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
0026c8   6f1d     movwf   0x1d, 0x1        	MOVWF	_testo_ir_proto, B
                                           _00370_DS_:
0026ca   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 5)
                                           ;	.line	559; meter_logger.c	if (testo_ir_proto.data_len == 12) {
0026cc   5122     movf    0x22, 0, 0x1     	MOVF	(_testo_ir_proto + 5), W, B
0026ce   0a0c     xorlw   0xc              	XORLW	0x0c
0026d0   e132     bnz     0x2736           	BNZ	_00387_DS_
                                           _00716_DS_:
0026d2   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 4)
                                           ;	.line	562; meter_logger.c	if (testo_valid_err_corr(testo_ir_proto.data & 0xffff)) {
0026d4   5121     movf    0x21, 0, 0x1     	MOVF	(_testo_ir_proto + 4), W, B
0026d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0026d8   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0026da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0026dc   ec5b     call    0x3ab6, 0        	CALL	_testo_valid_err_corr
0026de   f01d
0026e0   6e00     movwf   0, 0             	MOVWF	r0x00
0026e2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0026e4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0026e6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0026e8   e00a     bz      0x26fe           	BZ	_00375_DS_
0026ea   0105     movlb   0x5              	BANKSEL	(_testo_ir_proto + 3)
                                           ;	.line	564; meter_logger.c	fifo_put(testo_ir_proto.data & 0xff);
0026ec   5120     movf    0x20, 0, 0x1     	MOVF	(_testo_ir_proto + 3), W, B
0026ee   6e00     movwf   0, 0             	MOVWF	r0x00
0026f0   6a01     clrf    0x1, 0           	CLRF	r0x01
0026f2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0026f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0026f6   ec63     call    0x42c6, 0        	CALL	_fifo_put
0026f8   f021
0026fa   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	565; meter_logger.c	LED_PIN = 1;
0026fc   8881     bsf     0x81, 0x4, 0     	BSF	_PORTBbits, 4
                                           _00375_DS_:
0026fe   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	567; meter_logger.c	testo_ir_proto.state = INIT_STATE;
002700   6b1d     clrf    0x1d, 0x1        	CLRF	_testo_ir_proto, B
                                           ;	.line	572; meter_logger.c	break;
002702   d019     bra     0x2736           	BRA	_00387_DS_
                                           _00381_DS_:
002704   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	574; meter_logger.c	switch (rs232_proto.state) {
002706   5123     movf    0x23, 0, 0x1     	MOVF	_rs232_proto, W, B
002708   0a02     xorlw   0x2              	XORLW	0x02
00270a   e115     bnz     0x2736           	BNZ	_00387_DS_
                                           ;	.line	585; meter_logger.c	TMR0H = (unsigned char)(TIMER0_RS232_1200_START >> 8);
00270c   0ef7     movlw   0xf7             	MOVLW	0xf7
00270e   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ;	.line	586; meter_logger.c	TMR0L = (unsigned char)TIMER0_RS232_1200_START;
002710   6ad6     clrf    0xd6, 0          	CLRF	_TMR0L
                                           ;	.line	587; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int while we are using timer to receive data bits
002712   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	588; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
002714   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	589; meter_logger.c	rs232_proto.state = DATA_WAIT;
002716   0e04     movlw   0x4              	MOVLW	0x04
002718   0105     movlb   0x5              	BANKSEL	_rs232_proto
00271a   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	592; meter_logger.c	break;
00271c   d00c     bra     0x2736           	BRA	_00387_DS_
                                           _00384_DS_:
00271e   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	594; meter_logger.c	switch (rs232_proto.state) {
002720   5123     movf    0x23, 0, 0x1     	MOVF	_rs232_proto, W, B
002722   0a02     xorlw   0x2              	XORLW	0x02
002724   e108     bnz     0x2736           	BNZ	_00387_DS_
                                           ;	.line	605; meter_logger.c	TMR0H = (unsigned char)(TIMER0_RS232_1200_START >> 8);
002726   0ef7     movlw   0xf7             	MOVLW	0xf7
002728   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ;	.line	606; meter_logger.c	TMR0L = (unsigned char)TIMER0_RS232_1200_START;
00272a   6ad6     clrf    0xd6, 0          	CLRF	_TMR0L
                                           ;	.line	607; meter_logger.c	INTCONbits.INT0IE = 0;		// disable ext int while we are using timer to receive data bits
00272c   98f2     bcf     0xf2, 0x4, 0     	BCF	_INTCONbits, 4
                                           ;	.line	608; meter_logger.c	T0CONbits.TMR0ON = 1;		// Start TMR0
00272e   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	609; meter_logger.c	rs232_proto.state = DATA_WAIT;
002730   0e04     movlw   0x4              	MOVLW	0x04
002732   0105     movlb   0x5              	BANKSEL	_rs232_proto
002734   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           _00387_DS_:
                                           ;	.line	614; meter_logger.c	INTCONbits.INT0IF = 0;	/* Clear Interrupt Flag */
002736   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           _00389_DS_:
                                           ;	.line	618; meter_logger.c	if (INTCONbits.TMR0IF && INTCONbits.TMR0IE) {
002738   a4f2     btfss   0xf2, 0x2, 0     	BTFSS	_INTCONbits, 2
00273a   ef96     goto    0x2b2c           	GOTO	_00463_DS_
00273c   f015
00273e   aaf2     btfss   0xf2, 0x5, 0     	BTFSS	_INTCONbits, 5
002740   ef96     goto    0x2b2c           	GOTO	_00463_DS_
002742   f015
002744   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	620; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
002746   5149     movf    0x49, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
002748   6e00     movwf   0, 0             	MOVWF	r0x00
00274a   6a01     clrf    0x1, 0           	CLRF	r0x01
00274c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00274e   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	621; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
002750   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002752   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
                                           ;	.line	623; meter_logger.c	switch (codec_type) {
002754   0e01     movlw   0x1              	MOVLW	0x01
002756   0105     movlb   0x5              	BANKSEL	_codec_type
002758   5d51     subwf   0x51, 0, 0x1     	SUBWF	_codec_type, W, B
00275a   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
00275c   ef95     goto    0x2b2a           	GOTO	_00461_DS_
00275e   f015
002760   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
002762   5d51     subwf   0x51, 0, 0x1     	SUBWF	_codec_type, W, B
002764   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002766   ef95     goto    0x2b2a           	GOTO	_00461_DS_
002768   f015
                                           ; removed redundant BANKSEL
00276a   0551     decf    0x51, 0, 0x1     	DECF	_codec_type, W, B
00276c   6e00     movwf   0, 0             	MOVWF	r0x00
00276e   6afa     clrf    0xfa, 0          	CLRF	PCLATH
002770   6afb     clrf    0xfb, 0          	CLRF	PCLATU
002772   3400     rlcf    0, 0, 0          	RLCF	r0x00, W
002774   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
002776   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
002778   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00277a   0bfc     andlw   0xfc             	ANDLW	0xfc
00277c   0f8c     addlw   0x8c             	ADDLW	LOW(_00724_DS_)
00277e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002780   0e27     movlw   0x27             	MOVLW	HIGH(_00724_DS_)
002782   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
002784   0e00     movlw   0                	MOVLW	UPPER(_00724_DS_)
002786   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
002788   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
00278a   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00724_DS_:
00278c   efd4     goto    0x27a8           	GOTO	_00391_DS_
00278e   f013
002790   ef22     goto    0x2844           	GOTO	_00403_DS_
002792   f014
002794   efd9     goto    0x27b2           	GOTO	_00392_DS_
002796   f013
002798   efc5     goto    0x298a           	GOTO	_00424_DS_
00279a   f014
00279c   ef5b     goto    0x28b6           	GOTO	_00413_DS_
00279e   f014
0027a0   effe     goto    0x29fc           	GOTO	_00434_DS_
0027a2   f014
0027a4   ef40     goto    0x2a80           	GOTO	_00445_DS_
0027a6   f015
                                           _00391_DS_:
                                           ;	.line	625; meter_logger.c	T0CONbits.TMR0ON = 0;			// Stop TMR0
0027a8   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
0027aa   0105     movlb   0x5              	BANKSEL	_testo_ir_proto
                                           ;	.line	626; meter_logger.c	testo_ir_proto.state = INIT_STATE;
0027ac   6b1d     clrf    0x1d, 0x1        	CLRF	_testo_ir_proto, B
0027ae   0003     sleep                    	sleep 
                                           ;	.line	628; meter_logger.c	break;
0027b0   d1bc     bra     0x2b2a           	BRA	_00461_DS_
                                           _00392_DS_:
                                           ;	.line	630; meter_logger.c	switch (rs232_proto.state) {
0027b2   c523     movff   0x523, 0         	MOVFF	_rs232_proto, r0x00
0027b4   f000
0027b6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0027b8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0027ba   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0027bc   e00a     bz      0x27d2           	BZ	_00393_DS_
0027be   5000     movf    0, 0, 0          	MOVF	r0x00, W
0027c0   0a03     xorlw   0x3              	XORLW	0x03
0027c2   e011     bz      0x27e6           	BZ	_00396_DS_
0027c4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0027c6   0a0a     xorlw   0xa              	XORLW	0x0a
0027c8   e033     bz      0x2830           	BZ	_00400_DS_
0027ca   5000     movf    0, 0, 0          	MOVF	r0x00, W
0027cc   0a0b     xorlw   0xb              	XORLW	0x0b
0027ce   e035     bz      0x283a           	BZ	_00401_DS_
0027d0   d1ac     bra     0x2b2a           	BRA	_00461_DS_
                                           _00393_DS_:
0027d2   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	632; meter_logger.c	if (rs232_proto.data_len == 8) {
0027d4   5126     movf    0x26, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
0027d6   0a08     xorlw   0x8              	XORLW	0x08
0027d8   e001     bz      0x27dc           	BZ	_00734_DS_
0027da   d1a7     bra     0x2b2a           	BRA	_00461_DS_
                                           _00734_DS_:
                                           ;	.line	633; meter_logger.c	IR_LED_PIN = 1;		// inverted rs232 output on ir, start bit = ir light
0027dc   8281     bsf     0x81, 0x1, 0     	BSF	_PORTBbits, 1
                                           ;	.line	634; meter_logger.c	rs232_proto.state = START_BIT_SENT;
0027de   0e03     movlw   0x3              	MOVLW	0x03
0027e0   0105     movlb   0x5              	BANKSEL	_rs232_proto
0027e2   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	636; meter_logger.c	break;
0027e4   d1a2     bra     0x2b2a           	BRA	_00461_DS_
                                           _00396_DS_:
                                           ;	.line	638; meter_logger.c	if (rs232_proto.data_len >= 1) {
0027e6   0e01     movlw   0x1              	MOVLW	0x01
0027e8   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
0027ea   5d26     subwf   0x26, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
0027ec   e31c     bnc     0x2826           	BNC	_00398_DS_
                                           ;	.line	639; meter_logger.c	IR_LED_PIN = (rs232_proto.data & 1) == 0;	// inverted rs232 output on ir
0027ee   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
0027f0   1525     andwf   0x25, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
0027f2   6e00     movwf   0, 0             	MOVWF	r0x00
0027f4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0027f6   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
0027f8   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
0027fa   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0027fc   6a00     clrf    0, 0             	CLRF	r0x00
0027fe   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
002800   5000     movf    0, 0, 0          	MOVF	r0x00, W
002802   0b01     andlw   0x1              	ANDLW	0x01
002804   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
002806   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
002808   5081     movf    0x81, 0, 0       	MOVF	_PORTBbits, W
00280a   0bfd     andlw   0xfd             	ANDLW	0xfd
00280c   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
00280e   6e81     movwf   0x81, 0          	MOVWF	_PORTBbits
                                           ; removed redundant BANKSEL
                                           ;	.line	640; meter_logger.c	rs232_proto.data = rs232_proto.data >> 1;
002810   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002812   0b7f     andlw   0x7f             	ANDLW	0x7f
002814   6e00     movwf   0, 0             	MOVWF	r0x00
002816   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002818   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	641; meter_logger.c	rs232_proto.data_len--;
00281a   c526     movff   0x526, 0         	MOVFF	(_rs232_proto + 3), r0x00
00281c   f000
00281e   0600     decf    0, 0x1, 0        	DECF	r0x00, F
002820   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002822   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
002824   d182     bra     0x2b2a           	BRA	_00461_DS_
                                           _00398_DS_:
                                           ;	.line	644; meter_logger.c	IR_LED_PIN = 0;								// inverted rs232 output on ir					
002826   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	645; meter_logger.c	rs232_proto.state = STOP_BIT_SENT;
002828   0e0a     movlw   0xa              	MOVLW	0x0a
00282a   0105     movlb   0x5              	BANKSEL	_rs232_proto
00282c   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	647; meter_logger.c	break;
00282e   d17d     bra     0x2b2a           	BRA	_00461_DS_
                                           _00400_DS_:
                                           ;	.line	649; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002830   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	650; meter_logger.c	rs232_proto.state = STOP_BIT2_SENT;
002832   0e0b     movlw   0xb              	MOVLW	0x0b
002834   0105     movlb   0x5              	BANKSEL	_rs232_proto
002836   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	651; meter_logger.c	break;
002838   d178     bra     0x2b2a           	BRA	_00461_DS_
                                           _00401_DS_:
                                           ;	.line	653; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
00283a   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
00283c   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	654; meter_logger.c	rs232_proto.state = INIT_STATE;
00283e   6b23     clrf    0x23, 0x1        	CLRF	_rs232_proto, B
                                           ;	.line	655; meter_logger.c	T0CONbits.TMR0ON = 0;							// stop timer 0
002840   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	658; meter_logger.c	break;
002842   d173     bra     0x2b2a           	BRA	_00461_DS_
                                           _00403_DS_:
                                           ;	.line	660; meter_logger.c	switch (rs232_proto.state) {
002844   c523     movff   0x523, 0         	MOVFF	_rs232_proto, r0x00
002846   f000
002848   5000     movf    0, 0, 0          	MOVF	r0x00, W
00284a   0a04     xorlw   0x4              	XORLW	0x04
00284c   e004     bz      0x2856           	BZ	_00404_DS_
00284e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002850   0a08     xorlw   0x8              	XORLW	0x08
002852   e022     bz      0x2898           	BZ	_00411_DS_
002854   d16a     bra     0x2b2a           	BRA	_00461_DS_
                                           _00404_DS_:
                                           ;	.line	662; meter_logger.c	rs232_proto.data_len++;
002856   c526     movff   0x526, 0         	MOVFF	(_rs232_proto + 3), r0x00
002858   f000
00285a   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
00285c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00285e   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
002860   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	663; meter_logger.c	if (rs232_proto.data_len <= 8) {
002862   0e09     movlw   0x9              	MOVLW	0x09
                                           ; removed redundant BANKSEL
002864   5d26     subwf   0x26, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
002866   e214     bc      0x2890           	BC	_00409_DS_
                                           ;	.line	664; meter_logger.c	if (IR_PIN) {		
002868   a081     btfss   0x81, 0, 0       	BTFSS	_PORTBbits, 0
00286a   d006     bra     0x2878           	BRA	_00406_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	666; meter_logger.c	rs232_proto.data >>= 1;
00286c   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
00286e   0b7f     andlw   0x7f             	ANDLW	0x7f
002870   6e00     movwf   0, 0             	MOVWF	r0x00
002872   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002874   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
002876   d159     bra     0x2b2a           	BRA	_00461_DS_
                                           _00406_DS_:
002878   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	678; meter_logger.c	rs232_proto.data >>= 1;
00287a   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
00287c   0b7f     andlw   0x7f             	ANDLW	0x7f
00287e   6e00     movwf   0, 0             	MOVWF	r0x00
002880   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002882   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	679; meter_logger.c	rs232_proto.data |= 0x80;
002884   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
002886   1125     iorwf   0x25, 0, 0x1     	IORWF	(_rs232_proto + 2), W, B
002888   6e00     movwf   0, 0             	MOVWF	r0x00
00288a   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00288c   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
00288e   d14d     bra     0x2b2a           	BRA	_00461_DS_
                                           _00409_DS_:
                                           ;	.line	701; meter_logger.c	rs232_proto.state = STOP_BIT_WAIT;
002890   0e08     movlw   0x8              	MOVLW	0x08
002892   0105     movlb   0x5              	BANKSEL	_rs232_proto
002894   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	703; meter_logger.c	break;
002896   d149     bra     0x2b2a           	BRA	_00461_DS_
                                           _00411_DS_:
002898   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	709; meter_logger.c	fifo_put(rs232_proto.data);
00289a   5125     movf    0x25, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
00289c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00289e   ec63     call    0x42c6, 0        	CALL	_fifo_put
0028a0   f021
0028a2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0028a4   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	710; meter_logger.c	rs232_proto.data = 0;
0028a6   6b25     clrf    0x25, 0x1        	CLRF	(_rs232_proto + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	711; meter_logger.c	rs232_proto.data_len = 0;
0028a8   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	712; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
0028aa   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
0028ac   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	713; meter_logger.c	T0CONbits.TMR0ON = 0;
0028ae   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	714; meter_logger.c	INTCONbits.INT0IF = 0;		// dont enter ext int now
0028b0   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           ;	.line	715; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int again
0028b2   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	718; meter_logger.c	break;
0028b4   d13a     bra     0x2b2a           	BRA	_00461_DS_
                                           _00413_DS_:
                                           ;	.line	720; meter_logger.c	switch (rs232_proto.state) {
0028b6   c523     movff   0x523, 0         	MOVFF	_rs232_proto, r0x00
0028b8   f000
0028ba   5000     movf    0, 0, 0          	MOVF	r0x00, W
0028bc   6e01     movwf   0x1, 0           	MOVWF	r0x01
0028be   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0028c0   e00c     bz      0x28da           	BZ	_00414_DS_
0028c2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0028c4   0a03     xorlw   0x3              	XORLW	0x03
0028c6   e018     bz      0x28f8           	BZ	_00417_DS_
0028c8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0028ca   0a06     xorlw   0x6              	XORLW	0x06
0028cc   e101     bnz     0x28d0           	BNZ	_00748_DS_
0028ce   d053     bra     0x2976           	BRA	_00421_DS_
                                           _00748_DS_:
0028d0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0028d2   0a0a     xorlw   0xa              	XORLW	0x0a
0028d4   e101     bnz     0x28d8           	BNZ	_00750_DS_
0028d6   d054     bra     0x2980           	BRA	_00422_DS_
                                           _00750_DS_:
0028d8   d128     bra     0x2b2a           	BRA	_00461_DS_
                                           _00414_DS_:
0028da   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
                                           ;	.line	722; meter_logger.c	if (rs232_proto.data_len == 7) {
0028dc   5126     movf    0x26, 0, 0x1     	MOVF	(_rs232_proto + 3), W, B
0028de   0a07     xorlw   0x7              	XORLW	0x07
0028e0   e001     bz      0x28e4           	BZ	_00752_DS_
0028e2   d123     bra     0x2b2a           	BRA	_00461_DS_
                                           _00752_DS_:
                                           ;	.line	723; meter_logger.c	IR_LED_PIN = 1;		// inverted rs232 output on ir, start bit = ir light
0028e4   8281     bsf     0x81, 0x1, 0     	BSF	_PORTBbits, 1
                                           ;	.line	724; meter_logger.c	rs232_proto.parity = rs232_proto.data & 1;
0028e6   0e01     movlw   0x1              	MOVLW	0x01
0028e8   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
0028ea   1525     andwf   0x25, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
0028ec   6e00     movwf   0, 0             	MOVWF	r0x00
0028ee   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0028f0   6f27     movwf   0x27, 0x1        	MOVWF	(_rs232_proto + 4), B
                                           ;	.line	725; meter_logger.c	rs232_proto.state = START_BIT_SENT;
0028f2   0e03     movlw   0x3              	MOVLW	0x03
                                           ; removed redundant BANKSEL
0028f4   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	727; meter_logger.c	break;
0028f6   d119     bra     0x2b2a           	BRA	_00461_DS_
                                           _00417_DS_:
                                           ;	.line	729; meter_logger.c	if (rs232_proto.data_len >= 1) {
0028f8   0e01     movlw   0x1              	MOVLW	0x01
0028fa   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
0028fc   5d26     subwf   0x26, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
0028fe   e326     bnc     0x294c           	BNC	_00419_DS_
                                           ;	.line	730; meter_logger.c	IR_LED_PIN = (rs232_proto.data & 1) == 0;	// inverted rs232 output on ir
002900   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002902   1525     andwf   0x25, 0, 0x1     	ANDWF	(_rs232_proto + 2), W, B
002904   6e00     movwf   0, 0             	MOVWF	r0x00
002906   5000     movf    0, 0, 0          	MOVF	r0x00, W
002908   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
00290a   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
00290c   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
00290e   6a00     clrf    0, 0             	CLRF	r0x00
002910   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
002912   5000     movf    0, 0, 0          	MOVF	r0x00, W
002914   0b01     andlw   0x1              	ANDLW	0x01
002916   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
002918   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
00291a   5081     movf    0x81, 0, 0       	MOVF	_PORTBbits, W
00291c   0bfd     andlw   0xfd             	ANDLW	0xfd
00291e   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
002920   6e81     movwf   0x81, 0          	MOVWF	_PORTBbits
                                           ; removed redundant BANKSEL
                                           ;	.line	731; meter_logger.c	rs232_proto.parity ^= ((rs232_proto.data >> 1) & 1);
002922   5125     movf    0x25, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
002924   0b02     andlw   0x2              	ANDLW	0x02
002926   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
002928   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
00292a   5127     movf    0x27, 0, 0x1     	MOVF	(_rs232_proto + 4), W, B
00292c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00292e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002930   1a00     xorwf   0, 0x1, 0        	XORWF	r0x00, F
002932   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002934   6f27     movwf   0x27, 0x1        	MOVWF	(_rs232_proto + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	732; meter_logger.c	rs232_proto.data = rs232_proto.data >> 1;
002936   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
002938   0b7f     andlw   0x7f             	ANDLW	0x7f
00293a   6e00     movwf   0, 0             	MOVWF	r0x00
00293c   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00293e   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	733; meter_logger.c	rs232_proto.data_len--;
002940   c526     movff   0x526, 0         	MOVFF	(_rs232_proto + 3), r0x00
002942   f000
002944   0600     decf    0, 0x1, 0        	DECF	r0x00, F
002946   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002948   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
00294a   d0ef     bra     0x2b2a           	BRA	_00461_DS_
                                           _00419_DS_:
                                           ;	.line	736; meter_logger.c	IR_LED_PIN = (rs232_proto.parity & 1) == 0;		// inverted rs232 output on ir					
00294c   0e01     movlw   0x1              	MOVLW	0x01
00294e   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 4)
002950   1527     andwf   0x27, 0, 0x1     	ANDWF	(_rs232_proto + 4), W, B
002952   6e00     movwf   0, 0             	MOVWF	r0x00
002954   5000     movf    0, 0, 0          	MOVF	r0x00, W
002956   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
002958   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
00295a   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
00295c   6a00     clrf    0, 0             	CLRF	r0x00
00295e   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
002960   5000     movf    0, 0, 0          	MOVF	r0x00, W
002962   0b01     andlw   0x1              	ANDLW	0x01
002964   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
002966   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
002968   5081     movf    0x81, 0, 0       	MOVF	_PORTBbits, W
00296a   0bfd     andlw   0xfd             	ANDLW	0xfd
00296c   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
00296e   6e81     movwf   0x81, 0          	MOVWF	_PORTBbits
                                           ;	.line	737; meter_logger.c	rs232_proto.state = PARITY_BIT_SENT;
002970   0e06     movlw   0x6              	MOVLW	0x06
                                           ; removed redundant BANKSEL
002972   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	739; meter_logger.c	break;
002974   d0da     bra     0x2b2a           	BRA	_00461_DS_
                                           _00421_DS_:
                                           ;	.line	741; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002976   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
                                           ;	.line	742; meter_logger.c	rs232_proto.state = STOP_BIT_SENT;
002978   0e0a     movlw   0xa              	MOVLW	0x0a
00297a   0105     movlb   0x5              	BANKSEL	_rs232_proto
00297c   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	743; meter_logger.c	break;
00297e   d0d5     bra     0x2b2a           	BRA	_00461_DS_
                                           _00422_DS_:
                                           ;	.line	745; meter_logger.c	IR_LED_PIN = 0;									// inverted rs232 output on ir
002980   9281     bcf     0x81, 0x1, 0     	BCF	_PORTBbits, 1
002982   0105     movlb   0x5              	BANKSEL	_rs232_proto
                                           ;	.line	746; meter_logger.c	rs232_proto.state = INIT_STATE;
002984   6b23     clrf    0x23, 0x1        	CLRF	_rs232_proto, B
                                           ;	.line	747; meter_logger.c	T0CONbits.TMR0ON = 0;							// stop timer 0
002986   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	750; meter_logger.c	break;
002988   d0d0     bra     0x2b2a           	BRA	_00461_DS_
                                           _00424_DS_:
                                           ;	.line	752; meter_logger.c	switch (rs232_proto.state) {
00298a   c523     movff   0x523, 0         	MOVFF	_rs232_proto, r0x00
00298c   f000
00298e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002990   0a04     xorlw   0x4              	XORLW	0x04
002992   e004     bz      0x299c           	BZ	_00425_DS_
002994   5000     movf    0, 0, 0          	MOVF	r0x00, W
002996   0a08     xorlw   0x8              	XORLW	0x08
002998   e022     bz      0x29de           	BZ	_00432_DS_
00299a   d0c7     bra     0x2b2a           	BRA	_00461_DS_
                                           _00425_DS_:
                                           ;	.line	754; meter_logger.c	rs232_proto.data_len++;
00299c   c526     movff   0x526, 0         	MOVFF	(_rs232_proto + 3), r0x00
00299e   f000
0029a0   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0029a2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0029a4   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 3)
0029a6   6f26     movwf   0x26, 0x1        	MOVWF	(_rs232_proto + 3), B
                                           ;	.line	755; meter_logger.c	if (rs232_proto.data_len <= 8) {
0029a8   0e09     movlw   0x9              	MOVLW	0x09
                                           ; removed redundant BANKSEL
0029aa   5d26     subwf   0x26, 0, 0x1     	SUBWF	(_rs232_proto + 3), W, B
0029ac   e214     bc      0x29d6           	BC	_00430_DS_
                                           ;	.line	756; meter_logger.c	if (IR_PIN) {		
0029ae   a081     btfss   0x81, 0, 0       	BTFSS	_PORTBbits, 0
0029b0   d006     bra     0x29be           	BRA	_00427_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	758; meter_logger.c	rs232_proto.data >>= 1;
0029b2   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
0029b4   0b7f     andlw   0x7f             	ANDLW	0x7f
0029b6   6e00     movwf   0, 0             	MOVWF	r0x00
0029b8   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0029ba   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
0029bc   d0b6     bra     0x2b2a           	BRA	_00461_DS_
                                           _00427_DS_:
0029be   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	770; meter_logger.c	rs232_proto.data >>= 1;
0029c0   4125     rrncf   0x25, 0, 0x1     	RRNCF	(_rs232_proto + 2), W, B
0029c2   0b7f     andlw   0x7f             	ANDLW	0x7f
0029c4   6e00     movwf   0, 0             	MOVWF	r0x00
0029c6   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0029c8   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
                                           ;	.line	771; meter_logger.c	rs232_proto.data |= 0x80;
0029ca   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
0029cc   1125     iorwf   0x25, 0, 0x1     	IORWF	(_rs232_proto + 2), W, B
0029ce   6e00     movwf   0, 0             	MOVWF	r0x00
0029d0   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0029d2   6f25     movwf   0x25, 0x1        	MOVWF	(_rs232_proto + 2), B
0029d4   d0aa     bra     0x2b2a           	BRA	_00461_DS_
                                           _00430_DS_:
                                           ;	.line	793; meter_logger.c	rs232_proto.state = STOP_BIT_WAIT;
0029d6   0e08     movlw   0x8              	MOVLW	0x08
0029d8   0105     movlb   0x5              	BANKSEL	_rs232_proto
0029da   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	795; meter_logger.c	break;
0029dc   d0a6     bra     0x2b2a           	BRA	_00461_DS_
                                           _00432_DS_:
0029de   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	801; meter_logger.c	fifo_put(rs232_proto.data);
0029e0   5125     movf    0x25, 0, 0x1     	MOVF	(_rs232_proto + 2), W, B
0029e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0029e4   ec63     call    0x42c6, 0        	CALL	_fifo_put
0029e6   f021
0029e8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0029ea   0105     movlb   0x5              	BANKSEL	(_rs232_proto + 2)
                                           ;	.line	802; meter_logger.c	rs232_proto.data = 0;
0029ec   6b25     clrf    0x25, 0x1        	CLRF	(_rs232_proto + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	803; meter_logger.c	rs232_proto.data_len = 0;
0029ee   6b26     clrf    0x26, 0x1        	CLRF	(_rs232_proto + 3), B
                                           ;	.line	804; meter_logger.c	rs232_proto.state = START_BIT_WAIT;
0029f0   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
0029f2   6f23     movwf   0x23, 0x1        	MOVWF	_rs232_proto, B
                                           ;	.line	805; meter_logger.c	T0CONbits.TMR0ON = 0;
0029f4   9ed5     bcf     0xd5, 0x7, 0     	BCF	_T0CONbits, 7
                                           ;	.line	806; meter_logger.c	INTCONbits.INT0IF = 0;		// dont enter ext int now
0029f6   92f2     bcf     0xf2, 0x1, 0     	BCF	_INTCONbits, 1
                                           ;	.line	807; meter_logger.c	INTCONbits.INT0IE = 1;		// enable ext int again
0029f8   88f2     bsf     0xf2, 0x4, 0     	BSF	_INTCONbits, 4
                                           ;	.line	810; meter_logger.c	break;
0029fa   d097     bra     0x2b2a           	BRA	_00461_DS_
                                           _00434_DS_:
                                           ;	.line	812; meter_logger.c	switch (fsk_proto.state) {
0029fc   c500     movff   0x500, 0         	MOVFF	_fsk_proto, r0x00
0029fe   f000
002a00   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a02   0a04     xorlw   0x4              	XORLW	0x04
002a04   e004     bz      0x2a0e           	BZ	_00435_DS_
002a06   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a08   0a08     xorlw   0x8              	XORLW	0x08
002a0a   e02e     bz      0x2a68           	BZ	_00443_DS_
002a0c   d08e     bra     0x2b2a           	BRA	_00461_DS_
                                           _00435_DS_:
                                           ;	.line	814; meter_logger.c	fsk_proto.data_len++;						
002a0e   c50d     movff   0x50d, 0         	MOVFF	(_fsk_proto + 13), r0x00
002a10   f000
002a12   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002a14   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a16   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
002a18   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
                                           ;	.line	815; meter_logger.c	if (fsk_proto.data_len <= 8) {
002a1a   0e09     movlw   0x9              	MOVLW	0x09
                                           ; removed redundant BANKSEL
002a1c   5d0d     subwf   0xd, 0, 0x1      	SUBWF	(_fsk_proto + 13), W, B
002a1e   e220     bc      0x2a60           	BC	_00441_DS_
                                           ;	.line	816; meter_logger.c	if ((fsk_proto.diff > 340) && (fsk_proto.diff < 476)) {
002a20   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002a22   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
002a24   e102     bnz     0x2a2a           	BNZ	_00769_DS_
002a26   0e55     movlw   0x55             	MOVLW	0x55
                                           ; removed redundant BANKSEL
002a28   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00769_DS_:
002a2a   e30e     bnc     0x2a48           	BNC	_00437_DS_
002a2c   0e01     movlw   0x1              	MOVLW	0x01
002a2e   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 2)
002a30   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
002a32   e102     bnz     0x2a38           	BNZ	_00770_DS_
002a34   0edc     movlw   0xdc             	MOVLW	0xdc
                                           ; removed redundant BANKSEL
002a36   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00770_DS_:
002a38   e207     bc      0x2a48           	BC	_00437_DS_
002a3a   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	819; meter_logger.c	fsk_proto.data >>= 1;
002a3c   410c     rrncf   0xc, 0, 0x1      	RRNCF	(_fsk_proto + 12), W, B
002a3e   0b7f     andlw   0x7f             	ANDLW	0x7f
002a40   6e00     movwf   0, 0             	MOVWF	r0x00
002a42   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002a44   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
002a46   d071     bra     0x2b2a           	BRA	_00461_DS_
                                           _00437_DS_:
002a48   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	824; meter_logger.c	fsk_proto.data >>= 1;
002a4a   410c     rrncf   0xc, 0, 0x1      	RRNCF	(_fsk_proto + 12), W, B
002a4c   0b7f     andlw   0x7f             	ANDLW	0x7f
002a4e   6e00     movwf   0, 0             	MOVWF	r0x00
002a50   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002a52   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
                                           ;	.line	825; meter_logger.c	fsk_proto.data |= 0x80;
002a54   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
002a56   110c     iorwf   0xc, 0, 0x1      	IORWF	(_fsk_proto + 12), W, B
002a58   6e00     movwf   0, 0             	MOVWF	r0x00
002a5a   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002a5c   6f0c     movwf   0xc, 0x1         	MOVWF	(_fsk_proto + 12), B
002a5e   d065     bra     0x2b2a           	BRA	_00461_DS_
                                           _00441_DS_:
                                           ;	.line	833; meter_logger.c	fsk_proto.state = STOP_BIT_WAIT;
002a60   0e08     movlw   0x8              	MOVLW	0x08
002a62   0105     movlb   0x5              	BANKSEL	_fsk_proto
002a64   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	835; meter_logger.c	break;
002a66   d061     bra     0x2b2a           	BRA	_00461_DS_
                                           _00443_DS_:
002a68   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	838; meter_logger.c	fifo_put(fsk_proto.data);
002a6a   510c     movf    0xc, 0, 0x1      	MOVF	(_fsk_proto + 12), W, B
002a6c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002a6e   ec63     call    0x42c6, 0        	CALL	_fifo_put
002a70   f021
002a72   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002a74   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
                                           ;	.line	839; meter_logger.c	fsk_proto.data = 0;
002a76   6b0c     clrf    0xc, 0x1         	CLRF	(_fsk_proto + 12), B
                                           ;	.line	840; meter_logger.c	fsk_proto.state = START_BIT_WAIT;
002a78   0e02     movlw   0x2              	MOVLW	0x02
                                           ; removed redundant BANKSEL
002a7a   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	842; meter_logger.c	INTCONbits.TMR0IE = 0;						
002a7c   9af2     bcf     0xf2, 0x5, 0     	BCF	_INTCONbits, 5
                                           ;	.line	845; meter_logger.c	break;
002a7e   d055     bra     0x2b2a           	BRA	_00461_DS_
                                           _00445_DS_:
                                           ;	.line	847; meter_logger.c	switch (fsk_proto.state) {
002a80   c500     movff   0x500, 0         	MOVFF	_fsk_proto, r0x00
002a82   f000
002a84   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a86   6e01     movwf   0x1, 0           	MOVWF	r0x01
002a88   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002a8a   e00f     bz      0x2aaa           	BZ	_00446_DS_
002a8c   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a8e   0a01     xorlw   0x1              	XORLW	0x01
002a90   e015     bz      0x2abc           	BZ	_00449_DS_
002a92   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a94   0a03     xorlw   0x3              	XORLW	0x03
002a96   e019     bz      0x2aca           	BZ	_00450_DS_
002a98   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a9a   0a05     xorlw   0x5              	XORLW	0x05
002a9c   e101     bnz     0x2aa0           	BNZ	_00779_DS_
002a9e   d039     bra     0x2b12           	BRA	_00458_DS_
                                           _00779_DS_:
002aa0   5000     movf    0, 0, 0          	MOVF	r0x00, W
002aa2   0a0a     xorlw   0xa              	XORLW	0x0a
002aa4   e101     bnz     0x2aa8           	BNZ	_00781_DS_
002aa6   d03c     bra     0x2b20           	BRA	_00459_DS_
                                           _00781_DS_:
002aa8   d040     bra     0x2b2a           	BRA	_00461_DS_
                                           _00446_DS_:
002aaa   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	850; meter_logger.c	if (fsk_proto.data_len == 8) {
002aac   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002aae   0a08     xorlw   0x8              	XORLW	0x08
002ab0   e103     bnz     0x2ab8           	BNZ	_00448_DS_
                                           ;	.line	851; meter_logger.c	fsk_proto.state = IDLE;
002ab2   0e01     movlw   0x1              	MOVLW	0x01
002ab4   0105     movlb   0x5              	BANKSEL	_fsk_proto
002ab6   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           _00448_DS_:
                                           ;	.line	854; meter_logger.c	DEBUG_PIN = 0;
002ab8   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	856; meter_logger.c	break;
002aba   d037     bra     0x2b2a           	BRA	_00461_DS_
                                           _00449_DS_:
                                           ;	.line	858; meter_logger.c	send_fsk_low();
002abc   ec7d     call    0x18fa, 0        	CALL	_send_fsk_low
002abe   f00c
                                           ;	.line	859; meter_logger.c	fsk_proto.state = START_BIT_SENT;
002ac0   0e03     movlw   0x3              	MOVLW	0x03
002ac2   0105     movlb   0x5              	BANKSEL	_fsk_proto
002ac4   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	861; meter_logger.c	DEBUG_PIN = 1;
002ac6   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
                                           ;	.line	863; meter_logger.c	break;
002ac8   d030     bra     0x2b2a           	BRA	_00461_DS_
                                           _00450_DS_:
                                           ;	.line	865; meter_logger.c	if (fsk_proto.data_len--) {
002aca   c50d     movff   0x50d, 0         	MOVFF	(_fsk_proto + 13), r0x00
002acc   f000
002ace   0400     decf    0, 0, 0          	DECF	r0x00, W
002ad0   6e01     movwf   0x1, 0           	MOVWF	r0x01
002ad2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002ad4   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
002ad6   6f0d     movwf   0xd, 0x1         	MOVWF	(_fsk_proto + 13), B
002ad8   5000     movf    0, 0, 0          	MOVF	r0x00, W
002ada   e015     bz      0x2b06           	BZ	_00455_DS_
                                           ;	.line	866; meter_logger.c	if (fsk_proto.data & (0x80 >> fsk_proto.data_len)) {
002adc   0e80     movlw   0x80             	MOVLW	0x80
002ade   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002ae0   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002ae2   e005     bz      0x2aee           	BZ	_00784_DS_
002ae4   6ce8     negf    0xe8, 0          	NEGF	WREG
002ae6   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00785_DS_:
002ae8   3200     rrcf    0, 0x1, 0        	RRCF	r0x00, F
002aea   0f01     addlw   0x1              	ADDLW	0x01
002aec   e3fd     bnc     0x2ae8           	BNC	_00785_DS_
                                           _00784_DS_:
002aee   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 12)
002af0   510c     movf    0xc, 0, 0x1      	MOVF	(_fsk_proto + 12), W, B
002af2   1600     andwf   0, 0x1, 0        	ANDWF	r0x00, F
002af4   5000     movf    0, 0, 0          	MOVF	r0x00, W
002af6   e004     bz      0x2b00           	BZ	_00452_DS_
                                           ;	.line	867; meter_logger.c	send_fsk_high();
002af8   ec9d     call    0xd3a, 0         	CALL	_send_fsk_high
002afa   f006
                                           ;	.line	869; meter_logger.c	DEBUG_PIN = 0;
002afc   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
002afe   d003     bra     0x2b06           	BRA	_00455_DS_
                                           _00452_DS_:
                                           ;	.line	873; meter_logger.c	send_fsk_low();
002b00   ec7d     call    0x18fa, 0        	CALL	_send_fsk_low
002b02   f00c
                                           ;	.line	875; meter_logger.c	DEBUG_PIN = 1;
002b04   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
                                           _00455_DS_:
002b06   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 13)
                                           ;	.line	879; meter_logger.c	if (fsk_proto.data_len == 0) {
002b08   510d     movf    0xd, 0, 0x1      	MOVF	(_fsk_proto + 13), W, B
002b0a   e10f     bnz     0x2b2a           	BNZ	_00461_DS_
                                           ;	.line	880; meter_logger.c	fsk_proto.state = DATA_SENT;
002b0c   0e05     movlw   0x5              	MOVLW	0x05
                                           ; removed redundant BANKSEL
002b0e   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	882; meter_logger.c	break;
002b10   d00c     bra     0x2b2a           	BRA	_00461_DS_
                                           _00458_DS_:
                                           ;	.line	884; meter_logger.c	send_fsk_high();
002b12   ec9d     call    0xd3a, 0         	CALL	_send_fsk_high
002b14   f006
                                           ;	.line	885; meter_logger.c	fsk_proto.state = STOP_BIT_SENT;
002b16   0e0a     movlw   0xa              	MOVLW	0x0a
002b18   0105     movlb   0x5              	BANKSEL	_fsk_proto
002b1a   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	887; meter_logger.c	DEBUG_PIN = 0;
002b1c   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           ;	.line	889; meter_logger.c	break;
002b1e   d005     bra     0x2b2a           	BRA	_00461_DS_
                                           _00459_DS_:
                                           ;	.line	891; meter_logger.c	send_fsk_high();
002b20   ec9d     call    0xd3a, 0         	CALL	_send_fsk_high
002b22   f006
002b24   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	892; meter_logger.c	fsk_proto.state = INIT_STATE;
002b26   6b00     clrf    0, 0x1           	CLRF	_fsk_proto, B
                                           ;	.line	894; meter_logger.c	DEBUG_PIN = 0;
002b28   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           _00461_DS_:
                                           ;	.line	901; meter_logger.c	INTCONbits.TMR0IF = 0;
002b2a   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           _00463_DS_:
                                           ;	.line	904; meter_logger.c	if (PIR2bits.CMIF && PIE2bits.CMIE) {
002b2c   aca1     btfss   0xa1, 0x6, 0     	BTFSS	_PIR2bits, 6
002b2e   d076     bra     0x2c1c           	BRA	_00482_DS_
002b30   aca0     btfss   0xa0, 0x6, 0     	BTFSS	_PIE2bits, 6
002b32   d074     bra     0x2c1c           	BRA	_00482_DS_
                                           ;	.line	906; meter_logger.c	if (CMCONbits.C1OUT) {		// rising edge
002b34   acb4     btfss   0xb4, 0x6, 0     	BTFSS	_CMCONbits, 6
002b36   d070     bra     0x2c18           	BRA	_00477_DS_
                                           ;	.line	907; meter_logger.c	timer_0 = (unsigned int)(TMR0L) | ((unsigned int)(TMR0H) << 8);
002b38   cfd6     movff   0xfd6, 0         	MOVFF	_TMR0L, r0x00
002b3a   f000
002b3c   6a01     clrf    0x1, 0           	CLRF	r0x01
002b3e   cfd7     movff   0xfd7, 0x2       	MOVFF	_TMR0H, r0x02
002b40   f002
002b42   6a03     clrf    0x3, 0           	CLRF	r0x03
002b44   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002b46   6e05     movwf   0x5, 0           	MOVWF	r0x05
002b48   6a04     clrf    0x4, 0           	CLRF	r0x04
002b4a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002b4c   1000     iorwf   0, 0, 0          	IORWF	r0x00, W
002b4e   0105     movlb   0x5              	BANKSEL	_timer_0
002b50   6f46     movwf   0x46, 0x1        	MOVWF	_timer_0, B
002b52   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002b54   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
                                           ; removed redundant BANKSEL
002b56   6f47     movwf   0x47, 0x1        	MOVWF	(_timer_0 + 1), B
                                           ;	.line	912; meter_logger.c	DEBUG_PIN = 1;
002b58   8481     bsf     0x81, 0x2, 0     	BSF	_PORTBbits, 2
002b5a   0105     movlb   0x5              	BANKSEL	_last_timer_0
                                           ;	.line	914; meter_logger.c	fsk_proto.diff = timer_0 - last_timer_0;
002b5c   514a     movf    0x4a, 0, 0x1     	MOVF	_last_timer_0, W, B
002b5e   0105     movlb   0x5              	BANKSEL	_timer_0
002b60   5d46     subwf   0x46, 0, 0x1     	SUBWF	_timer_0, W, B
002b62   6e00     movwf   0, 0             	MOVWF	r0x00
002b64   0105     movlb   0x5              	BANKSEL	(_last_timer_0 + 1)
002b66   514b     movf    0x4b, 0, 0x1     	MOVF	(_last_timer_0 + 1), W, B
002b68   0105     movlb   0x5              	BANKSEL	(_timer_0 + 1)
002b6a   5947     subwfb  0x47, 0, 0x1     	SUBWFB	(_timer_0 + 1), W, B
002b6c   6e01     movwf   0x1, 0           	MOVWF	r0x01
002b6e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b70   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
002b72   6f01     movwf   0x1, 0x1         	MOVWF	(_fsk_proto + 1), B
002b74   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002b76   6f02     movwf   0x2, 0x1         	MOVWF	(_fsk_proto + 2), B
                                           ;	.line	915; meter_logger.c	last_timer_0 = timer_0;
002b78   c546     movff   0x546, 0x54a     	MOVFF	_timer_0, _last_timer_0
002b7a   f54a
002b7c   c547     movff   0x547, 0x54b     	MOVFF	(_timer_0 + 1), (_last_timer_0 + 1)
002b7e   f54b
                                           ;	.line	917; meter_logger.c	if ((fsk_proto.diff > 340) && (fsk_proto.diff < 476)) {
002b80   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
002b82   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
002b84   e102     bnz     0x2b8a           	BNZ	_00787_DS_
002b86   0e55     movlw   0x55             	MOVLW	0x55
                                           ; removed redundant BANKSEL
002b88   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00787_DS_:
002b8a   e330     bnc     0x2bec           	BNC	_00473_DS_
002b8c   0e01     movlw   0x1              	MOVLW	0x01
002b8e   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 2)
002b90   5d02     subwf   0x2, 0, 0x1      	SUBWF	(_fsk_proto + 2), W, B
002b92   e102     bnz     0x2b98           	BNZ	_00788_DS_
002b94   0edc     movlw   0xdc             	MOVLW	0xdc
                                           ; removed redundant BANKSEL
002b96   5d01     subwf   0x1, 0, 0x1      	SUBWF	(_fsk_proto + 1), W, B
                                           _00788_DS_:
002b98   e229     bc      0x2bec           	BC	_00473_DS_
002b9a   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
                                           ;	.line	918; meter_logger.c	fsk_proto.low_count += fsk_proto.diff;
002b9c   5101     movf    0x1, 0, 0x1      	MOVF	(_fsk_proto + 1), W, B
                                           ; removed redundant BANKSEL
002b9e   2505     addwf   0x5, 0, 0x1      	ADDWF	(_fsk_proto + 5), W, B
002ba0   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002ba2   5102     movf    0x2, 0, 0x1      	MOVF	(_fsk_proto + 2), W, B
                                           ; removed redundant BANKSEL
002ba4   2106     addwfc  0x6, 0, 0x1      	ADDWFC	(_fsk_proto + 6), W, B
002ba6   6e01     movwf   0x1, 0           	MOVWF	r0x01
002ba8   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002baa   6f05     movwf   0x5, 0x1         	MOVWF	(_fsk_proto + 5), B
002bac   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002bae   6f06     movwf   0x6, 0x1         	MOVWF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	919; meter_logger.c	if (fsk_proto.state == START_BIT_WAIT) {
002bb0   5100     movf    0, 0, 0x1        	MOVF	_fsk_proto, W, B
002bb2   0a02     xorlw   0x2              	XORLW	0x02
002bb4   e132     bnz     0x2c1a           	BNZ	_00478_DS_
                                           ;	.line	920; meter_logger.c	if (fsk_proto.low_count >= 800) {								// start bit received
002bb6   0e03     movlw   0x3              	MOVLW	0x03
002bb8   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 6)
002bba   5d06     subwf   0x6, 0, 0x1      	SUBWF	(_fsk_proto + 6), W, B
002bbc   e102     bnz     0x2bc2           	BNZ	_00791_DS_
002bbe   0e20     movlw   0x20             	MOVLW	0x20
                                           ; removed redundant BANKSEL
002bc0   5d05     subwf   0x5, 0, 0x1      	SUBWF	(_fsk_proto + 5), W, B
                                           _00791_DS_:
002bc2   e32b     bnc     0x2c1a           	BNC	_00478_DS_
002bc4   0105     movlb   0x5              	BANKSEL	(_timer0_reload + 1)
                                           ;	.line	922; meter_logger.c	TMR0H = (unsigned char)(timer0_reload >> 8);
002bc6   5149     movf    0x49, 0, 0x1     	MOVF	(_timer0_reload + 1), W, B
002bc8   6e00     movwf   0, 0             	MOVWF	r0x00
002bca   6a01     clrf    0x1, 0           	CLRF	r0x01
002bcc   5000     movf    0, 0, 0          	MOVF	r0x00, W
002bce   6ed7     movwf   0xd7, 0          	MOVWF	_TMR0H
                                           ; removed redundant BANKSEL
                                           ;	.line	923; meter_logger.c	TMR0L = (unsigned char)timer0_reload;
002bd0   5148     movf    0x48, 0, 0x1     	MOVF	_timer0_reload, W, B
002bd2   6ed6     movwf   0xd6, 0          	MOVWF	_TMR0L
002bd4   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 5)
                                           ;	.line	924; meter_logger.c	fsk_proto.low_count = 0;
002bd6   6b05     clrf    0x5, 0x1         	CLRF	(_fsk_proto + 5), B
                                           ; removed redundant BANKSEL
002bd8   6b06     clrf    0x6, 0x1         	CLRF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	925; meter_logger.c	fsk_proto.high_count = 0;
002bda   6b07     clrf    0x7, 0x1         	CLRF	(_fsk_proto + 7), B
                                           ; removed redundant BANKSEL
002bdc   6b08     clrf    0x8, 0x1         	CLRF	(_fsk_proto + 8), B
                                           ; removed redundant BANKSEL
                                           ;	.line	927; meter_logger.c	fsk_proto.data_len = 0;
002bde   6b0d     clrf    0xd, 0x1         	CLRF	(_fsk_proto + 13), B
                                           ; removed redundant BANKSEL
                                           ;	.line	928; meter_logger.c	fsk_proto.data = 0;
002be0   6b0c     clrf    0xc, 0x1         	CLRF	(_fsk_proto + 12), B
                                           ;	.line	929; meter_logger.c	fsk_proto.state = DATA_WAIT;
002be2   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
002be4   6f00     movwf   0, 0x1           	MOVWF	_fsk_proto, B
                                           ;	.line	930; meter_logger.c	INTCONbits.TMR0IF = 0;		// clear flag so it dont enter isr now
002be6   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
                                           ;	.line	931; meter_logger.c	INTCONbits.TMR0IE = 1;		// Enable TMR0 Interrupt
002be8   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
002bea   d017     bra     0x2c1a           	BRA	_00478_DS_
                                           _00473_DS_:
002bec   0105     movlb   0x5              	BANKSEL	_fsk_proto
                                           ;	.line	937; meter_logger.c	if (fsk_proto.state == START_BIT_WAIT) {
002bee   5100     movf    0, 0, 0x1        	MOVF	_fsk_proto, W, B
002bf0   0a02     xorlw   0x2              	XORLW	0x02
002bf2   e106     bnz     0x2c00           	BNZ	_00470_DS_
                                           _00793_DS_:
002bf4   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 5)
                                           ;	.line	938; meter_logger.c	fsk_proto.low_count = 0;
002bf6   6b05     clrf    0x5, 0x1         	CLRF	(_fsk_proto + 5), B
                                           ; removed redundant BANKSEL
002bf8   6b06     clrf    0x6, 0x1         	CLRF	(_fsk_proto + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	939; meter_logger.c	fsk_proto.high_count = 0;
002bfa   6b07     clrf    0x7, 0x1         	CLRF	(_fsk_proto + 7), B
                                           ; removed redundant BANKSEL
002bfc   6b08     clrf    0x8, 0x1         	CLRF	(_fsk_proto + 8), B
002bfe   d00d     bra     0x2c1a           	BRA	_00478_DS_
                                           _00470_DS_:
002c00   0105     movlb   0x5              	BANKSEL	(_fsk_proto + 1)
                                           ;	.line	942; meter_logger.c	fsk_proto.high_count += fsk_proto.diff;
002c02   5101     movf    0x1, 0, 0x1      	MOVF	(_fsk_proto + 1), W, B
                                           ; removed redundant BANKSEL
002c04   2507     addwf   0x7, 0, 0x1      	ADDWF	(_fsk_proto + 7), W, B
002c06   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002c08   5102     movf    0x2, 0, 0x1      	MOVF	(_fsk_proto + 2), W, B
                                           ; removed redundant BANKSEL
002c0a   2108     addwfc  0x8, 0, 0x1      	ADDWFC	(_fsk_proto + 8), W, B
002c0c   6e01     movwf   0x1, 0           	MOVWF	r0x01
002c0e   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002c10   6f07     movwf   0x7, 0x1         	MOVWF	(_fsk_proto + 7), B
002c12   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002c14   6f08     movwf   0x8, 0x1         	MOVWF	(_fsk_proto + 8), B
002c16   d001     bra     0x2c1a           	BRA	_00478_DS_
                                           _00477_DS_:
                                           ;	.line	948; meter_logger.c	DEBUG_PIN = 0;
002c18   9481     bcf     0x81, 0x2, 0     	BCF	_PORTBbits, 2
                                           _00478_DS_:
                                           ;	.line	952; meter_logger.c	PIR2bits.CMIF = 0;
002c1a   9ca1     bcf     0xa1, 0x6, 0     	BCF	_PIR2bits, 6
                                           _00482_DS_:
002c1c   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002c1e   f005
002c20   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002c22   f004
002c24   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002c26   f003
002c28   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002c2a   f002
002c2c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002c2e   f001
002c30   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002c32   f000
002c34   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002c36   ffd9
002c38   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
002c3a   fffb
002c3c   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
002c3e   fffa
002c40   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
002c42   ffea
002c44   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
002c46   ffe9
002c48   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
002c4a   fff4
002c4c   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
002c4e   fff3
002c50   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002c52   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
002c54   ffe0
002c56   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
002c58   ffd8
002c5a   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           ___str_0:
002c5c   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x67, 0x65
002c5e   654d     cpfsgt  0x4d, 0x1        
002c60   6574     cpfsgt  0x74, 0x1        
002c62   4c72     dcfsnz  0x72, 0, 0       
002c64   676f     tstfsz  0x6f, 0x1        
002c66   6567     cpfsgt  0x67, 0x1        
002c68   2e72     decfsz  0x72, 0x1, 0     	DB	0x72, 0x2e, 0x2e, 0x2e, 0x20, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x20
002c6a   2e2e     decfsz  0x2e, 0x1, 0     
002c6c   7320     btg     0x20, 0x1, 0x1   
002c6e   7265     btg     0x65, 0x1, 0     
002c70   6169     cpfslt  0x69, 0x1        
002c72   206c     addwfc  0x6c, 0, 0       
002c74   6f77     movwf   0x77, 0x1        	DB	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x0a, 0x0d, 0x00
002c76   6b72     clrf    0x72, 0x1        
002c78   6e69     movwf   0x69, 0          
002c7a   0a67     xorlw   0x67             
002c7c   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_1:
002c7e   7250     btg     0x50, 0x1, 0     	DB	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x3a, 0x20, 0x70
002c80   636f     cpfseq  0x6f, 0x1        
002c82   7365     btg     0x65, 0x1, 0x1   
002c84   6f73     movwf   0x73, 0x1        
002c86   3a72     swapf   0x72, 0x1, 0     
002c88   7020     btg     0x20, 0, 0       
002c8a   6369     cpfseq  0x69, 0x1        	DB	0x69, 0x63, 0x31, 0x38, 0x66, 0x32, 0x35, 0x35, 0x30, 0x0a, 0x0d, 0x00
002c8c   3831     swapf   0x31, 0, 0       
002c8e   3266     rrcf    0x66, 0x1, 0     
002c90   3535     rlcf    0x35, 0, 0x1     
002c92   0a30     xorlw   0x30             
002c94   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_2:
002c96   7250     btg     0x50, 0x1, 0     	DB	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x3a, 0x20, 0x70
002c98   636f     cpfseq  0x6f, 0x1        
002c9a   7365     btg     0x65, 0x1, 0x1   
002c9c   6f73     movwf   0x73, 0x1        
002c9e   3a72     swapf   0x72, 0x1, 0     
002ca0   7020     btg     0x20, 0, 0       
002ca2   6369     cpfseq  0x69, 0x1        	DB	0x69, 0x63, 0x31, 0x38, 0x66, 0x32, 0x35, 0x35, 0x33, 0x0a, 0x0d, 0x00
002ca4   3831     swapf   0x31, 0, 0       
002ca6   3266     rrcf    0x66, 0x1, 0     
002ca8   3535     rlcf    0x35, 0, 0x1     
002caa   0a33     xorlw   0x33             
002cac   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_3:
002cae   7250     btg     0x50, 0x1, 0     	DB	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x3a, 0x20, 0x75
002cb0   636f     cpfseq  0x6f, 0x1        
002cb2   7365     btg     0x65, 0x1, 0x1   
002cb4   6f73     movwf   0x73, 0x1        
002cb6   3a72     swapf   0x72, 0x1, 0     
002cb8   7520     btg     0x20, 0x2, 0x1   
002cba   736e     btg     0x6e, 0x1, 0x1   	DB	0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x2c, 0x20
002cbc   7075     btg     0x75, 0, 0       
002cbe   6f70     movwf   0x70, 0x1        
002cc0   7472     btg     0x72, 0x2, 0     
002cc2   6465     cpfsgt  0x65, 0          
002cc4   202c     addwfc  0x2c, 0, 0       
002cc6   6564     cpfsgt  0x64, 0x1        	DB	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x69, 0x64, 0x3a, 0x20, 0x30
002cc8   6976     setf    0x76, 0x1        
002cca   6563     cpfsgt  0x63, 0x1        
002ccc   6920     setf    0x20, 0x1        
002cce   3a64     swapf   0x64, 0x1, 0     
002cd0   3020     rrcf    0x20, 0, 0       
002cd2   2578     addwf   0x78, 0, 0x1     	DB	0x78, 0x25, 0x30, 0x34, 0x78, 0x0a, 0x0d, 0x00
002cd4   3430     rlcf    0x30, 0, 0       
002cd6   0a78     xorlw   0x78             
002cd8   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_4:
002cda   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x70, 0x72, 0x69, 0x6e
002cdc   7270     btg     0x70, 0x1, 0     
002cde   7365     btg     0x65, 0x1, 0x1   
002ce0   2073     addwfc  0x73, 0, 0       
002ce2   7270     btg     0x70, 0x1, 0     
002ce4   6e69     movwf   0x69, 0          
002ce6   2074     addwfc  0x74, 0, 0       	DB	0x74, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x0a, 0x0d
002ce8   6e6f     movwf   0x6f, 0          
002cea   7420     btg     0x20, 0x2, 0     
002cec   7365     btg     0x65, 0x1, 0x1   
002cee   6f74     movwf   0x74, 0x1        
002cf0   0d0a     mullw   0xa              
002cf2   0000     nop                      	DB	0x00
                                           ; ; Starting pCode block
                                           ___str_5:
002cf4   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x64, 0x6f, 0x6e, 0x65, 0x20, 0x72, 0x65, 0x63, 0x65, 0x69
002cf6   6f64     movwf   0x64, 0x1        
002cf8   656e     cpfsgt  0x6e, 0x1        
002cfa   7220     btg     0x20, 0x1, 0     
002cfc   6365     cpfseq  0x65, 0x1        
002cfe   6965     setf    0x65, 0x1        
002d00   6976     setf    0x76, 0x1        	DB	0x76, 0x69, 0x6e, 0x67, 0x20, 0x2d, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x69
002d02   676e     tstfsz  0x6e, 0x1        
002d04   2d20     decfsz  0x20, 0, 0x1     
002d06   7320     btg     0x20, 0x1, 0x1   
002d08   6e65     movwf   0x65, 0          
002d0a   6964     setf    0x64, 0x1        
002d0c   676e     tstfsz  0x6e, 0x1        	DB	0x6e, 0x67, 0x20, 0x76, 0x69, 0x61, 0x20, 0x73, 0x65, 0x72, 0x69, 0x61
002d0e   7620     btg     0x20, 0x3, 0     
002d10   6169     cpfslt  0x69, 0x1        
002d12   7320     btg     0x20, 0x1, 0x1   
002d14   7265     btg     0x65, 0x1, 0     
002d16   6169     cpfslt  0x69, 0x1        
002d18   2f6c     decfsz  0x6c, 0x1, 0x1   	DB	0x6c, 0x2f, 0x66, 0x73, 0x6b, 0x0a, 0x0d, 0x00
002d1a   7366     btg     0x66, 0x1, 0x1   
002d1c   0a6b     xorlw   0x6b             
002d1e   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_6:
002d20   6425     cpfsgt  0x25, 0          	DB	0x25, 0x64, 0x20, 0x00
002d22   0020     dw      0x20             
                                           ; ; Starting pCode block
                                           ___str_7:
002d24   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6f
002d26   6177     cpfslt  0x77, 0x1        
002d28   7469     btg     0x69, 0x2, 0     
002d2a   6e69     movwf   0x69, 0          
002d2c   2067     addwfc  0x67, 0, 0       
002d2e   6f66     movwf   0x66, 0x1        
002d30   2072     addwfc  0x72, 0, 0       	DB	0x72, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e
002d32   656e     cpfsgt  0x6e, 0x1        
002d34   2077     addwfc  0x77, 0, 0       
002d36   6f63     movwf   0x63, 0x1        
002d38   6d6d     negf    0x6d, 0x1        
002d3a   6e61     movwf   0x61, 0          
002d3c   0a64     xorlw   0x64             	DB	0x64, 0x0a, 0x0d, 0x00
002d3e   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_8:
002d40   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x74, 0x65, 0x73, 0x74, 0x20
002d42   6365     cpfseq  0x65, 0x1        
002d44   6f68     movwf   0x68, 0x1        
002d46   7420     btg     0x20, 0x2, 0     
002d48   7365     btg     0x65, 0x1, 0x1   
002d4a   2074     addwfc  0x74, 0, 0       
002d4c   202d     addwfc  0x2d, 0, 0       	DB	0x2d, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x20, 0x73, 0x6f, 0x6d, 0x65, 0x20
002d4e   6573     cpfsgt  0x73, 0x1        
002d50   646e     cpfsgt  0x6e, 0          
002d52   7320     btg     0x20, 0x1, 0x1   
002d54   6d6f     negf    0x6f, 0x1        
002d56   2065     addwfc  0x65, 0, 0       
002d58   6164     cpfslt  0x64, 0x1        	DB	0x64, 0x61, 0x74, 0x61, 0x0a, 0x0d, 0x00
002d5a   6174     cpfslt  0x74, 0x1        
002d5c   0d0a     mullw   0xa              
002d5e   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_9:
002d60   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002d62   616b     cpfslt  0x6b, 0x1        
002d64   736d     btg     0x6d, 0x1, 0x1   
002d66   7274     btg     0x74, 0x1, 0     
002d68   7075     btg     0x75, 0, 0       
002d6a   2d20     decfsz  0x20, 0, 0x1     
002d6c   7320     btg     0x20, 0x1, 0x1   	DB	0x20, 0x73, 0x65, 0x6e, 0x64, 0x20, 0x6b, 0x6d, 0x70, 0x20, 0x66, 0x72
002d6e   6e65     movwf   0x65, 0          
002d70   2064     addwfc  0x64, 0, 0       
002d72   6d6b     negf    0x6b, 0x1        
002d74   2070     addwfc  0x70, 0, 0       
002d76   7266     btg     0x66, 0x1, 0     
002d78   6d61     negf    0x61, 0x1        	DB	0x61, 0x6d, 0x65, 0x20, 0x64, 0x61, 0x74, 0x61, 0x0a, 0x0d, 0x00
002d7a   2065     addwfc  0x65, 0, 0       
002d7c   6164     cpfslt  0x64, 0x1        
002d7e   6174     cpfslt  0x74, 0x1        
002d80   0d0a     mullw   0xa              
002d82   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_10:
002d84   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002d86   616b     cpfslt  0x6b, 0x1        
002d88   736d     btg     0x6d, 0x1, 0x1   
002d8a   7274     btg     0x74, 0x1, 0     
002d8c   7075     btg     0x75, 0, 0       
002d8e   2d20     decfsz  0x20, 0, 0x1     
002d90   6b20     clrf    0x20, 0x1        	DB	0x20, 0x6b, 0x6d, 0x70, 0x20, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x20, 0x72
002d92   706d     btg     0x6d, 0, 0       
002d94   6620     tstfsz  0x20, 0          
002d96   6172     cpfslt  0x72, 0x1        
002d98   656d     cpfsgt  0x6d, 0x1        
002d9a   7220     btg     0x20, 0x1, 0     
002d9c   6365     cpfseq  0x65, 0x1        	DB	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x3a, 0x0a, 0x0d, 0x00
002d9e   6965     setf    0x65, 0x1        
002da0   6576     cpfsgt  0x76, 0x1        
002da2   3a64     swapf   0x64, 0x1, 0     
002da4   0d0a     mullw   0xa              
002da6   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_11:
002da8   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002daa   616b     cpfslt  0x6b, 0x1        
002dac   736d     btg     0x6d, 0x1, 0x1   
002dae   7274     btg     0x74, 0x1, 0     
002db0   7075     btg     0x75, 0, 0       
002db2   2d20     decfsz  0x20, 0, 0x1     
002db4   6b20     clrf    0x20, 0x1        	DB	0x20, 0x6b, 0x6d, 0x70, 0x20, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x20, 0x72
002db6   706d     btg     0x6d, 0, 0       
002db8   7220     btg     0x20, 0x1, 0     
002dba   7065     btg     0x65, 0, 0       
002dbc   796c     btg     0x6c, 0x4, 0x1   
002dbe   7220     btg     0x20, 0x1, 0     
002dc0   6365     cpfseq  0x65, 0x1        	DB	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x3a, 0x0a, 0x0d, 0x00
002dc2   6965     setf    0x65, 0x1        
002dc4   6576     cpfsgt  0x76, 0x1        
002dc6   3a64     swapf   0x64, 0x1, 0     
002dc8   0d0a     mullw   0xa              
002dca   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_12:
002dcc   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6e, 0x6f, 0x20, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x20, 0x66
002dce   6f6e     movwf   0x6e, 0x1        
002dd0   7220     btg     0x20, 0x1, 0     
002dd2   7065     btg     0x65, 0, 0       
002dd4   796c     btg     0x6c, 0x4, 0x1   
002dd6   6620     tstfsz  0x20, 0          
002dd8   6f72     movwf   0x72, 0x1        	DB	0x72, 0x6f, 0x6d, 0x20, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x0a, 0x0d, 0x00
002dda   206d     addwfc  0x6d, 0, 0       
002ddc   656d     cpfsgt  0x6d, 0x1        
002dde   6574     cpfsgt  0x74, 0x1        
002de0   0a72     xorlw   0x72             
002de2   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_13:
002de4   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002de6   616b     cpfslt  0x6b, 0x1        
002de8   736d     btg     0x6d, 0x1, 0x1   
002dea   7274     btg     0x74, 0x1, 0     
002dec   7075     btg     0x75, 0, 0       
002dee   2d20     decfsz  0x20, 0, 0x1     
002df0   7320     btg     0x20, 0x1, 0x1   	DB	0x20, 0x73, 0x65, 0x6e, 0x64, 0x20, 0x49, 0x45, 0x43, 0x36, 0x31, 0x31
002df2   6e65     movwf   0x65, 0          
002df4   2064     addwfc  0x64, 0, 0       
002df6   4549     rlncf   0x49, 0, 0x1     
002df8   3643     rlcf    0x43, 0x1, 0     
002dfa   3131     rrcf    0x31, 0, 0x1     
002dfc   3730     rlcf    0x30, 0x1, 0x1   	DB	0x30, 0x37, 0x20, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x20, 0x64, 0x61, 0x74
002dfe   6620     tstfsz  0x20, 0          
002e00   6172     cpfslt  0x72, 0x1        
002e02   656d     cpfsgt  0x6d, 0x1        
002e04   6420     cpfsgt  0x20, 0          
002e06   7461     btg     0x61, 0x2, 0     
002e08   0a61     xorlw   0x61             	DB	0x61, 0x0a, 0x0d, 0x00
002e0a   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_14:
002e0c   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002e0e   616b     cpfslt  0x6b, 0x1        
002e10   736d     btg     0x6d, 0x1, 0x1   
002e12   7274     btg     0x74, 0x1, 0     
002e14   7075     btg     0x75, 0, 0       
002e16   2d20     decfsz  0x20, 0, 0x1     
002e18   4920     infsnz  0x20, 0, 0x1     	DB	0x20, 0x49, 0x45, 0x43, 0x36, 0x31, 0x31, 0x30, 0x37, 0x20, 0x66, 0x72
002e1a   4345     rrncf   0x45, 0x1, 0x1   
002e1c   3136     rrcf    0x36, 0, 0x1     
002e1e   3031     rrcf    0x31, 0, 0       
002e20   2037     addwfc  0x37, 0, 0       
002e22   7266     btg     0x66, 0x1, 0     
002e24   6d61     negf    0x61, 0x1        	DB	0x61, 0x6d, 0x65, 0x20, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64
002e26   2065     addwfc  0x65, 0, 0       
002e28   6572     cpfsgt  0x72, 0x1        
002e2a   6563     cpfsgt  0x63, 0x1        
002e2c   7669     btg     0x69, 0x3, 0     
002e2e   6465     cpfsgt  0x65, 0          
002e30   0a3a     xorlw   0x3a             	DB	0x3a, 0x0a, 0x0d, 0x00
002e32   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_15:
002e34   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x73, 0x74, 0x72, 0x75, 0x70, 0x20, 0x2d
002e36   616b     cpfslt  0x6b, 0x1        
002e38   736d     btg     0x6d, 0x1, 0x1   
002e3a   7274     btg     0x74, 0x1, 0     
002e3c   7075     btg     0x75, 0, 0       
002e3e   2d20     decfsz  0x20, 0, 0x1     
002e40   4920     infsnz  0x20, 0, 0x1     	DB	0x20, 0x49, 0x45, 0x43, 0x36, 0x31, 0x31, 0x30, 0x37, 0x20, 0x72, 0x65
002e42   4345     rrncf   0x45, 0x1, 0x1   
002e44   3136     rrcf    0x36, 0, 0x1     
002e46   3031     rrcf    0x31, 0, 0       
002e48   2037     addwfc  0x37, 0, 0       
002e4a   6572     cpfsgt  0x72, 0x1        
002e4c   6c70     negf    0x70, 0          	DB	0x70, 0x6c, 0x79, 0x20, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64
002e4e   2079     addwfc  0x79, 0, 0       
002e50   6572     cpfsgt  0x72, 0x1        
002e52   6563     cpfsgt  0x63, 0x1        
002e54   7669     btg     0x69, 0x3, 0     
002e56   6465     cpfsgt  0x65, 0          
002e58   0a3a     xorlw   0x3a             	DB	0x3a, 0x0a, 0x0d, 0x00
002e5a   000d     tblwt   *+               
                                           ; ; Starting pCode block
                                           ___str_16:
002e5c   6142     cpfslt  0x42, 0x1        	DB	0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x3a, 0x20, 0x25, 0x64, 0x6d
002e5e   7474     btg     0x74, 0x2, 0     
002e60   7265     btg     0x65, 0x1, 0     
002e62   3a79     swapf   0x79, 0x1, 0     
002e64   2520     addwf   0x20, 0, 0x1     
002e66   6d64     negf    0x64, 0x1        
002e68   0a56     xorlw   0x56             	DB	0x56, 0x0a, 0x0d, 0x00
002e6a   000d     tblwt   *+               
                                           
                                           
                                           ; Statistics:
                                           ; code size:	15624 (0x3d08) bytes (11.92%)
                                           ;           	 7812 (0x1e84) words
                                           ; udata size:	 1198 (0x04ae) bytes (66.85%)
                                           ; access size:	   14 (0x000e) bytes
                                           
                                           
                                           	end
